<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Swift Daily Trending</title>
    <description>Daily Trending of Swift in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:39:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>exelban/stats</title>
      <link>https://github.com/exelban/stats</link>
      <description>&lt;p&gt;macOS system monitor in your menu bar&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stats&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/exelban/stats/releases&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/exelban/stats/releases&quot;&gt;&lt;img src=&quot;https://github.com/exelban/stats/raw/master/Stats/Supporting%20Files/Assets.xcassets/AppIcon.appiconset/icon_256x256.png&quot; width=&quot;120&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/exelban/stats/releases&quot;&gt;&lt;img src=&quot;https://serhiy.s3.eu-central-1.amazonaws.com/Github_repo/stats/menus%3Fv2.3.2.png?v1&quot; alt=&quot;Stats&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/exelban/stats/releases&quot;&gt;&lt;img src=&quot;https://serhiy.s3.eu-central-1.amazonaws.com/Github_repo/stats/popups%3Fv2.3.2.png?v3&quot; alt=&quot;Stats&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;macOS system monitor in your menu bar&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;You can download the latest version &lt;a href=&quot;https://github.com/exelban/stats/releases/latest/download/Stats.dmg&quot;&gt;here&lt;/a&gt;. This will download a file called &lt;code&gt;Stats.dmg&lt;/code&gt;. Open it and move the app to the application folder.&lt;/p&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;To install it using Homebrew, open the Terminal app and type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install stats
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Legacy version&lt;/h3&gt; 
&lt;p&gt;Legacy version for older systems could be found &lt;a href=&quot;https://mac-stats.com/downloads&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Stats is supported on the released macOS version starting from macOS 10.15 (Catalina).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Stats is an application that allows you to monitor your macOS system.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU utilization&lt;/li&gt; 
 &lt;li&gt;GPU utilization&lt;/li&gt; 
 &lt;li&gt;Memory usage&lt;/li&gt; 
 &lt;li&gt;Disk utilization&lt;/li&gt; 
 &lt;li&gt;Network usage&lt;/li&gt; 
 &lt;li&gt;Battery level&lt;/li&gt; 
 &lt;li&gt;Fan&#39;s control (not maintained)&lt;/li&gt; 
 &lt;li&gt;Sensors information (Temperature/Voltage/Power)&lt;/li&gt; 
 &lt;li&gt;Bluetooth devices&lt;/li&gt; 
 &lt;li&gt;Multiple time zone clock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;h3&gt;How do you change the order of the menu bar icons?&lt;/h3&gt; 
&lt;p&gt;macOS decides the order of the menu bar items not &lt;code&gt;Stats&lt;/code&gt; - it may change after the first reboot after installing Stats.&lt;/p&gt; 
&lt;p&gt;To change the order of any menu bar icon - macOS Mojave (version 10.14) and up.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Hold down ⌘ (command key).&lt;/li&gt; 
 &lt;li&gt;Drag the icon to the desired position on the menu bar.&lt;/li&gt; 
 &lt;li&gt;Release ⌘ (command key)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;How to reduce energy impact or CPU usage of Stats?&lt;/h3&gt; 
&lt;p&gt;Stats tries to be efficient as it&#39;s possible. But reading some data periodically is not a cheap task. Each module has its own &quot;price&quot;. So, if you want to reduce energy impact from the Stats you need to disable some Stats modules. The most inefficient modules are Sensors and Bluetooth. Disabling these modules could reduce CPU usage and power efficiency by up to 50% in some cases.&lt;/p&gt; 
&lt;h3&gt;Fan control&lt;/h3&gt; 
&lt;p&gt;Fan control is in legacy mode. It does not receive any updates or fixes. It&#39;s not dropped from the app just because in the old Macs it works pretty acceptable. I&#39;m open to accepting fixed or improvements (via PR) for this feature in case someone would like to help with that. But have no option and time to provide support for this feature.&lt;/p&gt; 
&lt;h3&gt;Sensors show incorrect CPU/GPU core count&lt;/h3&gt; 
&lt;p&gt;CPU/GPU sensors are simply thermal zones (sensors) on the CPU/GPU. They have no relation to the number of cores or specific cores. For example, a CPU is typically divided into two clusters: efficiency and performance. Each cluster contains multiple temperature sensors, and Stats simply displays these sensors. However, &quot;CPU Efficient Core 1&quot; does not represent the temperature of a single efficient core—it only indicates one of the temperature sensors within the efficiency core cluster. Additionally, with each new SoC, Apple changes the sensor keys. As a result, it takes time to determine which SMC values correspond to the appropriate sensors. If anyone knows how to accurately match the sensors for Apple Silicon, please contact me.&lt;/p&gt; 
&lt;h3&gt;App crash – what to do?&lt;/h3&gt; 
&lt;p&gt;First, ensure that you are using the latest version of Stats. There is a high chance that a fix preventing the crash has already been released. If you are already running the latest version, check the open issues. Only if none of the existing issues address your problem should you open a new issue.&lt;/p&gt; 
&lt;h3&gt;Why my issue was closed without any response?&lt;/h3&gt; 
&lt;p&gt;Most probably because it&#39;s a duplicated issue and there is an answer to the question, report, or proposition. Please use a search by closed issues to get an answer. So, if your issue was closed without any response, most probably it already has a response.&lt;/p&gt; 
&lt;h3&gt;External API&lt;/h3&gt; 
&lt;p&gt;Stats uses some external APIs, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://api.mac-stats.com&quot;&gt;https://api.mac-stats.com&lt;/a&gt; – For update checks and retrieving the public IP address&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://api.github.com&quot;&gt;https://api.github.com&lt;/a&gt; – Fallback for update checks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both of these APIs are used to check for updates. Additionally, an external request is required to obtain the public IP address. I do not want to use any third-party providers for retrieving the public IP address, so I use my own server for this purpose.&lt;/p&gt; 
&lt;p&gt;If you have concerns about these requests, you have a few options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;propose a PR that allows these features to work without an external server&lt;/li&gt; 
 &lt;li&gt;block both of these servers using any network filtering app (if you&#39;re reading this, you&#39;re likely using something like Little Snitch, so you can easily do this). In this case do not expect to receive any updates or see your public IP in the network module.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported languages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;English&lt;/li&gt; 
 &lt;li&gt;Polski&lt;/li&gt; 
 &lt;li&gt;Українська&lt;/li&gt; 
 &lt;li&gt;Русский&lt;/li&gt; 
 &lt;li&gt;中文 (简体) (thanks to &lt;a href=&quot;https://github.com/chenguokai&quot;&gt;chenguokai&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tai-Zhou&quot;&gt;Tai-Zhou&lt;/a&gt;, and &lt;a href=&quot;https://github.com/Jerry23011&quot;&gt;Jerry&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Türkçe (thanks to &lt;a href=&quot;https://github.com/yusufozgul&quot;&gt;yusufozgul&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;한국어 (thanks to &lt;a href=&quot;https://github.com/escapeanaemia&quot;&gt;escapeanaemia&lt;/a&gt; and &lt;a href=&quot;https://github.com/iamhslee&quot;&gt;iamhslee&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;German (thanks to &lt;a href=&quot;https://github.com/natterstefan&quot;&gt;natterstefan&lt;/a&gt; and &lt;a href=&quot;https://github.com/aneitel&quot;&gt;aneitel&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;中文 (繁體) (thanks to &lt;a href=&quot;https://github.com/iamch15542&quot;&gt;iamch15542&lt;/a&gt; and &lt;a href=&quot;https://github.com/jrthsr700tmax&quot;&gt;jrthsr700tmax&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Spanish (thanks to &lt;a href=&quot;https://github.com/jcconca&quot;&gt;jcconca&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Vietnamese (thanks to &lt;a href=&quot;https://github.com/xuandung38&quot;&gt;HXD.VN&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;French (thanks to &lt;a href=&quot;https://github.com/RomainLt&quot;&gt;RomainLt&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Italian (thanks to &lt;a href=&quot;https://github.com/gmcinalli&quot;&gt;gmcinalli&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Portuguese (Brazil) (thanks to &lt;a href=&quot;https://github.com/marcelochaves95&quot;&gt;marcelochaves95&lt;/a&gt; and &lt;a href=&quot;https://github.com/pedroserigatto&quot;&gt;pedroserigatto&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Norwegian Bokmål (thanks to &lt;a href=&quot;https://github.com/rubjo&quot;&gt;rubjo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;日本語 (thanks to &lt;a href=&quot;https://github.com/treastrain&quot;&gt;treastrain&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Portuguese (Portugal) (thanks to &lt;a href=&quot;https://github.com/AdamModus&quot;&gt;AdamModus&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Czech (thanks to &lt;a href=&quot;https://github.com/mpl75&quot;&gt;mpl75&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Magyar (thanks to &lt;a href=&quot;https://github.com/moriczr&quot;&gt;moriczr&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Bulgarian (thanks to &lt;a href=&quot;https://github.com/zbrox&quot;&gt;zbrox&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Romanian (thanks to &lt;a href=&quot;https://github.com/razluta&quot;&gt;razluta&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Dutch (thanks to &lt;a href=&quot;https://github.com/ngohungphuc&quot;&gt;ngohungphuc&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Hrvatski (thanks to &lt;a href=&quot;https://github.com/milotype&quot;&gt;milotype&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Danish (thanks to &lt;a href=&quot;https://github.com/casperes1996&quot;&gt;casperes1996&lt;/a&gt; and &lt;a href=&quot;https://github.com/aleksanderbl29&quot;&gt;aleksanderbl29&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Catalan (thanks to &lt;a href=&quot;https://github.com/davidalonso&quot;&gt;davidalonso&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Indonesian (thanks to &lt;a href=&quot;https://github.com/yooody&quot;&gt;yooody&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Hebrew (thanks to &lt;a href=&quot;https://github.com/BadSugar&quot;&gt;BadSugar&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Slovenian (thanks to &lt;a href=&quot;https://github.com/zigapovhe&quot;&gt;zigapovhe&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Greek (thanks to &lt;a href=&quot;https://github.com/sudoxcess&quot;&gt;sudoxcess&lt;/a&gt; and &lt;a href=&quot;https://github.com/vaionicle&quot;&gt;vaionicle&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Persian (thanks to &lt;a href=&quot;https://github.com/ShawnAlisson&quot;&gt;ShawnAlisson&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Slovenský (thanks to &lt;a href=&quot;https://github.com/martinbernat&quot;&gt;martinbernat&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Thai (thanks to &lt;a href=&quot;https://github.com/apiphoomchu&quot;&gt;apiphoomchu&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Estonian (thanks to &lt;a href=&quot;https://github.com/postylem&quot;&gt;postylem&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Hindi (thanks to &lt;a href=&quot;https://github.com/patiljignesh&quot;&gt;patiljignesh&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Finnish (thanks to &lt;a href=&quot;https://github.com/eightscrow&quot;&gt;eightscrow&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can help by adding a new language or improving the existing translation.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/exelban/stats/raw/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AppHouseKitchen/AlDente-Battery_Care_and_Monitoring</title>
      <link>https://github.com/AppHouseKitchen/AlDente-Battery_Care_and_Monitoring</link>
      <description>&lt;p&gt;Menubar Tool to set Charge Limits and Prolong Battery Lifespan&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/AppHouseKitchen/AlDente-Battery_Care_and_Monitoring/master/AlDente/Assets.xcassets/AppIcon.appiconset/512pt_Mac_1x.png&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt; 
 &lt;h1&gt;AlDente - Battery Care &amp;amp; Monitoring&lt;/h1&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;MacOS menu bar tool to limit maximum charging percentage and improve battery lifespan&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Don&#39;t overcook your battery! Keep it fresh and chewy with AlDente.&lt;/h4&gt; 
&lt;h2&gt;Why do I need this?&lt;/h2&gt; 
&lt;p&gt;Li-Ion batteries (like the one in your MacBook) last the longest when operating between 20 and 80 percent. Keeping your battery at 100% at all times can shorten the lifespan of your MacBook significantly. More information can be found at &lt;a href=&quot;https://batteryuniversity.com/article/bu-415-how-to-charge-and-when-to-charge&quot;&gt;Battery University&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What’s AlDente Pro?&lt;/h2&gt; 
&lt;p&gt;AlDente Pro is our paid version of AlDente. It has many more features such as Heat Protection, Sailing Mode, Top Up, Calibration Mode,... It offers a better design and has live status icons. If you are interested in getting the most out of your battery, check out our &lt;a href=&quot;https://apphousekitchen.com/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;AlDente Pro is now available on &lt;a href=&quot;https://apphousekitchen.com/pricing/&quot;&gt;Setapp&lt;/a&gt; too.&lt;/p&gt; 
&lt;h2&gt;Features of AlDente Free&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Charge Limiter allows you to set your maximum charging percentage between 20 and 100 percent. You can either set it by using the slide bar or by typing in the desired percentage in the field above and pressing Enter afterwards. Read more about the Charge Limiter feature in this article &lt;a href=&quot;https://apphousekitchen.com/feature-explanation-charge-limiter/&quot;&gt;&quot;Feature Explanation: Charge Limiter&quot;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Discharge - This feature allows your MacBook to run completely on Battery even if it is plugged in. Therefore, you can actively discharge your MacBook to a healthier percentage. Unfortunately, while Discharge is activated, clamshell mode is not supported due to technical limitations. Read more about the Discharge feature in this article &lt;a href=&quot;https://apphousekitchen.com/feature-explanation-discharge/&quot;&gt;&quot;Feature Explanation: Discharge&quot;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported MacBook Models (macOS 11 Big Sur or later required)&lt;/h2&gt; 
&lt;p&gt;Check out if your MacBook is supported on our &lt;a href=&quot;https://apphousekitchen.com/faq/&quot;&gt;FAQ page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;You can download the app from GitHub: &lt;a href=&quot;https://github.com/davidwernhart/AlDente/releases&quot;&gt;https://github.com/davidwernhart/AlDente/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation Guide&lt;/h2&gt; 
&lt;p&gt;An installation guide can be found on our website:&lt;a href=&quot;https://apphousekitchen.com/installation-guide/&quot;&gt;Installation Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;When the installation is finished, enter your desired max. charging percentage by clicking on the AlDente icon on your menu bar. Usually, the operating system will take a minute or two to register the changes, so be patient. You can check if it&#39;s working by setting the max. percentage to e.g., 80%. After a while, clicking on your battery icon will report &quot;Battery is not charging&quot; if you have more than ≈73% left, even though your charger is connected. Notice that in this state, your MacBook is still powered by the charger, but the battery is bypassed and not charging anymore.&lt;/p&gt; 
&lt;p&gt;IMPORTANT: Keeping your battery at a lower percentage, such as under 80%, for weeks without doing full cycles (100%-0%) can result in a disturbed battery calibration. When this happens, your MacBook might turn off with 40-50% left, or your battery capacity will drop significantly. However, this is only due to a disturbed battery calibration and not because of a faulty or degraded battery. To avoid this issue, we recommend doing at least one full cycle (0%-100%) every two weeks. Even if your battery calibration gets disturbed, doing 4+ full cycles will recalibrate your battery, and the capacity will go up again.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Most questions are already answered on our &lt;a href=&quot;https://apphousekitchen.com/faq/&quot;&gt;FAQ page&lt;/a&gt; or on our &lt;a href=&quot;https://apphousekitchen.com/blog/&quot;&gt;blog&lt;/a&gt;. Check them out!&lt;/li&gt; 
 &lt;li&gt;E-mail support is only available for AlDente Pro customers. Check out our &lt;a href=&quot;https://apphousekitchen.com/support/&quot;&gt;support page&lt;/a&gt; if you want to contact us.&lt;/li&gt; 
 &lt;li&gt;Due to limited resources, we are not able to provide support to AlDente Free users or here on GitHub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other tools used in this project:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/beltex/SMCKit&quot;&gt;https://github.com/beltex/SMCKit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/LaunchAtLogin&quot;&gt;https://github.com/sindresorhus/LaunchAtLogin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreyvit/create-dmg&quot;&gt;https://github.com/andreyvit/create-dmg&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Closed‑Source Notice&lt;/h2&gt; 
&lt;p&gt;This project is no longer open source. Although the GitHub repository contains legacy code and archived releases, the current version of the software is proprietary and closed‑source.&lt;/p&gt; 
&lt;h2&gt;Disclaimer:&lt;/h2&gt; 
&lt;p&gt;I do not take any responsibility for any sort of damage as a result of using this tool! Although this had no negative side effects for me and thousands of others, AlDente still taps into some very low-level system functions that are not meant to be tampered with. Use it at your own risk!&lt;/p&gt; 
&lt;p&gt;Copyright(c) 2021 AppHouseKitchen&lt;/p&gt; 
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>altstoreio/AltStore</title>
      <link>https://github.com/altstoreio/AltStore</link>
      <description>&lt;p&gt;AltStore is an alternative app store for non-jailbroken iOS devices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AltStore&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;AltStore is an alternative app store for non-jailbroken iOS devices.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://swift.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/swift-5.0-orange.svg?sanitize=true&quot; alt=&quot;Swift Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true&quot; alt=&quot;License: AGPL v3&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;AltStore is an iOS application that allows you to sideload other apps (.ipa files) onto your iOS device with just your Apple ID. AltStore resigns apps with your personal development certificate and sends them to a desktop app, AltServer, which installs the resigned apps back to your device using iTunes WiFi sync. To prevent apps from expiring, AltStore will also periodically refresh your apps in the background when on the same WiFi as AltServer.&lt;/p&gt; 
&lt;p&gt;For the initial release, I focused on building a solid foundation for distributing my own apps — primarily Delta, &lt;a href=&quot;https://github.com/rileytestut/Delta&quot;&gt;my all-in-one emulator for iOS&lt;/a&gt;. Now that Delta has been released, however, I&#39;m beginning work on adding support for &lt;em&gt;anyone&lt;/em&gt; to list and distribute their apps through AltStore (contributions welcome! 🙂).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Installs apps over WiFi using AltServer&lt;/li&gt; 
 &lt;li&gt;Resigns and installs any app with your Apple ID&lt;/li&gt; 
 &lt;li&gt;Refreshes apps periodically in the background to prevent them from expiring (when on same WiFi as AltServer)&lt;/li&gt; 
 &lt;li&gt;Handles app updates directly through AltStore&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Minimum Project Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Xcode 15&lt;/li&gt; 
 &lt;li&gt;Swift 5.9&lt;/li&gt; 
 &lt;li&gt;iOS 14.0 (AltStore)&lt;/li&gt; 
 &lt;li&gt;macOS 11.0 (AltServer)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Overview&lt;/h2&gt; 
&lt;h3&gt;AltStore&lt;/h3&gt; 
&lt;p&gt;AltStore is a just regular, sandboxed iOS application. The AltStore app target contains the vast majority of AltStore&#39;s functionality, including all the logic for downloading and updating apps through AltStore. AltStore makes heavy use of standard iOS frameworks and technologies most iOS developers are familiar with, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Core Data&lt;/li&gt; 
 &lt;li&gt;Storyboards/Nibs&lt;/li&gt; 
 &lt;li&gt;Auto Layout&lt;/li&gt; 
 &lt;li&gt;Background App Refresh&lt;/li&gt; 
 &lt;li&gt;Network.framework (new in iOS 12)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;AltServer&lt;/h3&gt; 
&lt;p&gt;AltServer is also just a regular, sandboxed macOS application. AltServer is significantly less complex than AltStore though, and for that reason consists of only a handful of files.&lt;/p&gt; 
&lt;h3&gt;AltKit&lt;/h3&gt; 
&lt;p&gt;AltKit is a shared framework that includes common code between AltStore and AltServer.&lt;/p&gt; 
&lt;h3&gt;AltSign&lt;/h3&gt; 
&lt;p&gt;AltSign is my internal framework used by both AltStore and AltServer to communicate with Apple&#39;s servers and resign apps. For more info, check the &lt;a href=&quot;https://github.com/rileytestut/altsign&quot;&gt;AltSign repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Roxas&lt;/h3&gt; 
&lt;p&gt;Roxas is my internal framework used across all my iOS projects, developed to simplify a variety of common tasks used in iOS development. For more info, check the &lt;a href=&quot;https://github.com/rileytestut/roxas&quot;&gt;Roxas repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Compilation Instructions&lt;/h2&gt; 
&lt;p&gt;AltStore and AltServer are both fairly straightforward to compile and run if you&#39;re already an iOS or macOS developer. To compile AltStore and/or AltServer:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository &lt;pre&gt;&lt;code&gt;git clone https://github.com/rileytestut/AltStore.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Update submodules: &lt;pre&gt;&lt;code&gt;cd AltStore 
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;AltStore.xcworkspace&lt;/code&gt; and select the AltStore project in the project navigator. On the &lt;code&gt;Signing &amp;amp; Capabilities&lt;/code&gt; tab, change the team from &lt;code&gt;Yvette Testut&lt;/code&gt; to your own account.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;(AltStore only)&lt;/strong&gt; Change the value for &lt;code&gt;ALTDeviceID&lt;/code&gt; in the Info.plist to your device&#39;s UDID. Normally, AltServer embeds the device&#39;s UDID in AltStore&#39;s Info.plist during installation. When running through Xcode you&#39;ll need to set the value yourself or else AltStore won&#39;t resign (or even install) apps for the proper device.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;(AltStore only)&lt;/strong&gt; Change the value for &lt;code&gt;ALTServerID&lt;/code&gt; in the Info.plist to your AltServer&#39;s serverID. This is embedded by AltServer during installation to help AltStore distinguish between multiple AltServers on the same network, and you can find this by using a Bonjour browsing application and noting the serverID advertised by AltServer. This isn&#39;t strictly necessary, because if AltStore can&#39;t find the AltServer with the embedded serverID it still falls back to trying another AltServer. However, this will help in cases where there are multiple AltServers running (plus the error messages are more helpful).&lt;/li&gt; 
 &lt;li&gt;Build + run app! 🎉&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Due to the licensing of some dependencies used by AltStore, I have no choice but to distribute AltStore under the &lt;strong&gt;AGPLv3 license&lt;/strong&gt;. That being said, my goal for AltStore is for it to be an open source project &lt;em&gt;anyone&lt;/em&gt; can use without restrictions, so I explicitly give permission for anyone to use, modify, and distribute all &lt;em&gt;my&lt;/em&gt; original code for this project in any form, with or without attribution, without fear of legal consequences (dependencies remain under their original licenses, however).&lt;/p&gt; 
&lt;h2&gt;Contact Me&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href=&quot;mailto:riley@altstore.io&quot;&gt;riley@altstore.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mastodon (Preferred): &lt;a href=&quot;https://mastodon.social/@rileytestut&quot;&gt;@rileytestut@mastodon.social&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter (Less active nowadays): &lt;a href=&quot;https://twitter.com/rileytestut&quot;&gt;@rileytestut&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Questions about AltStore in general? Make sure to read the FAQ at &lt;a href=&quot;https://altstore.io/faq/&quot;&gt;https://altstore.io/faq/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>swiftlang/swift-syntax</title>
      <link>https://github.com/swiftlang/swift-syntax</link>
      <description>&lt;p&gt;A set of Swift libraries for parsing, inspecting, generating, and transforming Swift source code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Syntax&lt;/h1&gt; 
&lt;p&gt;The swift-syntax package is a set of libraries that work on a source-accurate tree representation of Swift source code, called the SwiftSyntax tree. The SwiftSyntax tree forms the backbone of Swift’s macro system – the macro expansion nodes are represented as SwiftSyntax nodes and a macro generates a SwiftSyntax tree to be inserted into the source file.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can read SwiftSyntax’s documentation on &lt;a href=&quot;https://swiftpackageindex.com/swiftlang/swift-syntax/documentation&quot;&gt;swiftpackageindex.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A great way to interactively explore the SwiftSyntax tree of a source file is &lt;a href=&quot;https://swift-ast-explorer.com&quot;&gt;https://swift-ast-explorer.com&lt;/a&gt;, developed by &lt;a href=&quot;https://github.com/kishikawakatsumi&quot;&gt;@kishikawakatsumi&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A set of example usages of swift-syntax can be found in &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/Examples&quot;&gt;Examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;Releases of SwiftSyntax are aligned with corresponding language and tooling releases, for example the major version 509 of swift-syntax is aligned with Swift 5.9.&lt;/p&gt; 
&lt;p&gt;To depend on swift-syntax in a SwiftPM package, add the following to your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
  .package(url: &quot;https://github.com/swiftlang/swift-syntax.git&quot;, from: &quot;&amp;lt;#latest swift-syntax tag#&amp;gt;&quot;),
],
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add swift-syntax as a dependency of your Xcode project, go to the &lt;em&gt;Package Dependencies&lt;/em&gt; tab of your Xcode project, click the plus button and search for &lt;a href=&quot;https://github.com/swiftlang/swift-syntax.git&quot;&gt;https://github.com/swiftlang/swift-syntax.git&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Reporting Issues&lt;/h2&gt; 
&lt;p&gt;If you should hit any issues while using SwiftSyntax, we appreciate bug reports on &lt;a href=&quot;https://github.com/swiftlang/swift-syntax/issues&quot;&gt;GitHub Issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Start contributing to SwiftSyntax see &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/CONTRIBUTING.md&quot;&gt;this guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Bazel&lt;/h2&gt; 
&lt;p&gt;SwiftSyntax provides an experimental &lt;a href=&quot;https://bazel.build&quot;&gt;Bazel&lt;/a&gt; build configuration, maintained by Keith Smiley. To use it, you can pull the source archive from the relevant release tag into your &lt;code&gt;MODULE.bazel&lt;/code&gt; file (preferred and recommended) with &lt;code&gt;bazel_dep&lt;/code&gt;. Bzlmod support was added starting release of &lt;code&gt;509.0.0&lt;/code&gt; and above. All available versions can be found in the &lt;a href=&quot;https://registry.bazel.build/modules/swift-syntax&quot;&gt;Bazel Central Registry&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;bazel_dep(name = &quot;swift-syntax&quot;, version = &quot;600.0.1&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pull source archive with &lt;code&gt;WORKSPACE&lt;/code&gt; but note that it is preferred to use &lt;code&gt;MODULE.bazel&lt;/code&gt;. To use &lt;code&gt;WORKSPACE&lt;/code&gt; and swift-syntax, you can use &lt;code&gt;http_archive&lt;/code&gt; as such&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python3&quot;&gt;http_archive(
    name = &quot;SwiftSyntax&quot;,
    sha256 = &quot;f070fd44db9b33f430fd5b5d2700f1e2001c0028711859600e80cc975074fab0&quot;,
    strip_prefix = &quot;swift-syntax-509.1.0&quot;,
    url = &quot;https://github.com/apple/swift-syntax/archive/refs/tags/509.1.0.tar.gz&quot;,
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and depend on the libraries you need from the &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/BUILD.bazel&quot;&gt;&lt;code&gt;BUILD.bazel&lt;/code&gt;&lt;/a&gt; file. Each library also has an associated &lt;code&gt;Library_opt&lt;/code&gt; target (such as &lt;code&gt;SwiftSyntax_opt&lt;/code&gt;) which forces SwiftSyntax to always build with optimizations enabled. This may help local runtime performance at the cost of debuggability, and initial build time. Please tag any &lt;a href=&quot;https://github.com/swiftlang/swift-syntax/issues&quot;&gt;issues&lt;/a&gt; related to the Bazel configuration with the label &quot;Bazel&quot;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/swiftlang/swift-syntax/main/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apple/swift-distributed-tracing</title>
      <link>https://github.com/apple/swift-distributed-tracing</link>
      <description>&lt;p&gt;Instrumentation library for Swift server applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift Distributed Tracing&lt;/h1&gt; 
&lt;p&gt;A Distributed Tracing API for Swift.&lt;/p&gt; 
&lt;p&gt;This is a collection of Swift libraries enabling the instrumentation of server side applications using tools such as tracers. Our goal is to provide a common foundation that allows to freely choose how to instrument systems with minimal changes to your actual code.&lt;/p&gt; 
&lt;p&gt;While Swift Distributed Tracing allows building all kinds of &lt;em&gt;instruments&lt;/em&gt;, which can co-exist in applications transparently, its primary use is instrumenting multi-threaded and distributed systems with Distributed Traces.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;This project uses the context propagation type defined independently in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apple/swift-service-context&quot;&gt;swift-service-context&lt;/a&gt; -- &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-service-context/main/documentation/servicecontextmodule/servicecontext&quot;&gt;&lt;code&gt;ServiceContext&lt;/code&gt;&lt;/a&gt; (zero dependencies)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;This project is designed in a very open and extensible manner, such that various instrumentation and tracing systems can be built on top of it.&lt;/p&gt; 
&lt;p&gt;The purpose of the tracing package is to serve as common API for all tracer and instrumentation implementations. Thanks to this, libraries may only need to be instrumented once, and then be used with any tracer which conforms to this API.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;backends&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Tracing Backends&lt;/h3&gt; 
&lt;p&gt;Compatible &lt;code&gt;Tracer&lt;/code&gt; implementations:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Library&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-otel&quot;&gt;@swift-otel&lt;/a&gt; / &lt;a href=&quot;https://github.com/swift-otel/swift-otel&quot;&gt;Swift &lt;strong&gt;OTel&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;🟢 Updated for 1.0&lt;/td&gt; 
   &lt;td&gt;Exports spans to &lt;a href=&quot;https://opentelemetry.io/docs/collector/&quot;&gt;&lt;strong&gt;OpenTelemetry Collector&lt;/strong&gt;&lt;/a&gt;; Compatible with &lt;strong&gt;Zipkin&lt;/strong&gt;, &lt;strong&gt;X-Ray&lt;/strong&gt; &lt;strong&gt;Jaeger&lt;/strong&gt;, and more.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Your library?&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;...&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://forums.swift.org/c/server/43&quot;&gt;Get in touch!&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you know of any other library please send in a &lt;a href=&quot;https://github.com/apple/swift-distributed-tracing/compare&quot;&gt;pull request&lt;/a&gt; to add it to the list, thank you!&lt;/p&gt; 
&lt;h3&gt;Libraries &amp;amp; Frameworks&lt;/h3&gt; 
&lt;p&gt;As this API package was just released, no projects have yet fully adopted it, the following table for not serves as reference to prior work in adopting tracing work. As projects move to adopt tracing completely, the table will be used to track adoption phases of the various libraries.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;HTTP Servers/Frameworks&lt;/th&gt; 
   &lt;th&gt;Integrates&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hummingbird-project/hummingbird&quot;&gt;Hummingbird&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tracing&lt;/td&gt; 
   &lt;td&gt;🟢 Built-in support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vapor/vapor&quot;&gt;Vapor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tracing&lt;/td&gt; 
   &lt;td&gt;🟢 Built-in support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Your library?&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;...&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://forums.swift.org/c/server/43&quot;&gt;Get in touch!&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you know of any other library please send in a &lt;a href=&quot;https://github.com/apple/swift-distributed-tracing/compare&quot;&gt;pull request&lt;/a&gt; to add it to the list, thank you!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Reference Documentation&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;strong&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-distributed-tracing/documentation/tracing&quot;&gt;reference documentation&lt;/a&gt;&lt;/strong&gt; for detailed guides about adopting distributed tracing in your applications, libraries and frameworks.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ChartsOrg/Charts</title>
      <link>https://github.com/ChartsOrg/Charts</link>
      <description>&lt;p&gt;Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Version 4.0.0&lt;/strong&gt;, synced to &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart/commit/f6a398b&quot;&gt;MPAndroidChart #f6a398b&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/danielgindi/Charts/master/Assets/feature_graphic.png&quot; alt=&quot;alt tag&quot; /&gt; &lt;img src=&quot;https://img.shields.io/cocoapods/p/Charts.svg?sanitize=true&quot; alt=&quot;Supported Platforms&quot; /&gt; &lt;a href=&quot;https://github.com/danielgindi/Charts/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/danielgindi/Charts.svg?sanitize=true&quot; alt=&quot;Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://cocoapods.org/pods/charts&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/Charts.svg?sanitize=true&quot; alt=&quot;Latest pod release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot; alt=&quot;Carthage compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/danielgindi/Charts&quot;&gt;&lt;img src=&quot;https://travis-ci.org/danielgindi/Charts.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/danielgindi/Charts&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/danielgindi/Charts/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/danielgindi/Charts?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/danielgindi/Charts.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/danielgindi/Charts&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Just a heads up: Charts 5.0 has some breaking changes. Charts has now been renamed DGCharts to prevent conflicts with Apple&#39;s new Swift Charts. Please read &lt;a href=&quot;https://github.com/danielgindi/Charts/releases/tag/5.0.0&quot;&gt;the release/migration notes&lt;/a&gt;.&lt;/h3&gt; 
&lt;h3&gt;One more heads up: As Swift evolves, if you are not using the latest Swift compiler, you shouldn&#39;t check out the master branch. Instead, you should go to the release page and pick up whatever suits you.&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Xcode 14 / Swift 5.7 (master branch)&lt;/li&gt; 
 &lt;li&gt;iOS &amp;gt;= 12.0 (Use as an &lt;strong&gt;Embedded&lt;/strong&gt; Framework)&lt;/li&gt; 
 &lt;li&gt;tvOS &amp;gt;= 12.0&lt;/li&gt; 
 &lt;li&gt;macOS &amp;gt;= 10.13&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Okay so there&#39;s this beautiful library called &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot;&gt;MPAndroidChart&lt;/a&gt; by &lt;a href=&quot;https://www.linkedin.com/in/philippjahoda&quot;&gt;Philipp Jahoda&lt;/a&gt; which has become very popular amongst Android developers, but there was no decent solution to create charts for iOS.&lt;/p&gt; 
&lt;p&gt;I&#39;ve chosen to write it in &lt;code&gt;Swift&lt;/code&gt; as it can be highly optimized by the compiler, and can be used in both &lt;code&gt;Swift&lt;/code&gt; and &lt;code&gt;ObjC&lt;/code&gt; project. The demo project is written in &lt;code&gt;ObjC&lt;/code&gt; to demonstrate how it works.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;An amazing feature&lt;/strong&gt; of this library now, for Android, iOS, tvOS and macOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don&#39;t have to go around and re-invent the app to produce the same output with a different library. (And that&#39;s not even considering the fact that there&#39;s not really another good choice out there currently...)&lt;/p&gt; 
&lt;h2&gt;Having trouble running the demo?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ChartsDemo/ChartsDemo.xcodeproj&lt;/code&gt; is the demo project for iOS/tvOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ChartsDemo-OSX/ChartsDemo-OSX.xcodeproj&lt;/code&gt; is the demo project for macOS&lt;/li&gt; 
 &lt;li&gt;Make sure you are running a supported version of Xcode. 
  &lt;ul&gt; 
   &lt;li&gt;Usually it is specified here a few lines above.&lt;/li&gt; 
   &lt;li&gt;In most cases it will be the latest Xcode version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Make sure that your project supports Swift 5.0&lt;/li&gt; 
 &lt;li&gt;Optional: Run &lt;code&gt;carthage checkout&lt;/code&gt; in the project folder, to fetch dependencies (i.e testing dependencies). 
  &lt;ul&gt; 
   &lt;li&gt;If you don&#39;t have Carthage - you can get it &lt;a href=&quot;https://github.com/Carthage/Carthage/releases&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;In order to correctly compile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Drag the &lt;code&gt;DGCharts.xcodeproj&lt;/code&gt; to your project&lt;/li&gt; 
 &lt;li&gt;Go to your target&#39;s settings, hit the &quot;+&quot; under the &quot;Frameworks, Libraries, and Embedded Content&quot; section, and select the DGCharts.framework&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@import DGCharts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;When using Swift in an ObjC project:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;You need to import your Bridging Header. Usually it is &quot;&lt;em&gt;YourProject-Swift.h&lt;/em&gt;&quot;, so in ChartsDemo it&#39;s &quot;&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;&quot;. Do not try to actually include &quot;&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;&quot; in your project :-)&lt;/li&gt; 
 &lt;li&gt;(Xcode 8.1 and earlier) Under &quot;Build Options&quot;, mark &quot;Embedded Content Contains Swift Code&quot;&lt;/li&gt; 
 &lt;li&gt;(Xcode 8.2+) Under &quot;Build Options&quot;, mark &quot;Always Embed Swift Standard Libraries&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;When using &lt;a href=&quot;https://realm.io/&quot;&gt;Realm.io&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Note that the Realm framework is not linked with Charts - it is only there for &lt;em&gt;optional&lt;/em&gt; bindings. Which means that you need to have the framework in your project, and in a compatible version to whatever is compiled with DGCharts. We will do our best to always compile against the latest version.&lt;/li&gt; 
   &lt;li&gt;You&#39;ll need to add &lt;code&gt;ChartsRealm&lt;/code&gt; as a dependency too.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;3rd party tutorials&lt;/h2&gt; 
&lt;h4&gt;Video tutorials&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=mWhwe_tLNE8&amp;amp;list=PL_csAAO9PQ8bjzg-wxEff1Fr0Y5W1hrum&amp;amp;index=5&quot;&gt;Chart in Swift - Setting Up a Basic Line Chart Using iOS Charts(Alex Nagy)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/csd7pyfEXgw&quot;&gt;Charts Framework in SwiftUI - Bar Chart (Stewart Lynch)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Blog posts&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@skoli/using-realm-and-charts-with-swift-3-in-ios-10-40c42e3838c0#.2gyymwfh8&quot;&gt;Using Realm and Charts with Swift 3 in iOS 10 (Sami Korpela)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@OsianSmith/creating-a-line-chart-in-swift-3-and-ios-10-2f647c95392e&quot;&gt;Creating a Line Chart in Swift 3 and iOS 10 (Osian Smith)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/annalizhaz/ChartsForSwiftBasic&quot;&gt;Beginning Set-up and Example Using Charts with Swift 3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@HeyDaveTheDev/creating-a-radar-chart-in-swift-5791afcf92f0&quot;&gt;Creating a Radar Chart in Swift (David Piper)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@zzzzbh/plotting-in-ios-using-charts-framework-with-swiftui-222034a2bea6&quot;&gt;Plotting in IOS using Charts framework with SwiftUI (Evgeny Basisty)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@penny-huang/swift-setting-up-a-basic-bar-chart-using-ios-charts-afd6aad96ac&quot;&gt;Set Up a Basic Bar Chart Using iOS-Charts (Penny Huang)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/@penny-huang/swift-ios-charts-tutorial-highlight-selected-value-with-a-custom-marker-30ccbf92aa1b&quot;&gt;iOS-Charts Tutorial: Highlight Selected Value With a Custom Marker (Penny Huang)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://medium.com/better-programming/drawing-charts-in-ios-before-swiftui-9f95b8612607&quot;&gt;Drawing Charts in iOS Before SwiftUI (Gennady Stepanov)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want your tutorial to show here? Create a PR!&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h4&gt;Can&#39;t compile?&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please note the difference between installing a compiled framework from CocoaPods or Carthage, and copying the source code.&lt;/li&gt; 
 &lt;li&gt;Please read the &lt;strong&gt;Usage&lt;/strong&gt; section again.&lt;/li&gt; 
 &lt;li&gt;Search in the issues&lt;/li&gt; 
 &lt;li&gt;Try to politely ask in the issues section&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Other problems / feature requests&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search in the issues&lt;/li&gt; 
 &lt;li&gt;Try to politely ask in the issues section&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;CocoaPods Install&lt;/h2&gt; 
&lt;p&gt;Add &lt;code&gt;pod &#39;DGCharts&#39;&lt;/code&gt; to your Podfile. &quot;DGCharts&quot; is the name of the library.&lt;br /&gt; For &lt;a href=&quot;https://realm.io/&quot;&gt;Realm&lt;/a&gt; support, please add &lt;code&gt;pod &#39;ChartsRealm&#39;&lt;/code&gt; too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;del&gt;&lt;code&gt;pod &#39;ios-charts&#39;&lt;/code&gt;&lt;/del&gt; is not the correct library, and refers to a different project by someone else.&lt;/p&gt; 
&lt;h2&gt;Carthage Install&lt;/h2&gt; 
&lt;p&gt;DGCharts now include Carthage prebuilt binaries.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-carthage&quot;&gt;github &quot;danielgindi/Charts&quot; == 5.1.0
github &quot;danielgindi/Charts&quot; ~&amp;gt; 5.1.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to build the binaries for a new release, use &lt;code&gt;carthage build --no-skip-current &amp;amp;&amp;amp; carthage archive Charts&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Swift Package Manager Install&lt;/h2&gt; 
&lt;p&gt;Swift Package Manager&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
    .package(url: &quot;https://github.com/danielgindi/Charts.git&quot;, .upToNextMajor(from: &quot;5.1.0&quot;))
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3rd party bindings&lt;/h2&gt; 
&lt;p&gt;Xamarin (by @Flash3001): &lt;em&gt;iOS&lt;/em&gt; - &lt;a href=&quot;https://github.com/Flash3001/iOSCharts.Xamarin&quot;&gt;GitHub&lt;/a&gt;/&lt;a href=&quot;https://www.nuget.org/packages/iOSCharts/&quot;&gt;NuGet&lt;/a&gt;. &lt;em&gt;Android&lt;/em&gt; - &lt;a href=&quot;https://github.com/Flash3001/MPAndroidChart.Xamarin&quot;&gt;GitHub&lt;/a&gt;/&lt;a href=&quot;https://www.nuget.org/packages/MPAndroidChart/&quot;&gt;NuGet&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;p&gt;If you like what you see here, and want to support the work being done in this repository, you could:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute code, issues and pull requests&lt;/li&gt; 
 &lt;li&gt;Let people know this library exists (&lt;span&gt;🔥&lt;/span&gt; spread the word &lt;span&gt;🔥&lt;/span&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=68UL6Y8KUPS96&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; alt=&quot;Donate&quot; /&gt;&lt;/a&gt; (You can buy me a beer, or you can buy me dinner :-)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The author of &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot;&gt;MPAndroidChart&lt;/a&gt; is the reason that this library exists, and is accepting &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart#donations&quot;&gt;donations&lt;/a&gt; on his page. He deserves them!&lt;/p&gt; 
&lt;h2&gt;Questions &amp;amp; Issues&lt;/h2&gt; 
&lt;p&gt;If you are having questions or problems, you should:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you are using the latest version of the library. Check the &lt;a href=&quot;https://github.com/danielgindi/Charts/releases&quot;&gt;&lt;strong&gt;release-section&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Study the Android version&#39;s &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart/wiki&quot;&gt;&lt;strong&gt;Documentation-Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Search or open questions on &lt;a href=&quot;http://stackoverflow.com/questions/tagged/ios-charts&quot;&gt;&lt;strong&gt;stackoverflow&lt;/strong&gt;&lt;/a&gt; with the &lt;code&gt;ios-charts&lt;/code&gt; tag&lt;/li&gt; 
 &lt;li&gt;Search &lt;a href=&quot;https://github.com/danielgindi/Charts/issues&quot;&gt;&lt;strong&gt;known issues&lt;/strong&gt;&lt;/a&gt; for your problem (open and closed)&lt;/li&gt; 
 &lt;li&gt;Create new issues (please &lt;span&gt;🔥&lt;/span&gt; &lt;strong&gt;search known issues before&lt;/strong&gt; &lt;span&gt;🔥&lt;/span&gt;, do not create duplicate issues)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Core features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;8 different chart types&lt;/li&gt; 
 &lt;li&gt;Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)&lt;/li&gt; 
 &lt;li&gt;Dragging / Panning (with touch-gesture)&lt;/li&gt; 
 &lt;li&gt;Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)&lt;/li&gt; 
 &lt;li&gt;Dual (separate) Axes&lt;/li&gt; 
 &lt;li&gt;Customizable Axes (both x- and y-axis)&lt;/li&gt; 
 &lt;li&gt;Highlighting values (with customizable popup-views)&lt;/li&gt; 
 &lt;li&gt;Save chart to camera-roll / export to PNG/JPEG&lt;/li&gt; 
 &lt;li&gt;Predefined color templates&lt;/li&gt; 
 &lt;li&gt;Legends (generated automatically, customizable)&lt;/li&gt; 
 &lt;li&gt;Animations (build up animations, on both x- and y-axis)&lt;/li&gt; 
 &lt;li&gt;Limit lines (providing additional information, maximums, ...)&lt;/li&gt; 
 &lt;li&gt;Fully customizable (paints, typefaces, legends, colors, background, gestures, dashed lines, ...)&lt;/li&gt; 
 &lt;li&gt;Plotting data directly from &lt;a href=&quot;https://realm.io&quot;&gt;&lt;strong&gt;Realm.io&lt;/strong&gt;&lt;/a&gt; mobile database (&lt;a href=&quot;https://github.com/danielgindi/ChartsRealm&quot;&gt;here&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Chart types:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Screenshots are currently taken from the original repository, as they render exactly the same :-)&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt; &lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart4.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt; &lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart3.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (cubic lines)&lt;/strong&gt; &lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/cubiclinechart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LineChart (gradient fill)&lt;/strong&gt; &lt;img src=&quot;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/line_chart_gradient.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Combined-Chart (bar- and linechart in this case)&lt;/strong&gt; &lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;BarChart (with legend, simple design)&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_barchart3.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;BarChart (grouped DataSets)&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/groupedbarchart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Horizontal-BarChart&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;PieChart (with selection, ...)&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/simpledesign_piechart1.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ScatterChart&lt;/strong&gt; (with squares, triangles, circles, ... and more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/scatterchart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CandleStickChart&lt;/strong&gt; (for financial data)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/candlestickchart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;BubbleChart&lt;/strong&gt; (area covered by bubbles indicates the value)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RadarChart&lt;/strong&gt; (spider web chart)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/radarchart.png&quot; alt=&quot;alt tag&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Currently there&#39;s no need for documentation for the iOS/tvOS/macOS version, as the API is &lt;strong&gt;95% the same&lt;/strong&gt; as on Android.&lt;br /&gt; You can read the official &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot;&gt;MPAndroidChart&lt;/a&gt; documentation here: &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart/wiki&quot;&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or you can see the Charts Demo project in both Objective-C and Swift (&lt;a href=&quot;https://github.com/danielgindi/Charts/tree/master/ChartsDemo-iOS&quot;&gt;&lt;strong&gt;ChartsDemo-iOS&lt;/strong&gt;&lt;/a&gt;, as well as macOS &lt;a href=&quot;https://github.com/danielgindi/Charts/tree/master/ChartsDemo-macOS&quot;&gt;&lt;strong&gt;ChartsDemo-macOS&lt;/strong&gt;&lt;/a&gt;) and learn the how-tos from it.&lt;/p&gt; 
&lt;h1&gt;Special Thanks&lt;/h1&gt; 
&lt;p&gt;Goes to &lt;a href=&quot;https://github.com/liuxuan30&quot;&gt;@liuxuan30&lt;/a&gt;, &lt;a href=&quot;https://github.com/petester42&quot;&gt;@petester42&lt;/a&gt; and &lt;a href=&quot;https://github.com/AlBirdie&quot;&gt;@AlBirdie&lt;/a&gt; for new features, bugfixes, and lots and lots of involvement in our open-sourced community! You guys are a huge help to all of those coming here with questions and issues, and I couldn&#39;t respond to all of those without you.&lt;/p&gt; 
&lt;h3&gt;Our amazing sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://debricked.com/&quot;&gt;Debricked&lt;/a&gt;: Use open source securely&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://debricked.com/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4375169/73585544-25bfa800-44dd-11ea-9661-82519a125302.jpg&quot; alt=&quot;debricked&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Copyright 2016 Daniel Cohen Gindi &amp;amp; Philipp Jahoda&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apple/swift-openapi-generator</title>
      <link>https://github.com/apple/swift-openapi-generator</link>
      <description>&lt;p&gt;Generate Swift client and server code from an OpenAPI document.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swift OpenAPI Generator&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.swift.org/sswg/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/sswg-incubating-yellow.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-openapi-generator/documentation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docc-read_documentation-blue&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/apple/swift-openapi-generator/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/apple/swift-openapi-generator&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-openapi-generator&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fapple%2Fswift-openapi-generator%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Generate Swift client and server code from an OpenAPI document.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://openapis.org&quot;&gt;OpenAPI&lt;/a&gt; is a specification for documenting HTTP services. An OpenAPI document is written in either YAML or JSON, and can be read by tools to help automate workflows, such as generating the necessary code to send and receive HTTP requests.&lt;/p&gt; 
&lt;p&gt;Swift OpenAPI Generator is a Swift package plugin that can generate the ceremony code required to make API calls, or implement API servers.&lt;/p&gt; 
&lt;p&gt;The code is generated at build-time, so it&#39;s always in sync with the OpenAPI document and doesn&#39;t need to be committed to your source repository.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Works with OpenAPI Specification versions 3.0 and 3.1.&lt;/li&gt; 
 &lt;li&gt;Streaming request and response bodies enabling use cases such as JSON event streams, and large payloads without buffering.&lt;/li&gt; 
 &lt;li&gt;Support for JSON, multipart, URL-encoded form, base64, plain text, and raw bytes, represented as value types with type-safe properties.&lt;/li&gt; 
 &lt;li&gt;Client, server, and middleware abstractions, decoupling the generated code from the HTTP client library and web framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To see these features in action, check out the list of &lt;a href=&quot;https://github.com/apple/swift-openapi-generator/raw/main/Examples/README.md&quot;&gt;example projects&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Swift OpenAPI Generator can be used to generate API clients and server stubs.&lt;/p&gt; 
&lt;p&gt;Below you can see some example code, or you can follow one of the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-openapi-generator/tutorials/swift-openapi-generator&quot;&gt;step-by-step tutorials&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using a generated API client&lt;/h3&gt; 
&lt;p&gt;The generated &lt;code&gt;Client&lt;/code&gt; type provides a method for each HTTP operation defined in the OpenAPI document[^example-openapi-yaml] and can be used with any HTTP library that provides an implementation of &lt;code&gt;ClientTransport&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import OpenAPIURLSession
import Foundation

let client = Client(
    serverURL: URL(string: &quot;http://localhost:8080/api&quot;)!,
    transport: URLSessionTransport()
)
let response = try await client.getGreeting()
print(try response.ok.body.json.message)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using generated API server stubs&lt;/h3&gt; 
&lt;p&gt;To implement a server, define a type that conforms to the generated &lt;code&gt;APIProtocol&lt;/code&gt;, providing a method for each HTTP operation defined in the OpenAPI document[^example-openapi-yaml].&lt;/p&gt; 
&lt;p&gt;The server can be used with any web framework that provides an implementation of &lt;code&gt;ServerTransport&lt;/code&gt;, which allows you to register your API handlers with the HTTP server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import OpenAPIRuntime
import OpenAPIVapor
import Vapor

struct Handler: APIProtocol {
    func getGreeting(_ input: Operations.GetGreeting.Input) async throws -&amp;gt; Operations.GetGreeting.Output {
        let name = input.query.name ?? &quot;Stranger&quot;
        return .ok(.init(body: .json(.init(message: &quot;Hello, \(name)!&quot;))))
    }
}

@main struct HelloWorldVaporServer {
    static func main() async throws {
        let app = try await Application.make()
        let transport = VaporTransport(routesBuilder: app)
        let handler = Handler()
        try handler.registerHandlers(on: transport, serverURL: URL(string: &quot;/api&quot;)!)
        try await app.execute()
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Package ecosystem&lt;/h2&gt; 
&lt;p&gt;The Swift OpenAPI Generator project is split across multiple repositories to enable extensibility and minimize dependencies in your project.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Repository&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-openapi-generator&quot;&gt;apple/swift-openapi-generator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Swift package plugin and CLI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-openapi-runtime&quot;&gt;apple/swift-openapi-runtime&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Runtime library used by the generated code&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-openapi-urlsession&quot;&gt;apple/swift-openapi-urlsession&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ClientTransport&lt;/code&gt; using &lt;a href=&quot;https://developer.apple.com/documentation/foundation/urlsession&quot;&gt;URLSession&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server/swift-openapi-async-http-client&quot;&gt;swift-server/swift-openapi-async-http-client&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ClientTransport&lt;/code&gt; using &lt;a href=&quot;https://github.com/swift-server/async-http-client&quot;&gt;AsyncHTTPClient&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server/swift-openapi-vapor&quot;&gt;swift-server/swift-openapi-vapor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ServerTransport&lt;/code&gt; using &lt;a href=&quot;https://github.com/vapor/vapor&quot;&gt;Vapor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server/swift-openapi-hummingbird&quot;&gt;swift-server/swift-openapi-hummingbird&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ServerTransport&lt;/code&gt; using &lt;a href=&quot;https://github.com/hummingbird-project/hummingbird&quot;&gt;Hummingbird&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server/swift-openapi-lambda&quot;&gt;swift-server/swift-openapi-lambda&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ServerTransport&lt;/code&gt; using &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/welcome.html&quot;&gt;AWS Lambda&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Requirements and supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Generator versions&lt;/th&gt; 
   &lt;th&gt;Supported OpenAPI versions&lt;/th&gt; 
   &lt;th&gt;Minimum Swift version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;1.0.0&lt;/code&gt; ... &lt;code&gt;main&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;3.0, 3.1&lt;/td&gt; 
   &lt;td&gt;5.9&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-openapi-generator/documentation/swift-openapi-generator/supported-openapi-features&quot;&gt;Supported OpenAPI features&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Supported platforms and minimum versions&lt;/h3&gt; 
&lt;p&gt;The generator is used during development and is supported on macOS, Linux, and Windows.&lt;/p&gt; 
&lt;p&gt;The generated code, runtime library, and transports are supported on more platforms, listed below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;right&quot;&gt;Component&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;macOS&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Linux, Windows&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;iOS&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;tvOS&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;watchOS&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;visionOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;Generator plugin and CLI&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅ 10.15+&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✖️&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✖️&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✖️&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✖️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;Generated code and runtime library&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅ 10.15+&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅ 13+&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅ 13+&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅ 6+&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅ 1+&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] When using Visual Studio Code or other editors that rely on &lt;a href=&quot;https://github.com/swiftlang/sourcekit-lsp&quot;&gt;SourceKit-LSP&lt;/a&gt;, the editor may not correctly recognize generated code within the same module. As a workaround, consider creating a separate target for code generation and then importing it into your main module. For more details, see the discussion in &lt;a href=&quot;https://github.com/swiftlang/sourcekit-lsp/issues/665#issuecomment-2093169169&quot;&gt;swiftlang/sourcekit-lsp#665&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Documentation and example projects&lt;/h2&gt; 
&lt;p&gt;To get started, check out the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-openapi-generator/documentation&quot;&gt;documentation&lt;/a&gt;, which contains &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-openapi-generator/tutorials/swift-openapi-generator&quot;&gt;step-by-step tutorials&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also experiment with &lt;a href=&quot;https://github.com/apple/swift-openapi-generator/raw/main/Examples/README.md&quot;&gt;example projects&lt;/a&gt; that use Swift OpenAPI Generator and integrate with other packages in the ecosystem.&lt;/p&gt; 
&lt;p&gt;Or if you prefer to watch a video, check out &lt;a href=&quot;https://developer.apple.com/wwdc23/10171&quot;&gt;Meet Swift OpenAPI Generator&lt;/a&gt; from WWDC23.&lt;/p&gt; 
&lt;p&gt;[^example-openapi-yaml]: &lt;/p&gt;
&lt;details&gt;
 &lt;summary&gt;Example OpenAPI document (click to expand)&lt;/summary&gt;
 &lt;p&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;```yaml
openapi: &#39;3.1.0&#39;
info:
  title: GreetingService
  version: 1.0.0
servers:
  - url: https://example.com/api
    description: Example service deployment.
paths:
  /greet:
    get:
      operationId: getGreeting
      parameters:
        - name: name
          required: false
          in: query
          description: The name used in the returned greeting.
          schema:
            type: string
      responses:
        &#39;200&#39;:
          description: A success response with a greeting.
          content:
            application/json:
              schema:
                $ref: &#39;#/components/schemas/Greeting&#39;
components:
  schemas:
    Greeting:
      type: object
      description: A value with the greeting contents.
      properties:
        message:
          type: string
          description: The string representation of the greeting.
      required:
        - message
```
&amp;lt;/details&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>Alamofire/Alamofire</title>
      <link>https://github.com/Alamofire/Alamofire</link>
      <description>&lt;p&gt;Elegant HTTP Networking in Swift&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/AlamofireLogo.png&quot; alt=&quot;Alamofire: Elegant Networking in Swift&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://img.shields.io/badge/Swift-5.9_5.10_6.0-Orange?style=flat-square&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift-5.9_5.10_6.0-orange?style=flat-square&quot; alt=&quot;Swift&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_vision_OS_Linux_Windows_Android-Green?style=flat-square&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_visionOS_Linux_Windows_Android-yellowgreen?style=flat-square&quot; alt=&quot;Platforms&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://img.shields.io/cocoapods/v/Alamofire.svg&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/Alamofire.svg?style=flat-square&quot; alt=&quot;CocoaPods Compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat-square&quot; alt=&quot;Carthage Compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square&quot; alt=&quot;Swift Package Manager&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire/37&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Swift_Forums-Alamofire-orange?style=flat-square&quot; alt=&quot;Swift Forums&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#component-libraries&quot;&gt;Component Libraries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#migration-guides&quot;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#communication&quot;&gt;Communication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#using-alamofire&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#introduction&quot;&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#making-requests&quot;&gt;Making Requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-handling&quot;&gt;Response Handling&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-validation&quot;&gt;Response Validation&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#response-caching&quot;&gt;Response Caching&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#http-methods&quot;&gt;HTTP Methods&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md##request-parameters-and-parameter-encoders&quot;&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#http-headers&quot;&gt;HTTP Headers&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#authentication&quot;&gt;Authentication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#downloading-data-to-a-file&quot;&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#uploading-data-to-a-server&quot;&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#statistical-metrics&quot;&gt;Statistical Metrics&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Usage.md#curl-command-output&quot;&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md&quot;&gt;Advanced Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#session&quot;&gt;Session Manager&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#sessiondelegate&quot;&gt;Session Delegate&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#request&quot;&gt;Request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#routing-requests&quot;&gt;Routing Requests&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests-with-requestinterceptor&quot;&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#customizing-response-handlers&quot;&gt;Custom Response Handlers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Advanced Concurrency -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#using-alamofire-with-swift-concurrency&quot;&gt;Swift Concurrency&lt;/a&gt; and &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#using-alamofire-with-combine&quot;&gt;Combine&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#security&quot;&gt;Security&lt;/a&gt;, &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/AdvancedUsage.md#network-reachability&quot;&gt;Network Reachability&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#open-radars&quot;&gt;Open Radars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#donations&quot;&gt;Donations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Chainable Request / Response Methods&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Swift Concurrency Support Back to iOS 13, macOS 10.15, tvOS 13, and watchOS 6.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Combine Support&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; URL / JSON Parameter Encoding&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Download File using Request or Resume Data&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Authentication with &lt;code&gt;URLCredential&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; HTTP Response Validation&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Upload and Download Progress Closures with Progress&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; cURL Command Output&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Dynamically Adapt and Retry Requests&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; TLS Certificate and Public Key Pinning&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Network Reachability&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://alamofire.github.io/Alamofire&quot;&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Write Requests Fast!&lt;/h2&gt; 
&lt;p&gt;Alamofire&#39;s compact syntax and extensive feature set allow requests with powerful features like automatic retry to be written in just a few lines of code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Automatic String to URL conversion, Swift concurrency support, and automatic retry.
let response = await AF.request(&quot;https://httpbin.org/get&quot;, interceptor: .retryPolicy)
                       // Automatic HTTP Basic Auth.
                       .authenticate(username: &quot;user&quot;, password: &quot;pass&quot;)
                       // Caching customization.
                       .cacheResponse(using: .cache)
                       // Redirect customization.
                       .redirect(using: .follow)
                       // Validate response code and Content-Type.
                       .validate()
                       // Produce a cURL command for the request.
                       .cURLDescription { description in
                         print(description)
                       }
                       // Automatic Decodable support with background parsing.
                       .serializingDecodable(DecodableType.self)
                       // Await the full response with metrics and a parsed body.
                       .response
// Detailed response description for easy debugging.
debugPrint(response)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Component Libraries&lt;/h2&gt; 
&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href=&quot;https://github.com/Alamofire/Foundation&quot;&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/AlamofireImage&quot;&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache, and a priority-based image downloading system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/AlamofireNetworkActivityIndicator&quot;&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Minimum Swift Version&lt;/th&gt; 
   &lt;th&gt;Installation&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/td&gt; 
   &lt;td&gt;5.9 / Xcode 15.0&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#cocoapods&quot;&gt;CocoaPods&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#carthage&quot;&gt;Carthage&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#manually&quot;&gt;Manual&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fully Tested&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;Latest Only&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Building But Unsupported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;Latest Only&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Building But Unsupported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;Latest Only&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/#swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Building But Unsupported&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Known Issues on Linux and Windows&lt;/h4&gt; 
&lt;p&gt;Alamofire builds on Linux, Windows, and Android but there are missing features and many issues in the underlying &lt;code&gt;swift-corelibs-foundation&lt;/code&gt; that prevent full functionality and may cause crashes. These include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ServerTrustManager&lt;/code&gt; and associated certificate functionality is unavailable, so there is no certificate pinning and no client certificate support.&lt;/li&gt; 
 &lt;li&gt;Various methods of HTTP authentication may crash, including HTTP Basic and HTTP Digest. Crashes may occur if responses contain server challenges.&lt;/li&gt; 
 &lt;li&gt;Cache control through &lt;code&gt;CachedResponseHandler&lt;/code&gt; and associated APIs is unavailable, as the underlying delegate methods aren&#39;t called.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; are never gathered.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WebSocketRequest&lt;/code&gt; is not available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Due to these issues, Alamofire is unsupported on Linux, Windows, and Android. Please report any crashes to the &lt;a href=&quot;https://bugs.swift.org&quot;&gt;Swift bug reporter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Migration Guides&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%205.0%20Migration%20Guide.md&quot;&gt;Alamofire 5.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%204.0%20Migration%20Guide.md&quot;&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%203.0%20Migration%20Guide.md&quot;&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/Documentation/Alamofire%202.0%20Migration%20Guide.md&quot;&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/alamofire&quot;&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href=&quot;http://alamofire.github.io/Alamofire/&quot;&gt;our documentation&lt;/a&gt; or &lt;a href=&quot;https://developer.apple.com/documentation/foundation/url_loading_system&quot;&gt;Apple&#39;s documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt; 
 &lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire&quot;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you&#39;d like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire&quot;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you&#39;d like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href=&quot;https://forums.swift.org/c/related-projects/alamofire&quot;&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler.&lt;/p&gt; 
&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt; or the Package list in Xcode.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
    .package(url: &quot;https://github.com/Alamofire/Alamofire.git&quot;, .upToNextMajor(from: &quot;5.10.0&quot;))
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Normally you&#39;ll want to depend on the &lt;code&gt;Alamofire&lt;/code&gt; target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.product(name: &quot;Alamofire&quot;, package: &quot;Alamofire&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But if you want to force Alamofire to be dynamically linked (do not do this unless you&#39;re sure you need it), you can depend on the &lt;code&gt;AlamofireDynamic&lt;/code&gt; target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.product(name: &quot;AlamofireDynamic&quot;, package: &quot;Alamofire&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CocoaPods&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://cocoapods.org&quot;&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;pod &#39;Alamofire&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Carthage&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ogdl&quot;&gt;github &quot;Alamofire/Alamofire&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manually&lt;/h3&gt; 
&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt; 
&lt;h4&gt;Embedded Framework&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command &quot;if&quot; your project is not initialized as a git repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git init
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add Alamofire as a git &lt;a href=&quot;https://git-scm.com/docs/git-submodule&quot;&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application&#39;s Xcode project.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It should appear nested underneath your application&#39;s blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the &quot;Targets&quot; heading in the sidebar.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the tab bar at the top of that window, open the &quot;General&quot; panel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the &quot;Embedded Binaries&quot; section.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt;, or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;And that&#39;s it!&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before contributing to Alamofire, please read the instructions detailed in our &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Open Radars&lt;/h2&gt; 
&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openradar.me/radar?id=5517037090635776&quot;&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in the test case&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resolved Radars&lt;/h2&gt; 
&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.openradar.me/radar?id=5010235949318144&quot;&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage. 
  &lt;ul&gt; 
   &lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://openradar.appspot.com/radar?id=4942308441063424&quot;&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+ 
  &lt;ul&gt; 
   &lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FB7624529&lt;/code&gt; - &lt;code&gt;urlSession(_:task:didFinishCollecting:)&lt;/code&gt; never called on watchOS 
  &lt;ul&gt; 
   &lt;li&gt;(Resolved): Metrics now collected on watchOS 7+.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What&#39;s the origin of the name Alamofire?&lt;/h3&gt; 
&lt;p&gt;Alamofire is named after the &lt;a href=&quot;https://aggie-horticulture.tamu.edu/wildseed/alamofire.html&quot;&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Alamofire is owned and maintained by the &lt;a href=&quot;http://alamofire.org&quot;&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href=&quot;https://twitter.com/AlamofireSF&quot;&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt; 
&lt;h3&gt;Security Disclosure&lt;/h3&gt; 
&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href=&quot;mailto:security@alamofire.org&quot;&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/Alamofire/Foundation#members&quot;&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization. Registering will allow Foundation members to gain some legal protections and also allow us to put donations to use, tax-free. Sponsoring the ASF will enable us to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt; 
 &lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt; 
 &lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt; 
 &lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The community adoption of the ASF libraries has been amazing. We are greatly humbled by your enthusiasm around the projects and want to continue to do everything we can to move the needle forward. With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members. If you use any of our libraries for work, see if your employers would be interested in donating. Any amount you can donate, whether once or monthly, to help us reach our goal would be greatly appreciated.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/Alamofire&quot;&gt;Sponsor Alamofire&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Supporters&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://macstadium.com&quot;&gt;MacStadium&lt;/a&gt; provides Alamofire with a free, hosted Mac mini.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/MacStadiumLogo.png&quot; alt=&quot;Powered by MacStadium&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Alamofire is released under the MIT license. &lt;a href=&quot;https://github.com/Alamofire/Alamofire/raw/master/LICENSE&quot;&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apple/swift-nio</title>
      <link>https://github.com/apple/swift-nio</link>
      <description>&lt;p&gt;Event-driven network application framework for high performance protocol servers &amp; clients, non-blocking.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/swift-server/sswg/raw/main/process/incubation.md#graduated-level&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/sswg-graduated-green.svg?sanitize=true&quot; alt=&quot;sswg:graduated|104x20&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;SwiftNIO&lt;/h1&gt; 
&lt;p&gt;SwiftNIO is a cross-platform asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/p&gt; 
&lt;p&gt;It&#39;s like &lt;a href=&quot;https://netty.io&quot;&gt;Netty&lt;/a&gt;, but written for Swift.&lt;/p&gt; 
&lt;h3&gt;Repository organization&lt;/h3&gt; 
&lt;p&gt;The SwiftNIO project is split across multiple repositories:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Repository&lt;/th&gt; 
   &lt;th&gt;NIO 2&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio&quot;&gt;https://github.com/apple/swift-nio&lt;/a&gt; &lt;br /&gt; SwiftNIO core&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;from: &quot;2.0.0&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-ssl&quot;&gt;https://github.com/apple/swift-nio-ssl&lt;/a&gt; &lt;br /&gt; TLS (SSL) support&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;from: &quot;2.0.0&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-http2&quot;&gt;https://github.com/apple/swift-nio-http2&lt;/a&gt;&lt;br /&gt; HTTP/2 support&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;from: &quot;1.0.0&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-extras&quot;&gt;https://github.com/apple/swift-nio-extras&lt;/a&gt; &lt;br /&gt;useful additions around SwiftNIO&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;from: &quot;1.0.0&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-transport-services&quot;&gt;https://github.com/apple/swift-nio-transport-services&lt;/a&gt; &lt;br /&gt; first-class support for macOS, iOS, tvOS, and watchOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;from: &quot;1.0.0&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-ssh&quot;&gt;https://github.com/apple/swift-nio-ssh&lt;/a&gt; &lt;br /&gt; SSH support&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.upToNextMinor(from: &quot;0.2.0&quot;)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Within this repository we have a number of products that provide different functionality. This package contains the following products:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NIO&lt;/code&gt;. This is an umbrella module exporting &lt;code&gt;NIOCore&lt;/code&gt;, &lt;code&gt;NIOEmbedded&lt;/code&gt; and &lt;code&gt;NIOPosix&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOCore&lt;/code&gt;. This provides the core abstractions and types for using SwiftNIO (see &lt;a href=&quot;https://raw.githubusercontent.com/apple/swift-nio/main/#conceptual-overview&quot;&gt;&quot;Conceptual Overview&quot;&lt;/a&gt; for more details). Most NIO extension projects that provide things like new &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;s&lt;/a&gt; or new protocol implementations should only need to depend on &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOPosix&lt;/code&gt;. This provides the primary [&lt;code&gt;EventLoopGroup&lt;/code&gt;], &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;s&lt;/a&gt; for use on POSIX-based systems. This is our high performance core I/O layer. In general, this should only be imported by projects that plan to do some actual I/O, such as high-level protocol implementations or applications.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOEmbedded&lt;/code&gt;. This provides &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioembedded/embeddedchannel&quot;&gt;&lt;code&gt;EmbeddedChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioembedded/embeddedeventloop&quot;&gt;&lt;code&gt;EmbeddedEventLoop&lt;/code&gt;&lt;/a&gt;, implementations of the &lt;code&gt;NIOCore&lt;/code&gt; abstractions that provide fine-grained control over their execution. These are most often used for testing, but can also be used to drive protocol implementations in a way that is decoupled from networking altogether.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOConcurrencyHelpers&lt;/code&gt;. This provides a few low-level concurrency primitives that are used by NIO implementations, such as locks and atomics.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOFoundationCompat&lt;/code&gt;. This extends a number of NIO types for better interoperation with Foundation data types. If you are working with Foundation data types such as &lt;code&gt;Data&lt;/code&gt;, you should import this.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOTLS&lt;/code&gt;. This provides a few common abstraction types for working with multiple TLS implementations. Note that this doesn&#39;t provide TLS itself: please investigate &lt;a href=&quot;https://github.com/apple/swift-nio-ssl&quot;&gt;swift-nio-ssl&lt;/a&gt; and &lt;a href=&quot;https://github.com/apple/swift-nio-transport-services&quot;&gt;swift-nio-transport-services&lt;/a&gt; for concrete implementations.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOHTTP1&lt;/code&gt;. This provides a low-level HTTP/1.1 protocol implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOWebSocket&lt;/code&gt;. This provides a low-level WebSocket protocol implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOTestUtils&lt;/code&gt;. This provides a number of helpers for testing projects that use SwiftNIO.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NIOFileSystem&lt;/code&gt;. This provides &lt;code&gt;async&lt;/code&gt; APIs for interacting with the file system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Protocol Implementations&lt;/h3&gt; 
&lt;p&gt;Below you can find a list of a few protocol implementations that are done with SwiftNIO. This is a non-exhaustive list of protocols that are either part of the SwiftNIO project or are accepted into the &lt;a href=&quot;https://swift.org/server&quot;&gt;SSWG&lt;/a&gt;&#39;s incubation process. All of the libraries listed below do all of their I/O in a non-blocking fashion using SwiftNIO.&lt;/p&gt; 
&lt;h4&gt;Low-level protocol implementations&lt;/h4&gt; 
&lt;p&gt;Low-level protocol implementations are often a collection of &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s that implement a protocol but still require the user to have a good understanding of SwiftNIO. Often, low-level protocol implementations will then be wrapped in high-level libraries with a nicer, more user-friendly API.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Protocol&lt;/th&gt; 
   &lt;th&gt;Client&lt;br /&gt;(Sends requests)&lt;/th&gt; 
   &lt;th&gt;Server&lt;br /&gt;(Responds to requests)&lt;/th&gt; 
   &lt;th&gt;Repository&lt;/th&gt; 
   &lt;th&gt;Module&lt;/th&gt; 
   &lt;th&gt;Comment&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTP/1&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio&quot;&gt;apple/swift-nio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niohttp1&quot;&gt;&lt;code&gt;NIOHTTP1&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;official NIO project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTP/2&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-http2&quot;&gt;apple/swift-nio-http2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio-http2/documentation/niohttp2&quot;&gt;&lt;code&gt;NIOHTTP2&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;official NIO project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WebSocket&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio&quot;&gt;apple/swift-nio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niowebsocket&quot;&gt;&lt;code&gt;NIOWebSocket&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;official NIO project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TLS&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-ssl&quot;&gt;apple/swift-nio-ssl&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio-ssl/documentation/niossl&quot;&gt;&lt;code&gt;NIOSSL&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;official NIO project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SSH&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apple/swift-nio-ssh&quot;&gt;apple/swift-nio-ssh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio-ssh/documentation/niossh&quot;&gt;&lt;code&gt;NIOSSH&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;official NIO project&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;High-level implementations&lt;/h4&gt; 
&lt;p&gt;High-level implementations are usually libraries that come with an API that doesn&#39;t expose SwiftNIO&#39;s &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; and can therefore be used with very little (or no) SwiftNIO-specific knowledge. The implementations listed below do still do all of their I/O in SwiftNIO and integrate really well with the SwiftNIO ecosystem.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Protocol&lt;/th&gt; 
   &lt;th&gt;Client&lt;br /&gt;(Sends requests)&lt;/th&gt; 
   &lt;th&gt;Server&lt;br /&gt;(Responds to requests)&lt;/th&gt; 
   &lt;th&gt;Repository&lt;/th&gt; 
   &lt;th&gt;Module&lt;/th&gt; 
   &lt;th&gt;Comment&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTP&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server/async-http-client&quot;&gt;swift-server/async-http-client&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AsyncHTTPClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;SSWG community project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gRPC&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/grpc/grpc-swift&quot;&gt;grpc/grpc-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GRPC&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;also offers a low-level API; SSWG community project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APNS&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server-community/APNSwift&quot;&gt;swift-server-community/APNSwift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APNSwift&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;SSWG community project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PostgreSQL&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/vapor/postgres-nio&quot;&gt;vapor/postgres-nio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PostgresNIO&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;SSWG community project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Redis&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/swift-server/RediStack&quot;&gt;swift-server/RediStack&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;RediStack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;SSWG community project&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Supported Versions&lt;/h3&gt; 
&lt;h3&gt;SwiftNIO 2&lt;/h3&gt; 
&lt;p&gt;This is the current version of SwiftNIO and will be supported for the foreseeable future.&lt;/p&gt; 
&lt;h3&gt;Swift Versions&lt;/h3&gt; 
&lt;p&gt;We commit to support the most recently released Swift version and the last two minor releases before that unless this is impossible to do in one codebase. In addition checks are run against the latest beta release (if any) as well as the nightly Swift builds and the intent is that these should pass.&lt;/p&gt; 
&lt;p&gt;The minimum Swift version supported by SwiftNIO releases are detailed below:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;SwiftNIO&lt;/th&gt; 
   &lt;th&gt;Minimum Swift Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.0.0 ..&amp;lt; 2.30.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.30.0 ..&amp;lt; 2.40.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.40.0 ..&amp;lt; 2.43.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.43.0 ..&amp;lt; 2.51.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.5.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.51.0 ..&amp;lt; 2.60.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.60.0 ..&amp;lt; 2.65.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.65.0 ..&amp;lt; 2.76.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.76.0 ..&amp;lt; 2.83.0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2.83.0 ...&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;5.10&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;SwiftNIO 1&lt;/h3&gt; 
&lt;p&gt;SwiftNIO 1 is considered end of life - it is strongly recommended that you move to a newer version. The Core NIO team does not actively work on this version. No new features will be added to this version but PRs which fix bugs or security vulnerabilities will be accepted until the end of May 2022.&lt;/p&gt; 
&lt;p&gt;If you have a SwiftNIO 1 application or library that you would like to migrate to SwiftNIO 2, please check out the &lt;a href=&quot;https://raw.githubusercontent.com/apple/swift-nio/main/docs/migration-guide-NIO1-to-NIO2.md&quot;&gt;migration guide&lt;/a&gt; we prepared for you.&lt;/p&gt; 
&lt;p&gt;The latest released SwiftNIO 1 version&amp;nbsp;supports Swift 4.0, 4.1, 4.2, and 5.0.&lt;/p&gt; 
&lt;h3&gt;Supported Platforms&lt;/h3&gt; 
&lt;p&gt;SwiftNIO aims to support all of the platforms where Swift is supported. Currently, it is developed and tested on macOS and Linux, and is known to support the following operating system versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu 18.04+&lt;/li&gt; 
 &lt;li&gt;macOS 10.9+, iOS 7+; (macOS 10.14+, iOS 12+, tvOS 12+ or watchOS 6+ with &lt;a href=&quot;https://github.com/apple/swift-nio-transport-services&quot;&gt;swift-nio-transport-services&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;p&gt;SwiftNIO follows &lt;a href=&quot;https://semver.org/#semantic-versioning-200&quot;&gt;SemVer 2.0.0&lt;/a&gt; with a separate document declaring &lt;a href=&quot;https://raw.githubusercontent.com/apple/swift-nio/main/docs/public-api.md&quot;&gt;SwiftNIO&#39;s Public API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;What this means for you is that you should depend on SwiftNIO with a version range that covers everything from the minimum SwiftNIO version you require up to the next major version. In SwiftPM that can be easily done specifying for example &lt;code&gt;from: &quot;2.0.0&quot;&lt;/code&gt; meaning that you support SwiftNIO in every version starting from 2.0.0 up to (excluding) 3.0.0. SemVer and SwiftNIO&#39;s Public API guarantees should result in a working program without having to worry about testing every single version for compatibility.&lt;/p&gt; 
&lt;h2&gt;Conceptual Overview&lt;/h2&gt; 
&lt;p&gt;SwiftNIO is fundamentally a low-level tool for building high-performance networking applications in Swift. It particularly targets those use-cases where using a &quot;thread-per-connection&quot; model of concurrency is inefficient or untenable. This is a common limitation when building servers that use a large number of relatively low-utilization connections, such as HTTP servers.&lt;/p&gt; 
&lt;p&gt;To achieve its goals, SwiftNIO extensively uses &quot;non-blocking I/O&quot;: hence the name! Non-blocking I/O differs from the more common blocking I/O model because the application does not wait for data to be sent to or received from the network: instead, SwiftNIO asks for the kernel to notify it when I/O operations can be performed without waiting.&lt;/p&gt; 
&lt;p&gt;SwiftNIO does not aim to provide high-level solutions like, for example, web frameworks do. Instead, SwiftNIO is focused on providing the low-level building blocks for these higher-level applications. When it comes to building a web application, most users will not want to use SwiftNIO directly: instead, they&#39;ll want to use one of the many great web frameworks available in the Swift ecosystem. Those web frameworks, however, may choose to use SwiftNIO under the covers to provide their networking support.&lt;/p&gt; 
&lt;p&gt;The following sections will describe the low-level tools that SwiftNIO provides, and provide a quick overview of how to work with them. If you feel comfortable with these concepts, then you can skip right ahead to the other sections of this README.&lt;/p&gt; 
&lt;h3&gt;Basic Architecture&lt;/h3&gt; 
&lt;p&gt;The basic building blocks of SwiftNIO are the following 8 types of objects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopgroup&quot;&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt;, a protocol, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;, a protocol, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;, a protocol, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;, a protocol, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;, several related structures, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a struct, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&lt;/code&gt;&lt;/a&gt;, a generic class, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventlooppromise&quot;&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;, a generic struct, provided by &lt;code&gt;NIOCore&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All SwiftNIO applications are ultimately constructed of these various components.&lt;/p&gt; 
&lt;h4&gt;EventLoops and EventLoopGroups&lt;/h4&gt; 
&lt;p&gt;The basic I/O primitive of SwiftNIO is the event loop. The event loop is an object that waits for events (usually I/O related events, such as &quot;data received&quot;) to happen and then fires some kind of callback when they do. In almost all SwiftNIO applications there will be relatively few event loops: usually only one or two per CPU core the application wants to use. Generally speaking, event loops run for the entire lifetime of your application, spinning in an endless loop dispatching events.&lt;/p&gt; 
&lt;p&gt;Event loops are gathered together into event loop &lt;em&gt;groups&lt;/em&gt;. These groups provide a mechanism to distribute work around the event loops. For example, when listening for inbound connections the listening socket will be registered on one event loop. However, we don&#39;t want all connections that are accepted on that listening socket to be registered with the same event loop, as that would potentially overload one event loop while leaving the others empty. For that reason, the event loop group provides the ability to spread load across multiple event loops.&lt;/p&gt; 
&lt;p&gt;In SwiftNIO today there is one &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopgroup&quot;&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; implementation, and two &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; implementations. For production applications there is the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioposix/multithreadedeventloopgroup&quot;&gt;&lt;code&gt;MultiThreadedEventLoopGroup&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopgroup&quot;&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; that creates a number of threads (using the POSIX &lt;a href=&quot;https://en.wikipedia.org/wiki/POSIX_Threads&quot;&gt;&lt;code&gt;pthreads&lt;/code&gt;&lt;/a&gt; library) and places one &lt;code&gt;SelectableEventLoop&lt;/code&gt; on each one. The &lt;code&gt;SelectableEventLoop&lt;/code&gt; is an event loop that uses a selector (either &lt;a href=&quot;https://en.wikipedia.org/wiki/Kqueue&quot;&gt;&lt;code&gt;kqueue&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Epoll&quot;&gt;&lt;code&gt;epoll&lt;/code&gt;&lt;/a&gt; depending on the target system) to manage I/O events from file descriptors and to dispatch work. These &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopgroup&quot;&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;s&lt;/a&gt; are provided by the &lt;code&gt;NIOPosix&lt;/code&gt; module. Additionally, there is the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioembedded/embeddedeventloop&quot;&gt;&lt;code&gt;EmbeddedEventLoop&lt;/code&gt;&lt;/a&gt;, which is a dummy event loop that is used primarily for testing purposes, provided by the &lt;code&gt;NIOEmbedded&lt;/code&gt; module.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s have a number of important properties. Most vitally, they are the way all work gets done in SwiftNIO applications. In order to ensure thread-safety, any work that wants to be done on almost any of the other objects in SwiftNIO must be dispatched via an &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; objects own almost all the other objects in a SwiftNIO application, and understanding their execution model is critical for building high-performance SwiftNIO applications.&lt;/p&gt; 
&lt;h4&gt;Channels, Channel Handlers, Channel Pipelines, and Channel Contexts&lt;/h4&gt; 
&lt;p&gt;While &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s are critical to the way SwiftNIO works, most users will not interact with them substantially beyond asking them to create &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventlooppromise&quot;&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;s and to schedule work. The parts of a SwiftNIO application most users will spend the most time interacting with are &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s.&lt;/p&gt; 
&lt;p&gt;Almost every file descriptor that a user interacts with in a SwiftNIO program is associated with a single &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; owns this file descriptor, and is responsible for managing its lifetime. It is also responsible for processing inbound and outbound events on that file descriptor: whenever the event loop has an event that corresponds to a file descriptor, it will notify the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; that owns that file descriptor.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s by themselves, however, are not useful. After all, it is a rare application that doesn&#39;t want to do anything with the data it sends or receives on a socket! So the other important part of the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is a sequence of objects, called &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, that process events on a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s process these events one after another, in order, mutating and transforming events as they go. This can be thought of as a data processing pipeline; hence the name &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are either Inbound or Outbound handlers, or both. Inbound handlers process &quot;inbound&quot; events: events like reading data from a socket, reading socket close, or other kinds of events initiated by remote peers. Outbound handlers process &quot;outbound&quot; events, such as writes, connection attempts, and local socket closes.&lt;/p&gt; 
&lt;p&gt;Each handler processes the events in order. For example, read events are passed from the front of the pipeline to the back, one handler at a time, while write events are passed from the back of the pipeline to the front. Each handler may, at any time, generate either inbound or outbound events that will be sent to the next handler in whichever direction is appropriate. This allows handlers to split up reads, coalesce writes, delay connection attempts, and generally perform arbitrary transformations of events.&lt;/p&gt; 
&lt;p&gt;In general, &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are designed to be highly re-usable components. This means they tend to be designed to be as small as possible, performing one specific data transformation. This allows handlers to be composed together in novel and flexible ways, which helps with code reuse and encapsulation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are able to keep track of where they are in a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; by using a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandlercontext&quot;&gt;&lt;code&gt;ChannelHandlerContext&lt;/code&gt;&lt;/a&gt;. These objects contain references to the previous and next channel handler in the pipeline, ensuring that it is always possible for a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; to emit events while it remains in a pipeline.&lt;/p&gt; 
&lt;p&gt;SwiftNIO ships with many &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s built in that provide useful functionality, such as HTTP parsing. In addition, high-performance applications will want to provide as much of their logic as possible in &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, as it helps avoid problems with context switching.&lt;/p&gt; 
&lt;p&gt;Additionally, SwiftNIO ships with a few &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; implementations. In particular, it ships with &lt;code&gt;ServerSocketChannel&lt;/code&gt;, a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for sockets that accept inbound connections; &lt;code&gt;SocketChannel&lt;/code&gt;, a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for TCP connections; and &lt;code&gt;DatagramChannel&lt;/code&gt;, a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for UDP sockets. All of these are provided by the &lt;code&gt;NIOPosix&lt;/code&gt; module. It also provides &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioembedded/embeddedchannel&quot;&gt;&lt;code&gt;EmbeddedChannel&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; primarily used for testing, provided by the &lt;code&gt;NIOEmbedded&lt;/code&gt; module.&lt;/p&gt; 
&lt;h5&gt;A Note on Blocking&lt;/h5&gt; 
&lt;p&gt;One of the important notes about &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;s is that they are thread-safe. This is very important for writing SwiftNIO applications, as it allows you to write much simpler &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s in the knowledge that they will not require synchronization.&lt;/p&gt; 
&lt;p&gt;However, this is achieved by dispatching all code on the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; on the same thread as the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. This means that, as a general rule, &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s &lt;strong&gt;must not&lt;/strong&gt; call blocking code without dispatching it to a background thread. If a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelhandler&quot;&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; blocks for any reason, all &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s attached to the parent &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; will be unable to progress until the blocking call completes.&lt;/p&gt; 
&lt;p&gt;This is a common concern while writing SwiftNIO applications. If it is useful to write code in a blocking style, it is highly recommended that you dispatch work to a different thread when you&#39;re done with it in your pipeline.&lt;/p&gt; 
&lt;h4&gt;Bootstrap&lt;/h4&gt; 
&lt;p&gt;While it is possible to configure and register &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s with &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloop&quot;&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s directly, it is generally more useful to have a higher-level abstraction to handle this work.&lt;/p&gt; 
&lt;p&gt;For this reason, SwiftNIO ships a number of &lt;code&gt;Bootstrap&lt;/code&gt; objects whose purpose is to streamline the creation of channels. Some &lt;code&gt;Bootstrap&lt;/code&gt; objects also provide other functionality, such as support for Happy Eyeballs for making TCP connection attempts.&lt;/p&gt; 
&lt;p&gt;Currently SwiftNIO ships with three &lt;code&gt;Bootstrap&lt;/code&gt; objects in the &lt;code&gt;NIOPosix&lt;/code&gt; module: &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioposix/serverbootstrap&quot;&gt;&lt;code&gt;ServerBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping listening channels; &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioposix/clientbootstrap&quot;&gt;&lt;code&gt;ClientBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping client TCP channels; and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nioposix/datagrambootstrap&quot;&gt;&lt;code&gt;DatagramBootstrap&lt;/code&gt;&lt;/a&gt; for bootstrapping UDP channels.&lt;/p&gt; 
&lt;h4&gt;ByteBuffer&lt;/h4&gt; 
&lt;p&gt;The majority of the work in a SwiftNIO application involves shuffling buffers of bytes around. At the very least, data is sent and received to and from the network in the form of buffers of bytes. For this reason it&#39;s very important to have a high-performance data structure that is optimized for the kind of work SwiftNIO applications perform.&lt;/p&gt; 
&lt;p&gt;For this reason, SwiftNIO provides &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a fast copy-on-write byte buffer that forms a key building block of most SwiftNIO applications. This type is provided by the &lt;code&gt;NIOCore&lt;/code&gt; module.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; provides a number of useful features, and in addition provides a number of hooks to use it in an &quot;unsafe&quot; mode. This turns off bounds checking for improved performance, at the cost of potentially opening your application up to memory correctness problems.&lt;/p&gt; 
&lt;p&gt;In general, it is highly recommended that you use the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; in its safe mode at all times.&lt;/p&gt; 
&lt;p&gt;For more details on the API of &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, please see our API documentation, linked below.&lt;/p&gt; 
&lt;h4&gt;Promises and Futures&lt;/h4&gt; 
&lt;p&gt;One major difference between writing concurrent code and writing synchronous code is that not all actions will complete immediately. For example, when you write data on a channel, it is possible that the event loop will not be able to immediately flush that write out to the network. For this reason, SwiftNIO provides &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventlooppromise&quot;&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; to manage operations that complete &lt;em&gt;asynchronously&lt;/em&gt;. These types are provided by the &lt;code&gt;NIOCore&lt;/code&gt; module.&lt;/p&gt; 
&lt;p&gt;An &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is essentially a container for the return value of a function that will be populated &lt;em&gt;at some time in the future&lt;/em&gt;. Each &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has a corresponding &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventlooppromise&quot;&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, which is the object that the result will be put into. When the promise is succeeded, the future will be fulfilled.&lt;/p&gt; 
&lt;p&gt;If you had to poll the future to detect when it completed that would be quite inefficient, so &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is designed to have managed callbacks. Essentially, you can chain callbacks off the future that will be executed when a result is available. The &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; will even carefully arrange the scheduling to ensure that these callbacks always execute on the event loop that initially created the promise, which helps ensure that you don&#39;t need too much synchronization around &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; callbacks.&lt;/p&gt; 
&lt;p&gt;Another important topic for consideration is the difference between how the promise passed to &lt;code&gt;close&lt;/code&gt; works as opposed to &lt;code&gt;closeFuture&lt;/code&gt; on a &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. For example, the promise passed into &lt;code&gt;close&lt;/code&gt; will succeed after the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is closed down but before the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is completely cleared out. This will allow you to take action on the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; before it is completely cleared out, if needed. If it is desired to wait for the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; to close down and the &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/channelpipeline&quot;&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; to be cleared out without any further action, then the better option would be to wait for the &lt;code&gt;closeFuture&lt;/code&gt; to succeed.&lt;/p&gt; 
&lt;p&gt;There are several functions for applying callbacks to &lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/niocore/eventloopfuture&quot;&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, depending on how and when you want them to execute. Details of these functions is left to the API documentation.&lt;/p&gt; 
&lt;h3&gt;Design Philosophy&lt;/h3&gt; 
&lt;p&gt;SwiftNIO is designed to be a powerful tool for building networked applications and frameworks, but it is not intended to be the perfect solution for all levels of abstraction. SwiftNIO is tightly focused on providing the basic I/O primitives and protocol implementations at low levels of abstraction, leaving more expressive but slower abstractions to the wider community to build. The intention is that SwiftNIO will be a building block for server-side applications, not necessarily the framework those applications will use directly.&lt;/p&gt; 
&lt;p&gt;Applications that need extremely high performance from their networking stack may choose to use SwiftNIO directly in order to reduce the overhead of their abstractions. These applications should be able to maintain extremely high performance with relatively little maintenance cost. SwiftNIO also focuses on providing useful abstractions for this use-case, such that extremely high performance network servers can be built directly.&lt;/p&gt; 
&lt;p&gt;The core SwiftNIO repository will contain a few extremely important protocol implementations, such as HTTP, directly in tree. However, we believe that most protocol implementations should be decoupled from the release cycle of the underlying networking stack, as the release cadence is likely to be very different (either much faster or much slower). For this reason, we actively encourage the community to develop and maintain their protocol implementations out-of-tree. Indeed, some first-party SwiftNIO protocol implementations, including our TLS and HTTP/2 bindings, are developed out-of-tree!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/apple/swift-nio/documentation/nio&quot;&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;p&gt;There are currently several example projects that demonstrate how to use SwiftNIO.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;chat client&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOChatClient&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOChatClient&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;chat server&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOChatServer&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOChatServer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;echo client&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOEchoClient&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOEchoClient&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;echo server&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOEchoServer&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOEchoServer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UDP echo client&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOUDPEchoClient&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOUDPEchoClient&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UDP echo server&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOUDPEchoServer&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOUDPEchoServer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP client&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOHTTP1Client&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOHTTP1Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP server&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOHTTP1Server&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOHTTP1Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WebSocket client&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOWebSocketClient&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOWebSocketClient&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WebSocket server&lt;/strong&gt; &lt;a href=&quot;https://github.com/apple/swift-nio/tree/main/Sources/NIOWebSocketServer&quot;&gt;https://github.com/apple/swift-nio/tree/main/Sources/NIOWebSocketServer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To build &amp;amp; run them, run following command, replace TARGET_NAME with the folder name under &lt;code&gt;./Sources&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;swift run TARGET_NAME
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to run NIOHTTP1Server, run following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;swift run NIOHTTP1Server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;SwiftNIO primarily uses &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;SwiftPM&lt;/a&gt; as its build tool, so we recommend using that as well. If you want to depend on SwiftNIO in your own project, it&#39;s as simple as adding a &lt;code&gt;dependencies&lt;/code&gt; clause to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
    .package(url: &quot;https://github.com/apple/swift-nio.git&quot;, from: &quot;2.0.0&quot;)
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and then adding the appropriate SwiftNIO module(s) to your target dependencies. The syntax for adding target dependencies differs slightly between Swift versions. For example, if you want to depend on the &lt;code&gt;NIOCore&lt;/code&gt;, &lt;code&gt;NIOPosix&lt;/code&gt; and &lt;code&gt;NIOHTTP1&lt;/code&gt; modules, specify the following dependencies:&lt;/p&gt; 
&lt;h4&gt;Swift 5.4 and newer (&lt;code&gt;swift-tools-version:5.4&lt;/code&gt;)&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;dependencies: [.product(name: &quot;NIOCore&quot;, package: &quot;swift-nio&quot;),
               .product(name: &quot;NIOPosix&quot;, package: &quot;swift-nio&quot;),
               .product(name: &quot;NIOHTTP1&quot;, package: &quot;swift-nio&quot;)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Xcode Package support&lt;/h3&gt; 
&lt;p&gt;If your project is set up as an Xcode project and you&#39;re using Xcode 11+, you can add SwiftNIO as a dependency to your Xcode project by clicking File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency. In the upcoming dialog, please enter &lt;code&gt;https://github.com/apple/swift-nio.git&lt;/code&gt; and click Next twice. Finally, select the targets you are planning to use (for example &lt;code&gt;NIOCore&lt;/code&gt;, &lt;code&gt;NIOHTTP1&lt;/code&gt;, and &lt;code&gt;NIOFoundationCompat&lt;/code&gt;) and click finish. Now will be able to &lt;code&gt;import NIOCore&lt;/code&gt; (as well as all the other targets you have selected) in your project.&lt;/p&gt; 
&lt;p&gt;To work on SwiftNIO itself, or to investigate some of the demonstration applications, you can clone the repository directly and use SwiftPM to help build it. For example, you can run the following commands to compile and run the example echo server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;swift build
swift test
swift run NIOEchoServer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To verify that it is working, you can use another shell to attempt to connect to it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &quot;Hello SwiftNIO&quot; | nc localhost 9999
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If all goes well, you&#39;ll see the message echoed back to you.&lt;/p&gt; 
&lt;p&gt;To work on SwiftNIO in Xcode, you can just open the &lt;code&gt;Package.swift&lt;/code&gt; file in Xcode and use Xcode&#39;s support for SwiftPM Packages.&lt;/p&gt; 
&lt;h2&gt;Developing SwiftNIO&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This section is only relevant if you would like to develop SwiftNIO yourself. You can ignore the information here if you just want to use SwiftNIO as a SwiftPM package.&lt;/p&gt; 
&lt;p&gt;For the most part, SwiftNIO development is as straightforward as any other SwiftPM project. With that said, we do have a few processes that are worth understanding before you contribute. For details, please see &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; in this repository.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;SwiftNIO&#39;s &lt;code&gt;main&lt;/code&gt; branch is the development branch for the next releases of SwiftNIO 2, it&#39;s Swift 5-only.&lt;/p&gt; 
&lt;p&gt;To be able to compile and run SwiftNIO and the integration tests, you need to have a few prerequisites installed on your system.&lt;/p&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Xcode 11.4 or newer, Xcode 12 recommended.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Swift 5.7 or newer from &lt;a href=&quot;https://swift.org/download/#releases&quot;&gt;swift.org/download&lt;/a&gt;. We always recommend to use the latest released version.&lt;/li&gt; 
 &lt;li&gt;netcat (for integration tests only)&lt;/li&gt; 
 &lt;li&gt;lsof (for integration tests only)&lt;/li&gt; 
 &lt;li&gt;shasum (for integration tests only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Ubuntu 18.04&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;# install swift tarball from https://swift.org/downloads
apt-get install -y git curl libatomic1 libxml2 netcat-openbsd lsof perl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fedora 28+&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;dnf install swift-lang /usr/bin/nc /usr/bin/lsof /usr/bin/shasum
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>tuist/tuist</title>
      <link>https://github.com/tuist/tuist</link>
      <description>&lt;p&gt;A virtual platform team for mobile devs who ship&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;div&gt; 
  &lt;a href=&quot;https://tuist.io&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/header.jpg&quot; alt=&quot;header&quot; /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;img src=&quot;https://img.shields.io/github/commit-activity/w/tuist/tuist?style=flat-square&amp;amp;label=commits&quot; alt=&quot;Commit Activity&quot; /&gt; 
 &lt;a href=&quot;https://fosstodon.org/@tuist&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=mastodon&amp;amp;logoColor=f5f5f5&quot; alt=&quot;Mastodon badge&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://bsky.app/profile/tuist.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=bluesky&quot; alt=&quot;Bluesky badge&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://join.slack.com/t/tuistapp/shared_invite/zt-1lqw355mp-zElRwLeoZ2EQsgGEkyaFgg&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=slack&quot; alt=&quot;Slack Workspace&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://t.me/tuist&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/tuist-gray.svg?logo=telegram&quot; alt=&quot;Slack Workspace&quot; /&gt;&lt;/a&gt; 
 &lt;div&gt; 
  &lt;a href=&quot;https://cal.com/team/tuist/cloud?utm_source=banner&amp;amp;utm_campaign=oss&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Book us with Cal.com&quot; src=&quot;https://cal.com/book-with-cal-dark.svg?sanitize=true&quot; width=&quot;150&quot; /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;a href=&quot;https://translate.tuist.dev/engage/documentation/&quot;&gt; &lt;img src=&quot;https://translate.tuist.dev/widget/documentation/svg-badge.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Tuist&lt;/h1&gt; 
&lt;p&gt;Tuist is a virtual platform team for Swift app devs who ship. Through an integrated platform that integrates with your toolchain and projects, we help you stay focused and productive while building apps.&lt;/p&gt; 
&lt;p&gt;The following solutions are part of Tuist:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev/en/guides/features/projects&quot;&gt;🗂️ &lt;strong&gt;Generated projects&lt;/strong&gt;&lt;/a&gt;: A solution for more accessible and easier-to-manage Xcode projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev/en/guides/features/cache&quot;&gt;🚝 &lt;strong&gt;Cache&lt;/strong&gt;&lt;/a&gt;: Speed up builds across environments with a content-addressable store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev/en/guides/features/selective-testing&quot;&gt;✅ &lt;strong&gt;Selective testing&lt;/strong&gt;&lt;/a&gt;: Run tests faster by selecting them based on the file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev/en/guides/features/registry&quot;&gt;📦 &lt;strong&gt;Registry&lt;/strong&gt;&lt;/a&gt;: Speed up the resolution of &lt;a href=&quot;https://swiftpackageindex.com/&quot;&gt;Swift Package Index&lt;/a&gt;-indexed packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev/en/guides/features/insights&quot;&gt;📈 &lt;strong&gt;Insights&lt;/strong&gt;&lt;/a&gt;: Get actionable insights from your projects, builds, and test runs to make informed decisions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev/en/guides/features/bundle-size&quot;&gt;📱 &lt;strong&gt;Bundle analysis&lt;/strong&gt;&lt;/a&gt;: Analyze your built apps and get suggestions to improve them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Openness and community are cornerstones in shaping Tuist, as we believe they are the key to building the best solution. We recommend checking out the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tuist.dev&quot;&gt;📑 &lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://handbook.tuist.dev&quot;&gt;📚 &lt;strong&gt;Handbook&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.tuist.dev&quot;&gt;💬 &lt;strong&gt;Community forum&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Even though our current focus is on the development phase of Apple native apps, we&#39;ll gradually expand our focus to include other ecosystems (e.g., Android, RN, and Flutter), and expand beyond just development.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;You can run the following command to get started with [Mise] (check out &lt;a href=&quot;https://docs.tuist.dev/en/guides/quick-start/get-started&quot;&gt;this page&lt;/a&gt; for other methods):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mise x tuist@latest -- tuist init
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The &lt;code&gt;init&lt;/code&gt; workflow is designed to integrate with an existing Xcode project or create &lt;a href=&quot;https://docs.tuist.dev/en/guides/features/projects&quot;&gt;a generated project&lt;/a&gt;. If you are migrating an existing Xcode project to a generated project, we recommend &lt;a href=&quot;https://docs.tuist.dev/en/guides/features/projects/adoption/migrate/xcode-project&quot;&gt;checking out these docs&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Do you want to know more about what Tuist can offer you? Or perhaps want to contribute to the project and you need a starting point?&lt;/p&gt; 
&lt;p&gt;You can check out &lt;a href=&quot;https://docs.tuist.dev&quot;&gt;the project documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sample projects&lt;/h3&gt; 
&lt;p&gt;You can find some sample projects in the &lt;a href=&quot;https://raw.githubusercontent.com/tuist/tuist/main/cli/Fixtures&quot;&gt;fixtures folder&lt;/a&gt; or the &lt;a href=&quot;https://github.com/tuist/awesome-tuist&quot;&gt;awesome Tuist repo&lt;/a&gt;! 🎉&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;This repository represents a monorepo with the following projects:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tuist/tuist/main/cli&quot;&gt;cli&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The command line interface for Tuist&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tuist/tuist/main/app&quot;&gt;app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Swift-powered iOS and macOS app&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tuist/tuist/main/docs&quot;&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The documentation for Tuist&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tuist/tuist/main/handbook&quot;&gt;handbook&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The company&#39;s handbook&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Some companies support our community and open source efforts with contributions through &lt;a href=&quot;https://github.com/sponsors/tuist&quot;&gt;GitHub Sponsors&lt;/a&gt; and &lt;a href=&quot;https://opencollective.com/tuistapp&quot;&gt;Open Collective Backers&lt;/a&gt;. We&#39;d like to give a special mention to the following sponsors:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://monday.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;300&quot; src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/monday.com.svg?sanitize=true&quot; alt=&quot;mondaycom_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://monday.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot;&gt;Monday.com&lt;/a&gt; is a cloud-based work operating system (Work OS) that empowers teams to run projects and workflows with confidence. It&#39;s a versatile platform that combines features of project management, workflow automation, and team collaboration to streamline the way teams work together.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;30%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://lapse.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;200&quot; src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/lapse.svg?sanitize=true&quot; alt=&quot;lapse_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lapse.com?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;&amp;amp;utm_term=tuist&quot;&gt;Lapse&lt;/a&gt; is an app designed to reclaim how we take and share memories. A camera for living in the moment and a private photo journal for friends, not followers.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Companies using Tuist&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://play.tv2.no&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/tv2.svg?sanitize=true&quot; alt=&quot;tv2_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.depop.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/depop.svg?sanitize=true&quot; alt=&quot;depop_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://bendingspoons.com&quot; target=&quot;_blank&quot;&gt; 
     &lt;picture&gt; 
      &lt;source srcset=&quot;assets/companies/bendingspoons-darkmode.png&quot; media=&quot;(prefers-color-scheme: dark)&quot; /&gt; 
      &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/bendingspoons.png&quot; alt=&quot;bendingspoons_logo&quot; /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://globekeeper.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/globekeeper.png&quot; alt=&quot;globekeeper_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://getyourguide.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/getyourguide.png&quot; alt=&quot;getyourguide_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://emplate.it&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/emplate.svg?sanitize=true&quot; alt=&quot;emplate_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.trendyol.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/Trendyol.png&quot; alt=&quot;trendyol_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://angrynerds.co&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/angrynerds.svg?sanitize=true&quot; alt=&quot;angrynerds_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.compass.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/compass.png&quot; alt=&quot;compass_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.wefox.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/wefox.png&quot; alt=&quot;wefox_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.hedvig.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/hedvig.svg?sanitize=true&quot; alt=&quot;hedvig_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.takeoutcentral.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/takeoutcentral.svg?sanitize=true&quot; alt=&quot;takeoutcentral_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.olx.com.br&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/olx.png&quot; alt=&quot;olx_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.justeattakeaway.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/justeattakeaway.svg?sanitize=true&quot; alt=&quot;justeattakeaway_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://qnips.io&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/qnips.svg?sanitize=true&quot; alt=&quot;qnips_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.telepass.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/telepass.svg?sanitize=true&quot; alt=&quot;telepass_logo&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.crunchyroll.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/crunchyroll.svg?sanitize=true&quot; alt=&quot;crunchyroll_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://altel.kz&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/altel.svg?sanitize=true&quot; alt=&quot;altel_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://tele2.kz&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/tele2.svg?sanitize=true&quot; alt=&quot;altel_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://izi.me/kz&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/izi.svg?sanitize=true&quot; alt=&quot;izi_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://wise.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/wise.png&quot; alt=&quot;wise_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://zapis.kz/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/zapis.svg?sanitize=true&quot; alt=&quot;wise_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://apps.apple.com/kz/app/rbk-business/id1466194695&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/rbkbusiness.svg?sanitize=true&quot; alt=&quot;rbkbusiness_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://snoonu.com/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/snoonu.svg?sanitize=true&quot; alt=&quot;rbkbusiness_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://get.sajda.app&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/sajda_app.svg?sanitize=true&quot; alt=&quot;sajda_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width=&quot;20%&quot; align=&quot;center&quot;&gt; &lt;a href=&quot;https://abb-bank.az&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/tuist/tuist/main/assets/companies/abb-logo-slogan.png&quot; alt=&quot;abb_mobile_logo&quot; height=&quot;75&quot; /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width=&quot;20%&quot;&gt;&lt;/td&gt; 
   &lt;td width=&quot;20%&quot;&gt;&lt;/td&gt; 
   &lt;td width=&quot;20%&quot;&gt;&lt;/td&gt; 
   &lt;td width=&quot;20%&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Want to contribute?&lt;/h2&gt; 
&lt;p&gt;You can use our &lt;a href=&quot;https://docs.tuist.dev/en/contributors/get-started&quot;&gt;contribution docs&lt;/a&gt; to get started. You can find good issues for first-time contributors &lt;a href=&quot;https://github.com/tuist/tuist/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Core Team&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pepicrft&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/663605?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Pedro Piñera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/fortmarek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9371695?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Marek Fořt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.matrixprojects.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11914919?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/danyf90&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2794031?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniele Formichelli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/waltflanagan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/398293?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Simons&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Core Alumni&lt;/h2&gt; 
&lt;p&gt;The following people were once core contributors helping steer the project in the right direction and ensuring we have a reliable foundation we can build new features upon:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://natanrolnik.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1164565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Natan Rolnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/andreacipriani&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/536929?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrea Cipriani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/ollieatkinson&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1382565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oliver Atkinson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/RomainBoulay&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/169323?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Romain Boulay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/laxmorek&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/4774319?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kamil Harasimowicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;http://www.luispadron.com&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/13840545?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luis Padron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/adellibovi&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/67916?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alfredo Delli Bovi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people:&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kalkwarf&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1033839?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;kalkwarf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/fortmarek&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/9371695?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Marek Fořt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.matrixprojects.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/11914919?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://natanrolnik.me&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/1164565?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Natan Rolnik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/svastven&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/42235915?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;svastven&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://bhuemer.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/1212480?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bernhard Huemer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://djankowski.dev&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/10795657?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Jankowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/facumenzella&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1125252?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Facundo Menzella&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/eito&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/775643?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eric Ito&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/laxmorek&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/4774319?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kamil Harasimowicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/olejnjak&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/3148214?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jakub Olejník&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lakpa&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/389328?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ldindu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/gtsifrikas&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/8904378?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;George Tsifrikas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/yurapriv&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/7814127?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Privezentsev Yura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ferologics.github.io&quot;&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/5576161?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Fero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://heberti.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/103670?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Heberti Almeida&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://benscheirman.com&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/59140?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ben Scheirman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://jsorge.net&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/2585841?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jared Sorge&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://joeblau.com&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/1218847?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joe Blau&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/dchavezlive&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/2475932?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David Chavez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/роман-подымов-72338ab0/&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/10789692?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Roman Podymov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/marcinreliga-fn&quot;&gt;&lt;img src=&quot;https://avatars0.githubusercontent.com/u/76949651?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Marcin Religa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/adellibovi&quot;&gt;&lt;img src=&quot;https://avatars3.githubusercontent.com/u/67916?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alfredo Delli Bovi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Jake-Prickett&quot;&gt;&lt;img src=&quot;https://avatars1.githubusercontent.com/u/26095410?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jake Prickett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/danyf90&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2794031?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniele Formichelli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.facebook.com/PetrachkovSergey&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7995896?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sergey Petrachkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jinuman.github.io/resume&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26243835?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jinwoo, Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/thedavidharris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5666250?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David Harris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/DimaMishchenko&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25247301?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dmytro Mishchenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.sampettersson.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5459507?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sam Pettersson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.joshholtz.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/401294?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Josh Holtz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jierong.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7414906?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jierong Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/freak4pc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/605076?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shai Mishali&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/FranzJBusch&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3491887?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Franz Busch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tiarnann&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10522081?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tíarnán McGrath&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/softmaxsg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3723817?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vitaly Chupryk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rmnblm&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5942764?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Roman Blum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://nanotek.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7265334?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Giovanni Filaferro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://twitter.com/tovkal&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5960675?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrés Pizá Bückmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://coutinho.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/17842860?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gabriel Coutinho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://medium.com/@riccardocipolleschi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11162307?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Riccardo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bolismauro&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/771999?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mauro Bolis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/iteractive_man&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/461805?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Weishapl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/users/1878594/swiftycruz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2609775?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Cruz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/svenmuennich&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1932115?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sven Münnich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/santi-d&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/993826?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Santiago A. Delgado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://wojciechkulik.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3128467?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Wojciech Kulik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/iainsmith&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/993745?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Iain Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/havebeenfitz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31866271?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Max Kraev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mstfy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5105861?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mustafa Yusuf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://twitter.com/danielbarden&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/104456?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Barden&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/zzzkk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12541603?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Zofia Kulus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://randombits.org/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3589315?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David Peterson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://bandism.net/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/22633385?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/setoelkahfi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1797197?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Seto Elkahfi / 塞托·埃尔卡菲&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://apps4everyone.at&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1915802?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;apps4everyone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/LorDisturbia&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12445776?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lorenzo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/DarkoDamjanovic&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11902775?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Darko Damjanovic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/MarvinNazari&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/926772?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Marvin Nazari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://twitter.com/codeOfRobin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5009041?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robin Malhotra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/astromonkee&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44421303?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Astromonkee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ezraberch&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49635435?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ezraberch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/cconstable&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/564781?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christopher Constable&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/neakor&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1827517?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yi Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.mustafadur.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/971530?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mustafa Dur&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lucabartoletti&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/838925?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luca Bartoletti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sujata23&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1849089?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sujata Chakraborty&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.viber.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5096762?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Pavel Trafimuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://alexsilva.dev/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/633535?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alejandro Silva Fernández&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.jakeadams.co&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3605966?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jake Adams&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/wattson12&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1217873?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sam Watts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://erkekin.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/701481?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Erk Ekin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/morozkin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16591888?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Denis Morozov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/orbitekk&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4222449?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;orbitekk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://blog.naver.com/wogus3602&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46857148?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Park Jae Hyun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/regularberry&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/565192?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sean Berry&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://hisaac.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/923876?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Isaac Halvorson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mohitsaxenaknoldus&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/76725454?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohit Saxena&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mikchmie&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15248837?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mikołaj Chmielewski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/takinwande&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4744429?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tope Akinwande&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.theinkedengineer.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13349066?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;TheInkedEngineer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://alexanderweiss.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/12934015?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Weiß&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kyungpyoda&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44656036?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;kyungpyoda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.villewitt.net&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/522544?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ville Witt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/paulsamuels&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/527091?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;paul.s&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/aniltaskiran&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16738729?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;aniltaskiran&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/unxavi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3817679?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Javier Vieira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/a-sarris&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/78614622?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aris Sarris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://xxw9999.notion.site/xxw9999/iOS-8585a34b2886419586960c5c02b9d845&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/67373938?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;kimxwan0319&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://florian.codes&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7734806?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Florian Fittschen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/jesus-mg-ios&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/85997060?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jesus (iOS)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nicholaskim94&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7912759?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nicholas Kim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Smponias&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14213855?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexandros Smponias&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mangofever&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/724343?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/AlbGarciam&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45308839?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alberto Garcia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/andreascuderi/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8319309?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrea Scuderi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://dogoautilio.wordpress.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1487375?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Diogo Autilio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/shahzadmajeed&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1209459?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shahzad Majeed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/danrevah&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7808742?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nivanchikov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1830010?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nikita Ivanchikov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/xoxo-anastasi-xoxo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/28875920?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Anastasia Kazantseva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://twitter.com/MonocularVision&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/429790?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael McGuire&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.michaelfcollins3.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/104274?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael Collins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/devyhan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45344633?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;YoHan Cho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/euriasb&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3721257?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;euriasb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MontakOleg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1800899?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MontakOleg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/oozoofrog&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3011832?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;oozoofrog&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/MartinStrambach&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11178869?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Martin Strambach&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sh-a-n&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2219548?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;sh-a-n&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/batuhansaka&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9626765?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Batuhan Saka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://jcsoohwancho.github.io&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51935215?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;SooHwanCho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://www.bouncingball.mobi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/798117?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gary Riches&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://mustiikhalil.github.io/mustiikhalil/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26250654?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;mustiikhalil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/serejahh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2575555?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Serhii Butenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/petrukha-ivan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/93926277?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Petrukha Ivan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lo1tuma&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/169170?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mathias Schreck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Buju77&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/266349?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yen-Chia Lin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://coolmathgames.tech&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6877780?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mary &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/woohyunjin06&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/30452977?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hyunjin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kevin58332&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/47673410?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kevin Aguilar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://andrewroan.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/9873566?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew Roan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/ibrahim-oktay-518b4939/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36792481?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ibrahim oktay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/navartis&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7813723?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dmitriy Kulakov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/woin2ee&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/81426024?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jaewon-Yun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tatagrigory&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5187973?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;tatagrigory&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://linkedin.com/in/denilchungath&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/95201442?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Denil Chungath&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/victor-sarda/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6460866?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Victor Sarda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/tzxdtc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19767846?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;tzxdtc10&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ThiemeFM&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/143395823?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thieme&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Lilfaen&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39119695?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Clemens Beck&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://macpaw.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/119268?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paul Taykalo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/in4lio&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/976061?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vitaly Kravtsov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://dc.wtf&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/643865?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;dc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/baekteun&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/74440939?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;baegteun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://vcoutasso.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44986513?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vinícius Couto Tasso&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://blog.jihoon.me&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/68891494?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;안지훈&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dxmvsh&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/44325936?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dimash&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/danibachar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6380777?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;danibachar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dp221125&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10572119?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;한석호(MilKyo)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://medium.com/@haifengkaohaifengkao&amp;amp;usg=AOvVaw2_xG-ZLdBawBIyS7m-99RQ&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4080524?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hai Feng Kao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/anlaital-oura&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/133648611?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Antti Laitala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/PushedCrayon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/37077444?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;PushedCrayon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://stefanomondino.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1691903?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stefano Mondino&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/leszko11&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/23533452?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Łukasz Lech&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/costapombo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/31352351?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;costapombo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/isavynskyi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18377497?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ihor Savynskyi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kapitoshka438&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3232401?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eduard Miniakhmetov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alexfilimon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19904867?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Filimonov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rofle100lvl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/45801227?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gorbenko Roman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/lucas-paim/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7849484?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lucas Mrowskovsky Paim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://actuallytaylor.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/32944568?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Taylor Lineman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/nandodelauni&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1938501?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Miguel Ferrando&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/barredewe&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19188911?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BarredEwe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/chris-livefront&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/126101032?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chris Sessions&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ajkolean&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5394701?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andy Kolean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Binlogo&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7845507?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Binlogo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/DevilDimon&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10220441?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dmitry Serov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://darrarski.pl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1384684?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dariusz Rybicki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/dansinclair25&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/2573447?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dan Sinclair&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.kaioelfke.de&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1190948?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kai Oelfke&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/users/468724/inder-kumar-rathore&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/352443?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Inder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/kyounh12&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/25301615?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;kyounh12&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alvar-bolt&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/72379847?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alvar Hansen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/barakwei&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5232161?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Barak Weiss&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/hiltonc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/470753?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hilton Campbell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rgnns&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/811827?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gabriel Liévano&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vijaytholpadi&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1171868?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vijay Tholpadi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://withiosdeveloper.blogspot.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/27220138?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Minhoi Goo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sphanley&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1323769?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sam Hanley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ahmdyasser&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/42544598?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahmdyasser&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/minhaaan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/87178301?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;minhaaan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/TamarMilchtaich&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49520876?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tamar Milchtaich Lavi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/rock88&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/323908?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrey K&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://2stable.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/69604865?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alex Vera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.annalisemariottini.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/14299642?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Annalise Mariottini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/gustn3965&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48749182?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;HyunSu Park&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vldalx&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13873200?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vladimir&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://rhysmorgan.co&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/11096937?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rhys Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/pierrerodgers&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/48193278?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;pierrerodgers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/honghoker&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50417461?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;eunpyo hong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://medium.com/@dbstj169&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/65678579?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yunseo Kang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/ilia3546&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4445510?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ilya Kharlamov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/brianvar&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/115399684?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;brianvar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/HossamYoussof&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6381926?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hossam Youssof&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/devMinseok&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/51021614?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Minseok Kang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/alpanyukov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36258478?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/sanghyeok-kim&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/57667738?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Loyle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vvisionnn&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/24761186?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ydna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://brucemcrooster.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/53529192?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Evan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://www.snipnotes.de&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5102728?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Felix Lisczyk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lukaswuerzburger&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/10812458?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lukas Würzburger&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/GetToSet&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/8158163?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ethan Wong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://tdkn.dev&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1296540?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shun Tedokon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://connorricks.com&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13373737?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Connor Ricks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://franciscodiaz.cl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/530662?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Francisco Diaz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Ethan-IS&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/140235921?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ethan Parker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/lukevanin&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/550579?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luke Van In&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://mustafataibah.vercel.app/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/83141712?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mustafa Taibah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/vkondrashkov&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16046780?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vladislav Kondrashkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/chrisjrex&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4457170?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christopher Rex&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/bahattinkoc&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/61124759?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;baaddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/mattjung&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/19891158?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matt Jung&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://imaginativeworld.org&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1952630?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Md. Mahmudul Hasan Shohag&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;http://ma.tyas.cz&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/6033733?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matty Cross&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/YIshihara11201&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/98417271?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;YIshihara11201&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/PhilippeWeidmann&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/5843044?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Philippe Weidmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot; valign=&quot;top&quot; width=&quot;14.28%&quot;&gt;&lt;a href=&quot;https://github.com/Zentaur0&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/75909658?v=4&quot; width=&quot;100px;&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Anton SVTSV&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</description>
    </item>
    
    <item>
      <title>airbnb/lottie-ios</title>
      <link>https://github.com/airbnb/lottie-ios</link>
      <description>&lt;p&gt;An iOS library to natively render After Effects vector animations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lottie for iOS&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/pods/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot; alt=&quot;Carthage Compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat&quot; alt=&quot;SwiftPM&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Flottie-ios%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;Platform&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Flottie-ios%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;Swift Versions&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;View documentation, FAQ, help, examples, and more at &lt;a href=&quot;https://airbnb.io/lottie/&quot;&gt;airbnb.io/lottie&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Lottie is a cross-platform library for iOS, macOS, tvOS, visionOS, &lt;a href=&quot;https://github.com/airbnb/lottie-android&quot;&gt;Android&lt;/a&gt;, and &lt;a href=&quot;https://github.com/airbnb/lottie-web&quot;&gt;Web&lt;/a&gt; that natively renders vector-based animations and art in realtime with minimal code.&lt;/p&gt; 
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href=&quot;https://github.com/bodymovin/bodymovin&quot;&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href=&quot;https://github.com/buba447/Lottie-Sketch-Export&quot;&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href=&quot;https://www.haikuanimator.com&quot;&gt;Haiku&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating them by hand. Since the animations are backed by JSON, they are extremely small in size but can be large in complexity! Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed. Lottie can play or loop just a portion of the animation as well, the possibilities are endless! Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position, or any keyframable value!&lt;/p&gt; 
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples1.gif&quot; alt=&quot;Example1&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples2.gif&quot; alt=&quot;Example2&quot; /&gt;&lt;/p&gt; 
&lt;img src=&quot;_Gifs/Community 2_3.gif&quot; /&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples3.gif&quot; alt=&quot;Example3&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/Examples4.gif&quot; alt=&quot;Abcs&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Installing Lottie&lt;/h2&gt; 
&lt;p&gt;Lottie supports &lt;a href=&quot;https://www.swift.org/package-manager/&quot;&gt;Swift Package Manager&lt;/a&gt;, &lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods&lt;/a&gt;, and &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; (Both dynamic and static).&lt;/p&gt; 
&lt;h3&gt;Github Repo&lt;/h3&gt; 
&lt;p&gt;You can pull the &lt;a href=&quot;https://github.com/airbnb/lottie-ios/&quot;&gt;Lottie Github Repo&lt;/a&gt; and include the &lt;code&gt;Lottie.xcodeproj&lt;/code&gt; to build a dynamic or static library.&lt;/p&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;To install Lottie using &lt;a href=&quot;https://github.com/swiftlang/swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt; you can follow the &lt;a href=&quot;https://developer.apple.com/documentation/xcode/adding_package_dependencies_to_your_app&quot;&gt;tutorial published by Apple&lt;/a&gt; using the URL for the Lottie repo with the current version:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Xcode, select “File” → “Add Packages...”&lt;/li&gt; 
 &lt;li&gt;Enter &lt;a href=&quot;https://github.com/airbnb/lottie-spm.git&quot;&gt;https://github.com/airbnb/lottie-spm.git&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;or you can add the following dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.package(url: &quot;https://github.com/airbnb/lottie-spm.git&quot;, from: &quot;4.5.2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using Swift Package Manager we recommend using the &lt;a href=&quot;https://github.com/airbnb/lottie-spm&quot;&gt;lottie-spm&lt;/a&gt; repo instead of the main lottie-ios repo. The main git repository for &lt;a href=&quot;https://github.com/airbnb/lottie-ios&quot;&gt;lottie-ios&lt;/a&gt; is somewhat large (300+ MB), and Swift Package Manager always downloads the full repository with all git history. The &lt;a href=&quot;https://github.com/airbnb/lottie-spm&quot;&gt;lottie-spm&lt;/a&gt; repo is much smaller (less than 500kb), so can be downloaded much more quickly.&lt;/p&gt; 
&lt;p&gt;Instead of downloading the full git history of Lottie and building it from source, the lottie-spm repo just contains a pointer to the precompiled XCFramework included in the &lt;a href=&quot;https://github.com/airbnb/lottie-ios/releases/latest&quot;&gt;latest lottie-ios release&lt;/a&gt; (typically ~8MB). If you prefer to include Lottie source directly your project, you can directly depend on the main lottie-ios repo by referencing &lt;code&gt;https://github.com/airbnb/lottie-ios.git&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h3&gt;CocoaPods&lt;/h3&gt; 
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;pod &#39;lottie-ios&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;pod install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import Lottie
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Carthage&lt;/h3&gt; 
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;github &quot;airbnb/lottie-ios&quot; &quot;master&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In your application targets “General” tab under the “Linked Frameworks and Libraries” section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt; 
&lt;h2&gt;Swift Version Support&lt;/h2&gt; 
&lt;p&gt;Lottie supports Swift / Xcode versions back to the minimum version that is permitted by Apple for submissions to the App Store. You can see the most up-to-date information for which Swift versions Lottie supports on &lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;Swift Package Index&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com/airbnb/lottie-ios&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fairbnb%2Flottie-ios%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;Swift Versions&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;Lottie does not collect any data. We provide this notice to help you fill out &lt;a href=&quot;https://developer.apple.com/app-store/app-privacy-details/&quot;&gt;App Privacy Details&lt;/a&gt;. We additionally provide a &lt;a href=&quot;https://github.com/airbnb/lottie-ios/raw/master/Sources/PrivacyInfo.xcprivacy&quot;&gt;privacy manifest&lt;/a&gt; which can be included in your app.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;We distribute XCFramework bundles for each release on &lt;a href=&quot;https://github.com/airbnb/lottie-ios/releases/latest&quot;&gt;GitHub&lt;/a&gt;. In Lottie 4.4.0 and later, these XCFramework bundles include a &lt;a href=&quot;https://developer.apple.com/documentation/xcode/verifying-the-origin-of-your-xcframeworks&quot;&gt;code signature&lt;/a&gt;. These bundles are self-signed under the name &quot;Lottie iOS&quot; and have the following fingerprint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;89 2F 1B 43 04 7B 50 53 8F 2F 46 EA D9 29 00 DD 3D 48 11 F358 21 78 C0 61 A5 FB 20 F1 11 CB 26
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In Xcode you can verify this by selecting &lt;code&gt;Lottie.xcframework&lt;/code&gt; and confirming that it shows the following information:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/airbnb/lottie-ios/master/_Gifs/code_signature.png&quot; alt=&quot;Code Signature in Xcode&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We always appreciate contributions from the community. To make changes to the project, you can clone the repo and open &lt;code&gt;Lottie.xcworkspace&lt;/code&gt;. This workspace includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the Lottie framework (for iOS, macOS, and tvOS)&lt;/li&gt; 
 &lt;li&gt;unit tests and snapshot tests (for iOS, must be run on an iPhone 8 simulator)&lt;/li&gt; 
 &lt;li&gt;an Example iOS app that lets you browse and test over 100 sample animations included in the repo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All pull requests with new features or bug fixes that affect how animations render should include snapshot test cases that validate the included changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To add a new sample animation to the snapshot testing suite, you can add the &lt;code&gt;.json&lt;/code&gt; file to &lt;code&gt;Tests/Samples&lt;/code&gt;. Re-run the snapshot tests to generate the new snapshot image files.&lt;/li&gt; 
 &lt;li&gt;To update existing snapshots after making changes, you can set &lt;code&gt;isRecording = true&lt;/code&gt; in &lt;code&gt;SnapshotTests.swift&lt;/code&gt; &lt;code&gt;setUp()&lt;/code&gt; method and then re-run the snapshot tests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The project also includes several helpful commands defined in our &lt;a href=&quot;https://github.com/airbnb/lottie-ios/raw/master/Rakefile&quot;&gt;Rakefile&lt;/a&gt;. To use these, you need to install &lt;a href=&quot;https://bundler.io/&quot;&gt;Bundler&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sudo gem install bundle
$ bundle install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, all Swift code should be formatted according to the &lt;a href=&quot;https://github.com/airbnb/swift&quot;&gt;Airbnb Swift Style Guide&lt;/a&gt;. After making changes, you can reformat the code automatically using &lt;a href=&quot;https://github.com/nicklockwood/SwiftFormat&quot;&gt;SwiftFormat&lt;/a&gt; and &lt;a href=&quot;https://github.com/realm/SwiftLint&quot;&gt;SwiftLint&lt;/a&gt; by running &lt;code&gt;bundle exec rake format:swift&lt;/code&gt;. Other helpful commands include:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bundle exec rake build:all # builds all targets for all platforms
$ bundle exec rake build&lt;span&gt;📦&lt;/span&gt;iOS # builds the Lottie package for iOS
$ bundle exec rake test:package # tests the Lottie package
$ bundle exec rake format:swift # reformat Swift code based on the Airbnb Swift Style Guide
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>tw93/MiaoYan</title>
      <link>https://github.com/tw93/MiaoYan</link>
      <description>&lt;p&gt;⛷ Lightweight Markdown app to help you write great sentences. ⛷ 轻灵的 Markdown 笔记本伴你写出妙言&lt;/p&gt;&lt;hr&gt;&lt;h4 align=&quot;right&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/tw93/MiaoYan/raw/master/README_EN.md&quot;&gt;English&lt;/a&gt;&lt;/strong&gt; | 中文 | &lt;strong&gt;&lt;a href=&quot;https://github.com/tw93/MiaoYan/raw/master/README_JP.md&quot;&gt;日本語&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://miaoyan.app/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://gw.alipayobjects.com/zos/k/t0/43.png&quot; width=&quot;138&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;妙言&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://twitter.com/HiTw93&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;twitter&quot; src=&quot;https://img.shields.io/badge/follow-Tw93-red?style=flat-square&amp;amp;logo=Twitter&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://t.me/+GclQS9ZnxyI2ODQ1&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;telegram&quot; src=&quot;https://img.shields.io/badge/chat-telegram-blueviolet?style=flat-square&amp;amp;logo=Telegram&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/tw93/MiaoYan/releases&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;GitHub downloads&quot; src=&quot;https://img.shields.io/github/downloads/tw93/MiaoYan/total.svg?style=flat-square&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/tw93/MiaoYan/commits&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;GitHub commit&quot; src=&quot;https://img.shields.io/github/commit-activity/m/tw93/MiaoYan?style=flat-square&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/tw93/MiaoYan/issues?q=is%3Aissue+is%3Aclosed&quot; target=&quot;_blank&quot;&gt; &lt;img alt=&quot;GitHub closed issues&quot; src=&quot;https://img.shields.io/github/issues-closed/tw93/MiaoYan.svg?style=flat-square&quot; /&gt;&lt;/a&gt; 
 &lt;img alt=&quot;Minimum supported version&quot; src=&quot;https://img.shields.io/badge/macOS-10.15%2B-orange?style=flat-square&quot; /&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt;
 轻灵的 Markdown 笔记本伴你写出妙言~
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/tw93/static/master/pic/miaoyan.gif&quot; width=&quot;900px&quot; /&gt; 
&lt;h2&gt;特点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏂 &lt;strong&gt;妙&lt;/strong&gt;：纯本地使用、安全、语法高亮、黑暗模式、源文件保存、国际化、演示模式、&lt;a href=&quot;https://raw.githubusercontent.com/tw93/MiaoYan/main/#%E5%A6%99%E8%A8%80-ppt&quot;&gt;PPT 模式&lt;/a&gt;、单独编辑模式、文档自动排版、文档导出、内部跳转、图床、LaTeX、Mermaid、PlantUML、Markmap 脑图&lt;/li&gt; 
 &lt;li&gt;🎊 &lt;strong&gt;美&lt;/strong&gt;：极简的设计风格，文件夹 + 文件列表 + 编辑器方式 3 列模式&lt;/li&gt; 
 &lt;li&gt;🚄 &lt;strong&gt;快&lt;/strong&gt;：使用 Swift5 原生开发，相比 Web 套壳方式性能体验好&lt;/li&gt; 
 &lt;li&gt;🥛 &lt;strong&gt;简&lt;/strong&gt;：很轻巧，纯编辑器输入体验，众多快捷键助你快人一步&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;首次使用&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;从 &lt;a href=&quot;https://github.com/tw93/MiaoYan/releases&quot; target=&quot;_blank&quot;&gt;GitHub Releases&lt;/a&gt; 中 &lt;strong&gt;下载&lt;/strong&gt; 最新的 dmg 安装包，macOS Big Sur 及以上版本体验更好，如安装出现问题请参考 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/135948430&quot;&gt;文档&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;可以在 iCloud 或根目录下创建一个 &lt;code&gt;MiaoYan&lt;/code&gt; 的文件夹，打开妙言的设置，将默认存储地址修改成这个。&lt;/li&gt; 
 &lt;li&gt;点击妙言左上角新增文件夹的图标，创建好自己的文档分类文件夹，就可以开始使用了。&lt;/li&gt; 
 &lt;li&gt;同样假如你不习惯默认的字体，可以在设置中修改成其他的正常字体。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;快捷键&lt;/h2&gt; 
&lt;h4&gt;窗口操作&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;command + 1&lt;/code&gt;：收起展开目录&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + 2&lt;/code&gt;：收起展开文档列表&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + 3&lt;/code&gt;：切换编辑和预览&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + 4&lt;/code&gt;：切换到演示模式&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + m&lt;/code&gt;：全局唤起/隐藏妙言&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;文档操作&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;command + n&lt;/code&gt;：新建文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + r&lt;/code&gt;：重命名文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + d&lt;/code&gt;：复制文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + o&lt;/code&gt;：单独打开文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + delete&lt;/code&gt;：删除文档&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + shift + n&lt;/code&gt;：新建文件夹&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + shift + l&lt;/code&gt;：自动排版&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + r&lt;/code&gt;：在 Finder 中显示&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + i&lt;/code&gt;：显示字数等文档属性&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;command + option + p&lt;/code&gt;：启动妙言 PPT 预览&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🏂 此外还有很多快捷键 👆🏻 👇🏻 👈🏻 👉🏻 等着爱折腾的你去寻找~&lt;/p&gt; 
&lt;h2&gt;妙言 PPT&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 PPT 模式效果演示&lt;/summary&gt; 
 &lt;p&gt;&lt;a href=&quot;https://gw.alipayobjects.com/zos/k/app2/123.gif&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/8736212/180579306-4f2504ee-8377-4d5c-b560-2d0d83ac12f6.gif&quot; width=&quot;100%&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;ol&gt; 
 &lt;li&gt;新朋友默认初始化会生成模版，如果是老朋友需升级到 1.0，可以 Copy &lt;a href=&quot;https://raw.githubusercontent.com/tw93/MiaoYan/master/Resources/Initial/%E5%A6%99%E8%A8%80%20PPT.md&quot;&gt;此文件&lt;/a&gt; 到妙言玩一玩。&lt;/li&gt; 
 &lt;li&gt;执行 &lt;code&gt;command + option + p&lt;/code&gt; 可以启动妙言 PPT 预览，也可以选中文档点击右键，选择 &lt;code&gt;妙言 PPT&lt;/code&gt; 打开。&lt;/li&gt; 
 &lt;li&gt;只有在有 &lt;code&gt;---&lt;/code&gt; 分隔符标志的文档中，才可启用 PPT 模式，演示过程中你可以 &lt;code&gt;回车键&lt;/code&gt; 预览演讲大纲，&lt;code&gt;ESC&lt;/code&gt; 键可退出 PPT 模式。&lt;/li&gt; 
 &lt;li&gt;你可以使用 HTML 来自定义效果，更多复杂的用法可以参考 &lt;a href=&quot;https://revealjs.com/markdown/&quot;&gt;Reveal&lt;/a&gt; 文档。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;为什么要做妙言&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;之前有尝试过众多的笔记应用，大学时期为知笔记、印象笔记，工作时候用过 Ulysses、Quiver、MWeb、Bear、Typora，种种原因，没有找到一个习惯的 Markdown 应用，才有了做妙言的想法。&lt;/li&gt; 
 &lt;li&gt;本职为前端开发，会一点 iOS 开发，爱折腾，借妙言来玩一下 Swift 以及独立产品，当做一个很愉快的事情。&lt;/li&gt; 
 &lt;li&gt;更多介绍可见 &lt;a href=&quot;https://tw93.fun/2022-09-09/miaoyan.html&quot;&gt;妙言 - 更适合工程师用的笔记应用&lt;/a&gt;，很欢迎交流和建议&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;支持&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;我有两只猫，假如觉得妙言让你生活更美好，可以给猫 &lt;a href=&quot;https://miaoyan.app/cats.html&quot; target=&quot;_blank&quot;&gt;喂罐头 🥩🍤&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;如果你喜欢妙言，可以在 Github Star，更欢迎 &lt;a href=&quot;https://twitter.com/intent/tweet?text=%23%E5%A6%99%E8%A8%80%20-%20%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E5%A5%BD%E7%9C%8B%E7%9A%84%E5%BC%80%E6%BA%90%E7%9A%84%20Mac%20%20Markdown%20%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%8C%E6%B2%A1%E6%9C%89%E4%BB%BB%E4%BD%95%E5%A4%9A%E4%BD%99%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BD%BF%E7%94%A8%E5%8E%9F%E7%94%9F%20Swift%20%E5%BC%80%E5%8F%91%EF%BC%8C%E8%BD%BB%E9%87%8F%E6%80%A7%E8%83%BD%E9%AB%98%EF%BC%8C%E5%AE%89%E5%85%A8%E7%BA%AF%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%85%B7%E5%A4%87%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E3%80%81%E9%BB%91%E6%9A%97%E6%A8%A1%E5%BC%8F%E3%80%81%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%81%E5%8D%95%E7%8B%AC%E7%BC%96%E8%BE%91%E3%80%81%E6%BC%94%E7%A4%BA%E6%A8%A1%E5%BC%8F%E3%80%81%E5%9B%BE%E5%BA%8A%E7%AD%89%E5%8A%9F%E8%83%BD%E3%80%82&amp;amp;url=https://github.com/tw93/MiaoYan&quot;&gt;推荐&lt;/a&gt; 给你志同道合的朋友使用。&lt;/li&gt; 
 &lt;li&gt;可以关注我的 &lt;a href=&quot;https://twitter.com/HiTw93&quot;&gt;Twitter&lt;/a&gt; 获取到最新的妙言更新消息，也欢迎加入 &lt;a href=&quot;https://t.me/+GclQS9ZnxyI2ODQ1&quot;&gt;Telegram&lt;/a&gt; 聊天群。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glushchenko/fsnotes&quot; target=&quot;_blank&quot;&gt;glushchenko/fsnotes&lt;/a&gt;：项目初始化代码参考于此，非常感谢作者&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stackotter/swift-cmark-gfm&quot; target=&quot;_blank&quot;&gt;stackotter/swift-cmark-gfm&lt;/a&gt;：快速高效的 Swift Markdown 解析器&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raspu/Highlightr&quot; target=&quot;_blank&quot;&gt;raspu/Highlightr&lt;/a&gt;：语法高亮能力&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://tsanger.cn/product&quot; target=&quot;_blank&quot;&gt;仓耳字库&lt;/a&gt;：一款漂亮的开源中文字体仓耳今楷，妙言将其作为默认字体&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hakimel/reveal.js&quot; target=&quot;_blank&quot;&gt;hakimel/reveal.js&lt;/a&gt;：妙言 PPT 底层渲染依赖此框架&lt;/li&gt; 
 &lt;li&gt;感谢 Vercel 给妙言 &lt;a href=&quot;https://miaoyan.app/&quot;&gt;官网&lt;/a&gt; 提供静态渲染能力 &lt;a href=&quot;https://vercel.com?utm_source=tw93&amp;amp;utm_campaign=oss&quot;&gt;&lt;img src=&quot;https://gw.alipayobjects.com/zos/k/wr/powered-by-vercel.svg?sanitize=true&quot; width=&quot;118px&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;📦 依赖管理&lt;/strong&gt;：项目使用 Swift Package Manager 管理依赖，详细信息请查看 &lt;a href=&quot;https://raw.githubusercontent.com/tw93/MiaoYan/main/DEPENDENCIES.md&quot;&gt;&lt;code&gt;DEPENDENCIES.md&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;协议&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;遵循 MIT 协议&lt;/li&gt; 
 &lt;li&gt;请自由地享受和参与开源&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nikitabobko/AeroSpace</title>
      <link>https://github.com/nikitabobko/AeroSpace</link>
      <description>&lt;p&gt;AeroSpace is an i3-like tiling window manager for macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AeroSpace Beta &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/nikitabobko/AeroSpace/actions/workflows/build.yml/badge.svg?branch=main&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/nikitabobko/AeroSpace/main/resources/Assets.xcassets/AppIcon.appiconset/icon.png&quot; width=&quot;40%&quot; align=&quot;right&quot; /&gt; 
&lt;p&gt;AeroSpace is an i3-like tiling window manager for macOS&lt;/p&gt; 
&lt;p&gt;Videos:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UOl7ErqWbrk&quot;&gt;YouTube 91 sec Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-FoWClVHG5g&quot;&gt;YouTube Guide by Josean Martinez&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Docs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide&quot;&gt;AeroSpace Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/commands&quot;&gt;AeroSpace Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/goodies&quot;&gt;AeroSpace Goodies&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project status&lt;/h2&gt; 
&lt;p&gt;Public Beta. AeroSpace can be used as a daily driver, but expect breaking changes until 1.0 is reached.&lt;/p&gt; 
&lt;p&gt;What stops us from 1.0 release:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/131&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/131&lt;/a&gt; Performance. Implement thread-per-application to circumvent macOS blocking AX API.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/1215&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/1215&lt;/a&gt; &lt;em&gt;Big refactoring&lt;/em&gt;. Rewrite mutable double-linked core tree data structure to immutable single-linked persistent tree. Important for: stability and potential performance 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/1216&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/1216&lt;/a&gt; The big refactoring will help us to fix stability issue that windows may randomly jump to the focused workspace&lt;/li&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/68&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/68&lt;/a&gt; The big refactoring will help us to support macOS native tabs&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/278&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/278&lt;/a&gt; Implement shell-like combinators. Ignore a lot of crazy fuss in the issue, We are most probably going with the minimal approach to only introduce common shell-combinators: &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; command to send multiple commands in one go.&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/1012&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/1012&lt;/a&gt; Investigate a possibility to use &lt;code&gt;CGEvent.tapCreate&lt;/code&gt; API for global hotkeys 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/28&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/28&lt;/a&gt; Maybe it will allow to distinguish left and right modifiers. Maybe not&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Big and important issues which will go after 1.0 release:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/2&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/2&lt;/a&gt; sticky windows&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/issues/260&quot;&gt;https://github.com/nikitabobko/AeroSpace/issues/260&lt;/a&gt; Dynamic TWM&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tiling window manager based on a &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#tree&quot;&gt;tree paradigm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://i3wm.org/&quot;&gt;i3&lt;/a&gt; inspired&lt;/li&gt; 
 &lt;li&gt;Fast workspaces switching without animations and without the necessity to disable SIP&lt;/li&gt; 
 &lt;li&gt;AeroSpace employs its &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#emulation-of-virtual-workspaces&quot;&gt;own emulation of virtual workspaces&lt;/a&gt; instead of relying on native macOS Spaces due to &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#emulation-of-virtual-workspaces&quot;&gt;their considerable limitations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Plain text configuration (dotfiles friendly). See: &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#default-config&quot;&gt;default-config.toml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI first (manpages and shell completion included)&lt;/li&gt; 
 &lt;li&gt;Doesn&#39;t require disabling SIP (System Integrity Protection)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#multiple-monitors&quot;&gt;Proper multi-monitor support&lt;/a&gt; (i3-like paradigm)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to get autoupdates (Preferred)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install --cask nikitabobko/tap/aerospace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In multi-monitor setup please make sure that monitors &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#proper-monitor-arrangement&quot;&gt;are properly arranged&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other installation options: &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#installation&quot;&gt;https://nikitabobko.github.io/AeroSpace/guide#installation&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] By using AeroSpace, you acknowledge that it&#39;s not &lt;a href=&quot;https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution&quot;&gt;notarized&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Notarization is a &quot;security&quot; feature by Apple. You send binaries to Apple, and they either approve them or not. In reality, notarization is about building binaries the way Apple likes it.&lt;/p&gt; 
 &lt;p&gt;I don&#39;t have anything against notarization as a concept. I specifically don&#39;t like the way Apple does notarization. I don&#39;t have time to deal with Apple.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/nikitabobko/homebrew-tap/raw/main/Casks/aerospace.rb&quot;&gt;Homebrew installation script&lt;/a&gt; is configured to automatically delete &lt;code&gt;com.apple.quarantine&lt;/code&gt; attribute, that&#39;s why the app should work out of the box, without any warnings that &quot;Apple cannot check AeroSpace for malicious software&quot;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Community, discussions, issues&lt;/h2&gt; 
&lt;p&gt;AeroSpace project doesn&#39;t accept Issues directly - we ask you to create a &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions&quot;&gt;Discussion&lt;/a&gt; first. Please read &lt;a href=&quot;https://raw.githubusercontent.com/nikitabobko/AeroSpace/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Community discussions happen at GitHub Discussions. There you can discuss bugs, propose new features, ask your questions, show off your setup, or just chat.&lt;/p&gt; 
&lt;p&gt;There are 7 channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions&quot;&gt;#all&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions.atom?discussions_q=sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Feed with all discussions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements&quot;&gt;#announcements&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements.atom?discussions_q=category%3Aannouncements+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Only maintainers can post here. Highly moderated traffic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements-releases&quot;&gt;#announcements-releases&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/announcements-releases.atom?discussions_q=category%3Aannouncements-releases+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Announcements about non-patch releases. Only maintainers can post here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/feature-ideas&quot;&gt;#feature-ideas&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/feature-ideas.atom?discussions_q=category%3Afeature-ideas+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/general&quot;&gt;#general&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/general.atom?discussions_q=sort%3Adate_created+category%3Ageneral&quot;&gt;RSS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/potential-bugs&quot;&gt;#potential-bugs&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/potential-bugs.atom?discussions_q=category%3Apotential-bugs+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. If you think that you have encountered a bug, you can discuss your bugs here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/questions-and-answers&quot;&gt;#questions-and-answers&lt;/a&gt;. &lt;a href=&quot;https://github.com/nikitabobko/AeroSpace/discussions/categories/questions-and-answers.atom?discussions_q=category%3Aquestions-and-answers+sort%3Adate_created&quot;&gt;RSS&lt;/a&gt;. Everyone is welcome to ask questions. Everyone is encouraged to answer other people&#39;s questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;A notes on how to setup the project, build it, how to run the tests, etc. can be found here: &lt;a href=&quot;https://raw.githubusercontent.com/nikitabobko/AeroSpace/main/dev-docs/development.md&quot;&gt;dev-docs/development.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project values&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Values&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AeroSpace is targeted at advanced users and developers&lt;/li&gt; 
 &lt;li&gt;Keyboard centric&lt;/li&gt; 
 &lt;li&gt;Breaking changes (configuration files, CLI, behavior) are avoided as much as possible, but it must not let the software stagnate. Thus breaking changes can happen, but with careful considerations and helpful message. &lt;a href=&quot;https://semver.org/&quot;&gt;Semver&lt;/a&gt; major version is bumped in case of a breaking change (It&#39;s all guaranteed once AeroSpace reaches 1.0 version, until then breaking changes just happen)&lt;/li&gt; 
 &lt;li&gt;AeroSpace doesn&#39;t use GUI, unless necessarily 
  &lt;ul&gt; 
   &lt;li&gt;AeroSpace will never provide a GUI for configuration. For advanced users, it&#39;s easier to edit a configuration file in text editor rather than navigating through checkboxes in GUI.&lt;/li&gt; 
   &lt;li&gt;Status menu icon is ok, because visual feedback is needed&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Provide &lt;em&gt;practical&lt;/em&gt; features. Fancy appearance features are not &lt;em&gt;practical&lt;/em&gt; (e.g. window borders, transparency, animations, etc.)&lt;/li&gt; 
 &lt;li&gt;&quot;dark magic&quot; (aka &quot;private APIs&quot;, &quot;code injections&quot;, etc.) must be avoided as much as possible 
  &lt;ul&gt; 
   &lt;li&gt;Right now, AeroSpace uses only a single private API to get window ID of accessibility object &lt;code&gt;_AXUIElementGetWindow&lt;/code&gt;. Everything else is &lt;a href=&quot;https://developer.apple.com/documentation/applicationservices/axuielement_h&quot;&gt;macOS public accessibility API&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;AeroSpace will never require you to disable SIP (System Integrity Protection).&lt;/li&gt; 
   &lt;li&gt;The goal is to make AeroSpace easily maintainable, and resistant to macOS updates.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Non Values&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Play nicely with existing macOS features. If limitations are imposed then AeroSpace won&#39;t play nicely with existing macOS features (For example, AeroSpace doesn&#39;t acknowledge the existence of macOS Spaces, and it uses &lt;a href=&quot;https://nikitabobko.github.io/AeroSpace/guide#emulation-of-virtual-workspaces&quot;&gt;emulation of its own workspaces&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Ricing. AeroSpace provides only a very minimal support for ricing - gaps and a few callbacks for integrations with bars. The current maintainer doesn&#39;t care about ricing. Ricing issues are not a priority, and they are mostly ignored. The ricing stance can change only with the appearance of more maintainers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;p&gt;AeroSpace is developed and maintained in my free time. If you find it useful, &lt;a href=&quot;https://github.com/sponsors/nikitabobko#sponsors&quot;&gt;consider sponsoring&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tip of the day&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;defaults write -g NSWindowShouldDragOnGesture -bool true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you can move windows by holding &lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;cmd&lt;/code&gt; and dragging any part of the window (not necessarily the window title)&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href=&quot;https://www.reddit.com/r/MacOS/comments/k6hiwk/keyboard_modifier_to_simplify_click_drag_of/&quot;&gt;reddit&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ianyh/Amethyst&quot;&gt;Amethyst&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/koekeishiya/yabai&quot;&gt;yabai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>pointfreeco/swift-snapshot-testing</title>
      <link>https://github.com/pointfreeco/swift-snapshot-testing</link>
      <description>&lt;p&gt;📸 Delightful Swift snapshot testing.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;📸 SnapshotTesting&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://actions-badge.atrox.dev/pointfreeco/swift-snapshot-testing/goto&quot;&gt;&lt;img src=&quot;https://github.com/pointfreeco/swift-snapshot-testing/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://pointfree.co/slack-invite&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-chat-informational.svg?label=Slack&amp;amp;logo=slack&quot; alt=&quot;Slack&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-snapshot-testing&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-snapshot-testing%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-snapshot-testing&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fpointfreeco%2Fswift-snapshot-testing%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Delightful Swift snapshot testing.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once &lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-snapshot-testing/main/#installation&quot;&gt;installed&lt;/a&gt;, &lt;em&gt;no additional configuration is required&lt;/em&gt;. You can import the &lt;code&gt;SnapshotTesting&lt;/code&gt; module and call the &lt;code&gt;assertSnapshot&lt;/code&gt; function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import SnapshotTesting
import Testing

@MainActor
struct MyViewControllerTests {
  @Test func myViewController() {
    let vc = MyViewController()

    assertSnapshot(of: vc, as: .image)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When an assertion first runs, a snapshot is automatically recorded to disk and the test will fail, printing out the file path of any newly-recorded reference.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;❌ failed - No reference was found on disk. Automatically recorded snapshot: …&lt;/p&gt; 
 &lt;p&gt;open &quot;…/MyAppTests/__Snapshots__/MyViewControllerTests/testMyViewController.png&quot;&lt;/p&gt; 
 &lt;p&gt;Re-run &quot;testMyViewController&quot; to test against the newly-recorded snapshot.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Repeat test runs will load this reference and compare it with the runtime value. If they don&#39;t match, the test will fail and describe the difference. Failures can be inspected from Xcode&#39;s Report Navigator or by inspecting the file URLs of the failure.&lt;/p&gt; 
&lt;p&gt;You can record a new reference by customizing snapshots inline with the assertion, or using the &lt;code&gt;withSnapshotTesting&lt;/code&gt; tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Record just this one snapshot
assertSnapshot(of: vc, as: .image, record: .all)

// Record all snapshots in a scope:
withSnapshotTesting(record: .all) {
  assertSnapshot(of: vc1, as: .image)
  assertSnapshot(of: vc2, as: .image)
  assertSnapshot(of: vc3, as: .image)
}

// Record all snapshot failures in a Swift Testing suite:
@Suite(.snapshots(record: .failed))
struct FeatureTests {}

// Record all snapshot failures in an &#39;XCTestCase&#39; subclass:
class FeatureTests: XCTestCase {
  override func invokeTest() {
    withSnapshotTesting(record: .failed) {
      super.invokeTest()
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Snapshot Anything&lt;/h2&gt; 
&lt;p&gt;While most snapshot testing libraries in the Swift community are limited to &lt;code&gt;UIImage&lt;/code&gt;s of &lt;code&gt;UIView&lt;/code&gt;s, SnapshotTesting can work with &lt;em&gt;any&lt;/em&gt; format of &lt;em&gt;any&lt;/em&gt; value on &lt;em&gt;any&lt;/em&gt; Swift platform!&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;assertSnapshot&lt;/code&gt; function accepts a value and any snapshot strategy that value supports. This means that a view or view controller can be tested against an image representation &lt;em&gt;and&lt;/em&gt; against a textual representation of its properties and subview hierarchy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;assertSnapshot(of: vc, as: .image)
assertSnapshot(of: vc, as: .recursiveDescription)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;View testing is highly configurable. You can override trait collections (for specific size classes and content size categories) and generate device-agnostic snapshots, all from a single simulator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;assertSnapshot(of: vc, as: .image(on: .iPhoneSe))
assertSnapshot(of: vc, as: .recursiveDescription(on: .iPhoneSe))

assertSnapshot(of: vc, as: .image(on: .iPhoneSe(.landscape)))
assertSnapshot(of: vc, as: .recursiveDescription(on: .iPhoneSe(.landscape)))

assertSnapshot(of: vc, as: .image(on: .iPhoneX))
assertSnapshot(of: vc, as: .recursiveDescription(on: .iPhoneX))

assertSnapshot(of: vc, as: .image(on: .iPadMini(.portrait)))
assertSnapshot(of: vc, as: .recursiveDescription(on: .iPadMini(.portrait)))
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Snapshots must be compared using the exact same simulator that originally took the reference to avoid discrepancies between images.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Better yet, SnapshotTesting isn&#39;t limited to views and view controllers! There are a number of available snapshot strategies to choose from.&lt;/p&gt; 
&lt;p&gt;For example, you can snapshot test URL requests (&lt;em&gt;e.g.&lt;/em&gt;, those that your API client prepares).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;assertSnapshot(of: urlRequest, as: .raw)
// POST http://localhost:8080/account
// Cookie: pf_session={&quot;userId&quot;:&quot;1&quot;}
//
// email=blob%40pointfree.co&amp;amp;name=Blob
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you can snapshot test &lt;code&gt;Encodable&lt;/code&gt; values against their JSON &lt;em&gt;and&lt;/em&gt; property list representations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;assertSnapshot(of: user, as: .json)
// {
//   &quot;bio&quot; : &quot;Blobbed around the world.&quot;,
//   &quot;id&quot; : 1,
//   &quot;name&quot; : &quot;Blobby&quot;
// }

assertSnapshot(of: user, as: .plist)
// &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
// &amp;lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot;
//  &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;
// &amp;lt;plist version=&quot;1.0&quot;&amp;gt;
// &amp;lt;dict&amp;gt;
//   &amp;lt;key&amp;gt;bio&amp;lt;/key&amp;gt;
//   &amp;lt;string&amp;gt;Blobbed around the world.&amp;lt;/string&amp;gt;
//   &amp;lt;key&amp;gt;id&amp;lt;/key&amp;gt;
//   &amp;lt;integer&amp;gt;1&amp;lt;/integer&amp;gt;
//   &amp;lt;key&amp;gt;name&amp;lt;/key&amp;gt;
//   &amp;lt;string&amp;gt;Blobby&amp;lt;/string&amp;gt;
// &amp;lt;/dict&amp;gt;
// &amp;lt;/plist&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In fact, &lt;em&gt;any&lt;/em&gt; value can be snapshot-tested by default using its &lt;a href=&quot;https://developer.apple.com/documentation/swift/mirror&quot;&gt;mirror&lt;/a&gt;!&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;assertSnapshot(of: user, as: .dump)
// ▿ User
//   - bio: &quot;Blobbed around the world.&quot;
//   - id: 1
//   - name: &quot;Blobby&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your data can be represented as an image, text, or data, you can write a snapshot test for it!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The latest documentation is available &lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-snapshot-testing/main/documentation/snapshottesting&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Xcode&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; By default, Xcode will try to add the SnapshotTesting package to your project&#39;s main application/framework target. Please ensure that SnapshotTesting is added to a &lt;em&gt;test&lt;/em&gt; target instead, as documented in the last step, below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, navigate through &lt;strong&gt;Swift Packages&lt;/strong&gt; and select &lt;strong&gt;Add Package Dependency…&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Enter package repository URL: &lt;code&gt;https://github.com/pointfreeco/swift-snapshot-testing&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Confirm the version and let Xcode resolve the package.&lt;/li&gt; 
 &lt;li&gt;On the final dialog, update SnapshotTesting&#39;s &lt;strong&gt;Add to Target&lt;/strong&gt; column to a test target that will contain snapshot tests (if you have more than one test target, you can later add SnapshotTesting to them by manually linking the library in its build phase).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;If you want to use SnapshotTesting in any other project that uses &lt;a href=&quot;https://swift.org/package-manager/&quot;&gt;SwiftPM&lt;/a&gt;, add the package as a dependency in &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;dependencies: [
  .package(
    url: &quot;https://github.com/pointfreeco/swift-snapshot-testing&quot;,
    from: &quot;1.12.0&quot;
  ),
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, add &lt;code&gt;SnapshotTesting&lt;/code&gt; as a dependency of your test target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;targets: [
  .target(name: &quot;MyApp&quot;),
  .testTarget(
    name: &quot;MyAppTests&quot;,
    dependencies: [
      &quot;MyApp&quot;,
      .product(name: &quot;SnapshotTesting&quot;, package: &quot;swift-snapshot-testing&quot;),
    ]
  )
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-snapshot-testing/main/documentation/snapshottesting/snapshotting&quot;&gt;&lt;strong&gt;Dozens of snapshot strategies&lt;/strong&gt;&lt;/a&gt;. Snapshot testing isn&#39;t just for &lt;code&gt;UIView&lt;/code&gt;s and &lt;code&gt;CALayer&lt;/code&gt;s. Write snapshots against &lt;em&gt;any&lt;/em&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/pointfreeco/swift-snapshot-testing/main/documentation/snapshottesting/customstrategies&quot;&gt;&lt;strong&gt;Write your own snapshot strategies&lt;/strong&gt;&lt;/a&gt;. If you can convert it to an image, string, data, or your own diffable format, you can snapshot test it! Build your own snapshot strategies from scratch or transform existing ones.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No configuration required.&lt;/strong&gt; Don&#39;t fuss with scheme settings and environment variables. Snapshots are automatically saved alongside your tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;More hands-off.&lt;/strong&gt; New snapshots are recorded whether &lt;code&gt;isRecording&lt;/code&gt; mode is &lt;code&gt;true&lt;/code&gt; or not.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subclass-free.&lt;/strong&gt; Assert from any XCTest case or Quick spec.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Device-agnostic snapshots.&lt;/strong&gt; Render views and view controllers for specific devices and trait collections from a single simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;First-class Xcode support.&lt;/strong&gt; Image differences are captured as XCTest attachments. Text differences are rendered in inline error messages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supports any platform that supports Swift.&lt;/strong&gt; Write snapshot tests for iOS, Linux, macOS, and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SceneKit, SpriteKit, and WebKit support.&lt;/strong&gt; Most snapshot testing libraries don&#39;t support these view subclasses.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Codable&lt;/code&gt; support&lt;/strong&gt;. Snapshot encodable data structures into their JSON and property list representations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom diff tool integration&lt;/strong&gt;. Configure failure messages to print diff commands for &lt;a href=&quot;https://kaleidoscope.app&quot;&gt;Kaleidoscope&lt;/a&gt; or your diff tool of choice. &lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;SnapshotTesting.diffToolCommand = { &quot;ksdiff \($0) \($1)&quot; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Plug-ins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/cashapp/AccessibilitySnapshot&quot;&gt;AccessibilitySnapshot&lt;/a&gt; adds easy regression testing for iOS accessibility.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Sherlouk/AccessibilitySnapshotColorBlindness&quot;&gt;AccessibilitySnapshotColorBlindness&lt;/a&gt; adds snapshot strategies for color blindness simulation on iOS views, view controllers and images.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/SebastianOsinski/GRDBSnapshotTesting&quot;&gt;GRDBSnapshotTesting&lt;/a&gt; adds snapshot strategy for testing SQLite database migrations made with &lt;a href=&quot;https://github.com/groue/GRDB.swift&quot;&gt;GRDB&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/tahirmt/Nimble-SnapshotTesting&quot;&gt;Nimble-SnapshotTesting&lt;/a&gt; adds &lt;a href=&quot;https://github.com/Quick/Nimble&quot;&gt;Nimble&lt;/a&gt; matchers for SnapshotTesting to be used by Swift Package Manager.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/BarredEwe/Prefire&quot;&gt;Prefire&lt;/a&gt; generating Snapshot Tests via &lt;a href=&quot;https://github.com/apple/swift-package-manager/raw/main/Documentation/Plugins.md&quot;&gt;Swift Package Plugins&lt;/a&gt; using SwiftUI &lt;code&gt;Preview&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/doordash-oss/swiftui-preview-snapshots&quot;&gt;PreviewSnapshots&lt;/a&gt; share &lt;code&gt;View&lt;/code&gt; configurations between SwiftUI Previews and snapshot tests and generate several snapshots with a single test assertion.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/pointfreeco/swift-html&quot;&gt;swift-html&lt;/a&gt; is a Swift DSL for type-safe, extensible, and transformable HTML documents and includes an &lt;code&gt;HtmlSnapshotTesting&lt;/code&gt; module to snapshot test its HTML documents.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Killectro/swift-snapshot-testing-nimble&quot;&gt;swift-snapshot-testing-nimble&lt;/a&gt; adds &lt;a href=&quot;https://github.com/Quick/Nimble&quot;&gt;Nimble&lt;/a&gt; matchers for SnapshotTesting.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Sherlouk/swift-snapshot-testing-stitch/&quot;&gt;swift-snapshot-testing-stitch&lt;/a&gt; adds the ability to stitch multiple UIView&#39;s or UIViewController&#39;s together in a single test.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/tahirmt/swift-snapshot-testing-dump&quot;&gt;SnapshotTestingDump&lt;/a&gt; Adds support to use &lt;a href=&quot;https://github.com/pointfreeco/swift-custom-dump/&quot;&gt;swift-custom-dump&lt;/a&gt; by using &lt;code&gt;customDump&lt;/code&gt; strategy for &lt;code&gt;Any&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/alexey1312/SnapshotTestingHEIC&quot;&gt;SnapshotTestingHEIC&lt;/a&gt; adds image support using the HEIC storage format which reduces file sizes in comparison to PNG.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/gregersson/swift-snapshot-testing-vision&quot;&gt;SnapshotVision&lt;/a&gt; adds snapshot strategy for text recognition on views and images. Uses Apples Vision framework.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Have you written your own SnapshotTesting plug-in? &lt;a href=&quot;https://github.com/pointfreeco/swift-snapshot-testing/edit/master/README.md&quot;&gt;Add it here&lt;/a&gt; and submit a pull request!&lt;/p&gt; 
&lt;h2&gt;Related Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/uber/ios-snapshot-test-case/&quot;&gt;&lt;code&gt;iOSSnapshotTestCase&lt;/code&gt;&lt;/a&gt; helped introduce screen shot testing to a broad audience in the iOS community. Experience with it inspired the creation of this library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://jestjs.io&quot;&gt;Jest&lt;/a&gt; brought generalized snapshot testing to the JavaScript community with a polished user experience. Several features of this library (diffing, automatically capturing new snapshots) were directly influenced.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;p&gt;SnapshotTesting was designed with &lt;a href=&quot;https://www.pointfree.co/episodes/ep39-witness-oriented-library-design&quot;&gt;witness-oriented programming&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This concept (and more) are explored thoroughly in a series of episodes on &lt;a href=&quot;https://www.pointfree.co&quot;&gt;Point-Free&lt;/a&gt;, a video series exploring functional programming and Swift hosted by &lt;a href=&quot;https://twitter.com/mbrandonw&quot;&gt;Brandon Williams&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/stephencelis&quot;&gt;Stephen Celis&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Witness-oriented programming and the design of this library was explored in the following &lt;a href=&quot;https://www.pointfree.co&quot;&gt;Point-Free&lt;/a&gt; episodes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep33-protocol-witnesses-part-1&quot;&gt;Episode 33&lt;/a&gt;: Protocol Witnesses: Part 1&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep34-protocol-witnesses-part-1&quot;&gt;Episode 34&lt;/a&gt;: Protocol Witnesses: Part 2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep35-advanced-protocol-witnesses-part-1&quot;&gt;Episode 35&lt;/a&gt;: Advanced Protocol Witnesses: Part 1&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep36-advanced-protocol-witnesses-part-2&quot;&gt;Episode 36&lt;/a&gt;: Advanced Protocol Witnesses: Part 2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep37-protocol-oriented-library-design-part-1&quot;&gt;Episode 37&lt;/a&gt;: Protocol-Oriented Library Design: Part 1&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep38-protocol-oriented-library-design-part-2&quot;&gt;Episode 38&lt;/a&gt;: Protocol-Oriented Library Design: Part 2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep39-witness-oriented-library-design&quot;&gt;Episode 39&lt;/a&gt;: Witness-Oriented Library Design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep40-async-functional-refactoring&quot;&gt;Episode 40&lt;/a&gt;: Async Functional Refactoring&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/episodes/ep41-a-tour-of-snapshot-testing&quot;&gt;Episode 41&lt;/a&gt;: A Tour of Snapshot Testing 🆓&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href=&quot;https://www.pointfree.co/episodes/ep41-a-tour-of-snapshot-testing&quot;&gt; &lt;img alt=&quot;video poster image&quot; src=&quot;https://d3rccdn33rt8ze.cloudfront.net/episodes/0041.jpeg&quot; width=&quot;480&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is released under the MIT license. See &lt;a href=&quot;https://raw.githubusercontent.com/pointfreeco/swift-snapshot-testing/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gonzalezreal/swift-markdown-ui</title>
      <link>https://github.com/gonzalezreal/swift-markdown-ui</link>
      <description>&lt;p&gt;Display and customize Markdown text in SwiftUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MarkdownUI&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/gonzalezreal/MarkdownUI/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/gonzalezreal/MarkdownUI/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2Fswift-markdown-ui%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgonzalezreal%2Fswift-markdown-ui%2Fbadge%3Ftype%3Dplatforms&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Display and customize Markdown text in SwiftUI.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#overview&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#minimum-requirements&quot;&gt;Minimum requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#creating-a-markdown-view&quot;&gt;Creating a Markdown view&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#styling-markdown&quot;&gt;Styling Markdown&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#documentation&quot;&gt;Documentation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#related-content&quot;&gt;Related content&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#demo&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;MarkdownUI is a powerful library for displaying and customizing Markdown text in SwiftUI. It is compatible with the &lt;a href=&quot;https://github.github.com/gfm/&quot;&gt;GitHub Flavored Markdown Spec&lt;/a&gt; and can display images, headings, lists (including task lists), blockquotes, code blocks, tables, and thematic breaks, besides styled text and links.&lt;/p&gt; 
&lt;p&gt;MarkdownUI offers comprehensible theming features to customize how it displays Markdown text. You can use the built-in themes, create your own or override specific text and block styles.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownUI@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownUI~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Minimum requirements&lt;/h2&gt; 
&lt;p&gt;You can use MarkdownUI on the following platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 12.0+&lt;/li&gt; 
 &lt;li&gt;iOS 15.0+&lt;/li&gt; 
 &lt;li&gt;tvOS 15.0+&lt;/li&gt; 
 &lt;li&gt;watchOS 8.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some features, like displaying tables or multi-image paragraphs, require macOS 13.0+, iOS 16.0+, tvOS 16.0+, and watchOS 9.0+.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Creating a Markdown view&lt;/h3&gt; 
&lt;p&gt;A &lt;code&gt;Markdown&lt;/code&gt; view displays rich structured text using the Markdown syntax. It can display images, headings, lists (including task lists), blockquotes, code blocks, tables, and thematic breaks, besides styled text and links.&lt;/p&gt; 
&lt;p&gt;The simplest way of creating a &lt;code&gt;Markdown&lt;/code&gt; view is to pass a Markdown string to the &lt;code&gt;init(_:baseURL:imageBaseURL:)&lt;/code&gt; initializer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let markdownString = &quot;&quot;&quot;
  ## Try MarkdownUI

  **MarkdownUI** is a native Markdown renderer for SwiftUI
  compatible with the
  [GitHub Flavored Markdown Spec](https://github.github.com/gfm/).
  &quot;&quot;&quot;

var body: some View {
  Markdown(markdownString)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownString@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownString~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;A more convenient way to create a &lt;code&gt;Markdown&lt;/code&gt; view is by using the &lt;code&gt;init(baseURL:imageBaseURL:content:)&lt;/code&gt; initializer, which takes a Markdown content builder in which you can compose the view content, either by providing Markdown strings or by using an expressive domain-specific language.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;var body: some View {
  Markdown {
    &quot;&quot;&quot;
    ## Using a Markdown Content Builder
    Use Markdown strings or an expressive domain-specific language
    to build the content.
    &quot;&quot;&quot;
    Heading(.level2) {
      &quot;Try MarkdownUI&quot;
    }
    Paragraph {
      Strong(&quot;MarkdownUI&quot;)
      &quot; is a native Markdown renderer for SwiftUI&quot;
      &quot; compatible with the &quot;
      InlineLink(
        &quot;GitHub Flavored Markdown Spec&quot;,
        destination: URL(string: &quot;https://github.github.com/gfm/&quot;)!
      )
      &quot;.&quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownContentBuilder@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/MarkdownContentBuilder~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;You can also create a &lt;code&gt;MarkdownContent&lt;/code&gt; value in your model layer and later create a &lt;code&gt;Markdown&lt;/code&gt; view by passing the content value to the &lt;code&gt;init(_:baseURL:imageBaseURL:)&lt;/code&gt; initializer. The &lt;code&gt;MarkdownContent&lt;/code&gt; value pre-parses the Markdown string preventing the view from doing this step.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// Somewhere in the model layer
let content = MarkdownContent(&quot;You can try **CommonMark** [here](https://spec.commonmark.org/dingus/).&quot;)

// Later in the view layer
var body: some View {
  Markdown(self.model.content)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Styling Markdown&lt;/h3&gt; 
&lt;p&gt;Markdown views use a basic default theme to display the contents. For more information, read about the &lt;code&gt;basic&lt;/code&gt; theme.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  You can quote text with a `&amp;gt;`.

  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a
  &amp;gt; dog it&#39;s too dark to read.

  – Groucho Marx
  &quot;&quot;&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/BlockquoteContent@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/BlockquoteContent~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;You can customize the appearance of Markdown content by applying different themes using the &lt;code&gt;markdownTheme(_:)&lt;/code&gt; modifier. For example, you can apply one of the built-in themes, like &lt;code&gt;gitHub&lt;/code&gt;, to either a Markdown view or a view hierarchy that contains Markdown views.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  You can quote text with a `&amp;gt;`.

  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a
  &amp;gt; dog it&#39;s too dark to read.

  – Groucho Marx
  &quot;&quot;&quot;
}
.markdownTheme(.gitHub)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/GitHubBlockquote@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/GitHubBlockquote~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;To override a specific text style from the current theme, use the &lt;code&gt;markdownTextStyle(_:textStyle:)&lt;/code&gt; modifier. The following example shows how to override the &lt;code&gt;code&lt;/code&gt; text style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  Use `git status` to list all new or modified files
  that haven&#39;t yet been committed.
  &quot;&quot;&quot;
}
.markdownTextStyle(\.code) {
  FontFamilyVariant(.monospaced)
  FontSize(.em(0.85))
  ForegroundColor(.purple)
  BackgroundColor(.purple.opacity(0.25))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomInlineCode@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomInlineCode~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;You can also use the &lt;code&gt;markdownBlockStyle(_:body:)&lt;/code&gt; modifier to override a specific block style. For example, you can override only the &lt;code&gt;blockquote&lt;/code&gt; block style, leaving other block styles untouched.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;Markdown {
  &quot;&quot;&quot;
  You can quote text with a `&amp;gt;`.

  &amp;gt; Outside of a dog, a book is man&#39;s best friend. Inside of a
  &amp;gt; dog it&#39;s too dark to read.

  – Groucho Marx
  &quot;&quot;&quot;
}
.markdownBlockStyle(\.blockquote) { configuration in
  configuration.label
    .padding()
    .markdownTextStyle {
      FontCapsVariant(.lowercaseSmallCaps)
      FontWeight(.semibold)
      BackgroundColor(nil)
    }
    .overlay(alignment: .leading) {
      Rectangle()
        .fill(Color.teal)
        .frame(width: 4)
    }
    .background(Color.teal.opacity(0.5))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomBlockquote@2x.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Sources/MarkdownUI/Documentation.docc/Resources/CustomBlockquote~dark@2x.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Another way to customize the appearance of Markdown content is to create your own theme. To create a theme, start by instantiating an empty &lt;code&gt;Theme&lt;/code&gt; and chain together the different text and block styles in a single expression.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;extension Theme {
  static let fancy = Theme()
    .code {
      FontFamilyVariant(.monospaced)
      FontSize(.em(0.85))
    }
    .link {
      ForegroundColor(.purple)
    }
    // More text styles...
    .paragraph { configuration in
      configuration.label
        .relativeLineSpacing(.em(0.25))
        .markdownMargin(top: 0, bottom: 16)
    }
    .listItem { configuration in
      configuration.label
        .markdownMargin(top: .em(0.25))
    }
    // More block styles...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://swiftpackageindex.com&quot;&gt;Swift Package Index&lt;/a&gt; kindly hosts the online documentation for all versions, available here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/main/documentation/markdownui&quot;&gt;main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/2.1.0/documentation/markdownui&quot;&gt;2.1.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/gonzalezreal/swift-markdown-ui/2.0.2/documentation/markdownui&quot;&gt;2.0.2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related content&lt;/h3&gt; 
&lt;p&gt;You can learn more about MarkdownUI by referring to the following articles and third-party resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gonzalezreal.github.io/2023/02/18/better-markdown-rendering-in-swiftui.html&quot;&gt;Better Markdown Rendering in SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/gVy06iJQFWQ&quot;&gt;Unlock the Power of Markdown in SwiftUI with THIS Hack!&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/Rebeloper&quot;&gt;@Rebeloper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;MarkdownUI comes with a few more tricks on the sleeve. You can explore the &lt;a href=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/&quot;&gt;companion demo project&lt;/a&gt; and discover its complete set of capabilities.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/Screenshot.png#gh-light-mode-only&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/Examples/Demo/Screenshot~dark.png#gh-dark-mode-only&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Adding MarkdownUI to a Swift package&lt;/h3&gt; 
&lt;p&gt;To use MarkdownUI in a Swift Package Manager project, add the following line to the dependencies in your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.package(url: &quot;https://github.com/gonzalezreal/swift-markdown-ui&quot;, from: &quot;2.0.2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include &lt;code&gt;&quot;MarkdownUI&quot;&lt;/code&gt; as a dependency for your executable target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.target(name: &quot;&amp;lt;target&amp;gt;&quot;, dependencies: [
  .product(name: &quot;MarkdownUI&quot;, package: &quot;swift-markdown-ui&quot;)
]),
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, add &lt;code&gt;import MarkdownUI&lt;/code&gt; to your source code.&lt;/p&gt; 
&lt;h3&gt;Adding MarkdownUI to an Xcode project&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, select &lt;strong&gt;Add Packages…&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Enter &lt;code&gt;https://github.com/gonzalezreal/swift-markdown-ui&lt;/code&gt; into the &lt;em&gt;Search or Enter Package URL&lt;/em&gt; search field&lt;/li&gt; 
 &lt;li&gt;Link &lt;strong&gt;MarkdownUI&lt;/strong&gt; to your application target&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>ml-explore/mlx-swift-examples</title>
      <link>https://github.com/ml-explore/mlx-swift-examples</link>
      <description>&lt;p&gt;Examples using MLX Swift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Developers can use these examples in their own programs -- just import the swift package!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/mlxlmcommon/porting&quot;&gt;Porting and implementing models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/mlxlmcommon&quot;&gt;MLXLLMCommon&lt;/a&gt; -- common API for LLM and VLM&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/mlxllm&quot;&gt;MLXLLM&lt;/a&gt; -- large language model example implementations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/mlxvlm&quot;&gt;MLXVLM&lt;/a&gt; -- vision language model example implementations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/mlxembedders&quot;&gt;MLXEmbedders&lt;/a&gt; -- popular Encoders / Embedding models example implementations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/stablediffusion&quot;&gt;StableDiffusion&lt;/a&gt; -- SDXL Turbo and Stable Diffusion mdeol example implementations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift-examples/main/documentation/mlxmnist&quot;&gt;MLXMNIST&lt;/a&gt; -- MNIST implementation for all your digit recognition needs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;MLX Swift Examples&lt;/h1&gt; 
&lt;p&gt;Example &lt;a href=&quot;https://github.com/ml-explore/mlx-swift&quot;&gt;MLX Swift&lt;/a&gt; programs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Applications/MNISTTrainer/README.md&quot;&gt;MNISTTrainer&lt;/a&gt;: An example that runs on both iOS and macOS that downloads MNIST training data and trains a &lt;a href=&quot;https://en.wikipedia.org/wiki/LeNet&quot;&gt;LeNet&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Applications/LLMEval/README.md&quot;&gt;LLMEval&lt;/a&gt;: An example that runs on both iOS and macOS that downloads an LLM and tokenizer from Hugging Face and generates text from a given prompt.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Applications/VLMEval/README.md&quot;&gt;VLMEval&lt;/a&gt;: An example that runs on iOS, macOS and visionOS to download a VLM and tokenizer from Hugging Face and analyzes the given image and describe it in text.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Applications/MLXChatExample/README.md&quot;&gt;MLXChatExample&lt;/a&gt;: An example chat app that runs on both iOS and macOS that supports LLMs and VLMs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Tools/LinearModelTraining/README.md&quot;&gt;LinearModelTraining&lt;/a&gt;: An example that trains a simple linear model.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Applications/StableDiffusionExample/README.md&quot;&gt;StableDiffusionExample&lt;/a&gt;: An example that runs on both iOS and macOS that downloads a stable diffusion model from Hugging Face and and generates an image from a given prompt.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Tools/llm-tool/README.md&quot;&gt;llm-tool&lt;/a&gt;: A command line tool for generating text using a variety of LLMs available on the Hugging Face hub.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Tools/ExampleLLM/README.md&quot;&gt;ExampleLLM&lt;/a&gt;: A command line tool using the simplified API to interact with LLMs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Tools/image-tool/README.md&quot;&gt;image-tool&lt;/a&gt;: A command line tool for generating images using a stable diffusion model from Hugging Face.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Tools/mnist-tool/README.md&quot;&gt;mnist-tool&lt;/a&gt;: A command line tool for training a a LeNet on MNIST.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interacting with LLMs&lt;/h2&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/ml-explore/mlx-swift-examples/main/Libraries/MLXLMCommon&quot;&gt;MLXLMCommon&lt;/a&gt;. You can easily use a wide variety of open weight LLM and VLMs in your code. You can use this simplified API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let model = try await loadModel(id: &quot;mlx-community/Qwen3-4B-4bit&quot;)
let session = ChatSession(model)
print(try await session.respond(to: &quot;What are two things to see in San Francisco?&quot;)
print(try await session.respond(to: &quot;How about a great place to eat?&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the underlying API to control everything aspect of the evaluation.&lt;/p&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;p&gt;The application and command line tool examples can be run from Xcode or from the command line:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./mlx-run llm-tool --prompt &quot;swift programming language&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: &lt;code&gt;mlx-run&lt;/code&gt; is a shell script that uses &lt;code&gt;xcode&lt;/code&gt; command line tools to locate the built binaries. It is equivalent to running from Xcode itself.&lt;/p&gt; 
&lt;p&gt;See also:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com/ml-explore/mlx-swift/main/documentation/mlx/troubleshooting&quot;&gt;MLX troubleshooting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation of libraries&lt;/h2&gt; 
&lt;p&gt;The MLXLLM, MLXVLM, MLXLMCommon, MLXMNIST, MLXEmbedders, and StableDiffusion libraries in the example repo are available as Swift Packages.&lt;/p&gt; 
&lt;p&gt;Add the following dependency to your Package.swift&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.package(url: &quot;https://github.com/ml-explore/mlx-swift-examples/&quot;, branch: &quot;main&quot;),
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then add one or more libraries to the target as a dependency:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;.target(
    name: &quot;YourTargetName&quot;,
    dependencies: [
        .product(name: &quot;MLXLLM&quot;, package: &quot;mlx-swift-examples&quot;)
    ]),
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, add &lt;code&gt;https://github.com/ml-explore/mlx-swift-examples/&lt;/code&gt; to the &lt;code&gt;Project Dependencies&lt;/code&gt; and set the &lt;code&gt;Dependency Rule&lt;/code&gt; to &lt;code&gt;Branch&lt;/code&gt; and &lt;code&gt;main&lt;/code&gt; in Xcode.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>getsentry/sentry-cocoa</title>
      <link>https://github.com/getsentry/sentry-cocoa</link>
      <description>&lt;p&gt;The official Sentry SDK for iOS, tvOS, macOS, watchOS.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://sentry.io/?utm_source=github&amp;amp;utm_medium=logo&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://sentry-brand.storage.googleapis.com/github-banners/github-sdk-cocoa.jpg&quot; alt=&quot;Sentry for Apple&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;Bad software is everywhere, and we&#39;re tired of it. Sentry is on a mission to help developers write better software faster, so we can get back to enjoying technology. If you want to join us &lt;a href=&quot;https://sentry.io/careers/&quot;&gt;&lt;kbd&gt;&lt;strong&gt;Check out our open positions&lt;/strong&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;Official Sentry SDK for iOS / tvOS / macOS / watchOS &lt;sup&gt;(1)&lt;/sup&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/getsentry/sentry-cocoa/actions/workflows/build.yml?query=branch%3Amain&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/getsentry/sentry-cocoa/build.yml?branch=main&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/getsentry/sentry-cocoa&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/getsentry/sentry-cocoa/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/Sentry&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/Sentry.svg?sanitize=true&quot; alt=&quot;CocoaPods compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot; alt=&quot;Carthage compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://swift.org/package-manager&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/spm-compatible-brightgreen.svg?style=flat&quot; alt=&quot;SwiftPM compatible&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/cocoapods/p/Sentry.svg?style=flat&quot; alt=&quot;platforms&quot; /&gt; &lt;a href=&quot;https://swiftpackageindex.com/getsentry/sentry-cocoa&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fswiftpackageindex.com%2Fapi%2Fpackages%2Fgetsentry%2Fsentry-cocoa%2Fbadge%3Ftype%3Dswift-versions&quot; alt=&quot;Swift Package Index&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com/invite/sentry&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/621778831602221064?logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&quot; alt=&quot;Discord Chat&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;SPM is the recommended way to include Sentry into your project, but we also support &lt;a href=&quot;https://cocoapods.org/pods/Sentry&quot;&gt;CocoaPods&lt;/a&gt; and Carthage, and provide pre-built XCFrameworks on &lt;a href=&quot;https://github.com/getsentry/sentry-cocoa/releases&quot;&gt;our GitHub Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Initialization&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Remember to call this as early in your application life cycle as possible&lt;/em&gt; Ideally in &lt;code&gt;applicationDidFinishLaunching&lt;/code&gt; in &lt;code&gt;AppDelegate&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;import Sentry

// ....

SentrySDK.start { options in
    options.dsn = &quot;___PUBLIC_DSN___&quot;
    options.debug = true // Helpful to see what&#39;s going on
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-objc&quot;&gt;@import Sentry;

// ....

[SentrySDK startWithConfigureOptions:^(SentryOptions *options) {
    options.dsn = @&quot;___PUBLIC_DSN___&quot;;
    options.debug = @YES; // Helpful to see what&#39;s going on
}];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information checkout the &lt;a href=&quot;https://docs.sentry.io/platforms/apple&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;(1)&lt;/sup&gt;limited symbolication support and no crash handling.&lt;/p&gt; 
&lt;h1&gt;Blog posts&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about/&quot;&gt;Mobile Vitals - Four Metrics Every Mobile Developer Should Care About&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://blog.sentry.io/2021/02/03/how-to-use-sentry-attachments-with-mobile-applications/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=sentry-cocoa&quot;&gt;How to use Sentry Attachments with Mobile Applications&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://blog.sentry.io/2021/02/16/close-the-loop-with-user-feedback/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=sentry-cocoa&quot;&gt;Close the Loop with User Feedback&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://blog.sentry.io/2021/03/30/a-sanity-listicle-for-mobile-developers/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=sentry-cocoa&quot;&gt;A Sanity Listicle for Mobile Developers&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.sentry.io/platforms/apple/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/documentation-sentry.io-green.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getsentry/sentry-cocoa/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/discussions/getsentry/sentry-cocoa.svg?sanitize=true&quot; alt=&quot;Discussions&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.com/invite/sentry&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/621778831602221064?logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&quot; alt=&quot;Discord Chat&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/sentry&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stack%20overflow-sentry-green.svg?sanitize=true&quot; alt=&quot;Stack Overflow&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getsentry/.github/raw/master/CODE_OF_CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code%20of%20conduct-sentry-green.svg?sanitize=true&quot; alt=&quot;Code of Conduct&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=getsentry&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/getsentry?label=getsentry&amp;amp;style=social&quot; alt=&quot;Twitter Follow&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>github/CopilotForXcode</title>
      <link>https://github.com/github/CopilotForXcode</link>
      <description>&lt;p&gt;Xcode extension for GitHub Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img align=&quot;center&quot; height=&quot;70&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/AppIcon.png&quot; /&gt; GitHub Copilot for Xcode&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/features/copilot&quot;&gt;GitHub Copilot&lt;/a&gt; is an AI pair programmer tool that helps you write code faster and smarter. Copilot for Xcode is an Xcode extension that provides inline coding suggestions as you type and a chat assistant to answer your coding questions.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;GitHub Copilot Chat provides suggestions to your specific coding tasks via chat. &lt;img alt=&quot;Chat of GitHub Copilot for Xcode&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/chat_dark.gif&quot; width=&quot;800&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Agent Mode&lt;/h2&gt; 
&lt;p&gt;GitHub Copilot Agent Mode provides AI-powered assistance that can understand and modify your codebase directly. With Agent Mode, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Get intelligent code edits applied directly to your files&lt;/li&gt; 
 &lt;li&gt;Run terminal commands and view their output without leaving the interface&lt;/li&gt; 
 &lt;li&gt;Search through your codebase to find relevant files and code snippets&lt;/li&gt; 
 &lt;li&gt;Create new files and directories as needed for your project&lt;/li&gt; 
 &lt;li&gt;Get assistance with enhanced context awareness across multiple files and folders&lt;/li&gt; 
 &lt;li&gt;Run Model Context Protocol (MCP) tools you configured to extend the capabilities&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Agent Mode integrates with Xcode&#39;s environment, creating a seamless development experience where Copilot can help implement features, fix bugs, and refactor code with comprehensive understanding of your project.&lt;/p&gt; 
&lt;h2&gt;Code Completion&lt;/h2&gt; 
&lt;p&gt;You can receive auto-complete type suggestions from GitHub Copilot either by starting to write the code you want to use, or by writing a natural language comment describing what you want the code to do. &lt;img alt=&quot;Code Completion of GitHub Copilot for Xcode&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/demo.gif&quot; width=&quot;800&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 12+&lt;/li&gt; 
 &lt;li&gt;Xcode 8+&lt;/li&gt; 
 &lt;li&gt;A GitHub Copilot subscription. To learn more, visit &lt;a href=&quot;https://github.com/features/copilot&quot;&gt;https://github.com/features/copilot&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install via &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install --cask github-copilot-for-xcode
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or download the &lt;code&gt;dmg&lt;/code&gt; from &lt;a href=&quot;https://github.com/github/CopilotForXcode/releases/latest/download/GitHubCopilotForXcode.dmg&quot;&gt;the latest release&lt;/a&gt;. Drag &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; into the &lt;code&gt;Applications&lt;/code&gt; folder:&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of opened dmg&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/dmg-open.png&quot; width=&quot;512&quot; /&gt; &lt;/p&gt; &lt;p&gt;Updates can be downloaded and installed by the app.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open the &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; application (from the &lt;code&gt;Applications&lt;/code&gt; folder). Accept the security warning.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of MacOS download permission request&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/macos-download-open-confirm.png&quot; width=&quot;350&quot; /&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A background item will be added to enable the GitHub Copilot for Xcode extension app to connect to the host app. This permission is usually automatically added when first launching the app.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of background item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/background-item.png&quot; width=&quot;370&quot; /&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Three permissions are required for GitHub Copilot for Xcode to function properly: &lt;code&gt;Background&lt;/code&gt;, &lt;code&gt;Accessibility&lt;/code&gt;, and &lt;code&gt;Xcode Source Editor Extension&lt;/code&gt;. For more details on why these permissions are required see &lt;a href=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/TROUBLESHOOTING.md&quot;&gt;TROUBLESHOOTING.md&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The first time the application is run the &lt;code&gt;Accessibility&lt;/code&gt; permission should be requested:&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of accessibility permission request&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/accessibility-permission-request.png&quot; width=&quot;529&quot; /&gt; &lt;/p&gt; &lt;p&gt;The &lt;code&gt;Xcode Source Editor Extension&lt;/code&gt; permission needs to be enabled manually. Click &lt;code&gt;Extension Permission&lt;/code&gt; from the &lt;code&gt;GitHub Copilot for Xcode&lt;/code&gt; application settings to open the System Preferences to the &lt;code&gt;Extensions&lt;/code&gt; panel. Select &lt;code&gt;Xcode Source Editor&lt;/code&gt; and enable &lt;code&gt;GitHub Copilot&lt;/code&gt;:&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of extension permission&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/extension-permission.png&quot; width=&quot;582&quot; /&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After granting the extension permission, open Xcode. Verify that the &lt;code&gt;Github Copilot&lt;/code&gt; menu is available and enabled under the Xcode &lt;code&gt;Editor&lt;/code&gt; menu. &lt;br /&gt;&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of Xcode Editor GitHub Copilot menu item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/xcode-menu.png&quot; width=&quot;648&quot; /&gt; &lt;/p&gt; &lt;p&gt;Keyboard shortcuts can be set for all menu items in the &lt;code&gt;Key Bindings&lt;/code&gt; section of Xcode preferences.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To sign into GitHub Copilot, click the &lt;code&gt;Sign in&lt;/code&gt; button in the settings application. This will open a browser window and copy a code to the clipboard. Paste the code into the GitHub login page and authorize the application.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of sign-in popup&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/device-code.png&quot; width=&quot;372&quot; /&gt; &lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To install updates, click &lt;code&gt;Check for Updates&lt;/code&gt; from the menu item or in the settings application.&lt;/p&gt; &lt;p&gt;After installing a new version, Xcode must be restarted to use the new version correctly.&lt;/p&gt; &lt;p&gt;New versions can also be installed from &lt;code&gt;dmg&lt;/code&gt; files downloaded from the releases page. When installing a new version via &lt;code&gt;dmg&lt;/code&gt;, the application must be run manually the first time to accept the downloaded from the internet warning.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To avoid confusion, we recommend disabling &lt;code&gt;Predictive code completion&lt;/code&gt; under &lt;code&gt;Xcode&lt;/code&gt; &amp;gt; &lt;code&gt;Preferences&lt;/code&gt; &amp;gt; &lt;code&gt;Text Editing&lt;/code&gt; &amp;gt; &lt;code&gt;Editing&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Press &lt;code&gt;tab&lt;/code&gt; to accept the first line of a suggestion, hold &lt;code&gt;option&lt;/code&gt; to view the full suggestion, and press &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt; to accept the full suggestion.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to use Chat&lt;/h2&gt; 
&lt;p&gt;Open Copilot Chat in GitHub Copilot.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open via the Xcode menu &lt;code&gt;Xcode -&amp;gt; Editor -&amp;gt; GitHub Copilot -&amp;gt; Open Chat&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of Xcode Editor GitHub Copilot menu item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/xcode-menu_dark.png&quot; width=&quot;648&quot; /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open via GitHub Copilot app menu &lt;code&gt;Open Chat&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Screenshot of GitHub Copilot menu item&quot; src=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Docs/copilot-menu_dark.png&quot; width=&quot;244&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;How to use Code Completion&lt;/h2&gt; 
&lt;p&gt;Press &lt;code&gt;tab&lt;/code&gt; to accept the first line of a suggestion, hold &lt;code&gt;option&lt;/code&gt; to view the full suggestion, and press &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt; to accept the full suggestion.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT open source license. Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; for the full terms.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;We follow responsible practices in accordance with our &lt;a href=&quot;https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement&quot;&gt;Privacy Statement&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To get the latest security fixes, please use the latest version of the GitHub Copilot for Xcode.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;We’d love to get your help in making GitHub Copilot better! If you have feedback or encounter any problems, please reach out on our &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/copilot&quot;&gt;Feedback forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thank you to @intitni for creating the original project that this is based on.&lt;/p&gt; 
&lt;p&gt;Attributions can be found under About when running the app or in &lt;a href=&quot;https://raw.githubusercontent.com/github/CopilotForXcode/main/Copilot%20for%20Xcode/Credits.rtf&quot;&gt;Credits.rtf&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vapor/vapor</title>
      <link>https://github.com/vapor/vapor</link>
      <description>&lt;p&gt;💧 A server-side Swift HTTP web framework.&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://discord.gg/vapor&quot;&gt; &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1342803/75634175-4876d680-5bd9-11ea-90d6-12c7b6a9ee3f.png&quot; alt=&quot;Vapor&quot; /&gt;&lt;/p&gt; &lt;/a&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://docs.vapor.codes/4.0/&quot;&gt; &lt;img src=&quot;https://design.vapor.codes/images/readthedocs.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/vapor&quot;&gt; &lt;img src=&quot;https://design.vapor.codes/images/discordchat.svg?sanitize=true&quot; alt=&quot;Team Chat&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/vapor/vapor/main/LICENSE&quot;&gt; &lt;img src=&quot;https://design.vapor.codes/images/mitlicense.svg?sanitize=true&quot; alt=&quot;MIT License&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/vapor/vapor/actions/workflows/test.yml&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/vapor/vapor/test.yml?event=push&amp;amp;style=plastic&amp;amp;logo=github&amp;amp;label=tests&amp;amp;logoColor=%23ccc&quot; alt=&quot;Continuous Integration&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/vapor/vapor&quot;&gt; &lt;img src=&quot;https://img.shields.io/codecov/c/github/vapor/vapor?style=plastic&amp;amp;logo=codecov&amp;amp;label=codecov&quot; alt=&quot;Code Coverage&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://swift.org&quot;&gt; &lt;img src=&quot;https://design.vapor.codes/images/swift57up.svg?sanitize=true&quot; alt=&quot;Swift 5.7+&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://hachyderm.io/@codevapor&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/%20-@codevapor-6364f6.svg?style=plastic&amp;amp;logo=mastodon&amp;amp;labelColor=gray&amp;amp;logoColor=%239394ff&quot; alt=&quot;Mastodon&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;Vapor is an HTTP web framework for Swift. It provides a beautifully expressive and easy-to-use foundation for your next website, API, or cloud project.&lt;/p&gt; 
&lt;p&gt;Take a look at some of the &lt;a href=&quot;https://github.com/vapor-community/awesome-vapor&quot;&gt;awesome stuff&lt;/a&gt; created with Vapor.&lt;/p&gt; 
&lt;h3&gt;💧 Community&lt;/h3&gt; 
&lt;p&gt;Join the welcoming community of fellow Vapor developers on &lt;a href=&quot;https://vapor.team&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🚀 Contributing&lt;/h3&gt; 
&lt;p&gt;To contribute a &lt;strong&gt;feature or idea&lt;/strong&gt; to Vapor, &lt;a href=&quot;https://github.com/vapor/vapor/issues/new&quot;&gt;create an issue&lt;/a&gt; explaining your idea or bring it up on &lt;a href=&quot;https://vapor.team&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you find a &lt;strong&gt;bug&lt;/strong&gt;, please &lt;a href=&quot;https://github.com/vapor/vapor/issues/new&quot;&gt;create an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you find a &lt;strong&gt;security vulnerability&lt;/strong&gt;, please contact &lt;a href=&quot;mailto:security@vapor.codes&quot;&gt;security@vapor.codes&lt;/a&gt; as soon as possible.&lt;/p&gt; 
&lt;h3&gt;💛 Sponsors&lt;/h3&gt; 
&lt;p&gt;Support Vapor&#39;s development by &lt;a href=&quot;https://github.com/sponsors/vapor&quot;&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://www.brokenhands.io&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/9938337/137103192-21f99099-6aaa-4cc1-a1a7-21ee767a72d1.png&quot; height=&quot;100px&quot; alt=&quot;Broken Hands&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://www.emergetools.com&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/9938337/265658253-cb37d2fa-3251-497f-8eeb-ba7c95af373b.svg?sanitize=true&quot; height=&quot;100px&quot; alt=&quot;Emerge Tools&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://github.com/MrLotU&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/1342803/79599312-426a8580-80b3-11ea-89b3-8b2722485e37.png&quot; height=&quot;100px&quot; alt=&quot;Jari&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://github.com/DonutDane&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/9938337/265657642-6b6b1705-9611-4547-8e2f-a3773fda87c6.png&quot; height=&quot;100px&quot; alt=&quot;Donut Dane&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://macstadium.com&quot;&gt; &lt;img src=&quot;https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png&quot; height=&quot;100px&quot; alt=&quot;MacStadium&quot; /&gt; &lt;/a&gt; 
&lt;h3&gt;💚 Backers&lt;/h3&gt; 
&lt;p&gt;Support Vapor&#39;s development by &lt;a href=&quot;https://github.com/sponsors/vapor&quot;&gt;becoming a backer&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- backers --&gt;
&lt;a href=&quot;https://github.com/slashmo&quot;&gt;&lt;img src=&quot;https://github.com/slashmo.png&quot; width=&quot;60px&quot; alt=&quot;Moritz Lang&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/maartene&quot;&gt;&lt;img src=&quot;https://github.com/maartene.png&quot; width=&quot;60px&quot; alt=&quot;Maarten Engels&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/tkrajacic&quot;&gt;&lt;img src=&quot;https://github.com/tkrajacic.png&quot; width=&quot;60px&quot; alt=&quot;Thomas Krajacic&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jessetipton&quot;&gt;&lt;img src=&quot;https://github.com/jessetipton.png&quot; width=&quot;60px&quot; alt=&quot;Jesse Tipton&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/steve-h&quot;&gt;&lt;img src=&quot;https://github.com/steve-h.png&quot; width=&quot;60px&quot; alt=&quot;Steve Hume&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mikkelu&quot;&gt;&lt;img src=&quot;https://github.com/mikkelu.png&quot; width=&quot;60px&quot; alt=&quot;Mikkel Ulstrup&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/g-Off&quot;&gt;&lt;img src=&quot;https://github.com/g-Off.png&quot; width=&quot;60px&quot; alt=&quot;Geoffrey Foster&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/PSchmiedmayer&quot;&gt;&lt;img src=&quot;https://github.com/PSchmiedmayer.png&quot; width=&quot;60px&quot; alt=&quot;Paul Schmiedmayer&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/ScottRobbins&quot;&gt;&lt;img src=&quot;https://github.com/ScottRobbins.png&quot; width=&quot;60px&quot; alt=&quot;Scott Robbins&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/finestructure&quot;&gt;&lt;img src=&quot;https://github.com/finestructure.png&quot; width=&quot;60px&quot; alt=&quot;Sven A. Schmidt&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/SpencerCurtis&quot;&gt;&lt;img src=&quot;https://github.com/SpencerCurtis.png&quot; width=&quot;60px&quot; alt=&quot;Spencer Curtis&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rausnitz&quot;&gt;&lt;img src=&quot;https://github.com/rausnitz.png&quot; width=&quot;60px&quot; alt=&quot;Zach Rausnitz&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/masterofinsanity&quot;&gt;&lt;img src=&quot;https://github.com/masterofinsanity.png&quot; width=&quot;60px&quot; alt=&quot;Tim „Timinator“ Kretzschmar&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/klaas&quot;&gt;&lt;img src=&quot;https://github.com/klaas.png&quot; width=&quot;60px&quot; alt=&quot;Klaas&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Andrewangeta&quot;&gt;&lt;img src=&quot;https://github.com/Andrewangeta.png&quot; width=&quot;60px&quot; alt=&quot;Andrew Edwards&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/addli&quot;&gt;&lt;img src=&quot;https://github.com/addli.png&quot; width=&quot;60px&quot; alt=&quot;+Li, Inc.&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/doozMen&quot;&gt;&lt;img src=&quot;https://github.com/doozMen.png&quot; width=&quot;60px&quot; alt=&quot;Stijn Willems&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/bitwit&quot;&gt;&lt;img src=&quot;https://github.com/bitwit.png&quot; width=&quot;60px&quot; alt=&quot;Kyle Newsome&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/viaaurelia&quot;&gt;&lt;img src=&quot;https://github.com/viaaurelia.png&quot; width=&quot;60px&quot; alt=&quot;Via Aurelia Solutions&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kkiermasz&quot;&gt;&lt;img src=&quot;https://github.com/kkiermasz.png&quot; width=&quot;60px&quot; alt=&quot;Jakub Kiermasz&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/bdrelling&quot;&gt;&lt;img src=&quot;https://github.com/bdrelling.png&quot; width=&quot;60px&quot; alt=&quot;Brian Drelling&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mayondigital&quot;&gt;&lt;img src=&quot;https://github.com/mayondigital.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mattesmohr&quot;&gt;&lt;img src=&quot;https://github.com/mattesmohr.png&quot; width=&quot;60px&quot; alt=&quot;Mattes Mohr&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/scibidoo&quot;&gt;&lt;img src=&quot;https://github.com/scibidoo.png&quot; width=&quot;60px&quot; alt=&quot;Jamie&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/GalenRhodes&quot;&gt;&lt;img src=&quot;https://github.com/GalenRhodes.png&quot; width=&quot;60px&quot; alt=&quot;Galen Rhodes&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/litmaps&quot;&gt;&lt;img src=&quot;https://github.com/litmaps.png&quot; width=&quot;60px&quot; alt=&quot;Litmaps&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/davdroman&quot;&gt;&lt;img src=&quot;https://github.com/davdroman.png&quot; width=&quot;60px&quot; alt=&quot;David Roman&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Strobocop&quot;&gt;&lt;img src=&quot;https://github.com/Strobocop.png&quot; width=&quot;60px&quot; alt=&quot;Brian Strobach&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/kishikawakatsumi&quot;&gt;&lt;img src=&quot;https://github.com/kishikawakatsumi.png&quot; width=&quot;60px&quot; alt=&quot;Kishikawa Katsumi&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mkll&quot;&gt;&lt;img src=&quot;https://github.com/mkll.png&quot; width=&quot;60px&quot; alt=&quot;Alex Sherbakov&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/getsidetrack&quot;&gt;&lt;img src=&quot;https://github.com/getsidetrack.png&quot; width=&quot;60px&quot; alt=&quot;Sidetrack&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/GregKarpati&quot;&gt;&lt;img src=&quot;https://github.com/GregKarpati.png&quot; width=&quot;60px&quot; alt=&quot;Greg Karpati&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/fananek&quot;&gt;&lt;img src=&quot;https://github.com/fananek.png&quot; width=&quot;60px&quot; alt=&quot;František Mikš&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jagreenwood&quot;&gt;&lt;img src=&quot;https://github.com/jagreenwood.png&quot; width=&quot;60px&quot; alt=&quot;Jeremy Greenwood&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/rayfix&quot;&gt;&lt;img src=&quot;https://github.com/rayfix.png&quot; width=&quot;60px&quot; alt=&quot;Ray Fix&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/micomiloloza&quot;&gt;&lt;img src=&quot;https://github.com/micomiloloza.png&quot; width=&quot;60px&quot; alt=&quot;Mićo Miloloža&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/awamser&quot;&gt;&lt;img src=&quot;https://github.com/awamser.png&quot; width=&quot;60px&quot; alt=&quot;Alan&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Suboptimierer&quot;&gt;&lt;img src=&quot;https://github.com/Suboptimierer.png&quot; width=&quot;60px&quot; alt=&quot;Jonas Sannewald&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/TapEnvy-us-LLC&quot;&gt;&lt;img src=&quot;https://github.com/TapEnvy-us-LLC.png&quot; width=&quot;60px&quot; alt=&quot;TapEnvy.us, LLC&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/JawadHF&quot;&gt;&lt;img src=&quot;https://github.com/JawadHF.png&quot; width=&quot;60px&quot; alt=&quot;Jawad&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/PARAIPAN9&quot;&gt;&lt;img src=&quot;https://github.com/PARAIPAN9.png&quot; width=&quot;60px&quot; alt=&quot;PARAIPAN SORIN&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KalynDavis&quot;&gt;&lt;img src=&quot;https://github.com/KalynDavis.png&quot; width=&quot;60px&quot; alt=&quot;Kalyn Davis&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/stevapple&quot;&gt;&lt;img src=&quot;https://github.com/stevapple.png&quot; width=&quot;60px&quot; alt=&quot;YR Chen&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/roncuevas&quot;&gt;&lt;img src=&quot;https://github.com/roncuevas.png&quot; width=&quot;60px&quot; alt=&quot;Aarón Martínez Cuevas&quot; /&gt;&lt;/a&gt;
&lt;!-- backers --&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/vapor/backer/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/0/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/1/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/2/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/3/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/4/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/5/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/6/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/7/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/8/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/9/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/10/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/10/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/11/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/11/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/12/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/12/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/13/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/13/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/14/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/14/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/15/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/15/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/16/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/16/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/17/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/17/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/18/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/18/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/19/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/19/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/20/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/20/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/21/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/21/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/22/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/22/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/23/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/23/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/24/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/24/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/25/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/25/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/26/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/26/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/27/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/27/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/28/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/28/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/29/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/29/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/30/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/30/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/31/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/31/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/32/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/32/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/33/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/33/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/34/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/34/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/35/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/35/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/36/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/36/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/37/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/37/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/38/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/38/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/39/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/39/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/40/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/40/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/41/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/41/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/42/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/42/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/43/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/43/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/44/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/44/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/45/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/45/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/46/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/46/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/47/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/47/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/vapor/backer/48/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/vapor/backer/48/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vsouza/awesome-ios</title>
      <link>https://github.com/vsouza/awesome-ios</link>
      <description>&lt;p&gt;A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://github.com/vsouza/awesome-ios/raw/master/header.png?raw=true&quot; alt=&quot;Awesome&quot; /&gt; 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;awesome&quot; src=&quot;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&quot; /&gt; &lt;a href=&quot;https://ko-fi.com/M4M3WPRD&quot;&gt;&lt;img width=&quot;110&quot; alt=&quot;Buy Me a Coffee&quot; src=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/buy_me_a_coffee.png&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;This project is supported by: &lt;a href=&quot;https://www.digitalocean.com/?utm_medium=opensource&amp;amp;utm_source=awesome-ios&quot;&gt; &lt;img src=&quot;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true&quot; width=&quot;201px&quot; /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt; 
&lt;h2&gt;Contributing and Collaborating&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://github.com/vsouza/awesome-ios/raw/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href=&quot;https://github.com/vsouza/awesome-ios/raw/master/CODE_OF_CONDUCT.md&quot;&gt;CODE-OF-CONDUCT&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#analytics&quot;&gt;Analytics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#app-routing&quot;&gt;App Routing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#apple-tv&quot;&gt;Apple TV&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#app-store&quot;&gt;App Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#architecture-patterns&quot;&gt;Architecture Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#arkit&quot;&gt;ARKit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#authentication&quot;&gt;Authentication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#blockchain&quot;&gt;Blockchain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#books&quot;&gt;Books&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#cache&quot;&gt;Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#charts&quot;&gt;Charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#code-injection&quot;&gt;Code Injection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#code-quality&quot;&gt;Code Quality&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#linter&quot;&gt;Linter&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#color&quot;&gt;Color&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#command-line&quot;&gt;Command Line&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#concurrency&quot;&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#core-data&quot;&gt;Core Data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#courses&quot;&gt;Courses&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#database&quot;&gt;Database&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#data-structures--algorithms&quot;&gt;Data Structures / Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#date--time&quot;&gt;Date &amp;amp; Time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#debugging&quot;&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#dependency--package-manager&quot;&gt;Dependency / Package Manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#deployment--distribution&quot;&gt;Deployment / Distribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#eventbus&quot;&gt;EventBus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#files&quot;&gt;Files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#functional-programming&quot;&gt;Functional Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#games&quot;&gt;Games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#gcd&quot;&gt;GCD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#gesture&quot;&gt;Gesture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#graphics&quot;&gt;Graphics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#hardware&quot;&gt;Hardware&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#bluetooth&quot;&gt;Bluetooth&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#camera&quot;&gt;Camera&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#force-touch&quot;&gt;Force Touch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#ibeacon&quot;&gt;iBeacon&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#location&quot;&gt;Location&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#other-hardware&quot;&gt;Other Hardware&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#layout&quot;&gt;Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#localization&quot;&gt;Localization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#machine-learning&quot;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#maps&quot;&gt;Maps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#math&quot;&gt;Math&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#media&quot;&gt;Media&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#audio&quot;&gt;Audio&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#gif&quot;&gt;GIF&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#image&quot;&gt;Image&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#media-processing&quot;&gt;Media Processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#pdf&quot;&gt;PDF&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#streaming&quot;&gt;Streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#video&quot;&gt;Video&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#messaging&quot;&gt;Messaging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#networking&quot;&gt;Networking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#newsletters&quot;&gt;Newsletters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#notifications&quot;&gt;Notifications&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#push-notifications&quot;&gt;Push Notifications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#push-notification-providers&quot;&gt;Push Notification Providers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#objective-c-runtime&quot;&gt;Objective-C Runtime&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#optimization&quot;&gt;Optimization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#other-awesome-lists&quot;&gt;Other Awesome Lists&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#parsing&quot;&gt;Parsing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#csv&quot;&gt;CSV&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#json&quot;&gt;JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#xml--html&quot;&gt;XML &amp;amp; HTML&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#other-parsing&quot;&gt;Other Parsing&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#passbook&quot;&gt;Passbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#payments&quot;&gt;Payments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#permissions&quot;&gt;Permissions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#podcasts&quot;&gt;Podcasts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#project-setup&quot;&gt;Project setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#prototyping&quot;&gt;Prototyping&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#rapid-development&quot;&gt;Rapid Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#reactive-programming&quot;&gt;Reactive Programming&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#react-like&quot;&gt;React-Like&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#reflection&quot;&gt;Reflection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#regex&quot;&gt;Regex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#sdk&quot;&gt;SDK&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#official&quot;&gt;Official&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#unofficial&quot;&gt;Unofficial&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#security&quot;&gt;Security&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#encryption&quot;&gt;Encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#keychain&quot;&gt;Keychain&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#server&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#style-guides&quot;&gt;Style Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#testing&quot;&gt;Testing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#tdd--bdd&quot;&gt;TDD / BDD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#ab-testing&quot;&gt;A/B Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#ui-testing&quot;&gt;UI Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#other-testing&quot;&gt;Other Testing&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#text&quot;&gt;Text&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#font&quot;&gt;Font&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#ui&quot;&gt;UI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#activity-indicator&quot;&gt;Activity Indicator&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#alert--action-sheet&quot;&gt;Alert &amp;amp; Action Sheet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#animation&quot;&gt;Animation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#transition&quot;&gt;Transition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#badge&quot;&gt;Badge&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#button&quot;&gt;Button&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#calendar&quot;&gt;Calendar&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#cards&quot;&gt;Cards&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#form--settings&quot;&gt;Form &amp;amp; Settings&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#keyboard&quot;&gt;Keyboard&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#label&quot;&gt;Label&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#login&quot;&gt;Login&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#menu&quot;&gt;Menu&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#navigation-bar&quot;&gt;Navigation Bar&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#pickerview&quot;&gt;PickerView&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#popup&quot;&gt;Popup&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#progress-view&quot;&gt;Progress View&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#pull-to-refresh&quot;&gt;Pull to Refresh&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#rating-stars&quot;&gt;Rating Stars&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#scrollview&quot;&gt;ScrollView&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#segmented-control&quot;&gt;Segmented Control&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#slider&quot;&gt;Slider&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#splash-view&quot;&gt;Splash View&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#status-bar&quot;&gt;Status Bar&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#stepper&quot;&gt;Stepper&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#switch&quot;&gt;Switch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#tab-bar&quot;&gt;Tab Bar&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#table-view--collection-view&quot;&gt;Table View / Collection View&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#table-view&quot;&gt;Table View&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#collection-view&quot;&gt;Collection View&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#expandable-cell&quot;&gt;Expandable Cell&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#header&quot;&gt;Header&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#placeholder&quot;&gt;Placeholder&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#collection-view-layout&quot;&gt;Collection View Layout&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#tag&quot;&gt;Tag&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#textfield--textview&quot;&gt;TextField &amp;amp; TextView&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#uipagecontrol&quot;&gt;UIPageControl&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#web-view&quot;&gt;Web View&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#utility&quot;&gt;Utility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#user-consent&quot;&gt;User Consent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#vr&quot;&gt;VR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#walkthrough--intro--tutorial&quot;&gt;Walkthrough / Intro / Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#websites&quot;&gt;Websites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#websocket&quot;&gt;Websocket&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#tutorials-and-keynotes&quot;&gt;Tutorials and Keynotes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#ui-templates&quot;&gt;UI Templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#xcode&quot;&gt;Xcode&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#extensions-xcode-8&quot;&gt;Extensions (Xcode 8+)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#themes&quot;&gt;Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#other-xcode&quot;&gt;Other Xcode&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Analytics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Analytics platforms, SDK&#39;s, error tracking and real-time answers about your app&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aptabase.com/for-swift&quot;&gt;Aptabase&lt;/a&gt; - Open Source, Privacy-First and Simple Analytics for Swift Apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://get.fabric.io&quot;&gt;Answers by Fabric&lt;/a&gt; - Answers gives you real-time insight into people’s experience in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugsnag.com/platforms/ios-crash-reporting&quot;&gt;Bugsnag&lt;/a&gt; - Error tracking with a free tier. Error reports include data on device, release, user, and allows arbitrary data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://count.ly&quot;&gt;Countly&lt;/a&gt; - Open source, mobile &amp;amp; web analytics, crash reports and push notifications platform for iOS &amp;amp; Android.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.devtodev.com/&quot;&gt;devtodev&lt;/a&gt; - Comprehensive analytics service that improves your project and saves time for product development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://embrace.io&quot;&gt;Embrace&lt;/a&gt; - Mobile observability, built on OpenTelemetry, to provide user-focused, reliable apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.emergetools.com&quot;&gt;Emerge Tools&lt;/a&gt; - Prevent app size &amp;amp; performance regressions on every pull request, get automated insights on how to improve.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://instabug.com&quot;&gt;Instabug&lt;/a&gt; - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matomo-org/matomo-sdk-ios&quot;&gt;Matomo&lt;/a&gt; - The MatomoTracker is an iOS, tvOS and macOS SDK for sending app analytics to a Matomo server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mixpanel.com/&quot;&gt;Mixpanel&lt;/a&gt; - Advanced analytics platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mocaplatform.com/features&quot;&gt;MOCA Analytics&lt;/a&gt; - Paid cross-platform analytics backend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/analytics-ios&quot;&gt;Segment&lt;/a&gt; - The hassle-free way to integrate analytics into any iOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sentry.io/&quot;&gt;Sentry&lt;/a&gt; - Sentry provides self-hosted and cloud-based error monitoring that helps all software teams discover, triage, and prioritize errors in real-time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shakebugs.com/&quot;&gt;Shake&lt;/a&gt; - In-app feedback and bug reporting tool. Fix app bugs up to 50x faster with detailed device data, repro steps, video recording, black box data, network requests and custom logging.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;App Routing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Elegant URL routing, navigation frameworks, deep links and more&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndreyPanov/ApplicationCoordinator&quot;&gt;ApplicationCoordinator&lt;/a&gt; - Coordinator is an object that handles navigation flow and shares flow’s handling for the next coordinator after switching on the next chain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKitz/Appz&quot;&gt;Appz&lt;/a&gt; - Easily launch and deeplink into external applications, falling back to web if not installed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bahn-X/swift-composable-navigator&quot;&gt;Composable Navigator&lt;/a&gt; - An open source library for building deep-linkable SwiftUI applications with composition, testing and ergonomics in mind&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/giginet/Crossroad&quot;&gt;Crossroad&lt;/a&gt; - Crossroad is an URL router focused on handling Custom URL Schemes. Using this, you can route multiple URL schemes and fetch arguments and parameters easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/button/DeepLinkKit&quot;&gt;DeepLinkKit&lt;/a&gt; - A splendid route-matching, block-based way to handle your deep links.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joeldev/JLRoutes&quot;&gt;JLRoutes&lt;/a&gt; - URL routing library for iOS with a simple block-based API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaksimKurpa/Linker&quot;&gt;Linker&lt;/a&gt; - Lightweight way to handle internal and external deeplinks for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SpectralDragon/LiteRoute&quot;&gt;LiteRoute&lt;/a&gt; - Easy transition between VIPER modules, implemented on pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/avito-tech/Marshroute&quot;&gt;Marshroute&lt;/a&gt; - Marshroute is an iOS Library for making your Routers simple but extremely powerful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ekazaev/route-composer&quot;&gt;RouteComposer&lt;/a&gt; - Library that helps to handle view controllers composition, routing and deeplinking tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freshOS/Router&quot;&gt;Router&lt;/a&gt; - Simple Navigation for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxFlow&quot;&gt;RxFlow&lt;/a&gt; - Navigation framework for iOS applications based on a Reactive Flow Coordinator pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wwt/SwiftCurrent&quot;&gt;SwiftCurrent&lt;/a&gt; - A library for managing complex workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skyline75489/SwiftRouter&quot;&gt;SwiftRouter&lt;/a&gt; - A URL Router for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devxoul/URLNavigator&quot;&gt;URLNavigator&lt;/a&gt; - Elegant URL Routing for Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Wasappli/WAAppRouting&quot;&gt;WAAppRouting&lt;/a&gt; - iOS routing done right. Handles both URL recognition and controller displaying with parsed parameters. All in one line, controller stack preserved automatically!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zuikyo/ZIKRouter&quot;&gt;ZIKRouter&lt;/a&gt; - An interface-oriented router for discovering modules and injecting dependencies with protocol in OC &amp;amp; Swift, iOS &amp;amp; macOS. Handles route in a type safe way.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;App Store&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Apple Guidelines and version notification libraries&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/app-store/review/#common-app-rejections&quot;&gt;Apple Review Guidelines&lt;/a&gt; - Highlighted some of the most common issues that cause apps to get rejected.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mobileaction.co&quot;&gt;Free App Store Optimization Tool&lt;/a&gt; - Lets you track your App Store visibility in terms of keywords and competitors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArtSabintsev/Siren&quot;&gt;Siren&lt;/a&gt; - Notify users when a new version of your app is available and prompt them to upgrade.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Apple TV&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;tvOS view controllers, wrappers, template managers and video players.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dcordero/FocusTvButton&quot;&gt;FocusTvButton&lt;/a&gt; - Light wrapper of UIButton that allows extra customization for tvOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PGSSoft/ParallaxView&quot;&gt;ParallaxView&lt;/a&gt; - iOS controls and extensions that add parallax effect to your application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adswerve/Swift-GA-Tracker-for-Apple-tvOS&quot;&gt;Swift-GA-Tracker-for-Apple-tvOS&lt;/a&gt; - Google Analytics tracker for Apple tvOS provides an easy integration of Google Analytics’ measurement protocol for Apple TV.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zattoo/TvOSCustomizableTableViewCell&quot;&gt;TvOSCustomizableTableViewCell&lt;/a&gt; - Light wrapper of UITableViewCell that allows extra customization for tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cgoldsby/TvOSMoreButton&quot;&gt;TvOSMoreButton&lt;/a&gt; - A basic tvOS button which truncates long text with &#39;... More&#39;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zattoo/TvOSPinKeyboard&quot;&gt;TvOSPinKeyboard&lt;/a&gt; - PIN keyboard for tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dcordero/TvOSScribble&quot;&gt;TvOSScribble&lt;/a&gt; - Handwriting numbers recognizer for Siri Remote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zattoo/TvOSSlider&quot;&gt;TvOSSlider&lt;/a&gt; - TvOSSlider is an implementation of UISlider for tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dcordero/TvOSTextViewer&quot;&gt;TvOSTextViewer&lt;/a&gt; - Light and scrollable view controller for tvOS to present blocks of text&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xced/XCDYouTubeKit&quot;&gt;XCDYouTubeKit&lt;/a&gt; - YouTube video player for iOS, tvOS and macOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture Patterns&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Clean architecture, Viper, MVVM, Reactive... choose your weapon.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nalexn/clean-architecture-swiftui&quot;&gt;Clean Architecture for SwiftUI + Combine&lt;/a&gt; - A demo project showcasing the production setup of the SwiftUI app with Clean Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sergdort/CleanArchitectureRxSwift&quot;&gt;CleanArchitectureRxSwift&lt;/a&gt; - Example of Clean Architecture of iOS app using RxSwift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tailec/ios-architecture&quot;&gt;ios-architecture&lt;/a&gt; - A collection of iOS architectures - MVC, MVVM, MVVM+RxSwift, VIPER, RIBs and many others.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MindorksOpenSource/iOS-Viper-Architecture&quot;&gt;iOS-Viper-Architecture&lt;/a&gt; - This repository contains a detailed sample app that implements VIPER architecture in iOS using libraries and frameworks like Alamofire, AlamofireImage, PKHUD, CoreData etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Brightify/Reactant&quot;&gt;Reactant&lt;/a&gt; - Reactant is a reactive architecture for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Spinners/Spin.Swift&quot;&gt;Spin&lt;/a&gt; - A universal implementation of a Feedback Loop system for RxSwift, ReactiveSwift and Combine&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codytwinton/SwiftyVIPER&quot;&gt;SwiftyVIPER&lt;/a&gt; - Makes implementing VIPER architecture much easier and cleaner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BendingSpoons/tempura-swift&quot;&gt;Tempura&lt;/a&gt; - A holistic approach to iOS development, inspired by Redux and MVVM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pointfreeco/swift-composable-architecture&quot;&gt;The Composable Architecture&lt;/a&gt; - The Composable Architecture is a library for building applications in a consistent and understandable way, with composition, testing, and ergonomics in mind.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kaakati/VIPER-Module-Generator&quot;&gt;VIPER Module Generator&lt;/a&gt; - A Clean VIPER Modules Generator with comments and predfined functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ferranabello/Viperit&quot;&gt;Viperit&lt;/a&gt; - Viper Framework for iOS. Develop an app following VIPER architecture in an easy way. Written and tested in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ARKit&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Library and tools to help you build unparalleled augmented reality experiences&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philipturner/ARHeadsetKit&quot;&gt;ARHeadsetKit&lt;/a&gt; - High-level framework for using $5 Google Cardboard to replicate Microsoft Hololens.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ProjectDent/ARKit-CoreLocation&quot;&gt;ARKit-CoreLocation&lt;/a&gt; - Combines the high accuracy of AR with the scale of GPS data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kboy-silvergym/ARKit-Emperor&quot;&gt;ARKit Emperor&lt;/a&gt; - The Emperor give you the most practical ARKit samples ever.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ignacio-chiazzo/ARKit&quot;&gt;ARKit Virtual Objects&lt;/a&gt; - Placing Virtual Objects in Augmented Reality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AFathi/ARVideoKit&quot;&gt;ARVideoKit&lt;/a&gt; - Record and capture ARKit videos, photos, Live Photos, and GIFs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Placenote/PlacenoteSDK-iOS&quot;&gt;Placenote&lt;/a&gt; - A library that makes ARKit sessions persistent to a location using advanced computer vision.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rsrbk/SmileToUnlock&quot;&gt;SmileToUnlock&lt;/a&gt; - This library uses ARKit Face Tracking in order to catch a user&#39;s smile.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Oauth and Oauth2 libraries, social logins and captcha tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trivago/Heimdallr.swift&quot;&gt;Heimdallr.swift&lt;/a&gt; - Easy to use OAuth 2 library for iOS, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rbaumbach/InstagramSimpleOAuth&quot;&gt;InstagramSimpleOAuth&lt;/a&gt; - A quick and simple way to authenticate an Instagram user in your iPhone or iPad app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serhii-londar/LinkedInSignIn&quot;&gt;LinkedInSignIn&lt;/a&gt; - Simple view controller to login and retrieve access token from LinkedIn.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OAuthSwift/OAuthSwift&quot;&gt;OAuthSwift&lt;/a&gt; - Swift based OAuth library for iOS- &lt;a href=&quot;https://github.com/OAuthSwift/OAuthSwift&quot;&gt;OAuthSwift&lt;/a&gt; - Swift based OAuth library for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/p2/OAuth2&quot;&gt;OAuth2&lt;/a&gt; - OAuth2 framework for macOS and iOS, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fjcaetano/ReCaptcha&quot;&gt;ReCaptcha&lt;/a&gt; - (In)visible ReCaptcha for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delba/SwiftyOAuth&quot;&gt;SwiftyOAuth&lt;/a&gt; - A simple OAuth library for iOS with a built-in set of providers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blockchain&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tool for smart contract interactions. Bitcoin protocol implementations and Frameworks for interacting with cryptocurrencies.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yenom/BitcoinKit&quot;&gt;BitcoinKit&lt;/a&gt; - Bitcoin protocol toolkit for Swift, BitcoinKit implements Bitcoin protocol in Swift. It is an implementation of the Bitcoin SPV protocol written in swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coinpaprika/coinpaprika-api-swift-client&quot;&gt;CoinpaprikaAPI&lt;/a&gt; - Coinpaprika API client with free &amp;amp; frequently updated market data from the world of crypto: coin prices, volumes, market caps, ATHs, return rates and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yuzushioh/EthereumKit&quot;&gt;EthereumKit&lt;/a&gt; - EthereumKit is a free, open-source Swift framework for easily interacting with the Ethereum.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SteadyAction/EtherWalletKit&quot;&gt;EtherWalletKit&lt;/a&gt; - Ethereum Wallet Toolkit for iOS - You can implement Ethereum wallet without a server and blockchain knowledge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Boilertalk/Web3.swift&quot;&gt;Web3.swift&lt;/a&gt; - Web3 library for interacting with the Ethereum blockchain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/web3swift-team/web3swift&quot;&gt;web3swift&lt;/a&gt; - Elegant Web3js functionality in Swift. Native ABI parsing and smart contract interactions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Books&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Most recommended books&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objc.io/books/advanced-swift/&quot;&gt;Advanced Swift by Chris Eidhof, Ole Begemann, and Airspeed Velocity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/anyone-can-create-an-app&quot;&gt;Anyone Can Create an App by Wendy L. Wise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/classic-computer-science-problems-in-swift&quot;&gt;Classic Computer Science Problems in Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Cocoa-Design-Patterns-Erik-Buck/dp/0321535022&quot;&gt;Cocoa Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objc.io/books/core-data/&quot;&gt;Core Data by Florian Kugler and Daniel Eggert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objc.io/books/functional-swift/&quot;&gt;Functional Swift by Chris Eidhof, Florian Kugler, and Wouter Swierstra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/hello-swift&quot;&gt;Hello Swift! by Tanmay Bakshi with Lynn Beighley&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/ios-development-with-swift&quot;&gt;iOS Development with Swift by Craig Grummitt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/books/ios-programming-the-big-nerd-ranch-guide-seventh-edition/&quot;&gt;iOS Programming: The Big Nerd Ranch Guide by Christian Keur, Aaron Hillegass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Programming-Objective-C-6th-Developers-Library/dp/0321967607&quot;&gt;Programming in Objective-C by Stephen G. Kochan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/swift-in-depth&quot;&gt;Swift in Depth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mikeash.com/book.html&quot;&gt;The Complete Friday Q &amp;amp; A: Volume 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://books.apple.com/us/book/swift-programming-language/id881256329&quot;&gt;The Swift Programming Language by Apple&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Cache&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Thread safe, offline and high performance cache libs and frameworks.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aschuch/AwesomeCache&quot;&gt;Awesome Cache&lt;/a&gt; - Delightful on-disk cache (written in Swift).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Cache&quot;&gt;Cache&lt;/a&gt; - Nothing but Cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soffes/Cache&quot;&gt;Cache&lt;/a&gt; - Swift caching library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nrkno/yr-cachyr&quot;&gt;Cachyr&lt;/a&gt; - A small key-value data cache for iOS, macOS and tvOS, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spring-media/Carlos&quot;&gt;Carlos&lt;/a&gt; - A simple but flexible cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saoudrizwan/Disk&quot;&gt;Disk&lt;/a&gt; - Delightful framework for iOS to easily persist structs, images, and data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Haneke/HanekeSwift&quot;&gt;HanekeSwift&lt;/a&gt; - A lightweight generic cache for iOS written in Swift with extra love for images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zolomatok/Johnny&quot;&gt;Johnny&lt;/a&gt; - Melodic Caching for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/buzzfeed/mattress&quot;&gt;mattress&lt;/a&gt; - iOS Offline Caching for Web Content.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yysskk/MemoryCache&quot;&gt;MemoryCache&lt;/a&gt; - MemoryCache is type-safe memory cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pinterest/PINCache&quot;&gt;PINCache&lt;/a&gt; - Fast, non-deadlocking parallel object cache for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/plivesey/RocketData&quot;&gt;RocketData&lt;/a&gt; - A caching and consistency solution for immutable models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spotify/SPTPersistentCache&quot;&gt;SPTPersistentCache&lt;/a&gt; - Everyone tries to implement a cache at some point in their iOS app’s lifecycle, and this is ours. By Spotify.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maquannene/Track&quot;&gt;Track&lt;/a&gt; - Track is a thread safe cache write by Swift. Composed of DiskCache and MemoryCache which support LRU.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kilograpp/UITableView-Cache&quot;&gt;UITableView Cache&lt;/a&gt; - UITableView cell cache that cures scroll-lags on a cell instantiating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYCache&quot;&gt;YYCache&lt;/a&gt; - High performance cache framework for iOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Charts&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Explore beautiful, easy-to-use, and customizable iOS charting libraries, perfect for creating dynamic and stunning data visualizations.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anaglik/ANDLineChartView&quot;&gt;ANDLineChartView&lt;/a&gt; - ANDLineChartView is easy to use view-based class for displaying animated line chart.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielgindi/Charts&quot;&gt;Charts&lt;/a&gt; - A powerful chart/graph framework, the iOS equivalent to &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot;&gt;MPAndroidChart&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cagricolak/CoreCharts&quot;&gt;CoreCharts&lt;/a&gt; - CoreCharts is a simple powerful yet Charts library for apple products.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/core-plot/core-plot&quot;&gt;core-plot&lt;/a&gt; - A 2D plotting lib which is highly customizable and capable of drawing many types of plots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/youkchansim/CSPieChart&quot;&gt;CSPieChart&lt;/a&gt; - iOS PieChart Opensource. This is very easy to use and customizable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dadalar/DDSpiderChart&quot;&gt;DDSpiderChart&lt;/a&gt; - Easy to use and customizable Spider (Radar) Chart library for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zomato/DR-charts&quot;&gt;Dr-Charts&lt;/a&gt; - Dr-Charts is a highly customisable, easy to use and interactive chart/graph framework in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zhuhuihuihui/EChart&quot;&gt;EChart&lt;/a&gt; - iOS/iPhone/iPad Chart, Graph. Event handling and animation supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/EatFit&quot;&gt;EatFit&lt;/a&gt; - Eat fit is a component for attractive data representation inspired by Google Fit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drinkius/flowerchart&quot;&gt;FlowerChart&lt;/a&gt; - Flower-shaped chart with custom appearance animation, fully vector.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArthurGuibert/FSInteractiveMap&quot;&gt;FSInteractiveMap&lt;/a&gt; - A charting library to visualize and interact with a vector map on iOS. It&#39;s like Geochart but for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArthurGuibert/FSLineChart&quot;&gt;FSLineChart&lt;/a&gt; - A line chart library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/recruit-mtl/Graphs&quot;&gt;Graphs&lt;/a&gt; - Light weight charts view generator for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jawbone/JBChartView&quot;&gt;JBChartView&lt;/a&gt; - iOS-based charting library for both line and bar graphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnnywjy/JYRadarChart&quot;&gt;JYRadarChart&lt;/a&gt; - An iOS open source Radar Chart implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexandrGraschenkov/MagicPie&quot;&gt;MagicPie&lt;/a&gt; - Awesome layer-based pie chart. Fantastically fast and fully customizable. Amazing animations available with MagicPie.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinzhow/PNChart&quot;&gt;PNChart&lt;/a&gt; - A simple and beautiful chart lib used in Piner and CoinsMan for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/i-schuetz/PieCharts&quot;&gt;PieCharts&lt;/a&gt; - Easy to use and highly customizable pie charts library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philackm/ScrollableGraphView&quot;&gt;Scrollable-GraphView&lt;/a&gt; - An adaptive scrollable graph view for iOS to visualise simple discrete datasets. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VRGsoftUA/SMDiagramView&quot;&gt;SMDiagramViewSwift&lt;/a&gt; - Meet cute and very flexibility library for iOS application for different data view in one circle diagram.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zemirco/swift-linechart&quot;&gt;Swift LineChart&lt;/a&gt; - Line Chart library for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gpbl/SwiftChart&quot;&gt;SwiftChart&lt;/a&gt; - Line and area chart library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xhacker/TEAChart&quot;&gt;TEAChart&lt;/a&gt; - Simple and intuitive iOS chart library. Contribution graph, clock chart, and bar chart.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TBXark/TKRadarChart&quot;&gt;TKRadarChart&lt;/a&gt; - A customizable radar chart in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chasseurmic/TWRCharts&quot;&gt;TWRCharts&lt;/a&gt; - An iOS wrapper for ChartJS. Easily build animated charts by leveraging the power of native Obj-C code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JunyiXie/XJYChart&quot;&gt;XJYChart&lt;/a&gt; - A Beautiful chart for iOS. Support animation, click, slide, area highlight.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Code Injection&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Decrease development time with these tools&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/Inject&quot;&gt;Inject&lt;/a&gt; - Hot Reloading for Swift applications!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/injectionforxcode&quot;&gt;injectionforxcode&lt;/a&gt; - Code injection including Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zenangst/Vaccine&quot;&gt;Vaccine&lt;/a&gt; - Vaccine is a framework that aims to make your apps immune to recompile-decease.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Code Quality&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Quality always matters. Code checkers, memory vigilants, syntax sugars and more.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/square/Aardvark&quot;&gt;Aardvark&lt;/a&gt; - Aardvark is a library that makes it dead simple to create actionable bug reports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/Bootstrap&quot;&gt;Bootstrap&lt;/a&gt; - iOS project bootstrap aimed at high quality coding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bugsee.com&quot;&gt;Bugsee&lt;/a&gt; - In-app bug and crash reporting with video, logs, network traffic and traces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/FBRetainCycleDetector&quot;&gt;FBRetainCycleDetector&lt;/a&gt; - iOS library to help detecting retain cycles in runtime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tapwork/HeapInspector-for-iOS&quot;&gt;HeapInspector-for-iOS&lt;/a&gt; - Find memory issues &amp;amp; leaks in your iOS app without instruments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/KZAsserts&quot;&gt;KZAsserts&lt;/a&gt; - Asserts on roids, test all your assumptions with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tencent/MLeaksFinder&quot;&gt;MLeaksFinder&lt;/a&gt; - Find memory leaks in your iOS app at develop time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PSPDFKit-labs/PSTModernizer&quot;&gt;PSTModernizer&lt;/a&gt; - Makes it easier to support older versions of iOS by fixing things and adding missing methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/square/spacecommander&quot;&gt;spacecommander&lt;/a&gt; - Commit fully-formatted Objective-C code as a team without even trying.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andresinaka/SwiftCop&quot;&gt;SwiftCop&lt;/a&gt; - SwiftCop is a validation library fully written in Swift and inspired by the clarity of Ruby On Rails Active Record validations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicklockwood/SwiftFormat&quot;&gt;SwiftFormat&lt;/a&gt; - A code library and command-line formatting tool for reformatting Swift code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sleekbyte/tailor&quot;&gt;Tailor&lt;/a&gt; - Cross-platform static analyzer for Swift that helps you to write cleaner code and avoid bugs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vincent-pradeilles/weakable-self&quot;&gt;WeakableSelf&lt;/a&gt; - A Swift micro-framework to encapsulate &lt;code&gt;[weak self]&lt;/code&gt; and &lt;code&gt;guard&lt;/code&gt; statements within closures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Linter&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Static code analyzers to enforce style and conventions.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flinesoft/AnyLint&quot;&gt;AnyLint&lt;/a&gt; - Lint anything by combining the power of Swift &amp;amp; regular expressions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBDecodable/IBLinter&quot;&gt;IBLinter&lt;/a&gt; - A linter tool for Interface Builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oclint/oclint&quot;&gt;OCLint&lt;/a&gt; - Static code analysis tool for improving quality and reducing defects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/realm/SwiftLint&quot;&gt;Swiftlint&lt;/a&gt; - A tool to enforce Swift style and conventions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Color&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Hex color extensions, theming, color pickers and other awesome color tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boycechang/BCColor&quot;&gt;BCColor&lt;/a&gt; - A lightweight but powerful color kit (Swift).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joncardasis/ChromaColorPicker&quot;&gt;ChromaColorPicker&lt;/a&gt; - An intuitive iOS color picker built in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bennyguitar/Colours&quot;&gt;Colours&lt;/a&gt; - A beautiful set of predefined colors and a set of color methods to make your iOS/macOS development life easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakemarsh/CostumeKit&quot;&gt;CostumeKit&lt;/a&gt; - Base types for theming an app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WorldDownTown/CSS3ColorsSwift&quot;&gt;CSS3ColorsSwift&lt;/a&gt; - A UIColor extension with CSS3 Colors name.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/DynamicColor&quot;&gt;DynamicColor&lt;/a&gt; - Yet another extension to manipulate colors easily in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brynbellomy/FlatUIColors&quot;&gt;FlatUIColors&lt;/a&gt; - Flat UI color palette helpers written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/regexident/Gestalt&quot;&gt;Gestalt&lt;/a&gt; - An unintrusive &amp;amp; light-weight iOS app-theming library with support for animated theme switching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zenangst/Hue&quot;&gt;Hue&lt;/a&gt; - Hue is the all-in-one coloring utility that you&#39;ll ever need.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/valdirunars/Lorikeet&quot;&gt;Lorikeet&lt;/a&gt; - Aesthetic color-scheme generation written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectFreeze/PFColorHash&quot;&gt;PFColorHash&lt;/a&gt; - Generate color based on the given string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jdhealy/PrettyColors&quot;&gt;PrettyColors&lt;/a&gt; - Styles and colors text in the Terminal with ANSI escape codes. Conforms to ECMA Standard 48.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onevcat/RandomColorSwift&quot;&gt;RandomColorSwift&lt;/a&gt; - An attractive color generator for Swift. Ported from &lt;code&gt;randomColor.js&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chrs1885/SheetyColors&quot;&gt;SheetyColors&lt;/a&gt; - An action sheet styled color picker for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thii/SwiftHEXColors&quot;&gt;SwiftHEXColors&lt;/a&gt; - HEX color handling as an extension for UIColor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yeahdongcn/UIColor-Hex-Swift&quot;&gt;UIColor-Hex-Swift&lt;/a&gt; - Convenience method for creating autoreleased color using RGBA hex string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Command Line&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Smart, beautiful and elegant tools to help you create command line applications.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/colinta/Ashen&quot;&gt;Ashen&lt;/a&gt; - A framework for writing terminal applications in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andybest/linenoise-swift&quot;&gt;Linenoise&lt;/a&gt; - A pure Swift replacement for readline&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mtynior/ColorizeSwift&quot;&gt;ColorizeSwift&lt;/a&gt; - Terminal string styling for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/surfandneptune/CommandCougar&quot;&gt;CommandCougar&lt;/a&gt; - An elegant pure Swift library for building command line applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef/Commander&quot;&gt;Commander&lt;/a&gt; - Compose beautiful command line interfaces in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/luoxiu/Crayon&quot;&gt;Crayon&lt;/a&gt; - Terminal string styling with expressive API and 256/TrueColor support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nsomar/Guaka&quot;&gt;Guaka&lt;/a&gt; - The smartest and most beautiful (POSIX compliant) command line framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/minuscorp/ModuleInterface&quot;&gt;ModuleInterface&lt;/a&gt; - Command Line Tool that generates the Module&#39;s Interface from a Swift project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bow-swift/nef&quot;&gt;nef&lt;/a&gt; - Command line tool to ease the creation of documentation in the form of Swift Playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkandzi/Progress.swift&quot;&gt;Progress&lt;/a&gt; - Add beautiful progress bars to your loops.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eneko/SourceDocs&quot;&gt;SourceDocs&lt;/a&gt; - Command Line Tool that generates Markdown documentation from inline source code comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apple/swift-argument-parser&quot;&gt;Swift Argument Parser&lt;/a&gt; - Straightforward, type-safe argument parsing for Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakeheis/SwiftCLI&quot;&gt;SwiftCLI&lt;/a&gt; - A powerful framework for developing CLIs in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nsomar/Swiftline&quot;&gt;Swiftline&lt;/a&gt; - Swiftline is a set of tools to help you create command line applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kareman/SwiftShell&quot;&gt;SwiftShell&lt;/a&gt; - A Swift framework for shell scripting and running shell commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scottrhoyt/SwiftyTextTable&quot;&gt;SwiftyTextTable&lt;/a&gt; - A lightweight library for generating text tables.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Concurrency&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Job schedulers, Coroutines, Asynchronous and Type safe threads libs and frameworks written in Swift&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zewo/Venice&quot;&gt;Venice&lt;/a&gt; - CSP (Coroutines, Channels, Select) for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typelift/Concurrent&quot;&gt;Concurrent&lt;/a&gt; - Functional Concurrency Primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JohnSundell/Flow&quot;&gt;Flow&lt;/a&gt; - Operation Oriented Programming in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jmfieldman/Brisk&quot;&gt;Brisk&lt;/a&gt; - A Swift DSL that allows concise and effective concurrency manipulation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aojet/Aojet&quot;&gt;Aojet&lt;/a&gt; - An actor model library for swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saidsikira/Overdrive&quot;&gt;Overdrive&lt;/a&gt; - Fast async task based Swift framework with focus on type safety, concurrency and multi threading.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AsyncNinja/AsyncNinja&quot;&gt;AsyncNinja&lt;/a&gt; - A complete set of concurrency and reactive programming primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/intelygenz/Kommander-iOS&quot;&gt;Kommander&lt;/a&gt; - Kommander is a Swift library to manage the task execution in different threads. Through the definition a simple but powerful concept, Kommand.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvzqz/Threadly&quot;&gt;Threadly&lt;/a&gt; - Type-safe thread-local storage in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roytornado/Flow-iOS&quot;&gt;Flow-iOS&lt;/a&gt; - Make your logic flow and data flow clean and human readable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FabrizioBrancati/Queuer&quot;&gt;Queuer&lt;/a&gt; - A queue manager, built on top of OperationQueue and Dispatch (aka GCD).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucas34/SwiftQueue&quot;&gt;SwiftQueue&lt;/a&gt; - Job Scheduler with Concurrent run, failure/retry, persistence, repeat, delay and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quanvo87/GroupWork&quot;&gt;GroupWork&lt;/a&gt; - Easy concurrent, asynchronous tasks in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stickytools/sticky-locking&quot;&gt;StickyLocking&lt;/a&gt; - A general purpose embedded hierarchical lock manager used to build highly concurrent applications of all types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/belozierov/SwiftCoroutine&quot;&gt;SwiftCoroutine&lt;/a&gt; - Swift coroutines library for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dfed/swift-async-queue&quot;&gt;AsyncQueue&lt;/a&gt; - A library of queues that enable sending ordered tasks from synchronous to asynchronous contexts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Core Data&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Core data Frameworks, wrappers, generators and boilerplates.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drewmccormack/ensembles&quot;&gt;Ensembles&lt;/a&gt; - A synchronization framework for Core Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rentzsch/mogenerator&quot;&gt;Mogenerator&lt;/a&gt; - Automatic Core Data code generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/magicalpanda/MagicalRecord&quot;&gt;MagicalRecord&lt;/a&gt; - Super Awesome Easy Fetching for Core Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JohnEstropia/CoreStore&quot;&gt;CoreStore&lt;/a&gt; - Powerful Core Data framework for Incremental Migrations, Fetching, Observering, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prosumma/CoreDataQueryInterface&quot;&gt;Core Data Query Interface&lt;/a&gt; A type-safe, fluent query framework for Core Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CosmicMind/Graph&quot;&gt;Graph&lt;/a&gt; - An elegant data-driven framework for CoreData in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fuzz-productions/CoreDataDandy&quot;&gt;CoreDataDandy&lt;/a&gt; - A feature-light wrapper around Core Data that simplifies common database operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3lvis/Sync&quot;&gt;Sync&lt;/a&gt; - Modern Swift JSON synchronization to Core Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alecrim/AlecrimCoreData&quot;&gt;AlecrimCoreData&lt;/a&gt; - A powerful and simple Core Data wrapper framework written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AERecord&quot;&gt;AERecord&lt;/a&gt; - Super awesome Core Data wrapper in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bignerdranch/CoreDataStack&quot;&gt;CoreDataStack&lt;/a&gt; - The Big Nerd Ranch Core Data Stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jessesquires/JSQCoreDataKit&quot;&gt;JSQCoreDataKit&lt;/a&gt; - A swifter Core Data stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/albertodebortoli/Skopelos&quot;&gt;Skopelos&lt;/a&gt; - A minimalistic, thread safe, non-boilerplate and super easy to use version of Active Record on Core Data. Simply all you need for doing Core Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jmfieldman/cadmium&quot;&gt;Cadmium&lt;/a&gt; - A complete swift framework that wraps CoreData and helps facilitate best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mrdekk/DataKernel&quot;&gt;DataKernel&lt;/a&gt; - Simple CoreData wrapper to ease operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3lvis/DATAStack&quot;&gt;DATAStack&lt;/a&gt; - 100% Swift Simple Boilerplate Free Core Data Stack. NSPersistentContainer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justeat/JustPersist&quot;&gt;JustPersist&lt;/a&gt; - JustPersist is the easiest and safest way to do persistence on iOS with Core Data support out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KrakenDev/PrediKit&quot;&gt;PrediKit&lt;/a&gt; - An NSPredicate DSL for iOS, macOS, tvOS, &amp;amp; watchOS. Inspired by SnapKit and lovingly written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreadelfante/PredicateFlow&quot;&gt;PredicateFlow&lt;/a&gt; - Write amazing, strong-typed and easy-to-read NSPredicate, allowing you to write flowable NSPredicate, without guessing attribution names, predicate operation or writing wrong arguments type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/deeje/CloudCore&quot;&gt;CloudCore&lt;/a&gt; - Robust CloudKit synchronization: offline editing, relationships, shared and public databases, field-level deltas, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Courses&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Courses, tutorials, guides and bootcamps&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/OOP_ObjC/Introduction/Introduction.html&quot;&gt;Apple - Object-Oriented Programming with Objective-C&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philipturner/ARHeadsetKit&quot;&gt;ARHeadsetKit Tutorials&lt;/a&gt; - Interactive guides to a high-level framework for experimenting with AR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codePrincess/ARStarter&quot;&gt;ARStarter&lt;/a&gt; - Get started with ARKit - A little exercise for beginners.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://classpert.com/ios-development&quot;&gt;Classpert - A list of 500 iOS Development courses (free and paid), from top e-learning platforms&lt;/a&gt; - Complete catalog of courses from Udacity, Pluralsight, Coursera, Edx, Treehouse and Skillshare.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/ios-13-app-development-bootcamp/&quot;&gt;iOS &amp;amp; Swift - The Complete iOS App Development Bootcamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/2690-learn-to-code-ios-apps-1-welcome-to-programming&quot;&gt;Ray Wenderlich&lt;/a&gt; - Learn to code iOS Apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/itunes-u/developing-apps-for-ios-hd/id395605774&quot;&gt;Stanford - Developing apps for iOS&lt;/a&gt; - Stanford&#39;s iTunes U course.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585&quot;&gt;Udacity - Intro to iOS App Development with Swift&lt;/a&gt; - Udacity free course. Make Your First iPhone App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hackingwithswift.com/100/swiftui&quot;&gt;100 Days of SwiftUI&lt;/a&gt; - Free collection of videos and tutorials updated for iOS 15 and Swift 5.5.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Database&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Wrappers, clients, Parse alternatives and safe tools to deal with ephemeral and persistent data.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/realm/realm-cocoa&quot;&gt;Realm&lt;/a&gt; - The alternative to CoreData and SQLite: Simple, modern and fast.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yapstudios/YapDatabase&quot;&gt;YapDatabase&lt;/a&gt; - YapDatabase is an extensible database for iOS &amp;amp; Mac.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.couchbase.com/products/mobile/&quot;&gt;Couchbase Mobile&lt;/a&gt; - Couchbase document store for mobile with cloud sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ccgus/fmdb&quot;&gt;FMDB&lt;/a&gt; - A Cocoa / Objective-C wrapper around SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcoarment/FCModel&quot;&gt;FCModel&lt;/a&gt; - An alternative to Core Data for people who like having direct SQL access.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArtSabintsev/Zephyr&quot;&gt;Zephyr&lt;/a&gt; - Effortlessly synchronize NSUserDefaults over iCloud.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phimage/Prephirences&quot;&gt;Prephirences&lt;/a&gt; - Prephirences is a Swift library that provides useful protocols and convenience methods to manage application preferences, configurations and app-state.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKitz/Storez&quot;&gt;Storez&lt;/a&gt; - Safe, statically-typed, store-agnostic key-value storage (with namespace support).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sunshinejr/SwiftyUserDefaults&quot;&gt;SwiftyUserDefaults&lt;/a&gt; - Statically-typed NSUserDefaults.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modo-studio/SugarRecord&quot;&gt;SugarRecord&lt;/a&gt; - Data persistence management library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stephencelis/SQLite.swift&quot;&gt;SQLite.swift&lt;/a&gt; - A type-safe, Swift-language layer over SQLite3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/groue/GRDB.swift&quot;&gt;GRDB.swift&lt;/a&gt; - A versatile SQLite toolkit for Swift, with WAL mode support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vapor/fluent&quot;&gt;Fluent&lt;/a&gt; - Simple ActiveRecord implementation for working with your database in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/relatedcode/ParseAlternatives&quot;&gt;ParseAlternatives&lt;/a&gt; - A collaborative list of Parse alternative backend service providers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tasanobu/TypedDefaults&quot;&gt;TypedDefaults&lt;/a&gt; - TypedDefaults is a utility library to type-safely use NSUserDefaults.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/realm/realm-cocoa-converter&quot;&gt;realm-cocoa-converter&lt;/a&gt; - A library that provides the ability to import/export Realm files from a variety of data container formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danthorpe/YapDatabaseExtensions&quot;&gt;YapDatabaseExtensions&lt;/a&gt; - YapDatabase extensions for use with Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhergon/RealmGeoQueries&quot;&gt;RealmGeoQueries&lt;/a&gt; - RealmGeoQueries simplifies spatial queries with Realm Cocoa. In the absence of and official functions, this library provide the possibility to do proximity search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Danappelxx/SwiftMongoDB&quot;&gt;SwiftMongoDB&lt;/a&gt; - A MongoDB interface for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iabudiab/ObjectiveRocks&quot;&gt;ObjectiveRocks&lt;/a&gt; - An Objective-C wrapper of Facebook&#39;s RocksDB - A Persistent Key-Value Store for Flash and RAM Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oleghnidets/OHMySQL&quot;&gt;OHMySQL&lt;/a&gt; - An Objective-C wrapper of MySQL C API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hemantasapkota/SwiftStore&quot;&gt;SwiftStore&lt;/a&gt; - Key-Value store for Swift backed by LevelDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/OneStore&quot;&gt;OneStore&lt;/a&gt; - A single value proxy for NSUserDefaults, with clean API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-MongoDB&quot;&gt;MongoDB&lt;/a&gt; - A Swift wrapper around the mongo-c client library, enabling access to MongoDB servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-MySQL&quot;&gt;MySQL&lt;/a&gt; - A Swift wrapper around the MySQL client library, enabling access to MySQL servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-Redis&quot;&gt;Redis&lt;/a&gt; - A Swift wrapper around the Redis client library, enabling access to Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-PostgreSQL&quot;&gt;PostgreSQL&lt;/a&gt; - A Swift wrapper around the libpq client library, enabling access to PostgreSQL servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect-FileMaker&quot;&gt;FileMaker&lt;/a&gt; - A Swift wrapper around the FileMaker XML Web publishing interface, enabling access to FileMaker servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SD10/Nora&quot;&gt;Nora&lt;/a&gt; - Nora is a Firebase abstraction layer for working with FirebaseDatabase and FirebaseStorage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IvanRublev/PersistentStorageSerializable&quot;&gt;PersistentStorageSerializable&lt;/a&gt; - Swift library that makes easier to serialize the user&#39;s preferences (app&#39;s settings) with system User Defaults or Property List file on disk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tencent/wcdb&quot;&gt;WCDB&lt;/a&gt; - WCDB is an efficient, complete, easy-to-use mobile database framework for iOS, macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StorageKit/StorageKit&quot;&gt;StorageKit&lt;/a&gt; - Your Data Storage Troubleshooter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nmdias/DefaultsKit&quot;&gt;UserDefaults&lt;/a&gt; - Simple, Strongly Typed UserDefaults for iOS, macOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nirma/Default&quot;&gt;Default&lt;/a&gt; - Modern interface to UserDefaults + Codable support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/caiyue1993/IceCream&quot;&gt;IceCream&lt;/a&gt; - Sync Realm Database with CloudKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quanvo87/FirebaseHelper&quot;&gt;FirebaseHelper&lt;/a&gt; - Safe and easy wrappers for common Firebase Realtime Database functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dreymonde/Shallows&quot;&gt;Shallows&lt;/a&gt; - Your lightweight persistence toolbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iAmrSalman/StorageManager&quot;&gt;StorageManager&lt;/a&gt; - Safe and easy way to use FileManager as Database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/k-lpmg/RealmWrapper&quot;&gt;RealmWrapper&lt;/a&gt; - Safe and easy wrappers for RealmSwift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/omaralbeik/UserDefaultsStore&quot;&gt;UserDefaultsStore&lt;/a&gt; - An easy and very light way to store and retrieve -reasonable amount- of Codable objects, in a couple lines of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metasmile/PropertyKit&quot;&gt;PropertyKit&lt;/a&gt; - Protocol-First, Type and Key-Safe Swift Property for iOS, macOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Teknasyon-Teknoloji/PersistenceKit&quot;&gt;PersistenceKit&lt;/a&gt; - Store and retrieve Codable objects to various persistence layers, in a couple lines of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ssamadgh/ModelAssistant&quot;&gt;ModelAssistant&lt;/a&gt; - Elegant library to manage the interactions between view and model in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tencent/MMKV&quot;&gt;MMKV&lt;/a&gt; - An efficient, small mobile key-value storage framework developed by WeChat. Works on iOS, Android, macOS and Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/Defaults&quot;&gt;Defaults&lt;/a&gt; - Swifty and modern UserDefaults.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OpenKitten/MongoKitten&quot;&gt;MongoKitten&lt;/a&gt; - A pure Swift MongoDB client implementation with support for embedded databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vpeschenkov/SecureDefaults&quot;&gt;SecureDefaults&lt;/a&gt; - A lightweight wrapper over UserDefaults/NSUserDefaults with an extra AES-256 encryption layer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arturdev/Unrealm&quot;&gt;Unrealm&lt;/a&gt; - Unrealm enables you to easily store Swift native Classes, Structs and Enums into Realm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/behrad-kzm/QuickDB&quot;&gt;QuickDB&lt;/a&gt; - Save and Retrieve any &lt;code&gt;Codable&lt;/code&gt; in JUST ONE line of code + more easy usecases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/objectbox/objectbox-swift&quot;&gt;ObjectBox&lt;/a&gt; - ObjectBox is a superfast, light-weight object persistence framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/duckdb/duckdb-swift&quot;&gt;DuckDB&lt;/a&gt; - DuckDB is a high-performance analytical database system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures / Algorithms&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Diffs, keypaths, sorted lists and other amazing data structures wrappers and libraries.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/osteslag/Changeset&quot;&gt;Changeset&lt;/a&gt; - Minimal edits from one collection to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/attaswift/BTree&quot;&gt;BTree&lt;/a&gt; - Fast ordered collections for Swift using in-memory B-trees.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/waynewbishop/SwiftStructures&quot;&gt;SwiftStructures&lt;/a&gt; - Examples of commonly used data structures and algorithms in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soffes/diff&quot;&gt;diff&lt;/a&gt; - Simple diff library in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Brick&quot;&gt;Brick&lt;/a&gt; - A generic view model for both basic and complex scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CosmicMind/Algorithm&quot;&gt;Algorithm&lt;/a&gt; - Algorithm is a collection of data structures that are empowered by a probability toolset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tarunon/AnyObjectConvertible&quot;&gt;AnyObjectConvertible&lt;/a&gt; - Convert your own struct/enum to AnyObject easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ankurp/Dollar&quot;&gt;Dollar&lt;/a&gt; - A functional tool-belt for Swift Language similar to Lo-Dash or Underscore.js in Javascript &lt;a href=&quot;https://www.dollarswift.org/&quot;&gt;https://www.dollarswift.org/&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antitypical/Result&quot;&gt;Result&lt;/a&gt; - Swift type modeling the success/failure of arbitrary operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EvgenyKarkan/EKAlgorithms&quot;&gt;EKAlgorithms&lt;/a&gt; - Some well known CS algorithms &amp;amp; data structures in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naru-jpn/Monaka&quot;&gt;Monaka&lt;/a&gt; - Convert custom struct and fundamental values to NSData.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexdrone/Buffer&quot;&gt;Buffer&lt;/a&gt; - Swift μ-framework for efficient array diffs, collection observation and cell configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davecom/SwiftGraph&quot;&gt;SwiftGraph&lt;/a&gt; - Graph data structure and utility functions in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davecom/SwiftPriorityQueue&quot;&gt;SwiftPriorityQueue&lt;/a&gt; - A priority queue with a classic binary heap implementation in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naru-jpn/pencil&quot;&gt;Pencil&lt;/a&gt; - Write values to file and read it more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcudich/HeckelDiff&quot;&gt;HeckelDiff&lt;/a&gt; - A fast Swift diffing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artemstepanenko/Dekoter&quot;&gt;Dekoter&lt;/a&gt; - &lt;code&gt;NSCoding&lt;/code&gt;&#39;s counterpart for Swift structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot;&gt;swift-algorithm-club&lt;/a&gt; - Algorithms and data structures in Swift, with explanations!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/david-coyle-sjc/impeller&quot;&gt;Impeller&lt;/a&gt; - A Distributed Value Store in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexdrone/Store&quot;&gt;Dispatch&lt;/a&gt; - Multi-store Flux implementation in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/DeepDiff&quot;&gt;DeepDiff&lt;/a&gt; - Diff in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tonyarnold/Differ&quot;&gt;Differ&lt;/a&gt; - Swift library to generate differences and patches between collections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/harlanhaskins/Probably&quot;&gt;Probably&lt;/a&gt; - A Swift probability and statistics library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jamesdouble/RandMyMod&quot;&gt;RandMyMod&lt;/a&gt; - RandMyMod base on your own struct or class create one or a set of randomized instance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vincent-pradeilles/KeyPathKit&quot;&gt;KeyPathKit&lt;/a&gt; - KeyPathKit provides a seamless syntax to manipulate data using typed keypaths.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zenangst/Differific&quot;&gt;Differific&lt;/a&gt; - A fast and convenient diffing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ladeiko/OneWaySynchronizer&quot;&gt;OneWaySynchronizer&lt;/a&gt; - The simplest abstraction to synchronize local data with remote source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/DifferenceKit&quot;&gt;DifferenceKit&lt;/a&gt; - A fast and flexible O(n) difference algorithm framework for Swift collection.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Date &amp;amp; Time&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Time and NSCalendar libraries. Also contains Sunrise and Sunset time generators, time pickers and NSTimer interfaces.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naoty/Timepiece&quot;&gt;Timepiece&lt;/a&gt; - Intuitive NSDate extensions in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/malcommac/SwiftDate&quot;&gt;SwiftDate&lt;/a&gt; - The best way to manage Dates and Timezones in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akosma/SwiftMoment&quot;&gt;SwiftMoment&lt;/a&gt; - A time and calendar manipulation library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatthewYork/DateTools&quot;&gt;DateTools&lt;/a&gt; - Dates and times made easy in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radex/SwiftyTimer&quot;&gt;SwiftyTimer&lt;/a&gt; - Swifty API for NSTimer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/melvitax/DateHelper&quot;&gt;DateHelper&lt;/a&gt; - Convenience extension for NSDate in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boredzo/iso-8601-date-formatter&quot;&gt;iso-8601-date-formatter&lt;/a&gt; - A Cocoa NSFormatter subclass to convert dates to and from ISO-8601-formatted strings. Supports calendar, week, and ordinal formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thomaspaulmann/EmojiTimeFormatter&quot;&gt;EmojiTimeFormatter&lt;/a&gt; - Format your dates/times as emojis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/Kronos&quot;&gt;Kronos&lt;/a&gt; - Elegant NTP date library in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/instacart/TrueTime.swift&quot;&gt;TrueTime&lt;/a&gt; - Get the true current time impervious to device clock time changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joedaniels29/10Clock&quot;&gt;10Clock&lt;/a&gt; - This Control is a beautiful time-of-day picker heavily inspired by the iOS 10 &quot;Bedtime&quot; timer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinlawler/NSDate-TimeAgo&quot;&gt;NSDate-TimeAgo&lt;/a&gt; - A &quot;time ago&quot;, &quot;time since&quot;, &quot;relative date&quot;, or &quot;fuzzy date&quot; category for NSDate and iOS, Objective-C, Cocoa Touch, iPhone, iPad.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kawoou/AnyDate&quot;&gt;AnyDate&lt;/a&gt; - Swifty Date &amp;amp; Time API inspired from Java 8 DateTime API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gligorkot/TimeZonePicker&quot;&gt;TimeZonePicker&lt;/a&gt; - A TimeZonePicker UIViewController similar to the iOS Settings app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dreymonde/Time&quot;&gt;Time&lt;/a&gt; - Type-safe time calculations in Swift, powered by generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davedelong/Chronology&quot;&gt;Chronology&lt;/a&gt; - Building a better date/time library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ceeK/Solar&quot;&gt;Solar&lt;/a&gt; - A Swift micro library for generating Sunrise and Sunset times.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Endore8/TimePicker&quot;&gt;TimePicker&lt;/a&gt; - Configurable time picker component based on a pan gesture and its velocity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awesome-labs/LFTimePicker&quot;&gt;LFTimePicker&lt;/a&gt; - Custom Time Picker ViewController with Selection of start and end times in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/novalagung/nvdate&quot;&gt;NVDate&lt;/a&gt; - Swift4 Date extension library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/luoxiu/Schedule&quot;&gt;Schedule&lt;/a&gt; - ⏳ A missing lightweight task scheduler for Swift with an incredibly human-friendly syntax.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Debugging tools, crash reports, logs and console UI&#39;s.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AEConsole&quot;&gt;AEConsole&lt;/a&gt; - Customizable Console UI overlay with debug log on top of your iOS App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Legoless/Alpha&quot;&gt;Alpha&lt;/a&gt; - Next generation debugging framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appspector.com&quot;&gt;AppSpector&lt;/a&gt; - Remote iOS and Android debugging and data collection service. You can debug networking, logs, CoreData, SQLite, NSNotificationCenter and mock device&#39;s geo location.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ProxymanApp/atlantis&quot;&gt;Atlantis&lt;/a&gt; - A little and powerful iOS framework for intercepting HTTP/HTTPS Traffic from your iOS app. No more messing around with proxy and certificate config. Inspect Traffic Log with Proxyman app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/chisel&quot;&gt;chisel&lt;/a&gt; - Collection of LLDB commands to assist debugging iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dbukowski/DBDebugToolkit&quot;&gt;DBDebugToolkit&lt;/a&gt; - Set of easy to use debugging tools for iOS developers &amp;amp; QA engineers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DebugSwift/DebugSwift&quot;&gt;DebugSwift&lt;/a&gt; - A comprehensive toolkit designed to simplify and enhance the debugging process for iOS applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/didi/DoraemonKit&quot;&gt;DoraemonKit&lt;/a&gt; - A full-featured iOS App development assistant，30+ tools included. You deserve it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/remirobert/Dotzu&quot;&gt;Dotzu&lt;/a&gt; - iOS app debugger while using the app. Crash report, logs, network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/myriadmobile/Droar&quot;&gt;Droar&lt;/a&gt; - Droar is a modular, single-line installation debugging window.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flipboard/FLEX&quot;&gt;Flex&lt;/a&gt; - An in-app debugging and exploration tool for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zixun/GodEye&quot;&gt;GodEye&lt;/a&gt; - Automatically display Log,Crash,Network,ANR,Leak,CPU,RAM,FPS,NetFlow,Folder and etc with one line of code based on Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MuShare/Httper-iOS&quot;&gt;Httper-iOS&lt;/a&gt; - App for developers to test REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/willowtreeapps/Hyperion-iOS&quot;&gt;Hyperion&lt;/a&gt; - In-app design review tool to inspect measurements, attributes, and animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isavynskyi/LayoutInspector&quot;&gt;LayoutInspector&lt;/a&gt; - Debug app layouts directly on iOS device: inspect layers in 3D and debug each visible view attributes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/meitu/MTHawkeye&quot;&gt;MTHawkeye&lt;/a&gt; - Profiling / Debugging assist tools for iOS, include tools: UITimeProfiler, Memory Allocations, Living ObjC Objects Sniffer, Network Transaction Waterfall, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kasketis/netfox&quot;&gt;Netfox&lt;/a&gt; - A lightweight, one line setup, iOS / macOS network debugging library!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/divar-ir/NetShears.git&quot;&gt;NetShears&lt;/a&gt; - Allows developers to intercept and monitor HTTP/HTTPS requests and responses. It also could be configured to show gRPC calls.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coderyi/NetworkEye&quot;&gt;NetworkEye&lt;/a&gt; - a iOS network debug library, It can monitor HTTP requests within the App and displays information related to the request.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/square/PonyDebugger&quot;&gt;PonyDebugger&lt;/a&gt; - Remote network and data debugging for your native iOS app using Chrome Developer Tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/playbook-ui/playbook-ios&quot;&gt;Playbook&lt;/a&gt; - A library for isolated developing UI components and automatically snapshots of them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bstillitano/Scyther&quot;&gt;Scyther&lt;/a&gt; - A full-featured, in-app debugging menu packed full of useful tools including network logging, layout inspection, location spoofing, console logging and so much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmusolino/Wormholy&quot;&gt;Wormholy&lt;/a&gt; - iOS network debugging, like a wizard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Xniffer&quot;&gt;Xniffer&lt;/a&gt; - A swift network profiler built on top of URLSession.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.woodpeck.cn&quot;&gt;Woodpecker&lt;/a&gt; - View sandbox files, UserDefaults, network request from Mac.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Dependency Injection&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Swinject/Swinject&quot;&gt;Swinject&lt;/a&gt; - Dependency injection framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appfoundry/Reliant&quot;&gt;Reliant&lt;/a&gt; - Nonintrusive Objective-C dependency injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sabirvirtuoso/Kraken&quot;&gt;Kraken&lt;/a&gt; - A Dependency Injection Container for Swift with easy-to-use syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appsquickly/Typhoon&quot;&gt;Typhoon&lt;/a&gt; - Powerful dependency injection for Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appsquickly/pilgrim&quot;&gt;Pilgrim&lt;/a&gt; - Powerful dependency injection Swift (successor to Typhoon).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/Perform&quot;&gt;Perform&lt;/a&gt; - Easy dependency injection for storyboard segues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drekka/Alchemic&quot;&gt;Alchemic&lt;/a&gt; - Advanced, yet simple to use DI framework for Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prosumma/Guise&quot;&gt;Guise&lt;/a&gt; - An elegant, flexible, type-safe dependency resolution framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scribd/Weaver&quot;&gt;Weaver&lt;/a&gt; - A declarative, easy-to-use and safe Dependency Injection framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hiro-nagami/StoryboardBuilder&quot;&gt;StoryboardBuilder&lt;/a&gt; - Simple dependency injection for generating views from storyboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ladeiko/ViperServices&quot;&gt;ViperServices&lt;/a&gt; - Dependency injection container for iOS applications written in Swift. Each service can have boot and shutdown code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivlevAstef/DITranquillity&quot;&gt;DITranquillity&lt;/a&gt; - Dependency injection framework for iOS applications written in clean Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uber/needle&quot;&gt;Needle&lt;/a&gt; — Compile-time safe Swift dependency injection framework with real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vincent-pradeilles/locatable&quot;&gt;Locatable&lt;/a&gt; - A micro-framework that leverages Property Wrappers to implement the Service Locator pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dfed/safedi&quot;&gt;SafeDI&lt;/a&gt; - Compile-time safe dependency injection in Swift 6.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Dependency / Package Manager&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cocoapods.org/&quot;&gt;CocoaPods&lt;/a&gt; - CocoaPods is the dependency manager for Objective-C projects. It has thousands of libraries and can help you scale your projects elegantly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://sap-production.github.io/xcode-maven-plugin/site/&quot;&gt;Xcode Maven&lt;/a&gt; - The Xcode Maven Plugin can be used in order to run Xcode builds embedded in a Maven lifecycle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; - A simple, decentralized dependency manager for Cocoa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jankuca/swm&quot;&gt;SWM (Swift Modules)&lt;/a&gt; - A package/dependency manager for Swift projects similar to npm (node.js package manager) or bower (browser package manager from Twitter). Does not require the use of Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devxoul/CocoaSeeds&quot;&gt;CocoaSeeds&lt;/a&gt; - Git Submodule Alternative for Cocoa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apple/swift-package-manager&quot;&gt;swift-package-manager&lt;/a&gt; - The Package Manager for the Swift Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/schwa/punic&quot;&gt;punic&lt;/a&gt; - Clean room reimplementation of Carthage tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmspzz/Rome&quot;&gt;Rome&lt;/a&gt; - A cache tool for Carthage built frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yunarta/works-athena-gradle-plugin&quot;&gt;Athena&lt;/a&gt; - Gradle Plugin to enhance Carthage by uploading the archived frameworks into Maven repository, currently support only Bintray, Artifactory and Mavel local.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JamitLabs/Accio&quot;&gt;Accio&lt;/a&gt; - A SwiftPM based dependency manager for iOS &amp;amp; Co. with improvements over Carthage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment / Distribution&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/fastlane&quot;&gt;fastlane&lt;/a&gt; - Connect all iOS deployment tools into one streamlined workflow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/deliver&quot;&gt;deliver&lt;/a&gt; - Upload screenshots, metadata and your app to the App Store using a single command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/snapshot&quot;&gt;snapshot&lt;/a&gt; - Automate taking localized screenshots of your iOS app on every device.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.buddybuild.com/&quot;&gt;buddybuild&lt;/a&gt; - A mobile iteration platform - build, deploy, and collaborate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bitrise.io&quot;&gt;Bitrise&lt;/a&gt; - Mobile Continuous Integration &amp;amp; Delivery with dozens of integrations to build, test, deploy and collaborate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/watchbuild&quot;&gt;watchbuild&lt;/a&gt; - Get a notification once your iTunes Connect build is finished processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/products/crashlytics/&quot;&gt;Crashlytics&lt;/a&gt; - A crash reporting and beta testing service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/testflight/&quot;&gt;TestFlight Beta Testing&lt;/a&gt; - The beta testing service hosted on iTunes Connect (requires iOS 8 or later).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appcenter.ms&quot;&gt;AppCenter&lt;/a&gt; - Continuously build, test, release, and monitor apps for every platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/boarding&quot;&gt;boarding&lt;/a&gt; - Instantly create a simple signup page for TestFlight beta testers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bitstadium/HockeyKit&quot;&gt;HockeyKit&lt;/a&gt; - A software update kit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rollout.io/&quot;&gt;Rollout.io&lt;/a&gt; - SDK to patch, fix bugs, modify and manipulate native apps (Obj-c &amp;amp; Swift) in real-time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://theapplaunchpad.com/&quot;&gt;AppLaunchpad&lt;/a&gt; - Free App Store screenshot builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LaunchKit/LaunchKit&quot;&gt;LaunchKit&lt;/a&gt; - A set of web-based tools for mobile app developers, now open source!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://instabug.com&quot;&gt;Instabug&lt;/a&gt; - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/electricbolt/appfiguratesdk&quot;&gt;Appfigurate&lt;/a&gt; - Secure runtime configuration for iOS and watchOS, apps and app extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IdeasOnCanvas/ScreenshotFramer&quot;&gt;ScreenshotFramer&lt;/a&gt; - With Screenshot Framer you can easily create nice-looking and localized App Store Images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://semaphoreci.com/product/ios&quot;&gt;Semaphore&lt;/a&gt; - CI/CD service which makes it easy to build, test and deploy applications for any Apple device. iOS support is fully integrated in Semaphore 2.0, so you can use the same powerful CI/CD pipeline features for iOS as you do for Linux-based development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://appcircle.io&quot;&gt;Appcircle.io&lt;/a&gt; — An enterprise-grade mobile DevOps platform that automates the build, test, and publish store of mobile apps for faster, efficient release cycle&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://screenplay.dev&quot;&gt;Screenplay&lt;/a&gt; - Instant rollbacks and canary deployments for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codemagic.io&quot;&gt;Codemagic&lt;/a&gt; - Build, test and deliver iOS apps 20% faster with Codemagic CI/CD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://runway.team&quot;&gt;Runway&lt;/a&gt; - Easier mobile releases for teams. Integrates across tools (version control, project management, CI, app stores, crash reporting, etc.) to provide a single source of truth for mobile teams to come together around during release cycles. Equal parts automation and collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/simonnilsson/ios-uploader&quot;&gt;ios-uploader&lt;/a&gt; - Easy to use, cross-platform tool to upload iOS apps to App Store Connect.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;EventBus&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Promises and Futures libraries to help you write better async code in Swift.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cesarferreira/SwiftEventBus&quot;&gt;SwiftEventBus&lt;/a&gt; - A publish/subscribe event bus optimized for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxcl/PromiseKit&quot;&gt;PromiseKit&lt;/a&gt; - Promises for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BoltsFramework/Bolts-ObjC&quot;&gt;Bolts&lt;/a&gt; - Bolts is a collection of low-level libraries designed to make developing mobile apps easier, including tasks (promises) and app links (deep links).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactKit/SwiftTask&quot;&gt;SwiftTask&lt;/a&gt; - Promise + progress + pause + cancel + retry for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vadymmarkov/When&quot;&gt;When&lt;/a&gt; - A lightweight implementation of Promises in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freshOS/then&quot;&gt;then🎬&lt;/a&gt; - Elegant Async code in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BoltsFramework/Bolts-Swift&quot;&gt;Bolts-Swift&lt;/a&gt; - Bolts is a collection of low-level libraries designed to make developing mobile apps easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/deput/RWPromiseKit&quot;&gt;RWPromiseKit&lt;/a&gt; - A light-weighted Promise library for Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/couchdeveloper/FutureLib&quot;&gt;FutureLib&lt;/a&gt; - FutureLib is a pure Swift 2 library implementing Futures &amp;amp; Promises inspired by Scala.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/100mango/SwiftNotificationCenter&quot;&gt;SwiftNotificationCenter&lt;/a&gt; - A Protocol-Oriented NotificationCenter which is type safe, thread safe and with memory safety.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FutureKit/FutureKit&quot;&gt;FutureKit&lt;/a&gt; - A Swift based Future/Promises Library for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uber/signals-ios&quot;&gt;signals-ios&lt;/a&gt; - Typeful eventing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Thomvis/BrightFutures&quot;&gt;BrightFutures&lt;/a&gt; - Write great asynchronous code in Swift using futures and promises.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/NoticeObserveKit&quot;&gt;NoticeObserveKit&lt;/a&gt; - NoticeObserveKit is type-safe NotificationCenter wrapper that associates notice type with info type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/malcommac/Hydra&quot;&gt;Hydra&lt;/a&gt; - Promises &amp;amp; Await - Write better async code in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/albertodebortoli/Promis&quot;&gt;Promis&lt;/a&gt; - The easiest Future and Promises framework in Swift. No magic. No boilerplate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndrewBarba/Bluebird.swift&quot;&gt;Bluebird.swift&lt;/a&gt; - Promise/A+, Bluebird inspired, implementation in Swift 4.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khanlou/Promise&quot;&gt;Promise&lt;/a&gt; - A Promise library for Swift, based partially on Javascript&#39;s A+ spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google/promises&quot;&gt;promises&lt;/a&gt; - Google provides a synchronization construct for Objective-C and Swift to facilitate writing asynchronous code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/Continuum&quot;&gt;Continuum&lt;/a&gt; - NotificationCenter based Lightweight UI / AnyObject binder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/formbound/Futures&quot;&gt;Futures&lt;/a&gt; - Lightweight promises for iOS, macOS, tvOS, watchOS, and server-side Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimaMishchenko/EasyFutures&quot;&gt;EasyFutures&lt;/a&gt; - 🔗 Swift Futures &amp;amp; Promises. Easy to use. Highly combinable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcmatan/topicEventBus&quot;&gt;TopicEventBus&lt;/a&gt; - Publish–subscribe design pattern implementation framework, with ability to publish events by topic. (NotificationCenter extended alternative).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Files&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;File management, file browser, zip handling and file observers.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvzqz/FileKit&quot;&gt;FileKit&lt;/a&gt; - Simple and expressive file management in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/Zip&quot;&gt;Zip&lt;/a&gt; - Swift framework for zipping and unzipping files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/FileBrowser&quot;&gt;FileBrowser&lt;/a&gt; - Powerful Swift file browser for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indragiek/Ares&quot;&gt;Ares&lt;/a&gt; - Zero-setup P2P file transfer between Macs and iOS devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amosavian/FileProvider&quot;&gt;FileProvider&lt;/a&gt; - FileManager replacement for Local, iCloud and Remote (WebDAV/FTP/Dropbox/OneDrive/SMB2) files on iOS/tvOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/KZFileWatchers&quot;&gt;KZFileWatchers&lt;/a&gt; - A micro-framework for observing file changes, both local and remote. Helpful in building developer tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZipArchive/ZipArchive&quot;&gt;ZipArchive&lt;/a&gt; - ZipArchive is a simple utility class for zipping and unzipping files on iOS and Mac.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Augustyniak/FileExplorer&quot;&gt;FileExplorer&lt;/a&gt; - Powerful file browser for iOS that allows its users to choose and remove files and/or directories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/weichsel/ZIPFoundation&quot;&gt;ZIPFoundation&lt;/a&gt; - Effortless ZIP Handling in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dreymonde/AppFolder&quot;&gt;AppFolder&lt;/a&gt; - AppFolder is a lightweight framework that lets you design a friendly, strongly-typed representation of a directories inside your app&#39;s container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pixelglow/ZipZap&quot;&gt;ZipZap&lt;/a&gt; - zip file I/O library for iOS, macOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amosavian/AMSMB2&quot;&gt;AMSMB2&lt;/a&gt; - Swift framework to connect SMB 2/3 shares for iOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functional Programming&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Collection of Swift functional programming tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ulrikdamm/Forbind&quot;&gt;Forbind&lt;/a&gt; - Functional chaining and promises in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brynbellomy/Funky&quot;&gt;Funky&lt;/a&gt; - Functional programming tools and experiments in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LlamaKit/LlamaKit&quot;&gt;LlamaKit&lt;/a&gt; - Collection of must-have functional Swift tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tptee/Oriole&quot;&gt;Oriole&lt;/a&gt; - A functional utility belt implemented as Swift protocol extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robrix/Prelude&quot;&gt;Prelude&lt;/a&gt; - Swift µframework of simple functional programming tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typelift/Swiftx&quot;&gt;Swiftx&lt;/a&gt; - Functional data types and functions for any project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typelift/Swiftz&quot;&gt;Swiftz&lt;/a&gt; - Functional programming in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RuiAAPeres/OptionalExtensions&quot;&gt;OptionalExtensions&lt;/a&gt; - Swift µframework with extensions for the Optional Type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/Argo&quot;&gt;Argo&lt;/a&gt; - Functional JSON parsing library for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/Runes&quot;&gt;Runes&lt;/a&gt; - Infix operators for monadic functions in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bow-swift/bow&quot;&gt;Bow&lt;/a&gt; - Typed Functional Programming companion library for Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Games&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eugenebokhan/AssetImportKit&quot;&gt;AssetImportKit&lt;/a&gt; - Swifty cross platform library (macOS, iOS) that converts Assimp supported models to SceneKit scenes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bwide/CollectionNode&quot;&gt;CollectionNode&lt;/a&gt; - A swift framework for a collectionView in SpriteKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cocoatoucher/Glide&quot;&gt;glide engine&lt;/a&gt; - SpriteKit and GameplayKit based engine for making 2d games, with practical examples and tutorials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lichess-org/lichobile&quot;&gt;Lichess mobile&lt;/a&gt; - A mobile client for lichess.org.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvzqz/Sage&quot;&gt;Sage&lt;/a&gt; - A cross-platform chess library for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codelynx/ShogibanKit&quot;&gt;ShogibanKit&lt;/a&gt; - ShogibanKit is a framework for implementing complex Japanese Chess (Shogii) in Swift. No UI, nor AI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mfessenden/SKTiled&quot;&gt;SKTiled&lt;/a&gt; - Swift framework for working with Tiled assets in SpriteKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sh-khashimov/SwiftFortuneWheel&quot;&gt;SwiftFortuneWheel&lt;/a&gt; - A cross-platform framework for games like a Wheel of Fortune.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;GCD&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Grand Central Dispatch syntax sugars, tools and timers.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JohnEstropia/GCDKit&quot;&gt;GCDKit&lt;/a&gt; - Grand Central Dispatch simplified with Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/duemunk/Async&quot;&gt;Async&lt;/a&gt; - Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodes-ios/SwiftSafe&quot;&gt;SwiftSafe&lt;/a&gt; - Thread synchronization made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYDispatchQueuePool&quot;&gt;YYDispatchQueuePool&lt;/a&gt; - iOS utility class to manage global dispatch queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alecrim/AlecrimAsyncKit&quot;&gt;AlecrimAsyncKit&lt;/a&gt; - Bringing async and await to Swift world with some flavouring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jessesquires/GrandSugarDispatch&quot;&gt;GrandSugarDispatch&lt;/a&gt; - Syntactic sugar for Grand Central Dispatch (GCD).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mitchtreece/Threader&quot;&gt;Threader&lt;/a&gt; - Pretty GCD calls and easier code execution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JARMourato/Dispatch&quot;&gt;Dispatch&lt;/a&gt; - Just a tiny library to make using GCD easier and intuitive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hemantasapkota/GCDTimer&quot;&gt;GCDTimer&lt;/a&gt; - Well tested Grand Central Dispatch (GCD) Timer in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/comyar/Chronos-Swift&quot;&gt;Chronos-Swift&lt;/a&gt; - Grand Central Dispatch Utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pascalbros/Me&quot;&gt;Me&lt;/a&gt; - A super slim solution to the nested asynchronous computations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Albinzr/SwiftyTask&quot;&gt;SwiftyTask&lt;/a&gt; - An extreme queuing system with high performance for managing all task in app with closure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Gesture&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools to handle gestures.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delba/Tactile&quot;&gt;Tactile&lt;/a&gt; - A better way to handle gestures on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/b3ll/SwiftyGestureRecognition&quot;&gt;SwiftyGestureRecognition&lt;/a&gt; - Aids with prototyping UIGestureRecognizers in Xcode Playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/didierbrun/DBPathRecognizer&quot;&gt;DBPathRecognizer&lt;/a&gt; - Gesture recognizer tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellowizman/Sensitive&quot;&gt;Sensitive&lt;/a&gt; - Special way to work with gestures in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarioIannotta/SplitViewDragAndDrop&quot;&gt;SplitViewDragAndDrop&lt;/a&gt; - Easily add drag and drop to pass data between your apps in split view mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/forkingdog/FDFullscreenPopGesture&quot;&gt;FDFullscreenPopGesture&lt;/a&gt; - An UINavigationController&#39;s category to enable fullscreen pop gesture in an iOS7+ system style with AOP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Graphics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;CoreGraphics, CoreAnimation, SVG, CGContext libraries, helpers and tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKitz/Graphicz&quot;&gt;Graphicz&lt;/a&gt; - Light-weight, operator-overloading-free complements to CoreGraphics!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pkluz/PKCoreTechniques&quot;&gt;PKCoreTechniques&lt;/a&gt; - The code for my CoreGraphics+CoreAnimation talk, held during the 2012 iOS Game Design Seminar at the Technical University Munich.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mpw/MPWDrawingContext&quot;&gt;MPWDrawingContext&lt;/a&gt; - An Objective-C wrapper for CoreGraphics CGContext.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davidcairns/DePict&quot;&gt;DePict&lt;/a&gt; - A simple, declarative, functional drawing framework, in Swift!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mchoe/SwiftSVG&quot;&gt;SwiftSVG&lt;/a&gt; - A single pass SVG parser with multiple interface options (String, NS/UIBezierPath, CAShapeLayer, and NS/UIView).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shaps80/InkKit&quot;&gt;InkKit&lt;/a&gt; - Write-Once, Draw-Everywhere for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYAsyncLayer&quot;&gt;YYAsyncLayer&lt;/a&gt; - iOS utility classes for asynchronous rendering and display.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nicejinux/NXDrawKit&quot;&gt;NXDrawKit&lt;/a&gt; - NXDrawKit is a simple and easy but useful drawing kit for iPhone.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IFTTT/jot&quot;&gt;jot&lt;/a&gt; - An iOS framework for easily adding drawings and text to images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SVGKit/SVGKit&quot;&gt;SVGKit&lt;/a&gt; - Display and interact with SVG Images on iOS / macOS, using native rendering (CoreAnimation) (currently only supported for iOS - macOS code needs updating).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/Snowflake&quot;&gt;Snowflake&lt;/a&gt; - SVG in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/victorgama/HxSTLParser&quot;&gt;HxSTLParser&lt;/a&gt; - Basic STL loader for SceneKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/natmark/ProcessingKit&quot;&gt;ProcessingKit&lt;/a&gt; - Visual designing library for iOS &amp;amp; OSX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shashankpali/EZYGradientView&quot;&gt;EZYGradientView&lt;/a&gt; - Create gradients and blur gradients without a single line of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AEConicalGradient&quot;&gt;AEConicalGradient&lt;/a&gt; - Conical (angular) gradient layer written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxkonovalov/MKGradientView&quot;&gt;MKGradientView&lt;/a&gt; - Core Graphics based gradient view capable of producing Linear (Axial), Radial (Circular), Conical (Angular), Bilinear (Four Point) gradients, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ipraba/EPShapes&quot;&gt;EPShapes&lt;/a&gt; - Design shapes in Interface Builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/macaw&quot;&gt;Macaw&lt;/a&gt; - Powerful and easy-to-use vector graphics library with SVG support written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Boilertalk/BlockiesSwift&quot;&gt;BlockiesSwift&lt;/a&gt; - Unique blocky identicons/profile picture generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bakhtiyork/Rough&quot;&gt;Rough&lt;/a&gt; - lets you draw in a sketchy, hand-drawn-like, style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bakhtiyork/GraphLayout&quot;&gt;GraphLayout&lt;/a&gt; - UI controls for graph visualization. It is powered by Graphviz.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Asana/Drawsana&quot;&gt;Drawsana&lt;/a&gt; - iOS framework for building raster drawing and image markup views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rwbutler/AnimatedGradientView&quot;&gt;AnimatedGradientView&lt;/a&gt; - A simple framework to add animated gradients to your iOS app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware&lt;/h2&gt; 
&lt;h3&gt;Bluetooth&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries to deal with nearby devices, BLE tools and MultipeerConnectivity wrappers.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/omergul/Discovery&quot;&gt;Discovery&lt;/a&gt; - A very simple library to discover and retrieve data from nearby devices (even if the peer app works at background).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LGBluetooth/LGBluetooth&quot;&gt;LGBluetooth&lt;/a&gt; - Simple, block-based, lightweight library over CoreBluetooth. Will clean up your Core Bluetooth related code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpsim/PeerKit&quot;&gt;PeerKit&lt;/a&gt; An open-source Swift framework for building event-driven, zero-config Multipeer Connectivity apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rhummelmose/BluetoothKit&quot;&gt;BluetoothKit&lt;/a&gt; - Easily communicate between iOS/macOS devices using BLE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/e-sites/Bluetonium&quot;&gt;Bluetonium&lt;/a&gt; - Bluetooth mapping in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/troystribling/BlueCap&quot;&gt;BlueCap&lt;/a&gt; - iOS Bluetooth LE framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kirankunigiri/Apple-Family&quot;&gt;Apple Family&lt;/a&gt; - Quickly connect Apple devices together with Bluetooth, wifi, and USB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1amageek/Bleu&quot;&gt;Bleu&lt;/a&gt; - BLE (Bluetooth LE) for U.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/steamclock/bluejay&quot;&gt;Bluejay&lt;/a&gt; - A simple Swift framework for building reliable Bluetooth LE apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coolnameismy/BabyBluetooth&quot;&gt;BabyBluetooth&lt;/a&gt; - The easiest way to use Bluetooth (BLE) in iOS/MacOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AntonTheDev/ExtendaBLE&quot;&gt;ExtendaBLE&lt;/a&gt; - Simple Blocks-Based BLE Client for iOS/tvOS/watchOS/OSX/Android. Quickly configuration for centrals/peripherals, perform packet based read/write operations, and callbacks for characteristic updates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rchatham/PeerConnectivity&quot;&gt;PeerConnectivity&lt;/a&gt; - Functional wrapper for Apple&#39;s MultipeerConnectivity framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AfrozZaheer/AZPeerToPeerConnection&quot;&gt;AZPeerToPeerConnection&lt;/a&gt; - AZPeerToPeerConnectivity is a wrapper on top of Apple iOS Multipeer Connectivity framework. It provides an easier way to create and manage sessions. Easy to integrate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dingwilson/MultiPeer&quot;&gt;MultiPeer&lt;/a&gt; - Multipeer is a wrapper for Apple&#39;s MultipeerConnectivity framework for offline data transmission between Apple devices. It makes easy to automatically connect to multiple nearby devices and share information using either bluetooth or wifi.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zssz/BerkananSDK&quot;&gt;BerkananSDK&lt;/a&gt; - Mesh messaging SDK with the goal to create a decentralized mesh network for the people, powered by their device&#39;s Bluetooth antenna.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Camera&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Mocks, ImagePickers, and multiple options of customizable camera implementation&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tdginternet/TGCameraViewController&quot;&gt;TGCameraViewController&lt;/a&gt; - Custom camera with AVFoundation. Beautiful, light and easy to integrate with iOS projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piemonte/PBJVision&quot;&gt;PBJVision&lt;/a&gt; - iOS camera engine, features touch-to-record video, slow motion video, and photo capture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GabrielAlva/Cool-iOS-Camera&quot;&gt;Cool-iOS-Camera&lt;/a&gt; - A fully customisable and modern camera implementation for iOS made with AVFoundation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rFlex/SCRecorder&quot;&gt;SCRecorder&lt;/a&gt; - Camera engine with Vine-like tap to record, animatable filters, slow motion, segments editing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexLittlejohn/ALCameraViewController&quot;&gt;ALCameraViewController&lt;/a&gt; - A camera view controller with custom image picker and image cropping. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imaginary-cloud/CameraManager&quot;&gt;CameraManager&lt;/a&gt; - Simple Swift class to provide all the configurations you need to create custom camera view in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yeahdongcn/RSBarcodes_Swift&quot;&gt;RSBarcodes_Swift&lt;/a&gt; - 1D and 2D barcodes reader and generators for iOS 8 with delightful controls. Now Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/omergul/LLSimpleCamera&quot;&gt;LLSimpleCamera&lt;/a&gt; - A simple, customizable camera control - video recorder for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ytakzk/Fusuma&quot;&gt;Fusuma&lt;/a&gt; - Instagram-like photo browser and a camera feature with a few line of code in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/BarcodeScanner&quot;&gt;BarcodeScanner&lt;/a&gt; - Simple and beautiful barcode scanner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HorizonCamera/HorizonSDK-iOS&quot;&gt;HorizonSDK-iOS&lt;/a&gt; - State of the art real-time video recording / photo shooting iOS library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IFTTT/FastttCamera&quot;&gt;FastttCamera&lt;/a&gt; - Fasttt and easy camera framework for iOS with customizable filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zhangao0086/DKCamera&quot;&gt;DKCamera&lt;/a&gt; - A lightweight &amp;amp; simple camera framework for iOS. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NextLevel/NextLevel&quot;&gt;NextLevel&lt;/a&gt; - Next Level is a media capture camera library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/remirobert/CameraEngine&quot;&gt;CameraEngine&lt;/a&gt; - Camera engine for iOS, written in Swift, above AVFoundation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Awalz/SwiftyCam&quot;&gt;SwiftyCam&lt;/a&gt; - A Snapchat Inspired iOS Camera Framework written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/CameraBackground&quot;&gt;CameraBackground&lt;/a&gt; - Show camera layer as a background to any UIView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dokun1/Lumina&quot;&gt;Lumina&lt;/a&gt; - Full service camera that takes photos, videos, streams frames, detects metadata, and streams CoreML predictions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rallahaseh/RAImagePicker&quot;&gt;RAImagePicker&lt;/a&gt; - RAImagePicker is a protocol-oriented framework that provides custom features from the built-in Image Picker Edit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fulldecent/FDTake&quot;&gt;FDTake&lt;/a&gt; - Easily take a photo or video or choose from library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yummypets/YPImagePicker&quot;&gt;YPImagePicker&lt;/a&gt; - Instagram-like image picker &amp;amp; filters for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/MockImagePicker&quot;&gt;MockImagePicker&lt;/a&gt; - Mock UIImagePickerController for testing camera based UI in simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shu223/iOS-Depth-Sampler&quot;&gt;iOS-Depth-Sampler&lt;/a&gt; - A collection of code examples for Depth APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/TakeASelfie&quot;&gt;TakeASelfie&lt;/a&gt; - An iOS framework that uses the front camera, detects your face and takes a selfie.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eonist/HybridCamera&quot;&gt;HybridCamera&lt;/a&gt; - Video and photo camera for iOS, similar to the SnapChat camera.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CameraKit/camerakit-ios&quot;&gt;CameraKit-iOS&lt;/a&gt; - Massively increase camera performance and ease of use in your next iOS project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/mediapicker&quot;&gt;ExyteMediaPicker&lt;/a&gt; - Customizable media picker&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mijick/Camera&quot;&gt;MijickCamera&lt;/a&gt; - Camera made simple. Fully customizable camera library that significantly reduces implementation time and effort. Written with and for SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Force Touch&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Quick actions and peek and pop interactions&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ricardopereira/QuickActions&quot;&gt;QuickActions&lt;/a&gt; - Swift wrapper for iOS Home Screen Quick Actions (App Icon Shortcuts).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justeat/JustPeek&quot;&gt;JustPeek&lt;/a&gt; - JustPeek is an iOS Library that adds support for Force Touch-like Peek and Pop interactions on devices that do not natively support this kind of interaction.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/itsmeichigo/PeekView&quot;&gt;PeekView&lt;/a&gt; - PeekView supports peek, pop and preview actions for iOS devices without 3D Touch capibility.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;iBeacon&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Device detect libraries and iBeacon helpers&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Proxitee/iOS-SDK&quot;&gt;Proxitee&lt;/a&gt; - Allows developers to create proximity aware applications utilizing iBeacons &amp;amp; geo fences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ohayon/OWUProximityManager&quot;&gt;OWUProximityManager&lt;/a&gt; - iBeacons + CoreBluetooth.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Instrument/Vicinity&quot;&gt;Vicinity&lt;/a&gt; - Vicinity replicates iBeacons (by analyzing RSSI) and supports broadcasting and detecting low-energy Bluetooth devices in the background.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lgaches/BeaconEmitter&quot;&gt;BeaconEmitter&lt;/a&gt; - Turn your Mac as an iBeacon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mocaplatform.com/features&quot;&gt;MOCA Proximity&lt;/a&gt; - Paid proximity marketing platform that lets you add amazing proximity experiences to your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/izotx/JMCBeaconManager&quot;&gt;JMCBeaconManager&lt;/a&gt; - An iBeacon Manager class that is responsible for detecting beacons nearby.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Location&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Location monitoring, detect motion and geofencing libraries&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AsyncSwift/AsyncLocationKit&quot;&gt;AsyncLocationKit&lt;/a&gt; - Wrapper for Apple CoreLocation framework with Modern Concurrency Swift (async/await).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IngeoSDK/ingeo-ios-sdk&quot;&gt;IngeoSDK&lt;/a&gt; - Always-On Location monitoring framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/intuit/LocationManager&quot;&gt;LocationManager&lt;/a&gt; - Provides a block-based asynchronous API to request the current location, either once or continuously.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/malcommac/SwiftLocation&quot;&gt;SwiftLocation&lt;/a&gt; - Location &amp;amp; Beacon Monitoring in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arturdev/SOMotionDetector&quot;&gt;SOMotionDetector&lt;/a&gt; - Simple library to detect motion. Based on location updates and acceleration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZhuoranTan/LocationPicker&quot;&gt;LocationPicker&lt;/a&gt; - A ready for use and fully customizable location picker for your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benzamin/BBLocationManager&quot;&gt;BBLocationManager&lt;/a&gt; - A Location Manager for easily implementing location services &amp;amp; geofencing in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/set-simulator-location&quot;&gt;set-simulator-location&lt;/a&gt; - CLI for setting location in the iOS simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/caloon/NominatimKit&quot;&gt;NominatimKit&lt;/a&gt; - A Swift wrapper for (reverse) geocoding of OpenStreetMap data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Other Hardware&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MHaroonBaig/MotionKit&quot;&gt;MotionKit&lt;/a&gt; - Get the data from Accelerometer, Gyroscope and Magnetometer in only Two or a few lines of code. CoreMotion now made insanely simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jensmeder/DarkLightning&quot;&gt;DarkLightning&lt;/a&gt; - Simply the fastest way to transmit data between iOS/tvOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrealufino/Deviice&quot;&gt;Deviice&lt;/a&gt; - Simply library to detect the device on which the app is running (and some properties).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devicekit/DeviceKit&quot;&gt;DeviceKit&lt;/a&gt; - DeviceKit is a value-type replacement of UIDevice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrealufino/Luminous&quot;&gt;Luminous&lt;/a&gt; - Luminous is a big framework which can give you a lot of information (more than 50) about the current system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ekhoo/Device&quot;&gt;Device&lt;/a&gt; - Light weight tool for detecting the current device and screen size written in swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ezefranca/WatchShaker&quot;&gt;WatchShaker&lt;/a&gt; - WatchShaker is a watchOS helper to get your shake movement written in swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/WatchCon&quot;&gt;WatchCon&lt;/a&gt; - WatchCon is a tool which enables creating easy connectivity between iOS and WatchOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WorldDownTown/TapticEngine&quot;&gt;TapticEngine&lt;/a&gt; - TapticEngine generates iOS Device vibrations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nirma/UIDeviceComplete&quot;&gt;UIDeviceComplete&lt;/a&gt; - UIDevice extensions that fill in the missing pieces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jvk75/NFCNDEFParse&quot;&gt;NFCNDEFParse&lt;/a&gt; - NFC Forum Well Known Type Data Parser for iOS11 and Core NFC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/schickling/Device.swift&quot;&gt;Device.swift&lt;/a&gt; - Super-lightweight library to detect used device.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sebyddd/SDVersion&quot;&gt;SDVersion&lt;/a&gt; - Lightweight Cocoa library for detecting the running device&#39;s model and screen size.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iSapozhnik/Haptico&quot;&gt;Haptico&lt;/a&gt; - Easy to use haptic feedback generator with pattern-play support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndyQ/NFCPassportReader&quot;&gt;NFCPassportReader&lt;/a&gt; - Swift library to read an NFC enabled passport. Supports BAC, Secure Messaging, and both active and passive authentication. Requires iOS 13 or above.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Layout&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Auto Layout, UI frameworks and a gorgeous list of tools to simplify layout constructions&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SnapKit/Masonry&quot;&gt;Masonry&lt;/a&gt; - Harness the power of AutoLayout NSLayoutConstraints with a simplified, chainable and expressive syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/floriankugler/FLKAutoLayout&quot;&gt;FLKAutoLayout&lt;/a&gt; - UIView category which makes it easy to create layout constraints in code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mamaral/Facade&quot;&gt;Façade&lt;/a&gt; - Programmatic view layout for the rest of us - an autolayout alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PureLayout/PureLayout&quot;&gt;PureLayout&lt;/a&gt; - The ultimate API for iOS &amp;amp; macOS Auto Layout — impressively simple, immensely powerful. Objective-C and Swift compatible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SnapKit/SnapKit&quot;&gt;SnapKit&lt;/a&gt; - A Swift Autolayout DSL for iOS &amp;amp; macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robb/Cartography&quot;&gt;Cartography&lt;/a&gt; - A declarative Auto Layout DSL for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruipfcosta/AutoLayoutPlus&quot;&gt;AutoLayoutPlus&lt;/a&gt; - A bit of steroids for AutoLayout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mamaral/Neon&quot;&gt;Neon&lt;/a&gt; - A powerful Swift programmatic UI layout framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/MisterFusion&quot;&gt;MisterFusion&lt;/a&gt; - A Swift DSL for AutoLayout. It is the extremely clear, but concise syntax, in addition, can be used in both Swift and Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshaber/SwiftBox&quot;&gt;SwiftBox&lt;/a&gt; - Flexbox in Swift, using Facebook&#39;s css-layout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isair/ManualLayout&quot;&gt;ManualLayout&lt;/a&gt; - Easy to use and flexible library for manually laying out views and layers for iOS and tvOS. Supports AsyncDisplayKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freshOS/Stevia&quot;&gt;Stevia&lt;/a&gt; - Elegant view layout for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/floriankrueger/Manuscript&quot;&gt;Manuscript&lt;/a&gt; - AutoLayoutKit in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/forkingdog/UITableView-FDTemplateLayoutCell&quot;&gt;FDTemplateLayoutCell&lt;/a&gt; - Template auto layout cell for automatically UITableViewCell height calculating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indragiek/SwiftAutoLayout&quot;&gt;SwiftAutoLayout&lt;/a&gt; - Tiny Swift DSL for Autolayout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evan-liu/FormationLayout&quot;&gt;FormationLayout&lt;/a&gt; - Work with auto layout and size classes easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fhisa/SwiftyLayout&quot;&gt;SwiftyLayout&lt;/a&gt; - Lightweight declarative auto-layout framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Skyvive/Swiftstraints&quot;&gt;Swiftstraints&lt;/a&gt; - Auto Layout In Swift Made Easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeclarativeHub/Bond&quot;&gt;SwiftBond&lt;/a&gt; - Bond is a Swift binding framework that takes binding concepts to a whole new level. It&#39;s simple, powerful, type-safe and multi-paradigm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/puffinsupply/Restraint&quot;&gt;Restraint&lt;/a&gt; - Minimal Auto Layout in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nakiostudio/EasyPeasy&quot;&gt;EasyPeasy&lt;/a&gt; - Auto Layout made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://akordadev.github.io/AutoLayoutMagic/&quot;&gt;Auto Layout Magic&lt;/a&gt; - Build 1 scene, let Auto Layout Magic generate the constraints for you! Scenes look great across all devices!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mergesort/Anchorman&quot;&gt;Anchorman&lt;/a&gt; - An autolayout library for the damn fine citizens of San Diego.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linkedin/LayoutKit&quot;&gt;LayoutKit&lt;/a&gt; - LayoutKit is a fast view layout library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stevestreza/Relayout&quot;&gt;Relayout&lt;/a&gt; - Swift microframework for declaring Auto Layout constraints functionally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Rightpoint/Anchorage&quot;&gt;Anchorage&lt;/a&gt; - A collection of operators and utilities that simplify iOS layout code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/grupozap/Compose&quot;&gt;Compose&lt;/a&gt; - Compose is a library that helps you compose complex and dynamic views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wayfair/brickkit-ios&quot;&gt;BrickKit&lt;/a&gt; - With BrickKit, you can create complex and responsive layouts in a simple way. It&#39;s easy to use and easy to extend. Create your own reusable bricks and behaviors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Otbivnoe/Framezilla&quot;&gt;Framezilla&lt;/a&gt; - Elegant library which wraps working with frames with a nice chaining syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roberthein/TinyConstraints&quot;&gt;TinyConstraints&lt;/a&gt; - The syntactic sugar that makes Auto Layout sweeter for human use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/youngsoft/MyLinearLayout&quot;&gt;MyLinearLayout&lt;/a&gt; - MyLayout is a powerful iOS UI framework implemented by Objective-C. It integrates the functions with Android Layout,iOS AutoLayout,SizeClass, HTML CSS float and flexbox and bootstrap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ashikahmad/SugarAnchor&quot;&gt;SugarAnchor&lt;/a&gt; - Same native NSLayoutAnchor &amp;amp; NSLayoutConstraints; but with more natural and easy to read syntactic sugar. Typesafe, concise &amp;amp; readable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/EasyAnchor&quot;&gt;EasyAnchor&lt;/a&gt; - Declarative, extensible, powerful Auto Layout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/layoutBox/PinLayout&quot;&gt;PinLayout&lt;/a&gt; - Fast Swift Views layouting without auto layout. No magic, pure code, full control and blazing fast. Concise syntax, intuitive, readable &amp;amp; chainable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sp71/SnapLayout&quot;&gt;SnapLayout&lt;/a&gt; - Concise Auto Layout API to chain programmatic constraints while easily updating existing constraints.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nerdycat/Cupcake&quot;&gt;Cupcake&lt;/a&gt; - An easy way to create and layout UI components for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/MiniLayout&quot;&gt;MiniLayout&lt;/a&gt; - Minimal AutoLayout convenience layer. Program constraints succinctly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wordlessj/Bamboo&quot;&gt;Bamboo&lt;/a&gt; - Bamboo makes Auto Layout (and manual layout) elegant and concise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/layoutBox/FlexLayout&quot;&gt;FlexLayout&lt;/a&gt; - FlexLayout gently wraps the highly optimized &lt;a href=&quot;https://github.com/facebook/yoga&quot;&gt;facebook/yoga&lt;/a&gt; flexbox implementation in a concise, intuitive &amp;amp; chainable syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicklockwood/layout&quot;&gt;Layout&lt;/a&gt; - A declarative UI framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/k-o-d-e-n/CGLayout&quot;&gt;CGLayout&lt;/a&gt; - Powerful autolayout framework based on constraints, that can manage UIView(NSView), CALayer and not rendered views. Not Apple Autolayout wrapper.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/yoga/tree/master/YogaKit&quot;&gt;YogaKit&lt;/a&gt; - Powerful layout engine which implements Flexbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AntonTheDev/FlightLayout&quot;&gt;FlightLayout&lt;/a&gt; - Balanced medium between manual layout and auto-layout. Great for calculating frames for complex animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josejuanqm/QLayout&quot;&gt;QLayout&lt;/a&gt; - AutoLayout Utility for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeclarativeHub/Layoutless&quot;&gt;Layoutless&lt;/a&gt; - Minimalistic declarative layout and styling framework built on top of Auto Layout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kean/Align&quot;&gt;Yalta&lt;/a&gt; - An intuitive and powerful Auto Layout library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lionheart/SuperLayout&quot;&gt;SuperLayout&lt;/a&gt; - Simplify Auto Layout with super syntactic sugar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huri000/QuickLayout&quot;&gt;QuickLayout&lt;/a&gt; - QuickLayout offers a simple way, to easily manage Auto Layout in code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/efekanegeli/EEStackLayout&quot;&gt;EEStackLayout&lt;/a&gt; - A structured vertical stack layout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daskioff/RKAutoLayout&quot;&gt;RKAutoLayout&lt;/a&gt; - Simple wrapper over AutoLayout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/Grid&quot;&gt;Grid&lt;/a&gt; - The most powerful Grid container missed in SwiftUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/MondrianLayout&quot;&gt;MondrianLayout&lt;/a&gt; - A DSL based layout builder for AutoLayout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/ScalingHeaderScrollView.git&quot;&gt;ScalingHeaderScrollView&lt;/a&gt; - A scroll view with a sticky header which shrinks as you scroll. Written with SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools to manage strings files, translate and enable localization in your apps.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Aufree/Hodor&quot;&gt;Hodor&lt;/a&gt; - Simple solution to localize your iOS App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomkowz/Swifternalization&quot;&gt;Swifternalization&lt;/a&gt; - Localize iOS apps in a smarter way using JSON files. Swift framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dcordero/Rubustrings&quot;&gt;Rubustrings&lt;/a&gt; - Check the format and consistency of Localizable.strings files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flinesoft/BartyCrouch&quot;&gt;BartyCrouch&lt;/a&gt; - Incrementally update/translate your Strings files from Code and Storyboards/XIBs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/willpowell8/LocalizationKit_iOS&quot;&gt;LocalizationKit&lt;/a&gt; - Localization management in realtime from a web portal. Easily manage your texts and translations without redeploy and resubmission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/Localize-Swift&quot;&gt;Localize-Swift&lt;/a&gt; - Swift 2.0 friendly localization and i18n with in-app language switching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darkcl/LocalizedView&quot;&gt;LocalizedView&lt;/a&gt; - Setting up application specific localized string within Xib file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jintin/transai&quot;&gt;transai&lt;/a&gt; - command line tool help you manage localization string files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metasmile/strsync&quot;&gt;Strsync&lt;/a&gt; - Automatically translate and synchronize .strings files from base language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PiXeL16/IBLocalizable&quot;&gt;IBLocalizable&lt;/a&gt; - Localize your views directly in Interface Builder with IBLocalizable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/samdmarshall/nslocalizer&quot;&gt;nslocalizer&lt;/a&gt; - A tool for finding missing and unused NSLocalizedStrings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Decybel07/L10n-swift&quot;&gt;L10n-swift&lt;/a&gt; - Localization of an application with ability to change language &quot;on the fly&quot; and support for plural forms in any language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andresilvagomez/Localize&quot;&gt;Localize&lt;/a&gt; - Easy tool to localize apps using JSON or Strings and of course IBDesignables with extensions for UI components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crowdin/mobile-sdk-ios&quot;&gt;CrowdinSDK&lt;/a&gt; - Crowdin iOS SDK delivers all new translations from Crowdin project to the application immediately.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fkirc/attranslate&quot;&gt;attranslate&lt;/a&gt; - Semi-automatically translate or synchronize .strings files or crossplatform-files from different languages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://respresso.io/localization-converter&quot;&gt;Respresso Localization Converter&lt;/a&gt; - Multiplatform localization converter for iOS (.strings + Objective-C getters), Android (strings.xml) and Web (.json).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Asana/locheck&quot;&gt;locheck&lt;/a&gt; - Validate .strings, .stringsdict, and strings.xml files for correctness to avoid crashes and bad translations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stringswitch.com&quot;&gt;StringSwitch&lt;/a&gt; - Easily convert iOS .strings files to Android strings.xml format and vice versa.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Debugging lives here. Logging tools, frameworks, integrations and more.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/emaloney/CleanroomLogger&quot;&gt;CleanroomLogger&lt;/a&gt; - A configurable and extensible Swift-based logging API that is simple, lightweight and performant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CocoaLumberjack/CocoaLumberjack&quot;&gt;CocoaLumberjack&lt;/a&gt; - A fast &amp;amp; simple, yet powerful &amp;amp; flexible logging framework for Mac and iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fpillet/NSLogger&quot;&gt;NSLogger&lt;/a&gt; - a high performance logging utility which displays traces emitted by client applications running on macOS, iOS and Android.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/goktugyil/QorumLogs&quot;&gt;QorumLogs&lt;/a&gt; — Swift Logging Utility for Xcode &amp;amp; Google Docs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delba/Log&quot;&gt;Log&lt;/a&gt; - A logging tool with built-in themes, formatters, and a nice API to define your owns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onevcat/Rainbow&quot;&gt;Rainbow&lt;/a&gt; - Delightful console output for Swift developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftyBeaver/SwiftyBeaver&quot;&gt;SwiftyBeaver&lt;/a&gt; - Convenient logging during development and release.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scottrhoyt/SwiftyTextTable&quot;&gt;SwiftyTextTable&lt;/a&gt; - A lightweight tool for generating text tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wojteklu/Watchdog&quot;&gt;Watchdog&lt;/a&gt; - Class for logging excessive blocking on the main thread.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DaveWoodCom/XCGLogger&quot;&gt;XCGLogger&lt;/a&gt; - A debug log framework for use in Swift projects. Allows you to log details to the console (and optionally a file), just like you would have with NSLog or println, but with additional information, such as the date, function name, filename and line number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icodeforlove/Colors&quot;&gt;Colors&lt;/a&gt; - A pure Swift library for using ANSI codes. Basically makes command-line coloring and styling very easy!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AELog&quot;&gt;AELog&lt;/a&gt; - Simple, lightweight and flexible debug logging framework written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattcomi/ReflectedStringConvertible&quot;&gt;ReflectedStringConvertible&lt;/a&gt; - A protocol that allows any class to be printed as if it were a struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/SwiftTrace&quot;&gt;SwiftTrace&lt;/a&gt; - Trace Swift and Objective-C method invocations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nike-Inc/Willow&quot;&gt;Willow&lt;/a&gt; - Willow is a powerful, yet lightweight logging library written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bugfender/BugfenderSDK-iOS&quot;&gt;Bugfender&lt;/a&gt; - Cloud storage for your app logs. Track user behaviour to find problems in your mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeveloperLx/LxDBAnything&quot;&gt;LxDBAnything&lt;/a&gt; - Automate box any value! Print log without any format control symbol! Change debug habit thoroughly!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xareelee/XLTestLog&quot;&gt;XLTestLog&lt;/a&gt; - Styling and coloring your XCTest logs on Xcode Console.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swisspol/XLFacility&quot;&gt;XLFacility&lt;/a&gt; - Elegant and extensive logging facility for macOS &amp;amp; iOS (includes database, Telnet and HTTP servers).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DrewKiino/Atlantis&quot;&gt;Atlantis&lt;/a&gt; - A powerful input-agnostic swift logging framework made to speed up development with maximum readability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drekka/StoryTeller&quot;&gt;StoryTeller&lt;/a&gt; - Taking a completely different approach to logging, Story Teller replacing fixed logging levels in It then uses dynamic expressions to control the logging so you only see what is important.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ubclaunchpad/LumberMill&quot;&gt;LumberMill&lt;/a&gt; - Stupidly simple logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cosmo/TinyConsole&quot;&gt;TinyConsole&lt;/a&gt; - A tiny log console to display information while using your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/Lighty&quot;&gt;Lighty&lt;/a&gt; - Easy to use and lightweight logger for iOS, macOS, tvOS, watchOS and Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justeat/JustLog&quot;&gt;JustLog&lt;/a&gt; - Console, file and remote Logstash logging via TCP socket.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twitter/ios-twitter-logging-service&quot;&gt;Twitter Logging Service&lt;/a&gt; - Twitter Logging Service is a robust and performant logging framework for iOS clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AckeeCZ/Reqres&quot;&gt;Reqres&lt;/a&gt; - Network request and response body logger with Alamofire support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tonystone/tracelog&quot;&gt;TraceLog&lt;/a&gt; - Dead Simple: logging the way it&#39;s meant to be! Runs on ios, osx, and Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/diegotl/OkLog-Swift&quot;&gt;OkLog&lt;/a&gt; - A network logger for iOS and macOS projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appunite/Spy&quot;&gt;Spy&lt;/a&gt; - Lightweight, flexible, multiplatform (iOS, macOS, tvOS, watchOS, Linux) logging utility written in pure Swift that allows you to log on different levels and channels which you can define on your own depending on your needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WeTransfer/Diagnostics&quot;&gt;Diagnostics&lt;/a&gt; - Allow users to easily share Diagnostics with your support team to improve the flow of fixing bugs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannzai/gedatsu&quot;&gt;Gedatsu&lt;/a&gt; - Provide readable format about AutoLayout error console log.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kean/Pulse&quot;&gt;Pulse&lt;/a&gt; - Pulse is a powerful logging system for Apple Platforms. Native. Built with SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Machine Learning&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;A collection of ML Models, deep learning and neural networking libraries&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vlall/Swift-Brain&quot;&gt;Swift-Brain&lt;/a&gt; - Artificial Intelligence/Machine Learning data structures and Swift algorithms for future iOS development. Bayes theorem, Neural Networks, and more AI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KevinCoble/AIToolbox&quot;&gt;AIToolbox&lt;/a&gt; - A toolbox of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios&quot;&gt;Tensorflow-iOS&lt;/a&gt; - The official Google-built powerful neural network library port for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Bender&quot;&gt;Bender&lt;/a&gt; - Easily craft fast Neural Networks. Use TensorFlow models. Metal under the hood.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ytakzk/CoreML-samples&quot;&gt;CoreML-samples&lt;/a&gt; - Sample code for Core ML using ResNet50 provided by Apple and a custom model generated by coremltools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/petrmanek/Revolver&quot;&gt;Revolver&lt;/a&gt; - A framework for building fast genetic algorithms in Swift. Comes with modular architecture, pre-implemented operators and loads of examples.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/likedan/Awesome-CoreML-Models&quot;&gt;CoreML-Models&lt;/a&gt; - A collection of unique Core ML Models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pcpLiu/Serrano&quot;&gt;Serrano&lt;/a&gt; - A deep learning library for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Swift-AI/Swift-AI&quot;&gt;Swift-AI&lt;/a&gt; - The Swift machine learning library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qoncept/TensorSwift&quot;&gt;TensorSwift&lt;/a&gt; - A lightweight library to calculate tensors in Swift, which has similar APIs to TensorFlow&#39;s.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palle-k/DL4S&quot;&gt;DL4S&lt;/a&gt; - Deep Learning for Swift: Accelerated tensor operations and dynamic neural networks based on reverse mode automatic differentiation for every device that can run Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JacopoMangiavacchi/SwiftCoreMLTools&quot;&gt;SwiftCoreMLTools&lt;/a&gt; - A Swift library for creating and exporting CoreML Models in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shu223/iOS-GenAI-Sampler&quot;&gt;iOS-GenAI-Sampler&lt;/a&gt; - A collection of Generative AI examples on iOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Maps&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mapbox/mapbox-gl-native&quot;&gt;Mapbox GL&lt;/a&gt; - An OpenGL renderer for Mapbox Vector Tiles with SDK bindings for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GEOSwift/GEOSwift&quot;&gt;GEOSwift&lt;/a&gt; - The Swift Geographic Engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/poulpix/PXGoogleDirections&quot;&gt;PXGoogleDirections&lt;/a&gt; - Google Directions API helper for iOS, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/efremidze/Cluster&quot;&gt;Cluster&lt;/a&gt; - Easy Map Annotation Clustering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jamesdouble/JDSwiftHeatMap&quot;&gt;JDSwiftHeatMap&lt;/a&gt; - JDSwiftMap is an IOS Native MapKit Library. You can easily make a highly customized HeatMap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hulab/ClusterKit&quot;&gt;ClusterKit&lt;/a&gt; - An iOS map clustering framework targeting MapKit, Google Maps and Mapbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SvenTiigi/FlyoverKit&quot;&gt;FlyoverKit&lt;/a&gt; - FlyoverKit enables you to present stunning 360° flyover views on your MKMapView with zero effort while maintaining full configuration possibilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/okhanokbay/MapViewPlus&quot;&gt;MapViewPlus&lt;/a&gt; - Use any custom view as custom callout view of your MKMapView with cool animations. Also, easily use any image as annotation view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mabdulsubhan/MSFlightMapView&quot;&gt;MSFlightMapView&lt;/a&gt; - Add and animate geodesic flights on Google map.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mousebird/WhirlyGlobe&quot;&gt;WhirlyGlobe-Maply&lt;/a&gt; - 3D globe and flat-map SDK for iOS. This toolkit has a large API for fine-grained control over the map or globe. It reads a wide variety of GIS data formats.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Math&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Math frameworks, functions and libraries to custom operations, statistical calculations and more.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/Euler&quot;&gt;Euler&lt;/a&gt; - Swift Custom Operators for Mathematical Notation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/madbat/SwiftMath&quot;&gt;SwiftMath&lt;/a&gt; - A math framework for Swift. Includes: vectors, matrices, complex numbers, quaternions and polynomials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phimage/Arithmosophi&quot;&gt;Arithmosophi&lt;/a&gt; - A set of protocols for Arithmetic and Logical operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/Surge&quot;&gt;Surge&lt;/a&gt; - A Swift library that uses the Accelerate framework to provide high-performance functions for matrix math, digital signal processing, and image manipulation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alejandro-isaza/Upsurge&quot;&gt;Upsurge&lt;/a&gt; - Swift math.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rugheid/Swift-MathEagle&quot;&gt;Swift-MathEagle&lt;/a&gt; - A general math framework to make using math easy. Currently supports function solving and optimisation, matrix and vector algebra, complex numbers, big int and big frac and general handy extensions and functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kostub/iosMath&quot;&gt;iosMath&lt;/a&gt; - A library for displaying beautifully rendered math equations. Enables typesetting LaTeX math formulae in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/attaswift/BigInt&quot;&gt;BigInt&lt;/a&gt; - Arbitrary-precision arithmetic in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evgenyneu/SigmaSwiftStatistics&quot;&gt;SigmaSwiftStatistics&lt;/a&gt; - A collection of functions for statistical calculation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicklockwood/VectorMath&quot;&gt;VectorMath&lt;/a&gt; - A Swift library for Mac and iOS that implements common 2D and 3D vector and matrix functions, useful for games or vector-based graphics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicklockwood/Expression&quot;&gt;Expression&lt;/a&gt; - A Mac and iOS library for evaluating numeric expressions at runtime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/toineheuvelmans/Metron&quot;&gt;Metron&lt;/a&gt; - Metron is a comprehensive collection of geometric functions and types that extend the 2D geometric primitives provided by CoreGraphics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xwu/NumericAnnex&quot;&gt;NumericAnnex&lt;/a&gt; - NumericAnnex supplements the numeric facilities provided in the Swift standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jjjkkkjjj/Matft&quot;&gt;Matft&lt;/a&gt; - Matft is Numpy-like library in Swift. Matft allows us to handle n-dimensional array easily in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Media&lt;/h2&gt; 
&lt;h3&gt;Audio&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.audiob.us/&quot;&gt;AudioBus&lt;/a&gt; - Add Next Generation Live App-to-App Audio Routing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/audiokit/AudioKit&quot;&gt;AudioKit&lt;/a&gt; - A powerful toolkit for synthesizing, processing, and analyzing sounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/syedhali/EZAudio&quot;&gt;EZAudio&lt;/a&gt; - An iOS/macOS audio visualization framework built upon Core Audio useful for anyone doing real-time, low-latency audio processing and visualizations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexbw/novocaine&quot;&gt;novocaine&lt;/a&gt; - Painless high-performance audio on iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quentinhayot/QHSpeechSynthesizerQueue&quot;&gt;QHSpeechSynthesizerQueue&lt;/a&gt; - Queue management system for AVSpeechSynthesizer (iOS Text to Speech).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evgenyneu/Cephalopod&quot;&gt;Cephalopod&lt;/a&gt; - A sound fader for AVAudioPlayer written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trifl/Chirp&quot;&gt;Chirp&lt;/a&gt; - The easiest way to prepare, play, and remove sounds in your Swift app!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vadymmarkov/Beethoven&quot;&gt;Beethoven&lt;/a&gt; - An audio processing Swift library for pitch detection of musical signals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tbaranes/AudioPlayerSwift&quot;&gt;AudioPlayerSwift&lt;/a&gt; - AudioPlayer is a simple class for playing audio in iOS, macOS and tvOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delannoyk/AudioPlayer&quot;&gt;AudioPlayer&lt;/a&gt; - AudioPlayer is syntax and feature sugar over AVPlayer. It plays your audio files (local &amp;amp; remote).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/comyar/TuningFork&quot;&gt;TuningFork&lt;/a&gt; - Simple Tuner for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benzguo/MusicKit&quot;&gt;MusicKit&lt;/a&gt; - A framework for composing and transforming music in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/SubtleVolume&quot;&gt;SubtleVolume&lt;/a&gt; - Replace the system volume popup with a more subtle indicator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bartolsthoorn/NVDSP&quot;&gt;NVDSP&lt;/a&gt; - iOS/macOS DSP for audio (with Novocaine).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SRGSSR/SRGMediaPlayer-iOS&quot;&gt;SRGMediaPlayer-iOS&lt;/a&gt; - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackiftekhar/IQAudioRecorderController&quot;&gt;IQAudioRecorderController&lt;/a&gt; - A drop-in universal library allows to record audio within the app with a nice User Interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TheAmazingAudioEngine/TheAmazingAudioEngine2&quot;&gt;TheAmazingAudioEngine2&lt;/a&gt; - The Amazing Audio Engine is a sophisticated framework for iOS audio applications, built so you don&#39;t have to.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AhmettKeskin/InteractivePlayerView&quot;&gt;InteractivePlayerView&lt;/a&gt; - Custom iOS music player view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Aufree/ESTMusicIndicator&quot;&gt;ESTMusicIndicator&lt;/a&gt; - Cool Animated music indicator view written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quiet/QuietModemKit&quot;&gt;QuietModemKit&lt;/a&gt; - iOS framework for the Quiet Modem (data over sound).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adamcichy/SwiftySound&quot;&gt;SwiftySound&lt;/a&gt; - Super simple library that lets you play sounds with a single line of code (and much more). Written in Swift 3, supports iOS, macOS and tvOS. CocoaPods and Carthage compatible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Luccifer/BPM-Analyser&quot;&gt;BPMAnalyser&lt;/a&gt; - Fast and simple instrument to get the BPM rate from your audio-files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AppliKeySolutions/PandoraPlayer&quot;&gt;PandoraPlayer&lt;/a&gt; - A lightweight music player for iOS, based on AudioKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Luccifer/SonogramView&quot;&gt;SonogramView&lt;/a&gt; - Audio visualisation of song.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeonardoCardoso/AudioIndicatorBars&quot;&gt;AudioIndicatorBars&lt;/a&gt; - AIB indicates for your app users which audio is playing. Just like the Podcasts app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Picovoice/Porcupine&quot;&gt;Porcupine&lt;/a&gt; - On-device wake word detection engine for macOS, iOS, and watchOS, powered by deep learning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/algolia/voice-overlay-ios&quot;&gt;Voice Overlay&lt;/a&gt; - An overlay that gets your user’s voice permission and input as text in a customizable UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/noreasonprojects/ModernAVPlayer&quot;&gt;ModernAVPlayer&lt;/a&gt; - Persistence player to resume playback after bad network connection even in background mode, manage headphone interactions, system interruptions, now playing informations and remote commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fulldecent/FDWaveformView&quot;&gt;FDWaveformView&lt;/a&gt; - An easy way to display an audio waveform in your app, including animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fulldecent/FDSoundActivatedRecorder&quot;&gt;FDSoundActivatedRecorder&lt;/a&gt; - Start recording when the user speaks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;GIF&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liyong03/YLGIFImage&quot;&gt;YLGIFImage&lt;/a&gt; - Async GIF image decoder and Image viewer supporting play GIF images. It just use very less memory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flipboard/FLAnimatedImage&quot;&gt;FLAnimatedImage&lt;/a&gt; - Performant animated GIF engine for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaishin/gifu&quot;&gt;gifu&lt;/a&gt; - Highly performant animated GIF support for iOS in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/AnimatedGIFImageSerialization&quot;&gt;AnimatedGIFImageSerialization&lt;/a&gt; - Complete Animated GIF Support for iOS, with Functions, NSJSONSerialization-style Class, and (Optional) UIImage Swizzling&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khaledmtaha/XAnimatedImage&quot;&gt;XAnimatedImage&lt;/a&gt; - XAnimatedImage is a performant animated GIF engine for iOS written in Swift based on FLAnimatedImage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swiftgif/SwiftGif&quot;&gt;SwiftGif&lt;/a&gt; - A small UIImage extension with gif support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onevcat/APNGKit&quot;&gt;APNGKit&lt;/a&gt; - High performance and delightful way to play with APNG format in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYImage&quot;&gt;YYImage&lt;/a&gt; - Image framework for iOS to display/encode/decode animated WebP, APNG, GIF, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wangjwchn/AImage&quot;&gt;AImage&lt;/a&gt; - A animated GIF&amp;amp;APNG engine for iOS in Swift with low memory &amp;amp; cpu usage.Optimized for Multi-Image case.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metasmile/NSGIF2&quot;&gt;NSGIF2&lt;/a&gt; - Simplify creation of a GIF from the provided video file url.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kirualex/SwiftyGif&quot;&gt;SwiftyGif&lt;/a&gt; - High performance GIF engine.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Image&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BradLarson/GPUImage&quot;&gt;GPU Image&lt;/a&gt; - An open source iOS framework for GPU-based image and video processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gdawg/uiimage-dsp&quot;&gt;UIImage DSP&lt;/a&gt; - iOS UIImage processing functions using the vDSP/Accelerate framework for speed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicklockwood/AsyncImageView&quot;&gt;AsyncImageView&lt;/a&gt; - Simple extension of UIImageView for loading and displaying images asynchronously without lock up the UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SDWebImage/SDWebImage&quot;&gt;SDWebImage&lt;/a&gt; - Asynchronous image downloader with cache support with an UIImageView category.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kean/DFImageManager&quot;&gt;DFImageManager&lt;/a&gt; - Modern framework for fetching images from various sources. Zero config yet immense customization and extensibility. Uses NSURLSession.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JanGorman/MapleBacon&quot;&gt;MapleBacon&lt;/a&gt; - An image download and caching library for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NYTimes/NYTPhotoViewer&quot;&gt;NYTPhotoViewer&lt;/a&gt; - Slideshow and image viewer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thiagoperes/IDMPhotoBrowser&quot;&gt;IDMPhotoBrowser&lt;/a&gt; - Photo Browser / Viewer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/contentful-labs/Concorde/&quot;&gt;Concorde&lt;/a&gt; - Download and decode progressive JPEGs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimOliver/TOCropViewController&quot;&gt;TOCropViewController&lt;/a&gt; - A view controller that allows users to crop UIImage objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hanton/YXTMotionView&quot;&gt;YXTMotionView&lt;/a&gt; - A custom image view that implements device motion scrolling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pinterest/PINRemoteImage&quot;&gt;PINRemoteImage&lt;/a&gt; - A thread safe, performant, feature rich image fetcher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/SABlurImageView&quot;&gt;SABlurImageView&lt;/a&gt; - Easily Adding Animated Blur/Unblur Effects To An Image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/path/FastImageCache&quot;&gt;FastImageCache&lt;/a&gt; - iOS library for quickly displaying images while scrolling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bkoc/BKAsciiImage&quot;&gt;BKAsciiImage&lt;/a&gt; - Convert UIImage to ASCII art.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/AlamofireImage&quot;&gt;AlamofireImage&lt;/a&gt; - An image component library for Alamofire.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kean/Nuke&quot;&gt;Nuke&lt;/a&gt; - Image loading, processing, caching and preheating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/madebybowtie/FlagKit&quot;&gt;FlagKit&lt;/a&gt; - Beautiful flag icons for usage in apps and on the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYWebImage&quot;&gt;YYWebImage&lt;/a&gt; - Asynchronous image loading framework (supports WebP, APNG, GIF).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruslanskorb/RSKImageCropper&quot;&gt;RSKImageCropper&lt;/a&gt; - An image cropper for iOS like in the Contacts app with support for landscape orientation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josejuanqm/Silo&quot;&gt;Silo&lt;/a&gt; - Image loading framework with loaders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josejuanqm/Ody&quot;&gt;Ody&lt;/a&gt; - Ody is an easy to use random image generator built with Swift, Perfect for placeholders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gauravkatoch007/banana&quot;&gt;Banana&lt;/a&gt; - Image slider with very simple interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JellyDevelopment/JDSwiftAvatarProgress&quot;&gt;JDSwiftAvatarProgress&lt;/a&gt; - Easy customizable avatar image asynchronously with progress bar animated.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onevcat/Kingfisher&quot;&gt;Kingfisher&lt;/a&gt; - A lightweight and pure Swift implemented library for downloading and caching image from the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EddyBorja/EBPhotoPages&quot;&gt;EBPhotoPages&lt;/a&gt; - A photo gallery for iOS with a modern feature set. Similar features as the Facebook photo browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/croath/UIImageView-BetterFace-Swift&quot;&gt;UIImageView-BetterFace-Swift&lt;/a&gt; - The Swift version of &lt;a href=&quot;https://github.com/croath/UIImageView-BetterFace&quot;&gt;https://github.com/croath/UIImageView-BetterFace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kiavashfaisali/KFSwiftImageLoader&quot;&gt;KFSwiftImageLoader&lt;/a&gt; - An extremely high-performance, lightweight, and energy-efficient pure Swift async web image loader with memory and disk caching for iOS and Apple Watch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gavinbunney/Toucan&quot;&gt;Toucan&lt;/a&gt; - Fabulous Image Processing in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hirohisa/ImageLoaderSwift&quot;&gt;ImageLoaderSwift&lt;/a&gt; - A lightweight and fast image loader for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaishin/ImageScout&quot;&gt;ImageScout&lt;/a&gt; - A Swift implementation of fastimage. Supports PNG, GIF, and JPEG.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Textcat/JLStickerTextView&quot;&gt;JLStickerTextView&lt;/a&gt; - A UIImageView allow you to add multiple Label (multiple line text support) on it, you can edit, rotate, resize the Label as you want with one finger ,then render the text on Image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JanGorman/Agrume&quot;&gt;Agrume&lt;/a&gt; - A lemony fresh iOS image viewer written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abiaad/PASImageView&quot;&gt;PASImageView&lt;/a&gt; - Rounded async imageview downloader lightly cached and written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nixzhu/Navi&quot;&gt;Navi&lt;/a&gt; - Focus on avatar caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justinvallely/SwiftPhotoGallery&quot;&gt;SwiftPhotoGallery&lt;/a&gt; - Simple, fullscreen image gallery with tap, swipe, and pinch gestures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wangjwchn/MetalAcc&quot;&gt;MetalAcc&lt;/a&gt; - GPU-based Media processing library using Metal written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mwaterfall/MWPhotoBrowser&quot;&gt;MWPhotoBrowser&lt;/a&gt; - A simple iOS photo and video browser with grid view, captions and selections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jathu/UIImageColors&quot;&gt;UIImageColors&lt;/a&gt; - iTunes style color fetcher for UIImage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jibeex/CDFlipView&quot;&gt;CDFlipView&lt;/a&gt; - A view that takes a set of images, make transition from one to another by using flipping effects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BradLarson/GPUImage2&quot;&gt;GPUImage2&lt;/a&gt; - GPUImage 2 is a BSD-licensed Swift framework for GPU-accelerated video and image processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taglia3/TGLParallaxCarousel&quot;&gt;TGLParallaxCarousel&lt;/a&gt; - A lightweight 3D Linear Carousel with parallax effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dollarshaveclub/ImageButter&quot;&gt;ImageButter&lt;/a&gt; - Makes dealing with images buttery smooth.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suzuki-0000/SKPhotoBrowser&quot;&gt;SKPhotoBrowser&lt;/a&gt; - Simple PhotoBrowser/Viewer inspired by Facebook, Twitter photo browsers written by swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/YuAo/YUCIHighPassSkinSmoothing&quot;&gt;YUCIHighPassSkinSmoothing&lt;/a&gt; - An implementation of High Pass Skin Smoothing using Apple&#39;s Core Image Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vinbhai4u/CLImageViewPopup/&quot;&gt;CLImageViewPopup&lt;/a&gt; - A simple Image full screen pop up.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alterplay/APKenBurnsView&quot;&gt;APKenBurnsView&lt;/a&gt; - Ken Burns effect with face recognition!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evgenyneu/moa&quot;&gt;Moa&lt;/a&gt; - An image download extension of the image view for iOS, tvOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/izotx/JMCMarchingAnts&quot;&gt;JMCMarchingAnts&lt;/a&gt; - Library that lets you add marching ants (animated) selection to the edges of the images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Krisiacik/ImageViewer&quot;&gt;ImageViewer&lt;/a&gt; - An image viewer à la Twitter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BeauNouvelle/FaceAware&quot;&gt;FaceAware&lt;/a&gt; - An extension that gives UIImageView the ability to focus on faces within an image when using AspectFill.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dkalaitzidis/SwiftyAvatar&quot;&gt;SwiftyAvatar&lt;/a&gt; - A UiimageView class for creating circular avatar images, IBDesignable to make all changes via storyboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FlexMonkey/ShinpuruImage&quot;&gt;ShinpuruImage&lt;/a&gt; - Syntactic Sugar for Accelerate/vImage and Core Image Filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lbrndnr/ImagePickerSheetController&quot;&gt;ImagePickerSheetController&lt;/a&gt; - ImagePickerSheetController is like the custom photo action sheet in iMessage just without the glitches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gkye/ComplimentaryGradientView&quot;&gt;ComplimentaryGradientView&lt;/a&gt; - Create complementary gradients generated from dominant and prominent colors in supplied image. Inspired by Grade.js.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zvonicek/ImageSlideshow&quot;&gt;ImageSlideshow&lt;/a&gt; - Swift image slideshow with circular scrolling, timer and full screen viewer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Imaginary&quot;&gt;Imaginary&lt;/a&gt; - Remote images, as easy as one, two, three.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pantuspavel/PPAssetsActionController&quot;&gt;PPAssetsActionController&lt;/a&gt; - Highly customizable Action Sheet Controller with Assets Preview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jinSasaki/Vulcan&quot;&gt;Vulcan&lt;/a&gt; - Multi image downloader with priority in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/floriangbh/FacebookImagePicker&quot;&gt;FacebookImagePicker&lt;/a&gt; - Facebook album photo picker written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Lightbox&quot;&gt;Lightbox&lt;/a&gt; - A convenient and easy to use image viewer for your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ebbapp/ebblinkSDK&quot;&gt;Ebblink&lt;/a&gt; - An iOS SDK for sharing photos that automatically expire and can be deleted at any time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/makomori/Sharaku&quot;&gt;Sharaku&lt;/a&gt; - Instagram-like image filter ViewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scihant/CTPanoramaView&quot;&gt;CTPanoramaView&lt;/a&gt; - Displays spherical or cylindrical panoramas or 360-photos with touch or motion based control options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twitter/ios-twitter-image-pipeline&quot;&gt;Twitter Image Pipline&lt;/a&gt; - streamlined framework for fetching and storing images in an application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TinyCrayon/TinyCrayon-iOS-SDK&quot;&gt;TinyCrayon&lt;/a&gt; - A smart and easy-to-use image masking and cutout SDK for mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kawoou/FlexibleImage&quot;&gt;FlexibleImage&lt;/a&gt; - A simple way to play with image!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tilltue/TLPhotoPicker&quot;&gt;TLPhotoPicker&lt;/a&gt; - Multiple phassets picker for iOS lib. like a facebook.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yapstudios/YapImageManager&quot;&gt;YapImageManager&lt;/a&gt; - A high-performance image downloader written in Swift, powered by YapDatabase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photoeditorsdk.com/&quot;&gt;PhotoEditorSDK&lt;/a&gt; - A fully customizable photo editor for your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aFrogleap/SimpleImageViewer&quot;&gt;SimpleImageViewer&lt;/a&gt; - A snappy image viewer with zoom and interactive dismissal transition.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minitour/AZImagePreview&quot;&gt;AZImagePreview&lt;/a&gt; - A framework that makes image viewing easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KimDarren/FaceCropper&quot;&gt;FaceCropper&lt;/a&gt; - Crop faces, inside of your image, with iOS 11 Vision api.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/avito-tech/Paparazzo&quot;&gt;Paparazzo&lt;/a&gt; - Custom iOS camera and photo picker with editing capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZaidPathan/ZImageCropper&quot;&gt;ZImageCropper&lt;/a&gt; - A Swift project to crop image in any shape.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bachonk/InitialsImageView&quot;&gt;InitialsImageView&lt;/a&gt; - An UIImageView extension that generates letter initials as a placeholder for user profile images, with a randomized background color.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tungvoduc/DTPhotoViewerController&quot;&gt;DTPhotoViewerController&lt;/a&gt; - A fully customizable photo viewer ViewController, inspired by Facebook photo viewer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vpeschenkov/LetterAvatarKit&quot;&gt;LetterAvatarKit&lt;/a&gt; - A UIImage extension that generates letter-based avatars written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexhillc/AXPhotoViewer&quot;&gt;AXPhotoViewer&lt;/a&gt; - An iPhone/iPad photo gallery viewer, useful for viewing a large (or small!) number of photos&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tejas-ardeshna/TJProfileImage&quot;&gt;TJProfileImage&lt;/a&gt; - Live rendering of componet’s properties in Interface Builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3lvis/Viewer&quot;&gt;Viewer&lt;/a&gt; - Image viewer (or Lightbox) with support for local and remote videos and images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aaronjsutton/OverlayComposite&quot;&gt;OverlayComposite&lt;/a&gt; - An asynchronous, multithreaded, image compositing framework written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minecodecraft/MCScratchImageView&quot;&gt;MCScratchImageView&lt;/a&gt; - A custom ImageView that is used to cover the surface of other view like a scratch card, user can swipe the mulch to see the view below.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MetalPetal/MetalPetal&quot;&gt;MetalPetal&lt;/a&gt; - A GPU-accelerated image/video processing framework based on &lt;a href=&quot;https://developer.apple.com/metal/&quot;&gt;Metal&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/olddonkey/ShadowImageView&quot;&gt;ShadowImageView&lt;/a&gt; - ShadowImageView is a iOS 10 Apple Music style image view, help you create elegent image with shadow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wvabrinskas/Avatar&quot;&gt;Avatar&lt;/a&gt; - Generate random user Avatar images using CoreGraphics and QuartzCore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/horitaku46/Serrata&quot;&gt;Serrata&lt;/a&gt; - Slide image viewer library similar to Twitter and LINE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ileafsolutions/StyleArt&quot;&gt;StyleArt&lt;/a&gt; - Style Art library process images using COREML with a set of pre trained machine learning models and convert them to Art style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/500px/greedo-layout-for-ios&quot;&gt;greedo-layout-for-ios&lt;/a&gt; - Full aspect ratio grid layout for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Feghal/ImageDetect&quot;&gt;ImageDetect&lt;/a&gt; - Detect and crop faces, barcodes and texts inside of your image, with iOS 11 Vision api.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TileImageTeamiOS/THTiledImageView&quot;&gt;THTiledImageView&lt;/a&gt; - Provide ultra-high-quality images through tiling techniques.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BradLarson/GPUImage3&quot;&gt;GPUImage3&lt;/a&gt; - GPUImage 3 is a BSD-licensed Swift framework for GPU-accelerated video and image processing using Metal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yangKJ/Harbeth&quot;&gt;Harbeth&lt;/a&gt; - Metal API for GPU accelerated Graphics and Video and Camera filter framework.🔥💥&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Gallery&quot;&gt;Gallery&lt;/a&gt; - Your next favorite image and video picker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/altayer-digital/ATGMediaBrowser&quot;&gt;ATGMediaBrowser&lt;/a&gt; - Image slide-show viewer with multiple predefined transition styles, and ability to create new transitions with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/Pixel&quot;&gt;Pixel&lt;/a&gt; - An image editor and engine using CoreImage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KiranJasvanee/OnlyPictures&quot;&gt;OnlyPictures&lt;/a&gt; - A simple and flexible way to add source of overlapping circular pictures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piknotech/SFSafeSymbols&quot;&gt;SFSafeSymbols&lt;/a&gt; - Safely access Apple&#39;s SF Symbols using static typing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boraseoksoon/BSZoomGridScrollView&quot;&gt;BSZoomGridScrollView&lt;/a&gt; - iOS customizable grid style scrollView UI library to display your UIImage array input, designed primarily for SwiftUI as well as to interoperate with UIKit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Media Processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/garnele007/SwiftOCR&quot;&gt;SwiftOCR&lt;/a&gt; - Fast and simple OCR library written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.appcoda.com/qr-code-ios-programming-tutorial/&quot;&gt;QR Code Scanner&lt;/a&gt; - QR Code implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aschuch/QRCode&quot;&gt;QRCode&lt;/a&gt; - A QRCode generator written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EFPrefix/EFQRCode&quot;&gt;EFQRCode&lt;/a&gt; - A better way to operate two-dimensional code in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lovoo/NSFWDetector&quot;&gt;NSFWDetector&lt;/a&gt; - A NSFW (aka porn) detector with CoreML.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;PDF&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vfr/Reader&quot;&gt;Reader&lt;/a&gt; - PDF Reader Core for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RobertAPhillips/UIView_2_PDF&quot;&gt;UIView 2 PDF&lt;/a&gt; - PDF generator using UIViews or UIViews with an associated XIB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FolioReader/FolioReaderKit&quot;&gt;FolioReaderKit&lt;/a&gt; - A Swift ePub reader and parser framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sgr-ksmt/PDFGenerator&quot;&gt;PDFGenerator&lt;/a&gt; - A simple Generator of PDF in Swift. Generate PDF from view(s) or image(s).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nRewik/SimplePDF&quot;&gt;SimplePDF&lt;/a&gt; - Create a simple PDF effortlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kayoslab/SwiftPDFGenerator&quot;&gt;SwiftPDFGenerator&lt;/a&gt; - PDF generator using UIViews; Swift Version of &#39;UIView 2 PDF&#39;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pspdfkit.com/&quot;&gt;PSPDFKit&lt;/a&gt; - Render PDF, add/edit annotations, fill forms, add/edit pages, view/create digital signatures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Techprimate/TPPDF&quot;&gt;TPPDF&lt;/a&gt; - Generate PDF using commands and automatic layout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mobfarm/FastPdfKit&quot;&gt;FastPdfKit&lt;/a&gt; - A Static Library to be embedded on iOS applications to display pdf documents derived from Fast PDF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimaMishchenko/UIImagePlusPDF&quot;&gt;UIImagePlusPDF&lt;/a&gt; - UIImage extensions to simply use PDF files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Streaming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shogo4405/HaishinKit.swift&quot;&gt;HaishinKit.swift&lt;/a&gt; - Camera and Microphone streaming library via RTMP, HLS for iOS, macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tumtumtum/StreamingKit&quot;&gt;StreamingKit&lt;/a&gt; - A fast and extensible gapless AudioPlayer/AudioStreamer for macOS and iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/teodorpatras/Jukebox&quot;&gt;Jukebox&lt;/a&gt; - Player for streaming local and remote audio files. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LaiFengiOS/LFLiveKit&quot;&gt;LFLiveKit&lt;/a&gt; - H264 and AAC Hard coding，support GPUImage Beauty， rtmp transmission，weak network lost frame，Dynamic switching rate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qasim/Airstream&quot;&gt;Airstream&lt;/a&gt; - A framework for streaming audio between Apple devices using AirPlay.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opentok/accelerator-core-ios&quot;&gt;OTAcceleratorCore&lt;/a&gt; - A painless way to integrate audio/video(screen sharing) to any iOS applications via Tokbox.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Video&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/videolan/vlc-ios&quot;&gt;VLC for iOS&lt;/a&gt; - VLC is a free and open source multimedia player for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vimeo/VIMVideoPlayer&quot;&gt;VIMVideoPlayer&lt;/a&gt; - A simple wrapper around the AVPlayer and AVPlayerLayer classes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mobileplayer/mobileplayer-ios&quot;&gt;MobilePlayer&lt;/a&gt; - A powerful and completely customizable media player for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0xced/XCDYouTubeKit&quot;&gt;XCDYouTubeKit&lt;/a&gt; - YouTube video player for iOS, tvOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.modejong.com/AVAnimator/&quot;&gt;AVAnimator&lt;/a&gt; - An open source iOS native library that makes it easy to implement non-trivial video/audio enabled apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gontovnik/Periscope-VideoViewController&quot;&gt;Periscope VideoViewController&lt;/a&gt; - Video view controller with Periscope fast rewind control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mariohahn/MHVideoPhotoGallery&quot;&gt;MHVideoPhotoGallery&lt;/a&gt; - A Photo and Video Gallery.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davidlondono/PlayerView&quot;&gt;PlayerView&lt;/a&gt; - Player View is a delegated view using AVPlayer of Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SRGSSR/SRGMediaPlayer-iOS&quot;&gt;SRGMediaPlayer-iOS&lt;/a&gt; - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhergon/AVPlayerViewController-Subtitles&quot;&gt;AVPlayerViewController-Subtitles&lt;/a&gt; - AVPlayerViewController-Subtitles is a library to display subtitles on iOS. It&#39;s built as a Swift extension and it&#39;s very easy to integrate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mhergon/MPMoviePlayerController-Subtitles&quot;&gt;MPMoviePlayerController-Subtitles&lt;/a&gt; - MPMoviePlayerController-Subtitles is a library to display subtitles on iOS. It&#39;s built as a Swift extension and it&#39;s very easy to integrate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/renzifeng/ZFPlayer&quot;&gt;ZFPlayer&lt;/a&gt; - Based on AVPlayer, support for the horizontal screen, vertical screen (full screen playback can also lock the screen direction), the upper and lower slide to adjust the volume, the screen brightness, or so slide to adjust the playback progress.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piemonte/Player&quot;&gt;Player&lt;/a&gt; - video player in Swift, simple way to play and stream media in your iOS or tvOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BrikerMan/BMPlayer&quot;&gt;BMPlayer&lt;/a&gt; - Video player in swift3 and swift2 for iOS, based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brigtness and seek by slide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/entotsu/VideoPager&quot;&gt;VideoPager&lt;/a&gt; - Paging Video UI, and some control components is available.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NYTimes/ios-360-videos&quot;&gt;ios-360-videos&lt;/a&gt; - NYT360Video plays 360-degree video streamed from an AVPlayer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gsabran/DDDKit&quot;&gt;swift-360-videos&lt;/a&gt; - Pure swift (no SceneKit) 3D library with focus on video and 360.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andrewboryk/ABMediaView&quot;&gt;ABMediaView&lt;/a&gt; - UIImageView subclass for drop-in image, video, GIF, and audio display, with functionality for fullscreen and minimization to the bottom-right corner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HHK1/PryntTrimmerView&quot;&gt;PryntTrimmerView&lt;/a&gt; - A set of UI elements to trim, crop and select frames inside a video.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VeinGuo/VGPlayer&quot;&gt;VGPlayer&lt;/a&gt; - A simple iOS video player in Swift,Support play local and network,Background playback mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rinov/YoutubeKit&quot;&gt;YoutubeKit&lt;/a&gt; - A video player that fully supports Youtube IFrame API and YoutubeDataAPI for easily create a Youtube app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gilesvangruisen/Swift-YouTube-Player&quot;&gt;Swift-YouTube-Player&lt;/a&gt; - Swift library for embedding and controlling YouTube videos in your iOS applications!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jamesdouble/JDVideoKit&quot;&gt;JDVideoKit&lt;/a&gt; - You can easily transfer your video into Three common video type via this framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josejuanqm/VersaPlayer&quot;&gt;VersaPlayer&lt;/a&gt; - Versatile AVPlayer implementation for iOS, macOS, and tvOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Messaging&lt;/h2&gt; 
&lt;p&gt;Also see &lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#push-notifications&quot;&gt;push notifications&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robbiehanson/XMPPFramework&quot;&gt;XMPPFramework&lt;/a&gt; - An XMPP Framework in Objective-C for Mac and iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/badoo/Chatto&quot;&gt;Chatto&lt;/a&gt; - A lightweight framework to build chat applications, made in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MessageKit/MessageKit&quot;&gt;MessageKit&lt;/a&gt; - Eventually, a Swift re-write of JSQMessagesViewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/relatedcode/Messenger&quot;&gt;Messenger&lt;/a&gt; - This is a native iOS Messenger app, making realtime chat conversations and audio calls with full offline support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opentok/accelerator-textchat-ios&quot;&gt;OTTextChatAccelerator&lt;/a&gt; - OpenTok Text Chat Accelerator Pack enables text messages between mobile or browser-based devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chat-sdk/chat-sdk-ios&quot;&gt;chat-sdk-ios&lt;/a&gt; - Chat SDK iOS - Open Source Mobile Messenger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nguyenhuy/AsyncMessagesViewController&quot;&gt;AsyncMessagesViewController&lt;/a&gt; - A smooth, responsive and flexible messages UI library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GitHawkApp/MessageViewController&quot;&gt;MessageViewController&lt;/a&gt; - A SlackTextViewController replacement written in Swift for the iPhone X.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/SwiftyMessenger&quot;&gt;SwiftyMessenger&lt;/a&gt; - Swift toolkit for passing messages between iOS apps and extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/instamobile/messenger-iOS-chat-swift-firestore&quot;&gt;Messenger Chat with Firebase&lt;/a&gt; - Swift messaging chat app with Firebase Firestore integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM-Swift/SwiftKafka&quot;&gt;SwiftKafka&lt;/a&gt; - Swift SDK for Apache Kafka by IBM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ekazaev/ChatLayout&quot;&gt;ChatLayout&lt;/a&gt; - A lightweight framework to build chat UI that uses custom &lt;code&gt;UICollectionViewLayout&lt;/code&gt; to provide full control over the presentation as well as all the tools available in &lt;code&gt;UICollectionView&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/Chat&quot;&gt;ExyteChat&lt;/a&gt; - SwiftUI Chat UI framework with fully customizable message cells, input view, and a built-in media picker.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Networking&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AFNetworking/AFNetworking&quot;&gt;AFNetworking&lt;/a&gt; - A delightful iOS and macOS networking framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RestKit/RestKit&quot;&gt;RestKit&lt;/a&gt; - RestKit is an Objective-C framework for iOS that aims to make interacting with RESTful web services simple, fast and fun.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/foursquare/FSNetworking&quot;&gt;FSNetworking&lt;/a&gt; - Foursquare iOS networking library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pokeb/asi-http-request&quot;&gt;ASIHTTPRequest&lt;/a&gt; - Easy to use CFNetwork wrapper for HTTP requests, Objective-C, macOS and iPhone.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Overcoat/Overcoat&quot;&gt;Overcoat&lt;/a&gt; - Small but powerful library that makes creating REST clients simple and fun.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/epam/road-ios-framework&quot;&gt;ROADFramework&lt;/a&gt; - Attributed-oriented approach for interacting with web services. The framework has built-in json and xml serialization for requests and responses and can be easily extensible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/Alamofire&quot;&gt;Alamofire&lt;/a&gt; - Alamofire is an HTTP networking library written in Swift, from the creator of AFNetworking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nghialv/Transporter&quot;&gt;Transporter&lt;/a&gt; - A tiny library makes uploading and downloading easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cdzombak/CDZPinger&quot;&gt;CDZPinger&lt;/a&gt; - Easy-to-use ICMP Ping.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dingbat/nsrails&quot;&gt;NSRails&lt;/a&gt; - iOS/Mac OS framework for Rails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nathankot/NKMultipeer&quot;&gt;NKMultipeer&lt;/a&gt; - A testable abstraction over multipeer connectivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robbiehanson/CocoaAsyncSocket&quot;&gt;CocoaAsyncSocket&lt;/a&gt; - Asynchronous socket networking library for Mac and iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bustoutsolutions/siesta&quot;&gt;Siesta&lt;/a&gt; - Elegant abstraction for RESTful resources that untangles stateful messes. An alternative to callback- and delegate-based networking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ashleymills/Reachability.swift&quot;&gt;Reachability.swift&lt;/a&gt; - Replacement for Apple&#39;s Reachability re-written in Swift with closures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icoco/OctopusKit&quot;&gt;OctopusKit&lt;/a&gt; - A simplicity but graceful solution for invoke RESTful web service APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Moya/Moya&quot;&gt;Moya&lt;/a&gt; - Network abstraction layer written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chasseurmic/TWRDownloadManager&quot;&gt;TWRDownloadManager&lt;/a&gt; - A modern download manager based on NSURLSession to deal with asynchronous downloading, management and persistence of multiple files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qiniu/happy-dns-objc&quot;&gt;HappyDns&lt;/a&gt; - A Dns library, support custom dns server, dnspod httpdns. Only support A record.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BridgeNetworking/Bridge&quot;&gt;Bridge&lt;/a&gt; - A simple extensible typed networking library. Intercept and process/alter requests and responses easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MLSDev/TRON&quot;&gt;TRON&lt;/a&gt; - Lightweight network abstraction layer, written on top of Alamofire.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evermeer/EVCloudKitDao&quot;&gt;EVCloudKitDao&lt;/a&gt; - Simplified access to Apple&#39;s CloudKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evermeer/EVURLCache&quot;&gt;EVURLCache&lt;/a&gt; - a NSURLCache subclass for handling all web requests that use NSURLRequest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/netguru/ResponseDetective&quot;&gt;ResponseDetective&lt;/a&gt; - Sherlock Holmes of the networking layer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnlui/Pitaya&quot;&gt;Pitaya&lt;/a&gt; - A Swift HTTP / HTTPS networking library just incidentally execute on machines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dduan/Just&quot;&gt;Just&lt;/a&gt; - Swift HTTP for Humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hallas/agent&quot;&gt;agent&lt;/a&gt; - Minimalistic Swift HTTP request agent for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Isuru-Nanayakkara/Reach&quot;&gt;Reach&lt;/a&gt; - A simple class to check for internet connection availability in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daltoniam/SwiftHTTP&quot;&gt;SwiftHTTP&lt;/a&gt; - Thin wrapper around NSURLSession in swift. Simplifies HTTP requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qiniu/iOS-netdiag&quot;&gt;Netdiag&lt;/a&gt; - A network diagnosis library. Support Ping/TcpPing/Rtmp/TraceRoute/DNS/external IP/external DNS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/betacraft/AFNetworkingHelper&quot;&gt;AFNetworkingHelper&lt;/a&gt; - A custom wrapper over AFNetworking library that we use inside RC extensively.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/azizuysal/NetKit&quot;&gt;NetKit&lt;/a&gt; - A Concise HTTP Framework in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dustturtle/RealReachability&quot;&gt;RealReachability&lt;/a&gt; - We need to observe the REAL reachability of network. That&#39;s what RealReachability do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nixzhu/MonkeyKing&quot;&gt;MonkeyKing&lt;/a&gt; - MonkeyKing helps you post messages to Chinese Social Networks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imex94/NetworkKit&quot;&gt;NetworkKit&lt;/a&gt; - Lightweight Networking and Parsing framework made for iOS, Mac, WatchOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ishkawa/APIKit&quot;&gt;APIKit&lt;/a&gt; - A networking library for building type safe web API client in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freshOS/ws&quot;&gt;ws ☁️&lt;/a&gt; - Elegant JSON WebService in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spotify/SPTDataLoader&quot;&gt;SPTDataLoader&lt;/a&gt; - The HTTP library used by the Spotify iOS client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skywite/SWNetworking&quot;&gt;SWNetworking&lt;/a&gt; - Powerful high-level iOS, macOS and tvOS networking library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3lvis/Networking&quot;&gt;Networking&lt;/a&gt; - Simple HTTP Networking in Swift a NSURLSession wrapper with image caching support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/priore/SOAPEngine&quot;&gt;SOAPEngine&lt;/a&gt; - This generic SOAP client allows you to access web services using a your iOS app, macOS app and AppleTV app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/Swish&quot;&gt;Swish&lt;/a&gt; - Nothing but Net(working).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Malibu&quot;&gt;Malibu&lt;/a&gt; - Malibu is a networking library built on promises.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yuantiku/YTKNetwork&quot;&gt;YTKNetwork&lt;/a&gt; - YTKNetwork is a high level request util based on AFNetworking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serejahh/UnboxedAlamofire&quot;&gt;UnboxedAlamofire&lt;/a&gt; - Alamofire + Unbox: the easiest way to download and decode JSON into swift objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mavris/MMLanScan&quot;&gt;MMLanScan&lt;/a&gt; - An iOS LAN Network Scanner library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FelixLinBH/Domainer&quot;&gt;Domainer&lt;/a&gt; - Manage multi-domain url auto mapping ip address table.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Restofire/Restofire&quot;&gt;Restofire&lt;/a&gt; - Restofire is a protocol oriented network abstraction layer in swift that is built on top of Alamofire to use services in a declartive way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kubatruhlar/AFNetworking-RetryPolicy&quot;&gt;AFNetworking+RetryPolicy&lt;/a&gt; - An objective-c category that adds the ability to set the retry logic for requests made with AFNetworking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/azawawi/SwiftyZeroMQ&quot;&gt;SwiftyZeroMQ&lt;/a&gt; - ZeroMQ Swift Bindings for iOS, macOS, tvOS and watchOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stremsdoerfer/Nikka&quot;&gt;Nikka&lt;/a&gt; - A super simple Networking wrapper that supports many JSON libraries, Futures and Rx.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangzubin/XMNetworking&quot;&gt;XMNetworking&lt;/a&gt; - A lightweight but powerful network library with simplified and expressive syntax based on AFNetworking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/Merhaba&quot;&gt;Merhaba&lt;/a&gt; - Bonjour networking for discovery and connection between iOS, macOS and tvOS devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dbsystel/DBNetworkStack&quot;&gt;DBNetworkStack&lt;/a&gt; - Resource-oritented networking which is typesafe, extendable, composeable and makes testing a lot easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ezefranca/EFInternetIndicator&quot;&gt;EFInternetIndicator&lt;/a&gt; - A little swift Internet error status indicator using ReachabilitySwift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulmelnikow/AFNetworking-Synchronous&quot;&gt;AFNetworking-Synchronous&lt;/a&gt; - Synchronous requests for AFNetworking 1.x, 2.x, and 3.x.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/logansease/QwikHttp&quot;&gt;QwikHttp&lt;/a&gt; - a robust, yet lightweight and simple to use HTTP networking library designed for RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/intelygenz/NetClient-iOS&quot;&gt;NetClient&lt;/a&gt; - Versatile HTTP networking library written in Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Wasappli/WANetworkRouting&quot;&gt;WANetworkRouting&lt;/a&gt; - An iOS library to route API paths to objects on client side with request, mapping, routing and auth layers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RuiAAPeres/Reactor&quot;&gt;Reactor&lt;/a&gt; - Powering your RAC architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isamankumara/skywite&quot;&gt;SWNetworking&lt;/a&gt; - Powerful high-level iOS, macOS and tvOS networking library. from the creator of SWNetworking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cornerAnt/Digger&quot;&gt;Digger&lt;/a&gt; - Digger is a lightweight download framework that requires only one line of code to complete the file download task.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlTavares/Ciao&quot;&gt;Ciao&lt;/a&gt; - Publish and discover services using mDNS(Bonjour, Zeroconf).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmoaay/Bamboots&quot;&gt;Bamboots&lt;/a&gt; - Bamboots is a network request framework based on Alamofire, aiming at making network request easier for business development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ThreeGayHub/SolarNetwork&quot;&gt;SolarNetwork&lt;/a&gt; - Elegant network abstraction layer in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Feghal/FGRoute&quot;&gt;FGRoute&lt;/a&gt; - An easy-to-use library that helps developers to get wifi ssid, router and device ip addresses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stdevteam/RxRestClient&quot;&gt;RxRestClient&lt;/a&gt; - Simple REST Client based on RxSwift and Alamofire.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/billp/TermiNetwork&quot;&gt;TermiNetwork&lt;/a&gt; - A networking library written with Swift 4.0 that supports multi-environment configuration, routing and automatic deserialization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iAmrSalman/Dots&quot;&gt;Dots&lt;/a&gt; - Lightweight Concurrent Networking Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Albinzr/Gem&quot;&gt;Gem&lt;/a&gt; - An extreme light weight system with high performance for managing all http request with automated parser with modal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rogermolas/RMHttp&quot;&gt;RMHttp&lt;/a&gt; - Lightweight REST library for iOS and watchOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tunespeak/AlamoRecord&quot;&gt;AlamoRecord&lt;/a&gt; - An elegant yet powerful iOS networking layer inspired by ActiveRecord.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/emadhegab/MHNetwork&quot;&gt;MHNetwork&lt;/a&gt; - Protocol Oriented Network Layer Aim to avoid having bloated singleton NetworkManager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3sidedcube/ThunderRequest&quot;&gt;ThunderRequest&lt;/a&gt; - A simple URLSession wrapper with a generic protocol based request body approach and easy deserialisation of responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sky-uk/ReactiveAPI&quot;&gt;ReactiveAPI&lt;/a&gt; - Write clean, concise and declarative network code relying on URLSession, with the power of RxSwift. Inspired by Retrofit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/borchero/Squid&quot;&gt;Squid&lt;/a&gt; - Declarative and reactive networking framework based on Combine and providing means for HTTP requests, transparent pagination, and WebSocket communication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kean/Get&quot;&gt;Get&lt;/a&gt; - A modern Swift web API client built using async/await.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Newsletters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://weekly.awesomeios.com&quot;&gt;AwesomeiOS Weekly&lt;/a&gt; - AwesomeiOS Weekly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ios-goodies.com&quot;&gt;iOS Goodies&lt;/a&gt; - Weekly iOS newsletter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/newsletter&quot;&gt;raywenderlich.com Weekly&lt;/a&gt; - sign up to receive the latest tutorials from raywenderlich.com each week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iosdev.tools&quot;&gt;iOS Dev Tools Weekly&lt;/a&gt; - The greatest iOS development tools, including websites, desktop and mobile apps, and back-end services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wanderbit.us4.list-manage.com/subscribe?u=4e20cd8ea3a0ce09ff4619a52&amp;amp;id=5898a5992b&quot;&gt;iOS Trivia Weekly&lt;/a&gt; - Three challenging questions about iOS development every Wednesday.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://indieiosfocus.com/&quot;&gt;Indie iOS Focus Weekly&lt;/a&gt; - Looking for the best iOS dev links, tutorials, &amp;amp; tips beyond the usual news? Curated by Chris Beshore. Published every Thursday.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iosdevweekly.com/&quot;&gt;iOS Dev Weekly&lt;/a&gt; - Subscribe to a hand-picked round up of the best iOS development links every week. Free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftweekly.github.io/&quot;&gt;Swift Weekly Brief&lt;/a&gt; - A community-driven weekly newsletter about Swift.org. Curated by Jesse Squires and published for free every Thursday.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.serverswift.tech&quot;&gt;Server-Side Swift Weekly&lt;/a&gt; - A weekly newsletter with the best links related to server-side Swift and cross-platform developer tools. Curated by &lt;a href=&quot;https://twitter.com/maxdesiatov&quot;&gt;@maxdesiatov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://us11.campaign-archive.com/home/?u=cd1f3ed33c6527331d82107ba&amp;amp;id=532dc7fb64&quot;&gt;iOS Cookies Newsletter&lt;/a&gt; - A weekly digest of new iOS libraries written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://andybargh.com/swiftdevelopments/&quot;&gt;Swift Developments&lt;/a&gt; - A weekly curated newsletter containing a hand picked selection of the latest links, videos, tools and tutorials for people interested in designing and developing their own iOS, WatchOS and AppleTV apps using Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mobiledeveloperscafe.com&quot;&gt;Mobile Developers Cafe&lt;/a&gt; - A weekly newsletter for Mobile developers with loads of iOS content.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://indie.watch/&quot;&gt;Indie Watch&lt;/a&gt; - A weekly newsletter featuring the best apps made by indie iOS developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.avanderlee.com/&quot;&gt;SwiftLee&lt;/a&gt; - A weekly blog about Swift, iOS and Xcode Tips and Tricks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Notifications&lt;/h2&gt; 
&lt;h3&gt;Push Notifications&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/Orbiter&quot;&gt;Orbiter&lt;/a&gt; - Push Notification Registration for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/pem&quot;&gt;PEM&lt;/a&gt; - Automatically generate and renew your push notification profiles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KnuffApp/Knuff&quot;&gt;Knuff&lt;/a&gt; - The debug application for Apple Push Notification Service (APNS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/FBNotifications&quot;&gt;FBNotifications&lt;/a&gt; - Facebook Analytics In-App Notifications Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/noodlewerk/NWPusher&quot;&gt;NWPusher&lt;/a&gt; - macOS and iOS application and framework to play with the Apple Push Notification service (APNs).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acoomans/SimulatorRemoteNotifications&quot;&gt;SimulatorRemoteNotifications&lt;/a&gt; - Library to send mock remote notifications to the iOS simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pisces/APNSUtil&quot;&gt;APNSUtil&lt;/a&gt; - Library makes code simple settings and landing for apple push notification service.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Push Notification Providers&lt;/h3&gt; 
&lt;p&gt;Most of these are paid services, some have free tiers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.airship.com/platform/channels/mobile-app/&quot;&gt;Urban Airship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://growthpush.com&quot;&gt;Growth Push&lt;/a&gt; - Popular in Japan.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.braze.com/&quot;&gt;Braze&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://batch.com&quot;&gt;Batch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boxcar.io&quot;&gt;Boxcar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.sailthru.com&quot;&gt;Carnival&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.catapush.com/&quot;&gt;Catapush&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netmera.com/&quot;&gt;Netmera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://onesignal.com&quot;&gt;OneSignal&lt;/a&gt; - Free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pushbots.com/&quot;&gt;PushBots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pushwoosh.com&quot;&gt;Pushwoosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nordeus/pushkin&quot;&gt;Pushkin&lt;/a&gt; - Free and open-source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pusher.com/beams&quot;&gt;Pusher&lt;/a&gt; - Free and unlimited.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.swrve.com&quot;&gt;Swrve&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Objective-C Runtime&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Objective-C Runtime wrappers, libraries and tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sushinoya/lumos&quot;&gt;Lumos&lt;/a&gt; - A light Swift wrapper around Objective-C Runtime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rbaumbach/Swizzlean&quot;&gt;Swizzlean&lt;/a&gt; - An Objective-C Swizzle Helper Class.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Optimization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvzqz/Unreachable&quot;&gt;Unreachable&lt;/a&gt; - Unreachable code path optimization hint for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EmergeTools/SmallStrings&quot;&gt;SmallStrings&lt;/a&gt; - Reduce localized .strings file sizes by 80%.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Other Awesome Lists&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Other amazingly awesome lists can be found in the&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/bayandin/awesome-awesomeness&quot;&gt;awesome-awesomeness&lt;/a&gt; list.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/dkhamsing/open-source-ios-apps&quot;&gt;Open Source apps&lt;/a&gt; list of open source iOS apps.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/ameizi/awesome-ios-animation&quot;&gt;awsome-ios-animation&lt;/a&gt; - A curated list of awesome iOS animation, including Objective-C and Swift libraries.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/vsouza/awesome-gists#ios&quot;&gt;awesome-gists&lt;/a&gt; - A list of amazing gists (iOS section).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/MaximAbramchuck/awesome-interview-questions#ios&quot;&gt;awesome-interview-questions&lt;/a&gt; - A curated awesome list of lists of interview questions including iOS.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/bakkenbaeck/iOS-handbook&quot;&gt;iOS-Playbook&lt;/a&gt; - Guidelines and best practices for excellent iOS apps.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jVirus/iOS-Learning-Materials&quot;&gt;iOS-Learning-Materials&lt;/a&gt; - Curated list of articles, web-resources, tutorials and code repositories that may help you dig a little bit deeper into iOS.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/carolanitz/Awesome-iOS-Twitter&quot;&gt;Awesome-iOS-Twitter&lt;/a&gt; - A curated list of awesome iOS Twitter accounts.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/LisaDziuba/Marketing-for-Engineers&quot;&gt;Marketing for Engineers&lt;/a&gt; - A curated collection of marketing articles &amp;amp; tools to grow your product.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/olucurious/Awesome-ARKit&quot;&gt;Awesome ARKit&lt;/a&gt; - A curated list of awesome ARKit projects and resources.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Lascorbe/CocoaConferences&quot;&gt;CocoaConferences&lt;/a&gt; - List of cocoa conferences for iOS &amp;amp; macOS developers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jogendra/example-ios-apps&quot;&gt;example-ios-apps&lt;/a&gt; - A curated list of Open Source example iOS apps developed in Swift.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://hackr.io/tutorials/learn-ios-swift&quot;&gt;Curated-Resources-for-Learning-Swift&lt;/a&gt; - A curated list of resources recommended by the developers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/serhii-londar/open-source-mac-os-apps&quot;&gt;Awesome list of open source applications for macOS&lt;/a&gt; - List of awesome open source applications for macOS.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/dashvlas/awesome-ios-interview&quot;&gt;Awesome iOS Interview question list&lt;/a&gt; - Guide for interviewers and interviewees. Review these iOS interview questions - and get some practical tips along the way.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/app-developers/top&quot;&gt;Top App Developers&lt;/a&gt; - A list of top iOS app developers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/jphong1111/awesome-ios-developer&quot;&gt;awesome-ios-developer&lt;/a&gt; - Useful knowledges and stuff for ios developer.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/bystritskiy/awesome-ios-books&quot;&gt;awesome-ios-books&lt;/a&gt; - A list of books for iOS developers.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Parsing&lt;/h2&gt; 
&lt;h3&gt;CSV&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Daniel1of1/CSwiftV&quot;&gt;CSwiftV&lt;/a&gt; - A csv parser written in swift conforming to rfc4180.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yaslab/CSV.swift&quot;&gt;CSV.swift&lt;/a&gt; - CSV reading and writing library written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dehesa/CodableCSV&quot;&gt;CodableCSV&lt;/a&gt; - Read and write CSV files row-by-row &amp;amp; field-by-field or through Swift&#39;s Codable interface.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SBJson/SBJson&quot;&gt;SBJson&lt;/a&gt; - This framework implements a strict JSON parser and generator in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mantle/Mantle&quot;&gt;Mantle&lt;/a&gt; - Model framework for Cocoa and Cocoa Touch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gonzalezreal/Groot&quot;&gt;Groot&lt;/a&gt; - Convert JSON dictionaries and arrays to and from Core Data managed objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/PropertyMapper&quot;&gt;PropertyMapper&lt;/a&gt; - Data mapping and validation with minimal amount of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JSONModel/JSONModel&quot;&gt;JSONModel&lt;/a&gt; - Magical Data Modeling Framework for JSON. Create rapidly powerful, atomic and smart data model classes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftyJSON/SwiftyJSON&quot;&gt;SwiftyJSON&lt;/a&gt; - The better way to deal with JSON data in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/FastEasyMapping&quot;&gt;FastEasyMapping&lt;/a&gt; - Serialize &amp;amp; deserialize JSON fast.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tristanhimmelman/ObjectMapper&quot;&gt;ObjectMapper&lt;/a&gt; - A framework written in Swift that makes it easy for you to convert your Model objects (Classes and Structs) to and from JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delba/JASON&quot;&gt;JASON&lt;/a&gt; - JSON parsing with outstanding performances and convenient operators.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hkellaway/Gloss&quot;&gt;Gloss&lt;/a&gt; - A shiny JSON parsing library in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insanoid/SwiftyJSONAccelerator&quot;&gt;SwiftyJSONAccelerator&lt;/a&gt; - Generate Swift 5 model files from JSON with Codeable support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hodinkee/alexander&quot;&gt;alexander&lt;/a&gt; - An extremely simple JSON helper written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bignerdranch/Freddy&quot;&gt;Freddy&lt;/a&gt; - A reusable framework for parsing JSON in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lyft/mapper&quot;&gt;mapper&lt;/a&gt; - A JSON deserialization library for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/Alembic&quot;&gt;Alembic&lt;/a&gt; - Functional JSON parsing, mapping to objects, and serialize to JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freshOS/Arrow&quot;&gt;Arrow 🏹&lt;/a&gt; - Elegant JSON Parsing in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ahmed-Ali/JSONExport&quot;&gt;JSONExport&lt;/a&gt; - JSONExport is a desktop application for macOS which enables you to export JSON objects as model classes with their associated constructors, utility methods, setters and getters in your favorite language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nike-Inc/Elevate&quot;&gt;Elevate&lt;/a&gt; - Elevate is a JSON parsing framework that leverages Swift to make parsing simple, reliable and composable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CoderMJLee/MJExtension&quot;&gt;MJExtension&lt;/a&gt; - A fast, convenient and nonintrusive conversion between JSON and model. Your model class don&#39;t need to extend another base class. You don&#39;t need to modify any model file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tristanhimmelman/AlamofireObjectMapper&quot;&gt;AlamofireObjectMapper&lt;/a&gt; - An Alamofire extension which converts JSON response data into swift objects using ObjectMapper.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/JAYSON&quot;&gt;JAYSON&lt;/a&gt; - Strict and Scalable JSON library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alibaba/handyjson&quot;&gt;HandyJSON&lt;/a&gt; - A handy swift JSON-object serialization/deserialization library for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/utahiosmac/Marshal&quot;&gt;Marshal&lt;/a&gt; - Marshaling the typeless wild west of [String: Any] (Protocol based).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mobilejazz/Motis&quot;&gt;Motis&lt;/a&gt; - Easy JSON to NSObject mapping using Cocoa&#39;s key value coding (KVC).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bernikovich/NSTEasyJSON&quot;&gt;NSTEasyJSON&lt;/a&gt; - The easiest way to deal with JSON data in Objective-C (similar to SwiftyJSON).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodes-ios/Serpent&quot;&gt;Serpent&lt;/a&gt; - A protocol to serialize Swift structs and classes for encoding and decoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mzaks/FlatBuffersSwift&quot;&gt;FlatBuffersSwift&lt;/a&gt; - This project brings FlatBuffers (an efficient cross platform serialization library) to Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Otbivnoe/CodableAlamofire&quot;&gt;CodableAlamofire&lt;/a&gt; - An extension for Alamofire that converts JSON data into Decodable objects (Swift 4).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Wasappli/WAMapping&quot;&gt;WAMapping&lt;/a&gt; - A library to turn dictionary into object and vice versa for iOS. Designed for speed!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ikesyo/Himotoki&quot;&gt;Himotoki&lt;/a&gt; - A type-safe JSON decoding library purely written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/postmates/PMHTTP&quot;&gt;PMHTTP&lt;/a&gt; - Swift/Obj-C HTTP framework with a focus on REST and JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimaMishchenko/NativeJSONMapper&quot;&gt;NativeJSONMapper&lt;/a&gt; - Simple Swift 4 encoding &amp;amp; decoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/postmates/PMJSON&quot;&gt;PMJSON&lt;/a&gt; - Pure Swift JSON encoding/decoding library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.jsoncafe.com/&quot;&gt;jsoncafe.com&lt;/a&gt; - Online Template driven Model Class Generator from JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/leavez/Mappable&quot;&gt;Mappable&lt;/a&gt; - lightweight and powerful JSON object mapping library, specially optimized for immutable properties.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;XML &amp;amp; HTML&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AEXML&quot;&gt;AEXML&lt;/a&gt; - Simple and lightweight XML parser written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/honghaoz/Ji&quot;&gt;Ji&lt;/a&gt; - XML/HTML parser for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/Ono&quot;&gt;Ono&lt;/a&gt; - A sensible way to deal with XML &amp;amp; HTML for iOS &amp;amp; macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cezheng/Fuzi&quot;&gt;Fuzi&lt;/a&gt; - A fast &amp;amp; lightweight XML &amp;amp; HTML parser in Swift with XPath &amp;amp; CSS support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tid-kijyun/Kanna&quot;&gt;Kanna&lt;/a&gt; - Kanna(鉋) is an XML/HTML parser for macOS/iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yahoojapan/SwiftyXMLParser&quot;&gt;SwiftyXMLParser&lt;/a&gt; - Simple XML Parser implemented in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iabudiab/HTMLKit&quot;&gt;HTMLKit&lt;/a&gt; - An Objective-C framework for your everyday HTML needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drmohundro/SWXMLHash&quot;&gt;SWXMLHash&lt;/a&gt; - Simple XML parsing in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chenyunguiMilook/SwiftyXML&quot;&gt;SwiftyXML&lt;/a&gt; - The most swifty way to deal with XML data in swift 4.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaxDesiatov/XMLCoder&quot;&gt;XMLCoder&lt;/a&gt; - Encoder &amp;amp; Decoder for XML using Swift&#39;s &lt;code&gt;Codable&lt;/code&gt; protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZhgChgLi/ZMarkupParser&quot;&gt;ZMarkupParser&lt;/a&gt; - Convert HTML strings into NSAttributedString with customized styles and tags.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Other Parsing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mkoehnke/WKZombie&quot;&gt;WKZombie&lt;/a&gt; - WKZombie is a Swift framework for iOS/macOS to navigate within websites and collect data without the need of User Interface or API, also known as Headless browser. It can be used to run automated tests or manipulate websites using Javascript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/itsmeichigo/URLPreview&quot;&gt;URLPreview&lt;/a&gt; - An NSURL extension for showing preview info of webpages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nmdias/FeedKit&quot;&gt;FeedKit&lt;/a&gt; - An RSS and Atom feed parser written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phimage/Erik&quot;&gt;Erik&lt;/a&gt; - Erik is an headless browser based on WebKit. An headless browser allow to run functional tests, to access and manipulate webpages using javascript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/URLEmbeddedView&quot;&gt;URLEmbeddedView&lt;/a&gt; - Automatically caches the object that is confirmed the Open Graph Protocol, and displays it as URL embedded card.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/100mango/SwiftCssParser&quot;&gt;SwiftCssParser&lt;/a&gt; - A Powerful , Extensible CSS Parser written in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bitfwdcommunity/RLPSwift&quot;&gt;RLPSwift&lt;/a&gt; - Recursive Length Prefix encoding written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cats-oss/AcknowledgementsPlist&quot;&gt;AcknowledgementsPlist&lt;/a&gt; - AcknowledgementsPlist manages the licenses of libraries that depend on your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaxDesiatov/CoreXLSX&quot;&gt;CoreXLSX&lt;/a&gt; - Excel spreadsheet (XLSX) format support in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/SVGView&quot;&gt;SVGView&lt;/a&gt; - SVG parser and renderer written in SwiftUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CreateAPI/CreateAPI&quot;&gt;CreateAPI&lt;/a&gt; - Delightful code generation for OpenAPI specs for Swift written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ranchero-Software/NetNewsWire&quot;&gt;NetNewsWire&lt;/a&gt; - It’s a free and open-source feed reader for macOS and iOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Passbook&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/frozon/passbook&quot;&gt;passbook&lt;/a&gt; - Passbook gem let&#39;s you create pkpass for passbook iOS 6+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nomad/dubai&quot;&gt;Dubai&lt;/a&gt; - Generate and Preview Passbook Passes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://passkit.com&quot;&gt;Passkit&lt;/a&gt; - Design, Create and validate Passbook Passes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Payments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prolificinteractive/Caishen&quot;&gt;Caishen&lt;/a&gt; - A Payment Card UI &amp;amp; Validator for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; - Payment integration on your app with PAY. Suitable for people with low knowledge on Backend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree&lt;/a&gt; - Free payment processing on your first $50k. Requires Backend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/venmo/venmo-ios-sdk&quot;&gt;Venmo&lt;/a&gt; Make and accept payments in your iOS app via Venmo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.moltin.com/developer/swift-ecommerce-sdk/&quot;&gt;Moltin&lt;/a&gt; - Add eCommerce to your app with a simple SDK, so you can create a store and sell physical products, no backend required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MosheBerman/PatronKit&quot;&gt;PatronKit&lt;/a&gt; - A framework to add patronage to your apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bizz84/SwiftyStoreKit&quot;&gt;SwiftyStoreKit&lt;/a&gt; - Lightweight In App Purchases Swift framework for iOS 8.0+ and macOS 9.0+&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sandorgyulai/InAppFramework&quot;&gt;InAppFramework&lt;/a&gt; - In App Purchase Manager framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suraphanL/SwiftInAppPurchase&quot;&gt;SwiftInAppPurchase&lt;/a&gt; - Simply code In App Purchases with this Swift Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielgarza/monza&quot;&gt;monza&lt;/a&gt; - Ruby Gem for Rails - Easy iTunes In-App Purchase Receipt validation, including auto-renewable subscriptions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paypal/PayPal-iOS-SDK&quot;&gt;PayPal&lt;/a&gt; - Accept payments in your iOS app via PayPal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/card-io/card.io-iOS-SDK&quot;&gt;card.io-iOS-SDK&lt;/a&gt; - card.io provides fast, easy credit card scanning in mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaxKramer/SwiftLuhn&quot;&gt;SwiftLuhn&lt;/a&gt; - Debit/Credit card validation port of the Luhn Algorithm in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaxKramer/ObjectiveLuhn&quot;&gt;ObjectiveLuhn&lt;/a&gt; - Luhn Credit Card Validation Algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robotmedia/RMStore&quot;&gt;RMStore&lt;/a&gt; - A lightweight iOS library for In-App Purchases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MobileFirstInc/MFCard&quot;&gt;MFCard&lt;/a&gt; - Easily integrate Credit Card payments in iOS App / Customisable Card UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tikhop/TPInAppReceipt&quot;&gt;TPInAppReceipt&lt;/a&gt; - Reading and Validating In App Store Receipt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eliakorkmaz/iCard&quot;&gt;iCard&lt;/a&gt; - Bank Card Generator with Swift using SnapKit DSL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orazz/CreditCardForm-iOS&quot;&gt;CreditCardForm-iOS&lt;/a&gt; - CreditCardForm is iOS framework that allows developers to create the UI which replicates an actual Credit Card.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benjaminmayo/merchantkit&quot;&gt;merchantkit&lt;/a&gt; - A modern In-App Purchases management framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lionheart/TipJarViewController&quot;&gt;TipJarViewController&lt;/a&gt; - Easy, drop-in tip jar for iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/checkout/frames-ios&quot;&gt;FramesIos&lt;/a&gt; - Payment Form UI and Utilities in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yassram/YRPayment&quot;&gt;YRPayment&lt;/a&gt; - Better payment user experience library with cool animation in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/netguru/AnimatedCardInput&quot;&gt;AnimatedCardInput&lt;/a&gt; — Easy to use library with customisable components for input of Credit Card data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Permissions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nixzhu/Proposer&quot;&gt;Proposer&lt;/a&gt; - Make permission request easier (Supports Camera, Photos, Microphone, Contacts, Location).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iosphere/ISHPermissionKit&quot;&gt;ISHPermissionKit&lt;/a&gt; - A unified way for iOS apps to request user permissions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rsattar/ClusterPrePermissions&quot;&gt;ClusterPrePermissions&lt;/a&gt; - Reusable pre-permissions utility that lets developers ask users for access in their own dialog, before making the system-based request.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delba/Permission&quot;&gt;Permission&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SvenTiigi/STLocationRequest&quot;&gt;STLocationRequest&lt;/a&gt; - A simple and elegant 3D-Flyover location request screen written Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pascalbros/PAPermissions&quot;&gt;PAPermissions&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ennioma/arek&quot;&gt;AREK&lt;/a&gt; - AREK is a clean and easy to use wrapper over any kind of iOS permission.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivanvorobei/SPPermissions&quot;&gt;SPPermissions&lt;/a&gt; - Ask permissions on Swift. Available List, Dialog &amp;amp; Native interface. Can check state permission.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Podcasts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/podcast&quot;&gt;The Ray Wenderlich Podcast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.imore.com/debug&quot;&gt;Debug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.appstorypodcast.com&quot;&gt;App Story&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://devchat.tv/iphreaks/&quot;&gt;iPhreaks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.relay.fm/radar&quot;&gt;Under the Radar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://coreint.org/&quot;&gt;Core Intuition&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.swiftplayhouse.com/&quot;&gt;Swift Playhouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://releasenotes.tv/&quot;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mtjc.fireside.fm/&quot;&gt;More Than Just Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spec.fm/podcasts/runtime&quot;&gt;Runtime&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://consultpodcast.com/#_=_&quot;&gt;Consult&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spec.fm/podcasts/swift-unwrapped&quot;&gt;Swift Unwrapped&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://podcasts.apple.com/us/podcast/fireside-swift/id1269435221?mt=2&quot;&gt;Fireside Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.swiftbysundell.com/podcast/&quot;&gt;Swift by Sundell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stacktracepodcast.fm&quot;&gt;Stacktrace&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Project setup&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/crafter&quot;&gt;crafter&lt;/a&gt; - CLI that allows you to configure iOS project&#39;s template using custom DSL syntax, simple to use and quite powerful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liftoffcli/liftoff&quot;&gt;liftoff&lt;/a&gt; - Another CLI for creating iOS projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crushlovely/Amaro&quot;&gt;amaro&lt;/a&gt; - iOS Boilerplate full of delights.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orta/chairs&quot;&gt;chairs&lt;/a&gt; - Swap around your iOS Simulator Documents.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JohnSundell/SwiftPlate&quot;&gt;SwiftPlate&lt;/a&gt; - Easily generate cross platform Swift framework projects from the command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tuist/xcodeproj&quot;&gt;xcproj&lt;/a&gt; - Read and update Xcode projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tuist/tuist&quot;&gt;Tuist&lt;/a&gt; - A tool to create, maintain and interact with Xcode projects at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SvenTiigi/SwiftKit&quot;&gt;SwiftKit&lt;/a&gt; - Start your next Open-Source Swift Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fulldecent/swift5-module-template&quot;&gt;swift5-module-template&lt;/a&gt; - A starting point for any Swift 5 module that you want other people to include in their projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prototyping&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fluidui.com&quot;&gt;FluidUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://proto.io/&quot;&gt;Proto.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.framer.com/&quot;&gt;Framer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://principleformac.com/&quot;&gt;Principle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Rapid Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/Playgrounds&quot;&gt;Playgrounds&lt;/a&gt; - Playgrounds for Objective-C for extremely fast prototyping / learning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mutualmobile/MMBarricade&quot;&gt;MMBarricade&lt;/a&gt; - Runtime configurable local server for iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.sensiblecocoa.com&quot;&gt;STV Framework&lt;/a&gt; - Native visual iOS development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dimpiax/swiftmon&quot;&gt;swiftmon&lt;/a&gt; - swiftmon restarts your swift application in case of any file change.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Q-Mobile/Model2App&quot;&gt;Model2App&lt;/a&gt; - Turn your Swift data model into a working CRUD app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Reactive Programming&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxSwift&quot;&gt;RxSwift&lt;/a&gt; - Reactive Programming in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thanegill/RxOptional&quot;&gt;RxOptional&lt;/a&gt; - RxSwift extensions for Swift optionals and &quot;Occupiable&quot; types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Carthage/ReactiveTask&quot;&gt;ReactiveTask&lt;/a&gt; - Flexible, stream-based abstraction for launching processes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot;&gt;ReactiveCocoa&lt;/a&gt; - Streams of values over time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxMediaPicker&quot;&gt;RxMediaPicker&lt;/a&gt; - A reactive wrapper built around UIImagePickerController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apparentsoft/ReactiveCoreData&quot;&gt;ReactiveCoreData&lt;/a&gt; - ReactiveCoreData (RCD) is an attempt to bring Core Data into the ReactiveCocoa (RAC) world.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReSwift/ReSwift&quot;&gt;ReSwift&lt;/a&gt; - Unidirectional Data Flow in Swift - Inspired by Redux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeclarativeHub/ReactiveKit&quot;&gt;ReactiveKit&lt;/a&gt; - ReactiveKit is a collection of Swift frameworks for reactive and functional reactive programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sunshinejr/RxPermission&quot;&gt;RxPermission&lt;/a&gt; - RxSwift bindings for Permissions API in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxAlamofire&quot;&gt;RxAlamofire&lt;/a&gt; - RxSwift wrapper around the elegant HTTP networking in Swift Alamofire.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxRealm&quot;&gt;RxRealm&lt;/a&gt; - Rx wrapper for Realm&#39;s collection types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxMultipeer&quot;&gt;RxMultipeer&lt;/a&gt; - A testable RxSwift wrapper around MultipeerConnectivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Polidea/RxBluetoothKit&quot;&gt;RxBluetoothKit&lt;/a&gt; - iOS &amp;amp; macOS Bluetooth library for RxSwift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxGesture&quot;&gt;RxGesture&lt;/a&gt; - RxSwift reactive wrapper for view gestures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/NSObject-Rx&quot;&gt;NSObject-Rx&lt;/a&gt; - Handy RxSwift extensions on NSObject, including rx_disposeBag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxCoreData&quot;&gt;RxCoreData&lt;/a&gt; - RxSwift extensions for Core Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inamiy/RxAutomaton&quot;&gt;RxAutomaton&lt;/a&gt; - RxSwift + State Machine, inspired by Redux and Elm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Wolox/ReactiveArray&quot;&gt;ReactiveArray&lt;/a&gt; - An array class implemented in Swift that can be observed using ReactiveCocoa&#39;s Signals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JensRavens/Interstellar&quot;&gt;Interstellar&lt;/a&gt; - Simple and lightweight Functional Reactive Coding in Swift for the rest of us.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lsunsi/ReduxSwift&quot;&gt;ReduxSwift&lt;/a&gt; - Predictable state container for Swift apps too.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Aftermath&quot;&gt;Aftermath&lt;/a&gt; - Stateless message-driven micro-framework in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxKeyboard&quot;&gt;RxKeyboard&lt;/a&gt; - Reactive Keyboard in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jasonette/JASONETTE-iOS&quot;&gt;JASONETTE-iOS&lt;/a&gt; - Native App over HTTP. Create your own native iOS app with nothing but JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveSwift&quot;&gt;ReactiveSwift&lt;/a&gt; - Streams of values over time by ReactiveCocoa group.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/msaps/Listenable&quot;&gt;Listenable&lt;/a&gt; - Swift object that provides an observable platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ReactorSwift/Reactor&quot;&gt;Reactor&lt;/a&gt; - Unidirectional Data Flow using idiomatic Swift—inspired by Elm and Redux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UrbanCompass/Snail&quot;&gt;Snail&lt;/a&gt; - An observables framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fjcaetano/RxWebSocket&quot;&gt;RxWebSocket&lt;/a&gt; - Reactive extension over Starscream for websockets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AckeeCZ/ACKReactiveExtensions&quot;&gt;ACKReactiveExtensions&lt;/a&gt; - Useful extensions for ReactiveCocoa&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AckeeCZ/ReactiveLocation&quot;&gt;ReactiveLocation&lt;/a&gt; - CoreLocation made reactive&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blendle/Hanson&quot;&gt;Hanson&lt;/a&gt; - Lightweight observations and bindings in Swift, with support for KVO and NotificationCenter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roberthein/Observable&quot;&gt;Observable&lt;/a&gt; - The easiest way to observe values in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jaychang0917/SimpleApiClient-ios&quot;&gt;SimpleApiClient&lt;/a&gt; - A configurable api client based on Alamofire4 and RxSwift4 for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/VueFlux&quot;&gt;VueFlux&lt;/a&gt; - Unidirectional Data Flow State Management Architecture for Swift - Inspired by Vuex and Flux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxAnimated&quot;&gt;RxAnimated&lt;/a&gt; - Animated RxCocoa bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/electricbolt/bindkit&quot;&gt;BindKit&lt;/a&gt; - Two-way data binding framework for iOS. Only one API to learn.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stdevteam/STDevRxExt&quot;&gt;STDevRxExt&lt;/a&gt; - STDevRxExt contains some extension functions for RxSwift and RxCocoa which makes our live easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RxSwiftCommunity/RxReduce&quot;&gt;RxReduce&lt;/a&gt; - Lightweight framework that ease the implementation of a state container pattern in a Reactive Programming compliant way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/quickbirdstudios/XCoordinator&quot;&gt;RxCoordinator&lt;/a&gt; - Powerful navigation library for iOS based on the coordinator pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Daltron/RxAlamoRecord&quot;&gt;RxAlamoRecord&lt;/a&gt; Combines the power of the AlamoRecord and RxSwift libraries to create a networking layer that makes interacting with API&#39;s easier than ever reactively.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattgallagher/CwlSignal&quot;&gt;CwlSignal&lt;/a&gt; A Swift framework for reactive programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fxm90/LightweightObservable&quot;&gt;LightweightObservable&lt;/a&gt; - A lightweight implementation of an observable sequence that you can subscribe to.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaximKotliar/Bindy&quot;&gt;Bindy&lt;/a&gt; - Simple, lightweight swift bindings with KVO support and easy to read syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/broadwaylamb/OpenCombine&quot;&gt;OpenCombine&lt;/a&gt; — Open source implementation of Apple&#39;s Combine framework for processing values over time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DevYeom/OneWay&quot;&gt;OneWay&lt;/a&gt; - A Swift library for state management with unidirectional data flow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/Verge&quot;&gt;Verge&lt;/a&gt; - Verge is a faster and scalable state management library for UIKit and SwiftUI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;React-Like&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexdrone/Render&quot;&gt;Render&lt;/a&gt; - Swift and UIKit a la React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BendingSpoons/katana-swift&quot;&gt;Katana&lt;/a&gt; - Swift apps a la React and Redux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mcudich/TemplateKit&quot;&gt;TemplateKit&lt;/a&gt; - React-inspired framework for building component-based user interfaces in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/surfstudio/CoreEvents&quot;&gt;CoreEvents&lt;/a&gt; - Simple library with C#-like events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaxDesiatov/Tokamak&quot;&gt;Tokamak&lt;/a&gt; - React-like framework providing a declarative API for building native UI components with easy to use one-way data binding.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iwasrobbed/Swift-CheatSheet&quot;&gt;Swift Cheat Sheet&lt;/a&gt; - A quick reference cheat sheet for common, high level topics in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iwasrobbed/Objective-C-CheatSheet&quot;&gt;Objective-C Cheat Sheet&lt;/a&gt; - A quick reference cheat sheet for common, high level topics in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/SwiftSnippets&quot;&gt;SwiftSnippets&lt;/a&gt; - A collection of Swift snippets to be used in Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/whitef0x0/app-store-checklist&quot;&gt;App Store Checklist&lt;/a&gt; - A checklist of what to look for before submitting your app to the App Store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ole/whats-new-in-swift-4&quot;&gt;whats-new-in-swift-4&lt;/a&gt; - An Xcode playground showcasing the new features in Swift 4.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://erenkabakci.github.io/WWDC-Recap/&quot;&gt;WWDC-Recap&lt;/a&gt; - A collection of session summaries in markdown format, from WWDC 19 &amp;amp; 17.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kandi.openweaver.com/swift/vsouza/awesome-ios&quot;&gt;Awesome-ios&lt;/a&gt; - A curated list of awesome iOS ecosystem.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Reflection&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zewo/Reflection&quot;&gt;Reflection&lt;/a&gt; - Reflection provides an API for advanced reflection at runtime including dynamic construction of types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CharlinFeng/Reflect&quot;&gt;Reflect&lt;/a&gt; - Reflection, Dict2Model, Model2Dict, Archive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evermeer/EVReflection&quot;&gt;EVReflection&lt;/a&gt; - Reflection based JSON encoding and decoding. Including support for NSDictionary, NSCoding, Printable, Hashable and Equatable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnlui/JSONNeverDie&quot;&gt;JSONNeverDie&lt;/a&gt; - Auto reflection tool from JSON to Model, user friendly JSON encoder / decoder, aims to never die.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bradhilton/SwiftKVC&quot;&gt;SwiftKVC&lt;/a&gt; - Key-Value Coding (KVC) for native Swift classes and structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wickwirew/Runtime&quot;&gt;Runtime&lt;/a&gt; - A Swift Runtime library for viewing type info, and the dynamic getting and setting of properties.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Regex&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sharplet/Regex&quot;&gt;Regex&lt;/a&gt; - A Swift µframework providing an NSRegularExpression-backed Regex type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kasei/SwiftRegex&quot;&gt;SwiftRegex&lt;/a&gt; - Perl-like Regex =~ operator for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cezheng/PySwiftyRegex&quot;&gt;PySwiftyRegex&lt;/a&gt; - Easily deal with Regex in Swift in a Pythonic way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crossroadlabs/Regex&quot;&gt;Regex&lt;/a&gt; - Regular expressions for swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brynbellomy/Regex&quot;&gt;Regex&lt;/a&gt; - Regex class for Swift. Wraps NSRegularExpression.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/Regex&quot;&gt;sindresorhus/Regex&lt;/a&gt; - Swifty regular expressions, fully tested &amp;amp; documented, and with correct Unicode handling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;SDK&lt;/h2&gt; 
&lt;h3&gt;Official&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spotify/ios-sdk&quot;&gt;Spotify&lt;/a&gt; Spotify iOS SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spotify/SpotifyLogin&quot;&gt;SpotifyLogin&lt;/a&gt; Spotify SDK Login in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/facebook-ios-sdk&quot;&gt;Facebook&lt;/a&gt; Facebook iOS SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/ios/v3/&quot;&gt;Google Analytics&lt;/a&gt; Google Analytics SDK for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paypal/PayPal-iOS-SDK&quot;&gt;Paypal iOS SDK&lt;/a&gt; The PayPal Mobile SDKs enable native apps to easily accept PayPal and credit card payments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Pocket/Pocket-ObjC-SDK&quot;&gt;Pocket&lt;/a&gt; SDK for saving stuff to Pocket.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tumblr/TMTumblrSDK&quot;&gt;Tumblr&lt;/a&gt; Library for easily integrating Tumblr data into your iOS or macOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evernote/evernote-cloud-sdk-ios&quot;&gt;Evernote&lt;/a&gt; Evernote SDK for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/box/box-ios-sdk&quot;&gt;Box&lt;/a&gt; iOS + macOS SDK for the Box API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OneDrive/onedrive-sdk-ios&quot;&gt;OneDrive&lt;/a&gt; Live SDK for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stripe/stripe-ios&quot;&gt;Stripe&lt;/a&gt; Stripe bindings for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#payments&quot;&gt;Venmo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-amplify/aws-sdk-ios&quot;&gt;AWS&lt;/a&gt; Amazon Web Services Mobile SDK for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zendesk/zendesk_sdk_ios&quot;&gt;Zendesk&lt;/a&gt; Zendesk Mobile SDK for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/lp/developers&quot;&gt;Dropbox&lt;/a&gt; SDKs for Drop-ins and Dropbox Core API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/ios/setup&quot;&gt;Firebase&lt;/a&gt; Mobile (and web) application development platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ResearchKit/ResearchKit&quot;&gt;ResearchKit&lt;/a&gt; ResearchKit is an open source software framework that makes it easy to create apps for medical research or for other research projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.goprimer.com/&quot;&gt;Primer&lt;/a&gt; - Easy SDK for creating personalized landing screens, signup, and login flows on a visual editor with built in a/b/n testing and analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Azure/azure-storage-ios&quot;&gt;Azure&lt;/a&gt; - Client library for accessing Azure Storage on an iOS device.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AgileBits/onepassword-app-extension&quot;&gt;1Password&lt;/a&gt; - 1Password Extension for iOS Apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carekit-apple/CareKit&quot;&gt;CareKit&lt;/a&gt; - CareKit is an open source software framework for creating apps that help people better understand and manage their health. By Apple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Shopify/mobile-buy-sdk-ios&quot;&gt;Shopify&lt;/a&gt; - Shopify’s Mobile Buy SDK makes it simple to sell physical products inside your mobile app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pinterest/ios-pdk&quot;&gt;Pinterest&lt;/a&gt; - Pinterest iOS SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaltura/playkit-ios&quot;&gt;playkit-ios&lt;/a&gt; - PlayKit: Kaltura Player SDK for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/algolia/algoliasearch-client-swift&quot;&gt;algoliasearch-client-swift&lt;/a&gt; - Algolia Search API Client for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twitter-archive/twitter-kit-ios&quot;&gt;twitter-kit-ios&lt;/a&gt; - Twitter Kit is a native SDK to include Twitter content inside mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uber/rides-ios-sdk&quot;&gt;rides-ios-sdk&lt;/a&gt; - Uber Rides iOS SDK (beta).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apphud/ApphudSDK&quot;&gt;Apphud&lt;/a&gt; - A complete solution to integrate auto-renewable subscriptions and regular in-app purchases in 30 minutes with no server code required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adaptyteam/AdaptySDK-iOS&quot;&gt;Adapty&lt;/a&gt; - Integrate in-app subscriptions and a/b testing for them with 3 lines of code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Unofficial&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nst/STTwitter&quot;&gt;STTwitter&lt;/a&gt; A stable, mature and comprehensive Objective-C library for Twitter REST API 1.1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/natesymer/FHSTwitterEngine&quot;&gt;FHSTwitterEngine&lt;/a&gt; Twitter API for Cocoa developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heyalexchoi/Giphy-iOS&quot;&gt;Giphy&lt;/a&gt; Giphy API client for iOS in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sachinkesiraju/UberKit&quot;&gt;UberKit&lt;/a&gt; - A simple, easy-to-use Objective-C wrapper for the Uber API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shyambhat/InstagramKit&quot;&gt;InstagramKit&lt;/a&gt; - Instagram iOS SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agilie/dribbble-ios-sdk&quot;&gt;DribbbleSDK&lt;/a&gt; - Dribbble iOS SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukhnos/objectiveflickr&quot;&gt;objectiveflickr&lt;/a&gt; - ObjectiveFlickr, a Flickr API framework for Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pjebs/EasySocial&quot;&gt;Easy Social&lt;/a&gt; - Twitter &amp;amp; Facebook Integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Constantine-Fry/das-quadrat&quot;&gt;das-quadrat&lt;/a&gt; - A Swift wrapper for Foursquare API. iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darkcl/SocialLib&quot;&gt;SocialLib&lt;/a&gt; - SocialLib handles sharing message to multiple social media.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ContinuousLearning/PokemonKit&quot;&gt;PokemonKit&lt;/a&gt; - Pokeapi wrapper, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timonus/TJDropbox&quot;&gt;TJDropbox&lt;/a&gt; - A Dropbox v2 client library written in Objective-C&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/github.swift&quot;&gt;GitHub.swift&lt;/a&gt; - &lt;img alt=&quot;octocat&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&quot; /&gt;) Unofficial GitHub API client in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CloudRail/cloudrail-si-ios-sdk&quot;&gt;CloudRail SI&lt;/a&gt; - Abstraction layer / unified API for multiple API providers. Interfaces eg for Cloud Storage (Dropbox, Google, ...), Social Networks (Facebook, Twitter, ...) and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/96-problems/medium-sdk-swift&quot;&gt;Medium SDK - Swift&lt;/a&gt; - Unofficial Medium API SDK in Swift with sample project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattdonnelly/Swifter&quot;&gt;Swifter&lt;/a&gt; - &lt;span&gt;🐦&lt;/span&gt; A Twitter framework for iOS &amp;amp; macOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pvzig/SlackKit&quot;&gt;SlackKit&lt;/a&gt; - a Slack client library for iOS and macOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dingwilson/RandomUserSwift&quot;&gt;RandomUserSwift&lt;/a&gt; - Swift Framework to Generate Random Users - An Unofficial SDK for randomuser.me.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pantuspavel/PPEventRegistryAPI/&quot;&gt;PPEventRegistryAPI&lt;/a&gt; - Swift 3 Framework for Event Registry API (eventregistry.org).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modo-studio/UnsplashKit&quot;&gt;UnsplashKit&lt;/a&gt; - Swift client for Unsplash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mike4aday/SwiftlySalesforce&quot;&gt;Swiftly Salesforce&lt;/a&gt; - An easy-to-use framework for building iOS apps that integrate with Salesforce, using Swift and promises.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Daltron/Spartan&quot;&gt;Spartan&lt;/a&gt; - An Elegant Spotify Web API Library Written in Swift for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Daltron/BigBoard&quot;&gt;BigBoard&lt;/a&gt; - An Elegant Financial Markets Library Written in Swift that makes requests to Yahoo Finance API&#39;s under the hood.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saeid/BittrexApiKit&quot;&gt;BittrexApiKit&lt;/a&gt; - Simple and complete Swift wrapper for Bittrex Exchange API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftyVK/SwiftyVK&quot;&gt;SwiftyVK&lt;/a&gt; Library for easy interact with VK social network API written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sleepdefic1t/ARKKit&quot;&gt;ARKKit&lt;/a&gt; - ARK Ecosystem Cryptocurrency API Framework for iOS &amp;amp; macOS, written purely in Swift 4.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AnderGoig/SwiftInstagram&quot;&gt;SwiftInstagram&lt;/a&gt; - Swift Client for Instagram API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Awalz/SwiftyArk&quot;&gt;SwiftyArk&lt;/a&gt; - A simple, lightweight, fully-asynchronous cryptocurrency framework for the ARK Ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CaptainYukinoshitaHachiman/PerfectSlackAPIClient&quot;&gt;PerfectSlackAPIClient&lt;/a&gt; - A Slack API Client for the Perfect Server-Side Swift Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thecb4/MotherShip&quot;&gt;Mothership&lt;/a&gt; - Tunes Connect Library inspired by FastLane.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rinov/SwiftFlyer&quot;&gt;SwiftFlyer&lt;/a&gt; - An API wrapper for bitFlyer that supports all providing API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylebrowning/waterwheel.swift&quot;&gt;waterwheel.swift&lt;/a&gt; - The Waterwheel Swift SDK provides classes to natively connect iOS, macOS, tvOS, and watchOS applications to Drupal 7 and 8.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sxg/ForecastIO&quot;&gt;ForecastIO&lt;/a&gt; - A Swift library for the Forecast.io Dark Sky API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ethenyl/JamfKit&quot;&gt;JamfKit&lt;/a&gt; - A JSS communication framework written in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orta/cocoapods-keys&quot;&gt;cocoapods-keys&lt;/a&gt; - A key value store for storing environment and application keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/simple-machines/simple-touch&quot;&gt;simple-touch&lt;/a&gt; - Very simple swift wrapper for Biometric Authentication Services (Touch ID) on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yankodimitrov/SwiftPasscodeLock&quot;&gt;SwiftPasscodeLock&lt;/a&gt; - An iOS passcode lock with TouchID authentication written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/recruit-lifestyle/Smile-Lock&quot;&gt;Smile-Lock&lt;/a&gt; - A library for make a beautiful Passcode Lock View.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dropbox/zxcvbn-ios&quot;&gt;zxcvbn-ios&lt;/a&gt; - A realistic password strength estimator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Techprimate/TPObfuscatedString&quot;&gt;TPObfuscatedString&lt;/a&gt; - Simple String obfuscation using core Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rolandleth/LTHPasscodeViewController&quot;&gt;LTHPasscodeViewController&lt;/a&gt; - An iOS passcode lockscreen replica (from Settings), with TouchID and simple (variable length) / complex support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/karek314/iOS-App-Security-Class&quot;&gt;iOS-App-Security-Class&lt;/a&gt; - Simple class to check if iOS app has been cracked, being debugged or enriched with custom dylib and as well detect jailbroken environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vasilenkoigor/BiometricAuth&quot;&gt;BiometricAuth&lt;/a&gt; - Simple framework for biometric authentication (via TouchID) in your application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/siavashalipour/SAPinViewController&quot;&gt;SAPinViewController&lt;/a&gt; - Simple and easy to use default iOS PIN screen. This simple library allows you to draw a fully customisable PIN screen same as the iOS default PIN view. My inspiration to create this library was form THPinViewController, however SAPinViewController is completely implemented in Swift. Also the main purpose of creating this library was to have simple, easy to use and fully customisable PIN screen.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timoliver/TOPasscodeViewController&quot;&gt;TOPasscodeViewController&lt;/a&gt; - A modal passcode input and validation view controller for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rushisangani/BiometricAuthentication&quot;&gt;BiometricAuthentication&lt;/a&gt; - Use Apple FaceID or TouchID authentication in your app using BiometricAuthentication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kolesa-team/ios_pinCodeTextField&quot;&gt;KKPinCodeTextField&lt;/a&gt; - A customizable verification code textField for phone verification codes, passwords etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VirgilSecurity/virgil-sdk-pfs-x&quot;&gt;Virgil SWIFT PFS SDK&lt;/a&gt; - An SDK that allows developers to add the Perfect Forward Secrecy (PFS) technologies to their digital solutions to protect previously intercepted traffic from being decrypted even if the main Private Key is compromised.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VirgilSecurity/virgil-sdk-x&quot;&gt;Virgil Security Objective-C/Swift SDK&lt;/a&gt; - An SDK which allows developers to add full end-to-end security to their existing digital solutions to become HIPAA and GDPR compliant and more using Virgil API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/passlock/Vault&quot;&gt;Vault&lt;/a&gt; - Safe place for your encryption keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexruperez/SecurePropertyStorage&quot;&gt;SecurePropertyStorage&lt;/a&gt; - Helps you define secure storages for your properties using Swift property wrappers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encryption&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Gurpartap/AESCrypt-ObjC&quot;&gt;AESCrypt-ObjC&lt;/a&gt; - A simple and opinionated AES encrypt / decrypt Objective-C class that just works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iosdevzone/IDZSwiftCommonCrypto&quot;&gt;IDZSwiftCommonCrypto&lt;/a&gt; - A wrapper for Apple&#39;s Common Crypto library written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/Arcane&quot;&gt;Arcane&lt;/a&gt; - Lightweight wrapper around CommonCrypto in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mpurland/SwiftMD5&quot;&gt;SwiftMD5&lt;/a&gt; - A pure Swift implementation of MD5.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/SwiftHash&quot;&gt;SwiftHash&lt;/a&gt; - Hash in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jancassio/SweetHMAC&quot;&gt;SweetHMAC&lt;/a&gt; - A tiny and easy to use Swift class to encrypt strings using HMAC algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soyersoyer/SwCrypt&quot;&gt;SwCrypt&lt;/a&gt; - RSA public/private key generation, RSA, AES encryption/decryption, RSA sign/verify in Swift with CommonCrypto in iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftP2P/SwiftSSL&quot;&gt;SwiftSSL&lt;/a&gt; - An Elegant crypto toolkit in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TakeScoop/SwiftyRSA&quot;&gt;SwiftyRSA&lt;/a&gt; - RSA public/private key encryption in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mikaoj/EnigmaKit&quot;&gt;EnigmaKit&lt;/a&gt; - Enigma encryption in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cossacklabs/themis&quot;&gt;Themis&lt;/a&gt; - High-level crypto library, providing basic asymmetric encryption, secure messaging with forward secrecy and secure data storage, supports iOS/macOS, Android and different server side platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pjebs/Obfuscator-iOS&quot;&gt;Obfuscator-iOS&lt;/a&gt; - Secure your app by obfuscating all the hard-coded security-sensitive strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jedisct1/swift-sodium&quot;&gt;swift-sodium&lt;/a&gt; - Safe and easy to use crypto for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzyzanowskim/CryptoSwift&quot;&gt;CryptoSwift&lt;/a&gt; - Crypto related functions and helpers for Swift implemented in Swift programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sgl0v/SCrypto&quot;&gt;SCrypto&lt;/a&gt; - Elegant Swift interface to access the CommonCrypto routines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/attaswift/SipHash&quot;&gt;SipHash&lt;/a&gt; - Simple and secure hashing in Swift with the SipHash algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RNCryptor/RNCryptor&quot;&gt;RNCryptor&lt;/a&gt; - CCCryptor (AES encryption) wrappers for iOS and Mac in Swift. -- For ObjC, see RNCryptor/RNCryptor-objc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ImKcat/CatCrypto&quot;&gt;CatCrypto&lt;/a&gt; - An easy way for hashing and encryption.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trailofbits/SecureEnclaveCrypto&quot;&gt;SecureEnclaveCrypto&lt;/a&gt; - Demonstration library for using the Secure Enclave on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/4taras4/RSASwiftGenerator&quot;&gt;RSASwiftGenerator&lt;/a&gt; - Util for generation RSA keys on your client and save to keychain or cover into Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VirgilSecurity/virgil-crypto-x&quot;&gt;Virgil Security Objective-C/Swift Crypto Library&lt;/a&gt; - A high-level cryptographic library that allows to perform all necessary operations for securely storing and transferring data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airsidemobile/JOSESwift&quot;&gt;JOSESwift&lt;/a&gt; - A framework for the JOSE standards JWS, JWE, and JWK written in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Keychain&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kishikawakatsumi/UICKeyChainStore&quot;&gt;UICKeyChainStore&lt;/a&gt; - UICKeyChainStore is a simple wrapper for Keychain on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/square/Valet&quot;&gt;Valet&lt;/a&gt; - Securely store data in the iOS or macOS Keychain without knowing a thing about how the Keychain works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matthewpalmer/Locksmith&quot;&gt;Locksmith&lt;/a&gt; - A powerful, protocol-oriented library for working with the keychain in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kishikawakatsumi/KeychainAccess&quot;&gt;KeychainAccess&lt;/a&gt; - Simple Swift wrapper for Keychain that works on iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Keychains&quot;&gt;Keychains&lt;/a&gt; - Because you should care... about the security... of your shit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/granoff/Lockbox&quot;&gt;Lockbox&lt;/a&gt; - Objective-C utility class for storing data securely in the key chain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soffes/SAMKeychain&quot;&gt;SAMKeychain&lt;/a&gt; - Simple Objective-C wrapper for the keychain that works on Mac and iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jrendel/SwiftKeychainWrapper&quot;&gt;SwiftKeychainWrapper&lt;/a&gt; - A simple wrapper for the iOS Keychain to allow you to use it in a similar fashion to User Defaults.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andriyslyusar/SwiftyKeychainKit&quot;&gt;SwiftyKeychainKit&lt;/a&gt; - Keychain wrapper with the benefits of static typing and convenient syntax, support for primitive types, Codable, NSCoding.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Server&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Server side projects supporting coroutines, Linux, MacOS, iOS, Apache Modules, Async calls, libuv and more.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectlySoft/Perfect&quot;&gt;Perfect&lt;/a&gt; - Server-side Swift. The Perfect library, application server, connectors and example apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/httpswift/swifter&quot;&gt;Swifter&lt;/a&gt; - Tiny http server engine written in Swift programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robbiehanson/CocoaHTTPServer&quot;&gt;CocoaHTTPServer&lt;/a&gt; - A small, lightweight, embeddable HTTP server for macOS or iOS applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef-archive/Curassow&quot;&gt;Curassow&lt;/a&gt; - Swift HTTP server using the pre-fork worker model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zewo/Zewo&quot;&gt;Zewo&lt;/a&gt; - Lightweight library for web server applications in Swift on macOS and Linux powered by coroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vapor/vapor&quot;&gt;Vapor&lt;/a&gt; - Elegant web framework for Swift that works on iOS, macOS, and Ubuntu.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/takebayashi/swiftra&quot;&gt;swiftra&lt;/a&gt; - Sinatra-like DSL for developing web apps in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/elliottminns/blackfire&quot;&gt;blackfire&lt;/a&gt; - A fast HTTP web server based on Node.js and Express written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huytd/swift-http&quot;&gt;swift-http&lt;/a&gt; - HTTP Implementation for Swift on Linux and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yoseob/Trevi&quot;&gt;Trevi&lt;/a&gt; - libuv base Swift web HTTP server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crossroadlabs/Express&quot;&gt;Express&lt;/a&gt; - Swift Express is a simple, yet unopinionated web application server written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/izqui/Taylor&quot;&gt;Taylor&lt;/a&gt; - A lightweight library for writing HTTP web servers with Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef-archive/Frank&quot;&gt;Frank&lt;/a&gt; - Frank is a DSL for quickly writing web applications in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBM-Swift/Kitura&quot;&gt;Kitura&lt;/a&gt; - A Swift Web Framework and HTTP Server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sauliusgrigaitis/Swifton&quot;&gt;Swifton&lt;/a&gt; - A Ruby on Rails inspired Web Framework for Swift that runs on Linux and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/Dynamo&quot;&gt;Dynamo&lt;/a&gt; - High Performance (nearly)100% Swift Web server supporting dynamic content.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vapor/redis&quot;&gt;Redis&lt;/a&gt; - Pure-Swift Redis client implemented from the original protocol spec. macOS + Linux compatible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/colemancda/NetworkObjects&quot;&gt;NetworkObjects&lt;/a&gt; - Swift backend / server framework (Pure Swift, Supports Linux).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://noze.io&quot;&gt;Noze.io&lt;/a&gt; - Evented I/O streams a.k.a. Node.js for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skylab-inc/Lightning&quot;&gt;Lightning&lt;/a&gt; - A Swift Multiplatform Web and Networking Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twostraws/swiftgd&quot;&gt;SwiftGD&lt;/a&gt; - A simple Swift wrapper for libgd.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BrettRToomey/Jobs&quot;&gt;Jobs&lt;/a&gt; - A job system for Swift backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ApacheExpress/ApacheExpress&quot;&gt;ApacheExpress&lt;/a&gt; - Write Apache Modules in Swift!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swisspol/GCDWebServer&quot;&gt;GCDWebServer&lt;/a&gt; - Lightweight GCD based HTTP server for macOS &amp;amp; iOS (includes web based uploader &amp;amp; WebDAV server).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/envoy/Embassy&quot;&gt;Embassy&lt;/a&gt; - Super lightweight async HTTP server library in pure Swift runs in iOS / MacOS / Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amzn/smoke-framework&quot;&gt;smoke-framework&lt;/a&gt; - A light-weight server-side service framework written in the Swift programming language.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Style Guides&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NYTimes/objective-c-style-guide&quot;&gt;NY Times - Objective C Style Guide&lt;/a&gt; - The Objective-C Style Guide used by The New York Times.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raywenderlich/objective-c-style-guide&quot;&gt;raywenderlich Style Guide&lt;/a&gt; - A style guide that outlines the coding conventions for raywenderlich.com.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/github/objective-c-style-guide&quot;&gt;GitHub Objective-C Style Guide&lt;/a&gt; - Style guide &amp;amp; coding conventions for Objective-C projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gist.github.com/soffes/812796&quot;&gt;Objective-C Coding Convention and Best Practices&lt;/a&gt; - Gist with coding conventions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-style-guide&quot;&gt;Swift Style Guide by @raywenderlich&lt;/a&gt; - The official Swift style guide for raywenderlich.com.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spotify/ios-style&quot;&gt;Spotify Objective-C Coding Style&lt;/a&gt; - Guidelines for iOS development in use at Spotify.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/github/swift-style-guide&quot;&gt;GitHub - Style guide &amp;amp; coding conventions for Swift projects&lt;/a&gt; - A guide to our Swift style and conventions by @github.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/futurice/ios-good-practices&quot;&gt;Futurice iOS Good Practices&lt;/a&gt; - iOS starting guide and good practices suggestions by &lt;a href=&quot;https://github.com/futurice&quot;&gt;@futurice&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SlideShareInc/swift-style-guide/raw/master/swift_style_guide.md&quot;&gt;SlideShare Swift Style Guide&lt;/a&gt; - SlideShare Swift Style Guide we are using for our upcoming iOS 8 only app written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prolificinteractive/swift-style-guide&quot;&gt;Prolific Interactive Style Guide&lt;/a&gt; - A style guide for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linkedin/swift-style-guide&quot;&gt;Swift Style Guide by LinkedIn&lt;/a&gt; - LinkedIn&#39;s Official Swift Style Guide.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;h3&gt;TDD / BDD&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kiwi-bdd/Kiwi&quot;&gt;Kiwi&lt;/a&gt; - A behavior-driven development library for iOS development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/specta/specta&quot;&gt;Specta&lt;/a&gt; - A light-weight TDD / BDD framework for Objective-C &amp;amp; Cocoa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Quick/Quick&quot;&gt;Quick&lt;/a&gt; - A behavior-driven development framework for Swift and Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonreid/XcodeCoverage&quot;&gt;XcodeCoverage&lt;/a&gt; - Code coverage for Xcode projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AliSoftware/OHHTTPStubs&quot;&gt;OHHTTPStubs&lt;/a&gt; - Stub your network requests easily! Test your apps with fake network data and custom response time, response code and headers!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Skyscanner/Dixie&quot;&gt;Dixie&lt;/a&gt; - Dixie is an open source Objective-C testing framework for altering object behaviours.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gh-unit/gh-unit&quot;&gt;gh-unit&lt;/a&gt; - Test Framework for Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Quick/Nimble&quot;&gt;Nimble&lt;/a&gt; - A Matcher Framework for Swift and Objective-C&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/railsware/Sleipnir&quot;&gt;Sleipnir&lt;/a&gt; - BDD-style framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/typelift/SwiftCheck&quot;&gt;SwiftCheck&lt;/a&gt; - QuickCheck for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Quick/Spry&quot;&gt;Spry&lt;/a&gt; - A Mac and iOS Playgrounds Unit Testing library based on Nimble.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apple/swift-corelibs-xctest&quot;&gt;swift-corelibs-xctest&lt;/a&gt; - The XCTest Project, A Swift core library for providing unit test support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WhiskerzAB/PlaygroundTDD&quot;&gt;PlaygroundTDD&lt;/a&gt; - Small library to easily run your tests directly within a Playground.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;A/B Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KeepSafe/Switchboard&quot;&gt;Switchboard&lt;/a&gt; - Switchboard - easy and super light weight A/B testing for your mobile iPhone or android app. This mobile A/B testing framework allows you with minimal servers to run large amounts of mobile users.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/SkyLab&quot;&gt;SkyLab&lt;/a&gt; - Multivariate &amp;amp; A/B Testing for iOS and Mac.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindsnacks/MSActiveConfig&quot;&gt;MSActiveConfig&lt;/a&gt; - Remote configuration and A/B Testing framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/recruit-mp/ABKit&quot;&gt;ABKit&lt;/a&gt; - AB testing framework for iOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;UI Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://appium.io/&quot;&gt;appium&lt;/a&gt; - Appium is an open source test automation framework for use with native and hybrid mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serhatbolsu/robotframework-appiumlibrary&quot;&gt;robotframework-appiumlibrary&lt;/a&gt; - AppiumLibrary is an appium testing library for RobotFramework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cucumber.io/&quot;&gt;Cucumber&lt;/a&gt; - Behavior driver development for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kif-framework/KIF&quot;&gt;Kif&lt;/a&gt; - An iOS Functional Testing Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/inkling/Subliminal&quot;&gt;Subliminal&lt;/a&gt; - An understated approach to iOS integration testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://ios-driver.github.io/ios-driver/index.html&quot;&gt;ios-driver&lt;/a&gt; - Test any iOS native, hybrid, or mobile web application using Selenium / WebDriver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/Remote&quot;&gt;Remote&lt;/a&gt; - Control your iPhone from inside Xcode for end-to-end testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linkedin/LayoutTest-iOS&quot;&gt;LayoutTest-iOS&lt;/a&gt; - Write unit tests which test the layout of a view in multiple configurations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google/EarlGrey&quot;&gt;EarlGrey&lt;/a&gt; - &lt;span&gt;🍵&lt;/span&gt; iOS UI Automation Test Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joemasilotti/UI-Testing-Cheat-Sheet&quot;&gt;UI Testing Cheat Sheet&lt;/a&gt; - How do I test this with UI Testing?&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linkedin/bluepill&quot;&gt;Bluepill&lt;/a&gt; - Bluepill is a reliable iOS testing tool that runs UI tests using multiple simulators on a single machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flawlessapp.io/&quot;&gt;Flawless App&lt;/a&gt; - tool for visual quality check of mobile app in a real-time. It compares initial design with the actual implementation right inside iOS simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/morizotter/TouchVisualizer&quot;&gt;TouchVisualizer&lt;/a&gt; - Lightweight touch visualization library in Swift. A single line of code and visualize your touches!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evermeer/UITestHelper&quot;&gt;UITestHelper&lt;/a&gt; - UITest helper library for creating readable and maintainable tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nalexn/ViewInspector&quot;&gt;ViewInspector&lt;/a&gt; - Runtime inspection and unit testing of SwiftUI views&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PGSSoft/AutoMate&quot;&gt;AutoMate&lt;/a&gt; - XCTest extensions for writing UI automation tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarathonLabs/marathon&quot;&gt;Marathon Runner&lt;/a&gt; - Fast, platform-independent test runner focused on performance and stability execute tests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Other Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EmergeTools/ETTrace&quot;&gt;ETTrace&lt;/a&gt; - Locally measure performance of your app, without Xcode or Instruments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Palleas/NaughtyKeyboard&quot;&gt;NaughtyKeyboard&lt;/a&gt; - The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data. This is a keyboard to help you test your app from your iOS device.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vadymmarkov/Fakery&quot;&gt;Fakery&lt;/a&gt; - Swift fake data generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/venmo/DVR&quot;&gt;DVR&lt;/a&gt; - Network testing for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Brightify/Cuckoo&quot;&gt;Cuckoo&lt;/a&gt; - First boilerplate-free mocking framework for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Velhotes/Vinyl&quot;&gt;Vinyl&lt;/a&gt; - Network testing à la VCR in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sabirvirtuoso/Mockit&quot;&gt;Mockit&lt;/a&gt; - A simple mocking framework for Swift, inspired by the famous Mockito for Java.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxsokolov/Cribble&quot;&gt;Cribble&lt;/a&gt; - Swifty tool for visual testing iPhone and iPad apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ashfurrow/second_curtain&quot;&gt;second_curtain&lt;/a&gt; - Upload failing iOS snapshot tests cases to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane-community/trainer&quot;&gt;trainer&lt;/a&gt; - Convert xcodebuild plist files to JUnit reports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/buildasaurs/Buildasaur&quot;&gt;Buildasaur&lt;/a&gt; - Automatic testing of your Pull Requests on GitHub and BitBucket using Xcode Server. Keep your team productive and safe. Get up and running in minutes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devlucky/Kakapo&quot;&gt;Kakapo&lt;/a&gt; - Dynamically Mock server behaviors and responses in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bizz84/AcceptanceMark&quot;&gt;AcceptanceMark&lt;/a&gt; Tool to auto-generate Xcode tests classes from Markdown tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metova/MetovaTestKit&quot;&gt;MetovaTestKit&lt;/a&gt; - A collection of testing utilities to turn crashing test suites into failing test suites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kuniwak/MirrorDiffKit&quot;&gt;MirrorDiffKit&lt;/a&gt; - Pretty diff between any structs or classes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tooploox/SnappyTestCase&quot;&gt;SnappyTestCase&lt;/a&gt; - iOS Simulator type agnostic snapshot testing, built on top of the FBSnapshotTestCase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shindyu/XCTestExtensions&quot;&gt;XCTestExtensions&lt;/a&gt; - XCTestExtensions is a Swift extension that provides convenient assertions for writing Unit Test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ocmock.org/&quot;&gt;OCMock&lt;/a&gt; - Mock objects for Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef/Mockingjay&quot;&gt;Mockingjay&lt;/a&gt; - An elegant library for stubbing HTTP requests with ease in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lickability/PinpointKit&quot;&gt;PinpointKit&lt;/a&gt; - Let your testers and users send feedback with annotated screenshots and logs using a simple gesture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uber/ios-snapshot-test-case&quot;&gt;iOS Snapshot Test Case&lt;/a&gt; — Snapshot test your UIViews and CALayers on iOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreadelfante/DataFixture&quot;&gt;DataFixture&lt;/a&gt; - Creation of data model easily, with no headache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pointfreeco/swift-snapshot-testing&quot;&gt;SnapshotTesting&lt;/a&gt; - Delightful Swift snapshot testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Farfetch/mockingbird&quot;&gt;Mockingbird&lt;/a&gt; - Simplify software testing, by easily mocking any system using HTTP/HTTPS, allowing a team to test and develop against a service that is not complete, unstable or just to reproduce planned cases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Text&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twitter/twitter-text&quot;&gt;Twitter Text Obj&lt;/a&gt; - An Objective-C implementation of Twitter&#39;s text processing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jverkoey/nimbus&quot;&gt;Nimbus&lt;/a&gt; - Nimbus is a toolkit for experienced iOS software designers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/diy/nsstringemojize&quot;&gt;NSStringEmojize&lt;/a&gt; - A category on NSString to convert Emoji Cheat Sheet codes to their equivalent Unicode characters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mdiep/MMMarkdown&quot;&gt;MMMarkdown&lt;/a&gt; - An Objective-C static library for converting Markdown to HTML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cocoanetics/DTCoreText&quot;&gt;DTCoreText&lt;/a&gt; - Methods to allow using HTML code with CoreText.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cocoanetics/DTRichTextEditor&quot;&gt;DTRichTextEditor&lt;/a&gt; - A rich-text editor for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neerajbaid/NBEmojiSearchView&quot;&gt;NBEmojiSearchView&lt;/a&gt; - A searchable emoji dropdown view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joshualat/Pluralize.swift&quot;&gt;Pluralize.swift&lt;/a&gt; - Great Swift String Pluralize Extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cjwirth/RichEditorView&quot;&gt;RichEditorView&lt;/a&gt; - RichEditorView is a simple, modular, drop-in UIView subclass for Rich Text Editing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danthorpe/Money&quot;&gt;Money&lt;/a&gt; - Swift value types for working with money &amp;amp; currency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/PhoneNumberKit&quot;&gt;PhoneNumberKit&lt;/a&gt; - A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google&#39;s libphonenumber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYText&quot;&gt;YYText&lt;/a&gt; - Powerful text framework for iOS to display and edit rich text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/Format&quot;&gt;Format&lt;/a&gt; - A Swift Formatter Kit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zats/Tribute&quot;&gt;Tribute&lt;/a&gt; - Programmatic creation of NSAttributedString doesn&#39;t have to be a pain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dasmer/EmojiKit&quot;&gt;EmojiKit&lt;/a&gt; - Effortless emoji-querying in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvzqz/Roman&quot;&gt;Roman&lt;/a&gt; - Seamless Roman numeral conversion in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nnhubbard/ZSSRichTextEditor&quot;&gt;ZSSRichTextEditor&lt;/a&gt; - A beautiful rich text WYSIWYG editor for iOS with a syntax highlighted source view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cee/pangu.objective-c&quot;&gt;pangu.Objective-C&lt;/a&gt; - Paranoid text spacing in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amayne/SwiftString&quot;&gt;SwiftString&lt;/a&gt; - A comprehensive, lightweight string extension for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/macteo/Marklight&quot;&gt;Marklight&lt;/a&gt; - Markdown syntax highlighter for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indragiek/MarkdownTextView&quot;&gt;MarkdownTextView&lt;/a&gt; - Rich Markdown editing control for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delba/TextAttributes&quot;&gt;TextAttributes&lt;/a&gt; - An easier way to compose attributed strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fdzsergio/Reductio&quot;&gt;Reductio&lt;/a&gt; - Automatic summarizer text in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftStudies/SmarkDown&quot;&gt;SmarkDown&lt;/a&gt; - A Pure Swift implementation of the markdown mark-up language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SimonFairbairn/SwiftyMarkdown&quot;&gt;SwiftyMarkdown&lt;/a&gt; - Converts Markdown files and strings into NSAttributedString.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/szweier/SZMentions&quot;&gt;SZMentions&lt;/a&gt; - Library to help handle mentions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/szweier/SZMentionsSwift&quot;&gt;SZMentionsSwift&lt;/a&gt; - Library to help handle mentions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/henrinormak/Heimdall&quot;&gt;Heimdall&lt;/a&gt; - Heimdall is a wrapper around the Security framework for simple encryption/decryption operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/T-Pham/NoOptionalInterpolation&quot;&gt;NoOptionalInterpolation&lt;/a&gt; - Get rid of &quot;Optional(...)&quot; and &quot;nil&quot; in string interpolation. Easy pluralization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/Smile&quot;&gt;Smile&lt;/a&gt; Emoji in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/iso8601&quot;&gt;ISO8601&lt;/a&gt; Super lightweight ISO8601 Date Formatter in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ekhoo/Translucid&quot;&gt;Translucid&lt;/a&gt; - Lightweight library to set an Image as text background.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/FormatterKit&quot;&gt;FormatterKit&lt;/a&gt; - &lt;code&gt;stringWithFormat:&lt;/code&gt; for the sophisticated hacker set.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Rightpoint/BonMot&quot;&gt;BonMot&lt;/a&gt; - Beautiful, easy attributed strings in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gkaimakas/SwiftValidators&quot;&gt;SwiftValidators&lt;/a&gt; - String validation for iOS developed in Swift. Inspired by &lt;a href=&quot;https://www.npmjs.com/package/validator&quot;&gt;validator.js&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kazuhiro4949/StringStylizer&quot;&gt;StringStylizer&lt;/a&gt; - Type strict builder class for NSAttributedString.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eddiekaiger/SwiftyAttributes&quot;&gt;SwiftyAttributes&lt;/a&gt; - Swift extensions that make it a breeze to work with attributed strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmoliveira/MarkdownKit&quot;&gt;MarkdownKit&lt;/a&gt; - A simple and customizable Markdown Parser for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/indragiek/CocoaMarkdown&quot;&gt;CocoaMarkdown&lt;/a&gt; - Markdown parsing and rendering for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruddfawcett/Notepad&quot;&gt;Notepad&lt;/a&gt; - A fully themeable markdown editor with live syntax highlighting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krizhanovskii/KKStringValidator&quot;&gt;KKStringValidator&lt;/a&gt; - Fast and simple string validation for iOS. With UITextField extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cosmo/ISO8859&quot;&gt;ISO8859&lt;/a&gt; - Convert ISO8859 1-16 Encoded Text to String in Swift. Supports iOS, tvOS, watchOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xoudini/emojica&quot;&gt;Emojica&lt;/a&gt; - Replace standard emoji in strings with a custom emoji set, such as &lt;a href=&quot;https://github.com/twitter/twemoji&quot;&gt;Twemoji&lt;/a&gt; or &lt;a href=&quot;https://github.com/joypixels/emojione&quot;&gt;EmojiOne&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/malcommac/SwiftRichString&quot;&gt;SwiftRichString&lt;/a&gt; - Elegant &amp;amp; Painless Attributed Strings Management Library in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iziz/libPhoneNumber-iOS&quot;&gt;libPhoneNumber-iOS&lt;/a&gt; - iOS port from libphonenumber (Google&#39;s phone number handling library).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evermeer/AttributedTextView&quot;&gt;AttributedTextView&lt;/a&gt; - Easiest way to create an attributed UITextView with support for multiple links (including hashtags and mentions).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dimpiax/StyleDecorator&quot;&gt;StyleDecorator&lt;/a&gt; - Design string simply by linking attributes to needed parts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mathewsanders/Mustard&quot;&gt;Mustard&lt;/a&gt; - Mustard is a Swift library for tokenizing strings when splitting by whitespace doesn&#39;t cut it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RedMadRobot/input-mask-ios&quot;&gt;Input Mask&lt;/a&gt; - Pattern-based user input formatter, parser and validator for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nirma/Attributed&quot;&gt;Attributed&lt;/a&gt; - Modern Swift µframework for attributed strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psharanda/Atributika&quot;&gt;Atributika&lt;/a&gt; - Easily build NSAttributedString by detecting and styling HTML-like tags, hashtags, mentions, RegExp or NSDataDetector patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArtSabintsev/Guitar&quot;&gt;Guitar&lt;/a&gt; - A Cross-Platform String Library Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaiomedau/realtime-currency-formatter-objc&quot;&gt;RealTimeCurrencyFormatter&lt;/a&gt; - An ObjC international currency formatting utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iwasrobbed/Down&quot;&gt;Down&lt;/a&gt; - Blazing fast Markdown rendering in Swift, built upon cmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m2mobi/Marky-Mark&quot;&gt;Marky Mark&lt;/a&gt; - Highly customizable Markdown parsing and native rendering in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/keitaoouchi/MarkdownView&quot;&gt;MarkdownView&lt;/a&gt; - Markdown View for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/younatics/Highlighter&quot;&gt;Highlighter&lt;/a&gt; - Highlight whatever you want! Highlighter will magically find UI objects such as UILabel, UITextView, UITexTfield, UIButton in your UITableViewCell or other Class.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nicklockwood/Sprinter&quot;&gt;Sprinter&lt;/a&gt; - A library for formatting strings on iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raspu/Highlightr&quot;&gt;Highlightr&lt;/a&gt; - An iOS &amp;amp; macOS syntax highlighter, supports 176 languages and comes with 79 styles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krisk/fuse-swift&quot;&gt;fuse-swift&lt;/a&gt; - A lightweight fuzzy-search library, with zero dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EFPrefix/EFMarkdown&quot;&gt;EFMarkdown&lt;/a&gt; - A lightweight Markdown library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jkalash/croc&quot;&gt;Croc&lt;/a&gt; - A lightweight Swift library for Emoji parsing and querying.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FormatterKit/PostalCodeValidator&quot;&gt;PostalCodeValidator&lt;/a&gt; - A validator for postal codes with support for 200+ regions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ProxymanApp/CodeMirror-Swift&quot;&gt;CodeMirror Swift&lt;/a&gt; - A lightweight wrapper of CodeMirror for macOS and iOS. Support Syntax Highlighting &amp;amp; Themes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twitter/TwitterTextEditor&quot;&gt;TwitterTextEditor&lt;/a&gt; - A standalone, flexible API that provides a full featured rich text editor for iOS applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wordpress-mobile/AztecEditor-iOS&quot;&gt;AztecEditor-iOS&lt;/a&gt; - Aztec is a Swift library that provides a &lt;code&gt;UITextView&lt;/code&gt; subclass with HTML visual-editing capabilities. The plugin API supports customization HTML conversion from/to HTML for compatibility with your needs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Font&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArtSabintsev/FontBlaster&quot;&gt;FontBlaster&lt;/a&gt; - Programmatically load custom fonts into your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kitasuke/GoogleMaterialIconFont&quot;&gt;GoogleMaterialIconFont&lt;/a&gt; - Google Material Design Icons for Swift and ObjC project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexdrone/ios-fontawesome&quot;&gt;ios-fontawesome&lt;/a&gt; - NSString+FontAwesome.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thii/FontAwesome.swift&quot;&gt;FontAwesome.swift&lt;/a&gt; - Use FontAwesome in your Swift projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/morizotter/SwiftFontName&quot;&gt;SwiftFontName&lt;/a&gt; - OS font complements library. Localized font supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0x73/SwiftIconFont&quot;&gt;SwiftIconFont&lt;/a&gt; - Icons fonts for iOS (FontAwesome, Iconic, Ionicon, Octicon, Themify, MapIcon, MaterialIcon).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PrideChung/FontAwesomeKit&quot;&gt;FontAwesomeKit&lt;/a&gt; - Icon font library for iOS. Currently supports Font-Awesome, Foundation icons, Zocial, and ionicons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/home-assistant/Iconic&quot;&gt;Iconic&lt;/a&gt; - Auto-generated icon font library for iOS, watchOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dekatotoro/GoogleMaterialDesignIcons&quot;&gt;GoogleMaterialDesignIcons&lt;/a&gt; - Google Material Design Icons Font for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/keitaoouchi/OcticonsKit&quot;&gt;OcticonsKit&lt;/a&gt; - Use Octicons as UIImage / UIFont in your projects with Swifty manners.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/keitaoouchi/IoniconsKit&quot;&gt;IoniconsKit&lt;/a&gt; - Use Ionicons as UIImage / UIFont in your projects with Swifty manners.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qiuncheng/FontAwesomeKit.Swift&quot;&gt;FontAwesomeKit.Swift&lt;/a&gt; - A better choice for iOS Developer to use FontAwesome Icon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nirma/UIFontComplete&quot;&gt;UIFontComplete&lt;/a&gt; - Font management (System &amp;amp; Custom) for iOS and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UglyTroLL/Swicon&quot;&gt;Swicon&lt;/a&gt; - Use 1600+ icons (and more!) from FontAwesome and Google Material Icons in your swift/iOS project in an easy and space-efficient way!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ranesr/SwiftIcons&quot;&gt;SwiftIcons&lt;/a&gt; - A library for using different font icons: dripicons, emoji, font awesome, icofont, ionicons, linear icons, map icons, material icons, open iconic, state, weather. It supports UIImage, UIImageView, UILabel, UIButton, UISegmentedControl, UITabBarItem, UISlider, UIBarButtonItem, UIViewController, UITextfield, UIStepper.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Vaberer/Font-Awesome-Swift&quot;&gt;Font-Awesome-Swift&lt;/a&gt; - Font Awesome swift library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josejuanqm/JQSwiftIcon&quot;&gt;JQSwiftIcon&lt;/a&gt; - Icon Fonts on iOS using string interpolation written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Flight-School/Money&quot;&gt;Money&lt;/a&gt; - A precise, type-safe representation of a monetary amount in a given currency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;UI&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GlebRadchenko/AmazingBubbles&quot;&gt;AmazingBubbles&lt;/a&gt; - Apple Music like Bubble Picker using Dynamic Animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shindyu/ApplyStyleKit&quot;&gt;ApplyStyleKit&lt;/a&gt; - Elegant apply style, using Swift Method Chain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minitour/AZEmptyState&quot;&gt;AZEmptyState&lt;/a&gt; - A UIControl subclass that makes it easy to create empty states.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antiguab/BAFluidView&quot;&gt;BAFluidView&lt;/a&gt; - UIView that simulates a 2D view of a fluid in motion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Guzlan/BackgroundVideoiOS&quot;&gt;BackgroundVideoiOS&lt;/a&gt; - A swift and objective-C object that lets you add a background video to iOS views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/BatteryView&quot;&gt;BatteryView&lt;/a&gt; - Simple battery shaped UIView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Boris-Em/BEMCheckBox#sample-app&quot;&gt;BEMCheckBox&lt;/a&gt; - Tasteful Checkbox for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BohdanOrlov/BouncyPageViewController&quot;&gt;BouncyPageViewController&lt;/a&gt; - Page view controller with bounce effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PureSwift/Cacao&quot;&gt;Cacao&lt;/a&gt; - Pure Swift Cross-platform UIKit (Cocoa Touch) implementation (Supports Linux).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Baddaboo/ClassicKit&quot;&gt;ClassicKit&lt;/a&gt; - A collection of classic-style UI components for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://componentkit.org/&quot;&gt;ComponentKit&lt;/a&gt; - A React-Inspired View Framework for iOS, by Facebook.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OrRon/ConfettiView&quot;&gt;ConfettiView&lt;/a&gt; - Confetti View lets you create a magnificent confetti view in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devinross/curry&quot;&gt;Curry&lt;/a&gt; - Curry is a framework built to enhance and compliment Foundation and UIKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agordeev/DCKit&quot;&gt;DCKit&lt;/a&gt; - Set of iOS controls, which have useful IBInspectable properties. Written on Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qmathe/DistancePicker&quot;&gt;DistancePicker&lt;/a&gt; - Custom control to select a distance with a pan gesture, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/babylonhealth/DrawerKit&quot;&gt;DrawerKit&lt;/a&gt; - DrawerKit lets an UIViewController modally present another UIViewController in a manner similar to the way Apple&#39;s Maps app works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/elongation-preview&quot;&gt;ElongationPreview&lt;/a&gt; - ElongationPreview is an elegant push-pop style view controller with 3D-Touch support and gestures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ipraba/EPSignature&quot;&gt;EPSignature&lt;/a&gt; - Signature component for iOS in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evermeer/EVFaceTracker&quot;&gt;EVFaceTracker&lt;/a&gt; - Calculate the distance and angle of your device with regards to your face.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mukeshthawani/FAQView&quot;&gt;FAQView&lt;/a&gt; - An easy to use FAQ view for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/forkingdog/FDStackView&quot;&gt;FDStackView&lt;/a&gt; - Use UIStackView directly in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thinkclay/FlourishUI&quot;&gt;FlourishUI&lt;/a&gt; - A highly configurable and out-of-the-box-pretty UI library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WenchaoD/FSPagerView&quot;&gt;FSPagerView&lt;/a&gt; - FSPagerView is an elegant Screen Slide Library. It is extremely helpful for making Banner, Product Show, Welcome/Guide Pages, Screen/ViewController Sliders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saeid/GDCheckbox&quot;&gt;GDCheckbox&lt;/a&gt; - An easy-to-use custom checkbox/radio button component for iOS, with support of IBDesign Inspector.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saeid/GDGauge&quot;&gt;GDGauge&lt;/a&gt; - Full Customizable, Beautiful, Easy to use gauge view Edit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skywinder/GaugeKit&quot;&gt;GaugeKit&lt;/a&gt; - Customizable gauges. Easy reproduce Apple&#39;s style gauges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Howardw3/HamsterUIKit&quot;&gt;HamsterUIKit&lt;/a&gt; - A simple and elegant UIKit(Chart) for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/efremidze/Haptica&quot;&gt;Haptica&lt;/a&gt; - Easy Haptic Feedback Generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kciter/HorizontalDial&quot;&gt;HorizontalDial&lt;/a&gt; - A horizontal scroll dial like Instagram.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iGenius-Srl/IGColorPicker&quot;&gt;IGColorPicker&lt;/a&gt; - A customizable color picker for iOS in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calimarkus/JDFlipNumberView&quot;&gt;JDFlipNumberView&lt;/a&gt; - Representing analog flip numbers like airport/trainstation displays.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khuong291/KPActionSheet&quot;&gt;KPActionSheet&lt;/a&gt; - A replacement of default action sheet, but has very simple usage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/linhcn/LCUIComponents&quot;&gt;LCUIComponents&lt;/a&gt; - A framework supports creating transient views on top of other content onscreen such as popover with a data list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wangshengjia/LeeGo&quot;&gt;LeeGo&lt;/a&gt; - Declarative, configurable &amp;amp; highly reusable UI development as making Lego bricks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rolandleth/LTHRadioButton&quot;&gt;LTHRadioButton&lt;/a&gt; - A radio button with a pretty fill animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/Macaw-Examples&quot;&gt;Macaw-Examples&lt;/a&gt; - Various usages of the Macaw library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/material-components/material-components-ios&quot;&gt;Material Components&lt;/a&gt; - Google developed UI components that help developers execute Material Design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CosmicMind/Material&quot;&gt;Material&lt;/a&gt; - Material is an animation and graphics framework that allows developers to easily create beautiful applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/manuelescrig/MEVHorizontalContacts&quot;&gt;MEVHorizontalContacts&lt;/a&gt; - An iOS UICollectionViewLayout subclass to show a list of contacts with configurable expandable menu items.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oney/Mixin&quot;&gt;Mixin&lt;/a&gt; - React.js like Mixin. More powerful Protocol-Oriented Programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Boris-Em/NightView&quot;&gt;NightView&lt;/a&gt; - Dazzling Nights on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HarshilShah/NotchKit&quot;&gt;NotchKit&lt;/a&gt; - A simple way to hide the notch on the iPhone X&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AFathi/NotchToolkit&quot;&gt;NotchToolkit&lt;/a&gt; - A framework for iOS that allow developers use the iPhone X notch in creative ways.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nsomar/OAStackView&quot;&gt;OAStackView&lt;/a&gt; - OAStackView tries to port back the stackview to iOS 7+. OAStackView aims at replicating all the features in UIStackView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/applidium/OverlayContainer&quot;&gt;OverlayContainer&lt;/a&gt; - A library to develop overlay based interfaces, such as the one presented in the iOS 12 Apple Maps or Stocks apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TintPoint/Overlay&quot;&gt;Overlay&lt;/a&gt; - Overlay is a flexible UI framework designed for Swift. It allows you to write CSS like Swift code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uias/Pageboy&quot;&gt;Pageboy&lt;/a&gt; - A simple, highly informative page view controller.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hirohisa/PageController&quot;&gt;PageController&lt;/a&gt; - Infinite paging controller, scrolling through contents and title bar scrolls with a delay.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Pages&quot;&gt;Pages&lt;/a&gt; - UIPageViewController made simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/52inc/Pulley&quot;&gt;Pulley&lt;/a&gt; - A library to imitate the iOS 10 Maps UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wordlessj/Panda&quot;&gt;Panda&lt;/a&gt; - Create view hierarchies declaratively.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/Reactions&quot;&gt;Reactions&lt;/a&gt; - Fully customizable Facebook reactions control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cwRichardKim/RKNotificationHub&quot;&gt;RKNotificationHub&lt;/a&gt; - Make any UIView a full fledged notification center.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/D-32/SegmentedProgressBar&quot;&gt;SegmentedProgressBar&lt;/a&gt; - Snapchat / Instagram Stories style animated indicator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PierrePerrin/ShadowView&quot;&gt;ShadowView&lt;/a&gt; - Make shadows management easy on UIView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aaronjsutton/Shades&quot;&gt;Shades&lt;/a&gt; - Easily add drop shadows, borders, and round corners to a UIView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/efremidze/Shiny&quot;&gt;Shiny&lt;/a&gt; - Iridescent Effect View (inspired by Apple Pay Cash).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SergioChan/SCTrelloNavigation&quot;&gt;SCTrelloNavigation&lt;/a&gt; - An iOS native implementation of a Trello Animated Navigation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/Splitflap&quot;&gt;Splitflap&lt;/a&gt; - A simple split-flap display for your Swift applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Stunner/STAControls&quot;&gt;STAControls&lt;/a&gt; – Handy UIControl subclasses. (Think Three20/NimbusKit of UIControls.) Written in Objective-C.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Activity Indicator&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ninjaprox/NVActivityIndicatorView&quot;&gt;NVActivityIndicatorView&lt;/a&gt; - Collection of nice loading animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naoyashiga/RPLoadingAnimation&quot;&gt;RPLoadingAnimation&lt;/a&gt; - Loading animations by using Swift CALayer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yoavlt/LiquidLoader&quot;&gt;LiquidLoader&lt;/a&gt; - Spinner loader components with liquid animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CardinalNow/iOS-CircleProgressView&quot;&gt;iOS-CircleProgressView&lt;/a&gt; - This control will allow a user to use code instantiated or interface builder to create and render a circle progress view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Eclair/CircleProgressBar&quot;&gt;iOS Circle Progress Bar&lt;/a&gt; - iOS Circle Progress Bar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhilippeBoisney/LinearProgressBar&quot;&gt;LinearProgressBar&lt;/a&gt; - Linear Progress Bar (inspired by Google Material Design) for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saitjr/STLoadingGroup&quot;&gt;STLoadingGroup&lt;/a&gt; - loading views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexLittlejohn/ALThreeCircleSpinner&quot;&gt;ALThreeCircleSpinner&lt;/a&gt; - A pulsing spinner view written in swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mehfuzh/MHRadialProgressView&quot;&gt;MHRadialProgressView&lt;/a&gt; - iOS radial animated progress view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ekhoo/Loader&quot;&gt;Loader&lt;/a&gt; - Amazing animated switch activity indicator written in swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jdg/MBProgressHUD&quot;&gt;MBProgressHUD&lt;/a&gt; - Drop-in class for displays a translucent HUD with an indicator and/or labels while work is being done in a background thread.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SVProgressHUD/SVProgressHUD&quot;&gt;SVProgressHUD&lt;/a&gt; - A clean and lightweight progress HUD for your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/relatedcode/ProgressHUD&quot;&gt;ProgressHUD&lt;/a&gt; - ProgressHUD is a lightweight and easy-to-use HUD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Marxon13/M13ProgressSuite&quot;&gt;M13ProgressSuite&lt;/a&gt; - A suite containing many tools to display progress information on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pkluz/PKHUD&quot;&gt;PKHUD&lt;/a&gt; - A Swift based reimplementation of the Apple HUD (Volume, Ringer, Rotation,…) for iOS 8 and above.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/goktugyil/EZLoadingActivity&quot;&gt;EZLoadingActivity&lt;/a&gt; - Lightweight loading activity HUD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/elbryan/FFCircularProgressView&quot;&gt;FFCircularProgressView&lt;/a&gt; - FFCircularProgressView - An iOS 7-inspired blue circular progress view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mrackwitz/MRProgress&quot;&gt;MRProgress&lt;/a&gt; - Collection of iOS drop-in components to visualize progress.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcelofabri/BigBrother&quot;&gt;BigBrother&lt;/a&gt; - Automatically sets the network activity indicator for any performed request.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Alamofire/AlamofireNetworkActivityIndicator&quot;&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaandedeoglu/KDCircularProgress&quot;&gt;KDCircularProgress&lt;/a&gt; - A circular progress view with gradients written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielamitay/DACircularProgress&quot;&gt;DACircularProgress&lt;/a&gt; - DACircularProgress is a UIView subclass with circular UIProgressView properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ykyouhei/KYNavigationProgress&quot;&gt;KYNavigationProgress&lt;/a&gt; - Simple extension of UINavigationController to display progress on the UINavigationBar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/GearRefreshControl&quot;&gt;GearRefreshControl&lt;/a&gt; - A custom animation for the UIRefreshControl.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ninjinkun/NJKWebViewProgress&quot;&gt;NJKWebViewProgress&lt;/a&gt; - A progress interface library for UIWebView. You can implement progress bar for your in-app browser using this module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxkonovalov/MKRingProgressView&quot;&gt;MKRingProgressView&lt;/a&gt; - A beautiful ring/circular progress view similar to Activity app on Apple Watch, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gautier-gdx/Hexacon&quot;&gt;Hexacon&lt;/a&gt; - A new way to display content in your app like the Apple Watch SpringBoard, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BalestraPatrick/ParticlesLoadingView&quot;&gt;ParticlesLoadingView&lt;/a&gt; - A customizable SpriteKit particles animation on the border of a view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iwasrobbed/RPCircularProgress&quot;&gt;RPCircularProgress&lt;/a&gt; - (Swift) Circular progress UIView subclass with UIProgressView properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatiBot/MBCircularProgressBar&quot;&gt;MBCircularProgressBar&lt;/a&gt; - A circular, animatable &amp;amp; highly customizable progress bar, editable from the Interface Builder using IBDesignable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devSC/WSProgressHUD&quot;&gt;WSProgressHUD&lt;/a&gt; - This is a beautiful hud view for iPhone &amp;amp; iPad.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dabing1022/DBMetaballLoading&quot;&gt;DBMetaballLoading&lt;/a&gt; - A metaball loading written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/polqf/FillableLoaders&quot;&gt;FillableLoaders&lt;/a&gt; - Completely customizable progress based loaders drawn using custom CGPaths written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xxxAIRINxxx/VHUD&quot;&gt;VHUD&lt;/a&gt; Simple HUD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icanzilb/SwiftSpinner&quot;&gt;SwiftSpinner&lt;/a&gt; - A beautiful activity indicator and modal alert written in Swift using blur effects, translucency, flat and bold design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andresinaka/SnapTimer&quot;&gt;SnapTimer&lt;/a&gt; - Implementation of Snapchat&#39;s stories timer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alephao/LLSpinner&quot;&gt;LLSpinner&lt;/a&gt; - An easy way to create a full screen activity indicator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kirankunigiri/SVUploader&quot;&gt;SVUploader&lt;/a&gt; - A beautiful uploader progress view that makes things simple and easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/YLProgressBar&quot;&gt;YLProgressBar&lt;/a&gt; - UIProgressView replacement with an highly and fully customizable animated progress bar in pure Core Graphics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amratab/FlexibleSteppedProgressBar&quot;&gt;FlexibleSteppedProgressBar&lt;/a&gt; - A beautiful easily customisable stepped progress bar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fxm90/GradientLoadingBar&quot;&gt;GradientLoadingBar&lt;/a&gt; - An animated gradient loading bar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DholStudio/DSGradientProgressView&quot;&gt;DSGradientProgressView&lt;/a&gt; - A simple and customizable animated progress bar written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fxm90/GradientProgressBar&quot;&gt;GradientProgressBar&lt;/a&gt; - A gradient progress bar (UIProgressView).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ppth0608/BPCircleActivityIndicator&quot;&gt;BPCircleActivityIndicator&lt;/a&gt; - A lightweight and awesome Loading Activity Indicator for your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nikola9core/DottedProgressBar&quot;&gt;DottedProgressBar&lt;/a&gt; - Simple and customizable animated progress bar with dots for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roytornado/RSLoadingView&quot;&gt;RSLoadingView&lt;/a&gt; - Awesome loading animations using 3D engine written with Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeonardoCardoso/SendIndicator&quot;&gt;SendIndicator&lt;/a&gt; - Yet another task indicator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/StepProgressView&quot;&gt;StepProgressView&lt;/a&gt; - Step-by-step progress view with labels and shapes. A good replacement for UIActivityIndicatorView and UIProgressView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ppth0608/BPBlockActivityIndicator&quot;&gt;BPBlockActivityIndicator&lt;/a&gt; - A simple and awesome Loading Activity Indicator(with funny block animation) for your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jamesdouble/JDBreaksLoading&quot;&gt;JDBreaksLoading&lt;/a&gt; - You can easily start up a little breaking game indicator by one line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Juanpe/SkeletonView&quot;&gt;SkeletonView&lt;/a&gt; - An elegant way to show users that something is happening and also prepare them to which contents he is waiting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Interactive-Studio/Windless&quot;&gt;Windless&lt;/a&gt; - Windless makes it easy to implement invisible layout loading view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gonzalonunez/Skeleton&quot;&gt;Skeleton&lt;/a&gt; - An easy way to create sliding CAGradientLayer animations! Works great for creating skeleton screens for loading content.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IdleHandsApps/StatusBarOverlay&quot;&gt;StatusBarOverlay&lt;/a&gt; - Automatically show/hide a &quot;No Internet Connection&quot; bar when your app loses/gains connection. It supports apps which hide the status bar and &quot;The Notch&quot;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/RetroProgress&quot;&gt;RetroProgress&lt;/a&gt; - Retro looking progress bar straight from the 90s.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Recouse/LinearProgressBar&quot;&gt;LinearProgressBar&lt;/a&gt; - Material Linear Progress Bar for your iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kamirana4/MKProgress&quot;&gt;MKProgress&lt;/a&gt; - A lightweight ProgressHUD written in Swift. Looks similar to /MBProgressHUD/SVProgressHUD/KVNProgressHUD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertherdzik/RHPlaceholder&quot;&gt;RHPlaceholder&lt;/a&gt; - Simple library which give you possibility to add Facebook like loading state for your views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Swiftify-Corp/IHProgressHUD&quot;&gt;IHProgressHUD&lt;/a&gt; - Simple HUD, thread safe, supports iOS, tvOS and App Extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/ActivityIndicatorView&quot;&gt;ActivityIndicatorView&lt;/a&gt; - A number of preset loading indicators created with SwiftUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/ProgressIndicatorView&quot;&gt;ProgressIndicatorView&lt;/a&gt; - A number of preset progress indicators created with SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Animation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/pop&quot;&gt;Pop&lt;/a&gt; - An extensible iOS and macOS animation library, useful for physics-based interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/intuit/AnimationEngine&quot;&gt;AnimationEngine&lt;/a&gt; - Easily build advanced custom animations on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Rightpoint/RZTransitions&quot;&gt;RZTransitions&lt;/a&gt; - A library of custom iOS View Controller Animations and Interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daltoniam/DCAnimationKit&quot;&gt;DCAnimationKit&lt;/a&gt; - A collection of animations for iOS. Simple, just add water animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MengTo/Spring&quot;&gt;Spring&lt;/a&gt; - A library to simplify iOS animations in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matthewcheok/Fluent&quot;&gt;Fluent&lt;/a&gt; - Swift animation made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suguru/Cheetah&quot;&gt;Cheetah&lt;/a&gt; - Easy animation library on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hossamghareeb/Facebook-POP-Tutorial&quot;&gt;Pop By Example&lt;/a&gt; - A project tutorial in how to use Pop animation framework by example.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.appanimations.com&quot;&gt;AppAnimations&lt;/a&gt; - Collection of iOS animations to inspire your next project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icanzilb/EasyAnimation&quot;&gt;EasyAnimation&lt;/a&gt; - A Swift library to take the power of UIView.animateWithDuration() to a whole new level - layers, springs, chain-able animations, and mixing view/layer animations together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eure/Animo&quot;&gt;Animo&lt;/a&gt; - SpriteKit-like animation builders for CALayers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devinross/curry-fire&quot;&gt;CurryFire&lt;/a&gt; - A framework for creating unique animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IBAnimatable/IBAnimatable&quot;&gt;IBAnimatable&lt;/a&gt; - Design and prototype UI, interaction, navigation, transition and animation for App Store ready Apps in Interface Builder with IBAnimatable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CezaryKopacz/CKWaveCollectionViewTransition&quot;&gt;CKWaveCollectionViewTransition&lt;/a&gt; - Cool wave like transition between two or more UICollectionView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alikaragoz/DaisyChain&quot;&gt;DaisyChain&lt;/a&gt; - Easy animation chaining.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shu223/PulsingHalo&quot;&gt;PulsingHalo&lt;/a&gt; - iOS Component for creating a pulsing animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Draveness/DKChainableAnimationKit&quot;&gt;DKChainableAnimationKit&lt;/a&gt; - Chainable animations in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JellyDevelopment/JDAnimationKit&quot;&gt;JDAnimationKit&lt;/a&gt; - Animate easy and with less code with Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timdonnelly/Advance&quot;&gt;Advance&lt;/a&gt; - A powerful animation framework for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/UIView-Shake&quot;&gt;UIView-Shake&lt;/a&gt; - UIView category that adds shake animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RamonGilabert/Walker&quot;&gt;Walker&lt;/a&gt; - A new animation engine for your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RamonGilabert/Morgan&quot;&gt;Morgan&lt;/a&gt; - An animation set for your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/patrickreynolds/MagicMove&quot;&gt;MagicMove&lt;/a&gt; - Keynote-style Magic Move transition animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/Shimmer&quot;&gt;Shimmer&lt;/a&gt; - An easy way to add a simple, shimmering effect to any view in an iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sudeepag/SAConfettiView&quot;&gt;SAConfettiView&lt;/a&gt; - Confetti! Who doesn&#39;t like confetti?&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cacmartinez/CCMRadarView&quot;&gt;CCMRadarView&lt;/a&gt; - CCMRadarView uses the IBDesignable tools to make an easy customizable radar view with animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shu223/Pulsator&quot;&gt;Pulsator&lt;/a&gt; - Pulse animation for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/Interpolate&quot;&gt;Interpolate&lt;/a&gt; - Swift interpolation for gesture-driven animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Antondomashnev/ADPuzzleAnimation&quot;&gt;ADPuzzleAnimation&lt;/a&gt; - Custom animation for UIView inspired by Fabric - Answers animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/Wave&quot;&gt;Wave&lt;/a&gt; - &lt;span&gt;🌊&lt;/span&gt; Declarative chainable animations in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustRush/Stellar&quot;&gt;Stellar&lt;/a&gt; - A fantastic Physical animation library for swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/poetmountain/MotionMachine&quot;&gt;MotionMachine&lt;/a&gt; - A powerful, elegant, and modular animation library for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carleihar/JRMFloatingAnimation&quot;&gt;JRMFloatingAnimation&lt;/a&gt; - An Objective-C animation library used to create floating image views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastred/AHKBendableView&quot;&gt;AHKBendableView&lt;/a&gt; - UIView subclass that bends its edges when its position changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AntonTheDev/FlightAnimator&quot;&gt;FlightAnimator&lt;/a&gt; - Advanced Natural Motion Animations, Simple Blocks Based Syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WorldDownTown/ZoomTransitioning&quot;&gt;ZoomTransitioning&lt;/a&gt; - A custom transition with image zooming animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RobinFalko/Ubergang&quot;&gt;Ubergang&lt;/a&gt; - A tweening engine for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jhurray/JHChainableAnimations&quot;&gt;JHChainableAnimations&lt;/a&gt; - Easy to read and write chainable animations in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DavdRoman/Popsicle&quot;&gt;Popsicle&lt;/a&gt; - Delightful, extensible Swift value interpolation framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WelkinXie/WXWaveView&quot;&gt;WXWaveView&lt;/a&gt; - Add a pretty water wave to your view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/piemonte/Twinkle&quot;&gt;Twinkle&lt;/a&gt; - Swift and easy way to make elements in your iOS and tvOS app twinkle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastred/MotionBlur&quot;&gt;MotionBlur&lt;/a&gt; - MotionBlur allows you to add motion blur effect to iOS animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alsedi/RippleEffectView&quot;&gt;RippleEffectView&lt;/a&gt; - RippleEffectView - A Neat Rippling View Effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rchatham/SwiftyAnimate&quot;&gt;SwiftyAnimate&lt;/a&gt; - Composable animations in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hachinobu/SamuraiTransition&quot;&gt;SamuraiTransition&lt;/a&gt; - Swift based library providing a collection of ViewController transitions featuring a number of neat “cutting” animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/lottie-ios&quot;&gt;Lottie&lt;/a&gt; - An iOS library for a real time rendering of native vector animations from Adobe After Effects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onurersel/anim&quot;&gt;anim&lt;/a&gt; - An animation library for iOS with custom easings and easy to follow API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KelvinJin/AnimatedCollectionViewLayout&quot;&gt;AnimatedCollectionViewLayout&lt;/a&gt; - A UICollectionViewLayout subclass that adds custom transitions/animations to the UICollectionView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saoudrizwan/Dance&quot;&gt;Dance&lt;/a&gt; - A radical &amp;amp; elegant animation library built for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/numen31337/AKVideoImageView&quot;&gt;AKVideoImageView&lt;/a&gt; - UIImageView subclass which allows you to display a looped video as a background.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/willowtreeapps/spruce-ios&quot;&gt;Spruce iOS Animation Library&lt;/a&gt; - Swift library for choreographing animations on the screen.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/T-Pro/CircularRevealKit&quot;&gt;CircularRevealKit&lt;/a&gt; - UI framework that implements the material design&#39;s reveal effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SteveBarnegren/TweenKit&quot;&gt;TweenKit&lt;/a&gt; - Animation library for iOS in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KrisYu/Water&quot;&gt;Water&lt;/a&gt; - Simple calculation to render cheap water effects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cruisediary/Pastel&quot;&gt;Pastel&lt;/a&gt; - Gradient animation effect like Instagram.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yapstudios/YapAnimator&quot;&gt;YapAnimator&lt;/a&gt; - Your fast and friendly physics-based animation system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/goldmoment/Bubble&quot;&gt;Bubble&lt;/a&gt; - Fruit Animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shoheiyokoyama/Gemini&quot;&gt;Gemini&lt;/a&gt; - Gemini is rich scroll based animation framework for iOS, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeFal/WaterDrops&quot;&gt;WaterDrops&lt;/a&gt; - Simple water drops animation for iOS in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcosgriselli/ViewAnimator&quot;&gt;ViewAnimator&lt;/a&gt; - ViewAnimator brings your UI to life with just one line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roberthein/Ease&quot;&gt;Ease&lt;/a&gt; - Animate everything with Ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmick66/kinieta&quot;&gt;Kinieta&lt;/a&gt; - An Animation Engine with Custom Bezier Easing, an Intuitive API and perfect Color Intepolation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lision/LSAnimator&quot;&gt;LSAnimator&lt;/a&gt; - Easy to Read and Write Multi-chain Animations Kit in Objective-C and Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lkzhao/YetAnotherAnimationLibrary&quot;&gt;YetAnotherAnimationLibrary&lt;/a&gt; - Designed for gesture-driven animations. Fast, simple, &amp;amp; extensible!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/satoshin21/Anima&quot;&gt;Anima&lt;/a&gt; - Anima is chainable Layer-Based Animation library for Swift4.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lkzhao/MotionAnimation&quot;&gt;MotionAnimation&lt;/a&gt; - Lightweight animation library for UIKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agilie/AGInterfaceInteraction&quot;&gt;AGInterfaceInteraction&lt;/a&gt; - library performs interaction with UI interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/poetmountain/PMTween&quot;&gt;PMTween&lt;/a&gt; - An elegant and flexible tweening library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artrmz/VariousViewsEffects&quot;&gt;VariousViewsEffects&lt;/a&gt; - Animates views nicely with easy to use extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/TheAnimation&quot;&gt;TheAnimation&lt;/a&gt; - Type-safe CAAnimation wrapper. It makes preventing to set wrong type values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HideakiTouhara/Poi&quot;&gt;Poi&lt;/a&gt; - Poi makes you use card UI like tinder UI .You can use it like tableview method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cats-oss/Sica&quot;&gt;Sica&lt;/a&gt; - Simple Interface Core Animation. Run type-safe animation sequencially or parallelly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomkowz/fireworks&quot;&gt;fireworks&lt;/a&gt; - Fireworks effect for UIView&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dbukowski/Disintegrate&quot;&gt;Disintegrate&lt;/a&gt; - Disintegration animation inspired by THAT thing Thanos did at the end of Avengers: Infinity War.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sagaya/wobbly&quot;&gt;Wobbly&lt;/a&gt; - Wobbly is a Library of predefined, easy to use iOS animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jogendra/LoadingShimmer&quot;&gt;LoadingShimmer&lt;/a&gt; - An easy way to add a shimmering effect to any view with just one line of code. It is useful as an unobtrusive loading indicator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivanvorobei/SPPerspective&quot;&gt;SPPerspective&lt;/a&gt; - Widgets iOS 14 animation with 3D and dynamic shadow. Customisable transform and duration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Transition&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Citrrus/BlurryModalSegue&quot;&gt;BlurryModalSegue&lt;/a&gt; - A custom modal segue for providing a blurred overlay effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ifitdoesntwork/DAExpandAnimation&quot;&gt;DAExpandAnimation&lt;/a&gt; - A custom modal transition that presents a controller with an expanding effect while sliding out the presenter remnants.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/BubbleTransition&quot;&gt;BubbleTransition&lt;/a&gt; - A custom modal transition that presents and dismiss a controller with an expanding bubble effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naoyashiga/RPModalGestureTransition&quot;&gt;RPModalGestureTransition&lt;/a&gt; - You can dismiss modal by using gesture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/recruit-mp/RMPZoomTransitionAnimator&quot;&gt;RMPZoomTransitionAnimator&lt;/a&gt; - A custom zooming transition animation for UIViewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lkzhao/ElasticTransition&quot;&gt;ElasticTransition&lt;/a&gt; - A UIKit custom transition that simulates an elastic drag. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taglia3/ElasticTransition-ObjC&quot;&gt;ElasticTransition-ObjC&lt;/a&gt; - A UIKit custom transition that simulates an elastic drag.This is the Objective-C Version of Elastic Transition written in Swift by lkzhao.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zoonooz/ZFDragableModalTransition&quot;&gt;ZFDragableModalTransition&lt;/a&gt; - Custom animation transition for present modal view controller.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NewAmsterdamLabs/ZOZolaZoomTransition&quot;&gt;ZOZolaZoomTransition&lt;/a&gt; - Zoom transition that animates the entire view hierarchy. Used extensively in the Zola iOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathantribouharet/JTMaterialTransition&quot;&gt;JTMaterialTransition&lt;/a&gt; - An iOS transition for controllers based on material design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shu223/AnimatedTransitionGallery&quot;&gt;AnimatedTransitionGallery&lt;/a&gt; - Collection of iOS 7 custom animated transitions using UIViewControllerAnimatedTransitioning protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DianQK/TransitionTreasury&quot;&gt;TransitionTreasury&lt;/a&gt; - Easier way to push your viewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/Presenter&quot;&gt;Presenter&lt;/a&gt; - Screen transition with safe and clean code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannzai/Kaeru&quot;&gt;Kaeru&lt;/a&gt; - Switch viewcontroller like iOS task manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/naru-jpn/View2ViewTransition&quot;&gt;View2ViewTransition&lt;/a&gt; - Custom interactive view controller transition from one view to another view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/azimin/AZTransitions&quot;&gt;AZTransitions&lt;/a&gt; - API to make great custom transitions in one method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HeroTransitions/Hero&quot;&gt;Hero&lt;/a&gt; - Elegant transition library for iOS &amp;amp; tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CosmicMind/Motion&quot;&gt;Motion&lt;/a&gt; - Seamless animations and transitions in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jessesquires/PresenterKit&quot;&gt;PresenterKit&lt;/a&gt; - Swifty view controller presentation for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Touchwonders/Transition&quot;&gt;Transition&lt;/a&gt; - Easy interactive interruptible custom ViewController transitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Boerworz/Gagat&quot;&gt;Gagat&lt;/a&gt; - A delightful way to transition between visual styles in your iOS applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HarshilShah/DeckTransition&quot;&gt;DeckTransition&lt;/a&gt; - A library to recreate the iOS Apple Music now playing transition.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ParkGwangBeom/TransitionableTab&quot;&gt;TransitionableTab&lt;/a&gt; - TransitionableTab makes it easy to animate when switching between tab.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/loopeer/AlertTransition&quot;&gt;AlertTransition&lt;/a&gt; - AlertTransition is a extensible library for making view controller transitions, especially for alert transitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muyexi/SemiModalViewController&quot;&gt;SemiModalViewController&lt;/a&gt; - Present view / view controller as bottom-half modal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shtnkgm/ImageTransition&quot;&gt;ImageTransition&lt;/a&gt; - ImageTransition is a library for smooth animation of images during transitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexandrGraschenkov/LiquidTransition&quot;&gt;LiquidTransition&lt;/a&gt; - removes boilerplate code to perform transition, allows backward animations, custom properties animation and much more!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IvanVorobei/SPStorkController&quot;&gt;SPStorkController&lt;/a&gt; - Very similar to the controllers displayed in Apple Music, Podcasts and Mail Apple&#39;s applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appssemble/appstore-card-transition&quot;&gt;AppstoreTransition&lt;/a&gt; - Simulates the appstore card animation transition.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nugmanoff/DropdownTransition&quot;&gt;DropdownTransition&lt;/a&gt; - Simple and elegant Dropdown Transition for presenting controllers from top to bottom.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davdroman/swiftui-navigation-transitions&quot;&gt;NavigationTransitions&lt;/a&gt; - Pure SwiftUI Navigation transitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/LiquidSwipe&quot;&gt;LiquidSwipe&lt;/a&gt; - Liquid navigation animation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexeyBelezeko/TBIconTransitionKit&quot;&gt;TBIconTransitionKit&lt;/a&gt; - Easy to use icon transition kit that allows to smoothly change from one shape to another.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Alert &amp;amp; Action Sheet&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codestergit/SweetAlert-iOS&quot;&gt;SweetAlert&lt;/a&gt; - Live animated Alert View for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nealyoung/NYAlertViewController&quot;&gt;NYAlertViewController&lt;/a&gt; - Highly configurable iOS Alert Views with custom content views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vikmeup/SCLAlertView-Swift&quot;&gt;SCLAlertView-Swift&lt;/a&gt; - Beautiful animated Alert View, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zekunyan/TTGSnackbar&quot;&gt;TTGSnackbar&lt;/a&gt; - Show simple message and action button on the bottom of the screen with multi kinds of animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GabrielAlva/Swift-Prompts&quot;&gt;Swift-Prompts&lt;/a&gt; - A Swift library to design custom prompts with a great scope of options to choose from.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bryx-inc/BRYXBanner&quot;&gt;BRYXBanner&lt;/a&gt; - A lightweight dropdown notification for iOS 7+, in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LISNR/LNRSimpleNotifications&quot;&gt;LNRSimpleNotifications&lt;/a&gt; - Simple Swift in-app notifications. LNRSimpleNotifications is a simplified Swift port of TSMessages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nhdang103/HDNotificationView&quot;&gt;HDNotificationView&lt;/a&gt; - Emulates the native Notification Banner UI for any alert.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/calimarkus/JDStatusBarNotification&quot;&gt;JDStatusBarNotification&lt;/a&gt; - Easy, customizable notifications displayed on top of the statusbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thii/Notie&quot;&gt;Notie&lt;/a&gt; - In-app notification in Swift, with customizable buttons and input text field.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thellimist/EZAlertController&quot;&gt;EZAlertController&lt;/a&gt; - Easy Swift UIAlertController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wxxsw/GSMessages&quot;&gt;GSMessages&lt;/a&gt; - A simple style messages/notifications for iOS 7+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/OEA/OEANotification&quot;&gt;OEANotification&lt;/a&gt; - In-app customizable notification views on top of screen for iOS which is written in Swift 2.1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cwRichardKim/RKDropdownAlert&quot;&gt;RKDropdownAlert&lt;/a&gt; - Extremely simple UIAlertView alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/entotsu/TKSwarmAlert&quot;&gt;TKSwarmAlert&lt;/a&gt; - Animated alert library like Swarm app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KyoheiG3/SimpleAlert&quot;&gt;SimpleAlert&lt;/a&gt; - Customizable simple Alert and simple ActionSheet for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ytakzk/Hokusai&quot;&gt;Hokusai&lt;/a&gt; - A Swift library to provide a bouncy action sheet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnlui/SwiftNotice&quot;&gt;SwiftNotice&lt;/a&gt; - SwiftNotice is a GUI library for displaying various popups (HUD) written in pure Swift, fits any scrollview.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peterprokop/SwiftOverlays&quot;&gt;SwiftOverlays&lt;/a&gt; - SwiftOverlays is a Swift GUI library for displaying various popups and notifications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/morizotter/SwiftyDrop&quot;&gt;SwiftyDrop&lt;/a&gt; - SwiftyDrop is a lightweight pure Swift simple and beautiful dropdown message.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lightningkite/LKAlertController&quot;&gt;LKAlertController&lt;/a&gt; - An easy to use UIAlertController builder for swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/okmr-d/DOAlertController&quot;&gt;DOAlertController&lt;/a&gt; - Simple Alert View written in Swift, which can be used as a UIAlertController. (AlertController/AlertView/ActionSheet).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/beryu/CustomizableActionSheet&quot;&gt;CustomizableActionSheet&lt;/a&gt; - Action sheet allows including your custom views and buttons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scalessec/Toast-Swift&quot;&gt;Toast-Swift&lt;/a&gt; - A Swift extension that adds toast notifications to the UIView object class.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmusolino/PMAlertController&quot;&gt;PMAlertController&lt;/a&gt; - PMAlertController is a great and customizable substitute to UIAlertController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dimillian/PopupViewController&quot;&gt;PopupViewController&lt;/a&gt; - UIAlertController drop in replacement with much more customization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhilippeBoisney/AlertViewLoveNotification&quot;&gt;AlertViewLoveNotification&lt;/a&gt; - A simple and attractive AlertView to ask permission to your users for Push Notification.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cruffenach/CRToast&quot;&gt;CRToast&lt;/a&gt; - A modern iOS toast view that can fit your notification needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devxoul/Toaster&quot;&gt;JLToast&lt;/a&gt; - Toast for iOS with very simple interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rollmind/CuckooAlert&quot;&gt;CuckooAlert&lt;/a&gt; - Multiple use of presentViewController for UIAlertController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krimpedance/KRAlertController&quot;&gt;KRAlertController&lt;/a&gt; - A colored alert view for your iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evgenyneu/Dodo&quot;&gt;Dodo&lt;/a&gt; - A message bar for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ntnhon/MaterialActionSheetController&quot;&gt;MaterialActionSheetController&lt;/a&gt; - A Google like action sheet for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKickMobile/SwiftMessages&quot;&gt;SwiftMessages&lt;/a&gt; - A very flexible message bar for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krispenney/FCAlertView&quot;&gt;FCAlertView&lt;/a&gt; - A Flat Customizable AlertView for iOS. (Swift).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nimati/FCAlertView&quot;&gt;FCAlertView&lt;/a&gt; - A Flat Customizable AlertView for iOS. (Objective-C).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/candostdagdeviren/CDAlertView&quot;&gt;CDAlertView&lt;/a&gt; - Highly customizable alert/notification/success/error/alarm popup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CooperRS/RMActionController&quot;&gt;RMActionController&lt;/a&gt; - Present any UIView in an UIAlertController like manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CooperRS/RMDateSelectionViewController&quot;&gt;RMDateSelectionViewController&lt;/a&gt; - Select a date using UIDatePicker in a UIAlertController like fashion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CooperRS/RMPickerViewController&quot;&gt;RMPickerViewController&lt;/a&gt; - Select something using UIPickerView in a UIAlertController like fashion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SebastianBoldt/Jelly&quot;&gt;Jelly&lt;/a&gt; - Jelly provides custom view controller transitions with just a few lines of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vitormesquita/Malert&quot;&gt;Malert&lt;/a&gt; - Malert is a simple, easy and custom iOS UIAlertView written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roycms/AlertView&quot;&gt;RAlertView&lt;/a&gt; - AlertView, iOS popup window, A pop-up framework, Can be simple and convenient to join your project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qiuncheng/NoticeBar&quot;&gt;NoticeBar&lt;/a&gt; - A simple NoticeBar written by Swift 3, similar with QQ notice view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Lasithih/LIHAlert&quot;&gt;LIHAlert&lt;/a&gt; - Advance animated banner alerts for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ppth0608/BPStatusBarAlert&quot;&gt;BPStatusBarAlert&lt;/a&gt; - A simple alerts that appear on the status bar and below navigation bar(like Facebook).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Codigami/CFAlertViewController&quot;&gt;CFAlertViewController&lt;/a&gt; - A library that helps you display and customise alerts and action sheets on iPad and iPhone.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Daltron/NotificationBanner&quot;&gt;NotificationBanner&lt;/a&gt; - The easiest way to display highly customizable in app notification banners in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sgr-ksmt/Alertift&quot;&gt;Alertift&lt;/a&gt; - Swifty, modern UIAlertController wrapper.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hryk224/PCLBlurEffectAlert&quot;&gt;PCLBlurEffectAlert&lt;/a&gt; - Swift AlertController with UIVisualEffectView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trilliwon/JDropDownAlert&quot;&gt;JDropDownAlert&lt;/a&gt; - Multi dirction dropdown alert view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexaubry/BulletinBoard&quot;&gt;BulletinBoard&lt;/a&gt; - Generate and Display Bottom Card Interfaces on iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JT501/CFNotify&quot;&gt;CFNotify&lt;/a&gt; - A customizable framework to create draggable views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LowKostKustomz/StatusAlert&quot;&gt;StatusAlert&lt;/a&gt; - Display Apple system-like self-hiding status alerts without interrupting user flow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dillidon/alerts-and-pickers&quot;&gt;Alerts &amp;amp; Pickers&lt;/a&gt; - Advanced usage of native UIAlertController with TextField, DatePicker, PickerView, TableView and CollectionView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/donileo/RMessage&quot;&gt;RMessage&lt;/a&gt; - A crisp in-app notification/message banner built in ObjC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucabecchetti/InAppNotify&quot;&gt;InAppNotify&lt;/a&gt; - Swift library to manage in-app notification in swift language, like WhatsApp, Telegram, Frind, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/FloatingActionSheetController&quot;&gt;FloatingActionSheetController&lt;/a&gt; - FloatingActionSheetController is a cool design ActionSheetController library written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimOliver/TOActionSheet&quot;&gt;TOActionSheet&lt;/a&gt; - A custom-designed reimplementation of the UIActionSheet control for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/XLActionController&quot;&gt;XLActionController&lt;/a&gt; - Fully customizable and extensible action sheet controller written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CaliCastle/PopMenu&quot;&gt;PopMenu&lt;/a&gt; - A cool and customizable popup style action sheet 😎&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TheAbstractDev/NotchyAlert&quot;&gt;NotchyAlert&lt;/a&gt; - Use the iPhone X notch space to display creative alerts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ParkGwangBeom/Sheet&quot;&gt;Sheet&lt;/a&gt; - SHEET helps you easily create a wide variety of action sheets with navigation features used in the Flipboard App&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mshrwtnb/alrt&quot;&gt;ALRT&lt;/a&gt; - An easier constructor for UIAlertController. Present an alert from anywhere.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ImKcat/CatAlertController&quot;&gt;CatAlertController&lt;/a&gt; - Use UIAlertController like a boss.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/schmidyy/Loaf&quot;&gt;Loaf&lt;/a&gt; - A simple framework for easy iOS Toasts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IvanVorobei/SPAlert&quot;&gt;SPAlert&lt;/a&gt; - Native popup from Apple Music &amp;amp; Feedback in AppStore. Contains Done &amp;amp; Heart presets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/loryhuz/CleanyModal&quot;&gt;CleanyModal&lt;/a&gt; - Use nice customized alerts and action sheets with ease, API is similar to native UIAlertController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/joomcode/BottomSheet&quot;&gt;BottomSheet&lt;/a&gt; - Powerful Bottom Sheet component with content based size, interactive dismissal and navigation controller support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iTofu/LCActionSheet&quot;&gt;LCActionSheet&lt;/a&gt; - A simple ActionSheet. WeChat, Weibo and QQ all use similar styles. Fully support Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Badge&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mustafaibrahim989/MIBadgeButton-Swift&quot;&gt;MIBadgeButton&lt;/a&gt; - Notification badge for UIButtons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minitour/EasyNotificationBadge&quot;&gt;EasyNotificationBadge&lt;/a&gt; - UIView extension that adds a notification badge. [e]&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evgenyneu/swift-badge&quot;&gt;swift-badge&lt;/a&gt; - Badge view for iOS written in swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jogendra/BadgeHub&quot;&gt;BadgeHub&lt;/a&gt; - Make any UIView a full fledged animated notification center. It is a way to quickly add a notification badge icon to a UIView.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Button&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StyleShare/SSBouncyButton&quot;&gt;SSBouncyButton&lt;/a&gt; - iOS7-style bouncy button UI component.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/okmr-d/DOFavoriteButton&quot;&gt;DOFavoriteButton&lt;/a&gt; - Cute Animated Button written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/victorBaro/VBFPopFlatButton&quot;&gt;VBFPopFlatButton&lt;/a&gt; - Flat button with 9 different states animated using Facebook POP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Famolus/HTPressableButton&quot;&gt;HTPressableButton&lt;/a&gt; - Flat design pressable button.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yoavlt/LiquidFloatingActionButton&quot;&gt;LiquidFloatingActionButton&lt;/a&gt; - Material Design Floating Action Button in liquid state&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JunichiT/JTFadingInfoView&quot;&gt;JTFadingInfoView&lt;/a&gt; - An UIButton-based view with fade in/out animation features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kciter/Floaty&quot;&gt;Floaty&lt;/a&gt; - &lt;span&gt;❤️&lt;/span&gt; Floating Action Button for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/TVButton&quot;&gt;TVButton&lt;/a&gt; - Recreating the cool parallax icons from Apple TV as iOS UIButtons (in Swift).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TakeScoop/SwiftyButton&quot;&gt;SwiftyButton&lt;/a&gt; - Simple and customizable button in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suzuki-0000/AnimatablePlayButton&quot;&gt;AnimatablePlayButton&lt;/a&gt; - Animated Play and Pause Button using CALayer, CAKeyframeAnimation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Guidebook/gbkui-button-progress-view&quot;&gt;gbkui-button-progress-view&lt;/a&gt; - Inspired by Apple’s download progress buttons in the App Store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zoonooz/ZFRippleButton&quot;&gt;ZFRippleButton&lt;/a&gt; - Custom UIButton effect inspired by Google Material Design&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lojals/JOEmojiableBtn&quot;&gt;JOEmojiableBtn&lt;/a&gt; - Emoji selector like Facebook Reactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Eke/EMEmojiableBtn&quot;&gt;EMEmojiableBtn&lt;/a&gt; - Option selector that works similar to Reactions by fb. Objective-c version.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yu-w/WYMaterialButton&quot;&gt;WYMaterialButton&lt;/a&gt; - Interactive and fully animated Material Design button for iOS developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/DynamicButton&quot;&gt;DynamicButton&lt;/a&gt; - Yet another animated flat buttons in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rakaramos/OnOffButton&quot;&gt;OnOffButton&lt;/a&gt; - Custom On/Off Animated UIButton, written in Swift. By Creativedash&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imwcl/WCLShineButton&quot;&gt;WCLShineButton&lt;/a&gt; - This is a UI lib for iOS. Effects like shining.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minitour/EasySocialButton&quot;&gt;EasySocialButton&lt;/a&gt; - An easy way to create beautiful social authentication buttons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeonardoCardoso/NFDownloadButton&quot;&gt;NFDownloadButton&lt;/a&gt; - Revamped Download Button.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/loregr/LGButton&quot;&gt;LGButton&lt;/a&gt; - A fully customisable subclass of the native UIControl which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/MultiToggleButton&quot;&gt;MultiToggleButton&lt;/a&gt; - A UIButton subclass that implements tap-to-toggle button text (Like the camera flash and timer buttons).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pmusolino/PMSuperButton&quot;&gt;PMSuperButton&lt;/a&gt; - A powerful UIButton with super powers, customizable from Storyboard!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jogendra/JSButton&quot;&gt;JSButton&lt;/a&gt; - A fully customisable swift subclass on UIButton which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AladinWay/TransitionButton&quot;&gt;TransitionButton&lt;/a&gt; - UIButton sublass for loading and transition animation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thePsguy/ButtonProgressBar-iOS&quot;&gt;ButtonProgressBar-iOS&lt;/a&gt; - A small and flexible UIButton subclass with animated loading progress, and completion animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lukecrum/SpicyButton&quot;&gt;SpicyButton&lt;/a&gt; - Full-featured IBDesignable UIButton class&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IdleHandsApps/DesignableButton&quot;&gt;DesignableButton&lt;/a&gt; - UIButton subclass with centralised and reusable styles. View styles and customise in InterfaceBuilder in real time!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Boris-Em/BEMCheckBox&quot;&gt;BEMCheckBox&lt;/a&gt; - Tasteful Checkbox for iOS. (Check box)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DimaMishchenko/ExpandableButton&quot;&gt;ExpandableButton&lt;/a&gt; - Customizable and easy to use expandable button in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimOliver/TORoundedButton&quot;&gt;TORoundedButton&lt;/a&gt; - A high-performance button control with rounded corners.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/FloatingButton&quot;&gt;FloatingButton&lt;/a&gt; - Easily customizable floating button menu created with SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Calendar&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CVCalendar/CVCalendar&quot;&gt;CVCalendar&lt;/a&gt; - A custom visual calendar for iOS 8+ written in Swift (2.0).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruslanskorb/RSDayFlow&quot;&gt;RSDayFlow&lt;/a&gt; - iOS 7+ Calendar with Infinite Scrolling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbwar/NWCalendarView&quot;&gt;NWCalendarView&lt;/a&gt; - An availability calendar implementation for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Glow-Inc/GLCalendarView&quot;&gt;GLCalendarView&lt;/a&gt; - A fully customizable calendar view acting as a date range picker&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathantribouharet/JTCalendar&quot;&gt;JTCalendar&lt;/a&gt; - A customizable calendar view for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/patchthecode/JTAppleCalendar&quot;&gt;JTAppleCalendar&lt;/a&gt; - The Unofficial Swift Apple Calendar Library. View. Control. for iOS &amp;amp; tvOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/unixzii/Daysquare&quot;&gt;Daysquare&lt;/a&gt; - An elegant calendar control for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/scamps88/ASCalendar&quot;&gt;ASCalendar&lt;/a&gt; - A calendar control for iOS written in swift with mvvm pattern&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jumartin/Calendar&quot;&gt;Calendar&lt;/a&gt; - A set of views and controllers for displaying and scheduling events on iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shoheiyokoyama/Koyomi&quot;&gt;Koyomi&lt;/a&gt; - Simple customizable calendar component in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/itsmeichigo/DateTimePicker&quot;&gt;DateTimePicker&lt;/a&gt; - A nicer iOS UI component for picking date and time&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roycms/RCalendarPicker&quot;&gt;RCalendarPicker&lt;/a&gt; - RCalendarPicker A date picker control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richardtop/CalendarKit&quot;&gt;CalendarKit&lt;/a&gt; - Fully customizable calendar day view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saeid/GDCalendar&quot;&gt;GDPersianCalendar&lt;/a&gt; - Customizable and easy to use Persian Calendar component.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MosheBerman/MBCalendarKit&quot;&gt;MBCalendarKit&lt;/a&gt; - A calendar framework for iOS built with customization, and localization in mind.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amantaneja/PTEventView&quot;&gt;PTEventView&lt;/a&gt; - An Event View based on Apple&#39;s Event Detail View within Calender.Supports ARC, Autolayout and editing via StoryBoard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmick66/CalendarView&quot;&gt;KDCalendarView&lt;/a&gt; - A calendar component for iOS written in Swift 4.0. It features both vertical and horizontal layout (and scrolling) and the display of native calendar events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orazz/CalendarPopUp&quot;&gt;CalendarPopUp&lt;/a&gt; - CalendarPopUp - JTAppleCalendar library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maximbilan/Calendar-iOS&quot;&gt;ios_calendar&lt;/a&gt; - It&#39;s lightweight and simple control with supporting Locale and CalendarIdentifier. There&#39;re samples for iPhone and iPad, and also with using a popover. With supporting Persian calendar&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WenchaoD/FSCalendar&quot;&gt;FSCalendar&lt;/a&gt; - A fully customizable iOS calendar library, compatible with Objective-C and Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ThasianX/ElegantCalendar&quot;&gt;ElegantCalendar&lt;/a&gt; - The elegant full-screen calendar missed in SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Cards&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Card based UI&#39;s, pan gestures, flip and swipe animations&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modocache/MDCSwipeToChoose&quot;&gt;MDCSwipeToChoose&lt;/a&gt; - Swipe to &quot;like&quot; or &quot;dislike&quot; any view, just like Tinder.app. Build a flashcard app, a photo viewer, and more, in minutes, not hours!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tispr/tispr-card-stack&quot;&gt;TisprCardStack&lt;/a&gt; - Library that allows to have cards UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seedante/CardAnimation&quot;&gt;CardAnimation&lt;/a&gt; - Card flip animation by pan gesture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/Koloda&quot;&gt;Koloda&lt;/a&gt; - KolodaView is a class designed to simplify the implementation of Tinder like cards on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kunalverma25/KVCardSelectionVC&quot;&gt;KVCardSelectionVC&lt;/a&gt; - Awesome looking Dial like card selection ViewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/D-32/DMSwipeCards&quot;&gt;DMSwipeCards&lt;/a&gt; - Tinder like card stack that supports lazy loading and generics&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vladaverin24/TimelineCards&quot;&gt;TimelineCards&lt;/a&gt; - Presenting timelines as cards, single or bundled in scrollable feed!.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PaoloCuscela/Cards&quot;&gt;Cards&lt;/a&gt; - Awesome iOS 11 AppStore&#39;s Card Views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MillmanY/MMCardView&quot;&gt;MMCardView&lt;/a&gt; - Custom CollectionView like Wallet App&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/filletofish/CardsLayout&quot;&gt;CardsLayout&lt;/a&gt; - Nice card-designed custom collection view layout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/intuit/CardParts&quot;&gt;CardParts&lt;/a&gt; - A reactive, card-based UI framework built on UIKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JoniVR/VerticalCardSwiper&quot;&gt;VerticalCardSwiper&lt;/a&gt; - A marriage between the Shazam Discover UI and Tinder, built with UICollectionView in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mac-gallagher/Shuffle&quot;&gt;Shuffle&lt;/a&gt; - A multi-directional card swiping library inspired by Tinder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Form &amp;amp; Settings&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Input validators, form helpers and form builders.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Form&quot;&gt;Form&lt;/a&gt; - The most flexible and powerful way to build a form on iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/XLForm&quot;&gt;XLForm&lt;/a&gt; - XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift &amp;amp; Obj-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Eureka&quot;&gt;Eureka&lt;/a&gt; - Elegant iOS form builder in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/YALField&quot;&gt;YALField&lt;/a&gt; - Custom Field component with validation for creating easier form-like UI from interface builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/Former&quot;&gt;Former&lt;/a&gt; - Former is a fully customizable Swift2 library for easy creating UITableView based form.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ortuman/SwiftForms&quot;&gt;SwiftForms&lt;/a&gt; - A small and lightweight library written in Swift that allows you to easily create forms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seedco/Formalist&quot;&gt;Formalist&lt;/a&gt; - Declarative form building framework for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neoneye/SwiftyFORM&quot;&gt;SwiftyFORM&lt;/a&gt; - SwiftyFORM is a form framework for iOS written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftValidatorCommunity/SwiftValidator&quot;&gt;SwiftValidator&lt;/a&gt; - A rule-based validation library for Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EurekaCommunity/GenericPasswordRow&quot;&gt;GenericPasswordRow&lt;/a&gt; - A row for Eureka to implement password validations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ustwo/formvalidator-swift&quot;&gt;formvalidator-swift&lt;/a&gt; - A framework to validate inputs of text fields and text views in a convenient way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nsagora/validation-toolkit&quot;&gt;ValidationToolkit&lt;/a&gt; - Lightweight framework for input validation written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/altayer-digital/ATGValidator&quot;&gt;ATGValidator&lt;/a&gt; - Rule based validation framework with form and card validation support for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SvenTiigi/ValidatedPropertyKit&quot;&gt;ValidatedPropertyKit&lt;/a&gt; - Easily validate your Properties with Property Wrappers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fulldecent/FDTextFieldTableViewCell&quot;&gt;FDTextFieldTableViewCell&lt;/a&gt; - Adds a UITextField to the cell and places it correctly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Keyboard&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruslanskorb/RSKKeyboardAnimationObserver&quot;&gt;RSKKeyboardAnimationObserver&lt;/a&gt; - Showing / dismissing keyboard animation in simple UIViewController category.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruddfawcett/RFKeyboardToolbar&quot;&gt;RFKeyboardToolbar&lt;/a&gt; - This is a flexible UIView and UIButton subclass to add customized buttons and toolbars to your UITextFields/UITextViews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackiftekhar/IQKeyboardManager&quot;&gt;IQKeyboardManager&lt;/a&gt; - Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/meiwin/NgKeyboardTracker&quot;&gt;NgKeyboardTracker&lt;/a&gt; - Objective-C library for tracking keyboard in iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matmartinez/MMNumberKeyboard&quot;&gt;MMNumberKeyboard&lt;/a&gt; - A simple keyboard to use with numbers and, optionally, a decimal point.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/morizotter/KeyboardObserver&quot;&gt;KeyboardObserver&lt;/a&gt; - For less complicated keyboard event handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/michaeltyson/TPKeyboardAvoiding&quot;&gt;TPKeyboardAvoiding&lt;/a&gt; - A drop-in universal solution for moving text fields out of the way of the keyboard in iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibireme/YYKeyboardManager&quot;&gt;YYKeyboardManager&lt;/a&gt; - iOS utility class allows you to access keyboard view and track keyboard animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nixzhu/KeyboardMan&quot;&gt;KeyboardMan&lt;/a&gt; - KeyboardMan helps you make keyboard animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/makemoji/MakemojiSDK&quot;&gt;MakemojiSDK&lt;/a&gt; - Emoji Keyboard SDK (iOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/totocaster/Typist&quot;&gt;Typist&lt;/a&gt; - Small, drop-in Swift UIKit keyboard manager for iOS apps-helps manage keyboard&#39;s screen presence and behavior without notification center.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bonyadmitr/KeyboardHideManager&quot;&gt;KeyboardHideManager&lt;/a&gt; - Codeless manager to hide keyboard by tapping on views for iOS written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1amageek/Toolbar&quot;&gt;Toolbar&lt;/a&gt; - Awesome autolayout Toolbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IdleHandsApps/IHKeyboardAvoiding&quot;&gt;IHKeyboardAvoiding&lt;/a&gt; - A drop-in universal solution for keeping any UIView visible when the keyboard is being shown - no more UIScrollViews!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/efremidze/NumPad&quot;&gt;NumPad&lt;/a&gt; - Number Pad (inspired by Square&#39;s design).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chriszielinski/Ribbon&quot;&gt;Ribbon&lt;/a&gt; - A simple cross-platform toolbar/custom input accessory view library for iOS &amp;amp; macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/isaced/ISEmojiView&quot;&gt;ISEmojiView&lt;/a&gt; - Emoji Keyboard for iOS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Label&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lexrus/LTMorphingLabel&quot;&gt;LTMorphingLabel&lt;/a&gt; - Graceful morphing effects for UILabel written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/optonaut/ActiveLabel.swift&quot;&gt;ActiveLabel.swift&lt;/a&gt; - UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mineschan/MZTimerLabel&quot;&gt;MZTimerLabel&lt;/a&gt; - A handy class for iOS to use UILabel as a countdown timer or stopwatch just like in Apple Clock App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suzuki-0000/CountdownLabel&quot;&gt;CountdownLabel&lt;/a&gt; - Simple countdown UILabel with morphing animation, and some useful function.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tbaranes/IncrementableLabel&quot;&gt;IncrementableLabel&lt;/a&gt; - Incrementable label for iOS, macOS, and tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TTTAttributedLabel/TTTAttributedLabel&quot;&gt;TTTAttributedLabel&lt;/a&gt; - A drop-in replacement for UILabel that supports attributes, data detectors, links, and more&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/me-abhinav/NumberMorphView&quot;&gt;NumberMorphView&lt;/a&gt; - A label view for displaying numbers which can transition or animate using a technique called number tweening or number morphing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kciter/GlitchLabel&quot;&gt;GlitchLabel&lt;/a&gt; - Glitching UILabel for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomknig/TOMSMorphingLabel&quot;&gt;TOMSMorphingLabel&lt;/a&gt; - Configurable morphing transitions between text values of a label.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tobihagemann/THLabel&quot;&gt;THLabel&lt;/a&gt; - UILabel subclass, which additionally allows shadow blur, inner shadow, stroke text and fill gradient.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zipme/RQShineLabel&quot;&gt;RQShineLabel&lt;/a&gt; - Secret app like text animation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/overboming/ZCAnimatedLabel&quot;&gt;ZCAnimatedLabel&lt;/a&gt; - UILabel replacement with fine-grain appear/disappear animation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mukeshthawani/TriLabelView&quot;&gt;TriLabelView&lt;/a&gt; - A triangle shaped corner label view for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/Preloader.Ophiuchus&quot;&gt;Preloader.Ophiuchus&lt;/a&gt; - Custom Label to apply animations on whole text or letters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/recruit-mtl/MTLLinkLabel&quot;&gt;MTLLinkLabel&lt;/a&gt; - MTLLinkLabel is linkable UILabel. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dataxpress/UICountingLabel/&quot;&gt;UICountingLabel&lt;/a&gt; - Adds animated counting support to UILabel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dnKaratzas/SlidingText&quot;&gt;SlidingText&lt;/a&gt; - Swift UIView for sliding text with page indicator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/javalnanda/NumericAnimatedLabel/&quot;&gt;NumericAnimatedLabel&lt;/a&gt; - Swift UIView for showing numeric label with incremental and decremental step animation while changing value. Useful for scenarios like displaying currency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jogendra/JSLabel&quot;&gt;JSLabel&lt;/a&gt; - A simple designable subclass on UILabel with extra IBDesignable and Blinking features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jogendra/AnimatedMaskLabel&quot;&gt;AnimatedMaskLabel&lt;/a&gt; - Animated Mask Label is a nice gradient animated label. This is an easy way to add a shimmering effect to any view in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stephan-tolksdorf/STULabel&quot;&gt;STULabel&lt;/a&gt; - A label view that&#39;s faster than UILabel and supports asynchronous rendering, links with UIDragInteraction, very flexible text truncation, Auto Layout, UIAccessibility and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Login&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awesome-labs/LFLoginController&quot;&gt;LFLoginController&lt;/a&gt; - Customizable login screen, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IcaliaLabs/LoginKit&quot;&gt;LoginKit&lt;/a&gt; - LoginKit is a quick and easy way to add a Login/Signup UX to your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cely-tools/Cely&quot;&gt;Cely&lt;/a&gt; - Plug-n-Play login framework written in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Menu&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evnaz/ENSwiftSideMenu&quot;&gt;ENSwiftSideMenu&lt;/a&gt; - A simple side menu for iOS 7/8 written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/romaonthego/RESideMenu&quot;&gt;RESideMenu&lt;/a&gt; - iOS 7/8 style side menu with parallax effect inspired by Dribbble shots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SSA111/SSASideMenu&quot;&gt;SSASideMenu&lt;/a&gt; - A Swift implementation of RESideMenu. A iOS 7/8 style side menu with parallax effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bradjasper/radialmenu&quot;&gt;RadialMenu&lt;/a&gt; - RadialMenu is a custom control for providing a touch context menu (like iMessage recording in iOS 8) built with Swift &amp;amp; POP&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arn00s/cariocamenu&quot;&gt;cariocamenu&lt;/a&gt; - The fastest zero-tap iOS menu.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vangelov/VLDContextSheet&quot;&gt;VLDContextSheet&lt;/a&gt; - Context menu similar to the one in the Pinterest iOS app&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/GuillotineMenu&quot;&gt;GuillotineMenu&lt;/a&gt; - Our Guillotine Menu Transitioning Animation implemented in Swift reminds a bit of a notorious killing machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pixyzehn/MediumMenu&quot;&gt;MediumMenu&lt;/a&gt; - A menu based on Medium iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hossamghareeb/SwiftySideMenu&quot;&gt;SwiftySideMenu&lt;/a&gt; - SwiftySideMenu is a lightweight and easy to use side menu controller to add left menu and center view controllers with scale animation based on Pop framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lilei644/LLSlideMenu&quot;&gt;LLSlideMenu&lt;/a&gt; - This is a spring slide menu for iOS apps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhilippeBoisney/Swift-Slide-Menu&quot;&gt;Swift-Slide-Menu&lt;/a&gt; - A Slide Menu, written in Swift, inspired by Slide Menu Material Design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cxa/MenuItemKit&quot;&gt;MenuItemKit&lt;/a&gt; - UIMenuItem with image and block(closure)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhamBaTho/BTNavigationDropdownMenu&quot;&gt;BTNavigationDropdownMenu&lt;/a&gt; - The elegant dropdown menu, written in Swift, appears underneath navigation bar to display a list of related items when a user click on the navigation title.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexLittlejohn/ALRadialMenu&quot;&gt;ALRadialMenu&lt;/a&gt; - A radial/circular menu featuring spring animations. Written in swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Azuritul/AZDropdownMenu&quot;&gt;AZDropdownMenu&lt;/a&gt; - An easy to use dropdown menu that supports images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/circle-menu&quot;&gt;CircleMenu&lt;/a&gt; - An animated, multi-option menu button.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dekatotoro/SlideMenuControllerSwift&quot;&gt;SlideMenuControllerSwift&lt;/a&gt; - iOS Slide Menu View based on Google+, iQON, Feedly, Ameba iOS app. It is written in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonkykong/SideMenu&quot;&gt;SideMenu&lt;/a&gt; - Simple side menu control in Swift inspired by Facebook. Right and Left sides. Lots of customization and animation options. Can be implemented in Storyboard with no code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cemolcay/CategorySliderView&quot;&gt;CategorySliderView&lt;/a&gt; - slider view for choosing categories. add any UIView type as category item view. Fully customisable&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxkonovalov/MKDropdownMenu&quot;&gt;MKDropdownMenu&lt;/a&gt; - A Dropdown Menu for iOS with many customizable parameters to suit any needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/monoqlo/ExpandingMenu&quot;&gt;ExpandingMenu&lt;/a&gt; - ExpandingMenu is menu button for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PageMenu/PageMenu&quot;&gt;PageMenu&lt;/a&gt; - A paging menu controller built from other view controllers placed inside a scroll view (like Spotify, Windows Phone, Instagram)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zsy78191/XXXRoundMenuButton&quot;&gt;XXXRoundMenuButton&lt;/a&gt; - A simple circle style menu.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sunilsharma08/IGCMenu&quot;&gt;IGCMenu&lt;/a&gt; - Grid and Circular menu with animation.Easy to customise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eejahromi/EEJSelectMenu&quot;&gt;EEJSelectMenu&lt;/a&gt; - Single selection menu with cool animations, responsive with all screen sizes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bestwnh/IGLDropDownMenu&quot;&gt;IGLDropDownMenu&lt;/a&gt; - An iOS drop down menu with pretty animation and easy to customize.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/Side-Menu.iOS&quot;&gt;Side-Menu.iOS&lt;/a&gt; - Animated side menu with customizable UI&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xhzengAIB/PopMenu&quot;&gt;PopMenu&lt;/a&gt; - PopMenu is pop animation menu inspired by Sina weibo / NetEase app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/FlowingMenu&quot;&gt;FlowingMenu&lt;/a&gt; - Interactive view transition to display menus with flowing and bouncing effects in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/Persei&quot;&gt;Persei&lt;/a&gt; - Animated top menu for UITableView / UICollectionView / UIScrollView written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AssistoLab/DropDown&quot;&gt;DropDown&lt;/a&gt; - A Material Design drop down for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KittenYang/KYGooeyMenu&quot;&gt;KYGooeyMenu&lt;/a&gt; - A not bad gooey effects menu.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/teodorpatras/SideMenuController&quot;&gt;SideMenuController&lt;/a&gt; - A side menu controller written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/Context-Menu.iOS&quot;&gt;Context-Menu.iOS&lt;/a&gt; - You can easily add awesome animated context menu to your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ViewDeck/ViewDeck&quot;&gt;ViewDeck&lt;/a&gt; - An implementation of the sliding functionality found in the Path 2.0 or Facebook iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edekhayser/FrostedSidebar&quot;&gt;FrostedSidebar&lt;/a&gt; - Hamburger Menu using Swift and iOS 8 API&#39;s&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nightonke/VHBoomMenuButton&quot;&gt;VHBoomMenuButton&lt;/a&gt; - A menu which can ... BOOM!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qmathe/DropDownMenuKit&quot;&gt;DropDownMenuKit&lt;/a&gt; - A simple, modular and highly customizable UIKit menu, that can be attached to the navigation bar or toolbar, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anatoliyv/RevealMenuController&quot;&gt;RevealMenuController&lt;/a&gt; - Expandable item groups, custom position and appearance animation. Similar to ActionSheet style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertherdzik/RHSideButtons&quot;&gt;RHSideButtons&lt;/a&gt; - Library provides easy to implement variation of Android (Material Design) Floating Action Button for iOS. You can use it as your app small side menu.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hu55a1n1/Swift-CircleMenu&quot;&gt;Swift-CircleMenu&lt;/a&gt; - Rotating circle menu written in Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dogo/AKSideMenu&quot;&gt;AKSideMenu&lt;/a&gt; - Beautiful iOS side menu library with parallax effect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/handsomecode/InteractiveSideMenu&quot;&gt;InteractiveSideMenu&lt;/a&gt; - Customizable iOS Interactive Side Menu written in Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/younatics/YNDropDownMenu&quot;&gt;YNDropDownMenu&lt;/a&gt; - Adorable iOS drop down menu with Swift3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kawoou/KWDrawerController&quot;&gt;KWDrawerController&lt;/a&gt; - Drawer view controller that easy to use!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/javalnanda/JNDropDownMenu&quot;&gt;JNDropDownMenu&lt;/a&gt; - Easy to use tableview style drop down menu with multi-column support written in Swift3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/fan-menu&quot;&gt;FanMenu&lt;/a&gt; - Menu with a circular layout based on Macaw.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uptechteam/AirBar&quot;&gt;AirBar&lt;/a&gt; - UIScrollView driven expandable menu written in Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fahidattique55/FAPanels&quot;&gt;FAPanels&lt;/a&gt; - FAPanels for transition&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yysskk/SwipeMenuViewController&quot;&gt;SwipeMenuViewController&lt;/a&gt; - Swipable tab and menu View and ViewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tungvoduc/DTPagerController&quot;&gt;DTPagerController&lt;/a&gt; - A fully customizable container view controller to display set of ViewControllers in horizontal scroller&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kazuhiro4949/PagingKit&quot;&gt;PagingKit&lt;/a&gt; - PagingKit provides customizable menu UI It has more flexible layout and design than the other libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/Dropdowns&quot;&gt;Dropdowns&lt;/a&gt; - 💧 Dropdown in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rechsteiner/Parchment&quot;&gt;Parchment&lt;/a&gt; - A paging view controller with a highly customizable menu. Built on UICollectionView, with support for custom layouts and infinite data sources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GitHawkApp/ContextMenu&quot;&gt;ContextMenu&lt;/a&gt; - An iOS context menu UI inspired by Things 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antoniocasero/Panels&quot;&gt;Panels&lt;/a&gt; - Panels is a framework to easily add sliding panels to your application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlekseyPleshkov/UIMenuScroll&quot;&gt;UIMenuScroll&lt;/a&gt; - Creating the horizontal swiping navigation how on Facebook Messenger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/softhausHQ/CircleBar&quot;&gt;CircleBar&lt;/a&gt; - 🔶 A fun, easy-to-use tab bar navigation controller for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IvanVorobei/SPLarkController&quot;&gt;SPLarkController&lt;/a&gt; - Settings screen with buttons and switches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KarimEbrahemAbdelaziz/SwiftyMenu&quot;&gt;SwiftyMenu&lt;/a&gt; - A Simple and Elegant DropDown menu for iOS 🔥💥&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Navigation Bar&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tristanhimmelman/HidingNavigationBar&quot;&gt;HidingNavigationBar&lt;/a&gt; - Easily hide and show a view controller&#39;s navigation bar (and tab bar) as a user scrolls&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MoZhouqi/KMNavigationBarTransition&quot;&gt;KMNavigationBarTransition&lt;/a&gt; - A drop-in universal library helps you to manage the navigation bar styles and makes transition animations smooth between different navigation bar styles while pushing or popping a view controller for all orientations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ltebean/LTNavigationBar&quot;&gt;LTNavigationBar&lt;/a&gt; - UINavigationBar Category which allows you to change its appearance dynamically&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gmertk/BusyNavigationBar&quot;&gt;BusyNavigationBar&lt;/a&gt; - A UINavigationBar extension to show loading effects&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kingiol/KDInteractiveNavigationController&quot;&gt;KDInteractiveNavigationController&lt;/a&gt; - A UINavigationController subclass that support pop interactive UINavigationbar with hidden or show.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/AMScrollingNavbar&quot;&gt;AMScrollingNavbar&lt;/a&gt; - Scrollable UINavigationBar that follows the scrolling of a UIScrollView&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wilbertliu/NavKit&quot;&gt;NavKit&lt;/a&gt; - Simple and integrated way to customize navigation bar experience on iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DanisFabric/RainbowNavigation&quot;&gt;RainbowNavigation&lt;/a&gt; - An easy way to change backgroundColor of UINavigationBar when Push &amp;amp; Pop&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimOliver/TONavigationBar&quot;&gt;TONavigationBar&lt;/a&gt; - A simple subclass that adds the ability to set the navigation bar background to &#39;clear&#39; and gradually transition it visibly back in, similar to the effect in the iOS Music app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;PickerView&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/skywinder/ActionSheetPicker-3.0/&quot;&gt;ActionSheetPicker-3.0&lt;/a&gt; - Quickly reproduce the dropdown UIPickerView / ActionSheet functionality on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/filipealva/PickerView&quot;&gt;PickerView&lt;/a&gt; - A customizable alternative to UIPickerView in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/squimer/DatePickerDialog-iOS-Swift&quot;&gt;DatePickerDialog&lt;/a&gt; - Date picker dialog for iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chenzeyu/CZPicker&quot;&gt;CZPicker&lt;/a&gt; - A picker view shown as a popup for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alikaragoz/AIDatePickerController&quot;&gt;AIDatePickerController&lt;/a&gt; - &lt;span&gt;📅&lt;/span&gt; UIDatePicker modally presented with iOS 7 custom transitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/4taras4/CountryCode&quot;&gt;CountryPicker&lt;/a&gt; - &lt;span&gt;📅&lt;/span&gt; UIPickerView with Country names flags and phoneCodes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kmcgill88/McPicker-iOS&quot;&gt;McPicker&lt;/a&gt; - A customizable, closure driven UIPickerView drop-in solution with animations that is rotation ready.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blueapron/Mandoline&quot;&gt;Mandoline&lt;/a&gt; - An iOS picker view to serve all your &quot;picking&quot; needs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/di2pra/D2PDatePicker&quot;&gt;D2PDatePicker&lt;/a&gt; - Elegant and Easy-to-Use iOS Swift Date Picker&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kizitonwose/CountryPickerView&quot;&gt;CountryPickerView&lt;/a&gt;- A simple, customizable view for efficiently collecting country information in iOS apps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kwallet/planet&quot;&gt;planet&lt;/a&gt; - A country picker&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mustafaibrahim989/MICountryPicker&quot;&gt;MICountryPicker&lt;/a&gt; - Swift country picker with search option.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abhiperry/ADDatePicker&quot;&gt;ADDatePicker&lt;/a&gt; - A fully customizable iOS Horizontal PickerView library, written in pure swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SURYAKANTSHARMA/CountryPicker&quot;&gt;SKCountryPicker&lt;/a&gt; - A simple, customizable Country picker for picking country or dialing code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Popup&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adad184/MMPopupView&quot;&gt;MMPopupView&lt;/a&gt; - Pop-up based view(e.g. alert sheet), can easily customize.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevin0571/STPopup&quot;&gt;STPopup&lt;/a&gt; - STPopup provides a UINavigationController in popup style, for both iPhone and iPad.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psy2k/NMPopUpView&quot;&gt;NMPopUpView&lt;/a&gt; - Simple iOS class for showing nice popup windows. Swift and Objective-C versions available.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daisuke310vvv/PopupController&quot;&gt;PopupController&lt;/a&gt; - A customizable controller for showing temporary popup view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/binchik/SubscriptionPrompt&quot;&gt;SubscriptionPrompt&lt;/a&gt; - Subscription View Controller like the Tinder uses&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IcaliaLabs/Presentr&quot;&gt;Presentr&lt;/a&gt; - Wrapper for custom ViewController presentations in iOS 8+&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Orderella/PopupDialog&quot;&gt;PopupDialog&lt;/a&gt; - A simple, customizable popup dialog for iOS written in Swift. Replaces UIAlertControllers alert style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kciter/SelectionDialog&quot;&gt;SelectionDialog&lt;/a&gt; - Simple selection dialog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minitour/AZDialogViewController&quot;&gt;AZDialogViewController&lt;/a&gt; - A highly customizable alert dialog controller that mimics Snapchat&#39;s alert dialog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MarioIannotta/MIBlurPopup&quot;&gt;MIBlurPopup&lt;/a&gt; - MIBlurPopup let you create amazing popups with a blurred background.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeoNatan/LNPopupController&quot;&gt;LNPopupController&lt;/a&gt; - a framework for presenting view controllers as popups of other view controllers, much like the Apple Music and Podcasts apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shin8484/PopupWindow&quot;&gt;PopupWindow&lt;/a&gt; - PopupWindow is a simple Popup using another UIWindow in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iamshezad/SHPopup&quot;&gt;SHPopup&lt;/a&gt; - SHPopup is a simple lightweight library for popup view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/corin8823/Popover&quot;&gt;Popover&lt;/a&gt; - Popover is a balloon library like Facebook app. It is written in pure swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huri000/SwiftEntryKit&quot;&gt;SwiftEntryKit&lt;/a&gt; - A highly customizable popups, alerts and banners presenter for iOS. It offers various presets and is written in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JonyFang/FFPopup&quot;&gt;FFPopup&lt;/a&gt; - ⛩FFPopup is a lightweight library for presenting custom views as a popup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/PopupView&quot;&gt;PopupView&lt;/a&gt; - Toasts and popups library written with SwiftUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mijick/Popups&quot;&gt;MijickPopups&lt;/a&gt; - Popups, popovers, sheets, alerts, toasts, banners, (...) presentation made simple. Written with and for SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;ProgressView&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khawajafarooq/ProgressMeter&quot;&gt;ProgressMeter&lt;/a&gt; - Display the progress on a meter with customized annotations for iOS developed in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/keygx/GradientCircularProgress&quot;&gt;GradientCircularProgress&lt;/a&gt; - Customizable progress indicator library in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Pull to Refresh&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gontovnik/DGElasticPullToRefresh&quot;&gt;DGElasticPullToRefresh&lt;/a&gt; - Elastic pull to refresh for iOS developed in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/entotsu/PullToBounce&quot;&gt;PullToBounce&lt;/a&gt; - Animated &quot;Pull To Refresh&quot; Library for UIScrollView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/samvermette/SVPullToRefresh&quot;&gt;SVPullToRefresh&lt;/a&gt; - Give pull-to-refresh &amp;amp; infinite scrolling to any UIScrollView with 1 line of code. &lt;a href=&quot;http://samvermette.com/314&quot;&gt;http://samvermette.com/314&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uzysjung/UzysAnimatedGifPullToRefresh&quot;&gt;UzysAnimatedGifPullToRefresh&lt;/a&gt; - Add PullToRefresh using animated GIF to any scrollView with just simple code&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cemolcay/PullToRefreshCoreText&quot;&gt;PullToRefreshCoreText&lt;/a&gt; - PullToRefresh extension for all UIScrollView type classes with animated text drawing style&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/boztalay/BOZPongRefreshControl&quot;&gt;BOZPongRefreshControl&lt;/a&gt; - A pull-down-to-refresh control for iOS that plays pong, originally created for the MHacks III iOS app&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coolbeet/CBStoreHouseRefreshControl&quot;&gt;CBStoreHouseRefreshControl&lt;/a&gt; - Fully customizable pull-to-refresh control inspired by Storehouse iOS app&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peiweichen/SurfingRefreshControl&quot;&gt;SurfingRefreshControl&lt;/a&gt; - Inspired by CBStoreHouseRefreshControl.Customizable pull-to-refresh control,written in pure Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mentionapp/mntpulltoreact&quot;&gt;mntpulltoreact&lt;/a&gt; - One gesture, many actions. An evolution of Pull to Refresh.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Antondomashnev/ADChromePullToRefresh&quot;&gt;ADChromePullToRefresh&lt;/a&gt; - Chrome iOS app style pull to refresh with multiple actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dasdom/BreakOutToRefresh&quot;&gt;BreakOutToRefresh&lt;/a&gt; - A playable pull to refresh view using SpriteKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CoderMJLee/MJRefresh&quot;&gt;MJRefresh&lt;/a&gt; An easy way to use pull-to-refresh.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hoang-tran/HTPullToRefresh&quot;&gt;HTPullToRefresh&lt;/a&gt; - Easily add vertical and horizontal pull to refresh to any UIScrollView. Can also add multiple pull-to-refesh views at once.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dekatotoro/PullToRefreshSwift&quot;&gt;PullToRefreshSwift&lt;/a&gt; - iOS Simple Cool PullToRefresh Library. It is written in pure swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/delannoyk/GIFRefreshControl&quot;&gt;GIFRefreshControl&lt;/a&gt; - GIFRefreshControl is a pull to refresh that supports GIF images as track animations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fruitcoder/ReplaceAnimation&quot;&gt;ReplaceAnimation&lt;/a&gt; - Pull-to-refresh animation in UICollectionView with a sticky header flow layout, written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/PullToMakeSoup&quot;&gt;PullToMakeSoup&lt;/a&gt; - Custom animated pull-to-refresh that can be easily added to UIScrollView&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Onix-Systems/RainyRefreshControl&quot;&gt;RainyRefreshControl&lt;/a&gt; - Simple refresh control for iOS inspired by &lt;a href=&quot;https://dribbble.com/shots/2242263--1-Pull-to-refresh-Freebie-Weather-Concept&quot;&gt;concept&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eggswift/pull-to-refresh&quot;&gt;ESPullToRefresh&lt;/a&gt; - Customisable pull-to-refresh, including nice animation on the top&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CRAnimation/CRRefresh&quot;&gt;CRRefresh&lt;/a&gt; - An easy way to use pull-to-refresh.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HsiaohuiHsiang/KafkaRefresh&quot;&gt;KafkaRefresh&lt;/a&gt; - Animated, customizable, and flexible pull-to-refresh framework for faster and easier iOS development.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Rating Stars&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/glenyi/FloatRatingView&quot;&gt;FloatRatingView&lt;/a&gt; - Whole, half or floating point ratings control written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zekunyan/TTGEmojiRate&quot;&gt;TTGEmojiRate&lt;/a&gt; - An emoji-liked rating view for iOS, implemented in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peterprokop/StarryStars&quot;&gt;StarryStars&lt;/a&gt; - StarryStars is iOS GUI library for displaying and editing ratings&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/evgenyneu/Cosmos&quot;&gt;Cosmos&lt;/a&gt; - A star rating control for iOS / Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hsousa/HCSStarRatingView&quot;&gt;HCSStarRatingView&lt;/a&gt; - Simple star rating view for iOS written in Objective-C&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatiBot/MBRateApp&quot;&gt;MBRateApp&lt;/a&gt; - A groovy app rate stars screen for iOS written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbolatov/RPInteraction&quot;&gt;RPInteraction&lt;/a&gt; - Review page interaction - handy and pretty way to ask for review.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;ScrollView&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ktanaka117/ScrollingFollowView&quot;&gt;ScrollingFollowView&lt;/a&gt; - ScrollingFollowView is a simple view which follows UIScrollView scrolling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pronebird/UIScrollView-InfiniteScroll&quot;&gt;UIScrollView-InfiniteScroll&lt;/a&gt; - UIScrollView infinite scroll category.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zjmdp/GoAutoSlideView&quot;&gt;GoAutoSlideView&lt;/a&gt; - GoAutoSlideView extends UIScrollView by featuring infinitely and automatically slide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/terenceLuffy/AppStoreStyleHorizontalScrollView&quot;&gt;AppStoreStyleHorizontalScrollView&lt;/a&gt; - App store style horizontal scroll view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sgr-ksmt/PullToDismiss&quot;&gt;PullToDismiss&lt;/a&gt; - You can dismiss modal viewcontroller by pulling scrollview or navigationbar in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannzai/SpreadsheetView&quot;&gt;SpreadsheetView&lt;/a&gt; - Full configurable spreadsheet view user interfaces for iOS applications. With this framework, you can easily create complex layouts like schedule, Gantt chart or timetable as if you are using Excel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AppliKeySolutions/VegaScroll&quot;&gt;VegaScroll&lt;/a&gt; - VegaScroll is a lightweight animation flowlayout for UICollectionView completely written in Swift 4, compatible with iOS 11 and Xcode 9&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tdscientist/ShelfView-iOS&quot;&gt;ShelfView-iOS&lt;/a&gt; - iOS custom view to display books on shelf&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/touchlane/SlideController&quot;&gt;SlideController&lt;/a&gt; - SlideController is simple and flexible UI component completely written in Swift. It is a nice alternative for UIPageViewController built using power of generic types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huri000/CrownControl&quot;&gt;CrownControl&lt;/a&gt; - Inspired by the Apple Watch Digital Crown, CrownControl is a tiny accessory view that enables scrolling through scrollable content without lifting your thumb.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jiar/SegementSlide&quot;&gt;SegementSlide&lt;/a&gt; - Multi-tier UIScrollView nested scrolling solution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Segmented Control&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gmarm/BetterSegmentedControl&quot;&gt;BetterSegmentedControl&lt;/a&gt; - An easy to use, customizable replacement for UISegmentedControl &amp;amp; UISwitch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Stormotion-Mobile/LUNSegmentedControl&quot;&gt;LUNSegmentedControl&lt;/a&gt; - Customizable segmented control with interactive animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alikaragoz/AKASegmentedControl&quot;&gt;AKASegmentedControl&lt;/a&gt; - &lt;span&gt;🍫&lt;/span&gt; Fully customizable Segmented Control for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twicketapp/TwicketSegmentedControl&quot;&gt;TwicketSegmentedControl&lt;/a&gt; - Custom UISegmentedControl replacement for iOS, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sasojadrovski/SJFluidSegmentedControl&quot;&gt;SJFluidSegmentedControl&lt;/a&gt; - A segmented control with custom appearance and interactive animations. Written in Swift 3.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HeshamMegid/HMSegmentedControl&quot;&gt;HMSegmentedControl&lt;/a&gt; - A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and various other Google products.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/afishhhhh/YUSegment&quot;&gt;YUSegment&lt;/a&gt; - A customizable segmented control for iOS. Supports both text and image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/MultiSelectSegmentedControl&quot;&gt;MultiSelectSegmentedControl&lt;/a&gt; - adds Multiple-Selection to the standard &lt;code&gt;UISegmentedControl&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KittenYang/DynamicMaskSegmentSwitch&quot;&gt;DynamicMaskSegmentSwitch&lt;/a&gt; - A segment switcher with dynamic text mask effect&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TBXark/PinterestSegment&quot;&gt;PinterestSegment&lt;/a&gt; - A Pinterest-like segment control with masking animation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gontovnik/DGRunkeeperSwitch&quot;&gt;DGRunkeeperSwitch&lt;/a&gt; - Runkeeper design switch control (two part segment control)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Slider&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/12Rockets/VolumeControl&quot;&gt;VolumeControl&lt;/a&gt; - Custom volume control for iPhone featuring a well-designed round slider.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ekhoo/WESlider&quot;&gt;WESlider&lt;/a&gt; - Simple and light weight slider with chapter management&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shushutochako/IntervalSlider&quot;&gt;IntervalSlider&lt;/a&gt; - IntervalSlider is a slider library like ReutersTV app. written in pure swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/warchimede/RangeSlider&quot;&gt;RangeSlider&lt;/a&gt; - A simple range slider made in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shushutochako/CircleSlider&quot;&gt;CircleSlider&lt;/a&gt; - CircleSlider is a Circular slider library. written in pure Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vadymmarkov/MARKRangeSlider&quot;&gt;MARKRangeSlider&lt;/a&gt; - A custom reusable slider control with 2 thumbs (range slider).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alskipp/ASValueTrackingSlider&quot;&gt;ASValueTrackingSlider&lt;/a&gt; - A UISlider subclass that displays the slider value in a popup view&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TomThorpe/TTRangeSlider&quot;&gt;TTRangeSlider&lt;/a&gt; - A slider, similar in style to UISlider, but which allows you to pick a minimum and maximum range.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MedvedevMax/MMSegmentSlider&quot;&gt;MMSegmentSlider&lt;/a&gt; - Customizable animated slider for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spromicky/StepSlider&quot;&gt;StepSlider&lt;/a&gt; - StepSlider its custom implementation of slider such as UISlider for preset integer values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JellyDevelopment/JDSlider&quot;&gt;JDSlider&lt;/a&gt; - An iOS Slider written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rehatkathuria/SnappingSlider&quot;&gt;SnappingSlider&lt;/a&gt; - A beautiful slider control for iOS built purely upon Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EranBoudjnah/MTCircularSlider&quot;&gt;MTCircularSlider&lt;/a&gt; - A feature-rich circular slider control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonkykong/VerticalSlider&quot;&gt;VerticalSlider&lt;/a&gt; - VerticalSlider is a vertical implementation of the UISlider slider control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taglia3/CircularSlider&quot;&gt;CircularSlider&lt;/a&gt; - A powerful Circular Slider. It&#39;s written in Swift, it&#39;s 100% IBDesignable and all parameters are IBInspectable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HamzaGhazouani/HGCircularSlider&quot;&gt;HGCircularSlider&lt;/a&gt; - A custom reusable circular slider control for iOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WorldDownTown/RangeSeekSlider&quot;&gt;RangeSeekSlider&lt;/a&gt; - A customizable range slider for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeonardoCardoso/SectionedSlider&quot;&gt;SectionedSlider&lt;/a&gt; - Control Center Slider.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/MultiSlider&quot;&gt;MultiSlider&lt;/a&gt; - UISlider clone with multiple thumbs and values, optional snap intervals, optional value labels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agilie/AGCircularPicker&quot;&gt;AGCircularPicker&lt;/a&gt; - AGCircularPicker is helpful component for creating a controller aimed to manage any calculated parameter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/fluid-slider&quot;&gt;Fluid Slider&lt;/a&gt; - A slider widget with a popup bubble displaying the precise value selected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Splash View&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/callumboddy/CBZSplashView&quot;&gt;CBZSplashView&lt;/a&gt; - Twitter style Splash Screen View. Grows to reveal the Initial view behind.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sachinkesiraju/SKSplashView&quot;&gt;SKSplashView&lt;/a&gt; - Create custom animated splash views similar to the ones in the Twitter, Uber and Ping iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PiXeL16/RevealingSplashView&quot;&gt;RevealingSplashView&lt;/a&gt; - A Splash view that animates and reveals its content, inspired by Twitter splash&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Status Bar&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaximKotliar/Bartinter&quot;&gt;Bartinter&lt;/a&gt; - Status bar tint depending on content behind, updates dynamically.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Stepper&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PerfectFreeze/PFStepper&quot;&gt;PFStepper&lt;/a&gt; - May be the most elegant stepper you have ever had!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BalestraPatrick/ValueStepper&quot;&gt;ValueStepper&lt;/a&gt; - A Stepper object that displays its value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gmertk/GMStepper&quot;&gt;GMStepper&lt;/a&gt; - A stepper with a sliding label in the middle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/arn00s/barceloneta&quot;&gt;barceloneta&lt;/a&gt; - The right way to increment/decrement values with a simple gesture on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yannickl/SnappingStepper&quot;&gt;SnappingStepper&lt;/a&gt; - An elegant alternative to the UIStepper written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SinaMoetakef/SMNumberWheel&quot;&gt;SMNumberWheel&lt;/a&gt; - A custom control written in Swift, which is ideal for picking numbers very fast but yet very accurate using a rotating wheel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Switch&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alsedi/AnimatedSwitch&quot;&gt;AnimatedSwitch&lt;/a&gt; - UISwitch which paints over the parent view with the color in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/ViralSwitch&quot;&gt;ViralSwitch&lt;/a&gt; - A UISwitch that infects its superview with its tint color.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JunichiT/JTMaterialSwitch&quot;&gt;JTMaterialSwitch&lt;/a&gt; - A customizable switch UI with ripple effect and bounce animations, inspired from Google&#39;s Material Design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TBXark/TKSwitcherCollection&quot;&gt;TKSwitcherCollection&lt;/a&gt; - An animate switch collection&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bvogelzang/SevenSwitch&quot;&gt;SevenSwitch&lt;/a&gt; - iOS7 style drop in replacement for UISwitch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kovpas/PMZSwitch&quot;&gt;PMZSwitch&lt;/a&gt; - Yet another animated toggle&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/knn90/Switcher&quot;&gt;Switcher&lt;/a&gt; - Swift - Custom UISwitcher with animation when change status&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/paper-switch&quot;&gt;RAMPaperSwitch&lt;/a&gt; - RAMPaperSwitch is a Swift module which paints over the parent view when the switch is turned on.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cocoatoucher/AIFlatSwitch&quot;&gt;AIFlatSwitch&lt;/a&gt; - A flat component alternative to UISwitch on iOS&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/T-Pham/Switch&quot;&gt;Switch&lt;/a&gt; - An iOS switch control implemented in Swift with full Interface Builder support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Tab Bar&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ezescaruli/ESTabBarController&quot;&gt;ESTabBarController&lt;/a&gt; - A tab bar controller for iOS that allows highlighting buttons and setting custom actions to them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KittenYang/GooeyTabbar&quot;&gt;GooeyTabbar&lt;/a&gt; - A gooey effect tabbar&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/animated-tab-bar&quot;&gt;animated-tab-bar&lt;/a&gt; - RAMAnimatedTabBarController is a Swift module for adding animation to tabbar items.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/FoldingTabBar.iOS&quot;&gt;FoldingTabBar.iOS&lt;/a&gt; - Folding Tab Bar and Tab Bar Controller&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Goles/GGTabBar&quot;&gt;GGTabBar&lt;/a&gt; - Another UITabBar &amp;amp; UITabBarController (iOS Tab Bar) replacement, but uses Auto Layout for arranging it&#39;s views hierarchy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/adaptive-tab-bar&quot;&gt;adaptive-tab-bar&lt;/a&gt; - AdaptiveController is a &#39;Progressive Reduction&#39; Swift module for adding custom states to Native or Custom iOS UI elements&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lucoceano/Pager&quot;&gt;Pager&lt;/a&gt; - Easily create sliding tabs with Pager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/XLPagerTabStrip&quot;&gt;XLPagerTabStrip&lt;/a&gt; - Android PagerTabStrip for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EndouMari/TabPageViewController&quot;&gt;TabPageViewController&lt;/a&gt; - Paging view controller and scroll tab view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/winslowdibona/TabDrawer&quot;&gt;TabDrawer&lt;/a&gt; - Customizable TabBar UI element that allows you to run a block of code upon TabBarItem selection, written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fortmarek/SwipeViewController&quot;&gt;SwipeViewController&lt;/a&gt; - SwipeViewController is a Swift modification of RKSwipeBetweenViewControllers - navigate between pages / ViewControllers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/ColorMatchTabs&quot;&gt;ColorMatchTabs&lt;/a&gt; - Interesting way to display tabs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/antiguab/BATabBarController&quot;&gt;BATabBarController&lt;/a&gt; - A TabBarController with a unique animation for selection&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aryaxt/ScrollPager&quot;&gt;ScrollPager&lt;/a&gt; - A scroll pager that displays a list of tabs (segments) and manages paging between given views&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/Segmentio&quot;&gt;Segmentio&lt;/a&gt; - Animated top/bottom segmented control written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ykyouhei/KYWheelTabController&quot;&gt;KYWheelTabController&lt;/a&gt; - KYWheelTabController is a subclass of UITabBarController.It displays the circular menu instead of UITabBar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/odedharth/SuperBadges&quot;&gt;SuperBadges&lt;/a&gt; - Add emojis and colored dots as badges for your Tab Bar buttons&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Minitour/AZTabBarController&quot;&gt;AZTabBarController&lt;/a&gt; - A custom tab bar controller for iOS written in Swift 3.0&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/D-32/MiniTabBar&quot;&gt;MiniTabBar&lt;/a&gt; - A clean simple alternative to the UITabBar&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcosgriselli/SwipeableTabBarController&quot;&gt;SwipeableTabBarController&lt;/a&gt; - UITabBarController with swipe interaction between its tabs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/smahajan28/SMSwipeableTabView&quot;&gt;SMSwipeableTabView&lt;/a&gt; - Swipeable Views with Tabs (Like Android SwipeView With Tabs Layout)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uias/Tabman&quot;&gt;Tabman&lt;/a&gt; - A powerful paging view controller with indicator bar for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EzimetYusup/WormTabStrip&quot;&gt;WormTabStrip&lt;/a&gt; Beatiful ViewPager For iOS written in Swift (inspired by Android &lt;a href=&quot;https://github.com/ogaclejapan/SmartTabLayout&quot;&gt;SmartTabLayout&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/simformsolutions/SSCustomTabMenu&quot;&gt;SSCustomTabMenu&lt;/a&gt; Simple customizable iOS bottom menu with Tabbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yervandsar/SmoothTab&quot;&gt;SmoothTab&lt;/a&gt; - Smooth customizable tabs for iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yervandsar/ExpandedTabBar&quot;&gt;ExpandedTabBar&lt;/a&gt; - Very creative designed solution for &quot;more&quot; items in UITabBarController&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/behrad-kzm/BEKCurveTabbar&quot;&gt;BEKCurveTabbar&lt;/a&gt; - compatible with XCode +10 and fully customizable via Interface_Builder panel. BEKCurveTabBar derived UITabBar class and compatible with every iOS devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/AnimatedTabBar&quot;&gt;AnimatedTabBar&lt;/a&gt; - A tabbar with number of preset animations. Written with SwiftUI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Table View / Collection View&lt;/h3&gt; 
&lt;h4&gt;Table View&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MortimerGoro/MGSwipeTableCell&quot;&gt;MGSwipeTableCell&lt;/a&gt; - UITableViewCell subclass that allows to display swippable buttons with a variety of transitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hanton/YXTPageView&quot;&gt;YXTPageView&lt;/a&gt; - A PageView, which supporting scrolling to transition between a UIView and a UITableView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastred/ConfigurableTableViewController&quot;&gt;ConfigurableTableViewController&lt;/a&gt; - Typed, yet Flexible Table View Controller &lt;a href=&quot;https://holko.pl/2016/01/05/typed-table-view-controller/&quot;&gt;https://holko.pl/2016/01/05/typed-table-view-controller/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/electrickangaroo/Lightning-Table&quot;&gt;Lightning-Table&lt;/a&gt; - A declarative api for working with UITableView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/venmo/Static&quot;&gt;Static&lt;/a&gt; - Simple static table views for iOS in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/AMWaveTransition&quot;&gt;AMWaveTransition&lt;/a&gt; - Custom transition between viewcontrollers holding tableviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CEWendel/SWTableViewCell&quot;&gt;SWTableViewCell&lt;/a&gt; - An easy-to-use UITableViewCell subclass that implements a swippable content view which exposes utility buttons (similar to iOS 7 Mail Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/liuzhiyi1992/ZYThumbnailTableView&quot;&gt;ZYThumbnailTableView&lt;/a&gt; - a TableView have thumbnail cell only, and you can use gesture let it expands other expansionView, all diy&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bitwit/BWSwipeRevealCell&quot;&gt;BWSwipeRevealCell&lt;/a&gt; - A Swift library for swipeable table cells&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/preview-transition&quot;&gt;preview-transition&lt;/a&gt; - PreviewTransition is a simple preview gallery controller&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bcylin/QuickTableViewController&quot;&gt;QuickTableViewController&lt;/a&gt; - A simple way to create a UITableView for settings in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxsokolov/TableKit&quot;&gt;TableKit&lt;/a&gt; - Type-safe declarative table views with Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/v-braun/VBPiledView&quot;&gt;VBPiledView&lt;/a&gt; - Simple and beautiful stacked UIView to use as a replacement for an UITableView, UIImageView or as a menu&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tianzhuo112/VTMagic&quot;&gt;VTMagic&lt;/a&gt; - VTMagic is a page container library for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alikaragoz/MCSwipeTableViewCell&quot;&gt;MCSwipeTableViewCell&lt;/a&gt; - &lt;span&gt;👆&lt;/span&gt; Convenient UITableViewCell subclass that implements a swippable content to trigger actions (similar to the Mailbox app).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindz-eye/MYTableViewIndex&quot;&gt;MYTableViewIndex&lt;/a&gt; - A pixel perfect replacement for UITableView section index, written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/palmin/ios-dragable-table-cells&quot;&gt;ios-dragable-table-cells&lt;/a&gt; - Support for drag-n-drop of UITableViewCells in a navigation hierarchy of view controllers. You drag cells by tapping and holding them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DavdRoman/Bohr&quot;&gt;Bohr&lt;/a&gt; - Bohr allows you to set up a settings screen for your app with three principles in mind: ease, customization and extensibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adamshin/SwiftReorder&quot;&gt;SwiftReorder&lt;/a&gt; - Add drag-and-drop reordering to any table view with just a few lines of code. Robust, lightweight, and completely customizable. [e]&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/HoverConversion&quot;&gt;HoverConversion&lt;/a&gt; - HoverConversion realized vertical paging with UITableView. UIViewController will be paging when reaching top or bottom of UITableView contentOffset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KyoheiG3/TableViewDragger&quot;&gt;TableViewDragger&lt;/a&gt; - A cells of UITableView can be rearranged by drag and drop.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dimpiax/FlexibleTableViewController&quot;&gt;FlexibleTableViewController&lt;/a&gt; - Swift library of generic table view controller with external data processing of functionality, like determine cell&#39;s reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edopelawi/CascadingTableDelegate&quot;&gt;CascadingTableDelegate&lt;/a&gt; - A no-nonsense way to write cleaner UITableViewDelegate and UITableViewDataSource in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kf99916/TimelineTableViewCell&quot;&gt;TimelineTableViewCell&lt;/a&gt; - Simple timeline view implemented by UITableViewCell written in Swift 3.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertherdzik/RHPreviewCell&quot;&gt;RHPreviewCell&lt;/a&gt; - I envied so much Spotify iOS app this great playlist preview cell. Now you can give your users ability to quick check &quot;what content is hidden under your UITableViewCell&quot;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TimOliver/TORoundedTableView&quot;&gt;TORoundedTableView&lt;/a&gt; - A subclass of UITableView that styles it like Settings.app on iPad&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mergesort/TableFlip&quot;&gt;TableFlip&lt;/a&gt; - A simpler way to do cool UITableView animations! (╯°□°）╯︵ ┻━┻&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DenTelezhkin/DTTableViewManager&quot;&gt;DTTableViewManager&lt;/a&gt; - Protocol-oriented UITableView management, powered by generics and associated types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwipeCellKit/SwipeCellKit&quot;&gt;SwipeCellKit&lt;/a&gt; - Swipeable UITableViewCell based on the stock Mail.app, implemented in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/ReverseExtension&quot;&gt;ReverseExtension&lt;/a&gt; - A UITableView extension that enables cell insertion from the bottom of a table view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonat/SelectionList&quot;&gt;SelectionList&lt;/a&gt; - Simple single-selection or multiple-selection checklist, based on UITableView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AfrozZaheer/AZTableViewController&quot;&gt;AZTableViewController&lt;/a&gt; - Elegant and easy way to integrate pagination with dummy views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/SAInboxViewController&quot;&gt;SAInboxViewController&lt;/a&gt; - UIViewController subclass inspired by &quot;Inbox by google&quot; animated transitioning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muyexi/StaticTableViewController&quot;&gt;StaticTableViewController&lt;/a&gt; - Dynamically hide / show cells of static UITableViewController.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/okcupid/OKTableViewLiaison&quot;&gt;OKTableViewLiaison&lt;/a&gt; - Framework to help you better manage UITableView configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3sidedcube/ThunderTable&quot;&gt;ThunderTable&lt;/a&gt; - A simple declarative approach to UITableViewController management using a protocol-based approach.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Collection View&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jflinter/Dwifft&quot;&gt;Dwifft&lt;/a&gt; - Swift Diff&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/manuelescrig/MEVFloatingButton&quot;&gt;MEVFloatingButton&lt;/a&gt; - An iOS drop-in UITableView, UICollectionView and UIScrollView superclass category for showing a customizable floating button on top of it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kean/Preheat&quot;&gt;Preheat&lt;/a&gt; - Automates prefetching of content in UITableView and UICollectionView&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Yalantis/DisplaySwitcher&quot;&gt;DisplaySwitcher&lt;/a&gt; - Custom transition between two collection view layouts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AliSoftware/Reusable&quot;&gt;Reusable&lt;/a&gt; - A Swift mixin for UITableViewCells and UICollectionViewCells&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nghialv/Sapporo&quot;&gt;Sapporo&lt;/a&gt; - Cellmodel-driven collectionview manager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/matbeich/StickyCollectionView-Swift&quot;&gt;StickyCollectionView-Swift&lt;/a&gt; - UICollectionView layout for presenting of the overlapping cells.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKickMobile/TLIndexPathTools&quot;&gt;TLIndexPathTools&lt;/a&gt; - TLIndexPathTools is a small set of classes that can greatly simplify your table and collection views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Instagram/IGListKit&quot;&gt;IGListKit&lt;/a&gt; - A data-driven UICollectionView framework for building fast and flexible lists.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dimpiax/FlexibleCollectionViewController&quot;&gt;FlexibleCollectionViewController&lt;/a&gt; - Swift library of generic collection view controller with external data processing of functionality, like determine cell&#39;s reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler etc&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/ASCollectionView&quot;&gt;ASCollectionView&lt;/a&gt; - A Swift collection view inspired by Airbnb.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/giulio92/GLTableCollectionView&quot;&gt;GLTableCollectionView&lt;/a&gt; - Netflix and App Store like UITableView with UICollectionView&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kazuhiro4949/EditDistance&quot;&gt;EditDistance&lt;/a&gt; - Incremental update tool for UITableView and UICollectionView&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/stuffrabbit/SwiftSpreadsheet&quot;&gt;SwiftSpreadSheet&lt;/a&gt; - Spreadsheet CollectionViewLayout in Swift. Fully customizable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GenericDataSource/GenericDataSource&quot;&gt;GenericDataSource&lt;/a&gt; - A generic small reusable components for data source implementation for UITableView/UICollectionView in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KyoheiG3/PagingView&quot;&gt;PagingView&lt;/a&gt; - Infinite paging, Smart auto layout, Interface of similar to UIKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/square/PJFDataSource&quot;&gt;PJFDataSource&lt;/a&gt; - PJFDataSource is a small library that provides a simple, clean architecture for your app to manage its data sources while providing a consistent user interface for common content states (i.e. loading, loaded, empty, and error).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/DataSources&quot;&gt;DataSources&lt;/a&gt; - Type-safe data-driven List-UI Framework. (We can also use ASCollectionNode)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmick66/KDDragAndDropCollectionView&quot;&gt;KDDragAndDropCollectionView&lt;/a&gt; - Dragging &amp;amp; Dropping data across multiple UICollectionViews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3lvis/SectionScrubber&quot;&gt;SectionScrubber&lt;/a&gt; - A component to quickly scroll between collection view sections&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SoySauceLab/CollectionKit&quot;&gt;CollectionKit&lt;/a&gt; - A modern Swift framework for building reusable data-driven collection components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AfrozZaheer/AZCollectionViewController&quot;&gt;AZCollectionViewController&lt;/a&gt; - Easy way to integrate pagination with dummy views in CollectionView, make Instagram Discover within minutes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/touchlane/CampcotCollectionView&quot;&gt;CampcotCollectionView&lt;/a&gt; - CampcotCollectionView is a custom UICollectionView written in Swift that allows to expand and collapse sections. It provides a simple API to manage collection view appearance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appunite/Stefan&quot;&gt;Stefan&lt;/a&gt; - A guy that helps you manage collections and placeholders in easy way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HelloElephant/Parade&quot;&gt;Parade&lt;/a&gt; - Parallax Scroll-Jacking Effects Engine for iOS / tvOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MaherKSantina/MSPeekCollectionViewDelegateImplementation&quot;&gt;MSPeekCollectionViewDelegateImplementation&lt;/a&gt; - A custom paging behavior that peeks the previous and next items in a collection view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Squarespace/simple-source&quot;&gt;SimpleSource&lt;/a&gt; - Easy and type-safe iOS table and collection views in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannzai/conv&quot;&gt;Conv&lt;/a&gt; - Conv smart represent UICollectionView data structure more than UIKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/Carbon&quot;&gt;Carbon&lt;/a&gt; - 🚴 A declarative library for building component-based user interfaces in UITableView and UICollectionView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/3sidedcube/ThunderCollection&quot;&gt;ThunderCollection&lt;/a&gt; - A simple declarative approach to UICollectionViewController management using a protocol-based approach.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ra1028/DiffableDataSources&quot;&gt;DiffableDataSources&lt;/a&gt; - A library for backporting UITableView/UICollectionViewDiffableDataSource.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aimalygin/StableCollectionViewLayout&quot;&gt;StableCollectionViewLayout&lt;/a&gt; - This layout adjusts a content offset if the collection view is updated. You can insert, delete or reload items and StableCollectionViewLayout will take care of the content offset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackiftekhar/IQListKit&quot;&gt;IQListKit&lt;/a&gt; - Model driven UITableView/UICollectionView.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Expandable Cell&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/folding-cell&quot;&gt;folding-cell&lt;/a&gt; - FoldingCell is an expanding content cell inspired by folding paper material&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AEAccordion&quot;&gt;AEAccordion&lt;/a&gt; - UITableViewController with accordion effect (expand / collapse cells).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/amratab/ThreeLevelAccordian&quot;&gt;ThreeLevelAccordian&lt;/a&gt; - This is a customisable three level accordian with options for adding images and accessories images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/younatics/YNExpandableCell&quot;&gt;YNExpandableCell&lt;/a&gt; - Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nandiin/Savory&quot;&gt;Savory&lt;/a&gt; - A swift accordion view implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/okhanokbay/ExpyTableView&quot;&gt;ExpyTableView&lt;/a&gt; - Make your table view expandable just by implementing one method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/monofire/FTFoldingPaper&quot;&gt;FTFoldingPaper&lt;/a&gt; - Emulates paper folding effect. Can be integrated with UITableView or used with other UI components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jeantimex/CollapsibleTableSectionViewController&quot;&gt;CollapsibleTableSectionViewController&lt;/a&gt; - A swift library to support collapsible sections in a table view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/younatics/ExpandableCell&quot;&gt;ExpandableCell&lt;/a&gt; - Fully refactored YNExapnadableCell with more concise, bug free. Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/expanding-collection&quot;&gt;expanding-collection&lt;/a&gt; - ExpandingCollection is a card peek/pop controller.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Header&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Vinodh-G/ParallaxTableViewHeader&quot;&gt;ParallaxTableViewHeader&lt;/a&gt; - Parallax scrolling effect on UITableView header view when a tableView is scrolled.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CSStickyHeaderFlowLayout/CSStickyHeaderFlowLayout&quot;&gt;CSStickyHeaderFlowLayout&lt;/a&gt; - UICollectionView replacement of UITableView. Do even more like Parallax Header, Sticky Section Header.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gskbyte/GSKStretchyHeaderView&quot;&gt;GSKStretchyHeaderView&lt;/a&gt; - Configurable yet easy to use stretchy header view for UITableView and UICollectionView.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Placeholder&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dzenbot/DZNEmptyDataSet&quot;&gt;DZNEmptyDataSet&lt;/a&gt; - A drop-in UITableView/UICollectionView superclass category for showing empty datasets whenever the view has no content to display.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HamzaGhazouani/HGPlaceholders&quot;&gt;HGPlaceholders&lt;/a&gt; - Nice library to show and create placeholders and Empty States for any UITableView/UICollectionView in your project&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/malkouz/ListPlaceholder&quot;&gt;ListPlaceholder&lt;/a&gt; - ListPlaceholder is a swift library allows you to easily add facebook style animated loading placeholder to your tableviews or collection views&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wizeline/WLEmptyState&quot;&gt;WLEmptyState&lt;/a&gt; - A component that lets you customize the view when the dataset of UITableView is empty.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Collection View Layout&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chiahsien/CHTCollectionViewWaterfallLayout&quot;&gt;CHTCollectionViewWaterfallLayout&lt;/a&gt; - The waterfall (i.e., Pinterest-like) layout for UICollectionView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fmitech/FMMosaicLayout&quot;&gt;FMMosaicLayout&lt;/a&gt; - A drop-in mosaic collection view layout with a focus on simple customizations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vinnyoodles/mosaic-layout&quot;&gt;mosaic-layout&lt;/a&gt; - A mosaic collection view layout inspired by Lightbox&#39;s Algorithm, written in Swift&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKickMobile/TLLayoutTransitioning&quot;&gt;TLLayoutTransitioning&lt;/a&gt; - Enhanced transitioning between UICollectionView layouts in iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BenEmdon/CenteredCollectionView&quot;&gt;CenteredCollectionView&lt;/a&gt; - A lightweight UICollectionViewLayout that &lt;em&gt;&#39;pages&#39;&lt;/em&gt; and centers it&#39;s cells 🎡 written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yacir/CollectionViewSlantedLayout&quot;&gt;CollectionViewSlantedLayout&lt;/a&gt; - UICollectionViewLayout with slanted content&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iwheelbuy/SquareMosaicLayout&quot;&gt;SquareMosaicLayout&lt;/a&gt; - An extandable mosaic UICollectionViewLayout with a focus on extremely flexible customizations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roberthein/BouncyLayout&quot;&gt;BouncyLayout&lt;/a&gt; - BouncyLayout is a collection view layout that makes your cells bounce.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AfrozZaheer/AZSafariCollectionViewLayout&quot;&gt;AZSafariCollectionViewLayout&lt;/a&gt; - AZSafariCollectionViewLayout is replica of safari browser history page layout. very easy to use, IBInspectable are given for easy integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zenangst/Blueprints&quot;&gt;Blueprints&lt;/a&gt; - A framework that is meant to make your life easier when working with collection view flow layouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yahoojapan/UICollectionViewSplitLayout&quot;&gt;UICollectionViewSplitLayout&lt;/a&gt; - UICollectionViewSplitLayout makes collection view more responsive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VladIacobIonut/Swinflate&quot;&gt;Swinflate&lt;/a&gt; - A bunch of layouts providing light and seamless experiences in your CollectionView.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Tag&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulrolfe/PARTagPicker&quot;&gt;PARTagPicker&lt;/a&gt; - This pod provides a view controller for choosing and creating tags in the style of wordpress or tumblr.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/AMTagListView&quot;&gt;AMTagListView&lt;/a&gt; - UIScrollView subclass that allows to add a list of highly customizable tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/riteshhgupta/TagCellLayout&quot;&gt;TagCellLayout&lt;/a&gt; - UICollectionView layout for Tags with Left, Center &amp;amp; Right alignments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zekunyan/TTGTagCollectionView&quot;&gt;TTGTagCollectionView&lt;/a&gt; - Show simple text tags or custom tag views in a vertical scrollable view.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ElaWorkshop/TagListView&quot;&gt;TagListView&lt;/a&gt; - Simple and highly customizable iOS tag list view, in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kuler90/RKTagsView&quot;&gt;RKTagsView&lt;/a&gt; - Highly customizable iOS tags view (like NSTokenField). Supports editing, multiple selection, Auto Layout and much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/whitesmith/WSTagsField&quot;&gt;WSTagsField&lt;/a&gt; - An iOS text field that represents different Tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artemkrachulov/AKMaskField&quot;&gt;AKMaskField&lt;/a&gt; - AKMaskField is UITextField subclass which allows enter data in the fixed quantity and in the certain format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/younatics/YNSearch&quot;&gt;YNSearch&lt;/a&gt; - Awesome fully customizable search view like Pinterest written in Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fdzsergio/SFFocusViewLayout&quot;&gt;SFFocusViewLayout&lt;/a&gt; - UICollectionViewLayout with focused content.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;TextField &amp;amp; TextView&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jverdi/JVFloatLabeledTextField&quot;&gt;JVFloatLabeledTextField&lt;/a&gt; - UITextField subclass with floating labels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alexruperez/ARAutocompleteTextView&quot;&gt;ARAutocompleteTextView&lt;/a&gt; - subclass of UITextView that automatically displays text suggestions in real-time. Perfect for email Textviews.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hackiftekhar/IQDropDownTextField&quot;&gt;IQDropDownTextField&lt;/a&gt; - TextField with DropDown support using UIPickerView.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/UITextField-Shake&quot;&gt;UITextField-Shake&lt;/a&gt; - UITextField category that adds shake animation. &lt;a href=&quot;https://github.com/King-Wizard/UITextField-Shake-Swift&quot;&gt;Also with Swift version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hanton/HTYTextField&quot;&gt;HTYTextField&lt;/a&gt; - A UITextField with bouncy placeholder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TheMrugraj/MVAutocompletePlaceSearchTextField&quot;&gt;MVAutocompletePlaceSearchTextField&lt;/a&gt; - A drop-in Autocompletion control for Place Search like Google Places, Uber, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/filipstefansson/AutocompleteField&quot;&gt;AutocompleteField&lt;/a&gt; - Add word completion to your UITextFields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruslanskorb/RSKGrowingTextView&quot;&gt;RSKGrowingTextView&lt;/a&gt; - A light-weight UITextView subclass that automatically grows and shrinks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruslanskorb/RSKPlaceholderTextView&quot;&gt;RSKPlaceholderTextView&lt;/a&gt; - A light-weight UITextView subclass that adds support for placeholder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aschuch/StatefulViewController&quot;&gt;StatefulViewController&lt;/a&gt; - Placeholder views based on content, loading, error or empty states.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatejBalantic/MBAutoGrowingTextView&quot;&gt;MBAutoGrowingTextView&lt;/a&gt; - An auto-layout base UITextView subclass which automatically grows with user input and can be constrained by maximal and minimal height - all without a single line of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/raulriera/TextFieldEffects&quot;&gt;TextFieldEffects&lt;/a&gt; - Custom UITextFields effects inspired by Codrops, built using Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/reel-search&quot;&gt;Reel Search&lt;/a&gt; - RAMReel is a controller that allows you to choose options from a list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EddyBorja/MLPAutoCompleteTextField&quot;&gt;MLPAutoCompleteTextField&lt;/a&gt; - a subclass of UITextField that behaves like a typical UITextField with one notable exception: it manages a drop down table of autocomplete suggestions that update as the user types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Skyscanner/SkyFloatingLabelTextField&quot;&gt;SkyFloatingLabelTextField&lt;/a&gt; - A beautiful and flexible text field control implementation of &quot;Float Label Pattern&quot;. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/viniciusmo/VMaskTextField&quot;&gt;VMaskTextField&lt;/a&gt; - VMaskTextField is a library which create an input mask for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tejas-ardeshna/TJTextField&quot;&gt;TJTextField&lt;/a&gt; - UITextField with underline and left image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/muukii/NextGrowingTextView&quot;&gt;NextGrowingTextView&lt;/a&gt; - The next in the generations of &#39;growing textviews&#39; optimized for iOS 7 and above.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iwasrobbed/RPFloatingPlaceholders&quot;&gt;RPFloatingPlaceholders&lt;/a&gt; - UITextField and UITextView subclasses with placeholders that change into floating labels when the fields are populated with text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richa008/CurrencyTextField&quot;&gt;CurrencyTextField&lt;/a&gt; - UITextField that automatically formats text to display in the currency format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/T-Pham/UITextField-Navigation&quot;&gt;UITextField-Navigation&lt;/a&gt; - UITextField-Navigation adds next, previous and done buttons to the keyboard for your UITextFields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nferocious76/AutoCompleteTextField&quot;&gt;AutoCompleteTextField&lt;/a&gt; - Auto complete with suggestion textfield.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nonameplum/PLCurrencyTextField&quot;&gt;PLCurrencyTextField&lt;/a&gt; - UITextField that support currency in the right way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PiXeL16/PasswordTextField&quot;&gt;PasswordTextField&lt;/a&gt; - A custom TextField with a switchable icon which shows or hides the password and enforce good password policies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jobandtalent/AnimatedTextInput&quot;&gt;AnimatedTextInput&lt;/a&gt; - Animated UITextField and UITextView replacement for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MoZhouqi/KMPlaceholderTextView&quot;&gt;KMPlaceholderTextView&lt;/a&gt; - A UITextView subclass that adds support for multiline placeholder written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Otbivnoe/NxEnabled&quot;&gt;NxEnabled&lt;/a&gt; - Library which allows you binding &lt;code&gt;enabled&lt;/code&gt; property of button with textable elements (TextView, TextField).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aleksandrshoshiashvili/AwesomeTextFieldSwift&quot;&gt;AwesomeTextField&lt;/a&gt; - Awesome TextField is a nice and simple library for iOS. It&#39;s highly customisable and easy-to-use tool. Works perfectly for any registration or login forms in your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhilippeBoisney/ModernSearchBar&quot;&gt;ModernSearchBar&lt;/a&gt; - The famous iOS search bar with auto completion feature implemented.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jhurray/SelectableTextView&quot;&gt;SelectableTextView&lt;/a&gt; - A text view that supports selection and expansion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Fawxy/CBPinEntryView&quot;&gt;CBPinEntryView&lt;/a&gt; - A customisable view written in Swift 4.2 for any pin, code or password entry. Supports one time codes in iOS 12.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KennethTsang/GrowingTextView&quot;&gt;GrowingTextView&lt;/a&gt; - An UITextView in Swift3 and Swift2.3. Support auto growing, placeholder and length limit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iDhaval/DTTextField&quot;&gt;DTTextField&lt;/a&gt; - DTTextField is a custom textfield with floating placeholder and error label in Swift3.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serralvo/TextFieldCounter&quot;&gt;TextFieldCounter&lt;/a&gt; - UITextField character counter with lovable UX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/roytornado/RSFloatInputView&quot;&gt;RSFloatInputView&lt;/a&gt; - A Float Input View with smooth animation and supporting icon and seperator written with Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/iceman201/TaniwhaTextField&quot;&gt;TaniwhaTextField&lt;/a&gt; - TaniwhaTextField is a lightweight and beautiful swift textfield framework. It has float label pattern, and also you can highly customise it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/algolia/instantsearch-ios&quot;&gt;InstantSearch iOS&lt;/a&gt; - A library of widgets and helpers to build instant-search applications on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/apasccon/SearchTextField&quot;&gt;SearchTextField&lt;/a&gt; - UITextField subclass with autocompletion suggestions list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ko1o/PYSearch&quot;&gt;PYSearch&lt;/a&gt; - An elegant search controller which replaces the UISearchController for iOS (iPhone &amp;amp; iPad).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blueapron/styled-text&quot;&gt;styled-text&lt;/a&gt; - Declarative text styles and streamlined Dynamic Type support for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oleghnidets/TweeTextField&quot;&gt;TweeTextField&lt;/a&gt; - Lightweight set of text fields with nice animation and functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SiarheiFedartsou/MeasurementTextField&quot;&gt;MeasurementTextField&lt;/a&gt; - UITextField-based control for (NS)Measurement values input.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/venmo/VENTokenField&quot;&gt;VENTokenField&lt;/a&gt; - Easy-to-use token field that is used in the Venmo app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlexLittlejohn/ALTextInputBar&quot;&gt;ALTextInputBar&lt;/a&gt; - An auto growing text input bar for messaging apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/k-lpmg/Tagging&quot;&gt;Tagging&lt;/a&gt; - TextView that provides easy to use tagging feature for Mention or Hashtag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nathantannar4/InputBarAccessoryView&quot;&gt;InputBarAccessoryView&lt;/a&gt; - A simple and easily customizable InputAccessoryView for making powerful input bars with autocomplete and attachments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edgar-zigis/CocoaTextField&quot;&gt;CocoaTextField&lt;/a&gt; - UITextField created according to the Material.IO guidelines of 2019.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChiliLabs/CHIOTPField&quot;&gt;CHIOTPField&lt;/a&gt; - A set of textfields that can be used for One-time passwords, SMS codes, PIN codes, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/getstream/Streamoji&quot;&gt;Streamoji&lt;/a&gt; - Custom emoji rendering library with support for GIFs and images, UITextView extension.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;UIPageControl&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kasper-lahti/PageControl&quot;&gt;PageControl&lt;/a&gt; - A nice, animated UIPageControl alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/popwarsweet/PageControls&quot;&gt;PageControls&lt;/a&gt; - This is a selection of custom page controls to replace UIPageControl, inspired by a dribbble found here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChiliLabs/CHIPageControl&quot;&gt;CHIPageControl&lt;/a&gt; - A set of cool animated page controls to replace boring UIPageControl.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sevruk-dev/page-control&quot;&gt;Page-Control&lt;/a&gt; - Beautiful, animated and highly customizable UIPageControl alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TBXark/TKRubberIndicator&quot;&gt;TKRubberIndicator&lt;/a&gt; - Rubber Indicator in Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Web View&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tasanobu/Otafuku&quot;&gt;Otafuku&lt;/a&gt; - Otafuku provides utility classes to use WKWebView in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/meismyles/SwiftWebVC&quot;&gt;SwiftWebVC&lt;/a&gt; - A drop-in inline browser for your Swift iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TransitApp/SVWebViewController&quot;&gt;SVWebViewController&lt;/a&gt; - A drop-in inline browser for your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pjocprac/PTPopupWebView&quot;&gt;PTPopupWebView&lt;/a&gt; - PTPopupWebView is a simple and useful WebView for iOS, which can be popup and has many of the customized item.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Utility&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robb/Underscore.m&quot;&gt;Underscore.m&lt;/a&gt; - A DSL for Data Manipulation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tumblr/XExtensionItem&quot;&gt;XExtensionItem&lt;/a&gt; - Easier sharing of structured data between iOS applications and share extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastred/ReflectableEnum&quot;&gt;ReflectableEnum&lt;/a&gt; - Reflection for enumerations in Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/supermarin/ObjectiveSugar&quot;&gt;ObjectiveSugar&lt;/a&gt; - ObjectiveC additions for humans. Ruby style.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/leoschweizer/OpinionatedC&quot;&gt;OpinionatedC&lt;/a&gt; - Because Objective-C should have inherited more from Smalltalk.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thellimist/SwiftRandom&quot;&gt;SwiftRandom&lt;/a&gt; - Generator for random data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvzqz/RandomKit/&quot;&gt;RandomKit&lt;/a&gt; - Random data generation in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxcl/YOLOKit&quot;&gt;YOLOKit&lt;/a&gt; - Getting square objects down round holes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/goktugyil/EZSwiftExtensions&quot;&gt;EZSwiftExtensions&lt;/a&gt; - &lt;span&gt;😏&lt;/span&gt; How Swift standard types and classes were supposed to work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nickoneill/Pantry&quot;&gt;Pantry&lt;/a&gt; - The missing light persistence layer for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davedufresne/SwiftParsec&quot;&gt;SwiftParsec&lt;/a&gt; - A parser combinator library written in the Swift programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Weebly/OrderedSet&quot;&gt;OrderedSet&lt;/a&gt; - A Swift collection of unique, ordered objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKitz/Datez&quot;&gt;Datez&lt;/a&gt; - Swift library for dealing with &lt;code&gt;NSDate&lt;/code&gt;, &lt;code&gt;NSCalendar&lt;/code&gt;, and &lt;code&gt;NSDateComponents&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FabrizioBrancati/BFKit&quot;&gt;BFKit&lt;/a&gt; - An Objective-C collection of useful classes to develop Apps faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FabrizioBrancati/BFKit-Swift&quot;&gt;BFKit-Swift&lt;/a&gt; - A Swift collection of useful classes to develop Apps faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onmyway133/scale&quot;&gt;Scale&lt;/a&gt; - Unit converter in Swift (available via CocoaPods).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cconeil/Standard-Template-Protocols&quot;&gt;Standard Template Protocols&lt;/a&gt; - Protocols for your every day iOS needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JonFir/TimeLord&quot;&gt;TimeLord&lt;/a&gt; - Easy DateTime (NSDate) management in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eure/AppVersionMonitor&quot;&gt;AppVersionMonitor&lt;/a&gt; - Monitor iOS app version easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Sugar&quot;&gt;Sugar&lt;/a&gt; - Something sweet that goes great with your Cocoa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devxoul/Then&quot;&gt;Then&lt;/a&gt; - ✨ Super sweet syntactic sugar for Swift initializers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Cocoanetics/Kvitto&quot;&gt;Kvitto&lt;/a&gt; - App Store Receipt Validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftKitz/Notificationz&quot;&gt;Notificationz&lt;/a&gt; - Helping you own NSNotificationCenter in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PureSwift/SwiftFoundation&quot;&gt;SwiftFoundation&lt;/a&gt; - Cross-Platform, Protocol-Oriented Programming base library to complement the Swift Standard Library. (Pure Swift, Supports Linux).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jspahrsummers/libextobjc&quot;&gt;libextobjc&lt;/a&gt; - A Cocoa library to extend the Objective-C programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tbaranes/VersionTrackerSwift&quot;&gt;VersionTrackerSwift&lt;/a&gt; - Track which versions of your app a user has previously installed..&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/InderKumarRathore/DeviceGuru/&quot;&gt;DeviceGuru&lt;/a&gt; - DeviceGuru is a simple lib (Swift) to know the exact type of the device, e.g. iPhone 6 or iPhone 6s.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tadija/AEAppVersion&quot;&gt;AEAppVersion&lt;/a&gt; - Simple and Lightweight App Version Tracking for iOS written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BlocksKit/BlocksKit&quot;&gt;BlocksKit&lt;/a&gt; - The Objective-C block utilities you always wish you had.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tbaranes/swiftyutils&quot;&gt;SwiftyUtils&lt;/a&gt; - All the reusable code that we need in each project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soffes/RateLimit&quot;&gt;RateLimit&lt;/a&gt; - Simple utility for only executing code every so often.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/phatblat/Outlets&quot;&gt;Outlets&lt;/a&gt; - Utility functions for validating IBOutlet and IBAction connections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JARMourato/EasyAbout&quot;&gt;EasyAbout&lt;/a&gt; - A way to easily add CocoaPods licenses and App Version to your iOS App using the Settings Bundle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ben-G/Validated&quot;&gt;Validated&lt;/a&gt; - A Swift μ-Library for Somewhat Dependent Types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ankurp/Cent&quot;&gt;Cent&lt;/a&gt; - Extensions for Swift Standard Types and Classes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anatoliyv/AssistantKit&quot;&gt;AssistantKit&lt;/a&gt; - Easy way to detect iOS device properties, OS versions and work with screen sizes. Powered by Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/LeonardoCardoso/SwiftLinkPreview&quot;&gt;SwiftLinkPreview&lt;/a&gt; - It makes a preview from an url, grabbing all the information such as title, relevant texts and images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rollmind/BundleInfos&quot;&gt;BundleInfos&lt;/a&gt; - Simple getter for Bundle informations. like short version from bundle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mirek/YAML.framework&quot;&gt;YAML.framework&lt;/a&gt; - Proper YAML support for Objective-C based on &lt;code&gt;LibYAML&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/ReadabilityKit&quot;&gt;ReadabilityKit&lt;/a&gt; - Metadata extractor for news, articles and full-texts in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/appculture/MissionControl-iOS&quot;&gt;MissionControl-iOS&lt;/a&gt; - Super powerful remote config utility written in Swift (iOS, watchOS, tvOS, macOS).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Khan/SwiftTweaks&quot;&gt;SwiftTweaks&lt;/a&gt; - Tweak your iOS app without recompiling!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/caloon/UnsupportedOSVersionAlert&quot;&gt;UnsupportedOSVersionAlert&lt;/a&gt; - Alerts users with a popup if they use an app with an unsupported version of iOS (e.g. iOS betas).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dsmatter/SwiftSortUtils&quot;&gt;SwiftSortUtils&lt;/a&gt; - This library takes a shot at making sorting in Swift more pleasant. It also allows you to reuse your old NSSortDescriptor instances in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icanzilb/Retry&quot;&gt;Retry&lt;/a&gt; - Haven&#39;t you wished for &lt;code&gt;try&lt;/code&gt; to sometimes try a little harder? Meet &lt;code&gt;retry&lt;/code&gt; .&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marmelroy/ObjectiveKit&quot;&gt;ObjectiveKit&lt;/a&gt; - Swift-friendly API for Objective C runtime functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/devxoul/MoyaSugar&quot;&gt;MoyaSugar&lt;/a&gt; - Syntactic sugar for Moya.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwifterSwift/SwifterSwift&quot;&gt;SwifterSwift&lt;/a&gt; - A handy collection of more than 400 native Swift 4 extensions to boost your productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Rightpoint/Eject&quot;&gt;Eject&lt;/a&gt; - An eject button for Interface Builder to generate swift code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/ContactsWrapper&quot;&gt;ContactsWrapper&lt;/a&gt; - Easy to use wrapper for both contacts and contacts group with Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eBardX/XestiMonitors&quot;&gt;XestiMonitors&lt;/a&gt; - An extensible monitoring framework written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/floriangbh/OpenSourceController&quot;&gt;OpenSourceController&lt;/a&gt; - The simplest way to display the libraries licences used in your application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Stunner/App-Update-Tracker&quot;&gt;App-Update-Tracker&lt;/a&gt; - Easily detect and run code upon app installation or update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/4taras4/SwiftExtension&quot;&gt;ExtensionalSwift&lt;/a&gt; - Useful swift extensions in one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/futuretap/InAppSettingsKit&quot;&gt;InAppSettingsKit&lt;/a&gt; - This iOS framework allows settings to be in-app in addition to or instead of being in the Settings app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mutualmobile/MMWormhole&quot;&gt;MMWormhole&lt;/a&gt; - Message passing between iOS apps and extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jessesquires/DefaultStringConvertible&quot;&gt;DefaultStringConvertible&lt;/a&gt; - A default CustomStringConvertible implementation for Swift types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/FluxCapacitor&quot;&gt;FluxCapacitor&lt;/a&gt; - FluxCapacitor makes implementing Flux design pattern easily with protocols and typealias.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vtourraine/VTAcknowledgementsViewController&quot;&gt;VTAcknowledgementsViewController&lt;/a&gt; - Ready to use “Acknowledgements”/“Licenses”/“Credits” view controller for CocoaPods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vhesener/Closures&quot;&gt;Closures&lt;/a&gt; - Swifty closures for UIKit and Foundation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BalestraPatrick/WhatsNew&quot;&gt;WhatsNew&lt;/a&gt; - Showcase new features after an app update similar to Pages, Numbers and Keynote.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/michalkonturek/MKUnits&quot;&gt;MKUnits&lt;/a&gt; - Unit conversion library for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/takasek/ActionClosurable&quot;&gt;ActionClosurable&lt;/a&gt; - Extensions which helps to convert objc-style target/action to swifty closures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/holzschu/ios_system&quot;&gt;ios_system&lt;/a&gt; - Drop-in replacement for system() in iOS programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Sherlouk/SwiftProvisioningProfile&quot;&gt;SwiftProvisioningProfile&lt;/a&gt; - Parse provisioning profiles into Swift models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/luoxiu/Once&quot;&gt;Once&lt;/a&gt; - Minimalist library to manage one-off operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ZamzamInc/ZamzamKit&quot;&gt;ZamzamKit&lt;/a&gt; - A collection of micro utilities and extensions for Standard Library, Foundation and UIKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marty-suzuki/DuctTape&quot;&gt;DuctTape&lt;/a&gt; - KeyPath dynamicMemberLookup based syntax sugar for swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/simonmitchell/ReviewKit&quot;&gt;ReviewKit&lt;/a&gt; - A framework which helps gatekeep review prompt requests – using SKStoreReviewController – to users who have had a good time using your app by logging positive and negative actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sparrowcode/SwiftBoost&quot;&gt;SwiftBoost&lt;/a&gt; - Collection of Swift-extensions to boost development process.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;User Consent&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/smartlook/ios-consent-sdk&quot;&gt;SmartlookConsentSDK&lt;/a&gt; - Open source SDK which provides a configurable control panel where user can select their privacy options and store the user preferences for the app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/privacy-tech-lab/privacyflash-pro&quot;&gt;PrivacyFlash Pro&lt;/a&gt; - Generate a privacy policy for your iOS app from its code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;VR&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Aralekk/VR_Toolkit_iOS&quot;&gt;VR Toolkit iOS&lt;/a&gt; - A sample project that provides the basics to create an interactive VR experience on iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hanton/HTY360Player&quot;&gt;360 VR Player&lt;/a&gt; - A open source, ad-free, native and universal 360 degree panorama video player for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Aralekk/simple360player_iOS&quot;&gt;simple360player&lt;/a&gt; - Free &amp;amp; ad-free 360 VR Video Player. Flat or Stereoscopic. In Swift 2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/Swifty360Player&quot;&gt;Swifty360Player&lt;/a&gt; - iOS 360-degree video player streaming from an AVPlayer with Swift.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Walkthrough / Intro / Tutorial&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mamaral/Onboard&quot;&gt;Onboard&lt;/a&gt; - Easily create a beautiful and engaging onboarding experience with only a few lines of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ealeksandrov/EAIntroView&quot;&gt;EAIntroView&lt;/a&gt; - Highly customizable drop-in solution for introduction views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatthewYork/MYBlurIntroductionView&quot;&gt;MYBlurIntroductionView&lt;/a&gt; - A super-charged version of MYIntroductionView for building custom app introductions and tutorials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ariok/BWWalkthrough&quot;&gt;BWWalkthrough&lt;/a&gt; - A class to build custom walkthroughs for your iOS App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GnosisHub/GHWalkThrough&quot;&gt;GHWalkThrough&lt;/a&gt; - A UICollectionView backed drop-in component for introduction views.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/icepat/ICETutorial&quot;&gt;ICETutorial&lt;/a&gt; - A nice tutorial like the one introduced in the Path 3.X App.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IFTTT/JazzHands&quot;&gt;JazzHands&lt;/a&gt; - Jazz Hands is a simple keyframe-based animation framework for UIKit. Animations can be controlled via gestures, scroll views, KVO, or ReactiveCocoa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IFTTT/RazzleDazzle&quot;&gt;RazzleDazzle&lt;/a&gt; - A simple keyframe-based animation framework for iOS, written in Swift. Perfect for scrolling app intros.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ephread/Instructions&quot;&gt;Instructions&lt;/a&gt; - Easily add customizable coach marks into you iOS project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruipfcosta/SwiftyWalkthrough&quot;&gt;SwiftyWalkthrough&lt;/a&gt; - The easiest way to create a great walkthrough experience in your apps, powered by Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yukiasai/Gecco&quot;&gt;Gecco&lt;/a&gt; - Spotlight view for iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/svhawks/VideoSplashKit&quot;&gt;VideoSplashKit&lt;/a&gt; - VideoSplashKit - UIViewController library for creating easy intro pages with background videos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hyperoslo/Presentation&quot;&gt;Presentation&lt;/a&gt; - Presentation helps you to make tutorials, release notes and animated pages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andreamazz/AMPopTip&quot;&gt;AMPopTip&lt;/a&gt; - An animated popover that pops out a given frame, great for subtle UI tips and onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PhilippeBoisney/AlertOnboarding&quot;&gt;AlertOnboarding&lt;/a&gt; - A simple and handsome AlertView for onboard your users in your amazing world.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/teodorpatras/EasyTipView&quot;&gt;EasyTipView&lt;/a&gt; - Fully customisable tooltip view in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ramotion/paper-onboarding&quot;&gt;paper-onboarding&lt;/a&gt; - PaperOnboarding is a material design slider.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anatoliyv/InfoView&quot;&gt;InfoView&lt;/a&gt; - Swift based simple information view with pointed arrow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbolatov/Intro&quot;&gt;Intro&lt;/a&gt; - An iOS framework to easily create simple animated walkthrough, written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aleksandrshoshiashvili/AwesomeSpotlightView&quot;&gt;AwesomeSpotlightView&lt;/a&gt; - Tool to create awesome tutorials or educate user to use application. Or just highlight something on screen. Written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/juanpablofernandez/SwiftyOnboard&quot;&gt;SwiftyOnboard&lt;/a&gt; - A simple way to add onboarding to your project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/praagyajoshi/WVWalkthroughView&quot;&gt;WVWalkthroughView&lt;/a&gt; - Utility to easily create walkthroughs to help with user onboarding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/saeid/SwiftyOverlay&quot;&gt;SwiftyOverlay&lt;/a&gt; - Easy and quick way to show intro / instructions over app UI without any additional images in real-time!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chaser79/SwiftyOnboardVC&quot;&gt;SwiftyOnboardVC&lt;/a&gt; - Lightweight walkthrough controller thats uses view controllers as its subviews making the customization endless.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yukiasai/Minamo&quot;&gt;Minamo&lt;/a&gt; - Simple coach mark library written in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aromajoin/material-showcase-ios&quot;&gt;Material Showcase iOS&lt;/a&gt; - An elegant and beautiful showcase for iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SvenTiigi/WhatsNewKit&quot;&gt;WhatsNewKit&lt;/a&gt; - Showcase your awesome new app features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NikolaKirev/OnboardKit&quot;&gt;OnboardKit&lt;/a&gt; - Customisable user onboarding for your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/exyte/ConcentricOnboarding&quot;&gt;ConcentricOnboarding&lt;/a&gt; - SwiftUI library for a walkthrough or onboarding flow with tap actions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Websites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bgr.com/ios-7/&quot;&gt;BGR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.imore.com/&quot;&gt;iMore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lifehacker.com/tag/ios&quot;&gt;Lifehacker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nshipster.com&quot;&gt;NSHipster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.objc.io/&quot;&gt;Objc.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://asciiwwdc.com/&quot;&gt;ASCIIwwdc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.natashatherobot.com/&quot;&gt;Natasha The Robot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/swift/blog/&quot;&gt;Apple&#39;s Swift Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/iOSProgramming/&quot;&gt;iOS Programming Subreddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScottLogic/iOS8-day-by-day&quot;&gt;iOS8-day-by-day&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ioscreator.com/&quot;&gt;iOScreator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://mathewsanders.com/&quot;&gt;Mathew Sanders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://hboon.com/iosdevnuggets/&quot;&gt;iOS Dev Nuggets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/9magnets/iOS-Developer-and-Designer-Interview-Questions&quot;&gt;iOS Developer and Designer interview&lt;/a&gt; - A small guide to help those looking to hire a developer or designer for iOS work.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ScottLogic/iOS9-day-by-day&quot;&gt;iOS9-day-by-day&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://engineering.fb.com/category/ios/&quot;&gt;Code Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rgnlax/Feeds-for-iOS-Developer&quot;&gt;Feeds for iOS Developer&lt;/a&gt; - The list of RSS feeds for iOS developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cocoacontrols.com/&quot;&gt;Cocoa Controls&lt;/a&gt; - Open source UI components for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ohmyswift.com/blog/&quot;&gt;Ohmyswift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.pointfree.co/&quot;&gt;Point Free&lt;/a&gt; - A video series exploring functional programming and Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://roadmap.sh/ios&quot;&gt;Roadmap.sh iOS Roadmap&lt;/a&gt; - A community created iOS Developer roadmap.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;WebSocket&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/SocketRocket&quot;&gt;SocketRocket&lt;/a&gt; - A conforming Objective-C WebSocket client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/socketio/socket.io-client-swift&quot;&gt;socket.io-client-swift&lt;/a&gt; - Socket.IO-client for iOS/macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tidwall/SwiftWebSocket&quot;&gt;SwiftWebSocket&lt;/a&gt; - High performance WebSocket client library for Swift, iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daltoniam/Starscream&quot;&gt;Starscream&lt;/a&gt; - Websockets in swift for iOS and macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swiftsocket/SwiftSocket&quot;&gt;SwiftSocket&lt;/a&gt; - simple socket library for apple swift lang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vapor-community/sockets&quot;&gt;Socks&lt;/a&gt; - Pure-Swift Sockets: TCP, UDP; Client, Server; Linux, macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Balancingrock/SwifterSockets&quot;&gt;SwifterSockets&lt;/a&gt; - A collection of socket utilities in Swift for OS-X and iOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielrhodes/Swift-ActionCableClient&quot;&gt;Swift-ActionCableClient&lt;/a&gt; - ActionCable is a new WebSocket server being released with Rails 5 which makes it easy to add real-time features to your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/GlebRadchenko/DNWebSocket&quot;&gt;DNWebSocket&lt;/a&gt; - Object-Oriented, Swift-style WebSocket Library (RFC 6455) for Swift-compatible Platforms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kaandedeoglu/Shark&quot;&gt;Shark&lt;/a&gt; - Swift Script that transforms the .xcassets folder into a type safe enum.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulsamuels/SBConstants&quot;&gt;SBConstants&lt;/a&gt; - Generate a constants file by grabbing identifiers from storyboards in a project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mac-cain13/R.swift&quot;&gt;R.swift&lt;/a&gt; - Tool to get strong typed, autocompleted resources like images, cells and segues in your Swift project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftGen/SwiftGen&quot;&gt;SwiftGen&lt;/a&gt; - A collection of Swift tools to generate Swift code (enums for your assets, storyboards, Localizable.strings and UIColors).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jondot/blade&quot;&gt;Blade&lt;/a&gt; - Generate Xcode image catalogs for iOS / macOS app icons, universal images, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/terwanerik/Retini&quot;&gt;Retini&lt;/a&gt; - A super simple retina (2x, 3x) image converter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/realm/jazzy&quot;&gt;Jazzy&lt;/a&gt; - Soulful docs for Swift &amp;amp; Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tomaz/appledoc&quot;&gt;appledoc&lt;/a&gt; - ObjectiveC code Apple style documentation set generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JiriTrecak/Laurine&quot;&gt;Laurine&lt;/a&gt; - Laurine - Localization code generator written in Swift. Sweet!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcinolawski/StoryboardMerge&quot;&gt;StoryboardMerge&lt;/a&gt; - Xcode storyboards diff and merge tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metasmile/ai2appiconset&quot;&gt;ai2app&lt;/a&gt; - Creating AppIcon sets from Adobe Illustrator (all supported formats).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/daisuke0131/ViewMonitor&quot;&gt;ViewMonitor&lt;/a&gt; - ViewMonitor can measure view positions with accuracy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ijoshsmith/abandoned-strings&quot;&gt;abandoned-strings&lt;/a&gt; - Command line program that detects unused resource strings in an iOS or macOS application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kylef/swiftenv&quot;&gt;swiftenv&lt;/a&gt; - swiftenv allows you to easily install, and switch between multiple versions of Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tasanobu/Misen&quot;&gt;Misen&lt;/a&gt; - Script to support easily using Xcode Asset Catalog in Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metasmile/git-xcp&quot;&gt;git-xcp&lt;/a&gt; - A Git plugin for versioning workflow of real-world Xcode project. fastlane&#39;s best friend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tapwork/WatchdogInspector&quot;&gt;WatchdogInspector&lt;/a&gt; - Shows your current framerate (fps) in the status bar of your iOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dealforest/Cichlid&quot;&gt;Cichlid&lt;/a&gt; - automatically delete the current project&#39;s DerivedData directories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/Delta&quot;&gt;Delta&lt;/a&gt; - Managing state is hard. Delta aims to make it simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ypresto/SwiftLintXcode&quot;&gt;SwiftLintXcode&lt;/a&gt; - An Xcode plug-in to format your code using SwiftLint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dzenbot/XCSwiftr&quot;&gt;XCSwiftr&lt;/a&gt; - An Xcode Plugin to convert Objective-C to Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johncsnyder/SwiftKitten&quot;&gt;SwiftKitten&lt;/a&gt; - Swift autocompleter for Sublime Text, via the adorable SourceKitten framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Karumi/Kin&quot;&gt;Kin&lt;/a&gt; - Have you ever found yourself undoing a merge due to a broken Xcode build? Then Kin is your tool. It will parse your project configuration file and detect errors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/angelvasa/AVXCAssets-Generator&quot;&gt;AVXCAssets-Generator&lt;/a&gt; - AVXCAssets Generator takes path for your assets images and creates appiconset and imageset for you in just one click.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/shaps80/Peek&quot;&gt;Peek&lt;/a&gt; - Take a Peek at your application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jpsim/SourceKitten&quot;&gt;SourceKitten&lt;/a&gt; - An adorable little framework and command line tool for interacting with SourceKit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/xcbuild&quot;&gt;xcbuild&lt;/a&gt; - Xcode-compatible build tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/doubleencore/XcodeIssueGenerator&quot;&gt;XcodeIssueGenerator&lt;/a&gt; - An executable that can be placed in a Run Script Build Phase that marks comments like // TODO: or // SERIOUS: as warnings or errors so they display in the Xcode Issue Navigator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TumblrArchive/SwiftCompilationPerformanceReporter&quot;&gt;SwiftCompilationPerformanceReporter&lt;/a&gt; - Generate automated reports for slow Swift compilation paths in specific targets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RobertGummesson/BuildTimeAnalyzer-for-Xcode&quot;&gt;BuildTimeAnalyzer&lt;/a&gt; - Build Time Analyzer for Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SwiftStudies/Duration&quot;&gt;Duration&lt;/a&gt; - A simple Swift package for measuring and reporting the time taken for operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WorldDownTown/Benchmark&quot;&gt;Benchmark&lt;/a&gt; - The Benchmark module provides methods to measure and report the time used to execute Swift code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MatiBot/MBAssetsImporter&quot;&gt;MBAssetsImporter&lt;/a&gt; - Import assets from Panoramio or from your macOS file system with their metadata to your iOS simulator (Swift 2.0).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/realm/realm-browser-osx&quot;&gt;Realm Browser&lt;/a&gt; - Realm Browser is a macOS utility to open and modify realm database files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/square/SuperDelegate&quot;&gt;SuperDelegate&lt;/a&gt; – SuperDelegate provides a clean application delegate interface and protects you from bugs in the application lifecycle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane-community/fastlane-plugin-appicon&quot;&gt;fastlane-plugin-appicon&lt;/a&gt; - Generate required icon sizes and iconset from a master application icon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/infer&quot;&gt;infer&lt;/a&gt; - A static analyzer for Java, C and Objective-C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcboquet/PlayNow&quot;&gt;PlayNow&lt;/a&gt; - Small app that creates empty Swift playground files and opens them with Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johnno1962/Xtrace&quot;&gt;Xtrace&lt;/a&gt; - Trace Objective-C method calls by class or instance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xcenv/xcenv&quot;&gt;xcenv&lt;/a&gt; - Groom your Xcode environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/playgroundbooks/playgroundbook&quot;&gt;playgroundbook&lt;/a&gt; - Tool for Swift Playground books.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xmartlabs/Ecno&quot;&gt;Ecno&lt;/a&gt; - Ecno is a task state manager built on top of UserDefaults in pure Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/toshi0383/ipanema&quot;&gt;ipanema&lt;/a&gt; - ipanema analyzes and prints useful information from &lt;code&gt;.ipa&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/plu/pxctest&quot;&gt;pxctest&lt;/a&gt; - Parallel XCTest - Execute XCTest suites in parallel on multiple iOS Simulators.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swift.sandbox.bluemix.net&quot;&gt;IBM Swift Sandbox&lt;/a&gt; - The IBM Swift Sandbox is an interactive website that lets you write Swift code and execute it in a server environment – on top of Linux!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/idb&quot;&gt;FBSimulatorControl&lt;/a&gt; - A macOS library for managing and manipulating iOS Simulators&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nomad-cli.com&quot;&gt;Nomad&lt;/a&gt; - Suite of command line utilities &amp;amp; libraries for sending APNs, create &amp;amp; distribute &lt;code&gt;.ipa&lt;/code&gt;, verify In-App-Purchase receipt and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RahulKatariya/SwiftFrameworkTemplate&quot;&gt;Cookiecutter&lt;/a&gt; - A template for new Swift iOS / tvOS / watchOS / macOS Framework project ready with travis-ci, cocoapods, Carthage, SwiftPM and a Readme file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/Sourcery&quot;&gt;Sourcery&lt;/a&gt; - A tool that brings meta-programming to Swift, allowing you to code generate Swift code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/freshOS/AssetChecker&quot;&gt;AssetChecker 👮&lt;/a&gt; - Keeps your Assets.xcassets files clean and emits warnings when something is suspicious.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/insidegui/PlayAlways&quot;&gt;PlayAlways&lt;/a&gt; - Create Xcode playgrounds from your menu bar&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dani-gavrilov/GDPerformanceView-Swift&quot;&gt;GDPerformanceView-Swift&lt;/a&gt; - Shows FPS, CPU usage, app and iOS versions above the status bar and report FPS and CPU usage via delegate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/Traits&quot;&gt;Traits&lt;/a&gt; - Library for a real-time design and behavior modification of native iOS apps without recompiling (code and interface builder changes are supported).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.get-struct.tools&quot;&gt;Struct&lt;/a&gt; - A tool for iOS and Mac developers to automate the creation and management of Xcode projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yukiasai/Nori&quot;&gt;Nori&lt;/a&gt; - Easier to apply code based style guide to storyboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/attaswift/Attabench&quot;&gt;Attabench&lt;/a&gt; - Microbenchmarking app for Swift with nice log-log plots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wilbertliu/Gluten&quot;&gt;Gluten&lt;/a&gt; - Nano library to unify XIB and it&#39;s code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mono0926/LicensePlist&quot;&gt;LicensePlist&lt;/a&gt; - A license list generator of all your dependencies for iOS applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yahoo/AppDevKit&quot;&gt;AppDevKit&lt;/a&gt; - AppDevKit is an iOS development library that provides developers with useful features to fulfill their everyday iOS app development needs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/facebook/Tweaks&quot;&gt;Tweaks&lt;/a&gt; - An easy way to fine-tune, and adjust parameters for iOS apps in development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/onevcat/FengNiao&quot;&gt;FengNiao&lt;/a&gt; - A command line tool for cleaning unused resources in Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/LifetimeTracker&quot;&gt;LifetimeTracker&lt;/a&gt; - Find retain cycles / memory leaks sooner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pinterest/plank&quot;&gt;Plank&lt;/a&gt; - A tool for generating immutable model objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/Lona&quot;&gt;Lona&lt;/a&gt; - A tool for defining design systems and using them to generate cross-platform UI code, Sketch files, images, and other artifacts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yonaskolb/XcodeGen&quot;&gt;XcodeGen&lt;/a&gt; - Command line tool that generates your Xcode project from a spec file and your folder structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wigl/iSimulator&quot;&gt;iSimulator&lt;/a&gt; - iSimulator is a GUI utility to control the Simulator, and manage the app installed on the simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzyzanowskim/Natalie&quot;&gt;Natalie&lt;/a&gt; - Storyboard Code Generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andresinaka/transformer&quot;&gt;Transformer&lt;/a&gt; - Easy Online Attributed String Creator. This tool lets you format a string directly in the browser and then copy/paste the attributed string code into your app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ealeksandrov/ProvisionQL&quot;&gt;ProvisionQL&lt;/a&gt; - Quick Look plugin for apps and provisioning profile files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/novemberfiveco/xib2Storyboard&quot;&gt;xib2Storyboard&lt;/a&gt; - A tool to convert Xcode .xib to .storyboard files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Zolang/Zolang&quot;&gt;Zolang&lt;/a&gt; - A programming language for sharing logic between iOS, Android and Tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gabrielrobert/xavtool&quot;&gt;xavtool&lt;/a&gt; - Command-line utility to automatically increase iOS / Android applications version.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cutter.albemala.me/&quot;&gt;Cutter&lt;/a&gt; - A tool to generate iOS Launch Images (Splash Screens) for all screen sizes starting from a single template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bow-swift/nef&quot;&gt;nef&lt;/a&gt; - A set of command line tools for Xcode Playground: lets you have compile-time verification of your documentation written as Xcode Playgrounds, generates markdown files, integration with Jekyll for building microsites and Carbon to export code snippets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/woshiccm/Pecker&quot;&gt;Pecker&lt;/a&gt; - CodePecker is a tool to detect unused code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://speculid.com&quot;&gt;Speculid&lt;/a&gt; - generate Image Sets and App Icons from SVG, PNG, and JPEG files&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robertherdzik/SkrybaMD&quot;&gt;SkrybaMD&lt;/a&gt; - Markdown Documentation generator. If your team needs an easy way to maintain and create documentation, this generator is for you.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftify.com/#/converter/storyboard2swiftui/&quot;&gt;Storyboard -&amp;gt; SwiftUI Converter&lt;/a&gt; - Storyboard -&amp;gt; SwiftUI Converter is a converter to convert .storyboard and .xib to SwiftUI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftpackageindex.com&quot;&gt;Swift Package Index&lt;/a&gt; - Swift packages list with many information about quality and compatiblity of package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RobotsAndPencils/XcodesApp&quot;&gt;Xcodes.app&lt;/a&gt; - The easiest way to install and switch between multiple versions of Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://respresso.io/image-converter&quot;&gt;Respresso Image Converter&lt;/a&gt; - Multiplatform image converter for iOS, Android, and Web that supports pdf, svg, vector drawable, jpg, png, and webp formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swiftyfinch/Rugby&quot;&gt;Rugby&lt;/a&gt; - 🏈 Cache CocoaPods for faster rebuild and indexing Xcode project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getuniversal.link/&quot;&gt;GetUniversal.link&lt;/a&gt; - Free Universal Link &amp;amp; Apple App Site Association testing tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Tutorials and Keynotes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.appcoda.com/&quot;&gt;AppCoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/ios/index.htm&quot;&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codewithchris.com/&quot;&gt;Code with Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.cocoawithlove.com/&quot;&gt;Cocoa with Love&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCysEngjfeIYapEER9K8aikw/videos&quot;&gt;Brian Advent youtube channel&lt;/a&gt; - Swift tutorials Youtube Channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/ios&quot;&gt;raywenderlich.com&lt;/a&gt; - Tutorials for developers and gamers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.mikeash.com/pyblog/&quot;&gt;Mike Ash&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bignerdranch.com/blog/category/ios/&quot;&gt;Big Nerd Ranch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/categories/ios-sdk&quot;&gt;Tuts+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://thinkster.io/a-better-way-to-learn-swift&quot;&gt;Thinkster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swifteducation&quot;&gt;Swift Education&lt;/a&gt; - A community of educators sharing materials for teaching Swift and app development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://cocoadevcentral.com&quot;&gt;Cocoa Dev Central&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://useyourloaf.com/&quot;&gt;Use Your Loaf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jamesonquave.com/blog/tutorials/&quot;&gt;Swift Tutorials by Jameson Quave&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hsavit1/Awesome-Swift-Education&quot;&gt;Awesome-Swift-Education&lt;/a&gt; - All of the resources for Learning About Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/uraimo/Awesome-Swift-Playgrounds&quot;&gt;Awesome-Swift-Playgrounds&lt;/a&gt; - A List of Awesome Swift Playgrounds!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nettlep/learn-swift&quot;&gt;learn-swift&lt;/a&gt; - Learn Apple&#39;s Swift programming language interactively through these playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://JaneshSwift.com&quot;&gt;SwiftUI Tutorials&lt;/a&gt; - Learn SwiftUI &amp;amp; Swift for FREE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://teamtreehouse.com/library/topic:ios&quot;&gt;Treehouse&#39;s iOS Courses and Workshops&lt;/a&gt; - Topics for beginner and advanced developers in both Objective-C and Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakarmy/swift-summary&quot;&gt;The Swift Summary Book&lt;/a&gt; - A summary of Apple&#39;s Swift language written on Playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hackingwithswift.com&quot;&gt;Hacking With Swift&lt;/a&gt; - Learn to code iPhone and iPad apps with 3 Swift tutorials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://academy.realm.io/&quot;&gt;Realm Academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learnappmaking.com&quot;&gt;LearnAppMaking&lt;/a&gt; - LearnAppMaking helps app developers to build, launch and market iOS apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/livevideo/ios-development-with-swift-lv&quot;&gt;iOS Development with Swift in Motion &lt;/a&gt; - This live video course locks in the language fundamentals and then offers interesting examples and exercises to build and practice your knowledge and skills.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zagahr/Conferences.digital&quot;&gt;Conferences.digital&lt;/a&gt; - Watch conference videos in a native macOS app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://daddycoding.com/&quot;&gt;DaddyCoding&lt;/a&gt; - iOS Tutorials ranging from beginners to advance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.coursesity.com/best-swift-tutorials/&quot;&gt;Learn Swift&lt;/a&gt; - Learn Swift - curated list of the top online Swift tutorials and courses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;UI Templates&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.invisionapp.com/inside-design/design-resources/tethr/&quot;&gt;iOS UI Design Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ivomynttinen.com/blog/ios-design-guidelines&quot;&gt;iOS Design Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://design.facebook.com/toolsandresources/ios-11-iphone-gui/&quot;&gt;iOS 11 iPhone GUI from Design at Meta&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Xcode&lt;/h2&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BalestraPatrick/CleanClosureXcode&quot;&gt;CleanClosureXcode&lt;/a&gt; - An Xcode Source Editor extension to clean the closure syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cyanzhong/xTextHandler&quot;&gt;xTextHandler&lt;/a&gt; - Xcode Source Editor Extension Toolset (Plugins for Xcode 8).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bouke/SwiftInitializerGenerator&quot;&gt;SwiftInitializerGenerator&lt;/a&gt; - Xcode 8 Source Code Extension to Generate Swift Initializers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sergdort/XcodeEquatableGenerator&quot;&gt;XcodeEquatableGenerator&lt;/a&gt; - Xcode 8 Source Code Extension will generate conformance to Swift Equatable protocol based on type and fields selection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/markohlebar/Import&quot;&gt;Import&lt;/a&gt; - Xcode extension for adding imports from anywhere in the code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/velyan/Mark&quot;&gt;Mark&lt;/a&gt; - Xcode extension for generating MARK comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Otbivnoe/XShared&quot;&gt;XShared&lt;/a&gt; - Xcode extension which allows you copying the code with special formatting quotes for social (Slack, Telegram).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bunn/Xgist&quot;&gt;XGist&lt;/a&gt; - Xcode extension which allows you to send your text selection or entire file to GitHub&#39;s Gist and automatically copy the Gist URL into your Clipboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swiftify.com/&quot;&gt;Swiftify&lt;/a&gt; - Objective-C to Swift online code converter and Xcode extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/serhii-londar/DocumenterXcode&quot;&gt;DocumenterXcode&lt;/a&gt; - Attempt to give a new life for VVDocumenter-Xcode as source editor extension.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Karetski/Snowonder&quot;&gt;Snowonder&lt;/a&gt; - Magical import declarations formatter for Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/XVimProject/XVim2&quot;&gt;XVim2&lt;/a&gt; - Vim key-bindings for Xcode 9.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/velyan/Comment-Spell-Checker&quot;&gt;Comment Spell Checker&lt;/a&gt; - Xcode extension for spell checking and auto correcting code comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bow-swift/nef-plugin&quot;&gt;nef&lt;/a&gt; - This Xcode extension enables you to make a code selection and export it to a snippets. Available on Mac AppStore.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://draculatheme.com/xcode/&quot;&gt;Dracula Theme&lt;/a&gt; - A dark theme for Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hdoria/xcode-themes&quot;&gt;Xcode themes list&lt;/a&gt; - Color themes for Xcode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArtSabintsev/Solarized-Dark-for-Xcode/&quot;&gt;Solarized-Dark-for-Xcode&lt;/a&gt; - Solarized Dark Theme for Xcode 5.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cargath/WWDC2016-Xcode-Color-Scheme&quot;&gt;WWDC2016 Xcode Color Scheme&lt;/a&gt; - A color scheme for Xcode based on the WWDC 2016 invitation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/durul/Xcodetheme&quot;&gt;DRL Theme&lt;/a&gt; - A soft darkness theme for Xcode.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Other Xcode&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aashishtamsya/awesome-xcode-scripts&quot;&gt;awesome-xcode-scripts&lt;/a&gt; - A curated list of useful xcode scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/venmo/synx&quot;&gt;Synx&lt;/a&gt; - A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tintenklecks/IBDelegateCodesippets&quot;&gt;dsnip&lt;/a&gt; - Tool to generate (native) Xcode code snippets from all protocols/delegate methods of UIKit (UITableView, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DeskConnect/SBShortcutMenuSimulator&quot;&gt;SBShortcutMenuSimulator&lt;/a&gt; - 3D Touch shortcuts in the Simulator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aashishtamsya/awesome-gitignore-templates&quot;&gt;awesome-gitignore-templates&lt;/a&gt; - A collection of swift, objective-c, android and many more langugages .gitignore templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/artemnovichkov/swift-project-template&quot;&gt;swift-project-template&lt;/a&gt; - Template for iOS Swift project generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Juanpe/Swift-VIPER-Module&quot;&gt;Swift-VIPER-Module&lt;/a&gt; - Xcode template for create modules with VIPER Architecture written in Swift 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abdullahselek/ViperC&quot;&gt;ViperC&lt;/a&gt; - Xcode template for VIPER Architecture for both Objective-C and Swift.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ismetanin/XcodeCodeSnippets&quot;&gt;XcodeCodeSnippets&lt;/a&gt; - A set of code snippets for iOS development, includes code and comments snippets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=stevemoser.xcode-keybindings&quot;&gt;Xcode Keymap for Visual Studio Code&lt;/a&gt; - This extension ports popular Xcode keyboard shortcuts to Visual Studio Code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Camji55/xtm&quot;&gt;Xcode Template Manager&lt;/a&gt; - Xcode Template Manager is a Swift command line tool that helps you manage your Xcode project templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EvsenevDev/VIPERModuleTemplate&quot;&gt;VIPER Module Template&lt;/a&gt; - Xcode Template of VIPER Module which generates all layers of VIPER.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/haikieu/xcode-developer-disk-image-all-platforms&quot;&gt;Xcode Developer Disk Images&lt;/a&gt; - Xcode Developer Disk Images is needed when you want to put your build to the device, however sometimes your Xcode is not updated with the latest Disk Images, you could find them here for convenience.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/krzysztofzablocki/Swift-Macros&quot;&gt;Swift Macros 🚀&lt;/a&gt; - A curated list of community-created Macros and associated learning resources.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/vsouza/awesome-ios/master/#contributing-and-collaborating&quot;&gt;back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>weichsel/ZIPFoundation</title>
      <link>https://github.com/weichsel/ZIPFoundation</link>
      <description>&lt;p&gt;Effortless ZIP Handling in Swift&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1577319/27564151-1d99e3a0-5ad6-11e7-8ab6-417c5b5a3ff2.png&quot; width=&quot;489&quot; /&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/apple/swift-package-manager&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/SPM-compatible-brightgreen.svg?sanitize=true&quot; alt=&quot;Swift Package Manager compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat&quot; alt=&quot;Carthage compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://cocoapods.org/pods/ZIPFoundation&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/ZIPFoundation.svg?sanitize=true&quot; alt=&quot;CocoaPods Compatible&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/weichsel/ZIPFoundation&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Platforms-macOS%20%7C%20iOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20visionOS%20%7C%20Linux-lightgrey.svg?sanitize=true&quot; alt=&quot;Platform&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://twitter.com/weichsel&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/twitter-@weichsel-blue.svg?style=flat&quot; alt=&quot;Twitter&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ZIP Foundation is a library to create, read and modify ZIP archive files. It is written in Swift and based on &lt;a href=&quot;https://developer.apple.com/documentation/compression&quot;&gt;Apple&#39;s libcompression&lt;/a&gt; for high performance and energy efficiency. To learn more about the performance characteristics of the framework, you can read &lt;a href=&quot;https://thomas.zoechling.me/journal/2017/07/ZIPFoundation.html&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#zipping-files-and-directories&quot;&gt;Zipping Files and Directories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#unzipping-archives&quot;&gt;Unzipping Archives&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#advanced-usage&quot;&gt;Advanced Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#accessing-individual-entries&quot;&gt;Accessing individual Entries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#creating-archives&quot;&gt;Creating Archives&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#adding-and-removing-entries&quot;&gt;Adding and Removing Entries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#closure-based-reading-and-writing&quot;&gt;Closure based Reading and Writing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#in-memory-archives&quot;&gt;In-Memory Archives&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#progress-tracking-and-cancellation&quot;&gt;Progress Tracking and Cancellation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/weichsel/ZIPFoundation/development/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Modern Swift API&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; High Performance Compression and Decompression&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Large File Support&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; In-Memory Archives&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Deterministic Memory Consumption&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Linux compatibility&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; No 3rd party dependencies (on Apple platforms, zlib on Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Comprehensive Unit and Performance Test Coverage&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Complete Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS 12.0+ / macOS 10.11+ / tvOS 12.0+ / watchOS 2.0+ / visionOS 1.0+&lt;/li&gt; 
 &lt;li&gt;Or Linux with zlib development package&lt;/li&gt; 
 &lt;li&gt;Xcode 11.0&lt;/li&gt; 
 &lt;li&gt;Swift 4.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Swift Package Manager&lt;/h3&gt; 
&lt;p&gt;The Swift Package Manager is a dependency manager integrated with the Swift build system. To learn how to use the Swift Package Manager for your project, please read the &lt;a href=&quot;https://github.com/apple/swift-package-manager/raw/master/Documentation/Usage.md&quot;&gt;official documentation&lt;/a&gt;.&lt;br /&gt; To add ZIP Foundation as a dependency, you have to add it to the &lt;code&gt;dependencies&lt;/code&gt; of your &lt;code&gt;Package.swift&lt;/code&gt; file and refer to that dependency in your &lt;code&gt;target&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;// swift-tools-version:5.0
import PackageDescription
let package = Package(
    name: &quot;&amp;lt;Your Product Name&amp;gt;&quot;,
    dependencies: [
		.package(url: &quot;https://github.com/weichsel/ZIPFoundation.git&quot;, .upToNextMajor(from: &quot;0.9.0&quot;))
    ],
    targets: [
        .target(
		name: &quot;&amp;lt;Your Target Name&amp;gt;&quot;,
		dependencies: [&quot;ZIPFoundation&quot;]),
    ]
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After adding the dependency, you can fetch the library with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ swift package resolve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Carthage&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Carthage/Carthage&quot;&gt;Carthage&lt;/a&gt; is a decentralized dependency manager.&lt;br /&gt; Installation instructions can be found in the project&#39;s &lt;a href=&quot;https://github.com/Carthage/Carthage#installing-carthage&quot;&gt;README file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To integrate ZIPFoundation into your Xcode project using Carthage, you have to add it to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ogdl&quot;&gt;github &quot;weichsel/ZIPFoundation&quot; ~&amp;gt; 0.9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After adding ZIPFoundation to the &lt;code&gt;Cartfile&lt;/code&gt;, you have to fetch the sources by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;carthage update --no-build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The fetched project has to be integrated into your workspace by dragging &lt;code&gt;ZIPFoundation.xcodeproj&lt;/code&gt; to Xcode&#39;s Project Navigator. (See &lt;a href=&quot;https://github.com/Carthage/Carthage#adding-frameworks-to-an-application&quot;&gt;official Carhage docs&lt;/a&gt;.)&lt;/p&gt; 
&lt;h3&gt;CocoaPods&lt;/h3&gt; 
&lt;p&gt;CocoaPods is a dependency manager for Objective-C and Swift.&lt;br /&gt; To learn more about setting up your project for CocoaPods, please refer to the &lt;a href=&quot;https://cocoapods.org/#install&quot;&gt;official documentation&lt;/a&gt;.&lt;br /&gt; To integrate ZIP Foundation into your Xcode project using CocoaPods, you have to add it to your project&#39;s &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;source &#39;https://github.com/CocoaPods/Specs.git&#39;
platform :ios, &#39;10.0&#39;
use_frameworks!
target &#39;&amp;lt;Your Target Name&amp;gt;&#39; do
    pod &#39;ZIPFoundation&#39;, &#39;~&amp;gt; 0.9&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Afterwards, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pod install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;ZIP Foundation provides two high level methods to zip and unzip items. Both are implemented as extension of &lt;code&gt;FileManager&lt;/code&gt;.&lt;br /&gt; The functionality of those methods is modeled after the behavior of the Archive Utility in macOS.&lt;/p&gt; 
&lt;h3&gt;Zipping Files and Directories&lt;/h3&gt; 
&lt;p&gt;To zip a single file you simply pass a file URL representing the item you want to zip and a destination URL to &lt;code&gt;FileManager.zipItem(at sourceURL: URL, to destinationURL: URL)&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let fileManager = FileManager()
let currentWorkingPath = fileManager.currentDirectoryPath
var sourceURL = URL(fileURLWithPath: currentWorkingPath)
sourceURL.appendPathComponent(&quot;file.txt&quot;)
var destinationURL = URL(fileURLWithPath: currentWorkingPath)
destinationURL.appendPathComponent(&quot;archive.zip&quot;)
do {
    try fileManager.zipItem(at: sourceURL, to: destinationURL)
} catch {
    print(&quot;Creation of ZIP archive failed with error:\(error)&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, archives are created without any compression. To create compressed ZIP archives, the optional &lt;code&gt;compressionMethod&lt;/code&gt; parameter has to be set to &lt;code&gt;.deflate&lt;/code&gt;.&lt;br /&gt; The same method also accepts URLs that represent directory items. In that case, &lt;code&gt;zipItem&lt;/code&gt; adds the directory content of &lt;code&gt;sourceURL&lt;/code&gt; to the archive.&lt;br /&gt; By default, a root directory entry named after the &lt;code&gt;lastPathComponent&lt;/code&gt; of the &lt;code&gt;sourceURL&lt;/code&gt; is added to the destination archive. If you don&#39;t want to preserve the parent directory of the source in your archive, you can pass &lt;code&gt;shouldKeepParent: false&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Unzipping Archives&lt;/h3&gt; 
&lt;p&gt;To unzip existing archives, you can use &lt;code&gt;FileManager.unzipItem(at sourceURL: URL, to destinationURL: URL)&lt;/code&gt;.&lt;br /&gt; This recursively extracts all entries within the archive to the destination URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let fileManager = FileManager()
let currentWorkingPath = fileManager.currentDirectoryPath
var sourceURL = URL(fileURLWithPath: currentWorkingPath)
sourceURL.appendPathComponent(&quot;archive.zip&quot;)
var destinationURL = URL(fileURLWithPath: currentWorkingPath)
destinationURL.appendPathComponent(&quot;directory&quot;)
do {
    try fileManager.createDirectory(at: destinationURL, withIntermediateDirectories: true, attributes: nil)
    try fileManager.unzipItem(at: sourceURL, to: destinationURL)
} catch {
    print(&quot;Extraction of ZIP archive failed with error:\(error)&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;p&gt;ZIP Foundation also allows you to individually access specific entries without the need to extract the whole archive. Additionally it comes with the ability to incrementally update archive contents.&lt;/p&gt; 
&lt;h3&gt;Accessing individual Entries&lt;/h3&gt; 
&lt;p&gt;To gain access to specific ZIP entries, you have to initialize an &lt;code&gt;Archive&lt;/code&gt; object with a file URL that represents an existing archive. After doing that, entries can be retrieved via their relative path. &lt;code&gt;Archive&lt;/code&gt; conforms to &lt;code&gt;Sequence&lt;/code&gt; and therefore supports subscripting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let fileManager = FileManager()
let currentWorkingPath = fileManager.currentDirectoryPath
var archiveURL = URL(fileURLWithPath: currentWorkingPath)
archiveURL.appendPathComponent(&quot;archive.zip&quot;)
let archive = try Archive(url: archiveURL, accessMode: .read)
guard let entry = archive[&quot;file.txt&quot;] else {
    return
}
var destinationURL = URL(fileURLWithPath: currentWorkingPath)
destinationURL.appendPathComponent(&quot;out.txt&quot;)
do {
    try archive.extract(entry, to: destinationURL)
} catch {
    print(&quot;Extracting entry from archive failed with error:\(error)&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;extract&lt;/code&gt; method accepts optional parameters that allow you to control compression and memory consumption.&lt;br /&gt; You can find detailed information about that parameters in the method&#39;s documentation.&lt;/p&gt; 
&lt;h3&gt;Creating Archives&lt;/h3&gt; 
&lt;p&gt;To create a new &lt;code&gt;Archive&lt;/code&gt;, pass in a non-existing file URL and &lt;code&gt;AccessMode.create&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let fileManager = FileManager()
let currentWorkingPath = fileManager.currentDirectoryPath
var archiveURL = URL(fileURLWithPath: currentWorkingPath)
archiveURL.appendPathComponent(&quot;newArchive.zip&quot;)
let archive = try Archive(url: archiveURL, accessMode: .create)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding and Removing Entries&lt;/h3&gt; 
&lt;p&gt;You can add or remove entries to/from archives that have been opened with &lt;code&gt;.create&lt;/code&gt; or &lt;code&gt;.update&lt;/code&gt; &lt;code&gt;AccessMode&lt;/code&gt;. To add an entry from an existing file, you can pass a relative path and a base URL to &lt;code&gt;addEntry&lt;/code&gt;. The relative path identifies the entry within the ZIP archive. The relative path and the base URL must form an absolute file URL that points to the file you want to add to the archive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let fileManager = FileManager()
let currentWorkingPath = fileManager.currentDirectoryPath
var archiveURL = URL(fileURLWithPath: currentWorkingPath)
archiveURL.appendPathComponent(&quot;archive.zip&quot;)
let archive = try Archive(url: archiveURL, accessMode: .update)
var fileURL = URL(fileURLWithPath: currentWorkingPath)
fileURL.appendPathComponent(&quot;file.txt&quot;)
do {
    try archive.addEntry(with: fileURL.lastPathComponent, relativeTo: fileURL.deletingLastPathComponent())
} catch {
    print(&quot;Adding entry to ZIP archive failed with error:\(error)&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, the &lt;code&gt;addEntry(with path: String, fileURL: URL)&lt;/code&gt; method can be used to add files that are &lt;em&gt;not&lt;/em&gt; sharing a common base directory. The &lt;code&gt;fileURL&lt;/code&gt; parameter must contain an absolute file URL that points to a file, symlink or directory on an arbitrary file system location.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;addEntry&lt;/code&gt; method accepts several optional parameters that allow you to control compression, memory consumption and file attributes.&lt;br /&gt; You can find detailed information about that parameters in the method&#39;s documentation.&lt;/p&gt; 
&lt;p&gt;To remove an entry, you need a reference to an entry within an archive that you can pass to &lt;code&gt;removeEntry&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;guard let entry = archive[&quot;file.txt&quot;] else {
    return
}
do {
    try archive.remove(entry)
} catch {
    print(&quot;Removing entry from ZIP archive failed with error:\(error)&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Closure based Reading and Writing&lt;/h3&gt; 
&lt;p&gt;ZIP Foundation also allows you to consume ZIP entry contents without writing them to the file system. The &lt;code&gt;extract&lt;/code&gt; method accepts a closure of type &lt;code&gt;Consumer&lt;/code&gt;. This closure is called during extraction until the contents of an entry are exhausted:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;try archive.extract(entry, consumer: { (data) in
    print(data.count)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; passed into the closure contains chunks of the current entry. You can control the chunk size of the entry by providing the optional &lt;code&gt;bufferSize&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;p&gt;You can also add entries from an in-memory data source. To do this you have to provide a closure of type &lt;code&gt;Provider&lt;/code&gt; to the &lt;code&gt;addEntry&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let string = &quot;abcdefghijkl&quot;
guard let data = string.data(using: .utf8) else { return }
try? archive.addEntry(with: &quot;fromMemory.txt&quot;, type: .file, uncompressedSize: Int64(data.count), bufferSize: 4, provider: { (position, size) -&amp;gt; Data in
    // This will be called until `data` is exhausted (3x in this case).
    return data.subdata(in: Data.Index(position)..&amp;lt;Int(position)+size)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The closure is called until enough data has been provided to create an entry of &lt;code&gt;uncompressedSize&lt;/code&gt;. The closure receives &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; arguments so that you can manage the state of your data source.&lt;/p&gt; 
&lt;h3&gt;In-Memory Archives&lt;/h3&gt; 
&lt;p&gt;Besides closure based reading and writing of file based archives, ZIP Foundation also provides capabilities to process in-memory archives. This allows creation or extraction of archives that only reside in RAM. One use case for this functionality is dynamic creation of ZIP archives that are later sent to a client - without performing any disk IO.&lt;/p&gt; 
&lt;p&gt;To work with in-memory archives the &lt;code&gt;init(data: Data, accessMode: AccessMode)&lt;/code&gt; initializer must be used.&lt;br /&gt; To &lt;em&gt;read&lt;/em&gt; or &lt;em&gt;update&lt;/em&gt; an in-memory archive, the passed-in &lt;code&gt;data&lt;/code&gt; must contain a representation of a valid ZIP archive.&lt;br /&gt; To &lt;em&gt;create&lt;/em&gt; an in-memory archive, the &lt;code&gt;data&lt;/code&gt; parameter can be omitted:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-swift&quot;&gt;let string = &quot;Some string!&quot;
let archive = try Archive(accessMode: .create)
guard let data = string.data(using: .utf8) else { return }
try archive.addEntry(with: &quot;inMemory.txt&quot;, type: .file, uncompressedSize: Int64(data.count), bufferSize: 4, provider: { (position, size) -&amp;gt; Data in
    return data.subdata(in: Data.Index(position)..&amp;lt;Int(position)+size)
})
let archiveData = archive.data
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Progress Tracking and Cancellation&lt;/h3&gt; 
&lt;p&gt;All &lt;code&gt;Archive&lt;/code&gt; operations take an optional &lt;code&gt;progress&lt;/code&gt; parameter. By passing in an instance of &lt;a href=&quot;https://developer.apple.com/documentation/foundation/progress&quot;&gt;Progress&lt;/a&gt;, you indicate that you want to track the progress of the current ZIP operation. ZIP Foundation automatically configures the &lt;code&gt;totalUnitCount&lt;/code&gt; of the &lt;code&gt;progress&lt;/code&gt; object and continuously updates its &lt;code&gt;completedUnitCount&lt;/code&gt;.&lt;br /&gt; To get notifications about the completed work of the current operation, you can attach a Key-Value Observer to the &lt;code&gt;fractionCompleted&lt;/code&gt; property of your &lt;code&gt;progress&lt;/code&gt; object.&lt;br /&gt; The ZIP Foundation &lt;code&gt;FileManager&lt;/code&gt; extension methods also accept optional &lt;code&gt;progress&lt;/code&gt; parameters. &lt;code&gt;zipItem&lt;/code&gt; and &lt;code&gt;unzipItem&lt;/code&gt; both automatically create a hierarchy of progress objects that reflect the progress of all items contained in a directory or an archive that contains multiple items.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://developer.apple.com/documentation/foundation/progress/1413832-cancel&quot;&gt;cancel()&lt;/a&gt; method of &lt;code&gt;Progress&lt;/code&gt; can be used to terminate an unfinished ZIP operation. In case of cancelation, the current operation throws an &lt;code&gt;ArchiveError.cancelledOperation&lt;/code&gt; exception.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;ZIP Foundation is written and maintained by &lt;a href=&quot;http://thomas.zoechling.me&quot;&gt;Thomas Zoechling&lt;/a&gt;.&lt;br /&gt; Twitter: &lt;a href=&quot;https://twitter.com/weichsel&quot;&gt;@weichsel&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;ZIP Foundation is released under the MIT License.&lt;br /&gt; See &lt;a href=&quot;https://github.com/weichsel/ZIPFoundation/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrousavy/react-native-vision-camera</title>
      <link>https://github.com/mrousavy/react-native-vision-camera</link>
      <description>&lt;p&gt;📸 A powerful, high-performance React Native Camera library.&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://margelo.com&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./docs/static/img/banner-dark.png&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./docs/static/img/banner-light.png&quot; /&gt; 
  &lt;img alt=&quot;VisionCamera&quot; src=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/docs/static/img/banner-light.png&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;img align=&quot;right&quot; width=&quot;35%&quot; src=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/docs/static/img/example.png&quot; /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;p&gt;VisionCamera is a powerful, high-performance Camera library for React Native. It features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📸 Photo and Video capture&lt;/li&gt; 
 &lt;li&gt;👁️ QR/Barcode scanner&lt;/li&gt; 
 &lt;li&gt;📱 Customizable devices and multi-cameras (&quot;fish-eye&quot; zoom)&lt;/li&gt; 
 &lt;li&gt;🎞️ Customizable resolutions and aspect-ratios (4k/8k images)&lt;/li&gt; 
 &lt;li&gt;⏱️ Customizable FPS (30..240 FPS)&lt;/li&gt; 
 &lt;li&gt;🧩 &lt;a href=&quot;https://react-native-vision-camera.com/docs/guides/frame-processors&quot;&gt;Frame Processors&lt;/a&gt; (JS worklets to run facial recognition, AI object detection, realtime video chats, ...)&lt;/li&gt; 
 &lt;li&gt;🎨 Drawing shapes, text, filters or shaders onto the Camera&lt;/li&gt; 
 &lt;li&gt;🔍 Smooth zooming (Reanimated)&lt;/li&gt; 
 &lt;li&gt;⏯️ Fast pause and resume&lt;/li&gt; 
 &lt;li&gt;🌓 HDR &amp;amp; Night modes&lt;/li&gt; 
 &lt;li&gt;⚡ Custom C++/GPU accelerated video pipeline (OpenGL)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Install VisionCamera from npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm i react-native-vision-camera
cd ios &amp;amp;&amp;amp; pod install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;..and get started by &lt;a href=&quot;https://react-native-vision-camera.com/docs/guides&quot;&gt;setting up permissions&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://react-native-vision-camera.com/docs/guides&quot;&gt;Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://react-native-vision-camera.com/docs/api&quot;&gt;API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/example/&quot;&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://react-native-vision-camera.com/docs/guides/frame-processor-plugins-community&quot;&gt;Frame Processor Plugins&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ShadowLens&lt;/h3&gt; 
&lt;p&gt;To see VisionCamera in action, check out &lt;a href=&quot;https://mrousavy.com/projects/shadowlens&quot;&gt;ShadowLens&lt;/a&gt;!&lt;/p&gt; 
&lt;div&gt; 
 &lt;a href=&quot;https://apps.apple.com/app/shadowlens/id6471849004&quot;&gt; &lt;img height=&quot;40&quot; src=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/docs/static/img/appstore.svg?sanitize=true&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.mrousavy.shadowlens&quot;&gt; &lt;img height=&quot;40&quot; src=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/docs/static/img/googleplay.svg?sanitize=true&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;function App() {
  const device = useCameraDevice(&#39;back&#39;)

  if (device == null) return &amp;lt;NoCameraErrorView /&amp;gt;
  return (
    &amp;lt;Camera
      style={StyleSheet.absoluteFill}
      device={device}
      isActive={true}
    /&amp;gt;
  )
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/example/&quot;&gt;example&lt;/a&gt; app&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Adopting at scale&lt;/h3&gt; 
&lt;a href=&quot;https://github.com/sponsors/mrousavy&quot;&gt; &lt;img align=&quot;right&quot; width=&quot;160&quot; alt=&quot;This library helped you? Consider sponsoring!&quot; src=&quot;https://raw.githubusercontent.com/mrousavy/react-native-vision-camera/main/.github/funding-octocat.svg?sanitize=true&quot; /&gt; &lt;/a&gt; 
&lt;p&gt;VisionCamera is provided &lt;em&gt;as is&lt;/em&gt;, I work on it in my free time.&lt;/p&gt; 
&lt;p&gt;If you&#39;re integrating VisionCamera in a production app, consider &lt;a href=&quot;https://github.com/sponsors/mrousavy&quot;&gt;funding this project&lt;/a&gt; and &lt;a href=&quot;mailto:me@mrousavy.com?subject=Adopting VisionCamera at scale&quot;&gt;contact me&lt;/a&gt; to receive premium enterprise support, help with issues, prioritize bugfixes, request features, help at integrating VisionCamera and/or Frame Processors, and more.&lt;/p&gt; 
&lt;h3&gt;Socials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐦 &lt;a href=&quot;https://twitter.com/mrousavy&quot;&gt;&lt;strong&gt;Follow me on Twitter&lt;/strong&gt;&lt;/a&gt; for updates&lt;/li&gt; 
 &lt;li&gt;📝 &lt;a href=&quot;https://mrousavy.com/blog&quot;&gt;&lt;strong&gt;Check out my blog&lt;/strong&gt;&lt;/a&gt; for examples and experiments&lt;/li&gt; 
 &lt;li&gt;💬 &lt;a href=&quot;https://margelo.com/discord&quot;&gt;&lt;strong&gt;Join the Margelo Community Discord&lt;/strong&gt;&lt;/a&gt; for chatting about VisionCamera&lt;/li&gt; 
 &lt;li&gt;💖 &lt;a href=&quot;https://github.com/sponsors/mrousavy&quot;&gt;&lt;strong&gt;Sponsor me on GitHub&lt;/strong&gt;&lt;/a&gt; to support my work&lt;/li&gt; 
 &lt;li&gt;🍪 &lt;a href=&quot;https://ko-fi.com/mrousavy&quot;&gt;&lt;strong&gt;Buy me a Ko-Fi&lt;/strong&gt;&lt;/a&gt; to support my work&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
