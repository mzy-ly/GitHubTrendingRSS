<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Daily Trending</title>
    <description>Daily Trending of C# in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:31:32 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>nilaoda/N_m3u8DL-RE</title>
      <link>https://github.com/nilaoda/N_m3u8DL-RE</link>
      <description>&lt;p&gt;Cross-Platform, modern and powerful stream downloader for MPD/M3U8/ISM. English/简体中文/繁體中文.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;N_m3u8DL-RE&lt;/h1&gt; 
&lt;p&gt;跨平台的DASH/HLS/MSS下载工具。支持点播、直播(DASH/HLS)。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/nilaoda/N_m3u8DL-RE?label=%E7%82%B9%E8%B5%9E&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/last-commit/nilaoda/N_m3u8DL-RE?label=%E6%9C%80%E8%BF%91%E6%8F%90%E4%BA%A4&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/nilaoda/N_m3u8DL-RE?label=%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/nilaoda/N_m3u8DL-RE?label=%E8%AE%B8%E5%8F%AF%E8%AF%81&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/nilaoda/N_m3u8DL-RE/total?label=%E4%B8%8B%E8%BD%BD%E9%87%8F&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;遇到 BUG 请首先确认软件是否为最新版本（如果是 Release 版本，建议到 &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE/actions&quot;&gt;Actions&lt;/a&gt; 页面下载最新自动构建版本后查看问题是否已经被修复），如果确认版本最新且问题依旧存在，可以到 &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE/issues&quot;&gt;Issues&lt;/a&gt; 中查找是否有人遇到过相关问题，没有的话再进行询问。&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;版本较低的Windows系统自带的终端可能不支持本程序，替代方案：在 &lt;a href=&quot;https://github.com/cmderdev/cmder&quot;&gt;cmder&lt;/a&gt; 中运行。&lt;/p&gt; 
&lt;p&gt;Arch Linux 可以从 AUR 获取：&lt;a href=&quot;https://aur.archlinux.org/packages/n-m3u8dl-re-bin&quot;&gt;n-m3u8dl-re-bin&lt;/a&gt;、&lt;a href=&quot;https://aur.archlinux.org/packages/n-m3u8dl-re-git&quot;&gt;n-m3u8dl-re-git&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Arch Linux 及其衍生版安装 N_m3u8DL-RE 发行版 (该源非本人维护)
yay -Syu n-m3u8dl-re-bin

# Arch Linux 及其衍生版安装 N_m3u8DL-RE 开发版 (该源非本人维护)
yay -Syu n-m3u8dl-re-git
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h1&gt;命令行参数&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;Description:
  N_m3u8DL-RE (Beta version) 20241201

Usage:
  N_m3u8DL-RE &amp;lt;input&amp;gt; [options]

Arguments:
  &amp;lt;input&amp;gt;  链接或文件

Options:
  --tmp-dir &amp;lt;tmp-dir&amp;gt;                                     设置临时文件存储目录
  --save-dir &amp;lt;save-dir&amp;gt;                                   设置输出目录
  --save-name &amp;lt;save-name&amp;gt;                                 设置保存文件名
  --base-url &amp;lt;base-url&amp;gt;                                   设置BaseURL
  --thread-count &amp;lt;number&amp;gt;                                 设置下载线程数 [default: 本机CPU线程数]
  --download-retry-count &amp;lt;number&amp;gt;                         每个分片下载异常时的重试次数 [default: 3]
  --http-request-timeout &amp;lt;seconds&amp;gt;                        HTTP请求的超时时间(秒) [default: 100]
  --force-ansi-console                                    强制认定终端为支持ANSI且可交互的终端
  --no-ansi-color                                         去除ANSI颜色
  --auto-select                                           自动选择所有类型的最佳轨道 [default: False]
  --skip-merge                                            跳过合并分片 [default: False]
  --skip-download                                         跳过下载 [default: False]
  --check-segments-count                                  检测实际下载的分片数量和预期数量是否匹配 [default: True]
  --binary-merge                                          二进制合并 [default: False]
  --use-ffmpeg-concat-demuxer                             使用 ffmpeg 合并时，使用 concat 分离器而非 concat 协议 [default: False]
  --del-after-done                                        完成后删除临时文件 [default: True]
  --no-date-info                                          混流时不写入日期信息 [default: False]
  --no-log                                                关闭日志文件输出 [default: False]
  --write-meta-json                                       解析后的信息是否输出json文件 [default: True]
  --append-url-params                                     将输入Url的Params添加至分片, 对某些网站很有用, 例如 kakao.com [default: False]
  -mt, --concurrent-download                              并发下载已选择的音频、视频和字幕 [default: False]
  -H, --header &amp;lt;header&amp;gt;                                   为HTTP请求设置特定的请求头, 例如:
                                                          -H &quot;Cookie: mycookie&quot; -H &quot;User-Agent: iOS&quot;
  --sub-only                                              只选取字幕轨道 [default: False]
  --sub-format &amp;lt;SRT|VTT&amp;gt;                                  字幕输出类型 [default: SRT]
  --auto-subtitle-fix                                     自动修正字幕 [default: True]
  --ffmpeg-binary-path &amp;lt;PATH&amp;gt;                             ffmpeg可执行程序全路径, 例如 C:\Tools\ffmpeg.exe
  --log-level &amp;lt;DEBUG|ERROR|INFO|OFF|WARN&amp;gt;                 设置日志级别 [default: INFO]
  --ui-language &amp;lt;en-US|zh-CN|zh-TW&amp;gt;                       设置UI语言
  --urlprocessor-args &amp;lt;urlprocessor-args&amp;gt;                 此字符串将直接传递给URL Processor
  --key &amp;lt;key&amp;gt;                                             设置解密密钥, 程序调用mp4decrpyt/shaka-packager/ffmpeg进行解密. 格式:
                                                          --key KID1:KEY1 --key KID2:KEY2
                                                          对于KEY相同的情况可以直接输入 --key KEY
  --key-text-file &amp;lt;key-text-file&amp;gt;                         设置密钥文件,程序将从文件中按KID搜寻KEY以解密.(不建议使用特大文件)
  --decryption-engine &amp;lt;FFMPEG|MP4DECRYPT|SHAKA_PACKAGER&amp;gt;  设置解密时使用的第三方程序 [default: MP4DECRYPT]
  --decryption-binary-path &amp;lt;PATH&amp;gt;                         MP4解密所用工具的全路径, 例如 C:\Tools\mp4decrypt.exe
  --mp4-real-time-decryption                              实时解密MP4分片 [default: False]
  -R, --max-speed &amp;lt;SPEED&amp;gt;                                 设置限速，单位支持 Mbps 或 Kbps，如：15M 100K
  -M, --mux-after-done &amp;lt;OPTIONS&amp;gt;                          所有工作完成时尝试混流分离的音视频. 输入 &quot;--morehelp mux-after-done&quot; 以查看详细信息
  --custom-hls-method &amp;lt;METHOD&amp;gt;                            指定HLS加密方式 (AES_128|AES_128_ECB|CENC|CHACHA20|NONE|SAMPLE_AES|SAMPLE_AES_CTR|UNKNOWN)
  --custom-hls-key &amp;lt;FILE|HEX|BASE64&amp;gt;                      指定HLS解密KEY. 可以是文件, HEX或Base64
  --custom-hls-iv &amp;lt;FILE|HEX|BASE64&amp;gt;                       指定HLS解密IV. 可以是文件, HEX或Base64
  --use-system-proxy                                      使用系统默认代理 [default: True]
  --custom-proxy &amp;lt;URL&amp;gt;                                    设置请求代理, 如 http://127.0.0.1:8888
  --custom-range &amp;lt;RANGE&amp;gt;                                  仅下载部分分片. 输入 &quot;--morehelp custom-range&quot; 以查看详细信息
  --task-start-at &amp;lt;yyyyMMddHHmmss&amp;gt;                        在此时间之前不会开始执行任务
  --live-perform-as-vod                                   以点播方式下载直播流 [default: False]
  --live-real-time-merge                                  录制直播时实时合并 [default: False]
  --live-keep-segments                                    录制直播并开启实时合并时依然保留分片 [default: True]
  --live-pipe-mux                                         录制直播并开启实时合并时通过管道+ffmpeg实时混流到TS文件 [default: False]
  --live-fix-vtt-by-audio                                 通过读取音频文件的起始时间修正VTT字幕 [default: False]
  --live-record-limit &amp;lt;HH:mm:ss&amp;gt;                          录制直播时的录制时长限制
  --live-wait-time &amp;lt;SEC&amp;gt;                                  手动设置直播列表刷新间隔
  --live-take-count &amp;lt;NUM&amp;gt;                                 手动设置录制直播时首次获取分片的数量 [default: 16]
  --mux-import &amp;lt;OPTIONS&amp;gt;                                  混流时引入外部媒体文件. 输入 &quot;--morehelp mux-import&quot; 以查看详细信息
  -sv, --select-video &amp;lt;OPTIONS&amp;gt;                           通过正则表达式选择符合要求的视频流. 输入 &quot;--morehelp select-video&quot; 以查看详细信息
  -sa, --select-audio &amp;lt;OPTIONS&amp;gt;                           通过正则表达式选择符合要求的音频流. 输入 &quot;--morehelp select-audio&quot; 以查看详细信息
  -ss, --select-subtitle &amp;lt;OPTIONS&amp;gt;                        通过正则表达式选择符合要求的字幕流. 输入 &quot;--morehelp select-subtitle&quot; 以查看详细信息
  -dv, --drop-video &amp;lt;OPTIONS&amp;gt;                             通过正则表达式去除符合要求的视频流.
  -da, --drop-audio &amp;lt;OPTIONS&amp;gt;                             通过正则表达式去除符合要求的音频流.
  -ds, --drop-subtitle &amp;lt;OPTIONS&amp;gt;                          通过正则表达式去除符合要求的字幕流.
  --ad-keyword &amp;lt;REG&amp;gt;                                      设置广告分片的URL关键字(正则表达式)
  --disable-update-check                                  禁用版本更新检测 [default: False]
  --allow-hls-multi-ext-map                               允许HLS中的多个#EXT-X-MAP(实验性) [default: False]
  --morehelp &amp;lt;OPTION&amp;gt;                                     查看某个选项的详细帮助信息
  --version                                               Show version information
  -?, -h, --help                                          Show help and usage information
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看More Help&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;More Help:

  --mux-after-done

所有工作完成时尝试混流分离的音视频. 你能够以:分隔形式指定如下参数:

* format=FORMAT: 指定混流容器 mkv, mp4
* muxer=MUXER: 指定混流程序 ffmpeg, mkvmerge (默认: ffmpeg)
* bin_path=PATH: 指定程序路径 (默认: 自动寻找)
* skip_sub=BOOL: 是否忽略字幕文件 (默认: false)
* keep=BOOL: 混流完成是否保留文件 true, false (默认: false)

例如:
# 混流为mp4容器
-M format=mp4
# 使用mkvmerge, 自动寻找程序
-M format=mkv:muxer=mkvmerge
# 使用mkvmerge, 自定义程序路径
-M format=mkv:muxer=mkvmerge:bin_path=&quot;C\:\Program Files\MKVToolNix\mkvmerge.exe&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code&gt;More Help:

  --mux-import

混流时引入外部媒体文件. 你能够以:分隔形式指定如下参数:

* path=PATH: 指定媒体文件路径
* lang=CODE: 指定媒体文件语言代码 (非必须)
* name=NAME: 指定媒体文件描述信息 (非必须)

例如:
# 引入外部字幕
--mux-import path=zh-Hans.srt:lang=chi:name=&quot;中文 (简体)&quot;
# 引入外部音轨+字幕
--mux-import path=&quot;D\:\media\atmos.m4a&quot;:lang=eng:name=&quot;English Description Audio&quot; --mux-import path=&quot;D\:\media\eng.vtt&quot;:lang=eng:name=&quot;English (Description)&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code&gt;More Help:

  --select-video

通过正则表达式选择符合要求的视频流. 你能够以:分隔形式指定如下参数:

id=REGEX:lang=REGEX:name=REGEX:codecs=REGEX:res=REGEX:frame=REGEX
segsMin=number:segsMax=number:ch=REGEX:range=REGEX:url=REGEX
plistDurMin=hms:plistDurMax=hms:for=FOR

* for=FOR: 选择方式. best[number], worst[number], all (默认: best)

例如:
# 选择最佳视频
-sv best
# 选择4K+HEVC视频
-sv res=&quot;3840*&quot;:codecs=hvc1:for=best
# 选择长度大于1小时20分钟30秒的视频
-sv plistDurMin=&quot;1h20m30s&quot;:for=best
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code&gt;More Help:

  --select-audio

通过正则表达式选择符合要求的音频流. 参考 --select-video

例如:
# 选择所有音频
-sa all
# 选择最佳英语音轨
-sa lang=en:for=best
# 选择最佳的2条英语(或日语)音轨
-sa lang=&quot;ja|en&quot;:for=best2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code&gt;More Help:

  --select-subtitle

通过正则表达式选择符合要求的字幕流. 参考 --select-video

例如:
# 选择所有字幕
-ss all
# 选择所有带有&quot;中文&quot;的字幕
-ss name=&quot;中文&quot;:for=all
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code&gt;More Help:

  --custom-range

下载点播内容时, 仅下载部分分片.

例如:
# 下载[0,10]共11个分片
--custom-range 0-10
# 下载从序号10开始的后续分片
--custom-range 10-
# 下载前100个分片
--custom-range -99
# 下载第5分钟到20分钟的内容
--custom-range 05:00-20:00
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h1&gt;运行截图&lt;/h1&gt; 
&lt;h2&gt;点播&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nilaoda/N_m3u8DL-RE/main/img/RE.gif&quot; alt=&quot;RE1&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;还可以并行下载+自动混流&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/nilaoda/N_m3u8DL-RE/main/img/RE2.gif&quot; alt=&quot;RE2&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;直播&lt;/h2&gt; 
&lt;p&gt;录制TS直播源：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://pan.iqiyi.com/file/paopao/W0LfmaMRvuA--uCdOpZ1cldM5JCVhMfIm7KFqr4oKCz80jLn0bBb-9PWmeCFZ-qHpAaQydQ1zk-CHYT_UbRLtw.gif&quot;&gt;click to show gif&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;录制MPD直播源：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://pan.iqiyi.com/file/paopao/nmAV5MOh0yIyHhnxdgM_6th_p2nqrFsM4k-o3cUPwUa8Eh8QOU4uyPkLa_BlBrMa3GBnKWSk8rOaUwbsjKN14g.gif&quot;&gt;click to show gif&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;录制过程中，借助ffmpeg完成对音视频的实时混流&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ffmpeg -readrate 1 -i 2022-09-21_19-54-42_V.mp4 -i 2022-09-21_19-54-42_V.chi.m4a -c copy 2022-09-21_19-54-42_V.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在新版本(&amp;gt;=v0.1.5)中，可以尝试开启 &lt;code&gt;live-pipe-mux&lt;/code&gt; 来代替以上命令&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;特别注意：如果网络环境不够稳定，请不要开启 &lt;code&gt;live-pipe-mux&lt;/code&gt;。管道内数据读取由 ffmpeg 负责，在某些环境下容易丢失直播数据&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在新版本(&amp;gt;=v0.1.8)中，能够通过设置环境变量 &lt;code&gt;RE_LIVE_PIPE_OPTIONS&lt;/code&gt; 来改变 &lt;code&gt;live-pipe-mux&lt;/code&gt; 时 ffmpeg 的某些选项： &lt;a href=&quot;https://github.com/nilaoda/N_m3u8DL-RE/issues/162#issuecomment-1592462532&quot;&gt;https://github.com/nilaoda/N_m3u8DL-RE/issues/162#issuecomment-1592462532&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;赞助&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/nilaoda&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/default-orange.png&quot; alt=&quot;Buy Me A Coffee&quot; height=&quot;41&quot; width=&quot;174&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Build intelligent AI agents and multi-agent systems with this enterprise-ready orchestration framework&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Semantic Kernel?&lt;/h2&gt; 
&lt;p&gt;Semantic Kernel is a model-agnostic SDK that empowers developers to build, orchestrate, and deploy AI agents and multi-agent systems. Whether you&#39;re building a simple chatbot or a complex multi-agent workflow, Semantic Kernel provides the tools you need with enterprise-grade reliability and flexibility.&lt;/p&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: 3.10+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.NET&lt;/strong&gt;: .NET 8.0+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Java&lt;/strong&gt;: JDK 17+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OS Support&lt;/strong&gt;: Windows, macOS, Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Model Flexibility&lt;/strong&gt;: Connect to any LLM with built-in support for &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, &lt;a href=&quot;https://www.nvidia.com/en-us/ai-data-science/products/nim-microservices/&quot;&gt;NVidia&lt;/a&gt; and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent Framework&lt;/strong&gt;: Build modular AI agents with access to tools/plugins, memory, and planning capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Agent Systems&lt;/strong&gt;: Orchestrate complex workflows with collaborating specialist agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugin Ecosystem&lt;/strong&gt;: Extend with native code functions, prompt templates, OpenAPI specs, or Model Context Protocol (MCP)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vector DB Support&lt;/strong&gt;: Seamless integration with &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure AI Search&lt;/a&gt;, &lt;a href=&quot;https://www.elastic.co/&quot;&gt;Elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multimodal Support&lt;/strong&gt;: Process text, vision, and audio inputs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Local Deployment&lt;/strong&gt;: Run with &lt;a href=&quot;https://ollama.com/&quot;&gt;Ollama&lt;/a&gt;, &lt;a href=&quot;https://lmstudio.ai/&quot;&gt;LMStudio&lt;/a&gt;, or &lt;a href=&quot;https://onnx.ai/&quot;&gt;ONNX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Process Framework&lt;/strong&gt;: Model complex business processes with a structured workflow approach&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Ready&lt;/strong&gt;: Built for observability, security, and stable APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;First, set the environment variable for your AI Services:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Azure OpenAI:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export AZURE_OPENAI_API_KEY=AAA....
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;or OpenAI directly:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export OPENAI_API_KEY=sk-...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install semantic-kernel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package Microsoft.SemanticKernel
dotnet add package Microsoft.SemanticKernel.Agents.Core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Java&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Basic Agent - Python&lt;/h3&gt; 
&lt;p&gt;Create a simple assistant that responds to user prompts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from semantic_kernel.agents import ChatCompletionAgent
from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion

async def main():
    # Initialize a chat agent with basic instructions
    agent = ChatCompletionAgent(
        service=AzureChatCompletion(),
        name=&quot;SK-Assistant&quot;,
        instructions=&quot;You are a helpful assistant.&quot;,
    )

    # Get a response to a user message
    response = await agent.get_response(messages=&quot;Write a haiku about Semantic Kernel.&quot;)
    print(response.content)

asyncio.run(main()) 

# Output:
# Language&#39;s essence,
# Semantic threads intertwine,
# Meaning&#39;s core revealed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Basic Agent - .NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Microsoft.SemanticKernel;
using Microsoft.SemanticKernel.Agents;

var builder = Kernel.CreateBuilder();
builder.AddAzureOpenAIChatCompletion(
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_DEPLOYMENT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_ENDPOINT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_API_KEY&quot;)
                );
var kernel = builder.Build();

ChatCompletionAgent agent =
    new()
    {
        Name = &quot;SK-Agent&quot;,
        Instructions = &quot;You are a helpful assistant.&quot;,
        Kernel = kernel,
    };

await foreach (AgentResponseItem&amp;lt;ChatMessageContent&amp;gt; response 
    in agent.InvokeAsync(&quot;Write a haiku about Semantic Kernel.&quot;))
{
    Console.WriteLine(response.Message);
}

// Output:
// Language&#39;s essence,
// Semantic threads intertwine,
// Meaning&#39;s core revealed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Agent with Plugins - Python&lt;/h3&gt; 
&lt;p&gt;Enhance your agent with custom tools (plugins) and structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from typing import Annotated
from pydantic import BaseModel
from semantic_kernel.agents import ChatCompletionAgent
from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion, OpenAIChatPromptExecutionSettings
from semantic_kernel.functions import kernel_function, KernelArguments

class MenuPlugin:
    @kernel_function(description=&quot;Provides a list of specials from the menu.&quot;)
    def get_specials(self) -&amp;gt; Annotated[str, &quot;Returns the specials from the menu.&quot;]:
        return &quot;&quot;&quot;
        Special Soup: Clam Chowder
        Special Salad: Cobb Salad
        Special Drink: Chai Tea
        &quot;&quot;&quot;

    @kernel_function(description=&quot;Provides the price of the requested menu item.&quot;)
    def get_item_price(
        self, menu_item: Annotated[str, &quot;The name of the menu item.&quot;]
    ) -&amp;gt; Annotated[str, &quot;Returns the price of the menu item.&quot;]:
        return &quot;$9.99&quot;

class MenuItem(BaseModel):
    price: float
    name: str

async def main():
    # Configure structured output format
    settings = OpenAIChatPromptExecutionSettings()
    settings.response_format = MenuItem

    # Create agent with plugin and settings
    agent = ChatCompletionAgent(
        service=AzureChatCompletion(),
        name=&quot;SK-Assistant&quot;,
        instructions=&quot;You are a helpful assistant.&quot;,
        plugins=[MenuPlugin()],
        arguments=KernelArguments(settings)
    )

    response = await agent.get_response(messages=&quot;What is the price of the soup special?&quot;)
    print(response.content)

    # Output:
    # The price of the Clam Chowder, which is the soup special, is $9.99.

asyncio.run(main()) 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Agent with Plugin - .NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using System.ComponentModel;
using Microsoft.SemanticKernel;
using Microsoft.SemanticKernel.Agents;
using Microsoft.SemanticKernel.ChatCompletion;

var builder = Kernel.CreateBuilder();
builder.AddAzureOpenAIChatCompletion(
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_DEPLOYMENT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_ENDPOINT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_API_KEY&quot;)
                );
var kernel = builder.Build();

kernel.Plugins.Add(KernelPluginFactory.CreateFromType&amp;lt;MenuPlugin&amp;gt;());

ChatCompletionAgent agent =
    new()
    {
        Name = &quot;SK-Assistant&quot;,
        Instructions = &quot;You are a helpful assistant.&quot;,
        Kernel = kernel,
        Arguments = new KernelArguments(new PromptExecutionSettings() { FunctionChoiceBehavior = FunctionChoiceBehavior.Auto() })

    };

await foreach (AgentResponseItem&amp;lt;ChatMessageContent&amp;gt; response 
    in agent.InvokeAsync(&quot;What is the price of the soup special?&quot;))
{
    Console.WriteLine(response.Message);
}

sealed class MenuPlugin
{
    [KernelFunction, Description(&quot;Provides a list of specials from the menu.&quot;)]
    public string GetSpecials() =&amp;gt;
        &quot;&quot;&quot;
        Special Soup: Clam Chowder
        Special Salad: Cobb Salad
        Special Drink: Chai Tea
        &quot;&quot;&quot;;

    [KernelFunction, Description(&quot;Provides the price of the requested menu item.&quot;)]
    public string GetItemPrice(
        [Description(&quot;The name of the menu item.&quot;)]
        string menuItem) =&amp;gt;
        &quot;$9.99&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multi-Agent System - Python&lt;/h3&gt; 
&lt;p&gt;Build a system of specialized agents that can collaborate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from semantic_kernel.agents import ChatCompletionAgent, ChatHistoryAgentThread
from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion, OpenAIChatCompletion

billing_agent = ChatCompletionAgent(
    service=AzureChatCompletion(), 
    name=&quot;BillingAgent&quot;, 
    instructions=&quot;You handle billing issues like charges, payment methods, cycles, fees, discrepancies, and payment failures.&quot;
)

refund_agent = ChatCompletionAgent(
    service=AzureChatCompletion(),
    name=&quot;RefundAgent&quot;,
    instructions=&quot;Assist users with refund inquiries, including eligibility, policies, processing, and status updates.&quot;,
)

triage_agent = ChatCompletionAgent(
    service=OpenAIChatCompletion(),
    name=&quot;TriageAgent&quot;,
    instructions=&quot;Evaluate user requests and forward them to BillingAgent or RefundAgent for targeted assistance.&quot;
    &quot; Provide the full answer to the user containing any information from the agents&quot;,
    plugins=[billing_agent, refund_agent],
)

thread: ChatHistoryAgentThread = None

async def main() -&amp;gt; None:
    print(&quot;Welcome to the chat bot!\n  Type &#39;exit&#39; to exit.\n  Try to get some billing or refund help.&quot;)
    while True:
        user_input = input(&quot;User:&amp;gt; &quot;)

        if user_input.lower().strip() == &quot;exit&quot;:
            print(&quot;\n\nExiting chat...&quot;)
            return False

        response = await triage_agent.get_response(
            messages=user_input,
            thread=thread,
        )

        if response:
            print(f&quot;Agent :&amp;gt; {response}&quot;)

# Agent :&amp;gt; I understand that you were charged twice for your subscription last month, and I&#39;m here to assist you with resolving this issue. Here’s what we need to do next:

# 1. **Billing Inquiry**:
#    - Please provide the email address or account number associated with your subscription, the date(s) of the charges, and the amount charged. This will allow the billing team to investigate the discrepancy in the charges.

# 2. **Refund Process**:
#    - For the refund, please confirm your subscription type and the email address associated with your account.
#    - Provide the dates and transaction IDs for the charges you believe were duplicated.

# Once we have these details, we will be able to:

# - Check your billing history for any discrepancies.
# - Confirm any duplicate charges.
# - Initiate a refund for the duplicate payment if it qualifies. The refund process usually takes 5-10 business days after approval.

# Please provide the necessary details so we can proceed with resolving this issue for you.


if __name__ == &quot;__main__&quot;:
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Where to Go Next&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 Try our &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started Guide&lt;/a&gt; or learn about &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/frameworks/agent/&quot;&gt;Building Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 Explore over 100 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 Learn about core Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;API References&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Common Issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication Errors&lt;/strong&gt;: Check that your API key environment variables are correctly set&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Availability&lt;/strong&gt;: Verify your Azure OpenAI deployment or OpenAI model access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting Help&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check our &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/issues&quot;&gt;GitHub issues&lt;/a&gt; for known problems&lt;/li&gt; 
 &lt;li&gt;Search the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt; for solutions&lt;/li&gt; 
 &lt;li&gt;Include your SDK version and full error messages when asking for help&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to the SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dockersamples/example-voting-app</title>
      <link>https://github.com/dockersamples/example-voting-app</link>
      <description>&lt;p&gt;Example distributed app composed of multiple containers for Docker, Compose, Swarm, and Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Example Voting App&lt;/h1&gt; 
&lt;p&gt;A simple distributed application running across multiple Docker containers.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Download &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;Docker Desktop&lt;/a&gt; for Mac or Windows. &lt;a href=&quot;https://docs.docker.com/compose&quot;&gt;Docker Compose&lt;/a&gt; will be automatically installed. On Linux, make sure you have the latest version of &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Compose&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This solution uses Python, Node.js, .NET, with Redis for messaging and Postgres for storage.&lt;/p&gt; 
&lt;p&gt;Run in this directory to build and run the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;vote&lt;/code&gt; app will be running at &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;, and the &lt;code&gt;results&lt;/code&gt; will be at &lt;a href=&quot;http://localhost:8081&quot;&gt;http://localhost:8081&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternately, if you want to run it on a &lt;a href=&quot;https://docs.docker.com/engine/swarm/&quot;&gt;Docker Swarm&lt;/a&gt;, first make sure you have a swarm. If you don&#39;t, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker swarm init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once you have your swarm, in this directory run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker stack deploy --compose-file docker-stack.yml vote
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Run the app in Kubernetes&lt;/h2&gt; 
&lt;p&gt;The folder k8s-specifications contains the YAML specifications of the Voting App&#39;s services.&lt;/p&gt; 
&lt;p&gt;Run the following command to create the deployments and services. Note it will create these resources in your current namespace (&lt;code&gt;default&lt;/code&gt; if you haven&#39;t changed it.)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;kubectl create -f k8s-specifications/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;vote&lt;/code&gt; web app is then available on port 31000 on each host of the cluster, the &lt;code&gt;result&lt;/code&gt; web app is available on port 31001.&lt;/p&gt; 
&lt;p&gt;To remove them, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;kubectl delete -f k8s-specifications/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dockersamples/example-voting-app/main/architecture.excalidraw.png&quot; alt=&quot;Architecture diagram&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A front-end web app in &lt;a href=&quot;https://raw.githubusercontent.com/dockersamples/example-voting-app/main/vote&quot;&gt;Python&lt;/a&gt; which lets you vote between two options&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://hub.docker.com/_/redis/&quot;&gt;Redis&lt;/a&gt; which collects new votes&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/dockersamples/example-voting-app/main/worker/&quot;&gt;.NET&lt;/a&gt; worker which consumes votes and stores them in…&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://hub.docker.com/_/postgres/&quot;&gt;Postgres&lt;/a&gt; database backed by a Docker volume&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/dockersamples/example-voting-app/main/result&quot;&gt;Node.js&lt;/a&gt; web app which shows the results of the voting in real time&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Notes&lt;/h2&gt; 
&lt;p&gt;The voting application only accepts one vote per client browser. It does not register additional votes if a vote has already been submitted from a client.&lt;/p&gt; 
&lt;p&gt;This isn&#39;t an example of a properly architected perfectly designed distributed app... it&#39;s just a simple example of the various types of pieces and languages you might see (queues, persistent data, etc), and how to deal with them in Docker at a basic level.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/csharp-sdk</title>
      <link>https://github.com/modelcontextprotocol/csharp-sdk</link>
      <description>&lt;p&gt;The official C# SDK for Model Context Protocol servers and clients. Maintained in collaboration with Microsoft.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP C# SDK&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/ModelContextProtocol.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The official C# SDK for the &lt;a href=&quot;https://modelcontextprotocol.io/&quot;&gt;Model Context Protocol&lt;/a&gt;, enabling .NET applications, services, and libraries to implement and interact with MCP clients and servers. Please visit our &lt;a href=&quot;https://modelcontextprotocol.github.io/csharp-sdk/api/ModelContextProtocol.html&quot;&gt;API documentation&lt;/a&gt; for more details on available functionality.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;This SDK consists of three main packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol/absoluteLatest&quot;&gt;ModelContextProtocol&lt;/a&gt;&lt;/strong&gt; &lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/ModelContextProtocol.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot; /&gt;&lt;/a&gt; - The main package with hosting and dependency injection extensions. This is the right fit for most projects that don&#39;t need HTTP server capabilities. This README serves as documentation for this package.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol.AspNetCore/absoluteLatest&quot;&gt;ModelContextProtocol.AspNetCore&lt;/a&gt;&lt;/strong&gt; &lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol.AspNetCore/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/ModelContextProtocol.AspNetCore.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot; /&gt;&lt;/a&gt; - The library for HTTP-based MCP servers. &lt;a href=&quot;https://raw.githubusercontent.com/modelcontextprotocol/csharp-sdk/main/src/ModelContextProtocol.AspNetCore/README.md&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol.Core/absoluteLatest&quot;&gt;ModelContextProtocol.Core&lt;/a&gt;&lt;/strong&gt; &lt;a href=&quot;https://www.nuget.org/packages/ModelContextProtocol.Core/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/ModelContextProtocol.Core.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot; /&gt;&lt;/a&gt; - For people who only need to use the client or low-level server APIs and want the minimum number of dependencies. &lt;a href=&quot;https://raw.githubusercontent.com/modelcontextprotocol/csharp-sdk/main/src/ModelContextProtocol.Core/README.md&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This project is in preview; breaking changes can be introduced without prior notice.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;About MCP&lt;/h2&gt; 
&lt;p&gt;The Model Context Protocol (MCP) is an open protocol that standardizes how applications provide context to Large Language Models (LLMs). It enables secure integration between LLMs and various data sources and tools.&lt;/p&gt; 
&lt;p&gt;For more information about MCP:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelcontextprotocol.io/&quot;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spec.modelcontextprotocol.io/&quot;&gt;Protocol Specification&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/modelcontextprotocol&quot;&gt;GitHub Organization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To get started, install the package from NuGet&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet add package ModelContextProtocol --prerelease
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started (Client)&lt;/h2&gt; 
&lt;p&gt;To get started writing a client, the &lt;code&gt;McpClientFactory.CreateAsync&lt;/code&gt; method is used to instantiate and connect an &lt;code&gt;IMcpClient&lt;/code&gt; to a server. Once you have an &lt;code&gt;IMcpClient&lt;/code&gt;, you can interact with it, such as to enumerate all available tools and invoke tools.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var clientTransport = new StdioClientTransport(new StdioClientTransportOptions
{
    Name = &quot;Everything&quot;,
    Command = &quot;npx&quot;,
    Arguments = [&quot;-y&quot;, &quot;@modelcontextprotocol/server-everything&quot;],
});

var client = await McpClientFactory.CreateAsync(clientTransport);

// Print the list of tools available from the server.
foreach (var tool in await client.ListToolsAsync())
{
    Console.WriteLine($&quot;{tool.Name} ({tool.Description})&quot;);
}

// Execute a tool (this would normally be driven by LLM tool invocations).
var result = await client.CallToolAsync(
    &quot;echo&quot;,
    new Dictionary&amp;lt;string, object?&amp;gt;() { [&quot;message&quot;] = &quot;Hello MCP!&quot; },
    cancellationToken:CancellationToken.None);

// echo always returns one and only one text content object
Console.WriteLine(result.Content.First(c =&amp;gt; c.Type == &quot;text&quot;).Text);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find samples demonstrating how to use ModelContextProtocol with an LLM SDK in the &lt;a href=&quot;https://raw.githubusercontent.com/modelcontextprotocol/csharp-sdk/main/samples&quot;&gt;samples&lt;/a&gt; directory, and also refer to the &lt;a href=&quot;https://raw.githubusercontent.com/modelcontextprotocol/csharp-sdk/main/tests/ModelContextProtocol.Tests&quot;&gt;tests&lt;/a&gt; project for more examples. Additional examples and documentation will be added as in the near future.&lt;/p&gt; 
&lt;p&gt;Clients can connect to any MCP server, not just ones created using this library. The protocol is designed to be server-agnostic, so you can use this library to connect to any compliant server.&lt;/p&gt; 
&lt;p&gt;Tools can be easily exposed for immediate use by &lt;code&gt;IChatClient&lt;/code&gt;s, because &lt;code&gt;McpClientTool&lt;/code&gt; inherits from &lt;code&gt;AIFunction&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Get available functions.
IList&amp;lt;McpClientTool&amp;gt; tools = await client.ListToolsAsync();

// Call the chat client using the tools.
IChatClient chatClient = ...;
var response = await chatClient.GetResponseAsync(
    &quot;your prompt here&quot;,
    new() { Tools = [.. tools] },
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started (Server)&lt;/h2&gt; 
&lt;p&gt;Here is an example of how to create an MCP server and register all tools from the current application. It includes a simple echo tool as an example (this is included in the same file here for easy of copy and paste, but it needn&#39;t be in the same file... the employed overload of &lt;code&gt;WithTools&lt;/code&gt; examines the current assembly for classes with the &lt;code&gt;McpServerToolType&lt;/code&gt; attribute, and registers all methods with the &lt;code&gt;McpTool&lt;/code&gt; attribute as tools.)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet add package ModelContextProtocol --prerelease
dotnet add package Microsoft.Extensions.Hosting
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using ModelContextProtocol.Server;
using System.ComponentModel;

var builder = Host.CreateApplicationBuilder(args);
builder.Logging.AddConsole(consoleLogOptions =&amp;gt;
{
    // Configure all logs to go to stderr
    consoleLogOptions.LogToStandardErrorThreshold = LogLevel.Trace;
});
builder.Services
    .AddMcpServer()
    .WithStdioServerTransport()
    .WithToolsFromAssembly();
await builder.Build().RunAsync();

[McpServerToolType]
public static class EchoTool
{
    [McpServerTool, Description(&quot;Echoes the message back to the client.&quot;)]
    public static string Echo(string message) =&amp;gt; $&quot;hello {message}&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Tools can have the &lt;code&gt;IMcpServer&lt;/code&gt; representing the server injected via a parameter to the method, and can use that for interaction with the connected client. Similarly, arguments may be injected via dependency injection. For example, this tool will use the supplied &lt;code&gt;IMcpServer&lt;/code&gt; to make sampling requests back to the client in order to summarize content it downloads from the specified url via an &lt;code&gt;HttpClient&lt;/code&gt; injected via dependency injection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[McpServerTool(Name = &quot;SummarizeContentFromUrl&quot;), Description(&quot;Summarizes content downloaded from a specific URI&quot;)]
public static async Task&amp;lt;string&amp;gt; SummarizeDownloadedContent(
    IMcpServer thisServer,
    HttpClient httpClient,
    [Description(&quot;The url from which to download the content to summarize&quot;)] string url,
    CancellationToken cancellationToken)
{
    string content = await httpClient.GetStringAsync(url);

    ChatMessage[] messages =
    [
        new(ChatRole.User, &quot;Briefly summarize the following downloaded content:&quot;),
        new(ChatRole.User, content),
    ];
    
    ChatOptions options = new()
    {
        MaxOutputTokens = 256,
        Temperature = 0.3f,
    };

    return $&quot;Summary: {await thisServer.AsSamplingChatClient().GetResponseAsync(messages, options, cancellationToken)}&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Prompts can be exposed in a similar manner, using &lt;code&gt;[McpServerPrompt]&lt;/code&gt;, e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[McpServerPromptType]
public static class MyPrompts
{
    [McpServerPrompt, Description(&quot;Creates a prompt to summarize the provided message.&quot;)]
    public static ChatMessage Summarize([Description(&quot;The content to summarize&quot;)] string content) =&amp;gt;
        new(ChatRole.User, $&quot;Please summarize this content into a single sentence: {content}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More control is also available, with fine-grained control over configuring the server and how it should handle client requests. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using ModelContextProtocol;
using ModelContextProtocol.Protocol;
using ModelContextProtocol.Server;
using System.Text.Json;

McpServerOptions options = new()
{
    ServerInfo = new Implementation { Name = &quot;MyServer&quot;, Version = &quot;1.0.0&quot; },
    Capabilities = new ServerCapabilities
    {
        Tools = new ToolsCapability
        {
            ListToolsHandler = (request, cancellationToken) =&amp;gt;
                ValueTask.FromResult(new ListToolsResult
                {
                    Tools =
                    [
                        new Tool
                        {
                            Name = &quot;echo&quot;,
                            Description = &quot;Echoes the input back to the client.&quot;,
                            InputSchema = JsonSerializer.Deserialize&amp;lt;JsonElement&amp;gt;(&quot;&quot;&quot;
                                {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;message&quot;: {
                                        &quot;type&quot;: &quot;string&quot;,
                                        &quot;description&quot;: &quot;The input to echo back&quot;
                                      }
                                    },
                                    &quot;required&quot;: [&quot;message&quot;]
                                }
                                &quot;&quot;&quot;),
                        }
                    ]
                }),

            CallToolHandler = (request, cancellationToken) =&amp;gt;
            {
                if (request.Params?.Name == &quot;echo&quot;)
                {
                    if (request.Params.Arguments?.TryGetValue(&quot;message&quot;, out var message) is not true)
                    {
                        throw new McpException(&quot;Missing required argument &#39;message&#39;&quot;);
                    }

                    return ValueTask.FromResult(new CallToolResult
                    {
                        Content = [new TextContentBlock { Text = $&quot;Echo: {message}&quot;, Type = &quot;text&quot; }]
                    });
                }

                throw new McpException($&quot;Unknown tool: &#39;{request.Params?.Name}&#39;&quot;);
            },
        }
    },
};

await using IMcpServer server = McpServerFactory.Create(new StdioServerTransport(&quot;MyServer&quot;), options);
await server.RunAsync();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;The starting point for this library was a project called &lt;a href=&quot;https://github.com/PederHP/mcpdotnet&quot;&gt;mcpdotnet&lt;/a&gt;, initiated by &lt;a href=&quot;https://github.com/PederHP&quot;&gt;Peder Holdgaard Pedersen&lt;/a&gt;. We are grateful for the work done by Peder and other contributors to that repository, which created a solid foundation for this library.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/modelcontextprotocol/csharp-sdk/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BepInEx/BepInEx</title>
      <link>https://github.com/BepInEx/BepInEx</link>
      <description>&lt;p&gt;Unity / XNA game patcher and plugin framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://avatars2.githubusercontent.com/u/39589027?s=256&quot; /&gt; &lt;/p&gt; 
&lt;h1&gt;BepInEx&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/bepinex/bepinex/total.svg?sanitize=true&quot; alt=&quot;Github All Releases&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/release/bepinex/bepinex.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt; &lt;a href=&quot;https://discord.gg/MpFEDAg&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/7288322/34429117-c74dbd12-ecb8-11e7-896d-46369cd0de5b.png&quot; alt=&quot;BepInEx Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bepis Injector Extensible&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;BepInEx is a plugin / modding framework for Unity Mono, IL2CPP and .NET framework games (XNA, FNA, MonoGame, etc.)&lt;/p&gt; 
&lt;p&gt;(Currently only Unity Mono has stable releases)&lt;/p&gt; 
&lt;h4&gt;Platform compatibility chart&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;OSX&lt;/th&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;ARM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity Mono&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity IL2CPP&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;.NET / XNA&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Mono&lt;/td&gt; 
   &lt;td&gt;Mono&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;A more comprehensive comparison list of features and compatibility is available at &lt;a href=&quot;https://bepis.io/unity.html&quot;&gt;https://bepis.io/unity.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx/releases&quot;&gt;Latest releases&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://builds.bepinex.dev/projects/bepinex_be&quot;&gt;Bleeding Edge builds&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.bepinex.dev/articles/user_guide/installation/index.html&quot;&gt;How to install (latest releases)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.bepinex.dev/master/articles/user_guide/installation/index.html&quot;&gt;How to install (Bleeding Edge, BepInEx 6)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.bepinex.dev/master/&quot;&gt;User and developer guides&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://discord.gg/MpFEDAg&quot;&gt;Discord server&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Available plugin loaders&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Link to project&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BSIPA&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.BSIPA.Loader&quot;&gt;BepInEx.BSIPA.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;IPA&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/IPALoaderX&quot;&gt;IPALoaderX&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MelonLoader&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.MelonLoader.Loader&quot;&gt;BepInEx.MelonLoader.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MonoMod&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.MonoMod.Loader&quot;&gt;BepInEx.MonoMod.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MuseDashModLoader&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.MDML.Loader&quot;&gt;BepInEx.MDML.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Partiality&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/sinai-dev/BepInEx-Partiality-Wrapper&quot;&gt;BepInEx-Partiality-Wrapper&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sybaris&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.SybarisLoader.Patcher&quot;&gt;BepInEx.SybarisLoader.Patcher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UnityInjector&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.UnityInjectorLoader&quot;&gt;BepInEx.UnityInjector.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity Mod Manager&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hacknet-bar/Yan.UMMLoader&quot;&gt;Yan.UMMLoader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uMod&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.uMod.Loader&quot;&gt;BepInEx.uMod.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Used libraries&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NeighTools/UnityDoorstop&quot;&gt;NeighTools/UnityDoorstop&lt;/a&gt; - v4.3.0&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BepInEx/HarmonyX&quot;&gt;BepInEx/HarmonyX&lt;/a&gt; - v2.10.2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0x0ade/MonoMod&quot;&gt;0x0ade/MonoMod&lt;/a&gt; - v22.7.31.1&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbevain/cecil&quot;&gt;jbevain/cecil&lt;/a&gt; - v0.10.4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;IL2CPP libraries&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SamboyCoding/Cpp2IL&quot;&gt;SamboyCoding/Cpp2IL&lt;/a&gt; - v2022.0.7.2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BepInEx/Il2CppInterop&quot;&gt;BepInEx/Il2CppInterop&lt;/a&gt; - v1.4.5&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BepInEx/dotnet-runtime&quot;&gt;BepInEx/dotnet-runtime&lt;/a&gt; - v6.0.7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The BepInEx project is licensed under the LGPL-2.1 license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cysharp/UniTask</title>
      <link>https://github.com/Cysharp/UniTask</link>
      <description>&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniTask&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Cysharp/UniTask/actions&quot;&gt;&lt;img src=&quot;https://github.com/Cysharp/UniTask/workflows/Build-Debug/badge.svg?sanitize=true&quot; alt=&quot;GitHub Actions&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Cysharp/UniTask.svg?sanitize=true&quot; alt=&quot;Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Cysharp/UniTask/raw/master/README_CN.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/UniTask-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-red&quot; alt=&quot;Readme_CN&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Provides an efficient allocation free async/await integration for Unity.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Struct based &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; and custom AsyncMethodBuilder to achieve zero allocation&lt;/li&gt; 
 &lt;li&gt;Makes all Unity AsyncOperations and Coroutines awaitable&lt;/li&gt; 
 &lt;li&gt;PlayerLoop based task(&lt;code&gt;UniTask.Yield&lt;/code&gt;, &lt;code&gt;UniTask.Delay&lt;/code&gt;, &lt;code&gt;UniTask.DelayFrame&lt;/code&gt;, etc..) that enable replacing all coroutine operations&lt;/li&gt; 
 &lt;li&gt;MonoBehaviour Message Events and uGUI Events as awaitable/async-enumerable&lt;/li&gt; 
 &lt;li&gt;Runs completely on Unity&#39;s PlayerLoop so doesn&#39;t use threads and runs on WebGL, wasm, etc.&lt;/li&gt; 
 &lt;li&gt;Asynchronous LINQ, with Channel and AsyncReactiveProperty&lt;/li&gt; 
 &lt;li&gt;TaskTracker window to prevent memory leaks&lt;/li&gt; 
 &lt;li&gt;Highly compatible behaviour with Task/ValueTask/IValueTaskSource&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For technical details, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ &lt;/a&gt;&lt;br /&gt; For advanced tips, see blog post: &lt;a href=&quot;https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846&quot;&gt;Extends UnityWebRequest via async decorator pattern — Advanced Techniques of UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#basics-of-unitask-and-asyncoperation&quot;&gt;Basics of UniTask and AsyncOperation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#timeout-handling&quot;&gt;Timeout handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#progress&quot;&gt;Progress&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#async-void-vs-async-unitaskvoid&quot;&gt;async void vs async UniTaskVoid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasktracker&quot;&gt;UniTaskTracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#external-assets&quot;&gt;External Assets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#asyncenumerable-and-async-linq&quot;&gt;AsyncEnumerable and Async LINQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#awaitable-events&quot;&gt;Awaitable Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#channel&quot;&gt;Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#vs-awaitable&quot;&gt;vs Awaitable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unit-testing&quot;&gt;For Unit Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#threadpool-limitation&quot;&gt;ThreadPool limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#ienumeratortounitask-limitation&quot;&gt;IEnumerator.ToUniTask limitation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#for-unityeditor&quot;&gt;For UnityEditor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#compare-with-standard-task-api&quot;&gt;Compare with Standard Task API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#pooling-configuration&quot;&gt;Pooling Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#allocation-on-profiler&quot;&gt;Allocation on Profiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#unitasksynchronizationcontext&quot;&gt;UniTaskSynchronizationContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#api-references&quot;&gt;API References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM Package&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#install-via-git-url&quot;&gt;Install via git URL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#net-core&quot;&gt;.NET Core&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Install via &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#upm-package&quot;&gt;UPM package&lt;/a&gt; with git reference or asset package(&lt;code&gt;UniTask.*.*.*.unitypackage&lt;/code&gt;) available in &lt;a href=&quot;https://github.com/Cysharp/UniTask/releases&quot;&gt;UniTask/releases&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// extension awaiter/methods can be used by this namespace
using Cysharp.Threading.Tasks;

// You can return type as struct UniTask&amp;lt;T&amp;gt;(or UniTask), it is unity specialized lightweight alternative of Task&amp;lt;T&amp;gt;
// zero allocation and fast excution for zero overhead async/await integrate with Unity
async UniTask&amp;lt;string&amp;gt; DemoAsync()
{
    // You can await Unity&#39;s AsyncObject
    var asset = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;foo&quot;);
    var txt = (await UnityWebRequest.Get(&quot;https://...&quot;).SendWebRequest()).downloadHandler.text;
    await SceneManager.LoadSceneAsync(&quot;scene2&quot;);

    // .WithCancellation enables Cancel, GetCancellationTokenOnDestroy synchornizes with lifetime of GameObject
    // after Unity 2022.2, you can use `destroyCancellationToken` in MonoBehaviour
    var asset2 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;bar&quot;).WithCancellation(this.GetCancellationTokenOnDestroy());

    // .ToUniTask accepts progress callback(and all options), Progress.Create is a lightweight alternative of IProgress&amp;lt;T&amp;gt;
    var asset3 = await Resources.LoadAsync&amp;lt;TextAsset&amp;gt;(&quot;baz&quot;).ToUniTask(Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x)));

    // await frame-based operation like a coroutine
    await UniTask.DelayFrame(100); 

    // replacement of yield return new WaitForSeconds/WaitForSecondsRealtime
    await UniTask.Delay(TimeSpan.FromSeconds(10), ignoreTimeScale: false);
    
    // yield any playerloop timing(PreUpdate, Update, LateUpdate, etc...)
    await UniTask.Yield(PlayerLoopTiming.PreLateUpdate);

    // replacement of yield return null
    await UniTask.Yield();
    await UniTask.NextFrame();

    // replacement of WaitForEndOfFrame
#if UNITY_2023_1_OR_NEWER
    await UniTask.WaitForEndOfFrame();
#else
    // requires MonoBehaviour(CoroutineRunner))
    await UniTask.WaitForEndOfFrame(this); // this is MonoBehaviour
#endif

    // replacement of yield return new WaitForFixedUpdate(same as UniTask.Yield(PlayerLoopTiming.FixedUpdate))
    await UniTask.WaitForFixedUpdate();
    
    // replacement of yield return WaitUntil
    await UniTask.WaitUntil(() =&amp;gt; isActive == false);

    // special helper of WaitUntil
    await UniTask.WaitUntilValueChanged(this, x =&amp;gt; x.isActive);

    // You can await IEnumerator coroutines
    await FooCoroutineEnumerator();

    // You can await a standard task
    await Task.Run(() =&amp;gt; 100);

    // Multithreading, run on ThreadPool under this code
    await UniTask.SwitchToThreadPool();

    /* work on ThreadPool */

    // return to MainThread(same as `ObserveOnMainThread` in UniRx)
    await UniTask.SwitchToMainThread();

    // get async webrequest
    async UniTask&amp;lt;string&amp;gt; GetTextAsync(UnityWebRequest req)
    {
        var op = await req.SendWebRequest();
        return op.downloadHandler.text;
    }

    var task1 = GetTextAsync(UnityWebRequest.Get(&quot;http://google.com&quot;));
    var task2 = GetTextAsync(UnityWebRequest.Get(&quot;http://bing.com&quot;));
    var task3 = GetTextAsync(UnityWebRequest.Get(&quot;http://yahoo.com&quot;));

    // concurrent async-wait and get results easily by tuple syntax
    var (google, bing, yahoo) = await UniTask.WhenAll(task1, task2, task3);

    // shorthand of WhenAll, tuple can await directly
    var (google2, bing2, yahoo2) = await (task1, task2, task3);

    // return async-value.(or you can use `UniTask`(no result), `UniTaskVoid`(fire and forget)).
    return (asset as TextAsset)?.text ?? throw new InvalidOperationException(&quot;Asset not found&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Basics of UniTask and AsyncOperation&lt;/h2&gt; 
&lt;p&gt;UniTask features rely on C# 7.0(&lt;a href=&quot;https://github.com/dotnet/roslyn/raw/master/docs/features/task-types.md&quot;&gt;task-like custom async method builder feature&lt;/a&gt;) so the required Unity version is after &lt;code&gt;Unity 2018.3&lt;/code&gt;, the official lowest version supported is &lt;code&gt;Unity 2018.4.13f1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Why is UniTask(custom task-like object) required? Because Task is too heavy and not matched to Unity threading (single-thread). UniTask does not use threads and SynchronizationContext/ExecutionContext because Unity&#39;s asynchronous object is automaticaly dispatched by Unity&#39;s engine layer. It achieves faster and lower allocation, and is completely integrated with Unity.&lt;/p&gt; 
&lt;p&gt;You can await &lt;code&gt;AsyncOperation&lt;/code&gt;, &lt;code&gt;ResourceRequest&lt;/code&gt;, &lt;code&gt;AssetBundleRequest&lt;/code&gt;, &lt;code&gt;AssetBundleCreateRequest&lt;/code&gt;, &lt;code&gt;UnityWebRequestAsyncOperation&lt;/code&gt;, &lt;code&gt;AsyncGPUReadbackRequest&lt;/code&gt;, &lt;code&gt;IEnumerator&lt;/code&gt; and others when &lt;code&gt;using Cysharp.Threading.Tasks;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;UniTask provides three pattern of extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;* await asyncOperation;
* .WithCancellation(CancellationToken);
* .ToUniTask(IProgress, PlayerLoopTiming, CancellationToken);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;WithCancellation&lt;/code&gt; is a simple version of &lt;code&gt;ToUniTask&lt;/code&gt;, both return &lt;code&gt;UniTask&lt;/code&gt;. For details of cancellation, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#cancellation-and-exception-handling&quot;&gt;Cancellation and Exception handling&lt;/a&gt; section.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: await directly is returned from native timing of PlayerLoop but WithCancellation and ToUniTask are returned from specified PlayerLoopTiming. For details of timing, see: &lt;a href=&quot;https://raw.githubusercontent.com/Cysharp/UniTask/master/#playerloop&quot;&gt;PlayerLoop&lt;/a&gt; section.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: AssetBundleRequest has &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;allAssets&lt;/code&gt;, default await returns &lt;code&gt;asset&lt;/code&gt;. If you want to get &lt;code&gt;allAssets&lt;/code&gt;, you can use &lt;code&gt;AwaitForAllAssets()&lt;/code&gt; method.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The type of &lt;code&gt;UniTask&lt;/code&gt; can use utilities like &lt;code&gt;UniTask.WhenAll&lt;/code&gt;, &lt;code&gt;UniTask.WhenAny&lt;/code&gt;, &lt;code&gt;UniTask.WhenEach&lt;/code&gt;. They are like &lt;code&gt;Task.WhenAll&lt;/code&gt;/&lt;code&gt;Task.WhenAny&lt;/code&gt; but the return type is more useful. They return value tuples so you can deconstruct each result and pass multiple types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid LoadManyAsync()
{
    // parallel load.
    var (a, b, c) = await UniTask.WhenAll(
        LoadAsSprite(&quot;foo&quot;),
        LoadAsSprite(&quot;bar&quot;),
        LoadAsSprite(&quot;baz&quot;));
}

async UniTask&amp;lt;Sprite&amp;gt; LoadAsSprite(string path)
{
    var resource = await Resources.LoadAsync&amp;lt;Sprite&amp;gt;(path);
    return (resource as Sprite);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to convert a callback to UniTask, you can use &lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; which is a lightweight edition of &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public UniTask&amp;lt;int&amp;gt; WrapByUniTaskCompletionSource()
{
    var utcs = new UniTaskCompletionSource&amp;lt;int&amp;gt;();

    // when complete, call utcs.TrySetResult();
    // when failed, call utcs.TrySetException();
    // when cancel, call utcs.TrySetCanceled();

    return utcs.Task; //return UniTask&amp;lt;int&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can convert Task -&amp;gt; UniTask: &lt;code&gt;AsUniTask&lt;/code&gt;, &lt;code&gt;UniTask&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&amp;lt;AsyncUnit&amp;gt;&lt;/code&gt;: &lt;code&gt;AsAsyncUnitUniTask&lt;/code&gt;, &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;: &lt;code&gt;AsUniTask&lt;/code&gt;. &lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;UniTask&lt;/code&gt;&#39;s conversion cost is free.&lt;/p&gt; 
&lt;p&gt;If you want to convert async to coroutine, you can use &lt;code&gt;.ToCoroutine()&lt;/code&gt;, this is useful if you want to only allow using the coroutine system.&lt;/p&gt; 
&lt;p&gt;UniTask can not await twice. This is a similar constraint to the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1?view=netcore-3.1&quot;&gt;ValueTask/IValueTaskSource&lt;/a&gt; introduced in .NET Standard 2.1.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The following operations should never be performed on a ValueTask
  &lt;tresult&gt;
    instance:
  &lt;/tresult&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Awaiting the instance multiple times.&lt;/li&gt; 
  &lt;li&gt;Calling AsTask multiple times.&lt;/li&gt; 
  &lt;li&gt;Using .Result or .GetAwaiter().GetResult() when the operation hasn&#39;t yet completed, or using them multiple times.&lt;/li&gt; 
  &lt;li&gt;Using more than one of these techniques to consume the instance.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you do any of the above, the results are undefined.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var task = UniTask.DelayFrame(10);
await task;
await task; // NG, throws Exception
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store to the class field, you can use &lt;code&gt;UniTask.Lazy&lt;/code&gt; that supports calling multiple times. &lt;code&gt;.Preserve()&lt;/code&gt; allows for multiple calls (internally cached results). This is useful when there are multiple calls in a function scope.&lt;/p&gt; 
&lt;p&gt;Also &lt;code&gt;UniTaskCompletionSource&lt;/code&gt; can await multiple times and await from many callers.&lt;/p&gt; 
&lt;h2&gt;Cancellation and Exception handling&lt;/h2&gt; 
&lt;p&gt;Some UniTask factory methods have a &lt;code&gt;CancellationToken cancellationToken = default&lt;/code&gt; parameter. Also some async operations for Unity have &lt;code&gt;WithCancellation(CancellationToken)&lt;/code&gt; and &lt;code&gt;ToUniTask(..., CancellationToken cancellation = default)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;p&gt;You can pass &lt;code&gt;CancellationToken&lt;/code&gt; to parameter by standard &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.cancellationtokensource&quot;&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();

cancelButton.onClick.AddListener(() =&amp;gt;
{
    cts.Cancel();
});

await UnityWebRequest.Get(&quot;http://google.co.jp&quot;).SendWebRequest().WithCancellation(cts.Token);

await UniTask.DelayFrame(1000, cancellationToken: cts.Token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CancellationToken can be created by &lt;code&gt;CancellationTokenSource&lt;/code&gt; or MonoBehaviour&#39;s extension method &lt;code&gt;GetCancellationTokenOnDestroy&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// this CancellationToken lifecycle is same as GameObject.
await UniTask.DelayFrame(1000, cancellationToken: this.GetCancellationTokenOnDestroy());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For propagate Cancellation, all async method recommend to accept &lt;code&gt;CancellationToken cancellationToken&lt;/code&gt; at last argument, and pass &lt;code&gt;CancellationToken&lt;/code&gt; from root to end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await FooAsync(this.GetCancellationTokenOnDestroy());

// ---

async UniTask FooAsync(CancellationToken cancellationToken)
{
    await BarAsync(cancellationToken);
}

async UniTask BarAsync(CancellationToken cancellationToken)
{
    await UniTask.Delay(TimeSpan.FromSeconds(3), cancellationToken);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CancellationToken&lt;/code&gt; means lifecycle of async. You can hold your own lifecycle insteadof default CancellationTokenOnDestroy.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MyBehaviour : MonoBehaviour
{
    CancellationTokenSource disableCancellation = new CancellationTokenSource();
    CancellationTokenSource destroyCancellation = new CancellationTokenSource();

    private void OnEnable()
    {
        if (disableCancellation != null)
        {
            disableCancellation.Dispose();
        }
        disableCancellation = new CancellationTokenSource();
    }

    private void OnDisable()
    {
        disableCancellation.Cancel();
    }

    private void OnDestroy()
    {
        destroyCancellation.Cancel();
        destroyCancellation.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After Unity 2022.2, Unity adds CancellationToken in &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/MonoBehaviour-destroyCancellationToken.html&quot;&gt;MonoBehaviour.destroyCancellationToken&lt;/a&gt; and &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/Application-exitCancellationToken.html&quot;&gt;Application.exitCancellationToken&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When cancellation is detected, all methods throw &lt;code&gt;OperationCanceledException&lt;/code&gt; and propagate upstream. When exception(not limited to &lt;code&gt;OperationCanceledException&lt;/code&gt;) is not handled in async method, it is propagated finally to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. The default behaviour of received unhandled exception is to write log as exception. Log level can be changed using &lt;code&gt;UniTaskScheduler.UnobservedExceptionWriteLogType&lt;/code&gt;. If you want to use custom behaviour, set an action to &lt;code&gt;UniTaskScheduler.UnobservedTaskException.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;And also &lt;code&gt;OperationCanceledException&lt;/code&gt; is a special exception, this is silently ignored at &lt;code&gt;UnobservedTaskException&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to cancel behaviour in an async UniTask method, throw &lt;code&gt;OperationCanceledException&lt;/code&gt; manually.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; FooAsync()
{
    await UniTask.Yield();
    throw new OperationCanceledException();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you handle an exception but want to ignore(propagate to global cancellation handling), use an exception filter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask&amp;lt;int&amp;gt; BarAsync()
{
    try
    {
        var x = await FooAsync();
        return x * 2;
    }
    catch (Exception ex) when (!(ex is OperationCanceledException)) // when (ex is not OperationCanceledException) at C# 9.0
    {
        return -1;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;throws/catch &lt;code&gt;OperationCanceledException&lt;/code&gt; is slightly heavy, so if performance is a concern, use &lt;code&gt;UniTask.SuppressCancellationThrow&lt;/code&gt; to avoid OperationCanceledException throw. It returns &lt;code&gt;(bool IsCanceled, T Result)&lt;/code&gt; instead of throwing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var (isCanceled, _) = await UniTask.DelayFrame(10, cancellationToken: cts.Token).SuppressCancellationThrow();
if (isCanceled)
{
    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Only suppress throws if you call directly into the most source method. Otherwise, the return value will be converted, but the entire pipeline will not suppress throws.&lt;/p&gt; 
&lt;p&gt;Some features that use Unity&#39;s player loop, such as &lt;code&gt;UniTask.Yield&lt;/code&gt; and &lt;code&gt;UniTask.Delay&lt;/code&gt; etc, determines CancellationToken state on the player loop. This means it does not cancel immediately upon &lt;code&gt;CancellationToken&lt;/code&gt; fired.&lt;/p&gt; 
&lt;p&gt;If you want to change this behaviour, the cancellation to be immediate, set the &lt;code&gt;cancelImmediately&lt;/code&gt; flag as an argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await UniTask.Yield(cancellationToken, cancelImmediately: true);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: Setting &lt;code&gt;cancelImmediately&lt;/code&gt; to true and detecting an immediate cancellation is more costly than the default behavior. This is because it uses &lt;code&gt;CancellationToken.Register&lt;/code&gt;; it is heavier than checking CancellationToken on the player loop.&lt;/p&gt; 
&lt;h2&gt;Timeout handling&lt;/h2&gt; 
&lt;p&gt;Timeout is a variation of cancellation. You can set timeout by &lt;code&gt;CancellationTokenSouce.CancelAfterSlim(TimeSpan)&lt;/code&gt; and pass CancellationToken to async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cts = new CancellationTokenSource();
cts.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(cts.Token);
}
catch (OperationCanceledException ex)
{
    if (ex.CancellationToken == cts.Token)
    {
        UnityEngine.Debug.Log(&quot;Timeout&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;CancellationTokenSouce.CancelAfter&lt;/code&gt; is a standard api. However in Unity you should not use it because it depends threading timer. &lt;code&gt;CancelAfterSlim&lt;/code&gt; is UniTask&#39;s extension methods, it uses PlayerLoop instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;CancellationTokenSource.CreateLinkedTokenSource&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cancelToken = new CancellationTokenSource();
cancelButton.onClick.AddListener(() =&amp;gt;
{
    cancelToken.Cancel(); // cancel from button click.
});

var timeoutToken = new CancellationTokenSource();
timeoutToken.CancelAfterSlim(TimeSpan.FromSeconds(5)); // 5sec timeout.

try
{
    // combine token
    var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancelToken.Token, timeoutToken.Token);

    await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest().WithCancellation(linkedTokenSource.Token);
}
catch (OperationCanceledException ex)
{
    if (timeoutToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Timeout.&quot;);
    }
    else if (cancelToken.IsCancellationRequested)
    {
        UnityEngine.Debug.Log(&quot;Cancel clicked.&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optimize for reduce allocation of CancellationTokenSource for timeout per call async method, you can use UniTask&#39;s &lt;code&gt;TimeoutController&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController = new TimeoutController(); // setup to field for reuse.

async UniTask FooAsync()
{
    try
    {
        // you can pass timeoutController.Timeout(TimeSpan) to cancellationToken.
        await UnityWebRequest.Get(&quot;http://foo&quot;).SendWebRequest()
            .WithCancellation(timeoutController.Timeout(TimeSpan.FromSeconds(5)));
        timeoutController.Reset(); // call Reset(Stop timeout timer and ready for reuse) when succeed.
    }
    catch (OperationCanceledException ex)
    {
        if (timeoutController.IsTimeout())
        {
            UnityEngine.Debug.Log(&quot;timeout&quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use timeout with other source of cancellation, use &lt;code&gt;new TimeoutController(CancellationToken)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;TimeoutController timeoutController;
CancellationTokenSource clickCancelSource;

void Start()
{
    this.clickCancelSource = new CancellationTokenSource();
    this.timeoutController = new TimeoutController(clickCancelSource);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: UniTask has &lt;code&gt;.Timeout&lt;/code&gt;, &lt;code&gt;.TimeoutWithoutException&lt;/code&gt; methods however, if possible, do not use these, please pass &lt;code&gt;CancellationToken&lt;/code&gt;. Because &lt;code&gt;.Timeout&lt;/code&gt; work from external of task, can not stop timeoutted task. &lt;code&gt;.Timeout&lt;/code&gt; means ignore result when timeout. If you pass a &lt;code&gt;CancellationToken&lt;/code&gt; to the method, it will act from inside of the task, so it is possible to stop a running task.&lt;/p&gt; 
&lt;h2&gt;Progress&lt;/h2&gt; 
&lt;p&gt;Some async operations for unity have &lt;code&gt;ToUniTask(IProgress&amp;lt;float&amp;gt; progress = null, ...)&lt;/code&gt; extension methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var progress = Progress.Create&amp;lt;float&amp;gt;(x =&amp;gt; Debug.Log(x));

var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
    .SendWebRequest()
    .ToUniTask(progress: progress);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should not use standard &lt;code&gt;new System.Progress&amp;lt;T&amp;gt;&lt;/code&gt;, because it causes allocation every time. Use &lt;code&gt;Cysharp.Threading.Tasks.Progress&lt;/code&gt; instead. This progress factory has two methods, &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt;. &lt;code&gt;CreateOnlyValueChanged&lt;/code&gt; calls only when the progress value has changed.&lt;/p&gt; 
&lt;p&gt;Implementing IProgress interface to caller is better as there is no lambda allocation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Foo : MonoBehaviour, IProgress&amp;lt;float&amp;gt;
{
    public void Report(float value)
    {
        UnityEngine.Debug.Log(value);
    }

    public async UniTaskVoid WebRequest()
    {
        var request = await UnityWebRequest.Get(&quot;http://google.co.jp&quot;)
            .SendWebRequest()
            .ToUniTask(progress: this); // pass this
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;PlayerLoop&lt;/h2&gt; 
&lt;p&gt;UniTask is run on a custom &lt;a href=&quot;https://docs.unity3d.com/ScriptReference/LowLevel.PlayerLoop.html&quot;&gt;PlayerLoop&lt;/a&gt;. UniTask&#39;s playerloop based methods (such as &lt;code&gt;Delay&lt;/code&gt;, &lt;code&gt;DelayFrame&lt;/code&gt;, &lt;code&gt;asyncOperation.ToUniTask&lt;/code&gt;, etc...) accept this &lt;code&gt;PlayerLoopTiming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public enum PlayerLoopTiming
{
    Initialization = 0,
    LastInitialization = 1,

    EarlyUpdate = 2,
    LastEarlyUpdate = 3,

    FixedUpdate = 4,
    LastFixedUpdate = 5,

    PreUpdate = 6,
    LastPreUpdate = 7,

    Update = 8,
    LastUpdate = 9,

    PreLateUpdate = 10,
    LastPreLateUpdate = 11,

    PostLateUpdate = 12,
    LastPostLateUpdate = 13
    
#if UNITY_2020_2_OR_NEWER
    TimeUpdate = 14,
    LastTimeUpdate = 15,
#endif
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates when to run, you can check &lt;a href=&quot;https://gist.github.com/neuecc/bc3a1cfd4d74501ad057e49efcd7bdae&quot;&gt;PlayerLoopList.md&lt;/a&gt; to Unity&#39;s default playerloop and injected UniTask&#39;s custom loop.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is similar to &lt;code&gt;yield return null&lt;/code&gt; in a coroutine, but it is called before Update(Update and uGUI events(button.onClick, etc...) are called on &lt;code&gt;ScriptRunBehaviourUpdate&lt;/code&gt;, yield return null is called on &lt;code&gt;ScriptRunDelayedDynamicFrameRate&lt;/code&gt;). &lt;code&gt;PlayerLoopTiming.FixedUpdate&lt;/code&gt; is similar to &lt;code&gt;WaitForFixedUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;PlayerLoopTiming.LastPostLateUpdate&lt;/code&gt; is not equivalent to coroutine&#39;s &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;. Coroutine&#39;s WaitForEndOfFrame seems to run after the PlayerLoop is done. Some methods that require coroutine&#39;s end of frame(&lt;code&gt;Texture2D.ReadPixels&lt;/code&gt;, &lt;code&gt;ScreenCapture.CaptureScreenshotAsTexture&lt;/code&gt;, &lt;code&gt;CommandBuffer&lt;/code&gt;, etc) do not work correctly when replaced with async/await. In these cases, pass MonoBehaviour(coroutine runnner) to &lt;code&gt;UniTask.WaitForEndOfFrame&lt;/code&gt;. For example, &lt;code&gt;await UniTask.WaitForEndOfFrame(this);&lt;/code&gt; is lightweight allocation free alternative of &lt;code&gt;yield return new WaitForEndOfFrame()&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;Note: In Unity 2023.1 or newer, &lt;code&gt;await UniTask.WaitForEndOfFrame();&lt;/code&gt; no longer requires MonoBehaviour. It uses &lt;code&gt;UnityEngine.Awaitable.EndOfFrameAsync&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;yield return null&lt;/code&gt; and &lt;code&gt;UniTask.Yield&lt;/code&gt; are similar but different. &lt;code&gt;yield return null&lt;/code&gt; always returns next frame but &lt;code&gt;UniTask.Yield&lt;/code&gt; returns next called. That is, call &lt;code&gt;UniTask.Yield(PlayerLoopTiming.Update)&lt;/code&gt; on &lt;code&gt;PreUpdate&lt;/code&gt;, it returns same frame. &lt;code&gt;UniTask.NextFrame()&lt;/code&gt; guarantees return next frame, you can expect this to behave exactly the same as &lt;code&gt;yield return null&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;UniTask.Yield(without CancellationToken) is a special type, returns &lt;code&gt;YieldAwaitable&lt;/code&gt; and runs on YieldRunner. It is the most lightweight and fastest.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;AsyncOperation&lt;/code&gt; is returned from native timing. For example, await &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.UpdatePreloading&lt;/code&gt; and after being called, the loaded scene&#39;s &lt;code&gt;Start&lt;/code&gt; is called from &lt;code&gt;EarlyUpdate.ScriptRunDelayedStartupFrame&lt;/code&gt;. Also &lt;code&gt;await UnityWebRequest&lt;/code&gt; is returned from &lt;code&gt;EarlyUpdate.ExecuteMainThreadJobs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In UniTask, await directly uses native timing, while &lt;code&gt;WithCancellation&lt;/code&gt; and &lt;code&gt;ToUniTask&lt;/code&gt; use specified timing. This is usually not a particular problem, but with &lt;code&gt;LoadSceneAsync&lt;/code&gt;, it causes a different order of Start and continuation after await. So it is recommended not to use &lt;code&gt;LoadSceneAsync.ToUniTask&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When using Unity 2023.1 or newer, ensure you have &lt;code&gt;using UnityEngine;&lt;/code&gt; in the using statements of your file when working with new &lt;code&gt;UnityEngine.Awaitable&lt;/code&gt; methods like &lt;code&gt;SceneManager.LoadSceneAsync&lt;/code&gt;. This prevents compilation errors by avoiding the use of the &lt;code&gt;UnityEngine.AsyncOperation&lt;/code&gt; version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the stacktrace, you can check where it is running in playerloop.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83735571-83caea80-a68b-11ea-8d22-5e22864f0d24.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;By default, UniTask&#39;s PlayerLoop is initialized at &lt;code&gt;[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The order in which methods are called in BeforeSceneLoad is nondeterministic, so if you want to use UniTask in other BeforeSceneLoad methods, you should try to initialize it before this.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// AfterAssembliesLoaded is called before BeforeSceneLoad
[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterAssembliesLoaded)]
public static void InitUniTaskLoop()
{
    var loop = PlayerLoop.GetCurrentPlayerLoop();
    Cysharp.Threading.Tasks.PlayerLoopHelper.Initialize(ref loop);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you import Unity&#39;s &lt;code&gt;Entities&lt;/code&gt; package, that resets the custom player loop to default at &lt;code&gt;BeforeSceneLoad&lt;/code&gt; and injects ECS&#39;s loop. When Unity calls ECS&#39;s inject method after UniTask&#39;s initialize method, UniTask will no longer work.&lt;/p&gt; 
&lt;p&gt;To solve this issue, you can re-initialize the UniTask PlayerLoop after ECS is initialized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Get ECS Loop.
var playerLoop = ScriptBehaviourUpdateOrder.CurrentPlayerLoop;

// Setup UniTask&#39;s PlayerLoop.
PlayerLoopHelper.Initialize(ref playerLoop);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can diagnose whether UniTask&#39;s player loop is ready by calling &lt;code&gt;PlayerLoopHelper.IsInjectedUniTaskPlayerLoop()&lt;/code&gt;. And also &lt;code&gt;PlayerLoopHelper.DumpCurrentPlayerLoop&lt;/code&gt; logs all current playerloops to console.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;void Start()
{
    UnityEngine.Debug.Log(&quot;UniTaskPlayerLoop ready? &quot; + PlayerLoopHelper.IsInjectedUniTaskPlayerLoop());
    PlayerLoopHelper.DumpCurrentPlayerLoop();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optimize loop cost slightly by remove unuse PlayerLoopTiming injection. You can call &lt;code&gt;PlayerLoopHelper.Initialize(InjectPlayerLoopTimings)&lt;/code&gt; on initialize.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var loop = PlayerLoop.GetCurrentPlayerLoop();
PlayerLoopHelper.Initialize(ref loop, InjectPlayerLoopTimings.Minimum); // minimum is Update | FixedUpdate | LastPostLateUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;InjectPlayerLoopTimings&lt;/code&gt; has three preset, &lt;code&gt;All&lt;/code&gt; and &lt;code&gt;Standard&lt;/code&gt;(All without last except LastPostLateUpdate), &lt;code&gt;Minimum&lt;/code&gt;(&lt;code&gt;Update | FixedUpdate | LastPostLateUpdate&lt;/code&gt;). Default is All and you can combine custom inject timings like &lt;code&gt;InjectPlayerLoopTimings.Update | InjectPlayerLoopTimings.FixedUpdate | InjectPlayerLoopTimings.PreLateUpdate&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can make error to use uninjected &lt;code&gt;PlayerLoopTiming&lt;/code&gt; by &lt;a href=&quot;https://github.com/dotnet/roslyn-analyzers/raw/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md&quot;&gt;Microsoft.CodeAnalysis.BannedApiAnalyzers&lt;/a&gt;. For example, you can setup &lt;code&gt;BannedSymbols.txt&lt;/code&gt; like this for &lt;code&gt;InjectPlayerLoopTimings.Minimum&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;F:Cysharp.Threading.Tasks.PlayerLoopTiming.Initialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastInitialization; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.EarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastEarlyUpdate; Isn&#39;t injected this PlayerLoop in this project.d
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastFixedUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastPreLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.PostLateUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.TimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
F:Cysharp.Threading.Tasks.PlayerLoopTiming.LastTimeUpdate; Isn&#39;t injected this PlayerLoop in this project.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can configure &lt;code&gt;RS0030&lt;/code&gt; severity to error.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/109150837-bb933880-77ac-11eb-85ba-4fd15819dbd0.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;async void vs async UniTaskVoid&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;async void&lt;/code&gt; is a standard C# task system so it does not run on UniTask systems. It is better not to use it. &lt;code&gt;async UniTaskVoid&lt;/code&gt; is a lightweight version of &lt;code&gt;async UniTask&lt;/code&gt; because it does not have awaitable completion and reports errors immediately to &lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;. If you don&#39;t require awaiting (fire and forget), using &lt;code&gt;UniTaskVoid&lt;/code&gt; is better. Unfortunately to dismiss warning, you&#39;re required to call &lt;code&gt;Forget()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTaskVoid FireAndForgetMethod()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    FireAndForgetMethod().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also UniTask has the &lt;code&gt;Forget&lt;/code&gt; method, it is similar to &lt;code&gt;UniTaskVoid&lt;/code&gt; and has the same effects. However &lt;code&gt;UniTaskVoid&lt;/code&gt; is more efficient if you completely don&#39;t use &lt;code&gt;await&lt;/code&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async UniTask DoAsync()
{
    // do anything...
    await UniTask.Yield();
}

public void Caller()
{
    DoAsync().Forget();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use an async lambda registered to an event, don&#39;t use &lt;code&gt;async void&lt;/code&gt;. Instead you can use &lt;code&gt;UniTask.Action&lt;/code&gt; or &lt;code&gt;UniTask.UnityAction&lt;/code&gt;, both of which create a delegate via &lt;code&gt;async UniTaskVoid&lt;/code&gt; lambda.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Action actEvent;
UnityAction unityEvent; // especially used in uGUI

// Bad: async void
actEvent += async () =&amp;gt; { };
unityEvent += async () =&amp;gt; { };

// Ok: create Action delegate by lambda
actEvent += UniTask.Action(async () =&amp;gt; { await UniTask.Yield(); });
unityEvent += UniTask.UnityAction(async () =&amp;gt; { await UniTask.Yield(); });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTaskVoid&lt;/code&gt; can also be used in MonoBehaviour&#39;s &lt;code&gt;Start&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;class Sample : MonoBehaviour
{
    async UniTaskVoid Start()
    {
        // async init code.
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;UniTaskTracker&lt;/h2&gt; 
&lt;p&gt;useful for checking (leaked) UniTasks. You can open tracker window in &lt;code&gt;Window -&amp;gt; UniTask Tracker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83527073-4434bf00-a522-11ea-86e9-3b3975b26266.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable AutoReload(Toggle) - Reload automatically.&lt;/li&gt; 
 &lt;li&gt;Reload - Reload view.&lt;/li&gt; 
 &lt;li&gt;GC.Collect - Invoke GC.Collect.&lt;/li&gt; 
 &lt;li&gt;Enable Tracking(Toggle) - Start to track async/await UniTask. Performance impact: low.&lt;/li&gt; 
 &lt;li&gt;Enable StackTrace(Toggle) - Capture StackTrace when task is started. Performance impact: high.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;UniTaskTracker is intended for debugging use only as enabling tracking and capturing stacktraces is useful but has a heavy performance impact. Recommended usage is to enable both tracking and stacktraces to find task leaks and to disable them both when done.&lt;/p&gt; 
&lt;h2&gt;External Assets&lt;/h2&gt; 
&lt;p&gt;By default, UniTask supports TextMeshPro(&lt;code&gt;BindTo(TMP_Text)&lt;/code&gt; and &lt;code&gt;TMP_InputField&lt;/code&gt; event extensions like standard uGUI &lt;code&gt;InputField&lt;/code&gt;), DOTween(&lt;code&gt;Tween&lt;/code&gt; as awaitable) and Addressables(&lt;code&gt;AsyncOperationHandle&lt;/code&gt; and &lt;code&gt;AsyncOperationHandle&amp;lt;T&amp;gt;&lt;/code&gt; as awaitable).&lt;/p&gt; 
&lt;p&gt;There are defined in separated asmdefs like &lt;code&gt;UniTask.TextMeshPro&lt;/code&gt;, &lt;code&gt;UniTask.DOTween&lt;/code&gt;, &lt;code&gt;UniTask.Addressables&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;TextMeshPro and Addressables support are automatically enabled when importing their packages from package manager. However for DOTween support, after importing from the &lt;a href=&quot;https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676r&quot;&gt;DOTWeen assets&lt;/a&gt; and define the scripting define symbol &lt;code&gt;UNITASK_DOTWEEN_SUPPORT&lt;/code&gt; to enable it.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// sequential
await transform.DOMoveX(2, 10);
await transform.DOMoveZ(5, 20);

// parallel with cancellation
var ct = this.GetCancellationTokenOnDestroy();

await UniTask.WhenAll(
    transform.DOMoveX(10, 3).WithCancellation(ct),
    transform.DOScale(10, 3).WithCancellation(ct));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOTween support&#39;s default behaviour(&lt;code&gt;await&lt;/code&gt;, &lt;code&gt;WithCancellation&lt;/code&gt;, &lt;code&gt;ToUniTask&lt;/code&gt;) awaits tween is killed. It works on both Complete(true/false) and Kill(true/false). But if you want to reuse tweens (&lt;code&gt;SetAutoKill(false)&lt;/code&gt;), it does not work as expected. If you want to await for another timing, the following extension methods exist in Tween, &lt;code&gt;AwaitForComplete&lt;/code&gt;, &lt;code&gt;AwaitForPause&lt;/code&gt;, &lt;code&gt;AwaitForPlay&lt;/code&gt;, &lt;code&gt;AwaitForRewind&lt;/code&gt;, &lt;code&gt;AwaitForStepComplete&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;AsyncEnumerable and Async LINQ&lt;/h2&gt; 
&lt;p&gt;Unity 2020.2 supports C# 8.0 so you can use &lt;code&gt;await foreach&lt;/code&gt;. This is the new Update notation in the async era.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Unity 2020.2, C# 8.0
await foreach (var _ in UniTaskAsyncEnumerable.EveryUpdate().WithCancellation(token))
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In a C# 7.3 environment, you can use the &lt;code&gt;ForEachAsync&lt;/code&gt; method to work in almost the same way.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// C# 7.3(Unity 2018.3~)
await UniTaskAsyncEnumerable.EveryUpdate().ForEachAsync(_ =&amp;gt;
{
    Debug.Log(&quot;Update() &quot; + Time.frameCount);
}, token);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt; that is similar to .NET 9&#39;s &lt;code&gt;Task.WhenEach&lt;/code&gt; can consume new way for await multiple tasks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await foreach (var result in UniTask.WhenEach(task1, task2, task3))
{
    // The result is of type WhenEachResult&amp;lt;T&amp;gt;.
    // It contains either `T Result` or `Exception Exception`.
    // You can check `IsCompletedSuccessfully` or `IsFaulted` to determine whether to access `.Result` or `.Exception`.
    // If you want to throw an exception when `IsFaulted` and retrieve the result when successful, use `GetResult()`.
    Debug.Log(result.GetResult());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTaskAsyncEnumerable implements asynchronous LINQ, similar to LINQ in &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; or Rx in &lt;code&gt;IObservable&amp;lt;T&amp;gt;&lt;/code&gt;. All standard LINQ query operators can be applied to asynchronous streams. For example, the following code shows how to apply a Where filter to a button-click asynchronous stream that runs once every two clicks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;await okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).ForEachAsync(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fire and Forget style(for example, event handling), you can also use &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;okButton.OnClickAsAsyncEnumerable().Where((x, i) =&amp;gt; i % 2 == 0).Subscribe(_ =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Async LINQ is enabled when &lt;code&gt;using Cysharp.Threading.Tasks.Linq;&lt;/code&gt;, and &lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is defined in &lt;code&gt;UniTask.Linq&lt;/code&gt; asmdef.&lt;/p&gt; 
&lt;p&gt;It&#39;s closer to UniRx (Reactive Extensions), but UniTaskAsyncEnumerable is a pull-based asynchronous stream, whereas Rx was a push-based asynchronous stream. Note that although similar, the characteristics are different and the details behave differently along with them.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTaskAsyncEnumerable&lt;/code&gt; is the entry point like &lt;code&gt;Enumerable&lt;/code&gt;. In addition to the standard query operators, there are other generators for Unity such as &lt;code&gt;EveryUpdate&lt;/code&gt;, &lt;code&gt;Timer&lt;/code&gt;, &lt;code&gt;TimerFrame&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;IntervalFrame&lt;/code&gt;, and &lt;code&gt;EveryValueChanged&lt;/code&gt;. And also added additional UniTask original query operators like &lt;code&gt;Append&lt;/code&gt;, &lt;code&gt;Prepend&lt;/code&gt;, &lt;code&gt;DistinctUntilChanged&lt;/code&gt;, &lt;code&gt;ToHashSet&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;CombineLatest&lt;/code&gt;,&lt;code&gt;Merge&lt;/code&gt; &lt;code&gt;Do&lt;/code&gt;, &lt;code&gt;Never&lt;/code&gt;, &lt;code&gt;ForEachAsync&lt;/code&gt;, &lt;code&gt;Pairwise&lt;/code&gt;, &lt;code&gt;Publish&lt;/code&gt;, &lt;code&gt;Queue&lt;/code&gt;, &lt;code&gt;Return&lt;/code&gt;, &lt;code&gt;SkipUntil&lt;/code&gt;, &lt;code&gt;TakeUntil&lt;/code&gt;, &lt;code&gt;SkipUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeUntilCanceled&lt;/code&gt;, &lt;code&gt;TakeLast&lt;/code&gt;, &lt;code&gt;Subscribe&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The method with Func as an argument has three additional overloads, &lt;code&gt;***Await&lt;/code&gt;, &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Select(Func&amp;lt;T, TR&amp;gt; selector)
SelectAwait(Func&amp;lt;T, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
SelectAwaitWithCancellation(Func&amp;lt;T, CancellationToken, UniTask&amp;lt;TR&amp;gt;&amp;gt; selector)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use the &lt;code&gt;async&lt;/code&gt; method inside the func, use the &lt;code&gt;***Await&lt;/code&gt; or &lt;code&gt;***AwaitWithCancellation&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How to create an async iterator: C# 8.0 supports async iterator(&lt;code&gt;async yield return&lt;/code&gt;) but it only allows &lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; and of course requires C# 8.0. UniTask supports &lt;code&gt;UniTaskAsyncEnumerable.Create&lt;/code&gt; method to create custom async iterator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// IAsyncEnumerable, C# 8.0 version of async iterator. ( do not use this style, IAsyncEnumerable is not controled in UniTask).
public async IAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate([EnumeratorCancellation]CancellationToken cancelationToken = default)
{
    var frameCount = 0;
    await UniTask.Yield();
    while (!token.IsCancellationRequested)
    {
        yield return frameCount++;
        await UniTask.Yield();
    }
}

// UniTaskAsyncEnumerable.Create and use `await writer.YieldAsync` instead of `yield return`.
public IUniTaskAsyncEnumerable&amp;lt;int&amp;gt; MyEveryUpdate()
{
    // writer(IAsyncWriter&amp;lt;T&amp;gt;) has `YieldAsync(value)` method.
    return UniTaskAsyncEnumerable.Create&amp;lt;int&amp;gt;(async (writer, token) =&amp;gt;
    {
        var frameCount = 0;
        await UniTask.Yield();
        while (!token.IsCancellationRequested)
        {
            await writer.YieldAsync(frameCount++); // instead of `yield return`
            await UniTask.Yield();
        }
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Awaitable Events&lt;/h2&gt; 
&lt;p&gt;All uGUI component implements &lt;code&gt;***AsAsyncEnumerable&lt;/code&gt; to convert asynchronous streams of events.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;async UniTask TripleClick()
{
    // In default, used button.GetCancellationTokenOnDestroy to manage lieftime of async
    await button.OnClickAsync();
    await button.OnClickAsync();
    await button.OnClickAsync();
    Debug.Log(&quot;Three times clicked&quot;);
}

// more efficient way
async UniTask TripleClick()
{
    using (var handler = button.GetAsyncClickEventHandler())
    {
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        await handler.OnClickAsync();
        Debug.Log(&quot;Three times clicked&quot;);
    }
}

// use async LINQ
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).Last();
    Debug.Log(&quot;Three times clicked&quot;);
}

// use async LINQ2
async UniTask TripleClick(CancellationToken token)
{
    await button.OnClickAsAsyncEnumerable().Take(3).ForEachAsync(_ =&amp;gt;
    {
        Debug.Log(&quot;Every clicked&quot;);
    });
    Debug.Log(&quot;Three times clicked, complete.&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All MonoBehaviour message events can convert async-streams by &lt;code&gt;AsyncTriggers&lt;/code&gt; that can be enabled by &lt;code&gt;using Cysharp.Threading.Tasks.Triggers;&lt;/code&gt;. AsyncTrigger can be created using &lt;code&gt;GetAsync***Trigger&lt;/code&gt; and triggers itself as UniTaskAsyncEnumerable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var trigger = this.GetOnCollisionEnterAsyncHandler();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();
await trigger.OnCollisionEnterAsync();

// every moves.
await this.GetAsyncMoveTrigger().ForEachAsync(axisEventData =&amp;gt;
{
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AsyncReactiveProperty&lt;/code&gt;, &lt;code&gt;AsyncReadOnlyReactiveProperty&lt;/code&gt; is UniTask&#39;s version of ReactiveProperty. &lt;code&gt;BindTo&lt;/code&gt; extension method of &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; for binding asynchronous stream values to Unity components(Text/Selectable/TMP/Text).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var rp = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);

// AsyncReactiveProperty itself is IUniTaskAsyncEnumerable, you can query by LINQ
rp.ForEachAsync(x =&amp;gt;
{
    Debug.Log(x);
}, this.GetCancellationTokenOnDestroy()).Forget();

rp.Value = 10; // push 10 to all subscriber
rp.Value = 11; // push 11 to all subscriber

// WithoutCurrent ignore initial value
// BindTo bind stream value to unity components.
rp.WithoutCurrent().BindTo(this.textComponent);

await rp.WaitAsync(); // wait until next value set

// also exists ToReadOnlyAsyncReactiveProperty
var rp2 = new AsyncReactiveProperty&amp;lt;int&amp;gt;(99);
var rorp = rp.CombineLatest(rp2, (x, y) =&amp;gt; (x, y)).ToReadOnlyAsyncReactiveProperty(CancellationToken.None);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A pull-type asynchronous stream does not get the next values until the asynchronous processing in the sequence is complete. This could spill data from push-type events such as buttons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// can not get click event during 3 seconds complete.
await button.OnClickAsAsyncEnumerable().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is useful (prevent double-click) but not useful sometimes.&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;Queue()&lt;/code&gt; method will also queue events during asynchronous processing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// queued message in asynchronous processing
await button.OnClickAsAsyncEnumerable().Queue().ForEachAwaitAsync(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use &lt;code&gt;Subscribe&lt;/code&gt;, fire and forget style.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;button.OnClickAsAsyncEnumerable().Subscribe(async x =&amp;gt;
{
    await UniTask.Delay(TimeSpan.FromSeconds(3));
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Channel&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt; is the same as &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threading.channels?view=netcore-3.1&quot;&gt;System.Threading.Tasks.Channels&lt;/a&gt; which is similar to a GoLang Channel.&lt;/p&gt; 
&lt;p&gt;Currently it only supports multiple-producer, single-consumer unbounded channels. It can create by &lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For producer(&lt;code&gt;.Writer&lt;/code&gt;), use &lt;code&gt;TryWrite&lt;/code&gt; to push value and &lt;code&gt;TryComplete&lt;/code&gt; to complete channel. For consumer(&lt;code&gt;.Reader&lt;/code&gt;), use &lt;code&gt;TryRead&lt;/code&gt;, &lt;code&gt;WaitToReadAsync&lt;/code&gt;, &lt;code&gt;ReadAsync&lt;/code&gt;, &lt;code&gt;Completion&lt;/code&gt; and &lt;code&gt;ReadAllAsync&lt;/code&gt; to read queued messages.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ReadAllAsync&lt;/code&gt; returns &lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; so query LINQ operators. Reader only allows single-consumer but uses &lt;code&gt;.Publish()&lt;/code&gt; query operator to enable multicast message. For example, make pub/sub utility.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class AsyncMessageBroker&amp;lt;T&amp;gt; : IDisposable
{
    Channel&amp;lt;T&amp;gt; channel;

    IConnectableUniTaskAsyncEnumerable&amp;lt;T&amp;gt; multicastSource;
    IDisposable connection;

    public AsyncMessageBroker()
    {
        channel = Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;();
        multicastSource = channel.Reader.ReadAllAsync().Publish();
        connection = multicastSource.Connect(); // Publish returns IConnectableUniTaskAsyncEnumerable.
    }

    public void Publish(T value)
    {
        channel.Writer.TryWrite(value);
    }

    public IUniTaskAsyncEnumerable&amp;lt;T&amp;gt; Subscribe()
    {
        return multicastSource;
    }

    public void Dispose()
    {
        channel.Writer.TryComplete();
        connection.Dispose();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;vs Awaitable&lt;/h2&gt; 
&lt;p&gt;Unity 6 introduces the awaitable type, &lt;a href=&quot;https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Awaitable.html&quot;&gt;Awaitable&lt;/a&gt;. To put it simply, Awaitable can be considered a subset of UniTask, and in fact, Awaitable&#39;s design was influenced by UniTask. It should be able to handle PlayerLoop-based awaits, pooled Tasks, and support for cancellation with &lt;code&gt;CancellationToken&lt;/code&gt; in a similar way. With its inclusion in the standard library, you may wonder whether to continue using UniTask or migrate to Awaitable. Here&#39;s a brief guide.&lt;/p&gt; 
&lt;p&gt;First, the functionality provided by Awaitable is equivalent to what coroutines offer. Instead of &lt;code&gt;yield return&lt;/code&gt;, you use await; &lt;code&gt;await NextFrameAsync()&lt;/code&gt; replaces &lt;code&gt;yield return null&lt;/code&gt;; and there are equivalents for &lt;code&gt;WaitForSeconds&lt;/code&gt; and &lt;code&gt;EndOfFrame&lt;/code&gt;. However, that&#39;s the extent of it. Being coroutine-based in terms of functionality, it lacks Task-based features. In practical application development using async/await, operations like &lt;code&gt;WhenAll&lt;/code&gt; are essential. Additionally, UniTask enables many frame-based operations (such as &lt;code&gt;DelayFrame&lt;/code&gt;) and more flexible PlayerLoopTiming control, which are not available in Awaitable. Of course, there&#39;s no Tracker Window either.&lt;/p&gt; 
&lt;p&gt;Therefore, I recommend using UniTask for application development. UniTask is a superset of Awaitable and includes many essential features. For library development, where you want to avoid external dependencies, using Awaitable as a return type for methods would be appropriate. Awaitable can be converted to UniTask using &lt;code&gt;AsUniTask&lt;/code&gt;, so there&#39;s no issue in handling Awaitable-based functionality within the UniTask library. Of course, if you don&#39;t need to worry about dependencies, using UniTask would be the best choice even for library development.&lt;/p&gt; 
&lt;h2&gt;For Unit Testing&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s &lt;code&gt;[UnityTest]&lt;/code&gt; attribute can test coroutine(IEnumerator) but can not test async. &lt;code&gt;UniTask.ToCoroutine&lt;/code&gt; bridges async/await to coroutine so you can test async methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[UnityTest]
public IEnumerator DelayIgnore() =&amp;gt; UniTask.ToCoroutine(async () =&amp;gt;
{
    var time = Time.realtimeSinceStartup;

    Time.timeScale = 0.5f;
    try
    {
        await UniTask.Delay(TimeSpan.FromSeconds(3), ignoreTimeScale: true);

        var elapsed = Time.realtimeSinceStartup - time;
        Assert.AreEqual(3, (int)Math.Round(TimeSpan.FromSeconds(elapsed).TotalSeconds, MidpointRounding.ToEven));
    }
    finally
    {
        Time.timeScale = 1.0f;
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;UniTask&#39;s own unit tests are written using Unity Test Runner and &lt;a href=&quot;https://github.com/Cysharp/RuntimeUnitTestToolkit&quot;&gt;Cysharp/RuntimeUnitTestToolkit&lt;/a&gt; to integrate with CI and check if IL2CPP is working.&lt;/p&gt; 
&lt;h2&gt;ThreadPool limitation&lt;/h2&gt; 
&lt;p&gt;Most UniTask methods run on a single thread (PlayerLoop), with only &lt;code&gt;UniTask.Run&lt;/code&gt;(&lt;code&gt;Task.Run&lt;/code&gt; equivalent) and &lt;code&gt;UniTask.SwitchToThreadPool&lt;/code&gt; running on a thread pool. If you use a thread pool, it won&#39;t work with WebGL and so on.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;UniTask.Run&lt;/code&gt; is now deprecated. You can use &lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt; instead. And also consider whether you can use &lt;code&gt;UniTask.Create&lt;/code&gt; or &lt;code&gt;UniTask.Void&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;IEnumerator.ToUniTask limitation&lt;/h2&gt; 
&lt;p&gt;You can convert coroutine(IEnumerator) to UniTask(or await directly) but it has some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;WaitForEndOfFrame&lt;/code&gt;/&lt;code&gt;WaitForFixedUpdate&lt;/code&gt;/&lt;code&gt;Coroutine&lt;/code&gt; is not supported.&lt;/li&gt; 
 &lt;li&gt;Consuming loop timing is not the same as &lt;code&gt;StartCoroutine&lt;/code&gt;, it uses the specified &lt;code&gt;PlayerLoopTiming&lt;/code&gt; and the default &lt;code&gt;PlayerLoopTiming.Update&lt;/code&gt; is run before MonoBehaviour&#39;s &lt;code&gt;Update&lt;/code&gt; and &lt;code&gt;StartCoroutine&lt;/code&gt;&#39;s loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want fully compatible conversion from coroutine to async, use the &lt;code&gt;IEnumerator.ToUniTask(MonoBehaviour coroutineRunner)&lt;/code&gt; overload. It executes StartCoroutine on an instance of the argument MonoBehaviour and waits for it to complete in UniTask.&lt;/p&gt; 
&lt;h2&gt;For UnityEditor&lt;/h2&gt; 
&lt;p&gt;UniTask can run on Unity Editor like an Editor Coroutine. However, there are some limitations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UniTask.Delay&#39;s DelayType.DeltaTime, UnscaledDeltaTime do not work correctly because they can not get deltaTime in editor. Therefore run on EditMode, automatically change DelayType to &lt;code&gt;DelayType.Realtime&lt;/code&gt; that wait for the right time.&lt;/li&gt; 
 &lt;li&gt;All PlayerLoopTiming run on the timing &lt;code&gt;EditorApplication.update&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-batchmode&lt;/code&gt; with &lt;code&gt;-quit&lt;/code&gt; does not work because Unity does not run &lt;code&gt;EditorApplication.update&lt;/code&gt; and quit after a single frame. Instead, don&#39;t use &lt;code&gt;-quit&lt;/code&gt; and quit manually with &lt;code&gt;EditorApplication.Exit(0)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compare with Standard Task API&lt;/h2&gt; 
&lt;p&gt;UniTask has many standard Task-like APIs. This table shows what the alternative apis are.&lt;/p&gt; 
&lt;p&gt;Use standard type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IProgress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;---&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Use UniTask type.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;.NET Type&lt;/th&gt; 
   &lt;th&gt;UniTask Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;ValueTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;ValueTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;async void&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;async UniTaskVoid&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;+= async () =&amp;gt; { }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Void&lt;/code&gt;, &lt;code&gt;UniTask.Action&lt;/code&gt;, &lt;code&gt;UniTask.UnityAction&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;---&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;/&lt;code&gt;AutoResetUniTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ManualResetValueTaskSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskCompletionSourceCore&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IValueTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskSource&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ValueTask&amp;lt;T&amp;gt;.IsCompleted&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask&amp;lt;T&amp;gt;.Status.IsCompleted()&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;new Progress&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Progress.Create&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.Register(UnsafeRegister)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationToken.RegisterWithoutCaptureExecutionContext&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfter&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CancellationTokenSource.CancelAfterSlim&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateUnbounded&amp;lt;T&amp;gt;(false){ SingleReader = true }&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Channel.CreateSingleConsumerUnbounded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncEnumerator&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;IAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;IUniTaskAsyncDisposable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Delay&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Delay&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Yield&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.Yield&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.Run&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.RunOnThreadPool&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAll&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenAny&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenAny&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.WhenEach&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.WhenEach&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.CompletedTask&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.CompletedTask&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromResult&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromResult&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.FromCanceled&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.FromCanceled&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Task.ContinueWith&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTask.ContinueWith&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UniTaskScheduler.UnobservedTaskException&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Pooling Configuration&lt;/h2&gt; 
&lt;p&gt;UniTask aggressively caches async promise objects to achieve zero allocation (for technical details, see blog post &lt;a href=&quot;https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd&quot;&gt;UniTask v2 — Zero Allocation async/await for Unity, with Asynchronous LINQ&lt;/a&gt;). By default, it caches all promises but you can configure &lt;code&gt;TaskPool.SetMaxPoolSize&lt;/code&gt; to your value, the value indicates cache size per type. &lt;code&gt;TaskPool.GetCacheSizeInfo&lt;/code&gt; returns currently cached objects in pool.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (var (type, size) in TaskPool.GetCacheSizeInfo())
{
    Debug.Log(type + &quot;:&quot; + size);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Allocation on Profiler&lt;/h2&gt; 
&lt;p&gt;In UnityEditor the profiler shows allocation of compiler generated AsyncStateMachine but it only occurs in debug(development) build. C# Compiler generates AsyncStateMachine as class on Debug build and as struct on Release build.&lt;/p&gt; 
&lt;p&gt;Unity supports Code Optimization option starting in 2020.1 (right, footer).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/89967342-2f944600-dc8c-11ea-99fc-0b74527a16f6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;You can change C# compiler optimization to release to remove AsyncStateMachine allocation in development builds. This optimization option can also be set via &lt;code&gt;Compilation.CompilationPipeline-codeOptimization&lt;/code&gt;, and &lt;code&gt;Compilation.CodeOptimization&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;UniTaskSynchronizationContext&lt;/h2&gt; 
&lt;p&gt;Unity&#39;s default SynchronizationContext(&lt;code&gt;UnitySynchronizationContext&lt;/code&gt;) is a poor implementation for performance. UniTask bypasses &lt;code&gt;SynchronizationContext&lt;/code&gt;(and &lt;code&gt;ExecutionContext&lt;/code&gt;) so it does not use it but if exists in &lt;code&gt;async Task&lt;/code&gt;, still used it. &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is a replacement of &lt;code&gt;UnitySynchronizationContext&lt;/code&gt; which is better for performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SyncContextInjecter
{
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
    public static void Inject()
    {
        SynchronizationContext.SetSynchronizationContext(new UniTaskSynchronizationContext());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an optional choice and is not always recommended; &lt;code&gt;UniTaskSynchronizationContext&lt;/code&gt; is less performant than &lt;code&gt;async UniTask&lt;/code&gt; and is not a complete UniTask replacement. It also does not guarantee full behavioral compatibility with the &lt;code&gt;UnitySynchronizationContext&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;API References&lt;/h2&gt; 
&lt;p&gt;UniTask&#39;s API References are hosted at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.html&quot;&gt;cysharp.github.io/UniTask&lt;/a&gt; by &lt;a href=&quot;https://dotnet.github.io/docfx/&quot;&gt;DocFX&lt;/a&gt; and &lt;a href=&quot;https://github.com/Cysharp/DocfxTemplate&quot;&gt;Cysharp/DocfXTemplate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, UniTask&#39;s factory methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.UniTask.html#methods-1&quot;&gt;UniTask#methods&lt;/a&gt;. UniTaskAsyncEnumerable&#39;s factory/extension methods can be seen at &lt;a href=&quot;https://cysharp.github.io/UniTask/api/Cysharp.Threading.Tasks.Linq.UniTaskAsyncEnumerable.html#methods-1&quot;&gt;UniTaskAsyncEnumerable#methods&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;UPM Package&lt;/h2&gt; 
&lt;h3&gt;Install via git URL&lt;/h3&gt; 
&lt;p&gt;Requires a version of unity that supports path query parameter for git packages (Unity &amp;gt;= 2019.3.4f1, Unity &amp;gt;= 2020.1a21). You can add &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&lt;/code&gt; to Package Manager&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/79450714-3aadd100-8020-11ea-8aae-b8d87fc4d7be.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/46207/83702872-e0f17c80-a648-11ea-8183-7469dcd4f810.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;or add &lt;code&gt;&quot;com.cysharp.unitask&quot;: &quot;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask&quot;&lt;/code&gt; to &lt;code&gt;Packages/manifest.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to set a target version, UniTask uses the &lt;code&gt;*.*.*&lt;/code&gt; release tag so you can specify a version like &lt;code&gt;#2.1.0&lt;/code&gt;. For example &lt;code&gt;https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask#2.1.0&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Core&lt;/h2&gt; 
&lt;p&gt;For .NET Core, use NuGet.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PM&amp;gt; Install-Package &lt;a href=&quot;https://www.nuget.org/packages/UniTask&quot;&gt;UniTask&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;UniTask of .NET Core version is a subset of Unity UniTask with PlayerLoop dependent methods removed.&lt;/p&gt; 
&lt;p&gt;It runs at higher performance than the standard Task/ValueTask, but you should be careful to ignore the ExecutionContext/SynchronizationContext when using it. &lt;code&gt;AsyncLocal&lt;/code&gt; also does not work because it ignores ExecutionContext.&lt;/p&gt; 
&lt;p&gt;If you use UniTask internally, but provide ValueTask as an external API, you can write it like the following(Inspired by &lt;a href=&quot;https://github.com/mgravell/PooledAwait&quot;&gt;PooledAwait&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ZeroAllocAsyncAwaitInDotNetCore
{
    public ValueTask&amp;lt;int&amp;gt; DoAsync(int x, int y)
    {
        return Core(this, x, y);

        static async UniTask&amp;lt;int&amp;gt; Core(ZeroAllocAsyncAwaitInDotNetCore self, int x, int y)
        {
            // do anything...
            await Task.Delay(TimeSpan.FromSeconds(x + y));
            await UniTask.Yield();

            return 10;
        }
    }
}

// UniTask does not return to original SynchronizationContext but you can use helper `ReturnToCurrentSynchronizationContext`.
public ValueTask TestAsync()
{
    await using (UniTask.ReturnToCurrentSynchronizationContext())
    {
        await UniTask.SwitchToThreadPool();
        // do anything..
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET Core version is intended to allow users to use UniTask as an interface when sharing code with Unity (such as &lt;a href=&quot;https://github.com/Cysharp/MagicOnion/&quot;&gt;Cysharp/MagicOnion&lt;/a&gt;). .NET Core version of UniTask enables smooth code sharing.&lt;/p&gt; 
&lt;p&gt;Utility methods such as WhenAll which are equivalent to UniTask are provided as &lt;a href=&quot;https://github.com/Cysharp/ValueTaskSupplement&quot;&gt;Cysharp/ValueTaskSupplement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This library is under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AzureAD/microsoft-authentication-library-for-dotnet</title>
      <link>https://github.com/AzureAD/microsoft-authentication-library-for-dotnet</link>
      <description>&lt;p&gt;Microsoft Authentication Library (MSAL) for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Authentication Library (MSAL) for .NET&lt;/h1&gt; 
&lt;p&gt;The MSAL library for .NET is part of the &lt;a href=&quot;https://aka.ms/aaddevv2&quot;&gt;Microsoft identity platform for developers&lt;/a&gt; (formerly named Azure AD) v2.0. It enables you to acquire security tokens to call protected APIs. It uses industry standard OAuth2 and OpenID Connect. The library also supports &lt;a href=&quot;https://azure.microsoft.com/services/active-directory-b2c/&quot;&gt;Azure AD B2C&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Quick links:&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://aka.ms/msalnet&quot;&gt;Conceptual documentation&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://learn.microsoft.com/entra/msal/dotnet/getting-started/choosing-msal-dotnet&quot;&gt;Getting Started&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://aka.ms/aaddevsamplesv2&quot;&gt;Sample Code&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/api/overview/&quot;&gt;API Reference&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://raw.githubusercontent.com/AzureAD/microsoft-authentication-library-for-dotnet/main/README.md#community-help-and-support&quot;&gt;Support&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues&quot;&gt;Feedback&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;h2&gt;NuGet Package&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Client/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/microsoft.identity.client.svg?style=flat-square&amp;amp;label=nuget&amp;amp;colorB=00b200&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Version Lifecycle and Support Matrix&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/AzureAD/microsoft-authentication-library-for-dotnet/main/supportPolicy.md&quot;&gt;Long Term Support policy&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;The following table lists MSAL.NET versions currently supported and receiving security fixes.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Major Version&lt;/th&gt; 
   &lt;th&gt;Last Release&lt;/th&gt; 
   &lt;th&gt;Patch Release Date&lt;/th&gt; 
   &lt;th&gt;Support Phase&lt;/th&gt; 
   &lt;th&gt;End of Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4.x&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Client/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/microsoft.identity.client.svg?style=flat-square&amp;amp;label=nuget&amp;amp;colorB=00b200&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Monthly&lt;/td&gt; 
   &lt;td&gt;Active&lt;/td&gt; 
   &lt;td&gt;Not planned.&lt;br /&gt;✅Supported versions: from 4.72.1 to &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Client/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/microsoft.identity.client.svg?style=flat-square&amp;amp;label=nuget&amp;amp;colorB=00b200&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;br /&gt;⚠️Unsupported versions &amp;lt; &lt;code&gt;4.72.1&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Performance perspectives&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/entra/msal/dotnet/advanced/performance-testing&quot;&gt;Our documentation&lt;/a&gt; describes the approach to performance testing.&lt;/p&gt; 
&lt;p&gt;View some of the historical performance benchmark results in &lt;a href=&quot;https://azuread.github.io/microsoft-authentication-library-for-dotnet/benchmarks/&quot;&gt;our dashboard&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support SLA&lt;/h2&gt; 
&lt;p&gt;MSAL.NET became Generally Available with MSAL.NET 3.0.8. Since MSAL.NET moved to version 4:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Major versions are supported for twelve months after the release of the next major version.&lt;/li&gt; 
 &lt;li&gt;Minor versions older than N-1 are not supported.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Minor versions include bug fixes or features with non-breaking (additive) API changes. It is expected that applications using the library can upgrade through the IDE or CLI with no friction. We will not patch old minor versions of the library. When opening new issues, please confirm that you are using the latest minor version.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Using MSAL.NET&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Guides, tutorials, and detailed walkthroughs are available &lt;a href=&quot;https://learn.microsoft.com/entra/msal/dotnet/getting-started/choosing-msal-dotnet&quot;&gt;on Microsoft Learn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;API documentation is available &lt;a href=&quot;https://learn.microsoft.com/dotnet/api/microsoft.identity.client&quot;&gt;on Microsoft Learn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Code samples are available from our &lt;a href=&quot;https://aka.ms/aaddevsamplesv2&quot;&gt;Samples&lt;/a&gt; page.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Where do I file issues&lt;/h2&gt; 
&lt;p&gt;You can file new issues in &lt;a href=&quot;https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues&quot;&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community help and support&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href=&quot;https://stackoverflow.com/questions/tagged/azure-ad-msal&quot;&gt;Stack Overflow&lt;/a&gt; with the community to provide support. We highly recommend you ask your questions on Stack Overflow first and browse &lt;a href=&quot;https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues&quot;&gt;existing issues&lt;/a&gt; to see if someone has asked your question before.&lt;/p&gt; 
&lt;p&gt;If you find a bug or have a feature request, please raise the issue on &lt;a href=&quot;https://raw.githubusercontent.com/AzureAD/issues&quot;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome contributions and feedback. You can fork and clone the repo and start contributing now. Read our &lt;a href=&quot;https://raw.githubusercontent.com/AzureAD/microsoft-authentication-library-for-dotnet/main/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Security library&lt;/h2&gt; 
&lt;p&gt;This library controls how users sign-in and access services. We recommend you always take the latest version of our library in your app when possible. We use &lt;a href=&quot;http://semver.org&quot;&gt;semantic versioning&lt;/a&gt; so you can control the risk associated with updating your app. As an example, always downloading the latest minor version number (e.g. x.&lt;em&gt;y&lt;/em&gt;.z) ensures you get the latest security and feature enhancements but our API surface remains the same. You can always see the latest version and release notes under the Releases tab of GitHub.&lt;/p&gt; 
&lt;h2&gt;Security reporting&lt;/h2&gt; 
&lt;p&gt;If you find a security issue with our libraries or services please report it to &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt; in as much detail as possible. Your submission may be eligible for a bounty through the &lt;a href=&quot;https://aka.ms/bugbounty&quot;&gt;Microsoft Bug Bounty&lt;/a&gt; program. Please do not post security issues to GitHub Issues or any other public site. We will contact you shortly after receiving the information. We encourage you to get notifications of when security incidents occur by visiting the &lt;a href=&quot;https://www.microsoft.com/msrc/technical-security-notifications?rtc=1&quot;&gt;Microsoft Technical Security Notifications page&lt;/a&gt; and subscribing to Security Advisory Alerts.&lt;/p&gt; 
&lt;h2&gt;Data collection&lt;/h2&gt; 
&lt;p&gt;The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services. You may turn off the telemetry as described in the repository. There are also some features in the software that may enable you and Microsoft to collect data from users of your applications. If you use these features, you must comply with applicable law, including providing appropriate notices to users of your applications together with a copy of Microsoft&#39;s privacy statement. Our privacy statement is located at &lt;a href=&quot;https://go.microsoft.com/fwlink/?LinkID=824704&quot;&gt;https://go.microsoft.com/fwlink/?LinkID=824704&lt;/a&gt;. You can learn more about data collection and use in the help documentation and our privacy statement. Your use of the software operates as your consent to these practices.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://learn.microsoft.com/entra/msal/dotnet/resources/telemetry-overview&quot;&gt;our telemetry documentation&lt;/a&gt; for an example of the telemetry collected by MSAL.NET.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; 
&lt;p&gt;Copyright © Microsoft Corporation. All rights reserved. Licensed under the MIT License (the &quot;License&quot;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/runtime</title>
      <link>https://github.com/dotnet/runtime</link>
      <description>&lt;p&gt;.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Runtime&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=129&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/runtime/runtime?branchName=main&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/help%20wanted&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/help%20wanted?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=help%20wanted&quot; alt=&quot;Help Wanted&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/runtime/labels/good%20first%20issue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/runtime/good%20first%20issue?style=flat-square&amp;amp;color=%232EA043&amp;amp;label=good%20first%20issue&quot; alt=&quot;Good First Issue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#what-is-net&quot;&gt;What is .NET?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#how-can-i-contribute&quot;&gt;How can I contribute?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#reporting-security-issues-and-security-bugs&quot;&gt;Reporting security issues and security bugs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#filing-issues&quot;&gt;Filing issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#useful-links&quot;&gt;Useful Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#net-foundation&quot;&gt;.NET Foundation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repo contains the code to build the .NET runtime, libraries and shared host (&lt;code&gt;dotnet&lt;/code&gt;) installers for all supported platforms, as well as the sources to .NET runtime and libraries.&lt;/p&gt; 
&lt;h2&gt;What is .NET?&lt;/h2&gt; 
&lt;p&gt;Official Starting Page: &lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;https://dotnet.microsoft.com&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/get-started&quot;&gt;How to use .NET&lt;/a&gt; (with VS, VS Code, command-line CLI) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;Install official releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core&quot;&gt;Documentation&lt;/a&gt; (Get Started, Tutorials, Porting from .NET Framework, API reference, ...) 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/deploying&quot;&gt;Deploying apps&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/support.md&quot;&gt;Support&lt;/a&gt; (Releases, OS Versions, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/roadmap.md&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Many people all over the world have helped make this project better.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; explains what kinds of contributions we welcome&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/workflow/README.md&quot;&gt;Workflow Instructions&lt;/a&gt; explains how to build and test&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/docs/project/dogfooding.md&quot;&gt;Dogfooding .NET&lt;/a&gt; explains how to get nightly builds of the runtime and its libraries to test them in your own projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/SECURITY.md&quot;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see info about related &lt;a href=&quot;https://www.microsoft.com/msrc/bounty-dot-net-core&quot;&gt;Microsoft .NET Bounty Program&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Filing issues&lt;/h2&gt; 
&lt;p&gt;This repo should contain issues that are tied to the runtime, the class libraries and frameworks, the installation of the &lt;code&gt;dotnet&lt;/code&gt; binary (sometimes known as the &lt;code&gt;muxer&lt;/code&gt;) and the installation of the .NET runtime and libraries.&lt;/p&gt; 
&lt;p&gt;For other issues, please file them to their appropriate sibling repos. We have links to many of them on &lt;a href=&quot;https://github.com/dotnet/runtime/issues/new/choose&quot;&gt;our new issue page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://source.dot.net&quot;&gt;.NET source index&lt;/a&gt; / &lt;a href=&quot;https://referencesource.microsoft.com&quot;&gt;.NET Framework source index&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/api&quot;&gt;API Reference docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://apisof.net&quot;&gt;.NET API Catalog&lt;/a&gt; (incl. APIs from daily builds and API usage info)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/dotnet-api-docs/wiki&quot;&gt;API docs writing guidelines&lt;/a&gt; - useful when writing /// comments&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;.NET Discord Server&lt;/a&gt; - a place to discuss the development of .NET and its ecosystem&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;.NET Runtime is a &lt;a href=&quot;https://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/aspnet/core&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;https://contributor-covenant.org&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;General .NET OSS discussions: &lt;a href=&quot;https://github.com/dotnet-foundation/Home/discussions&quot;&gt;.NET Foundation Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;.NET (including the runtime repo) is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/runtime/main/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>abpframework/abp</title>
      <link>https://github.com/abpframework/abp</link>
      <description>&lt;p&gt;Open-source web application framework for ASP.NET Core! Offers an opinionated architecture to build enterprise software solutions with best practices on top of the .NET. Provides the fundamental infrastructure, cross-cutting-concern implementations, startup templates, application modules, UI themes, tooling and documentation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/abpframework/abp/build-and-test.yml?branch=dev&amp;amp;style=flat-square&quot; alt=&quot;build and test&quot; /&gt; 🔹 &lt;a href=&quot;https://codecov.io/gh/abpframework/abp&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/abpframework/abp/branch/dev/graph/badge.svg?token=jUKLCxa6HF&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://www.nuget.org/packages/Volo.Abp.Core&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Volo.Abp.Core.svg?style=flat-square&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://www.nuget.org/packages/Volo.Abp.Core&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Volo.Abp.Core.svg?style=flat-square&quot; alt=&quot;NuGet (with prereleases)&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://abp.io/docs/latest/release-info/nightly-builds&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/abp-nightly/vpre/Volo.Abp.svg?style=flat-square&quot; alt=&quot;MyGet (nightly builds)&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://www.nuget.org/packages/Volo.Abp.Core&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Volo.Abp.Core.svg?style=flat-square&quot; alt=&quot;NuGet Download&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://github.com/abpframework/abp/raw/dev/CODE_OF_CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&quot; alt=&quot;Code of Conduct&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://cla-assistant.io/abpframework/abp&quot;&gt;&lt;img src=&quot;https://cla-assistant.io/readme/badge/abpframework/abp&quot; alt=&quot;CLA Signed&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://abp.io/join-discord&quot;&gt;&lt;img src=&quot;https://discord.com/api/guilds/951497912645476422/widget.png?style=shield&quot; alt=&quot;Discord Shield&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/&quot;&gt;ABP&lt;/a&gt; offers an &lt;strong&gt;opinionated architecture&lt;/strong&gt; to build enterprise software solutions with &lt;strong&gt;best practices&lt;/strong&gt; on top of the &lt;strong&gt;.NET&lt;/strong&gt; and the &lt;strong&gt;ASP.NET Core&lt;/strong&gt; platforms. It provides the fundamental infrastructure, production-ready startup templates, pre-built application modules, UI themes, tooling, guides and documentation to implement that architecture properly and &lt;strong&gt;automate the details&lt;/strong&gt; and repetitive works as much as possible.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c4356ec7-4d0f-4e00-a1d2-fc74ad985fb8&quot; alt=&quot;ABP Platform&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/get-started&quot;&gt;The Getting Started guide&lt;/a&gt; can be used to create and run ABP-based solutions with different options and details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/tutorials/todo&quot;&gt;Quick Start&lt;/a&gt; is a single-part, quick-start tutorial to build a simple application with the ABP Framework. Start with this tutorial if you want to understand how ABP works quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/tutorials/book-store&quot;&gt;Web Application Development Tutorial&lt;/a&gt; is a complete tutorial on developing a full-stack web application with all aspects of a real-life solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/tutorials/modular-crm/index&quot;&gt;Modular Monolith Application&lt;/a&gt;: A multi-part tutorial that demonstrates how to create application modules, compose and communicate them to build a monolith modular web application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What ABP Provides?&lt;/h2&gt; 
&lt;p&gt;ABP bridges the gap between ASP.NET Core and real-world business application requirements, and makes you focus on your own business code.&lt;/p&gt; 
&lt;p&gt;The following diagram contains the core components of the &lt;strong&gt;ABP Platform&lt;/strong&gt; and shows how ABP sits between &lt;strong&gt;ASP.NET Core&lt;/strong&gt; and &lt;strong&gt;Your Application&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/abp-overall-diagram.png&quot; alt=&quot;abp-overall-diagram&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Architecture&lt;/h3&gt; 
&lt;p&gt;ABP offers a complete architectural model to build modern enterprise software solutions. Here, the fundamental architectural structures offered and first-class supported by ABP:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/domain-driven-design&quot;&gt;Domain Driven Design (DDD)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/microservices&quot;&gt;Microservices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/modularity/basics&quot;&gt;Modularity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/multi-tenancy&quot;&gt;Multi-Tenancy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infrastructure&lt;/h3&gt; 
&lt;p&gt;There are a lot of infrastructure features provided by the ABP Framework to achieve real-world scenarios easier, like &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/event-bus&quot;&gt;Event Bus&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/background-jobs&quot;&gt;Background Job System&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/audit-logging&quot;&gt;Audit Logging&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/blob-storing&quot;&gt;BLOB Storing&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/data-seeding&quot;&gt;Data Seeding&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/data-filtering&quot;&gt;Data Filtering&lt;/a&gt;, and much more.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/framework&quot;&gt;See ABP Framework features&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Cross-Cutting Concerns&lt;/h4&gt; 
&lt;p&gt;ABP also simplifies (and even automates wherever possible) cross-cutting concerns and common non-functional requirements like &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/exception-handling&quot;&gt;Exception Handling&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/validation&quot;&gt;Validation&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/authorizationn&quot;&gt;Authorization&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/localization&quot;&gt;Localization&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/caching&quot;&gt;Caching&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/settings&quot;&gt;Setting Management&lt;/a&gt;, etc.&lt;/p&gt; 
&lt;h3&gt;Application Modules&lt;/h3&gt; 
&lt;p&gt;ABP is a modular framework and the &lt;a href=&quot;https://abp.io/modules&quot;&gt;application modules&lt;/a&gt; provide &lt;strong&gt;pre-built application functionalities&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Some examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.Account.Pro&quot;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt;: Provides UI for the account management and allows user to login/register to the application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.CmsKit&quot;&gt;CMS Kit&lt;/a&gt;: Brings CMS (Content Management System) capabilities to your application.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://abp.io/modules/Volo.Identity.Pro&quot;&gt;Identity&lt;/a&gt;&lt;/strong&gt;: Manages organization units, roles, users and their permissions based on the Microsoft Identity library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.OpenIddict.Pro&quot;&gt;&lt;strong&gt;OpenIddict&lt;/strong&gt;&lt;/a&gt;: Integrates to OpenIddict library and provides a management UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.Saas&quot;&gt;&lt;strong&gt;SaaS&lt;/strong&gt;&lt;/a&gt;: Manages tenants and editions for a &lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/multi-tenancy&quot;&gt;multi-tenant&lt;/a&gt; (SaaS) application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://abp.io/modules&quot;&gt;all official modules&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Startup Templates&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://abp.io/docs/latest/solution-templates&quot;&gt;Startup templates&lt;/a&gt; are pre-built Visual Studio solution templates. You can create your own solution based on these templates to &lt;strong&gt;immediately start your development&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Tooling&lt;/h3&gt; 
&lt;p&gt;ABP provides CLI and UI tools to simplify your daily development work flows.&lt;/p&gt; 
&lt;h4&gt;ABP Studio&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/studio&quot;&gt;ABP Studio&lt;/a&gt; is a cross-platform desktop application for ABP developers.&lt;/p&gt; 
&lt;p&gt;It is well integrated to the ABP Framework and aims to provide a comfortable development environment for you by automating things, providing insights about your solution, making develop, run and deploy your solutions much easier.&lt;/p&gt; 
&lt;h4&gt;ABP Suite&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/suite&quot;&gt;ABP Suite&lt;/a&gt; allows you to automatically generate web pages in a matter of minutes.&lt;/p&gt; 
&lt;h4&gt;ABP CLI&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/cli&quot;&gt;ABP CLI&lt;/a&gt; is a command line tool to perform common operations for ABP based solutions.&lt;/p&gt; 
&lt;h2&gt;Mastering ABP Framework Book&lt;/h2&gt; 
&lt;p&gt;This book will help you to gain a complete understanding of the ABP Framework and modern web application development techniques. It is written by the creator and team lead of the ABP Framework. You can buy from &lt;a href=&quot;https://www.amazon.com/gp/product/B097Z2DM8Q&quot;&gt;Amazon&lt;/a&gt; or &lt;a href=&quot;https://www.packtpub.com/product/mastering-abp-framework/9781801079242&quot;&gt;Packt Publishing&lt;/a&gt;. Find further info about the book at &lt;a href=&quot;https://abp.io/books/mastering-abp-framework&quot;&gt;abp.io/books/mastering-abp-framework&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/book-mastering-abp-framework.png&quot; alt=&quot;book-mastering-abp-framework&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;The Community&lt;/h2&gt; 
&lt;h3&gt;ABP Community Web Site&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://abp.io/community&quot;&gt;ABP Community&lt;/a&gt; is a central hub to publish &lt;strong&gt;articles&lt;/strong&gt; and share &lt;strong&gt;knowledge&lt;/strong&gt; about the ABP Framework.&lt;/p&gt; 
&lt;h3&gt;Blog&lt;/h3&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://abp.io/blog&quot;&gt;ABP Blog&lt;/a&gt; to learn the latest happenings in the ABP Framework.&lt;/p&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://abp.io/docs/latest/samples&quot;&gt;sample projects&lt;/a&gt; built with the ABP Framework.&lt;/p&gt; 
&lt;h3&gt;Want to Contribute?&lt;/h3&gt; 
&lt;p&gt;ABP is a community-driven open-source project. See &lt;a href=&quot;https://abp.io/docs/latest/contribution&quot;&gt;the contribution guide&lt;/a&gt; if you want to participate in this project.&lt;/p&gt; 
&lt;h2&gt;Official Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io&quot;&gt;Home Website&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://abp.io/get-started&quot;&gt;Get Started&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://abp.io/framework&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest&quot;&gt;Documents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/samples&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/abp&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/abpframework&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support ABP&lt;/h2&gt; 
&lt;p&gt;GitHub repository stars are an important indicator of popularity and the size of the community. If you like ABP Framework, support us by clicking the star &lt;span&gt;⭐&lt;/span&gt; on the repository.&lt;/p&gt; 
&lt;h2&gt;Discord Server&lt;/h2&gt; 
&lt;p&gt;We have a Discord server where you can chat with other ABP users. Share your ideas, report technical issues, showcase your creations, share the tips that worked for you and catch up with the latest news and announcements about ABP Framework. Join 👉 &lt;a href=&quot;https://abp.io/join-discord&quot;&gt;https://abp.io/join-discord&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tyrrrz/YoutubeDownloader</title>
      <link>https://github.com/Tyrrrz/YoutubeDownloader</link>
      <description>&lt;p&gt;Downloads videos and playlists from YouTube&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YoutubeDownloader&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tyrrrz/.github/raw/master/docs/project-status.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/status-maintenance-ffd700.svg?sanitize=true&quot; alt=&quot;Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tyrrrz.me/ukraine&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/made_in-ukraine-ffd700.svg?labelColor=0057b7&quot; alt=&quot;Made in Ukraine&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tyrrrz/YoutubeDownloader/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/Tyrrrz/YoutubeDownloader/main.yml?branch=master&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tyrrrz/YoutubeDownloader/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Tyrrrz/YoutubeDownloader.svg?sanitize=true&quot; alt=&quot;Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tyrrrz/YoutubeDownloader/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Tyrrrz/YoutubeDownloader/total.svg?sanitize=true&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/2SUWKFnHSm&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/869237470565392384?label=discord&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/tyrrrz/status/1495972128977571848&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/fuck-russia-e4181c.svg?labelColor=000000&quot; alt=&quot;Fuck Russia&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width=&quot;99999&quot; align=&quot;center&quot;&gt;Development of this project is entirely funded by the community. &lt;b&gt;&lt;a href=&quot;https://tyrrrz.me/donate&quot;&gt;Consider donating to support!&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/YoutubeDownloader/master/favicon.png&quot; alt=&quot;Icon&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;YoutubeDownloader&lt;/strong&gt; is an application that lets you download videos from YouTube. You can copy-paste URL of any video, playlist or channel and download it directly to a format of your choice. It also supports searching by keywords, which is helpful if you want to quickly look up and download videos.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This application uses &lt;a href=&quot;https://github.com/Tyrrrz/YoutubeExplode&quot;&gt;&lt;strong&gt;YoutubeExplode&lt;/strong&gt;&lt;/a&gt; under the hood to interact with YouTube. You can &lt;a href=&quot;https://tyrrrz.me/blog/reverse-engineering-youtube-revisited&quot;&gt;read this article&lt;/a&gt; to learn more about how it works.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Terms of use&lt;sup&gt;&lt;a href=&quot;https://github.com/Tyrrrz/.github/raw/master/docs/why-so-political.md&quot;&gt;[?]&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt; 
&lt;p&gt;By using this project or its source code, for any purpose and in any shape or form, you grant your &lt;strong&gt;implicit agreement&lt;/strong&gt; to all the following statements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;strong&gt;condemn Russia and its military aggression against Ukraine&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;recognize that Russia is an occupant that unlawfully invaded a sovereign state&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;support Ukraine&#39;s territorial integrity, including its claims over temporarily occupied territories of Crimea and Donbas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;reject false narratives perpetuated by Russian state propaganda&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more about the war and how you can help, &lt;a href=&quot;https://tyrrrz.me/ukraine&quot;&gt;click here&lt;/a&gt;. Glory to Ukraine! 🇺🇦&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🟢 &lt;strong&gt;&lt;a href=&quot;https://github.com/Tyrrrz/YoutubeDownloader/releases/latest&quot;&gt;Stable release&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;🟠 &lt;a href=&quot;https://github.com/Tyrrrz/YoutubeDownloader/actions/workflows/main.yml&quot;&gt;CI build&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: To launch the app on MacOS, you need to first remove the downloaded file from quarantine. You can do that by running the following command in the terminal: &lt;code&gt;xattr -rd com.apple.quarantine YoutubeDownloader.app&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you&#39;re unsure which build is right for your system, consult with &lt;a href=&quot;https://useragent.cc&quot;&gt;this page&lt;/a&gt; to determine your OS and CPU architecture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;strong&gt;YoutubeDownloader&lt;/strong&gt; comes bundled with &lt;a href=&quot;https://ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; which is used for processing videos. You can also download a version of &lt;strong&gt;YoutubeDownloader&lt;/strong&gt; that doesn&#39;t include FFmpeg (&lt;code&gt;YoutubeDownloader.Bare.*&lt;/code&gt; builds) if you prefer to use your own installation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross-platform graphical user interface&lt;/li&gt; 
 &lt;li&gt;Download videos by URL&lt;/li&gt; 
 &lt;li&gt;Download videos from playlists or channels&lt;/li&gt; 
 &lt;li&gt;Download videos by search query&lt;/li&gt; 
 &lt;li&gt;Selectable video quality and format&lt;/li&gt; 
 &lt;li&gt;Automatically embed audio tracks in alternative languages&lt;/li&gt; 
 &lt;li&gt;Automatically embed subtitles&lt;/li&gt; 
 &lt;li&gt;Automatically inject media tags&lt;/li&gt; 
 &lt;li&gt;Log in with a YouTube account to access private content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/YoutubeDownloader/master/.assets/list.png&quot; alt=&quot;list&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/YoutubeDownloader/master/.assets/single.png&quot; alt=&quot;single&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Tyrrrz/YoutubeDownloader/master/.assets/multiple.png&quot; alt=&quot;multiple&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mob-sakai/ParticleEffectForUGUI</title>
      <link>https://github.com/mob-sakai/ParticleEffectForUGUI</link>
      <description>&lt;p&gt;Render particle effect in UnityUI(uGUI). Maskable, sortable, and no extra Camera/RenderTexture/Canvas.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img alt=&quot;UIParticleIcon&quot; src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/assets/12690315/d76e105e-a840-4f61-a1f6-8cf311c0812d&quot; width=&quot;26&quot; /&gt; Particle Effect For UGUI (UI Particle) 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://openupm.com/packages/com.coffee.ui-particle/&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/com.coffee.ui-particle?label=openupm&amp;amp;registry_uri=https://package.openupm.com&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/mob-sakai/ParticleEffectForUGUI&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/raw/main/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/mob-sakai/ParticleEffectForUGUI.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;img src=&quot;https://img.shields.io/badge/Unity-2018.2+-57b9d3.svg?style=flat&amp;amp;logo=unity&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/uGUI_2.0_Ready-57b9d3.svg?style=flat&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/UPR%2FHDPR_Ready-57b9d3.svg?style=flat&quot; alt=&quot;&quot; /&gt;&lt;br /&gt; &lt;img src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/actions/workflows/test.yml/badge.svg?branch=develop&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-orange.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/subscription&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/mob-sakai/ParticleEffectForUGUI.svg?style=social&amp;amp;label=Watch&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mob_sakai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/mob_sakai.svg?label=Follow&amp;amp;style=social&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;lt;&amp;lt; &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-description-&quot;&gt;📝 Description&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-key-features&quot;&gt;📌 Key Features&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-demo&quot;&gt;🎮 Demo&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-installation&quot;&gt;⚙ Installation&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-usage&quot;&gt;🚀 Usage&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-development-note&quot;&gt;🛠 Development Note&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-contributing&quot;&gt;🤝 Contributing&lt;/a&gt; &amp;gt;&amp;gt;&lt;/p&gt; 
&lt;h2&gt;📝 Description 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41771577-8da4b968-7650-11e8-9524-cd162c422d9d.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;This package uses the new APIs &lt;code&gt;MeshBake/MeshTrailBake&lt;/code&gt; (introduced in Unity 2018.2) to render particles through &lt;code&gt;CanvasRenderer&lt;/code&gt;.&lt;br /&gt; You can render, mask, and sort your &lt;code&gt;ParticleSystems&lt;/code&gt; for UI without the need for an additional &lt;code&gt;Camera&lt;/code&gt;, &lt;code&gt;RenderTexture&lt;/code&gt;, or &lt;code&gt;Canvas&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-key-features&quot;&gt;📌 Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-demo&quot;&gt;🎮 Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-installation&quot;&gt;⚙ Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-via-openupm&quot;&gt;Install via OpenUPM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-via-upm-with-package-manager-ui&quot;&gt;Install via UPM (with Package Manager UI)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-via-upm-manually&quot;&gt;Install via UPM (Manually)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#install-as-embedded-package&quot;&gt;Install as Embedded Package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-usage&quot;&gt;🚀 Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#component-uiparticle&quot;&gt;Component: UIParticle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#basic-usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#usage-with-your-existing-particlesystem-prefab&quot;&gt;Usage with Your Existing ParticleSystem Prefab&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#usage-with-mask-or-rectmask2d-component&quot;&gt;Usage with &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#usage-with-script&quot;&gt;Usage with Script&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#component-uiparticleattractor&quot;&gt;Component: UIParticleAttractor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#project-settings&quot;&gt;Project Settings&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-development-note&quot;&gt;🛠 Development Note&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#compares-the-baking-mesh-approach-with-the-conventional-approach&quot;&gt;Compares the Baking mesh approach with the conventional approach&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#performance-test-results&quot;&gt;Performance test results&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-faq-why-are-my-uiparticles-not-displayed-correctly&quot;&gt;🔍 FAQ: Why Are My UIParticles Not Displayed Correctly?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#shader-limitation&quot;&gt;Shader Limitation&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#built-in-shaders-are-not-supported&quot;&gt;Built-in shaders are not supported&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#unity-2018-or-2019-uvzw-components-will-be-discarded&quot;&gt;(Unity 2018 or 2019) UV.zw components will be discarded&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#unity-2018-or-2019-custom-vertex-streams&quot;&gt;(Unity 2018 or 2019) Custom vertex streams&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#overheads&quot;&gt;Overheads&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#how-to-make-a-custom-shader-to-support-mask-and-rectmask2d-component&quot;&gt;How to Make a Custom Shader to Support &lt;code&gt;Mask&lt;/code&gt; and &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#-contributing&quot;&gt;🤝 Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#pull-requests&quot;&gt;Pull Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#author&quot;&gt;Author&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#see-also&quot;&gt;See Also&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;📌 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; The package is ready to use out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sortable:&lt;/strong&gt; Sort particle effects and other UI elements by sibling index.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Maskable:&lt;/strong&gt; Supports &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No extra components required:&lt;/strong&gt; No need for an additional &lt;code&gt;Camera&lt;/code&gt;, &lt;code&gt;RenderTexture&lt;/code&gt;, or &lt;code&gt;Canvas&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trail module support:&lt;/strong&gt; Fully supports the Trail module.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CanvasGroup alpha support:&lt;/strong&gt; Integrates with &lt;code&gt;CanvasGroup&lt;/code&gt; alpha.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No allocations:&lt;/strong&gt; Efficiently renders particles without allocations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Any canvas render mode support:&lt;/strong&gt; Works with overlay, camera space, and world space.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Any Render pipeline support:&lt;/strong&gt; Compatible with Universal Render Pipeline (URP) and High Definition Render Pipeline (HDRP).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disabling domain reload support:&lt;/strong&gt; Supports disabling &lt;code&gt;Enter Play Mode Options &amp;gt; Reload Domain&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Animatable material properties:&lt;/strong&gt; Supports changing material properties with AnimationClip (AnimatableProperty).&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/53286323-2d94a980-37b0-11e9-8afb-c4a207805ff2.gif&quot; alt=&quot;AnimatableProperty.gif&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple materials:&lt;/strong&gt; Supports 8+ materials.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Correct positioning:&lt;/strong&gt; Adjusts world space particle positions correctly when changing window size for standalone platforms (Windows, MacOSX, and Linux).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive scaling:&lt;/strong&gt; Provides adaptive scaling for UI (AutoScalingMode).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance optimization:&lt;/strong&gt; Mesh sharing group to improve performance.&lt;br /&gt; &lt;img alt=&quot;MeshSharing.gif&quot; src=&quot;https://user-images.githubusercontent.com/12690315/174311048-c882df81-6c34-4eba-b0aa-5645457692f1.gif&quot; width=&quot;450&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Particle attractor:&lt;/strong&gt; Includes a particle attractor component.&lt;br /&gt; &lt;img alt=&quot;ParticleAttractor.gif&quot; src=&quot;https://user-images.githubusercontent.com/12690315/174311027-462929a4-13f0-4ec4-86ea-9c832f2eecf1.gif&quot; width=&quot;450&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Emission position mode:&lt;/strong&gt; Supports relative/absolute particle emission position modes.&lt;br /&gt; &lt;img alt=&quot;AbsolutePosition.gif&quot; src=&quot;https://user-images.githubusercontent.com/12690315/175751579-5a2357e8-2ecf-4afd-83c8-66e9771bde39.gif&quot; width=&quot;450&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom view size:&lt;/strong&gt; Fixes min/max particle size mismatch.&lt;br /&gt; &lt;img src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/assets/12690315/dd929959-1a37-420b-b13d-e849022b9c9d&quot; alt=&quot;CustomViewSize.gif&quot; /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;🎮 Demo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mob-sakai.github.io/demos/UIParticle_Demo/index.html&quot;&gt;WebGL Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/174311768-1843a5f2-f776-491b-aaa8-2a131a8b6a16.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mob-sakai.github.io/Demos/ParticleEffectForUGUI_CFX&quot;&gt;WebGL Demo (Cartoon FX &amp;amp; War FX)&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://assetstore.unity.com/packages/vfx/particles/cartoon-fx-free-109565&quot;&gt;Cartoon FX Free&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://assetstore.unity.com/packages/vfx/particles/war-fx-5669&quot;&gt;War FX&lt;/a&gt; (by &lt;a href=&quot;https://assetstore.unity.com/publishers/1669&quot;&gt;Jean Moreno (JMO)&lt;/a&gt;) with UIParticle&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/91664766-3e07ac00-eb2c-11ea-978b-ef723be80619.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;⚙ Installation&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;This package requires &lt;strong&gt;Unity 2018.3 or later&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Install via OpenUPM&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;This package is available on &lt;a href=&quot;https://openupm.com&quot;&gt;OpenUPM&lt;/a&gt; package registry.&lt;/li&gt; 
 &lt;li&gt;This is the preferred method of installation, as you can easily receive updates as they&#39;re released.&lt;/li&gt; 
 &lt;li&gt;If you have &lt;a href=&quot;https://github.com/openupm/openupm-cli&quot;&gt;openupm-cli&lt;/a&gt; installed, then run the following command in your project&#39;s directory: &lt;pre&gt;&lt;code&gt;openupm add com.coffee.ui-particle
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;To update the package, use Package Manager UI (&lt;code&gt;Window &amp;gt; Package Manager&lt;/code&gt;) or run the following command with &lt;code&gt;@{version}&lt;/code&gt;: &lt;pre&gt;&lt;code&gt;openupm add com.coffee.ui-particle@4.9.0
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Install via UPM (with Package Manager UI)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click &lt;code&gt;Window &amp;gt; Package Manager&lt;/code&gt; to open Package Manager UI.&lt;/li&gt; 
 &lt;li&gt;Click &lt;code&gt;+ &amp;gt; Add package from git URL...&lt;/code&gt; and input the repository URL: &lt;code&gt;https://github.com/mob-sakai/ParticleEffectForUGUI.git&lt;/code&gt;&lt;br /&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/f88f47ad-c606-44bd-9e86-ee3f72eac548&quot; alt=&quot;&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;To update the package, change suffix &lt;code&gt;#{version}&lt;/code&gt; to the target version. 
  &lt;ul&gt; 
   &lt;li&gt;e.g. &lt;code&gt;https://github.com/mob-sakai/ParticleEffectForUGUI.git#4.9.0&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Install via UPM (Manually)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Open the &lt;code&gt;Packages/manifest.json&lt;/code&gt; file in your project. Then add this package somewhere in the &lt;code&gt;dependencies&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;dependencies&quot;: {
    &quot;com.coffee.ui-particle&quot;: &quot;https://github.com/mob-sakai/ParticleEffectForUGUI.git&quot;,
    ...
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To update the package, change suffix &lt;code&gt;#{version}&lt;/code&gt; to the target version.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;e.g. &lt;code&gt;&quot;com.coffee.ui-particle&quot;: &quot;https://github.com/mob-sakai/ParticleEffectForUGUI.git#4.9.0&quot;,&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Install as Embedded Package&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download a source code zip file from &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI.git/releases&quot;&gt;Releases&lt;/a&gt; and extract it.&lt;/li&gt; 
 &lt;li&gt;Place it in your project&#39;s &lt;code&gt;Packages&lt;/code&gt; directory.&lt;br /&gt; &lt;img src=&quot;https://github.com/mob-sakai/mob-sakai/assets/12690315/0b7484b4-5fca-43b0-a9ef-e5dbd99bcdb4&quot; alt=&quot;&quot; /&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you want to fix bugs or add features, install it as an embedded package.&lt;/li&gt; 
 &lt;li&gt;To update the package, you need to re-download it and replace the contents.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Usage&lt;/h2&gt; 
&lt;h3&gt;Component: UIParticle&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;UIParticle&lt;/code&gt; controls the ParticleSystems that are attached to its own game objects and child game objects.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/bc9eb783-afce-4102-ac61-aee9ea8d6f2f&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Maskable&lt;/strong&gt;: Does this graphic allow maskable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scale&lt;/strong&gt;: Scale the rendering particles. When the &lt;code&gt;3D&lt;/code&gt; toggle is enabled, 3D scale (x, y, z) is supported.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Animatable Properties&lt;/strong&gt;: If you want to update material properties (e.g., &lt;code&gt;_MainTex_ST&lt;/code&gt;, &lt;code&gt;_Color&lt;/code&gt;) in AnimationClip, use this to mark as animatable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mesh Sharing&lt;/strong&gt;: Particle simulation results are shared within the same group. A large number of the same effects can be displayed with a small load. When the &lt;code&gt;Random&lt;/code&gt; toggle is enabled, it will be grouped randomly. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;None:&lt;/strong&gt; Disable mesh sharing.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Auto:&lt;/strong&gt; Automatically select Primary/Replica.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Primary:&lt;/strong&gt; Provides particle simulation results to the same group.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Primary Simulator:&lt;/strong&gt; Primary, but do not render the particle (simulation only).&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Replica:&lt;/strong&gt; Render simulation results provided by the primary.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Position Mode&lt;/strong&gt;: Emission position mode. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Absolute:&lt;/strong&gt; The particles will be emitted from the world position.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Relative:&lt;/strong&gt; The particles will be emitted from the scaled position.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Scaling Mode&lt;/strong&gt;: How to automatically adjust when the Canvas scale is changed by the screen size or reference resolution. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;None:&lt;/strong&gt; Do nothing.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Transform:&lt;/strong&gt; Transform.lossyScale (=world scale) will be set to (1, 1, 1).&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;UIParticle:&lt;/strong&gt; UIParticle.scale will be adjusted.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use Custom View:&lt;/strong&gt; Use this if the particles are not displayed correctly due to min/max particle size. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Custom view size:&lt;/strong&gt; Change the bake view size.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Time Scale Multiplier:&lt;/strong&gt; Time scale multiplier.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rendering Order&lt;/strong&gt;: The ParticleSystem list to be rendered. You can change the order and the materials.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Press the &lt;code&gt;Refresh&lt;/code&gt; button to reconstruct the rendering order based on children ParticleSystem&#39;s sorting order and z-position.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select &lt;code&gt;GameObject/UI/ParticleSystem&lt;/code&gt; to create UIParticle with a ParticleSystem. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007361-cad0e880-0649-11eb-8835-f145d62c5977.png&quot; alt=&quot;particle&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;Adjust the ParticleSystem as you like. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007359-ca385200-0649-11eb-8383-627c9750bda8.png&quot; alt=&quot;particle1&quot; /&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br /&gt; 
&lt;h3&gt;Usage with Your Existing ParticleSystem Prefab&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select &lt;code&gt;GameObject/UI/ParticleSystem (Empty)&lt;/code&gt; to create UIParticle. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007362-cb697f00-0649-11eb-8a09-29b0a13791e4.png&quot; alt=&quot;empty&quot; /&gt;&lt;/li&gt; 
 &lt;li&gt;Drag and drop your ParticleSystem prefab onto UIParticle. &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95007356-c6a4cb00-0649-11eb-9316-562f4bce3f31.png&quot; alt=&quot;particle3&quot; /&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br /&gt; 
&lt;h3&gt;Usage with &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/h3&gt; 
&lt;p&gt;If you want to mask particles, set a stencil-supported shader (such as &lt;code&gt;UI/UIAdditive&lt;/code&gt;) to the material for ParticleSystem. If you use some custom shaders, see the &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#how-to-make-a-custom-shader-to-support-mask-and-rectmask2d-component&quot;&gt;How to Make a Custom Shader to Support Mask/RectMask2D Component&lt;/a&gt; section.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/95017591-3b512700-0695-11eb-864e-04166ea1809a.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Usage with Script&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;// Instantiate ParticleSystem prefab with UIParticle on runtime.
var go = GameObject.Instantiate(prefab);
var uiParticle = go.AddComponent&amp;lt;UIParticle&amp;gt;();
uiParticle.scale = 100;

// Control by ParticleSystem.
particleSystem.Play();
particleSystem.Emit(10);

// Control by UIParticle.
uiParticle.Play();
uiParticle.Stop();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Component: UIParticleAttractor&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;UIParticleAttractor&lt;/code&gt; attracts particles generated by the specified ParticleSystem.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/assets/12690315/5c20ad73-4b9a-4f38-9cdc-119df5cce077&quot; alt=&quot;&quot; /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/174311027-462929a4-13f0-4ec4-86ea-9c832f2eecf1.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Particle Systems&lt;/strong&gt;: Attracts particles generated by the specified ParticleSystems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Destination Radius&lt;/strong&gt;: Once the particle is within the radius, the particle lifetime will become 0, and &lt;code&gt;OnAttracted&lt;/code&gt; will be called.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Delay Rate&lt;/strong&gt;: Delay to start attracting. It is a percentage of the particle&#39;s start lifetime.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Max Speed&lt;/strong&gt;: Maximum speed of attracting. If this value is too small, attracting may not be completed by the end of the lifetime, and &lt;code&gt;OnAttracted&lt;/code&gt; may not be called.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Movement&lt;/strong&gt;: Attracting movement type. (&lt;code&gt;Linear&lt;/code&gt;, &lt;code&gt;Smooth&lt;/code&gt;, &lt;code&gt;Sphere&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update Mode&lt;/strong&gt;: Update mode. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Normal:&lt;/strong&gt; Update with scaled delta time.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Unscaled Time:&lt;/strong&gt; Update with unscaled delta time.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OnAttracted&lt;/strong&gt;: An event called when attracting is complete (per particle).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Project Settings&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/befc7f34-fb47-4006-831a-eba79fda11ca&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click &lt;code&gt;Edit &amp;gt; Project Settings&lt;/code&gt; to open the Project Settings window and then select &lt;code&gt;UI &amp;gt; UI Particle&lt;/code&gt; category.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;🛠 Development Note&lt;/h2&gt; 
&lt;h3&gt;Compares the Baking mesh approach with the conventional approach&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Baking mesh approach (=UIParticle)&lt;/strong&gt;&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765089-0302b9a2-763e-11e8-88b3-b6ffa306bbb0.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Rendered as is.&lt;/li&gt; 
   &lt;li&gt;✅ Maskable.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;✅ Less objects.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do nothing (=Plain ParticleSystem)&lt;/strong&gt;&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765090-0329828a-763e-11e8-8d8a-f1d269ea3bc7.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Rendered as is.&lt;/li&gt; 
   &lt;li&gt;❌ Looks like a glitch.&lt;/li&gt; 
   &lt;li&gt;❌ Not maskable.&lt;/li&gt; 
   &lt;li&gt;❌ Not sortable.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Convert particle to UIVertex (=&lt;a href=&quot;https://forum.unity.com/threads/free-script-particle-systems-in-ui-screen-space-overlay.406862/&quot;&gt;UIParticleSystem&lt;/a&gt;)&lt;/strong&gt;&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765088-02deb9c6-763e-11e8-98d0-9e0c1766ef39.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Maskable.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;❌ Adjustment is difficult.&lt;/li&gt; 
   &lt;li&gt;❌ Requires UI shaders.&lt;/li&gt; 
   &lt;li&gt;❌ Difficult to adjust scale.&lt;/li&gt; 
   &lt;li&gt;❌ Force hierarchy scalling.&lt;/li&gt; 
   &lt;li&gt;❌ Simulation results are incorrect.&lt;/li&gt; 
   &lt;li&gt;❌ Trail, rotation of transform, time scaling are not supported.&lt;/li&gt; 
   &lt;li&gt;❌ Generate heavy GC every frame.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Canvas to sort (Sorting By Canvas )&lt;/strong&gt;&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765087-02b866ea-763e-11e8-8c33-081c9ad852f8.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Rendered as is.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;❌ You must to manage sorting orders.&lt;/li&gt; 
   &lt;li&gt;❌ Not maskable.&lt;/li&gt; 
   &lt;li&gt;❌ More batches.&lt;/li&gt; 
   &lt;li&gt;❌ Requires Canvas.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use RenderTexture&lt;/strong&gt;&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/41765085-0291b3e2-763e-11e8-827b-72e5ee9bc556.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;✅ Maskable.&lt;/li&gt; 
   &lt;li&gt;✅ Sortable.&lt;/li&gt; 
   &lt;li&gt;❌ Requires Camera and RenderTexture.&lt;/li&gt; 
   &lt;li&gt;❌ Difficult to adjust position and size.&lt;/li&gt; 
   &lt;li&gt;❌ Quality depends on the RenderTexture&#39;s setting.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/issues/193#issuecomment-1160028374&quot;&gt;Performance test results&lt;/a&gt;&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Approach&lt;/th&gt; 
   &lt;th&gt;FPS on Editor&lt;/th&gt; 
   &lt;th&gt;FPS on iPhone6&lt;/th&gt; 
   &lt;th&gt;FPS on Xperia XZ&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Particle System&lt;/td&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;57&lt;/td&gt; 
   &lt;td&gt;22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIParticleSystem&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;0 (unmeasurable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sorting By Canvas&lt;/td&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;18&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIParticle&lt;/td&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UIParticle with MeshSharing&lt;/td&gt; 
   &lt;td&gt;44&lt;/td&gt; 
   &lt;td&gt;45&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🔍 FAQ: Why Are My UIParticles Not Displayed Correctly?&lt;/h3&gt; 
&lt;p&gt;If &lt;code&gt;ParticleSystem&lt;/code&gt; alone displays particles correctly but &lt;code&gt;UIParticle&lt;/code&gt; does not, please check the following points:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#shader-limitation&quot;&gt;Shader Limitation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;UIParticle&lt;/code&gt; does not support all built-in shaders except for &lt;code&gt;UI/Default&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Most cases can be solved by using &lt;code&gt;UI/Additive&lt;/code&gt; or &lt;code&gt;UI/Default&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are not masked 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;UIParticle&lt;/code&gt; is maskable.&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;Mask&lt;/code&gt; or &lt;code&gt;RectMask2D&lt;/code&gt; component properly.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#how-to-make-a-custom-shader-to-support-maskrectmask2d-component&quot;&gt;Use maskable/clipable shader&lt;/a&gt; (such as &lt;code&gt;UI/Additive&lt;/code&gt; or &lt;code&gt;UI/Default&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are too small 
  &lt;ul&gt; 
   &lt;li&gt;If particles are small enough, they will not appear on the screen.&lt;/li&gt; 
   &lt;li&gt;Increase the &lt;code&gt;Scale&lt;/code&gt; value.&lt;/li&gt; 
   &lt;li&gt;If you don&#39;t want to change the apparent size depending on the resolution, try the &lt;code&gt;Auto Scaling&lt;/code&gt; option.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are too many 
  &lt;ul&gt; 
   &lt;li&gt;No more than 65535 vertices can be displayed (for mesh combination limitations).&lt;/li&gt; 
   &lt;li&gt;Please set &lt;code&gt;Emission&lt;/code&gt; module and &lt;code&gt;Max Particles&lt;/code&gt; of ParticleSystem properly.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Particles are emitted off-screen. 
  &lt;ul&gt; 
   &lt;li&gt;When &lt;code&gt;Position Mode = Relative&lt;/code&gt;, particles are emitted from the scaled position of the ParticleSystem, not from the screen point of the ParticleSystem.&lt;/li&gt; 
   &lt;li&gt;Place the ParticleSystem in the proper position or try &lt;code&gt;Position Mode = Absolute&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Attaching &lt;code&gt;UIParticle&lt;/code&gt; to the same object as &lt;code&gt;ParticleSystem&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Transform.localScale&lt;/code&gt; will be overridden by the &lt;code&gt;Auto Scaling&lt;/code&gt; option.&lt;/li&gt; 
   &lt;li&gt;It is recommended to place &lt;code&gt;ParticleSystem&lt;/code&gt; under &lt;code&gt;UIParticle&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;Transform.localScale&lt;/code&gt; contains 0, rendering will be skipped.&lt;/li&gt; 
 &lt;li&gt;Displayed particles are in the correct position but too large/too small 
  &lt;ul&gt; 
   &lt;li&gt;Adjust &lt;code&gt;ParticleSystem.renderer.Min/MaxParticleSize&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h3&gt;Shader Limitation&lt;/h3&gt; 
&lt;p&gt;The use of UI shaders is recommended.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you need a simple Additive shader, use the &lt;code&gt;UI/Additive&lt;/code&gt; shader instead.&lt;/li&gt; 
 &lt;li&gt;If you need a simple alpha-blend shader, use the &lt;code&gt;UI/Default&lt;/code&gt; shader instead.&lt;/li&gt; 
 &lt;li&gt;If your custom shader does not work properly with UIParticle, consider creating a custom UI shader.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Built-in shaders are not supported&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;UIParticle&lt;/code&gt; does not support all built-in shaders except for &lt;code&gt;UI/Default&lt;/code&gt;.&lt;br /&gt; If their use is detected, an error is displayed in the inspector.&lt;br /&gt; Use UI shaders instead.&lt;/p&gt; 
&lt;h4&gt;(Unity 2018 or 2019) UV.zw components will be discarded&lt;/h4&gt; 
&lt;p&gt;UIParticleRenderer renders the particles based on UIVertex.&lt;br /&gt; Therefore, only the xy components are available for each UV in the shader. (zw components will be discarded).&lt;br /&gt; So unfortunately, UIParticles will not work well with some shaders.&lt;/p&gt; 
&lt;h4&gt;(Unity 2018 or 2019) Custom vertex streams&lt;/h4&gt; 
&lt;p&gt;When using custom vertex streams, you can fill zw components with &quot;unnecessary&quot; data.&lt;br /&gt; Refer to &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/issues/191&quot;&gt;this issue&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Overheads&lt;/h3&gt; 
&lt;p&gt;UIParticle has some overheads, and the batching depends on uGUI.&lt;br /&gt; When improving performance, keep the following in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are displaying a large number of the same effect, consider the &lt;code&gt;Mesh Sharing&lt;/code&gt; feature in the &lt;a href=&quot;https://raw.githubusercontent.com/mob-sakai/ParticleEffectForUGUI/main/#uiparticle-component&quot;&gt;UIParticle Component&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;If you don&#39;t like the uniform output, consider the &lt;code&gt;Random Group&lt;/code&gt; feature.&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/12690315/174311048-c882df81-6c34-4eba-b0aa-5645457692f1.gif&quot; alt=&quot;&quot; /&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If you are using multiple materials, you will have more draw calls. 
  &lt;ul&gt; 
   &lt;li&gt;Consider a single material, atlasing the sprites, and using &lt;code&gt;Sprite&lt;/code&gt; mode in the &lt;code&gt;Texture Sheet Animation&lt;/code&gt; module in the ParticleSystem.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How to Make a Custom Shader to Support &lt;code&gt;Mask&lt;/code&gt; and &lt;code&gt;RectMask2D&lt;/code&gt; Component&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Shader tips&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ShaderLab&quot;&gt;Shader &quot;Your/Custom/Shader&quot;
{
    Properties
    {
        // ...
        // #### required for Mask ####
        _StencilComp (&quot;Stencil Comparison&quot;, Float) = 8
        _Stencil (&quot;Stencil ID&quot;, Float) = 0
        _StencilOp (&quot;Stencil Operation&quot;, Float) = 0
        _StencilWriteMask (&quot;Stencil Write Mask&quot;, Float) = 255
        _StencilReadMask (&quot;Stencil Read Mask&quot;, Float) = 255
        _ColorMask (&quot;Color Mask&quot;, Float) = 15
        [Toggle(UNITY_UI_ALPHACLIP)] _UseUIAlphaClip (&quot;Use Alpha Clip&quot;, Float) = 0
    }

    SubShader
    {
        Tags
        {
            // ...
        }

        // #### required for Mask ####
        Stencil
        {
            Ref [_Stencil]
            Comp [_StencilComp]
            Pass [_StencilOp]
            ReadMask [_StencilReadMask]
            WriteMask [_StencilWriteMask]
        }
        ColorMask [_ColorMask]
        // ...

        Pass
        {
            // ...
            // #### required for RectMask2D ####
            #include &quot;UnityUI.cginc&quot;
            #pragma multi_compile __ UNITY_UI_CLIP_RECT
            float4 _ClipRect;

            // #### required for Mask ####
            #pragma multi_compile __ UNITY_UI_ALPHACLIP

            struct appdata_t
            {
                // ...
            };

            struct v2f
            {
                // ...
                // #### required for RectMask2D ####
                float4 worldPosition    : TEXCOORD1;
            };
            
            v2f vert(appdata_t v)
            {
                v2f OUT;
                // ...
                // #### required for RectMask2D ####
                OUT.worldPosition = v.vertex;
                return OUT;
            }

            fixed4 frag(v2f IN) : SV_Target
            {
                // ...
                // #### required for RectMask2D ####
                #ifdef UNITY_UI_CLIP_RECT
                    color.a *= UnityGet2DClipping(IN.worldPosition.xy, _ClipRect);
                #endif

                // #### required for Mask ####
                #ifdef UNITY_UI_ALPHACLIP
                    clip (color.a - 0.001);
                #endif

                return color;
            }
            ENDCG
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;h3&gt;Issues&lt;/h3&gt; 
&lt;p&gt;Issues are incredibly valuable to this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ideas provide a valuable source of contributions that others can make.&lt;/li&gt; 
 &lt;li&gt;Problems help identify areas where this project needs improvement.&lt;/li&gt; 
 &lt;li&gt;Questions indicate where contributors can enhance the user experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pull Requests&lt;/h3&gt; 
&lt;p&gt;Pull requests offer a fantastic way to contribute your ideas to this repository.&lt;br /&gt; Please refer to &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/raw/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/tree/develop&quot;&gt;develop branch&lt;/a&gt; for guidelines.&lt;/p&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;p&gt;This is an open-source project developed during my spare time.&lt;br /&gt; If you appreciate it, consider supporting me.&lt;br /&gt; Your support allows me to dedicate more time to development. 😊&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.patreon.com/join/2343451?&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/50731629-3b18b480-11ad-11e9-8fad-4b13f27969c1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/users/mob-sakai/sponsorship&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/66942881-03686280-f085-11e9-9586-fc0b6011029f.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/12690315/96986908-434a0b80-155d-11eb-8275-85138ab90afa.png&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;https://github.com/mob-sakai&quot;&gt;mob-sakai&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=mob_sakai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/mob_sakai.svg?label=Follow&amp;amp;style=social&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/followers/mob-sakai?style=social&quot; alt=&quot;GitHub followers&quot; /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub page : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Releases : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/releases&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI/releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Issue tracker : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/issues&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Change log : &lt;a href=&quot;https://github.com/mob-sakai/ParticleEffectForUGUI/raw/main/CHANGELOG.md&quot;&gt;https://github.com/mob-sakai/ParticleEffectForUGUI/blob/main/CHANGELOG.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mRemoteNG/mRemoteNG</title>
      <link>https://github.com/mRemoteNG/mRemoteNG</link>
      <description>&lt;p&gt;mRemoteNG is the next generation of mRemote, open source, tabbed, multi-protocol, remote connections manager.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;NOTICE: This project currently transited to a new maintainer. Development help would be greatly appreciated.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;450&quot; src=&quot;https://github.com/mRemoteNG/mRemoteNG/raw/mRemoteNGProjectFiles/Header_dark.png&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; An open source, multi-protocol, tabbed remote connections manager allowing you to view all of your connections in a simple yet powerful interface &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;GitHub All Releases&quot; src=&quot;https://img.shields.io/github/downloads/mremoteng/mremoteng/total?label=Overall%20Downloads&amp;amp;style=for-the-badge&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.reddit.com/r/mRemoteNG/&quot;&gt; &lt;img alt=&quot;Subreddit subscribers&quot; src=&quot;https://img.shields.io/reddit/subreddit-subscribers/mremoteng?label=Reddit&amp;amp;logo=Reddit&amp;amp;style=flat-square&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/mremoteng&quot;&gt; &lt;img alt=&quot;Twitter Follow&quot; src=&quot;https://img.shields.io/twitter/follow/mremoteng?color=%231DA1F2&amp;amp;label=Twitter&amp;amp;logo=Twitter&amp;amp;style=flat-square&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://app.element.io/#/room/#mremoteng:matrix.org&quot;&gt; &lt;img alt=&quot;Element&quot; src=&quot;https://img.shields.io/matrix/mremoteng:matrix.org?label=Join%20to%20chat%20about%20mRemoteNG&amp;amp;logo=element&amp;amp;style=social&amp;amp;link=https://app.element.io/#/room/#mremoteng:matrix.org&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.paypal.com/paypalme/mremoteng&quot;&gt; &lt;img alt=&quot;PayPal&quot; src=&quot;https://img.shields.io/badge/%24-PayPal-blue.svg?label=Donate&amp;amp;logo=PayPal&amp;amp;style=flat-square&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;bitcoin:16fUnHUM3k7W9Fvpc6dug7TAdfeGEcLbSg&quot;&gt; &lt;img alt=&quot;Bitcoin&quot; src=&quot;https://img.shields.io/badge/%24-Bitcoin.svg?label=Donate&amp;amp;logo=bitcoin&amp;amp;style=flat-square&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/raw/develop/COPYING.TXT&quot;&gt; &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/mremoteng/mremoteng?label=License&amp;amp;style=flat&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/529&quot;&gt; &lt;img alt=&quot;CII Best Practices&quot; src=&quot;https://bestpractices.coreinfrastructure.org/projects/529/badge?style=flat&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://mremoteng.readthedocs.io/en/latest/?badge=latest&quot;&gt; &lt;img src=&quot;https://readthedocs.org/projects/mremoteng/badge/?version=latest&quot; alt=&quot;Documentation Status&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://gurubase.io/g/mremoteng&quot;&gt; &lt;img alt=&quot;Gurubase&quot; src=&quot;https://img.shields.io/badge/Gurubase-Ask%20mRemoteNG%20Guru-006BFF?style=flat-square&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Channel&lt;/th&gt; 
   &lt;th&gt;Build Status&lt;/th&gt; 
   &lt;th&gt;Downloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/rqwxjxldail7btcf?svg=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/releases/tag/v1.76.20&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/mRemoteNG/mRemoteNG/v1.76.20/total.svg?sanitize=true&quot; alt=&quot;Github Releases (by Release)&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Preview&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/rqwxjxldail7btcf/branch/preview?svg=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/releases/tag/v1.77.1&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/mRemoteNG/mRemoteNG/v1.77.1/total.svg?sanitize=true&quot; alt=&quot;Github Releases (by Release)&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nightly&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/rqwxjxldail7btcf/branch/develop?svg=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/releases/tag/2023.03.03-v1.77.3-nb&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/mRemoteNG/mRemoteNG/2023.03.03-v1.77.3-nb/total.svg?sanitize=true&quot; alt=&quot;Github Releases (by Release)&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The following protocols are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RDP (Remote Desktop Protocol)&lt;/li&gt; 
 &lt;li&gt;VNC (Virtual Network Computing)&lt;/li&gt; 
 &lt;li&gt;SSH (Secure Shell)&lt;/li&gt; 
 &lt;li&gt;Telnet (TELecommunication NETwork)&lt;/li&gt; 
 &lt;li&gt;HTTP/HTTPS (Hypertext Transfer Protocol)&lt;/li&gt; 
 &lt;li&gt;rlogin (Remote Login)&lt;/li&gt; 
 &lt;li&gt;Raw Socket Connections&lt;/li&gt; 
 &lt;li&gt;Powershell remoting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a detailed feature list and general usage support, refer to the &lt;a href=&quot;https://mremoteng.readthedocs.io/en/latest/&quot;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Supported Operating Systems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_11&quot;&gt;Windows 11&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_10&quot;&gt;Windows 10&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_8.1&quot;&gt;Windows 8.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Server_2022&quot;&gt;Windows Server 2022&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Server_2019&quot;&gt;Windows Server 2019&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Server_2016&quot;&gt;Windows Server 2016&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Server_2012_R2&quot;&gt;Windows Server 2012 R2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Source package&lt;/h4&gt; 
&lt;p&gt;This contains the source code from which mRemoteNG is build. You will need to compile it yourself using Visual Studio.&lt;/p&gt; 
&lt;h3&gt;Minimum Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&quot;&gt;Microsoft Visual C++ Redistributable for Visual Studio 2015 - 2022&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/6.0&quot;&gt;Microsoft .NET 6.0 Desktop Runtime&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Terminal Service Client 6.0 or later 
  &lt;ul&gt; 
   &lt;li&gt;Needed if you use RDP. mstscax.dll and/or msrdp.ocx be registered.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;⭐&lt;/span&gt; Starting Windows 11 you can use winget to install mRemoteNG. Just run &lt;code&gt;winget install -e --id mRemoteNG.mRemoteNG&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;mRemoteNG is available as a redistributable MSI package or as a portable ZIP package and can be downloaded from the following locations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/releases&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mremoteng.org/download&quot;&gt;Project Website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Command line install&lt;/h3&gt; 
&lt;p&gt;The MSI package of mRemoteNG can be installed using the command line:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;msiexec /i [/qn] C:\Path\To\mRemoteNG-Installer.exe [INSTALLDIR=value] [IGNOREPREREQUISITES=value] [/lv* &amp;lt;log path&amp;gt;]&lt;/code&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Argument/Property&lt;/th&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;/qn&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Silent Installation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Will run the installer silently in the background.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;/lv*&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Silent Installation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Will write a logfile to the specified location. (For paths that contain spaces, enclose the path in double quotes)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;INSTALLDIR&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;folder path&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Allows you to set the installation directory from the command line. (For paths that contain spaces, enclose the path in double quotes)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;IGNOREPREREQUISITES&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;When set to &lt;code&gt;1&lt;/code&gt;, the installer will not be halted if any prerequisite check is not met. You must still run the installer as administrator.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Manual Uninstall&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;If you are using the Portable version, simply deleting the folder that contains mRemoteNG should be sufficient. These uninstall instructions are only necessary for the normal binary .MSI installed version of mRemoteNG&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Delete the folder where mRemoteNG was installed. By default, this is: &lt;code&gt;%PROGRAMFILES%\mRemoteNG&lt;/code&gt; (for versions before 1.77 on a x64 Windows its &lt;code&gt;%programfiles(x86)%\mRemoteNG&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Delete the mRemoteNG install entry from the following location. You may search for &quot;mRemoteNG&quot; in the DisplayName field:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;x86 Windows or mRemoteNG starting with v1.77: &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;x64 Windows and mRemoteNG before 1.77: &lt;code&gt;HKLM\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Remove the following registry key: &lt;code&gt;HKLM\SOFTWARE\mRemoteNG&lt;/code&gt; (on x64 Windows with mRemoteNG before 1.77 it&#39;s &lt;code&gt;HKLM\SOFTWARE\WOW6432Node\mRemoteNG&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optional) If you would also like to delete user data remove &lt;code&gt;%LOCALAPPDATA%\mRemoteNG&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optional) If you would also like to remove the connection configuration, delete &lt;code&gt;%APPDATA%\mRemoteNG&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optional) If no other software uses it, the &quot;Microsoft Windows Desktop Runtime&quot; may be uninstalled too.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Featured Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/realslacker/PSmRemoteNG&quot;&gt;PSmRemoteNG&lt;/a&gt; A module to create mRemoteNG connection files from PowerShell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/T3los/mRemoteNGOpenVPN&quot;&gt;mRemoteNGOpenVPN&lt;/a&gt; A script that can be embedded as an external tool to control OpenVPN.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;If you find mRemoteNG useful and would like to contribute, it would be greatly appreciated. When you contribute, you make it possible for the team to cover the costs of producing mRemoteNG.&lt;/p&gt; 
&lt;h3&gt;Submit Code&lt;/h3&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/wiki&quot;&gt;Wiki page&lt;/a&gt; on how to configure your development environment and submit a pull request.&lt;/p&gt; 
&lt;h3&gt;Translate&lt;/h3&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/mRemoteNG/mRemoteNG/wiki&quot;&gt;Wiki page&lt;/a&gt; on how to help make mRemoteNG a polyglot.&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Developed with ReSharper&quot; src=&quot;https://github.com/mRemoteNG/mRemoteNG/raw/mRemoteNGProjectFiles/icon_ReSharper.png&quot; /&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OrchardCMS/OrchardCore</title>
      <link>https://github.com/OrchardCMS/OrchardCore</link>
      <description>&lt;p&gt;Orchard Core is an open-source modular and multi-tenant application framework built with ASP.NET Core, and a content management system (CMS) built on top of that framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Orchard Core&lt;/h1&gt; 
&lt;p&gt;Orchard Core is an open-source, modular, multi-tenant application framework and CMS for ASP.NET Core.&lt;/p&gt; 
&lt;p&gt;Orchard Core consists of two distinct projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Orchard Core Framework&lt;/strong&gt;: An application framework for building modular, multi-tenant applications on ASP.NET Core.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orchard Core CMS&lt;/strong&gt;: A Web Content Management System (CMS) built on top of the Orchard Core Framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/OrchardCMS/OrchardCore/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-BSD--3--Clause-blue.svg?sanitize=true&quot; alt=&quot;BSD-3-Clause License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.orchardcore.net/&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/orchardcore/badge/&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gurubase.io/g/orchard-core&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Orchard%20Core%20Guru-006BFF&quot; alt=&quot;Gurubase&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/orchard-core&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/orchard-core/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/551136772243980291?color=%237289DA&amp;amp;label=OrchardCore&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build Status&lt;/h2&gt; 
&lt;p&gt;Stable (&lt;code&gt;release/2.1&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Release+-+CI%22&quot;&gt;&lt;img src=&quot;https://github.com/OrchardCMS/OrchardCore/actions/workflows/release_ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OrchardCore.Application.Cms.Targets&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/OrchardCore.Application.Cms.Targets.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Nightly (&lt;code&gt;main&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Preview+-+CI%22&quot;&gt;&lt;img src=&quot;https://github.com/OrchardCMS/OrchardCore/actions/workflows/preview_ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://cloudsmith.io/~orchardcore/repos/preview/packages/detail/nuget/OrchardCore.Application.Cms.Targets/latest/&quot;&gt;&lt;img src=&quot;https://api-prd.cloudsmith.io/badges/version/orchardcore/preview/nuget/OrchardCore.Application.Cms.Targets/latest/x/?render=true&amp;amp;badge_token=gAAAAABey9hKFD_C-ZIpLvayS3HDsIjIorQluDs53KjIdlxoDz6Ntt1TzvMNJp7a_UWvQbsfN5nS7_0IbxCyqHZsjhmZP6cBkKforo-NqwrH5-E6QCrJ3D8%3D&quot; alt=&quot;Cloudsmith&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project Status: v2.1.7&lt;/h2&gt; 
&lt;p&gt;The software is production-ready, and capable of serving large mission-critical applications as well, and we&#39;re not aware of any fundamental bugs or missing features we deem crucial. Orchard Core continues to evolve, with each version bringing new improvements, and keeping up with the cutting-edge of .NET.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/reference/&quot;&gt;the Reference of Built-in Modules&lt;/a&gt; to see what kind of features Orchard Core provides built-in.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/milestones&quot;&gt;issue milestones&lt;/a&gt; for information on what we have planned for the next releases and what are the priorities.&lt;/p&gt; 
&lt;h2&gt;Getting Started and Documentation&lt;/h2&gt; 
&lt;p&gt;The documentation can be accessed under &lt;a href=&quot;https://docs.orchardcore.net/&quot;&gt;https://docs.orchardcore.net/&lt;/a&gt;. See the homepage for an overview, and &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/&quot;&gt;the getting started docs&lt;/a&gt; on how to start building apps with Orchard Core. If you&#39;d just like to test drive Orchard Core as a user, check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/test-drive-orchard-core/&quot;&gt;Test drive Orchard Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;Need assistance with Orchard Core? We&#39;ve got you covered! Here are several ways to connect with our community for support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Search for Answers:&lt;/strong&gt; Use the &lt;a href=&quot;https://gurubase.io/g/orchard-core&quot;&gt;Gurubase AI model&lt;/a&gt; to find answers to your questions quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Report Bugs or Suggest Features:&lt;/strong&gt; If you&#39;ve encountered a bug or have an idea for a new feature, please open an issue in our &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/issues&quot;&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ask Questions or Get Feedback:&lt;/strong&gt; For guidance on specific tasks or to receive feedback on your code, feel free to start a &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/discussions&quot;&gt;discussion&lt;/a&gt; with the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join the Conversation:&lt;/strong&gt; Connect with other Orchard Core users in real-time on our &lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;Discord server&lt;/a&gt; to chat and share ideas.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We&#39;re here to help you succeed with Orchard Core!&lt;/p&gt; 
&lt;h2&gt;Get in Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/orchardcms&quot;&gt;X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orchardcore.net/linkedin&quot;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/OrchardCore&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Please report security issues privately, via email, to &lt;a href=&quot;mailto:contact@orchardcore.net&quot;&gt;contact@orchardcore.net&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Communities&lt;/h3&gt; 
&lt;p&gt;中文资源&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://shang.qq.com/wpa/qunwpa?idkey=48721591a71ee7586316604a7a4ee99d26fd977c6120370a06585085a5936f62&quot;&gt;&lt;img src=&quot;https://docs.orchardcore.net/en/latest/assets/images/orchard-core-cn-community-logo.png&quot; alt=&quot;Orchard Core CN 中文讨论组&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;It&#39;s great that you&#39;re thinking about contributing to Orchard Core! You&#39;d join &lt;a href=&quot;https://docs.orchardcore.net/en/latest/community/contributors/&quot;&gt;our wonderful community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the docs &lt;a href=&quot;https://docs.orchardcore.net/en/latest/contributing/&quot;&gt;on contributing to Orchard Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview Package Feed&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://cloudsmith.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith&amp;amp;style=for-the-badge&quot; alt=&quot;Hosted By: Cloudsmith&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;NuGet package repository hosting for the preview feed is graciously provided by &lt;a href=&quot;https://cloudsmith.com&quot;&gt;Cloudsmith&lt;/a&gt;. Check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/preview-package-source/&quot;&gt;the docs on using the preview package feed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cloudsmith is the only fully hosted, cloud-native, universal package management solution, that enables your organization to create, store, and share packages in any format, to any place, with total confidence.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.orchardcore.net/en/latest/contributing/#code-of-conduct&quot;&gt;our Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;This project is supported by the &lt;a href=&quot;http://www.dotnetfoundation.org&quot;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell/PowerShell</title>
      <link>https://github.com/PowerShell/PowerShell</link>
      <description>&lt;p&gt;PowerShell for every system!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/assets/ps_black_64.svg?sanitize=true&quot; alt=&quot;logo&quot; /&gt; PowerShell&lt;/h1&gt; 
&lt;p&gt;Welcome to the PowerShell GitHub Community! &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/overview&quot;&gt;PowerShell&lt;/a&gt; is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets.&lt;/p&gt; 
&lt;h2&gt;Windows PowerShell vs. PowerShell 7+&lt;/h2&gt; 
&lt;p&gt;Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not ported back to Windows PowerShell 5.1. This also means that &lt;a href=&quot;https://github.com/PowerShell/PowerShell/issues&quot;&gt;issues tracked here&lt;/a&gt; are only for PowerShell 7.x and higher. Windows PowerShell specific issues should be reported with the &lt;a href=&quot;https://support.microsoft.com/windows/send-feedback-to-microsoft-with-the-feedback-hub-app-f59187f8-8739-22d6-ba93-f66612949332&quot;&gt;Feedback Hub app&lt;/a&gt;, by choosing &quot;Apps &amp;gt; PowerShell&quot; in the category.&lt;/p&gt; 
&lt;h2&gt;New to PowerShell?&lt;/h2&gt; 
&lt;p&gt;If you are new to PowerShell and want to learn more, we recommend reviewing the &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/learn/more-powershell-learning&quot;&gt;getting started&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Get PowerShell&lt;/h2&gt; 
&lt;p&gt;PowerShell is supported on Windows, macOS, and a variety of Linux platforms. For more information, see &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/install/installing-powershell&quot;&gt;Installing PowerShell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading PowerShell&lt;/h2&gt; 
&lt;p&gt;For best results when upgrading, you should use the same install method you used when you first installed PowerShell. The update method is different for each platform and install method.&lt;/p&gt; 
&lt;h2&gt;Community Dashboard&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/PSPublicDashboard&quot;&gt;Dashboard&lt;/a&gt; with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI.&lt;/p&gt; 
&lt;p&gt;For more information on how and why we built this dashboard, check out this &lt;a href=&quot;https://devblogs.microsoft.com/powershell/powershell-open-source-community-dashboard/&quot;&gt;blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/discussions/quickstart&quot;&gt;GitHub Discussions&lt;/a&gt; is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues.&lt;/p&gt; 
&lt;p&gt;This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues.&lt;/p&gt; 
&lt;p&gt;Create or join a &lt;a href=&quot;https://github.com/PowerShell/PowerShell/discussions&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;Want to chat with other members of the PowerShell community?&lt;/p&gt; 
&lt;p&gt;There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/PowerShell/PowerShell&quot;&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/PowerShell&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.libera.chat/#powershell&quot;&gt;IRC&lt;/a&gt; on Libera.Chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/psslack&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build status of nightly builds&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Windows)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Linux)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (macOS)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;CodeFactor Grade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=32&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-Windows-daily&quot; alt=&quot;windows-nightly-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=23&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-linux-daily?branchName=master&quot; alt=&quot;linux-nightly-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=24&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-macos-daily?branchName=master&quot; alt=&quot;macOS-nightly-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.codefactor.io/repository/github/powershell/powershell&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/powershell/powershell/badge&quot; alt=&quot;cf-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Developing and Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute to PowerShell? Please start with the &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; to learn how to develop and contribute.&lt;/p&gt; 
&lt;p&gt;If you are developing .NET Core C# applications targeting PowerShell Core, &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package&quot;&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; 
&lt;p&gt;Also, make sure to check out our &lt;a href=&quot;https://github.com/powershell/powershell-rfc&quot;&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; 
&lt;h2&gt;Building PowerShell&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/linux.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/windows-core.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/macos.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you have any problems building PowerShell, please start by consulting the developer &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/FAQ.md&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Downloading the Source Code&lt;/h2&gt; 
&lt;p&gt;You can clone the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/PowerShell/PowerShell.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/git&quot;&gt;working with the PowerShell repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For support, see the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/.github/SUPPORT.md&quot;&gt;Support Section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legal and Licensing&lt;/h2&gt; 
&lt;p&gt;PowerShell is licensed under the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker Containers&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] The PowerShell container images are now &lt;a href=&quot;https://github.com/PowerShell/Announcements/issues/75&quot;&gt;maintained by the .NET team&lt;/a&gt;. The containers at &lt;code&gt;mcr.microsoft.com/powershell&lt;/code&gt; are currently not maintained.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on &lt;a href=&quot;https://mcr.microsoft.com/en-us/product/powershell/tags&quot;&gt;Microsoft Artifact Registry&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Telemetry&lt;/h3&gt; 
&lt;p&gt;Please visit our &lt;a href=&quot;https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_telemetry&quot;&gt;about_Telemetry&lt;/a&gt; topic to read details about telemetry gathered by PowerShell.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;The governance policy for the PowerShell project is described the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md&quot;&gt;PowerShell Governance&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; before participating in this project.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For any security issues, please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>greenshot/greenshot</title>
      <link>https://github.com/greenshot/greenshot</link>
      <description>&lt;p&gt;Greenshot for Windows - Report bugs &amp; features go here: https://greenshot.atlassian.net or look for information on:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Greenshot - a free screenshot tool optimized for productivity&lt;/h1&gt; 
&lt;p&gt;Welcome to the source repository for Greenshot&lt;/p&gt; 
&lt;h2&gt;What is Greenshot?&lt;/h2&gt; 
&lt;p&gt;Greenshot is a light-weight screenshot software tool for Windows with the following key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quickly create screenshots of a selected region, window or fullscreen; you can even capture complete (scrolling) web pages from Internet Explorer.&lt;/li&gt; 
 &lt;li&gt;Easily annotate, highlight or obfuscate parts of the screenshot.&lt;/li&gt; 
 &lt;li&gt;Export the screenshot in various ways: save to file, send to printer, copy to clipboard, attach to e-mail, send Office programs or upload to photo sites like Flickr or Picasa, and others. and a lot more options simplyfying creation of and work with screenshots every day.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Being easy to understand and configurable, Greenshot is an efficient tool for project managers, software developers, technical writers, testers and anyone else creating screenshots.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://getgreenshot.org/support/&quot;&gt;If you find that Greenshot saves you a lot of time and/or money, you are very welcome to support the development of this screenshot software.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About this repository&lt;/h2&gt; 
&lt;p&gt;This is the development branch is for Greenshot 1.3, which has been first released on 2025-07-14.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;You can find a list of all releases (stable and unstable) in the &lt;a href=&quot;https://github.com/greenshot/greenshot/releases&quot;&gt;Github releases&lt;/a&gt; or in the &lt;a href=&quot;https://getgreenshot.org/version-history/&quot;&gt;version history on our website&lt;/a&gt;. The &lt;a href=&quot;https://getgreenshot.org/downloads/&quot;&gt;downloads page on our website&lt;/a&gt; always links to the latest stable release.&lt;/p&gt; 
&lt;h2&gt;Trademark and Logo Usage Policy&lt;/h2&gt; 
&lt;p&gt;The Greenshot logo and trademark are the property of the Greenshot development team. Unauthorized use of the logo and trademark is generally prohibited. However, we allow the use of the Greenshot name and logo in the following contexts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In blog posts, articles, or reviews that discuss or promote the Greenshot, provided that the usage is fair and does not imply endorsement by Greenshot.&lt;/li&gt; 
 &lt;li&gt;In educational materials or presentations that accurately represent the project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please refrain from using the Greenshot logo and trademark in any promotional materials, products, or in a manner that may cause confusion or imply endorsement without prior written permission.&lt;/p&gt; 
&lt;p&gt;If you have any questions or wish to seek permission for other uses, please contact us.&lt;/p&gt; 
&lt;p&gt;Thank you for your understanding and cooperation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/garnet</title>
      <link>https://github.com/microsoft/garnet</link>
      <description>&lt;p&gt;Garnet is a remote cache-store from Microsoft Research that offers strong performance (throughput and latency), scalability, storage, recovery, cluster sharding, key migration, and replication features. Garnet can work with existing Redis clients.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Garnet&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/garnet/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/garnet/actions/workflows/ci.yml/badge.svg?branch=main&quot; alt=&quot;.NET CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/garnet/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/microsoft/garnet.svg?label=latest%20release&amp;amp;color=007edf&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/microsoft.garnet&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/microsoft.garnet.svg?label=nuget%20library&amp;amp;color=007edf&amp;amp;logo=nuget&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/garnet-server&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/garnet-server.svg?label=dotnet%20tool&amp;amp;color=007edf&amp;amp;logo=nuget&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://microsoft.github.io/garnet/charts/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/BDN%20Charts-8A2BE2&quot; alt=&quot;BDN Charts&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/garnet-discord&quot;&gt;&lt;img src=&quot;https://discordapp.com/api/guilds/1213937452272582676/widget.png?style=shield&quot; alt=&quot;Discord Shield&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Garnet is a new remote cache-store from Microsoft Research, that offers several unique benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Garnet adopts the popular &lt;a href=&quot;https://redis.io/docs/reference/protocol-spec/&quot;&gt;RESP&lt;/a&gt; wire protocol as a starting point, which makes it possible to use Garnet from unmodified Redis clients available in most programming languages of today, such as &lt;a href=&quot;https://github.com/StackExchange/StackExchange.Redis&quot;&gt;StackExchange.Redis&lt;/a&gt; in C#.&lt;/li&gt; 
 &lt;li&gt;Garnet offers much better throughput and scalability with many client connections and small batches, relative to comparable open-source cache-stores, leading to cost savings for large apps and services.&lt;/li&gt; 
 &lt;li&gt;Garnet demonstrates extremely low client latencies (often less than 300 microseconds at the 99.9th percentile) using commodity cloud (Azure) VMs with Accelerated Networking enabled, which is critical to real-world scenarios.&lt;/li&gt; 
 &lt;li&gt;Based on the latest .NET technology, Garnet is cross-platform, extensible, and modern. It is designed to be easy to develop for and evolve, without sacrificing performance in the common case. We leveraged the rich library ecosystem of .NET for API breadth, with open opportunities for optimization. Thanks to our careful use of .NET, Garnet achieves state-of-the-art performance on both Linux and Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repo contains the code to build and run Garnet. For more information and documentation, check out our website at &lt;a href=&quot;https://microsoft.github.io/garnet&quot;&gt;https://microsoft.github.io/garnet&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature Summary&lt;/h2&gt; 
&lt;p&gt;Garnet implements a wide range of APIs including raw strings (e.g., gets, sets, and key expiration), analytical (e.g., HyperLogLog and Bitmap), and object (e.g., sorted sets and lists) operations. It can handle multi-key transactions in the form of client-side RESP transactions and our own server-side stored procedures and modules in C#. It allows users to define custom operations on both raw strings and custom object types, all in the convenience and safety of C#, leading to a lower bar for developing custom extensions. Garnet also supports Lua scripts.&lt;/p&gt; 
&lt;p&gt;Garnet uses a fast and pluggable network layer, enabling future extensions such as leveraging kernel-bypass stacks. It supports secure transport layer security (TLS) communications using the robust &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.net.security.sslstream&quot;&gt;SslStream&lt;/a&gt; library of .NET, as well as basic access control. Garnet’s storage layer, called Tsavorite, is built for high performance and includes strong database features such as thread scalability, tiered storage support (memory, SSD, and cloud storage), fast non-blocking checkpointing, recovery, operation logging for durability, multi-key transaction support, and better memory management and reuse. Finally, Garnet supports a cluster mode of operation with support for sharding, replication, and dynamic key migration.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/microsoft/garnet/assets/18355833/851be90b-e43a-40ca-ae56-7dc087cf6adc&quot; width=&quot;350&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;Performance Preview&lt;/h2&gt; 
&lt;p&gt;We illustrate a few key results on our &lt;a href=&quot;https://microsoft.github.io/garnet/docs/benchmarking/overview&quot;&gt;website&lt;/a&gt; comparing Garnet to leading open-source cache-stores.&lt;/p&gt; 
&lt;h2&gt;Design Highlights&lt;/h2&gt; 
&lt;p&gt;Garnet’s design re-thinks the entire cache-store stack – from receiving packets on the network, to parsing and processing database operations, to performing storage interactions. We build on top of years of our &lt;a href=&quot;https://microsoft.github.io/garnet/docs/research/papers&quot;&gt;prior research&lt;/a&gt;. Below is Garnet’s overall architecture.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/microsoft/garnet/assets/18355833/8d89f719-f86b-4b1f-81d1-1ae7bd450001&quot; width=&quot;400&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;Garnet’s network layer is based on a shared memory design, with TLS processing and storage interactions performed on the network IO completion thread, avoiding thread switching overheads in the common case. This approach allows CPU cache coherence to bring the data to the processing logic, instead of traditional shuffle-based network designs, which require data movement to the appropriate shard on the server.&lt;/p&gt; 
&lt;p&gt;Garnet’s storage design consists of two Tsavorite key-value stores whose fates are bound by a unified operation log. The first store, called the “main store,” is optimized for raw string operations and manages memory carefully to avoid garbage collection. The second, and optional, “object store” is optimized for complex objects and custom data types, including popular types such as Sorted Set, Set, Hash, List, and Geo. Data types in the object store leverage the .NET library ecosystem for their current implementations. They are stored on the heap in memory (which makes updates very efficient) and in a serialized form on disk. In the future, we plan to investigate using a unified index and log to ease maintenance.&lt;/p&gt; 
&lt;p&gt;A distinguishing feature of Garnet’s design is its narrow-waist Tsavorite storage API, which is used to implement the large, rich, and extensible RESP API surface on top. This API consists of read, upsert, delete, and atomic read-modify-write operations, implemented with asynchronous callbacks for Garnet to interject logic at various points during each operation. Our storage API model allows us to cleanly separate Garnet’s parsing and query processing concerns from storage details such as concurrency, storage tiering, and checkpointing. Garnet uses two-phase locking for multi-key transactions.&lt;/p&gt; 
&lt;h3&gt;Cluster Mode&lt;/h3&gt; 
&lt;p&gt;In addition to single-node execution, Garnet has a fully-featured cluster mode, which allows users to create and manage a sharded and replicated deployment. Garnet also supports an efficient and dynamic key migration scheme to rebalance shards. Users can use standard Redis cluster commands to create and manage Garnet clusters, and nodes perform gossip to share and evolve cluster state. Garnet&#39;s cluster mode design is currently &lt;em&gt;passive&lt;/em&gt;: this means that it does not implement leader election, and simply responds to cluster commands issued by a user-provided &lt;em&gt;control plane&lt;/em&gt;; see &lt;a href=&quot;https://microsoft.github.io/garnet/docs/cluster/overview#control-plane&quot;&gt;this link&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Next Steps&lt;/h2&gt; 
&lt;p&gt;Head over to our &lt;a href=&quot;https://microsoft.github.io/garnet&quot;&gt;documentation&lt;/a&gt; site, or jump directly to the &lt;a href=&quot;https://microsoft.github.io/garnet/docs/getting-started&quot;&gt;getting started&lt;/a&gt; or &lt;a href=&quot;https://microsoft.github.io/garnet/docs/welcome/releases&quot;&gt;releases&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/garnet/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;Privacy information can be found at &lt;a href=&quot;https://privacy.microsoft.com/en-us/privacystatement&quot;&gt;https://privacy.microsoft.com/en-us/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; 
&lt;p&gt;Redis is a registered trademark of Redis Ltd. Any rights therein are reserved to Redis Ltd. Any use by Microsoft is for referential purposes only and does not indicate any sponsorship, endorsement or affiliation between Redis and Microsoft.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sourcegit-scm/sourcegit</title>
      <link>https://github.com/sourcegit-scm/sourcegit</link>
      <description>&lt;p&gt;Windows/macOS/Linux GUI client for GIT users&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SourceGit - Opensource Git GUI client.&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/sourcegit-scm/sourcegit.svg?sanitize=true&quot; alt=&quot;stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/forks&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/sourcegit-scm/sourcegit.svg?sanitize=true&quot; alt=&quot;forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/sourcegit-scm/sourcegit/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/sourcegit-scm/sourcegit.svg?sanitize=true&quot; alt=&quot;license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/sourcegit-scm/sourcegit.svg?sanitize=true&quot; alt=&quot;latest&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/sourcegit-scm/sourcegit/total&quot; alt=&quot;downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Windows/macOS/Linux&lt;/li&gt; 
 &lt;li&gt;Opensource/Free&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Deutsch/English/Español/Français/Italiano/Português/Русский/Українська/简体中文/繁體中文/日本語/தமிழ் (Tamil)&lt;/li&gt; 
 &lt;li&gt;Built-in light/dark themes&lt;/li&gt; 
 &lt;li&gt;Customize theme&lt;/li&gt; 
 &lt;li&gt;Visual commit graph&lt;/li&gt; 
 &lt;li&gt;Supports SSH access with each remote&lt;/li&gt; 
 &lt;li&gt;GIT commands with GUI 
  &lt;ul&gt; 
   &lt;li&gt;Clone/Fetch/Pull/Push...&lt;/li&gt; 
   &lt;li&gt;Merge/Rebase/Reset/Revert/Cherry-pick...&lt;/li&gt; 
   &lt;li&gt;Amend/Reword/Squash&lt;/li&gt; 
   &lt;li&gt;Interactive rebase&lt;/li&gt; 
   &lt;li&gt;Branches&lt;/li&gt; 
   &lt;li&gt;Remotes&lt;/li&gt; 
   &lt;li&gt;Tags&lt;/li&gt; 
   &lt;li&gt;Stashes&lt;/li&gt; 
   &lt;li&gt;Submodules&lt;/li&gt; 
   &lt;li&gt;Worktrees&lt;/li&gt; 
   &lt;li&gt;Archive&lt;/li&gt; 
   &lt;li&gt;Diff&lt;/li&gt; 
   &lt;li&gt;Save as patch/apply&lt;/li&gt; 
   &lt;li&gt;File histories&lt;/li&gt; 
   &lt;li&gt;Blame&lt;/li&gt; 
   &lt;li&gt;Revision Diffs&lt;/li&gt; 
   &lt;li&gt;Branch Diff&lt;/li&gt; 
   &lt;li&gt;Image Diff - Side-By-Side/Swipe/Blend&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Git command logs&lt;/li&gt; 
 &lt;li&gt;Search commits&lt;/li&gt; 
 &lt;li&gt;GitFlow&lt;/li&gt; 
 &lt;li&gt;Git LFS&lt;/li&gt; 
 &lt;li&gt;Bisect&lt;/li&gt; 
 &lt;li&gt;Issue Link&lt;/li&gt; 
 &lt;li&gt;Workspace&lt;/li&gt; 
 &lt;li&gt;Custom Action&lt;/li&gt; 
 &lt;li&gt;Using AI to generate commit message (C# port of &lt;a href=&quot;https://github.com/anjerodev/commitollama&quot;&gt;anjerodev/commitollama&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;Linux&lt;/strong&gt; only tested on &lt;strong&gt;Debian 12&lt;/strong&gt; on both &lt;strong&gt;X11&lt;/strong&gt; &amp;amp; &lt;strong&gt;Wayland&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Translation Status&lt;/h2&gt; 
&lt;p&gt;You can find the current translation status in &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/raw/develop/TRANSLATION.md&quot;&gt;TRANSLATION.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to Use&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;To use this tool, you need to install Git(&amp;gt;=2.25.1) first.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can download the latest stable from &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/releases/latest&quot;&gt;Releases&lt;/a&gt; or download workflow artifacts from &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/actions&quot;&gt;GitHub Actions&lt;/a&gt; to try this app based on latest commits.&lt;/p&gt; 
&lt;p&gt;This software creates a folder &lt;code&gt;$&quot;{System.Environment.SpecialFolder.ApplicationData}/SourceGit&quot;&lt;/code&gt;, which is platform-dependent, to store user settings, downloaded avatars and crash logs.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
   &lt;th&gt;PATH&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;%APPDATA%\SourceGit&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;${HOME}/.config/SourceGit&lt;/code&gt; or &lt;code&gt;${HOME}/.sourcegit&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;${HOME}/Library/Application Support/SourceGit&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can open this data storage directory from the main menu &lt;code&gt;Open Data Storage Directory&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;You can create a &lt;code&gt;data&lt;/code&gt; folder next to the &lt;code&gt;SourceGit&lt;/code&gt; executable to force this app to store data (user settings, downloaded avatars and crash logs) into it (Portable-Mode). Only works on Windows.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For &lt;strong&gt;Windows&lt;/strong&gt; users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MSYS Git is NOT supported&lt;/strong&gt;. Please use official &lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;Git for Windows&lt;/a&gt; instead.&lt;/li&gt; 
 &lt;li&gt;You can install the latest stable from &lt;code&gt;winget&lt;/code&gt; with follow commands: &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;winget install SourceGit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;winget&lt;/code&gt; will install this software as a commandline tool. You need run &lt;code&gt;SourceGit&lt;/code&gt; from console or &lt;code&gt;Win+R&lt;/code&gt; at the first time. Then you can add it to the taskbar.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can install the latest stable by &lt;code&gt;scoop&lt;/code&gt; with follow commands: &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;scoop bucket add extras
scoop install sourcegit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Pre-built binaries can be found in &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/releases/latest&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For &lt;strong&gt;macOS&lt;/strong&gt; users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Thanks &lt;a href=&quot;https://github.com/ybeapps&quot;&gt;@ybeapps&lt;/a&gt; for making &lt;code&gt;SourceGit&lt;/code&gt; available on &lt;code&gt;Homebrew&lt;/code&gt;. You can simply install it with following command: &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;brew tap ybeapps/homebrew-sourcegit
brew install --cask --no-quarantine sourcegit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;If you want to install &lt;code&gt;SourceGit.app&lt;/code&gt; from GitHub Release manually, you need run following command to make sure it works: &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo xattr -cr /Applications/SourceGit.app
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Make sure &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/releases&quot;&gt;git-credential-manager&lt;/a&gt; is installed on your mac.&lt;/li&gt; 
 &lt;li&gt;You can run &lt;code&gt;echo $PATH &amp;gt; ~/Library/Application\ Support/SourceGit/PATH&lt;/code&gt; to generate a custom PATH env file to introduce &lt;code&gt;PATH&lt;/code&gt; env to SourceGit.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For &lt;strong&gt;Linux&lt;/strong&gt; users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Thanks &lt;a href=&quot;https://github.com/aikawayataro&quot;&gt;@aikawayataro&lt;/a&gt; for providing &lt;code&gt;rpm&lt;/code&gt; and &lt;code&gt;deb&lt;/code&gt; repositories, hosted on &lt;a href=&quot;https://codeberg.org/yataro/-/packages&quot;&gt;Codeberg&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;deb&lt;/code&gt; how to:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl https://codeberg.org/api/packages/yataro/debian/repository.key | sudo tee /etc/apt/keyrings/sourcegit.asc
echo &quot;deb [signed-by=/etc/apt/keyrings/sourcegit.asc, arch=amd64,arm64] https://codeberg.org/api/packages/yataro/debian generic main&quot; | sudo tee /etc/apt/sources.list.d/sourcegit.list
sudo apt update
sudo apt install sourcegit
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;rpm&lt;/code&gt; how to:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl https://codeberg.org/api/packages/yataro/rpm.repo | sed -e &#39;s/gpgcheck=1/gpgcheck=0/&#39; &amp;gt; sourcegit.repo

# Fedora 41 and newer
sudo dnf config-manager addrepo --from-repofile=./sourcegit.repo
# Fedora 40 and earlier
sudo dnf config-manager --add-repo ./sourcegit.repo

sudo dnf install sourcegit
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your distribution isn&#39;t using &lt;code&gt;dnf&lt;/code&gt;, please refer to the documentation of your distribution on how to add an &lt;code&gt;rpm&lt;/code&gt; repository.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;AppImage&lt;/code&gt; files can be found on &lt;a href=&quot;https://appimage.github.io/SourceGit/&quot;&gt;AppImage hub&lt;/a&gt;, &lt;code&gt;xdg-open&lt;/code&gt; (&lt;code&gt;xdg-utils&lt;/code&gt;) must be installed to support open native file manager.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make sure &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/releases&quot;&gt;git-credential-manager&lt;/a&gt; or &lt;a href=&quot;https://pkgs.org/search/?q=git-credential-libsecret&quot;&gt;git-credential-libsecret&lt;/a&gt; is installed on your Linux.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Maybe you need to set environment variable &lt;code&gt;AVALONIA_SCREEN_SCALE_FACTORS&lt;/code&gt;. See &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/wiki/Configuring-X11-per-monitor-DPI&quot;&gt;https://github.com/AvaloniaUI/Avalonia/wiki/Configuring-X11-per-monitor-DPI&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you can NOT type accented characters, such as &lt;code&gt;ê&lt;/code&gt;, &lt;code&gt;ó&lt;/code&gt;, try to set the environment variable &lt;code&gt;AVALONIA_IM_MODULE&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;OpenAI&lt;/h2&gt; 
&lt;p&gt;This software supports using OpenAI or other AI service that has an OpenAI compatible HTTP API to generate commit message. You need configurate the service in &lt;code&gt;Preference&lt;/code&gt; window.&lt;/p&gt; 
&lt;p&gt;For &lt;code&gt;OpenAI&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Server&lt;/code&gt; must be &lt;code&gt;https://api.openai.com/v1&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For other AI service:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;Server&lt;/code&gt; should fill in a URL equivalent to OpenAI&#39;s &lt;code&gt;https://api.openai.com/v1&lt;/code&gt;. For example, when using &lt;code&gt;Ollama&lt;/code&gt;, it should be &lt;code&gt;http://localhost:11434/v1&lt;/code&gt; instead of &lt;code&gt;http://localhost:11434/api/generate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;API Key&lt;/code&gt; is optional that depends on the service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;External Tools&lt;/h2&gt; 
&lt;p&gt;This app supports open repository in external tools listed in the table below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Visual Studio Code&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Visual Studio Code - Insiders&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VSCodium&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cursor&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fleet&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sublime Text&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zed&lt;/td&gt; 
   &lt;td&gt;NO&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Visual Studio&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;NO&lt;/td&gt; 
   &lt;td&gt;NO&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This app will try to find those tools based on some pre-defined or expected locations automatically. If you are using one portable version of these tools, it will not be detected by this app. To solve this problem you can add a file named &lt;code&gt;external_editors.json&lt;/code&gt; in app data storage directory and provide the path directly. For example:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;tools&quot;: {
        &quot;Visual Studio Code&quot;: &quot;D:\\VSCode\\Code.exe&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This app also supports a lot of &lt;code&gt;JetBrains&lt;/code&gt; IDEs, installing &lt;code&gt;JetBrains Toolbox&lt;/code&gt; will help this app to find them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Dark Theme&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sourcegit-scm/sourcegit/master/screenshots/theme_dark.png&quot; alt=&quot;Theme Dark&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Light Theme&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sourcegit-scm/sourcegit/master/screenshots/theme_light.png&quot; alt=&quot;Theme Light&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Custom&lt;/p&gt; &lt;p&gt;You can find custom themes from &lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit-theme.git&quot;&gt;sourcegit-theme&lt;/a&gt;. And welcome to share your own themes.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Everyone is welcome to submit a PR. Please make sure your PR is based on the latest &lt;code&gt;develop&lt;/code&gt; branch and the target branch of PR is &lt;code&gt;develop&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In short, here are the commands to get started once &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download&quot;&gt;.NET tools are installed&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
dotnet restore
dotnet build
dotnet run --project src/SourceGit.csproj
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thanks to all the people who contribute.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sourcegit-scm/sourcegit/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=sourcegit-scm/sourcegit&amp;amp;columns=20&quot; alt=&quot;Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Third-Party Components&lt;/h2&gt; 
&lt;p&gt;For detailed license information, see &lt;a href=&quot;https://raw.githubusercontent.com/sourcegit-scm/sourcegit/master/THIRD-PARTY-LICENSES.md&quot;&gt;THIRD-PARTY-LICENSES.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xoofx/markdig</title>
      <link>https://github.com/xoofx/markdig</link>
      <description>&lt;p&gt;A fast, powerful, CommonMark compliant, extensible Markdown processor for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Markdig &lt;a href=&quot;https://github.com/xoofx/markdig/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/xoofx/markdig/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;ci&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/github/xoofx/markdig?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/xoofx/markdig/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Markdig/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Markdig.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=FRGHXBTP442JL&quot;&gt;&lt;img src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&quot; alt=&quot;Donate&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;img align=&quot;right&quot; width=&quot;160px&quot; height=&quot;160px&quot; src=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/img/markdig.png&quot; /&gt; 
&lt;p&gt;Markdig is a fast, powerful, &lt;a href=&quot;https://commonmark.org/&quot;&gt;CommonMark&lt;/a&gt; compliant, extensible Markdown processor for .NET.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: The repository is under construction. There will be a dedicated website and proper documentation at some point!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can &lt;strong&gt;try Markdig online&lt;/strong&gt; and compare it to other implementations on &lt;a href=&quot;https://babelmark.github.io/?text=Hello+**Markdig**!&quot;&gt;babelmark3&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Very fast parser and html renderer&lt;/strong&gt; (no-regexp), very lightweight in terms of GC pressure. See benchmarks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Abstract Syntax Tree&lt;/strong&gt; with precise source code location for syntax tree, useful when building a Markdown editor. 
  &lt;ul&gt; 
   &lt;li&gt;Checkout &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=MadsKristensen.MarkdownEditor2&quot;&gt;Markdown Editor v2 for Visual Studio 2022&lt;/a&gt; powered by Markdig!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Converter to &lt;strong&gt;HTML&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Passing more than &lt;strong&gt;600+ tests&lt;/strong&gt; from the latest &lt;a href=&quot;https://spec.commonmark.org/&quot;&gt;CommonMark specs (0.31.2)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Includes all the core elements of CommonMark: 
  &lt;ul&gt; 
   &lt;li&gt;including &lt;strong&gt;GFM fenced code blocks&lt;/strong&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt; architecture 
  &lt;ul&gt; 
   &lt;li&gt;Even the core Markdown/CommonMark parsing is pluggable, so it allows to disable builtin Markdown/Commonmark parsing (e.g &lt;a href=&quot;https://github.com/lunet-io/markdig/raw/7964bd0160d4c18e4155127a4c863d61ebd8944a/src/Markdig/MarkdownExtensions.cs#L306&quot;&gt;Disable HTML parsing&lt;/a&gt;) or change behaviour (e.g change matching &lt;code&gt;#&lt;/code&gt; of a headers with &lt;code&gt;@&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig/Roundtrip.md&quot;&gt;&lt;strong&gt;Roundtrip support&lt;/strong&gt;&lt;/a&gt;: Parses trivia (whitespace, newlines and other characters) to support lossless parse ⭢ render roundtrip. This enables changing markdown documents without introducing undesired trivia changes.&lt;/li&gt; 
 &lt;li&gt;Built-in with &lt;strong&gt;20+ extensions&lt;/strong&gt;, including: 
  &lt;ul&gt; 
   &lt;li&gt;2 kind of tables: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/PipeTableSpecs.md&quot;&gt;&lt;strong&gt;Pipe tables&lt;/strong&gt;&lt;/a&gt; (inspired from GitHub tables and &lt;a href=&quot;https://pandoc.org/MANUAL.html#extension-pipe_tables&quot;&gt;PanDoc - Pipe Tables&lt;/a&gt;)&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/GridTableSpecs.md&quot;&gt;&lt;strong&gt;Grid tables&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&quot;https://pandoc.org/MANUAL.html#extension-grid_tables&quot;&gt;Pandoc - Grid Tables&lt;/a&gt;)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/EmphasisExtraSpecs.md&quot;&gt;&lt;strong&gt;Extra emphasis&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&quot;https://pandoc.org/MANUAL.html#strikeout&quot;&gt;Pandoc - Emphasis&lt;/a&gt; and &lt;a href=&quot;https://markdown-it.github.io/&quot;&gt;Markdown-it&lt;/a&gt;) 
    &lt;ul&gt; 
     &lt;li&gt;strike through &lt;code&gt;~~&lt;/code&gt;,&lt;/li&gt; 
     &lt;li&gt;Subscript &lt;code&gt;~&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;Superscript &lt;code&gt;^&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;Inserted &lt;code&gt;++&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;Marked &lt;code&gt;==&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/GenericAttributesSpecs.md&quot;&gt;&lt;strong&gt;Special attributes&lt;/strong&gt;&lt;/a&gt; or attached HTML attributes (inspired from &lt;a href=&quot;https://michelf.ca/projects/php-markdown/extra/#spe-attr&quot;&gt;PHP Markdown Extra - Special Attributes&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/DefinitionListSpecs.md&quot;&gt;&lt;strong&gt;Definition lists&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&quot;https://michelf.ca/projects/php-markdown/extra/#def-list&quot;&gt;PHP Markdown Extra - Definitions Lists&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FootnotesSpecs.md&quot;&gt;&lt;strong&gt;Footnotes&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&quot;https://michelf.ca/projects/php-markdown/extra/#footnotes&quot;&gt;PHP Markdown Extra - Footnotes&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/AutoIdentifierSpecs.md&quot;&gt;&lt;strong&gt;Auto-identifiers&lt;/strong&gt;&lt;/a&gt; for headings (similar to &lt;a href=&quot;https://pandoc.org/MANUAL.html#extension-auto_identifiers&quot;&gt;Pandoc - Auto Identifiers&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/AutoLinks.md&quot;&gt;&lt;strong&gt;Auto-links&lt;/strong&gt;&lt;/a&gt; generates links if a text starts with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;ftp://&lt;/code&gt; or &lt;code&gt;mailto:&lt;/code&gt; or &lt;code&gt;www.xxx.yyy&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/TaskListSpecs.md&quot;&gt;&lt;strong&gt;Task Lists&lt;/strong&gt;&lt;/a&gt; inspired from &lt;a href=&quot;https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments&quot;&gt;Github Task lists&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/ListExtraSpecs.md&quot;&gt;&lt;strong&gt;Extra bullet lists&lt;/strong&gt;&lt;/a&gt;, supporting alpha bullet &lt;code&gt;a.&lt;/code&gt; &lt;code&gt;b.&lt;/code&gt; and roman bullet (&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;ii&lt;/code&gt;...etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/MediaSpecs.md&quot;&gt;&lt;strong&gt;Media support&lt;/strong&gt;&lt;/a&gt; for media url (youtube, vimeo, mp4...etc.) (inspired from this &lt;a href=&quot;https://talk.commonmark.org/t/embedded-audio-and-video/441&quot;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/AbbreviationSpecs.md&quot;&gt;&lt;strong&gt;Abbreviations&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&quot;https://michelf.ca/projects/php-markdown/extra/#abbr&quot;&gt;PHP Markdown Extra - Abbreviations&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md&quot;&gt;&lt;strong&gt;Citation&lt;/strong&gt;&lt;/a&gt; text by enclosing &lt;code&gt;&quot;&quot;...&quot;&quot;&lt;/code&gt; (inspired by this &lt;a href=&quot;https://talk.commonmark.org/t/referencing-creative-works-with-cite/892&quot;&gt;CommonMark discussion &lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/CustomContainerSpecs.md&quot;&gt;&lt;strong&gt;Custom containers&lt;/strong&gt;&lt;/a&gt; similar to fenced code block &lt;code&gt;:::&lt;/code&gt; for generating a proper &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt; instead (inspired by this &lt;a href=&quot;https://talk.commonmark.org/t/custom-container-for-block-and-inline/2051&quot;&gt;CommonMark discussion &lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md&quot;&gt;&lt;strong&gt;Figures&lt;/strong&gt;&lt;/a&gt; (inspired from this &lt;a href=&quot;https://talk.commonmark.org/t/image-tag-should-expand-to-figure-when-used-with-title/265/5&quot;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/FigureFooterAndCiteSpecs.md&quot;&gt;&lt;strong&gt;Footers&lt;/strong&gt;&lt;/a&gt; (inspired from this &lt;a href=&quot;https://talk.commonmark.org/t/syntax-for-footer/2070&quot;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/MathSpecs.md&quot;&gt;&lt;strong&gt;Mathematics&lt;/strong&gt;&lt;/a&gt;/Latex extension by enclosing &lt;code&gt;$$&lt;/code&gt; for block and &lt;code&gt;$&lt;/code&gt; for inline math (inspired from this &lt;a href=&quot;https://talk.commonmark.org/t/mathematics-extension/457/31&quot;&gt;CommonMark discussion&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/HardlineBreakSpecs.md&quot;&gt;&lt;strong&gt;Soft lines as hard lines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/EmojiSpecs.md&quot;&gt;&lt;strong&gt;Emoji&lt;/strong&gt;&lt;/a&gt; support (inspired from &lt;a href=&quot;https://markdown-it.github.io/&quot;&gt;Markdown-it&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/SmartyPantsSpecs.md&quot;&gt;&lt;strong&gt;SmartyPants&lt;/strong&gt;&lt;/a&gt; (inspired from &lt;a href=&quot;https://daringfireball.net/projects/smartypants/&quot;&gt;Daring Fireball - SmartyPants&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/BootstrapSpecs.md&quot;&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt;&lt;/a&gt; class (to output bootstrap class)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/DiagramsSpecs.md&quot;&gt;&lt;strong&gt;Diagrams&lt;/strong&gt;&lt;/a&gt; extension whenever a fenced code block contains a special keyword, it will be converted to a div block with the content as-is (currently, supports &lt;a href=&quot;https://mermaid.js.org&quot;&gt;&lt;code&gt;mermaid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/skanaar/nomnoml&quot;&gt;&lt;code&gt;nomnoml&lt;/code&gt;&lt;/a&gt; diagrams)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/YamlSpecs.md&quot;&gt;&lt;strong&gt;YAML Front Matter&lt;/strong&gt;&lt;/a&gt; to parse without evaluating the front matter and to discard it from the HTML output (typically used for previewing without the front matter in MarkdownEditor)&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/JiraLinks.md&quot;&gt;&lt;strong&gt;JIRA links&lt;/strong&gt;&lt;/a&gt; to automatically generate links for JIRA project references (Thanks to @clarkd: &lt;a href=&quot;https://github.com/clarkd/MarkdigJiraLinker&quot;&gt;https://github.com/clarkd/MarkdigJiraLinker&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Starting with Markdig version &lt;code&gt;0.20.0+&lt;/code&gt;, Markdig is compatible only with &lt;code&gt;NETStandard 2.0&lt;/code&gt;, &lt;code&gt;NETStandard 2.1&lt;/code&gt;, &lt;code&gt;NETCoreApp 2.1&lt;/code&gt; and &lt;code&gt;NETCoreApp 3.1&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are looking for support for an old .NET Framework 3.5 or 4.0, you can download Markdig &lt;code&gt;0.18.3&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Third Party Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kryptos-FR/markdig.wpf&quot;&gt;&lt;strong&gt;WPF/XAML Markdown Renderer&lt;/strong&gt;: &lt;code&gt;markdig.wpf&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/neolithos/NeoMarkdigXaml&quot;&gt;&lt;strong&gt;WPF/XAML Markdown Renderer&lt;/strong&gt;: &lt;code&gt;Neo.Markdig.Xaml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RichardSlater/Markdig.SyntaxHighlighting&quot;&gt;&lt;strong&gt;Syntax highlighting&lt;/strong&gt;: &lt;code&gt;Markdig.SyntaxHighlighting&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wbaldoumas/markdown-colorcode&quot;&gt;&lt;strong&gt;Syntax highlighting using ColorCode-Universal&lt;/strong&gt;: &lt;code&gt;Markdown.ColorCode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ilich/Markdig.Prism&quot;&gt;&lt;strong&gt;Syntax highlighting using Prism.js&lt;/strong&gt;: &lt;code&gt;WebStoating.Markdig.Prism&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/macaba/Markdig.Extensions.ScriptCs&quot;&gt;&lt;strong&gt;Embedded C# scripting&lt;/strong&gt;: &lt;code&gt;Markdig.Extensions.ScriptCs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The repository is under construction. There will be a dedicated website and proper documentation at some point!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;While there is not yet a dedicated documentation, you can find from the &lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/src/Markdig.Tests/Specs/readme.md&quot;&gt;specs documentation&lt;/a&gt; how to use these extensions.&lt;/p&gt; 
&lt;p&gt;In the meantime, you can have a &quot;behind the scene&quot; article about Markdig in my blog post &lt;a href=&quot;https://xoofx.github.io/blog/2016/06/13/implementing-a-markdown-processor-for-dotnet/&quot;&gt;&quot;Implementing a Markdown Engine for .NET&quot;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Markdig is available as a NuGet package: &lt;a href=&quot;https://www.nuget.org/packages/Markdig/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Markdig.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Also &lt;a href=&quot;https://www.nuget.org/packages/Markdig.Signed/&quot;&gt;Markdig.Signed&lt;/a&gt; NuGet package provides signed assemblies.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The main entry point for the API is the &lt;code&gt;Markdig.Markdown&lt;/code&gt; class:&lt;/p&gt; 
&lt;p&gt;By default, without any options, Markdig is using the plain CommonMark parser:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var result = Markdown.ToHtml(&quot;This is a text with some *emphasis*&quot;);
Console.WriteLine(result);   // prints: &amp;lt;p&amp;gt;This is a text with some &amp;lt;em&amp;gt;emphasis&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to activate most of all advanced extensions (except Emoji, SoftLine as HardLine, Bootstrap, YAML Front Matter, JiraLinks and SmartyPants)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Configure the pipeline with all advanced extensions active
var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
var result = Markdown.ToHtml(&quot;This is a text with some *emphasis*&quot;, pipeline);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://dotnetfiddle.net/GoZXyI&quot;&gt;Try it online!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can have a look at the &lt;a href=&quot;https://github.com/lunet-io/markdig/raw/master/src/Markdig/MarkdownExtensions.cs&quot;&gt;MarkdownExtensions&lt;/a&gt; that describes all actionable extensions (by modifying the MarkdownPipeline)&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated. For detailed contributing guidelines, please see &lt;a href=&quot;https://raw.githubusercontent.com/xoofx/markdig/master/contributing.md&quot;&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;In order to build Markdig, you need to install &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download&quot;&gt;.NET 6.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This software is released under the &lt;a href=&quot;https://github.com/lunet-io/markdig/raw/master/license.txt&quot;&gt;BSD-Clause 2 license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Benchmarking&lt;/h2&gt; 
&lt;p&gt;The latest benchmark was collected on April 23 2022, against the following implementations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lunet-io/markdig&quot;&gt;Markdig&lt;/a&gt; (version: 0.30.2): itself&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/commonmark/cmark&quot;&gt;cmark&lt;/a&gt; (version: 0.30.2): Reference C implementation of CommonMark, no support for extensions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Knagis/CommonMark.NET&quot;&gt;CommonMark.NET(master)&lt;/a&gt; (version: 0.15.1): CommonMark implementation for .NET, no support for extensions, port of cmark, deprecated.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kiri-rin/markdownsharp&quot;&gt;MarkdownSharp&lt;/a&gt; (version: 2.0.5): Open source C# implementation of Markdown processor, as featured previously on Stack Overflow, regexp based.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000
AMD Ryzen 9 5950X, 1 CPU, 32 logical and 16 physical cores
.NET SDK=6.0.202
  [Host]     : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT
  DefaultJob : .NET 6.0.4 (6.0.422.16404), X64 RyuJIT


|            Method |       Mean |     Error |    StdDev |
|------------------ |-----------:|----------:|----------:|
|           markdig |   1.979 ms | 0.0221 ms | 0.0185 ms |
|             cmark |   2.571 ms | 0.0081 ms | 0.0076 ms |
|    CommonMark.NET |   2.016 ms | 0.0169 ms | 0.0158 ms |
|     MarkdownSharp | 221.455 ms | 1.4442 ms | 1.3509 ms |
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Markdig is roughly &lt;strong&gt;x100 times faster than MarkdownSharp&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;20% faster than the reference cmark C implementation&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Supports this project with a monthly donation and help me continue improving it. [&lt;a href=&quot;https://github.com/sponsors/xoofx&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lilith&quot;&gt;&lt;img src=&quot;https://github.com/lilith.png?size=200&quot; width=&quot;64px;&quot; style=&quot;border-radius: 50%&quot; alt=&quot;lilith&quot; /&gt;&lt;/a&gt; Lilith River, author of &lt;a href=&quot;https://github.com/imazen/imageflow-server&quot;&gt;Imageflow Server, an easy on-demand image editing, optimization, and delivery server&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Thanks to the fantastic work done by &lt;a href=&quot;https://johnmacfarlane.net/&quot;&gt;John Mac Farlane&lt;/a&gt; for the CommonMark specs and all the people involved in making Markdown a better standard!&lt;/p&gt; 
&lt;p&gt;This project would not have been possible without this huge foundation.&lt;/p&gt; 
&lt;p&gt;Thanks also to the project &lt;a href=&quot;https://github.com/PerfDotNet/BenchmarkDotNet&quot;&gt;BenchmarkDotNet&lt;/a&gt; that makes benchmarking so easy to setup!&lt;/p&gt; 
&lt;p&gt;Some decoding part (e.g HTML &lt;a href=&quot;https://github.com/lunet-io/markdig/raw/master/src/Markdig/Helpers/EntityHelper.cs&quot;&gt;EntityHelper.cs&lt;/a&gt;) have been re-used from &lt;a href=&quot;https://github.com/Knagis/CommonMark.NET&quot;&gt;CommonMark.NET&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to the work done by @clarkd on the &lt;a href=&quot;https://github.com/clarkd/MarkdigJiraLinker&quot;&gt;JIRA Link extension&lt;/a&gt;, now included with this project!&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Alexandre MUTEL aka &lt;a href=&quot;https://xoofx.github.io/&quot;&gt;xoofx&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xiaoyaocz/AllLive</title>
      <link>https://github.com/xiaoyaocz/AllLive</link>
      <description>&lt;p&gt;获取多个直播平台的信息和弹幕&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;128&quot; src=&quot;https://raw.githubusercontent.com/xiaoyaocz/AllLive/master/Assets/Logo.png&quot; alt=&quot;All Live logo&quot; /&gt; &lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt;聚合直播&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; 聚合多个站点，简简单单看直播。 &lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xiaoyaocz/AllLive/master/Assets/UWP2.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;支持直播平台：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🐅 虎牙直播&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🐟 斗鱼直播&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📺 哔哩哔哩直播&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎵 抖音直播&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;UWP安装&lt;/h2&gt; 
&lt;p align=&quot;left&quot;&gt; &lt;a title=&quot;从 Microsoft Store 中获取&quot; href=&quot;https://apps.microsoft.com/detail/9n1twg2g84vd&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://get.microsoft.com/images/en-US%20dark.svg?sanitize=true&quot; width=&quot;120&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;可以在Microsoft Store中搜索“&lt;a href=&quot;https://apps.microsoft.com/detail/9n1twg2g84vd&quot;&gt;聚合直播&lt;/a&gt;”下载安装。&lt;/p&gt; 
&lt;p&gt;免费试用永不过期，购买应用视为无偿赞助作者。&lt;/p&gt; 
&lt;p&gt;系统要求：Windows 10 1903及以上版本。&lt;/p&gt; 
&lt;p&gt;支持平台：x86、x64、ARM、ARM64。&lt;/p&gt; 
&lt;p&gt;如果你想在其他系统上使用，请查看&lt;a href=&quot;https://github.com/xiaoyaocz/dart_simple_live&quot;&gt;Simple Live&lt;/a&gt;项目。&lt;/p&gt; 
&lt;h2&gt;项目结构&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;AllLive.Core&lt;/code&gt; 项目核心库，实现获取各个网站的信息及弹幕。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AllLive.ConsoleApp&lt;/code&gt; 基于AllLive.Core实现的控制台程序。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AllLive.UWP&lt;/code&gt; 基于AllLive.Core实现的UWP户端。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;参考及引用&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/wbt5/real-url&quot;&gt;https://github.com/wbt5/real-url&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lovelyyoshino/Bilibili-Live-API/raw/master/API.WebSocket.md&quot;&gt;https://github.com/lovelyyoshino/Bilibili-Live-API/blob/master/API.WebSocket.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/IsoaSFlus/danmaku&quot;&gt;https://github.com/IsoaSFlus/danmaku&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/sdflysha/p/20210117-douyu-barrage-with-dotnet.html&quot;&gt;https://www.cnblogs.com/sdflysha/p/20210117-douyu-barrage-with-dotnet.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/BacooTang/huya-danmu&quot;&gt;https://github.com/BacooTang/huya-danmu&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TarsCloud/Tars&quot;&gt;https://github.com/TarsCloud/Tars&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;声明&lt;/h2&gt; 
&lt;p&gt;本项目的所有功能都是基于互联网上公开的资料开发，无任何破解、逆向工程等行为。&lt;/p&gt; 
&lt;p&gt;本项目仅用于学习交流编程技术，严禁将本项目用于商业目的。如有任何商业行为，均与本项目无关。&lt;/p&gt; 
&lt;p&gt;如果本项目存在侵犯您的合法权益的情况，请及时与开发者联系，开发者将会及时删除有关内容。&lt;/p&gt; 
&lt;h2&gt;赞助&lt;/h2&gt; 
&lt;p&gt;如果觉得此项目有用，可以考虑赞助我喝杯咖啡❤&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://afdian.net/a/xiaoyaocz&quot;&gt;爱发电&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/9n1twg2g84vd&quot;&gt;应用商店购买&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IvanMurzak/Unity-MCP</title>
      <link>https://github.com/IvanMurzak/Unity-MCP</link>
      <description>&lt;p&gt;MCP Server + Plugin for Unity Editor and Unity game. The Plugin allows to connect to MCP clients like Claude Desktop or others.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity MCP (AI Connector)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://openupm.com/packages/com.ivanmurzak.unity.mcp/&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/com.ivanmurzak.unity.mcp?label=openupm&amp;amp;registry_uri=https://package.openupm.com&quot; alt=&quot;openupm&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/IvanMurzak/Unity-MCP&quot; alt=&quot;License&quot; /&gt; &lt;a href=&quot;https://stand-with-ukraine.pp.ua&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/badges/StandWithUkraine.svg?sanitize=true&quot; alt=&quot;Stand With Ukraine&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/8f595879-a578-421a-a06d-8c194af874f7&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Unity Version&lt;/th&gt; 
   &lt;th&gt;Editmode&lt;/th&gt; 
   &lt;th&gt;Playmode&lt;/th&gt; 
   &lt;th&gt;Standalone&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2022.3.61f1&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/2022.3.61f1_editmode.yml?label=2022.3.61f1-editmode&amp;amp;branch=main&quot; alt=&quot;2022.3.61f1&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/2022.3.61f1_playmode.yml?label=2022.3.61f1-playmode&amp;amp;branch=main&quot; alt=&quot;2022.3.61f1&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/2022.3.61f1_standalone.yml?label=2022.3.61f1-standalone&amp;amp;branch=main&quot; alt=&quot;2022.3.61f1&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2023.2.20f1&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/2023.2.20f1_editmode.yml?label=2023.2.20f1-editmode&amp;amp;branch=main&quot; alt=&quot;2023.2.20f1&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/2023.2.20f1_playmode.yml?label=2023.2.20f1-playmode&amp;amp;branch=main&quot; alt=&quot;2023.2.20f1&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/2023.2.20f1_standalone.yml?label=2023.2.20f1-standalone&amp;amp;branch=main&quot; alt=&quot;2023.2.20f1&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6000.0.46f1&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/6000.0.46f1_editmode.yml?label=6000.0.46f1-editmode&amp;amp;branch=main&quot; alt=&quot;6000.0.46f1&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/6000.0.46f1_playmode.yml?label=6000.0.46f1-playmode&amp;amp;branch=main&quot; alt=&quot;6000.0.46f1&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/IvanMurzak/Unity-MCP/6000.0.46f1_standalone.yml?label=6000.0.46f1-standalone&amp;amp;branch=main&quot; alt=&quot;6000.0.46f1&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/IvanMurzak/Unity-MCP&quot;&gt;Unity-MCP&lt;/a&gt;&lt;/strong&gt; is a bridge between LLM and Unity. It exposes and explains to LLM Unity&#39;s tools. LLM understands the interface and utilizes the tools in the way a user asks.&lt;/p&gt; 
&lt;p&gt;Connect &lt;strong&gt;&lt;a href=&quot;https://github.com/IvanMurzak/Unity-MCP&quot;&gt;Unity-MCP&lt;/a&gt;&lt;/strong&gt; to LLM client such as &lt;a href=&quot;https://claude.ai/download&quot;&gt;Claude&lt;/a&gt; or &lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor&lt;/a&gt; using integrated &lt;code&gt;AI Connector&lt;/code&gt; window. Custom clients are supported as well.&lt;/p&gt; 
&lt;p&gt;The project is designed to let developers to add custom tools soon. After that the next goal is to enable the same features in player&#39;s build. For not it works only in Unity Editor.&lt;/p&gt; 
&lt;p&gt;The system is extensible: you can define custom &lt;code&gt;tool&lt;/code&gt;s directly in your Unity project codebase, exposing new capabilities to the AI or automation clients. This makes Unity-MCP a flexible foundation for building advanced workflows, rapid prototyping, or integrating AI-driven features into your development process.&lt;/p&gt; 
&lt;h2&gt;AI Tools&lt;/h2&gt; 
&lt;p&gt;Unity-MCP supports a wide range of tools. Each tool is a small connector between LLM and Unity Engine. You may create your own &lt;code&gt;tools&lt;/code&gt; by using API, take a look at &lt;a href=&quot;https://raw.githubusercontent.com/IvanMurzak/Unity-MCP/main/#add-custom-tool&quot;&gt;add custom tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Here is the list of default AI tools. All of them are available after installation Unity-MCP into your project.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Legend:&lt;/strong&gt; ✅ = Implemented &amp;amp; available, 🔲 = Planned / Not yet implemented&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td valign=&quot;top&quot;&gt; &lt;h3&gt;GameObject&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Create&lt;/li&gt; 
     &lt;li&gt;✅ Destroy&lt;/li&gt; 
     &lt;li&gt;✅ Find&lt;/li&gt; 
     &lt;li&gt;✅ Modify (tag, layer, name, static)&lt;/li&gt; 
     &lt;li&gt;✅ Set parent&lt;/li&gt; 
     &lt;li&gt;✅ Duplicate&lt;/li&gt; 
    &lt;/ul&gt; &lt;h5&gt;GameObject.Components&lt;/h5&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Add Component&lt;/li&gt; 
     &lt;li&gt;✅ Get Components&lt;/li&gt; 
     &lt;li&gt;✅ Modify Component&lt;/li&gt; 
     &lt;li&gt; 
      &lt;ul&gt; 
       &lt;li&gt;✅ &lt;code&gt;Field&lt;/code&gt; set value&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt; 
      &lt;ul&gt; 
       &lt;li&gt;✅ &lt;code&gt;Property&lt;/code&gt; set value&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt; 
      &lt;ul&gt; 
       &lt;li&gt;✅ &lt;code&gt;Reference&lt;/code&gt; link set&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;✅ Destroy Component&lt;/li&gt; 
     &lt;li&gt;🔲 Remove missing components&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Editor&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ State (Playmode) 
      &lt;ul&gt; 
       &lt;li&gt;✅ Get&lt;/li&gt; 
       &lt;li&gt;✅ Set&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;✅ Get Windows&lt;/li&gt; 
     &lt;li&gt;✅ Layer 
      &lt;ul&gt; 
       &lt;li&gt;✅ Get All&lt;/li&gt; 
       &lt;li&gt;✅ Add&lt;/li&gt; 
       &lt;li&gt;✅ Remove&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;✅ Tag 
      &lt;ul&gt; 
       &lt;li&gt;✅ Get All&lt;/li&gt; 
       &lt;li&gt;✅ Add&lt;/li&gt; 
       &lt;li&gt;✅ Remove&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;✅ Execute &lt;code&gt;MenuItem&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;✅ Run Tests (see note in &lt;a href=&quot;https://raw.githubusercontent.com/IvanMurzak/Unity-MCP/main/#running-playmode-tests&quot;&gt;running play mode tests&lt;/a&gt;)&lt;/li&gt; 
    &lt;/ul&gt; &lt;h4&gt;Editor.Selection&lt;/h4&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Get selection&lt;/li&gt; 
     &lt;li&gt;✅ Set selection&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Prefabs&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Instantiate&lt;/li&gt; 
     &lt;li&gt;🔲 Create&lt;/li&gt; 
     &lt;li&gt;✅ Open&lt;/li&gt; 
     &lt;li&gt;✅ Modify (GameObject.Modify)&lt;/li&gt; 
     &lt;li&gt;✅ Save&lt;/li&gt; 
     &lt;li&gt;✅ Close&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Package&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;🔲 Get installed&lt;/li&gt; 
     &lt;li&gt;🔲 Install&lt;/li&gt; 
     &lt;li&gt;🔲 Remove&lt;/li&gt; 
     &lt;li&gt;🔲 Update&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
   &lt;td valign=&quot;top&quot;&gt; &lt;h3&gt;Assets&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Create&lt;/li&gt; 
     &lt;li&gt;✅ Find&lt;/li&gt; 
     &lt;li&gt;✅ Refresh&lt;/li&gt; 
     &lt;li&gt;✅ Read&lt;/li&gt; 
     &lt;li&gt;✅ Modify&lt;/li&gt; 
     &lt;li&gt;✅ Rename&lt;/li&gt; 
     &lt;li&gt;✅ Delete&lt;/li&gt; 
     &lt;li&gt;✅ Move&lt;/li&gt; 
     &lt;li&gt;✅ Create folder&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Scene&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Create&lt;/li&gt; 
     &lt;li&gt;✅ Save&lt;/li&gt; 
     &lt;li&gt;✅ Load&lt;/li&gt; 
     &lt;li&gt;✅ Unload&lt;/li&gt; 
     &lt;li&gt;✅ Get Loaded&lt;/li&gt; 
     &lt;li&gt;✅ Get hierarchy&lt;/li&gt; 
     &lt;li&gt;🔲 Search (editor)&lt;/li&gt; 
     &lt;li&gt;🔲 Raycast (understand volume)&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Materials&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Create&lt;/li&gt; 
     &lt;li&gt;✅ Modify (Assets.Modify)&lt;/li&gt; 
     &lt;li&gt;✅ Read (Assets.Read)&lt;/li&gt; 
     &lt;li&gt;✅ Assign to a Component on a GameObject&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Shader&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ List All&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Scripts&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Read&lt;/li&gt; 
     &lt;li&gt;✅ Update or Create&lt;/li&gt; 
     &lt;li&gt;✅ Delete&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Scriptable Object&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Create&lt;/li&gt; 
     &lt;li&gt;✅ Read&lt;/li&gt; 
     &lt;li&gt;✅ Modify&lt;/li&gt; 
     &lt;li&gt;✅ Remove&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Debug&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Read logs (console)&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;Component&lt;/h3&gt; 
    &lt;ul&gt; 
     &lt;li&gt;✅ Get All&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openupm/openupm-cli#installation&quot;&gt;Install OpenUPM-CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Open command line in Unity project folder&lt;/li&gt; 
 &lt;li&gt;Run the command&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;openupm add com.ivanmurzak.unity.mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make sure your project path doesn&#39;t have a space symbol &quot; &quot;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &lt;code&gt;C:/MyProjects/Project&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;❌ &lt;code&gt;C:/My Projects/Project&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Open Unity project, go 👉 &lt;code&gt;Window/AI Connector (Unity-MCP)&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e8049620-6614-45f1-92d7-cc5d00a6b074&quot; alt=&quot;Unity_AI&quot; /&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Install MCP client&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;Install Cursor&lt;/a&gt; (recommended)&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://claude.ai/download&quot;&gt;Install Claude&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Sign-in into MCP client&lt;/li&gt; 
 &lt;li&gt;Click &lt;code&gt;Configure&lt;/code&gt; at your MCP client.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/19f80179-c5b3-4e9c-bdf6-07edfb773018&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt;Restart your MCP client.&lt;/li&gt; 
 &lt;li&gt;Make sure &lt;code&gt;AI Connector&lt;/code&gt; is &quot;Connected&quot; or &quot;Connecting...&quot; after restart.&lt;/li&gt; 
 &lt;li&gt;Test AI connection in your Client (Cursor, Claude Desktop). Type any question or task into the chat. Something like:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Explain my scene hierarchy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Add custom &lt;code&gt;tool&lt;/code&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ It only works with MCP client that supports dynamic tool list update.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Unity-MCP is designed to support custom &lt;code&gt;tool&lt;/code&gt; development by project owner. MCP server takes data from Unity plugin and exposes it to a Client. So anyone in the MCP communication chain would receive the information about a new &lt;code&gt;tool&lt;/code&gt;. Which LLM may decide to call at some point.&lt;/p&gt; 
&lt;p&gt;To add a custom &lt;code&gt;tool&lt;/code&gt; you need:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;To have a class with attribute &lt;code&gt;McpPluginToolType&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To have a method in the class with attribute &lt;code&gt;McpPluginTool&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;[optional] Add &lt;code&gt;Description&lt;/code&gt; attribute to each method argument to let LLM to understand it.&lt;/li&gt; 
 &lt;li&gt;[optional] Use &lt;code&gt;string? optional = null&lt;/code&gt; properties with &lt;code&gt;?&lt;/code&gt; and default value to mark them as &lt;code&gt;optional&lt;/code&gt; for LLM.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Take a look that the line &lt;code&gt;MainThread.Instance.Run(() =&amp;gt;&lt;/code&gt; it allows to run the code in Main thread which is needed to interact with Unity API. If you don&#39;t need it and running the tool in background thread is fine for the tool, don&#39;t use Main thread for efficiency purpose.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[McpPluginToolType]
public class Tool_GameObject
{
    [McpPluginTool
    (
        &quot;MyCustomTask&quot;,
        Title = &quot;Create a new GameObject&quot;
    )]
    [Description(&quot;Explain here to LLM what is this, when it should be called.&quot;)]
    public string CustomTask
    (
        [Description(&quot;Explain to LLM what is this.&quot;)]
        string inputData
    )
    {
        // do anything in background thread

        return MainThread.Instance.Run(() =&amp;gt;
        {
            // do something in main thread if needed

            return $&quot;[Success] Operation completed.&quot;;
        });
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Add custom in-game &lt;code&gt;tool&lt;/code&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ Not yet supported. The work is in progress&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Running PlayMode tests&lt;/h1&gt; 
&lt;p&gt;To be able to run Play Mode tests via the TestRunner MCP tool, you should consider configuring Unity to &lt;strong&gt;not&lt;/strong&gt; perform a domain reload when entering Play Mode (&lt;code&gt;Edit -&amp;gt; Project Settings -&amp;gt; Editor -&amp;gt; Enter Play Mode Settings&lt;/code&gt; - set to &lt;code&gt;Reload Scene only&lt;/code&gt; or &lt;code&gt;Do not reload Domain or Scene&lt;/code&gt;). Otherwise, starting the Play Mode tests will interrupt the TestRunner MCP tool, leading to a cycle of tests restarting.&lt;/p&gt; 
&lt;h1&gt;Contribution&lt;/h1&gt; 
&lt;p&gt;Feel free to add a new &lt;code&gt;tool&lt;/code&gt; into the project.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the project.&lt;/li&gt; 
 &lt;li&gt;Clone the fork and open the resulting folder in Unity.&lt;/li&gt; 
 &lt;li&gt;Implement the new &lt;code&gt;tool&lt;/code&gt; in your forked repository.&lt;/li&gt; 
 &lt;li&gt;Create Pull Request into original &lt;a href=&quot;https://github.com/IvanMurzak/Unity-MCP&quot;&gt;Unity-MCP&lt;/a&gt; repository.&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>yaobiao131/downkyicore</title>
      <link>https://github.com/yaobiao131/downkyicore</link>
      <description>&lt;p&gt;哔哩下载姬(跨平台版)downkyi，哔哩哔哩网站视频下载工具，支持批量下载，支持8K、HDR、杜比视界，提供工具箱（音视频提取、去水印等）。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;哔哩下载姬(跨平台版)&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yaobiao131/downkyicore&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/network&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/yaobiao131/downkyicore&quot; alt=&quot;GitHub forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/yaobiao131/downkyicore&quot; alt=&quot;GitHub issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/yaobiao131/downkyicore&quot; alt=&quot;LICENSE&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;下载&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yaobiao131/downkyicore&quot; alt=&quot;GitHub release (latest by date)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/yaobiao131/downkyicore&quot; alt=&quot;GitHub Release Date&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/yaobiao131/downkyicore/total&quot; alt=&quot;GitHub all releases&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yaobiao131/downkyicore/main/CHANGELOG.md&quot;&gt;更新日志&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;和&lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia&quot;&gt;AvaloniaUI&lt;/a&gt;制作的跨平台版本(支持Windows、linux、macOS)。&lt;/li&gt; 
 &lt;li&gt;开发这个版本目的是由于本人日常使用macOS，当我想下载up视频是偶然间发现了&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;，发现很好用，就是不能支持macOS使用，就基于AvaloniaUI重新开发了一个跨平台版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件自带.NET6、ffmpeg、aria2运行环境、无需自行安装&lt;/li&gt; 
 &lt;li&gt;默认下载路径: 
  &lt;ul&gt; 
   &lt;li&gt;Windows: 软件运行目录下的Media文件夹&lt;/li&gt; 
   &lt;li&gt;macOS: ~/Library/Application Support/DownKyi/Media&lt;/li&gt; 
   &lt;li&gt;linux: ~/.config/DownKyi/Media&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免责申明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本软件只提供视频解析，不提供任何资源上传、存储到服务器的功能。&lt;/li&gt; 
 &lt;li&gt;本软件仅解析来自B站的内容，不会对解析到的音视频进行二次编码，部分视频会进行有限的格式转换、拼接等操作。&lt;/li&gt; 
 &lt;li&gt;本软件解析得到的所有内容均来自B站UP主上传、分享，其版权均归原作者所有。内容提供者、上传者(UP主)应对其提供、上传的内容承担全部责任。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;本软件提供的所有内容，仅可用作学习交流使用，未经原作者授权，禁止用于其他用途。请在下载24小时内删除。为尊重作者版权，请前往资源的原始发布网站观看，支持原创，谢谢。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;因使用本软件产生的版权问题，软件作者概不负责。&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>PSAppDeployToolkit/PSAppDeployToolkit</title>
      <link>https://github.com/PSAppDeployToolkit/PSAppDeployToolkit</link>
      <description>&lt;p&gt;Project Homepage &amp; Forums&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/acfafa06-75ef-4988-aea6-5711fd9b6fc4&quot; alt=&quot;PSAppDeployToolkit&quot; /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/dt/psappdeploytoolkit?logoSize=auto&amp;amp;label=PowerShell%20Gallery&quot; alt=&quot;PowerShell Gallery&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/psappdeploytoolkit/psappdeploytoolkit/total?label=GitHub&quot; alt=&quot;GitHub&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/check-runs/psappdeploytoolkit/psappdeploytoolkit/main?label=main&quot; alt=&quot;Main Branch Status&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/check-runs/psappdeploytoolkit/psappdeploytoolkit/develop?label=develop&quot; alt=&quot;Develop Branch Status&quot; /&gt; &lt;img src=&quot;https://img.shields.io/discord/618712310185197588?label=Discord%20Chat&quot; alt=&quot;#psappdeploytoolkit Discord Chat&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Enterprise App Deployment, Simplified&lt;/h2&gt; 
&lt;p&gt;PSAppDeployToolkit is a PowerShell-based, open-source framework for Windows software deployment that integrates seamlessly with existing deployment solutions (e.g. Microsoft Intune, SCCM, Tanium, BigFix etc.) to enhance the software deployment process. It achieves this by combining a battle-tested prescriptive workflow, an extensive library of functions for common deployment tasks, a customizable branded User Experience, and full-fidelity logging - to &lt;strong&gt;produce consistently high deployment success rates of over 98%&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;✨ Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Integration&lt;/strong&gt;: Works with all major deployment solutions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Experience&lt;/strong&gt;: Beautiful, customizable UI with both Fluent and Classic interfaces&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Deployment&lt;/strong&gt;: Handle complex deployment scenarios with ease&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Battle-tested in enterprise environments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Rich library of functions for common deployment tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📸 Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Light Mode&lt;/th&gt; 
   &lt;th&gt;Dark Mode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d3ea4c5a-486a-48d9-86cf-c3ddf391468a&quot; alt=&quot;LightMode&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/37cf1759-f211-4cf1-a686-7897a7306a27&quot; alt=&quot;DarkMode&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Custom Accent Light&lt;/th&gt; 
   &lt;th&gt;Custom Accent Dark&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c092999f-46a2-43f6-bd28-bc2bdcd03b76&quot; alt=&quot;CustomLightMode&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/26be16d2-f13e-491d-af86-72a169200f27&quot; alt=&quot;CustomDarkMode&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🖥️ Whats New in v4.1 - 2025-08-07&lt;/h2&gt; 
&lt;h3&gt;🎯 Major Improvements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Up until now, it was not possible to display any user interface when deploying an application as SYSTEM using Intune (or any endpoint management tool) without using ServiceUI. Well, now it IS possible:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;I REPEAT! &lt;strong&gt;You no longer need to use ServiceUI&lt;/strong&gt;, EVER AGAIN! 🥳🎉🎊🪅🪩👯‍♂️&lt;/li&gt; 
   &lt;li&gt;In fact, we strongly advise you stop using it as soon as possible. ServiceUI works by manipulating system security tokens in a way that could allow malicious actors to escalate privileges or bypass security controls.&lt;/li&gt; 
   &lt;li&gt;We&#39;ve taken a fresh approach which leverages the Windows security model and separates out user interactions onto a process running in the users&#39; session - we never perform any user interaction or messaging of any kind within the SYSTEM context. This means a more secure and reliable deployment experience.&lt;/li&gt; 
   &lt;li&gt;We have also removed the requirement for the &#39;Allow users to view and interact with the program installation&#39; checkbox in Configuration Manager deployments.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;There is now &lt;strong&gt;full feature parity&lt;/strong&gt; between the Fluent and Classic User Interfaces:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Deferral Deadline and Countdown Timer on Close Apps Dialog&lt;/li&gt; 
   &lt;li&gt;Ability to prevent the Restart Dialog from being dismissed once a certain point in the countdown is reached&lt;/li&gt; 
   &lt;li&gt;Ability to allow users to move dialogs&lt;/li&gt; 
   &lt;li&gt;Ability to set the initial dialog placement to multiple locations&lt;/li&gt; 
   &lt;li&gt;PowerShell ISE compatibility&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Furthermore, the Fluent UI has gained new features:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Due to the rearchitecture of how we handle user interaction with Dialogs, it is now possible to prompt the user for input using &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationPrompt&quot;&gt;Show-ADTInstallationPrompt&lt;/a&gt;&#39;s -InputBox parameter&lt;/li&gt; 
   &lt;li&gt;Support for formattable text (Bold, Italic &amp;amp; Accent) as well as URL hyperlinks in dialog messages&lt;/li&gt; 
   &lt;li&gt;You can now set the % complete of the progress bar in the Progress Dialog (for example, if you are running a custom script that you want to show incremental progress changes for)&lt;/li&gt; 
   &lt;li&gt;Ability to set different icons for Light / Dark mode&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The security rearchitecture required all of our process execution code to be rewritten. This has enabled us to provide a wealth of new capabilities to both &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcess&quot;&gt;Start-ADTProcess&lt;/a&gt; and &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcessAsUser&quot;&gt;Start-ADTProcessAsUser&lt;/a&gt; using the following new parameters:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;-UseUnelevatedToken parameter to force a process run without elevation, for deploying user-context apps with Windows 11 Administrator Protection enabled&lt;/li&gt; 
   &lt;li&gt;-WaitForChildProcesses parameter to wait for all child processes to end - useful for installers/uninstallers that hand off to another process and exit early&lt;/li&gt; 
   &lt;li&gt;-KillChildProcessesWithParent parameter to close all started child processes once main process has ended - useful when installers start the application post-install, which is typically undesired when running as system&lt;/li&gt; 
   &lt;li&gt;-Timeout parameter along with supporting -TimeoutAction and -NoTerminateOnTimeout parameters to control the outcome&lt;/li&gt; 
   &lt;li&gt;-ExpandEnvironmentVariables parameter to allow variable expansion such as %AppData% when running a process as a user&lt;/li&gt; 
   &lt;li&gt;-StreamEncoding parameter, useful for apps like Winget that write to the console using UTF8&lt;/li&gt; 
   &lt;li&gt;-PassThru output now has a new &#39;interleaved&#39; property that combines stdout/stderr in order&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;It&#39;s now possible to set PSADT configuration settings via Group Policy using the included ADMX templates, which will override any settings in the config.psd1 file. This allows you to change, update or enforce settings across an organization.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ New and Enhanced Functions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added functions for managing user / machine environment variables: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTEnvironmentVariable&quot;&gt;Get-ADTEnvironmentVariable&lt;/a&gt; / &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTEnvironmentVariable&quot;&gt;Set-ADTEnvironmentVariable&lt;/a&gt; / &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTEnvironmentVariable&quot;&gt;Remove-ADTEnvironmentVariable&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Added functions for managing INI file sections / values: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTIniSection&quot;&gt;Get-ADTIniSection&lt;/a&gt; / &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTIniSection&quot;&gt;Set-ADTIniSection&lt;/a&gt; / &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTIniSection&quot;&gt;Remove-ADTIniSection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTIniValue&quot;&gt;Get-ADTIniValue&lt;/a&gt; / &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTIniValue&quot;&gt;Set-ADTIniValue&lt;/a&gt; / &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTIniValue&quot;&gt;Remove-ADTIniValue&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Added &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTMsiProcessAsUser&quot;&gt;Start-ADTMsiProcessAsUser&lt;/a&gt; for installing / uninstalling user-context MSIs via the System account&lt;/li&gt; 
 &lt;li&gt;Added &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTEspActive&quot;&gt;Test-ADTEspActive&lt;/a&gt; to test for an active Enrollment Status Page (ESP)&lt;/li&gt; 
 &lt;li&gt;Added -DeferRunInterval switch to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationWelcome&quot;&gt;Show-ADTInstallationWelcome&lt;/a&gt; to limit retry times from Intune&lt;/li&gt; 
 &lt;li&gt;Added -Path / -LiteralPath support to registry functions&lt;/li&gt; 
 &lt;li&gt;Added volatile key creation support to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTRegistryKey&quot;&gt;Set-ADTRegistryKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Added MultiString add / remove support to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTRegistryKey&quot;&gt;Set-ADTRegistryKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Added -MaximumElapsedTime parameter to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTCommandWithRetries&quot;&gt;Invoke-ADTCommandWithRetries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Added -SuccessExitCodes and -RebootExitCodes parameters to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Uninstall-ADTApplication&quot;&gt;Uninstall-ADTApplication&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ Other Improvements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTHelpConsole&quot;&gt;Show-ADTHelpConsole&lt;/a&gt; has been given some love and a facelift with High-DPI awareness, resizability, PowerShell 7 compatibility, and extension module display&lt;/li&gt; 
 &lt;li&gt;Reworked Invoke-AppDeployToolkit.exe to be more compliant within WDAC environments&lt;/li&gt; 
 &lt;li&gt;Added -NoWait support to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTDialogBox&quot;&gt;Show-ADTDialogBox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Added process detection code to enable automatic silent deployments when processes aren&#39;t running&lt;/li&gt; 
 &lt;li&gt;Added /Debug switch to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/deployment-concepts/invoke-appdeploytoolkit&quot;&gt;Invoke-AppDeployToolkit.exe&lt;/a&gt; to show terminal output for debugging purposes&lt;/li&gt; 
 &lt;li&gt;Added /Core switch to &lt;a href=&quot;https://psappdeploytoolkit.com/docs/deployment-concepts/invoke-appdeploytoolkit&quot;&gt;Invoke-AppDeployToolkit.exe&lt;/a&gt; to allow PowerShell 7 usage&lt;/li&gt; 
 &lt;li&gt;Added support for running processes from network drives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ Changes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added -NoOobeDetection option to Open-ADTSession to bypass OOBE detection logic when DeployMode is set to Auto. Use this to show the UI during OOBE / Autopilot ESP phases.&lt;/li&gt; 
 &lt;li&gt;Added -NoSessionDetection option to Open-ADTSession to bypass session detection logic when DeployMode is set to Auto. Use this to show the UI when no user is logged on and the SYSTEM process is interactive.&lt;/li&gt; 
 &lt;li&gt;Added -NoProcessDetection option to Open-ADTSession to bypass process detection logic when DeployMode is set to Auto. Use this to show the UI even if there are no processes to close.&lt;/li&gt; 
 &lt;li&gt;Changed -DeployMode Interactive to always show interactively. This means the toolkit will always show the dialogs, bypassing the OOBE/Session/Process detections that occur in Auto mode.&lt;/li&gt; 
 &lt;li&gt;Changed default DeferExitCode from 60012 to 1602, since ConfigMgr and Intune recognize this natively as &#39;User cancelled the installation&#39;&lt;/li&gt; 
 &lt;li&gt;Changed toolkit to exit with 3010 if a suppressed reboot was encountered without having to use -AllowRebootPassThru. To mask 3010 return codes and exit with 0, you can now add -SuppressRebootPassThru&lt;/li&gt; 
 &lt;li&gt;Changed default msiexec.exe parameters in interactive mode from /qb-! to /qn&lt;/li&gt; 
 &lt;li&gt;Changed UI functions to no longer minimize windows by default, -MinimizeWindows can be added to enable this&lt;/li&gt; 
 &lt;li&gt;Changed the &#39;Processes to close&#39; in the Invoke-AppDeployToolkit template to the AppProcessesToClose ADTSession parameter, where they can be re-used over Install / Uninstall / Repair&lt;/li&gt; 
 &lt;li&gt;Changed installation failure to be silent as it was in v3.x; however, you can still uncomment a line to get the full detailed stack trace as used in v4.0.x, or a new minimal example using the Fluent UI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ Fixes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcessAsUser&quot;&gt;Start-ADTProcessAsUser&lt;/a&gt; function to work as expected&lt;/li&gt; 
 &lt;li&gt;Fixed &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Block-ADTAppExecution&quot;&gt;Block-ADTAppExecution&lt;/a&gt; to avoid triggering AV solutions&lt;/li&gt; 
 &lt;li&gt;Fixed dialogs to show correct deployment type Install / Uninstall / Repair&lt;/li&gt; 
 &lt;li&gt;Fixed SCCM pending reboot tests within &lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPendingReboot&quot;&gt;Get-ADTPendingReboot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fixed MSI repair to default to &#39;Reinstall&#39; to avoid forced unavoidable reboots when running msiexec /f against an app that is in-use&lt;/li&gt; 
 &lt;li&gt;Fixed OOBE detection code to factor in User ESP phase&lt;/li&gt; 
 &lt;li&gt;Fixed launching processes in the users&#39; session when using certain MDMs, e.g. VMware Workspace ONE.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10/11&lt;/li&gt; 
 &lt;li&gt;PowerShell 5.1 or later&lt;/li&gt; 
 &lt;li&gt;.NET Framework 4.7.2 or later&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Downloading&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/getting-started/download&quot;&gt;Getting Started Guidance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.powershellgallery.com/packages/PSAppDeployToolkit&quot;&gt;PowerShell Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/psappdeploytoolkit/psappdeploytoolkit/releases&quot;&gt;GitHub Releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;For detailed documentation, examples, and advanced usage, visit our &lt;a href=&quot;https://psappdeploytoolkit.com/docs/introduction&quot;&gt;official documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see our &lt;a href=&quot;https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/raw/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; for details&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href=&quot;https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/raw/main/COPYING.Lesser&quot;&gt;GNU Lesser General Public License&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Important Links&lt;/h2&gt; 
&lt;h3&gt;PSAppDeployToolkit&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/blog&quot;&gt;Latest News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/introduction&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://psappdeploytoolkit.com/docs/reference&quot;&gt;Function &amp;amp; Variable References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.powershellgallery.com/packages/PSAppDeployToolkit&quot;&gt;PowerShell Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/releases&quot;&gt;GitHub Releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discourse.psappdeploytoolkit.com/&quot;&gt;Discourse Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.com/channels/618712310185197588/627204361545842688&quot;&gt;Discord Chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reddit.com/r/psadt&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/issues&quot;&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/security&quot;&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PSAppDeployToolkit/PSAppDeployToolkit/raw/main/.github/CONTRIBUTING.md&quot;&gt;Contributer Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>tuyoogame/YooAsset</title>
      <link>https://github.com/tuyoogame/YooAsset</link>
      <description>&lt;p&gt;unity3d resources management system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YooAsset&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/tuyoogame/YooAsset/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/tuyoogame/YooAsset&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://openupm.com/packages/com.tuyoogame.yooasset/&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/com.tuyoogame.yooasset?label=openupm&amp;amp;registry_uri=https://package.openupm.com&quot; alt=&quot;openupm&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://deepwiki.com/tuyoogame/YooAsset&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;YooAsset&lt;/strong&gt;是一套用于Unity3D的资源管理系统，用于帮助研发团队快速部署和交付游戏。&lt;/p&gt; 
&lt;p&gt;它可以满足商业化游戏的各类需求，并且经历多款百万DAU游戏产品的验证。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;YooAsset可以满足以下任何需求：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;我想发布一个不包含任何游戏资源的安装包，然后玩家边玩边下载。&lt;/li&gt; 
 &lt;li&gt;我想发布一个可以保证前期体验的安装包，然后玩家自己选择下载关卡内容。&lt;/li&gt; 
 &lt;li&gt;我想发布一个保证300MB以下内容的安装包，然后进入游戏之前把剩余内容下载完毕。&lt;/li&gt; 
 &lt;li&gt;我想发布一个偏单机的游戏安装包，在网络畅通的时候，支持正常更新。在没有网络的时候，支持游玩老版本。&lt;/li&gt; 
 &lt;li&gt;我想发布一个MOD游戏安装包，玩家可以把自己制作的MOD内容上传到服务器，其它玩家可以下载游玩。&lt;/li&gt; 
 &lt;li&gt;我们在制作一个超大体量的项目，有上百GB的资源内容，每次构建都花费大量时间，是否可以分工程构建？&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;系统特点&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;构建管线无缝切换&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;支持传统的内置构建管线，也支持可编程构建管线（SBP）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持分布式构建&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;支持分工程构建，支持工程里分内容构建，很方便支持游戏模组（MOD）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持可寻址资源定位&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;默认支持完整路径的资源定位，也支持可寻址资源定位，不需要繁琐的过程即可高效的配置寻址路径。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全高效的分包方案&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基于资源标签的分包方案，自动对依赖资源包进行分类，避免人工维护成本。可以非常方便的实现零资源安装包，或者全量资源安装包。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;强大灵活的打包系统&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;可以自定义打包策略，自动分析依赖实现资源零冗余，基于资源对象的资源包依赖管理方案，天然的避免了资源包之间循环依赖的问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;基于引用计数方案&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基于引用计数的管理方案，可以帮助我们实现安全的资源卸载策略，更好的对内存管理，避免资源对象冗余。还有强大的分析器可帮助发现潜在的资源泄漏问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;多种模式自由切换&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;编辑器模拟模式，单机运行模式，联机运行模式，WebGL运行模式。在编辑器模拟模式下，可以不构建资源包来模拟真实环境，在不修改任何代码的情况下，可以自由切换到其它模式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;强大安全的加载系统&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;异步加载&lt;/strong&gt; 支持协程，Task，委托等多种异步加载方式。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;同步加载&lt;/strong&gt; 支持同步加载和异步加载混合使用。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;边玩边下载&lt;/strong&gt; 在加载资源对象的时候，如果资源对象依赖的资源包在本地不存在，会自动从服务器下载到本地，然后再加载资源对象。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;多线程下载&lt;/strong&gt; 支持断点续传，自动验证下载文件，自动修复损坏文件。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;多功能下载器&lt;/strong&gt; 可以按照资源分类标签创建下载器，也可以按照资源对象创建下载器。可以设置同时下载文件数的限制，设置下载失败重试次数，设置下载超时判定时间。多个下载器同时下载不用担心文件重复下载问题，下载器还提供了下载进度以及下载失败等常用接口。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;原生格式文件管理&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;无缝衔接资源打包系统，可以很方便的实现原生文件的版本管理和下载。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;灵活多变的版本管理&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;支持线上版本快速回退，支持区分审核版本，测试版本，线上版本，支持灰度更新及测试。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;多平台的完美适配&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;支持安卓，苹果，PC等常规平台，支持网页运行。2.x版本完美适配了微信小游戏平台和抖音小游戏平台。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;官方主页（教程文档）&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.yooasset.com/&quot;&gt;https://www.yooasset.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
