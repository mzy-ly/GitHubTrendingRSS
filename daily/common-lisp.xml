<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Common Lisp Daily Trending</title>
    <description>Daily Trending of Common Lisp in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:31:55 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>dimitri/pgloader</title>
      <link>https://github.com/dimitri/pgloader</link>
      <description>&lt;p&gt;Migrate to PostgreSQL in a single command!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PGLoader&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/dimitri/pgloader&quot;&gt;&lt;img src=&quot;https://travis-ci.org/dimitri/pgloader.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/dimitri/pgloader?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/dimitri/pgloader&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://pgloader.readthedocs.io/en/latest/&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/pgloader/badge/?version=latest&amp;amp;style=plastic&quot; alt=&quot;Read The Docs Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;pgloader is a data loading tool for PostgreSQL, using the &lt;code&gt;COPY&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;Its main advantage over just using &lt;code&gt;COPY&lt;/code&gt; or &lt;code&gt;\copy&lt;/code&gt;, and over using a &lt;em&gt;Foreign Data Wrapper&lt;/em&gt;, is its transaction behaviour, where &lt;em&gt;pgloader&lt;/em&gt; will keep a separate file of rejected data, but continue trying to &lt;code&gt;copy&lt;/code&gt; good data in your database.&lt;/p&gt; 
&lt;p&gt;The default PostgreSQL behaviour is transactional, which means that &lt;em&gt;any&lt;/em&gt; erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.&lt;/p&gt; 
&lt;p&gt;pgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps &lt;code&gt;0000-00-00&lt;/code&gt; and &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to PostgreSQL &lt;code&gt;NULL&lt;/code&gt; value (because our calendar never had a &lt;em&gt;year zero&lt;/em&gt;).&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Full documentation is available online, including manual pages of all the pgloader sub-commands. Check out &lt;a href=&quot;https://pgloader.readthedocs.io/en/latest/&quot;&gt;https://pgloader.readthedocs.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ pgloader --help
pgloader [ option ... ] SOURCE TARGET
  --help -h                       boolean  Show usage and exit.
  --version -V                    boolean  Displays pgloader version and exit.
  --quiet -q                      boolean  Be quiet
  --verbose -v                    boolean  Be verbose
  --debug -d                      boolean  Display debug level information.
  --client-min-messages           string   Filter logs seen at the console (default: &quot;warning&quot;)
  --log-min-messages              string   Filter logs seen in the logfile (default: &quot;notice&quot;)
  --summary -S                    string   Filename where to copy the summary
  --root-dir -D                   string   Output root directory. (default: #P&quot;/tmp/pgloader/&quot;)
  --upgrade-config -U             boolean  Output the command(s) corresponding to .conf file for v2.x
  --list-encodings -E             boolean  List pgloader known encodings and exit.
  --logfile -L                    string   Filename where to send the logs.
  --load-lisp-file -l             string   Read user code from files
  --dry-run                       boolean  Only check database connections, don&#39;t load anything.
  --on-error-stop                 boolean  Refrain from handling errors properly.
  --no-ssl-cert-verification      boolean  Instruct OpenSSL to bypass verifying certificates.
  --context -C                    string   Command Context Variables
  --with                          string   Load options
  --set                           string   PostgreSQL options
  --field                         string   Source file fields specification
  --cast                          string   Specific cast rules
  --type                          string   Force input source type
  --encoding                      string   Source expected encoding
  --before                        string   SQL script to run before loading the data
  --after                         string   SQL script to run after loading the data
  --self-upgrade                  string   Path to pgloader newer sources
  --regress                       boolean  Drive regression testing
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You can either give a command file to pgloader or run it all from the command line, see the &lt;a href=&quot;https://pgloader.readthedocs.io/en/latest/tutorial/tutorial.html#pgloader-quick-start&quot;&gt;pgloader quick start&lt;/a&gt; on &lt;a href=&quot;https://pgloader.readthedocs.io&quot;&gt;https://pgloader.readthedocs.io&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ./build/bin/pgloader --help
$ ./build/bin/pgloader &amp;lt;file.load&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, for a full migration from SQLite:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ createdb newdb
$ pgloader ./test/sqlite/sqlite.db postgresql:///newdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or for a full migration from MySQL, including schema definition (tables, indexes, foreign keys, comments) and parallel loading of the corrected data:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ createdb pagila
$ pgloader mysql://user@localhost/sakila postgresql:///pagila
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;LICENCE&lt;/h2&gt; 
&lt;p&gt;pgloader is available under &lt;a href=&quot;http://www.postgresql.org/about/licence/&quot;&gt;The PostgreSQL Licence&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;INSTALL&lt;/h2&gt; 
&lt;p&gt;Please see full documentation at &lt;a href=&quot;https://pgloader.readthedocs.io/en/latest/install.html&quot;&gt;https://pgloader.readthedocs.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re using debian, it&#39;s already available:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ apt-get install pgloader
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re using docker, you can use the latest version built by the CI at each commit to the master branch:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker pull ghcr.io/dimitri/pgloader:latest
$ docker run --rm -it ghcr.io/dimitri/pgloader:latest pgloader --version
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>lem-project/lem</title>
      <link>https://github.com/lem-project/lem</link>
      <description>&lt;p&gt;General-purpose editor/IDE with high expansibility in Common Lisp&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lem is a general-purpose editor/IDE extensible in Common Lisp.&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Shinmera/lem-icon/gh-pages/icon-blue.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/lem-project/lem/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/lem-project/lem/main/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/lem-project/lem/main/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/cxxxr&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Sponsor-fafbfc?logo=GitHub-Sponsors&quot; alt=&quot;GitHub Sponsors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Many languages are supported with Lem&#39;s &lt;strong&gt;built-in LSP support&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;After installing lem, you can start developing in Common Lisp and extend the editor while it runs.&lt;/p&gt; 
&lt;p&gt;Other features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Emacs and Vim modes&lt;/li&gt; 
 &lt;li&gt;ncurses and SDL2 interfaces&lt;/li&gt; 
 &lt;li&gt;a &lt;strong&gt;project explorer&lt;/strong&gt; tree view&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;project&lt;/strong&gt;-aware commands&lt;/li&gt; 
 &lt;li&gt;interactive &lt;strong&gt;grep&lt;/strong&gt; and &lt;strong&gt;git&lt;/strong&gt; interfaces&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;multiple cursors&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;terminal integration&lt;/strong&gt; with libvterm&lt;/li&gt; 
 &lt;li&gt;keyboard macros&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;tetris&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;and more…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;With Docker (ncurses version):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker run --rm -it ghcr.io/lem-project/lem:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Lem-ncurses&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lem-project.github.io/installation/ncurses/linux/&quot;&gt;GNU/Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lem-project.github.io/installation/ncurses/macos/&quot;&gt;MacOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lem-project.github.io/installation/ncurses/windows/&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Lem-sdl2&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lem-project.github.io//installation/sdl2/linux/&quot;&gt;GNU/Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lem-project.github.io//installation/sdl2/macos/&quot;&gt;MacOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lem-project.github.io//installation/sdl2/windows/&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lem-project/lem/main/screenshots/terminal.png&quot; alt=&quot;Terminal&quot; /&gt;　　&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lem-project/lem/main/screenshots/sdl2.png&quot; alt=&quot;Sdl2&quot; /&gt;　　&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://raw.githubusercontent.com/lem-project/lem/main/CONTRIBUTING.md&quot;&gt;[Contribute]&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://github.com/lem-project/lem/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=lem-project/lem&amp;amp;max=24&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/lem#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/lem#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/backers.svg?width=890&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/lem#sponsor&quot;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/lem/sponsor/0/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/0/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/1/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/1/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/2/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/2/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/3/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/3/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/4/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/4/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/5/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/5/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/6/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/6/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/7/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/7/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/8/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/8/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/lem/sponsor/9/website&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/lem/sponsor/9/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lem-project/lem/raw/master/LICENCE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
