<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Rust Weekly Trending</title>
    <description>Weekly Trending of Rust in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:46:50 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>aome510/spotify-player</title>
      <link>https://github.com/aome510/spotify-player</link>
      <description>&lt;p&gt;A Spotify player in the terminal with full feature parity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;spotify_player&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#spotify-connect&quot;&gt;Spotify Connect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#streaming&quot;&gt;Streaming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#media-control&quot;&gt;Media Control&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#image&quot;&gt;Image&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#notify&quot;&gt;Notify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#mouse-support&quot;&gt;Mouse support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#daemon&quot;&gt;Daemon&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#fuzzy-search&quot;&gt;Fuzzy search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#cli-commands&quot;&gt;CLI commands&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#commands&quot;&gt;Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#configurations&quot;&gt;Configurations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#caches&quot;&gt;Caches&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#acknowledgement&quot;&gt;Acknowledgement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; is a fast, easy to use, and configurable terminal music player.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimalist UI with an intuitive paging and popup system.&lt;/li&gt; 
 &lt;li&gt;Highly &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/docs/config.md&quot;&gt;configurable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Feature parity with the official Spotify application.&lt;/li&gt; 
 &lt;li&gt;Support remote control with &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#spotify-connect&quot;&gt;Spotify Connect&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#streaming&quot;&gt;streaming&lt;/a&gt; songs directly from the terminal.&lt;/li&gt; 
 &lt;li&gt;Support synced lyrics.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#media-control&quot;&gt;cross-platform media control&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#image&quot;&gt;image rendering&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Support &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#notify&quot;&gt;desktop notification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Support running the application as &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#daemon&quot;&gt;a daemon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Offer a wide range of &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#cli-commands&quot;&gt;CLI commands&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;A demo of &lt;code&gt;spotify_player&lt;/code&gt; &lt;code&gt;v0.5.0-pre-release&lt;/code&gt; on &lt;a href=&quot;https://www.youtube.com/watch/Jbfe9GLNWbA&quot;&gt;youtube&lt;/a&gt; or on &lt;a href=&quot;https://asciinema.org/a/446913&quot;&gt;asciicast&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;Checkout &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/examples/README.md&quot;&gt;examples/README.md&lt;/a&gt; for more examples.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;By default, the application&#39;s installed binary is &lt;code&gt;spotify_player&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;A Spotify Premium account is &lt;strong&gt;required&lt;/strong&gt;.&lt;/p&gt; 
&lt;h4&gt;Dependencies&lt;/h4&gt; 
&lt;h5&gt;Windows and MacOS&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;Rust and cargo&lt;/a&gt; as the build dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Linux&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;Rust and cargo&lt;/a&gt; as the build dependencies&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;install &lt;code&gt;openssl&lt;/code&gt;, &lt;code&gt;alsa-lib&lt;/code&gt; (&lt;code&gt;streaming&lt;/code&gt; feature), &lt;code&gt;libdbus&lt;/code&gt; (&lt;code&gt;media-control&lt;/code&gt; feature).&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;For example, on Debian based systems, run the below command to install application&#39;s dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt install libssl-dev libasound2-dev libdbus-1-dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;On RHEL/Fedora based systems, run the below command to install application&#39;s dependencies :&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo dnf install openssl-devel alsa-lib-devel dbus-devel
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or if you&#39;re using &lt;code&gt;yum&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo yum install openssl-devel alsa-lib-devel dbus-devel
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Binaries&lt;/h3&gt; 
&lt;p&gt;Application&#39;s prebuilt binaries can be found in the &lt;a href=&quot;https://github.com/aome510/spotify-player/releases&quot;&gt;Releases Page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: to run the application, Linux systems need to install additional dependencies as specified in the &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#linux&quot;&gt;Dependencies section&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;brew install spotify_player&lt;/code&gt; to install the application.&lt;/p&gt; 
&lt;h3&gt;Scoop&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;scoop install spotify-player&lt;/code&gt; to install the application.&lt;/p&gt; 
&lt;h3&gt;Cargo&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;cargo install spotify_player --locked&lt;/code&gt; to install the application from &lt;a href=&quot;https://crates.io/crates/spotify_player&quot;&gt;crates.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;pacman -S spotify-player&lt;/code&gt; to install the application.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Defaults to PulseAudio / Pipewire audio backend. For a different one, please consider modifying the &lt;a href=&quot;https://gitlab.archlinux.org/archlinux/packaging/packages/spotify-player&quot;&gt;official PKGBUILD&lt;/a&gt; and rebuilding it manually. See &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#audio-backend&quot;&gt;Audio Backends&lt;/a&gt; for a list of options.&lt;/p&gt; 
&lt;h3&gt;Void Linux&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;xbps-install -S spotify-player&lt;/code&gt; to install the application.&lt;/p&gt; 
&lt;h3&gt;FreeBSD&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;pkg install spotify-player&lt;/code&gt; to install the &lt;code&gt;spotify_player&lt;/code&gt; binary from FreeBSD ports.&lt;/p&gt; 
&lt;h3&gt;NetBSD&lt;/h3&gt; 
&lt;p&gt;Using the package manager, run &lt;code&gt;pkgin install spotify-player&lt;/code&gt; to install from the official repositories.&lt;/p&gt; 
&lt;p&gt;Building from source,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd /usr/pkgsrc/audio/spotify-player
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NixOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://search.nixos.org/packages?channel=unstable&amp;amp;show=spotify-player&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=spotify-player&quot;&gt;spotify-player&lt;/a&gt; is available as a Nix package and can be installed via &lt;code&gt;nix-shell -p spotify-player&lt;/code&gt; or as part of your system configuration.&lt;/p&gt; 
&lt;p&gt;If you want to build the source locally you can run &lt;code&gt;nix-shell&lt;/code&gt; in the root of a checkout of the source code. The provided &lt;code&gt;shell.nix&lt;/code&gt; file will install the build prerequisites.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#streaming&quot;&gt;streaming&lt;/a&gt; feature is disabled when using the docker image.&lt;/p&gt; 
&lt;p&gt;You can download the binary image of the latest build from the &lt;code&gt;master&lt;/code&gt; branch by running&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker pull aome510/spotify_player:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then run&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -it aome510/spotify_player:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to run the application.&lt;/p&gt; 
&lt;p&gt;You can also use your local config folder to configure the application or your local cache folder to store the application&#39;s cache data when running the docker image:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm \
-v $APP_CONFIG_FOLDER:/app/config/ \
-v $APP_CACHE_FOLDER:/app/cache/ \
-it aome510/spotify_player:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Spotify Connect&lt;/h3&gt; 
&lt;p&gt;To enable a full &lt;a href=&quot;https://www.spotify.com/us/connect/&quot;&gt;Spotify connect&lt;/a&gt; support, user will need to register a Spotify application and specify the application&#39;s &lt;code&gt;client_id&lt;/code&gt; in the general configuration file as described in the &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/docs/config.md#general&quot;&gt;configuration documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More details about registering a Spotify application can be found in the &lt;a href=&quot;https://developer.spotify.com/documentation/general/guides/authorization/app-settings/&quot;&gt;official Spotify documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When &lt;code&gt;spotify_player&lt;/code&gt; runs with your own &lt;code&gt;client_id&lt;/code&gt;, press &lt;strong&gt;D&lt;/strong&gt; (default shortcut for &lt;code&gt;SwitchDevice&lt;/code&gt; command) to get the list of available devices, then press &lt;strong&gt;enter&lt;/strong&gt; (default shortcut for &lt;code&gt;ChooseSelected&lt;/code&gt; command) to connect to the selected device.&lt;/p&gt; 
&lt;h3&gt;Streaming&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; supports streaming, which needs to be built/installed with &lt;code&gt;streaming&lt;/code&gt; feature (&lt;strong&gt;enabled&lt;/strong&gt; by default) &lt;strong&gt;and&lt;/strong&gt; with an audio backend (&lt;code&gt;rodio-backend&lt;/code&gt; by default). The streaming feature allows to &lt;code&gt;spotify_player&lt;/code&gt; to play music directly from terminal.&lt;/p&gt; 
&lt;p&gt;The application uses &lt;a href=&quot;https://github.com/librespot-org/librespot&quot;&gt;librespot&lt;/a&gt; library to create an integrated Spotify client while running. The integrated client will register a Spotify speaker device under the &lt;code&gt;spotify-player&lt;/code&gt; name, which is accessible on the &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#spotify-connect&quot;&gt;Spotify connect&lt;/a&gt; device list.&lt;/p&gt; 
&lt;h4&gt;Audio backend&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; uses &lt;a href=&quot;https://github.com/RustAudio/rodio&quot;&gt;rodio&lt;/a&gt; as the default &lt;a href=&quot;https://github.com/librespot-org/librespot/wiki/Audio-Backends&quot;&gt;audio backend&lt;/a&gt;. List of available audio backends:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;alsa-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pulseaudio-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rodio-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;portaudio-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jackaudio-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rodiojack-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sdl-backend&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gstreamer-backend&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;User can change the audio backend when building/installing the application by specifying the &lt;code&gt;--features&lt;/code&gt; option. For example, to install &lt;code&gt;spotify_player&lt;/code&gt; with &lt;code&gt;pulseaudio-backend&lt;/code&gt;, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --no-default-features --features pulseaudio-backend
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;needs to specify &lt;code&gt;--no-default-features&lt;/code&gt; here because &lt;code&gt;rodio-backend&lt;/code&gt; is one of the default features.&lt;/li&gt; 
 &lt;li&gt;user will need to install additional dependencies depending on the selected audio backend. More details can be found in the &lt;a href=&quot;https://github.com/librespot-org/librespot/wiki/Compiling#general-dependencies&quot;&gt;Librespot documentation&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;code&gt;streaming&lt;/code&gt; feature can be also disabled upon installing by running&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --no-default-features
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Media Control&lt;/h3&gt; 
&lt;p&gt;To enable media control support, &lt;code&gt;spotify_player&lt;/code&gt; needs to be built/installed with &lt;code&gt;media-control&lt;/code&gt; feature (&lt;strong&gt;enabled&lt;/strong&gt; by default) and set the &lt;code&gt;enable_media_control&lt;/code&gt; config option to &lt;code&gt;true&lt;/code&gt; in the &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/docs/config.md#media-control&quot;&gt;general configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Media control support is implemented using &lt;a href=&quot;https://wiki.archlinux.org/title/MPRIS&quot;&gt;MPRIS DBus&lt;/a&gt; on Linux and OS window event listener on Windows and MacOS.&lt;/p&gt; 
&lt;h3&gt;Image&lt;/h3&gt; 
&lt;p&gt;To enable image rendering support, &lt;code&gt;spotify_player&lt;/code&gt; needs to be built/installed with &lt;code&gt;image&lt;/code&gt; feature (&lt;strong&gt;disabled&lt;/strong&gt; by default). To install the application with &lt;code&gt;image&lt;/code&gt; feature included, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --features image
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; supports rendering image in a full resolution if the application is run on either &lt;a href=&quot;https://sw.kovidgoyal.net/kitty/graphics-protocol/&quot;&gt;Kitty&lt;/a&gt; or &lt;a href=&quot;https://iterm2.com/documentation-images.html&quot;&gt;iTerm2&lt;/a&gt;. Otherwise, the image will be displayed as &lt;a href=&quot;https://en.wikipedia.org/wiki/Block_Elements&quot;&gt;block characters&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; also supports rendering images with &lt;code&gt;sixel&lt;/code&gt; behind &lt;code&gt;sixel&lt;/code&gt; feature flag, which also enables &lt;code&gt;image&lt;/code&gt; feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --features sixel
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Not all terminals supported by &lt;a href=&quot;https://github.com/saitoha/libsixel&quot;&gt;libsixel&lt;/a&gt; are supported by &lt;code&gt;spotify_player&lt;/code&gt; as it relies on a &lt;a href=&quot;https://github.com/atanunq/viuer&quot;&gt;third-party library&lt;/a&gt; for image rendering. A possible list of supported terminals can be found in &lt;a href=&quot;https://github.com/atanunq/viuer/raw/dc81f44a97727e04be0b000712e9233c92116ff8/src/printer/sixel.rs#L83-L95&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Images rendered by &lt;code&gt;sixel&lt;/code&gt; can have a &lt;em&gt;weird&lt;/em&gt; scale. It&#39;s recommended to tweak the &lt;code&gt;cover_img_scale&lt;/code&gt; config option to get the best result as the scaling works differently with different terminals and fonts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Examples of image rendering:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;iTerm2:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/40011582/172966798-0aadc431-b0c3-4433-adf3-7526684fc2a0.png&quot; alt=&quot;iTerm2&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Kitty:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/40011582/172967028-8cfb2daa-1642-499a-a5bf-8ed77f2b3fac.png&quot; alt=&quot;kitty&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sixel (&lt;code&gt;foot&lt;/code&gt; terminal, &lt;code&gt;cover_img_scale=1.8&lt;/code&gt;):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/40011582/219880331-58ac1c30-bbb0-4c99-a6cc-e5b7c9c81455.png&quot; alt=&quot;sixel&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Others:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/40011582/172967325-d2098037-e19e-440a-a38a-5b076253ecb1.png&quot; alt=&quot;others&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;Pixelate&lt;/h4&gt; 
&lt;p&gt;If your terminal supports high-res images, but you like the pixelated look you can enable the &lt;code&gt;pixelate&lt;/code&gt; feature, which also enables the &lt;code&gt;image&lt;/code&gt; feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --features pixelate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The amount of pixels can be tweaked via the &lt;code&gt;cover_img_pixels&lt;/code&gt; config option.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;cover_img_pixels&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;8&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;16&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;32&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;64&lt;/code&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;example&lt;/td&gt; 
   &lt;td&gt;&lt;img width=&quot;100&quot; alt=&quot;8x8&quot; src=&quot;https://github.com/user-attachments/assets/4137aaea-ce28-4019-8cd5-2d14327e72e4&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img width=&quot;100&quot; alt=&quot;16x16&quot; src=&quot;https://github.com/user-attachments/assets/0ca94748-093a-468c-8fb3-1f5639666eb6&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img width=&quot;100&quot; alt=&quot;32x32&quot; src=&quot;https://github.com/user-attachments/assets/f5d0f2da-0439-47e4-91c9-3a2aa73ac90c&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img width=&quot;100&quot; alt=&quot;64x64&quot; src=&quot;https://github.com/user-attachments/assets/d06ef731-38fa-424d-9672-313f56c193d0&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To temporarily disable the &lt;code&gt;pixelate&lt;/code&gt; feature just set &lt;code&gt;cover_img_pixels&lt;/code&gt; to a high value like &lt;code&gt;512&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Notify&lt;/h3&gt; 
&lt;p&gt;To enable desktop notification support, &lt;code&gt;spotify_player&lt;/code&gt; needs to be built/installed with &lt;code&gt;notify&lt;/code&gt; feature (&lt;strong&gt;disabled&lt;/strong&gt; by default). To install the application with &lt;code&gt;notify&lt;/code&gt; feature included, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --features notify
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the notification support in &lt;code&gt;MacOS&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt; are quite restricted compared to &lt;code&gt;Linux&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Mouse support&lt;/h3&gt; 
&lt;p&gt;Currently, the only supported use case for mouse is to seek to a position of the current playback by left-clicking to such position in the playback&#39;s progress bar.&lt;/p&gt; 
&lt;h3&gt;Daemon&lt;/h3&gt; 
&lt;p&gt;To enable a &lt;a href=&quot;https://en.wikipedia.org/wiki/Daemon_(computing)&quot;&gt;daemon&lt;/a&gt; support, &lt;code&gt;spotify_player&lt;/code&gt; needs to be built/installed with &lt;code&gt;daemon&lt;/code&gt; feature (&lt;strong&gt;disabled&lt;/strong&gt; by default). To install the application with &lt;code&gt;daemon&lt;/code&gt; feature included, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --features daemon
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run the application as a daemon by specifying the &lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--daemon&lt;/code&gt; option: &lt;code&gt;spotify_player -d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;daemon&lt;/code&gt; feature is not supported on Windows&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;daemon&lt;/code&gt; feature requires the &lt;code&gt;streaming&lt;/code&gt; feature to be enabled and the application to be built with &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/#audio-backend&quot;&gt;an audio backend&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;because of the OS&#39;s restrictions, &lt;code&gt;daemon&lt;/code&gt; feature doesn&#39;t work with the &lt;code&gt;media-control&lt;/code&gt; feature on MacOS, which is &lt;strong&gt;enabled by default&lt;/strong&gt;. In other words, if you want to use the &lt;code&gt;daemon&lt;/code&gt; feature on MacOS, you must install the application with &lt;code&gt;media-control&lt;/code&gt; feature &lt;strong&gt;disabled&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install spotify_player --no-default-features --features daemon,rodio-backend
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fuzzy search&lt;/h3&gt; 
&lt;p&gt;To enable &lt;a href=&quot;https://en.wikipedia.org/wiki/Approximate_string_matching&quot;&gt;fuzzy search&lt;/a&gt; support, &lt;code&gt;spotify_player&lt;/code&gt; needs to be built/installed with &lt;code&gt;fzf&lt;/code&gt; feature (&lt;strong&gt;disabled&lt;/strong&gt; by default).&lt;/p&gt; 
&lt;h3&gt;CLI Commands&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; offers several CLI commands to interact with Spotify:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;get&lt;/code&gt;: Get Spotify data (playlist/album/artist data, user&#39;s data, etc)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playback&lt;/code&gt;: Interact with the playback (start a playback, play-pause, next, etc)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;search&lt;/code&gt;: Search spotify&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;connect&lt;/code&gt;: Connect to a Spotify device&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;like&lt;/code&gt;: Like currently playing track&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;authenticate&lt;/code&gt;: Authenticate the application&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist&lt;/code&gt;: Playlist editing (new, delete, import, fork, etc)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details, run &lt;code&gt;spotify_player -h&lt;/code&gt; or &lt;code&gt;spotify_player {command} -h&lt;/code&gt;, in which &lt;code&gt;{command}&lt;/code&gt; is a CLI command.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When using the CLI for the first time, you&#39;ll need to run &lt;code&gt;spotify_player authenticate&lt;/code&gt; to authenticate the application beforehand.&lt;/li&gt; 
 &lt;li&gt;Under the hood, CLI command is handled by sending requests to a &lt;code&gt;spotify_player&lt;/code&gt; client socket running on port &lt;code&gt;client_port&lt;/code&gt;, &lt;a href=&quot;https://github.com/aome510/spotify-player/raw/master/docs/config.md#general&quot;&gt;a general application configuration&lt;/a&gt; with a default value of &lt;code&gt;8080&lt;/code&gt;. If there is no running application&#39;s instance, a new client will be created upon handling the CLI commands, which increases the latency of the command.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Scripting&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;spotify_player&lt;/code&gt; command-line interface makes scripting easy. With the &lt;code&gt;search&lt;/code&gt; subcommand, you can search Spotify and retrieve data in JSON format, enabling queries with tools like &lt;a href=&quot;https://jqlang.github.io/jq/&quot;&gt;jq&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Here’s an example of starting playback for the first track from a search query:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;read -p &quot;Search spotify: &quot; query
spotify_player playback start track --id $(spotify_player search &quot;$query&quot; | jq &#39;.tracks.[0].id&#39; | xargs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;To go to the shortcut help page, press &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;C-h&lt;/code&gt; (default shortcuts for &lt;code&gt;OpenCommandHelp&lt;/code&gt; command).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;you can search in the shortcut help page (and some other pages) using &lt;code&gt;Search&lt;/code&gt; command&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RefreshPlayback&lt;/code&gt; can be used to manually update the playback status.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RestartIntegratedClient&lt;/code&gt; is useful when user wants to switch to another audio device (headphone, earphone, etc) without restarting the application, as the integrated client will be re-initialized with the new device.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;List of supported commands:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default shortcuts&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;NextTrack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;next track&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PreviousTrack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;previous track&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;p&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ResumePause&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;resume/pause based on the current playback&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;space&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PlayRandom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;play a random track in the current context&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Repeat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;cycle the repeat mode&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C-r&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ToggleFakeTrackRepeatMode&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;toggle fake track repeat mode&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;M-r&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Shuffle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;toggle the shuffle mode&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C-s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VolumeChange&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;change playback volume by an offset (default shortcuts use 5%)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Mute&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;toggle playback volume between 0% and previous level&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;_&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SeekForward&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;seek forward by 5s&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SeekBackward&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;seek backward by 5s&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Quit&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;quit the application&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C-c&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ClosePopup&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;close a popup&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;esc&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SelectNextOrScrollDown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;select the next item in a list/table or scroll down (supports vim-style count: 5j)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;C-n&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SelectPreviousOrScrollUp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;select the previous item in a list/table or scroll up (supports vim-style count: 10k)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;C-p&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PageSelectNextOrScrollDown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;select the next page item in a list/table or scroll a page down (supports vim-style count: 3C-f)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;page_down&lt;/code&gt;, &lt;code&gt;C-f&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PageSelectPreviousOrScrollUp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;select the previous page item in a list/table or scroll a page up (supports vim-style count: 2C-b)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;page_up&lt;/code&gt;, &lt;code&gt;C-b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SelectFirstOrScrollToTop&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;select the first item in a list/table or scroll to the top&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g g&lt;/code&gt;, &lt;code&gt;home&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SelectLastOrScrollToBottom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;select the last item in a list/table or scroll to the bottom&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;G&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ChooseSelected&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;choose the selected item&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;enter&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;RefreshPlayback&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;manually refresh the current playback&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;r&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;RestartIntegratedClient&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;restart the integrated client (&lt;code&gt;streaming&lt;/code&gt; feature only)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;R&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ShowActionsOnSelectedItem&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup showing actions on a selected item&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g a&lt;/code&gt;, &lt;code&gt;C-space&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ShowActionsOnCurrentTrack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup showing actions on the current track&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;a&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AddSelectedItemToQueue&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;add the selected item to queue&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;C-z&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FocusNextWindow&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;focus the next focusable window (if any)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tab&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FocusPreviousWindow&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;focus the previous focusable window (if any)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;backtab&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SwitchTheme&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup for switching theme&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SwitchDevice&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup for switching device&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;D&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Search&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup for searching in the current page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BrowseUserPlaylists&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup for browsing user&#39;s playlists&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;u p&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BrowseUserFollowedArtists&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup for browsing user&#39;s followed artists&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;u a&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BrowseUserSavedAlbums&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a popup for browsing user&#39;s saved albums&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;u A&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CurrentlyPlayingContextPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the currently playing context page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g space&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TopTrackPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the user top track page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g t&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;RecentlyPlayedTrackPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the user recently played track page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g r&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LikedTrackPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the user liked track page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g y&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LyricsPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the lyrics page of the current track&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g L&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LibraryPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the user library page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g l&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SearchPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the search page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BrowsePage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the browse page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the queue page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;z&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenCommandHelp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the command help page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;C-h&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PreviousPage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;go to the previous page&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;backspace&lt;/code&gt;, &lt;code&gt;C-q&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenSpotifyLinkFromClipboard&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;open a Spotify link from clipboard&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortTrackByTitle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the track table (if any) by track&#39;s title&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s t&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortTrackByArtists&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the track table (if any) by track&#39;s artists&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s a&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortTrackByAlbum&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the track table (if any) by track&#39;s album&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s A&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortTrackByAddedDate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the track table (if any) by track&#39;s added date&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s D&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortTrackByDuration&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the track table (if any) by track&#39;s duration&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s d&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortLibraryAlphabetically&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the library alphabetically&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s l a&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SortLibraryByRecent&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;sort the library (playlists and albums) by recently added items&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s l r&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ReverseOrder&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;reverse the order of the track table (if any)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;s r&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MovePlaylistItemUp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;move playlist item up one position&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C-k&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MovePlaylistItemDown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;move playlist item down one position&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C-j&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CreatePlaylist&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;create a new playlist&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;JumpToCurrentTrackInContext&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;jump to the current track in the context&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;g c&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;JumpToHighlightTrackInContext&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;jump to the currently highlighted search result in the context&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;C-g&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To add new shortcuts or modify the default shortcuts, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/docs/config.md#keymaps&quot;&gt;keymaps section&lt;/a&gt; in the configuration documentation.&lt;/p&gt; 
&lt;h3&gt;Actions&lt;/h3&gt; 
&lt;p&gt;A general list of actions is available; however, not all Spotify items (track, album, artist, or playlist) implement each action. To get the list of available actions on an item, call the &lt;code&gt;ShowActionsOnCurrentTrack&lt;/code&gt; command or the &lt;code&gt;ShowActionsOnSelectedItem&lt;/code&gt; command, then press enter (default binding for the &lt;code&gt;ChooseSelected&lt;/code&gt; command) to initiate the selected action. Some actions may not appear in the popup but can be bound to a shortcut.&lt;/p&gt; 
&lt;p&gt;List of available actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GoToArtist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GoToAlbum&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GoToRadio&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AddToLibrary&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AddToPlaylist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AddToQueue&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AddToLiked&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DeleteFromLiked&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DeleteFromLibrary&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DeleteFromPlaylist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ShowActionsOnAlbum&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ShowActionsOnArtist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ShowActionsOnShow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ToggleLiked&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CopyLink&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Follow&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Unfollow&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These actions can also be bound to a shortcut. To add new shortcuts, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/docs/config.md#actions&quot;&gt;actions section&lt;/a&gt; in the configuration documentation.&lt;/p&gt; 
&lt;h3&gt;Search Page&lt;/h3&gt; 
&lt;p&gt;When first entering the search page, the application focuses on the search input. User can then input text, delete one character backward using &lt;code&gt;backspace&lt;/code&gt;, or search the text using &lt;code&gt;enter&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To move the focus from the search input to the other windows such as track results, album results, etc, use &lt;code&gt;FocusNextWindow&lt;/code&gt; or &lt;code&gt;FocusPreviousWindow&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Configurations&lt;/h2&gt; 
&lt;p&gt;By default, &lt;code&gt;spotify_player&lt;/code&gt; will look into &lt;code&gt;$HOME/.config/spotify-player&lt;/code&gt; for application&#39;s configuration files. This can be changed by either specifying &lt;code&gt;-c &amp;lt;FOLDER_PATH&amp;gt;&lt;/code&gt; or &lt;code&gt;--config-folder &amp;lt;FOLDER_PATH&amp;gt;&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;If an application configuration file is not found, one will be created with default values.&lt;/p&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/docs/config.md&quot;&gt;the configuration documentation&lt;/a&gt; for more details on the configuration options.&lt;/p&gt; 
&lt;h2&gt;Caches&lt;/h2&gt; 
&lt;p&gt;By default, &lt;code&gt;spotify_player&lt;/code&gt; will look into &lt;code&gt;$HOME/.cache/spotify-player&lt;/code&gt; for application&#39;s cache files, which include log files, Spotify&#39;s authorization credentials, audio cache files, etc. This can be changed by either specifying &lt;code&gt;-C &amp;lt;FOLDER_PATH&amp;gt;&lt;/code&gt; or &lt;code&gt;--cache-folder &amp;lt;FOLDER_PATH&amp;gt;&lt;/code&gt; option.&lt;/p&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;p&gt;The application stores logs inside the &lt;code&gt;$APP_CACHE_FOLDER/spotify-player-*.log&lt;/code&gt; file. For debugging or submitting an issue, user can also refer to the backtrace file in &lt;code&gt;$APP_CACHE_FOLDER/spotify-player-*.backtrace&lt;/code&gt;, which includes the application&#39;s backtrace in case of panics/unexpected errors.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; uses &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable to define the application&#39;s &lt;a href=&quot;https://docs.rs/log/0.4.14/log/enum.Level.html&quot;&gt;logging level&lt;/a&gt;. &lt;code&gt;RUST_LOG&lt;/code&gt; is default to be &lt;code&gt;spotify_player=INFO&lt;/code&gt;, which only shows the application&#39;s logs.&lt;/p&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;spotify_player&lt;/code&gt; is written in &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; and is built on top of awesome libraries such as &lt;a href=&quot;https://github.com/ratatui/ratatui&quot;&gt;ratatui&lt;/a&gt;, &lt;a href=&quot;https://github.com/ramsayleung/rspotify&quot;&gt;rspotify&lt;/a&gt;, &lt;a href=&quot;https://github.com/librespot-org/librespot&quot;&gt;librespot&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/aome510/spotify-player/master/spotify_player/Cargo.toml&quot;&gt;many more&lt;/a&gt;. It&#39;s highly inspired by &lt;a href=&quot;https://github.com/Rigellute/spotify-tui&quot;&gt;spotify-tui&lt;/a&gt; and &lt;a href=&quot;https://github.com/hrkfdn/ncspot&quot;&gt;ncspot&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lencx/ChatGPT</title>
      <link>https://github.com/lencx/ChatGPT</link>
      <description>&lt;p&gt;🔮 ChatGPT Desktop Application (Mac, Windows and Linux)&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;180&quot; src=&quot;https://raw.githubusercontent.com/lencx/ChatGPT/v2-dev/public/ChatGPT.png&quot; alt=&quot;ChatGPT&quot; /&gt; &lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;ChatGPT Desktop Application (Available on Mac, Windows, and Linux)&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/lencx/ChatGPT/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/lencx/ChatGPT/total.svg?style=flat-square&quot; alt=&quot;ChatGPT downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/aPhCRf4zZr&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-discord-blue?style=flat&amp;amp;logo=discord&quot; alt=&quot;chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/lencx_&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/follow-lencx__-blue?style=flat&amp;amp;logo=Twitter&quot; alt=&quot;twitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/@lencx&quot;&gt;&lt;img src=&quot;https://img.shields.io/youtube/channel/subscribers/UC__gTZL-OZKDPic7s_6Ntgg?style=social&quot; alt=&quot;youtube&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/lencx&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 40px !important;width: 145px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;strong&gt;If you want to experience a more powerful AI wrapper application, you can try the Noi (&lt;a href=&quot;https://github.com/lencx/Noi&quot;&gt;https://github.com/lencx/Noi&lt;/a&gt;), which is a successor to the ChatGPT desktop application concept.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Thank you very much for your interest in this project. OpenAI has now released the macOS version of the application, and a Windows version will be available later (&lt;a href=&quot;https://openai.com/index/gpt-4o-and-more-tools-to-chatgpt-free/&quot;&gt;Introducing GPT-4o and more tools to ChatGPT free users&lt;/a&gt;). If you prefer the official application, you can stay updated with the latest information from OpenAI.&lt;/p&gt; 
&lt;p&gt;If you want to learn about or download the previous version (v1.1.0), please click &lt;a href=&quot;https://github.com/lencx/ChatGPT/tree/release-v1.1.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I am currently looking for some differentiating features to develop version 2.0. If you are interested in this, please stay tuned.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lencx/ChatGPT/v2-dev/docs/static/chatgpt-v2.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rust-lang/rust-clippy</title>
      <link>https://github.com/rust-lang/rust-clippy</link>
      <description>&lt;p&gt;A bunch of lints to catch common mistakes and improve your Rust code. Book: https://doc.rust-lang.org/clippy/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clippy&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust-clippy/master/#license&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/l/clippy.svg?sanitize=true&quot; alt=&quot;License: MIT OR Apache-2.0&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A collection of lints to catch common mistakes and improve your &lt;a href=&quot;https://github.com/rust-lang/rust&quot;&gt;Rust&lt;/a&gt; code.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html&quot;&gt;There are over 750 lints included in this crate!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Lints are divided into categories, each with a default &lt;a href=&quot;https://doc.rust-lang.org/rustc/lints/levels.html&quot;&gt;lint level&lt;/a&gt;. You can choose how much Clippy is supposed to &lt;del&gt;annoy&lt;/del&gt; help you by changing the lint level by category.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default level&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::all&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;all lints that are on by default (correctness, suspicious, style, complexity, perf)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;warn/deny&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::correctness&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;code that is outright wrong or useless&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;deny&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::suspicious&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;code that is most likely wrong or useless&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;warn&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::style&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;code that should be written in a more idiomatic way&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;warn&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::complexity&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;code that does something simple but in a complex way&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;warn&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::perf&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;code that can be written to run faster&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;warn&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::pedantic&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;lints which are rather strict or have occasional false positives&lt;/td&gt; 
   &lt;td&gt;allow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::restriction&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;lints which prevent the use of language and library features[^restrict]&lt;/td&gt; 
   &lt;td&gt;allow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::nursery&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;new lints that are still under development&lt;/td&gt; 
   &lt;td&gt;allow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;clippy::cargo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;lints for the cargo manifest&lt;/td&gt; 
   &lt;td&gt;allow&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;More to come, please &lt;a href=&quot;https://github.com/rust-lang/rust-clippy/issues&quot;&gt;file an issue&lt;/a&gt; if you have ideas!&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;restriction&lt;/code&gt; category should, &lt;em&gt;emphatically&lt;/em&gt;, not be enabled as a whole. The contained lints may lint against perfectly reasonable code, may not have an alternative suggestion, and may contradict any other lints (including other categories). Lints should be considered on a case-by-case basis before enabling.&lt;/p&gt; 
&lt;p&gt;[^restrict]: Some use cases for &lt;code&gt;restriction&lt;/code&gt; lints include: - Strict coding styles (e.g. &lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else&quot;&gt;&lt;code&gt;clippy::else_if_without_else&lt;/code&gt;&lt;/a&gt;). - Additional restrictions on CI (e.g. &lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html#todo&quot;&gt;&lt;code&gt;clippy::todo&lt;/code&gt;&lt;/a&gt;). - Preventing panicking in certain functions (e.g. &lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used&quot;&gt;&lt;code&gt;clippy::unwrap_used&lt;/code&gt;&lt;/a&gt;). - Running a lint only on a subset of code (e.g. &lt;code&gt;#[forbid(clippy::float_arithmetic)]&lt;/code&gt; on a module).&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Table of contents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust-clippy/master/#usage&quot;&gt;Usage instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust-clippy/master/#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust-clippy/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust-clippy/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Below are instructions on how to use Clippy as a cargo subcommand, in projects that do not use cargo, or in Travis CI.&lt;/p&gt; 
&lt;h3&gt;As a cargo subcommand (&lt;code&gt;cargo clippy&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;One way to use Clippy is by installing Clippy through rustup as a cargo subcommand.&lt;/p&gt; 
&lt;h4&gt;Step 1: Install Rustup&lt;/h4&gt; 
&lt;p&gt;You can install &lt;a href=&quot;https://rustup.rs/&quot;&gt;Rustup&lt;/a&gt; on supported platforms. This will help us install Clippy and its dependencies.&lt;/p&gt; 
&lt;p&gt;If you already have Rustup installed, update to ensure you have the latest Rustup and compiler:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;rustup update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Step 2: Install Clippy&lt;/h4&gt; 
&lt;p&gt;Once you have rustup and the latest stable release (at least Rust 1.29) installed, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;rustup component add clippy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If it says that it can&#39;t find the &lt;code&gt;clippy&lt;/code&gt; component, please run &lt;code&gt;rustup self update&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Step 3: Run Clippy&lt;/h4&gt; 
&lt;p&gt;Now you can run Clippy by invoking the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Automatically applying Clippy suggestions&lt;/h4&gt; 
&lt;p&gt;Clippy can automatically apply some lint suggestions, just like the compiler. Note that &lt;code&gt;--fix&lt;/code&gt; implies &lt;code&gt;--all-targets&lt;/code&gt;, so it can fix as much code as it can.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy --fix
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Workspaces&lt;/h4&gt; 
&lt;p&gt;All the usual workspace options should work with Clippy. For example the following command will run Clippy on the &lt;code&gt;example&lt;/code&gt; crate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy -p example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As with &lt;code&gt;cargo check&lt;/code&gt;, this includes dependencies that are members of the workspace, like path dependencies. If you want to run Clippy &lt;strong&gt;only&lt;/strong&gt; on the given crate, use the &lt;code&gt;--no-deps&lt;/code&gt; option like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy -p example -- --no-deps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using &lt;code&gt;clippy-driver&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Clippy can also be used in projects that do not use cargo. To do so, run &lt;code&gt;clippy-driver&lt;/code&gt; with the same arguments you use for &lt;code&gt;rustc&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;clippy-driver --edition 2018 -Cpanic=abort foo.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that &lt;code&gt;clippy-driver&lt;/code&gt; is designed for running Clippy only and should not be used as a general replacement for &lt;code&gt;rustc&lt;/code&gt;. &lt;code&gt;clippy-driver&lt;/code&gt; may produce artifacts that are not optimized as expected, for example.&lt;/p&gt; 
&lt;h3&gt;Travis CI&lt;/h3&gt; 
&lt;p&gt;You can add Clippy to Travis CI in the same way you use it locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;language: rust
rust:
  - stable
  - beta
before_script:
  - rustup component add clippy
script:
  - cargo clippy
  # if you want the build job to fail when encountering warnings, use
  - cargo clippy -- -D warnings
  # in order to also check tests and non-default crate features, use
  - cargo clippy --all-targets --all-features -- -D warnings
  - cargo test
  # etc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that adding &lt;code&gt;-D warnings&lt;/code&gt; will cause your build to fail if &lt;strong&gt;any&lt;/strong&gt; warnings are found in your code. That includes warnings found by rustc (e.g. &lt;code&gt;dead_code&lt;/code&gt;, etc.). If you want to avoid this and only cause an error for Clippy warnings, use &lt;code&gt;#![deny(clippy::all)]&lt;/code&gt; in your code or &lt;code&gt;-D clippy::all&lt;/code&gt; on the command line. (You can swap &lt;code&gt;clippy::all&lt;/code&gt; with the specific lint category you are targeting.)&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;h3&gt;Allowing/denying lints&lt;/h3&gt; 
&lt;p&gt;You can add options to your code to &lt;code&gt;allow&lt;/code&gt;/&lt;code&gt;warn&lt;/code&gt;/&lt;code&gt;deny&lt;/code&gt; Clippy lints:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;the whole set of &lt;code&gt;Warn&lt;/code&gt; lints using the &lt;code&gt;clippy&lt;/code&gt; lint group (&lt;code&gt;#![deny(clippy::all)]&lt;/code&gt;). Note that &lt;code&gt;rustc&lt;/code&gt; has additional &lt;a href=&quot;https://doc.rust-lang.org/rustc/lints/groups.html&quot;&gt;lint groups&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;all lints using both the &lt;code&gt;clippy&lt;/code&gt; and &lt;code&gt;clippy::pedantic&lt;/code&gt; lint groups (&lt;code&gt;#![deny(clippy::all)]&lt;/code&gt;, &lt;code&gt;#![deny(clippy::pedantic)]&lt;/code&gt;). Note that &lt;code&gt;clippy::pedantic&lt;/code&gt; contains some very aggressive lints prone to false positives.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;only some lints (&lt;code&gt;#![deny(clippy::single_match, clippy::box_vec)]&lt;/code&gt;, etc.)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;allow&lt;/code&gt;/&lt;code&gt;warn&lt;/code&gt;/&lt;code&gt;deny&lt;/code&gt; can be limited to a single function or module using &lt;code&gt;#[allow(...)]&lt;/code&gt;, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: &lt;code&gt;allow&lt;/code&gt; means to suppress the lint for your code. With &lt;code&gt;warn&lt;/code&gt; the lint will only emit a warning, while with &lt;code&gt;deny&lt;/code&gt; the lint will emit an error, when triggering for your code. An error causes Clippy to exit with an error code, so is useful in scripts like CI/CD.&lt;/p&gt; 
&lt;p&gt;If you do not want to include your lint levels in your code, you can globally enable/disable lints by passing extra flags to Clippy during the run:&lt;/p&gt; 
&lt;p&gt;To allow &lt;code&gt;lint_name&lt;/code&gt;, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy -- -A clippy::lint_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And to warn on &lt;code&gt;lint_name&lt;/code&gt;, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy -- -W clippy::lint_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This also works with lint groups. For example, you can run Clippy with warnings for all lints enabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy -- -W clippy::pedantic
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you care only about a single lint, you can allow all others and then explicitly warn on the lint(s) you are interested in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;cargo clippy -- -A clippy::all -W clippy::useless_format -W clippy::...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure the behavior of some lints&lt;/h3&gt; 
&lt;p&gt;Some lints can be configured in a TOML file named &lt;code&gt;clippy.toml&lt;/code&gt; or &lt;code&gt;.clippy.toml&lt;/code&gt;. It contains a basic &lt;code&gt;variable = value&lt;/code&gt; mapping e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;avoid-breaking-exported-api = false
disallowed-names = [&quot;toto&quot;, &quot;tata&quot;, &quot;titi&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;a href=&quot;https://doc.rust-lang.org/nightly/clippy/lint_configuration.html&quot;&gt;table of configurations&lt;/a&gt; contains all config values, their default, and a list of lints they affect. Each &lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html#Configuration&quot;&gt;configurable lint&lt;/a&gt; , also contains information about these values.&lt;/p&gt; 
&lt;p&gt;For configurations that are a list type with default values such as &lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_names&quot;&gt;disallowed-names&lt;/a&gt;, you can use the unique value &lt;code&gt;&quot;..&quot;&lt;/code&gt; to extend the default values instead of replacing them.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# default of disallowed-names is [&quot;foo&quot;, &quot;baz&quot;, &quot;quux&quot;]
disallowed-names = [&quot;bar&quot;, &quot;..&quot;] # -&amp;gt; [&quot;bar&quot;, &quot;foo&quot;, &quot;baz&quot;, &quot;quux&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;code&gt;clippy.toml&lt;/code&gt; or &lt;code&gt;.clippy.toml&lt;/code&gt; cannot be used to allow/deny lints.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To deactivate the “for further information visit &lt;em&gt;lint-link&lt;/em&gt;” message you can define the &lt;code&gt;CLIPPY_DISABLE_DOCS_LINKS&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h3&gt;Specifying the minimum supported Rust version&lt;/h3&gt; 
&lt;p&gt;Projects that intend to support old versions of Rust can disable lints pertaining to newer features by specifying the minimum supported Rust version (MSRV) in the Clippy configuration file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;msrv = &quot;1.30.0&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, the &lt;a href=&quot;https://doc.rust-lang.org/cargo/reference/manifest.html#the-rust-version-field&quot;&gt;&lt;code&gt;rust-version&lt;/code&gt; field&lt;/a&gt; in the &lt;code&gt;Cargo.toml&lt;/code&gt; can be used.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# Cargo.toml
rust-version = &quot;1.30&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The MSRV can also be specified as an attribute, like below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust,ignore&quot;&gt;#![feature(custom_inner_attributes)]
#![clippy::msrv = &quot;1.30.0&quot;]

fn main() {
  ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also omit the patch version when specifying the MSRV, so &lt;code&gt;msrv = 1.30&lt;/code&gt; is equivalent to &lt;code&gt;msrv = 1.30.0&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note: &lt;code&gt;custom_inner_attributes&lt;/code&gt; is an unstable feature, so it has to be enabled explicitly.&lt;/p&gt; 
&lt;p&gt;Lints that recognize this configuration option can be found &lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/index.html#msrv&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you want to contribute to Clippy, you can find more information in &lt;a href=&quot;https://github.com/rust-lang/rust-clippy/raw/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;!-- REUSE-IgnoreStart --&gt; 
&lt;p&gt;Copyright 2014-2025 The Rust Project Developers&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 &amp;lt;LICENSE-APACHE or &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&amp;gt; or the MIT license &amp;lt;LICENSE-MIT or &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;&amp;gt;, at your option. Files in the project may not be copied, modified, or distributed except according to those terms.&lt;/p&gt; 
&lt;!-- REUSE-IgnoreEnd --&gt;</description>
    </item>
    
    <item>
      <title>astral-sh/uv</title>
      <link>https://github.com/astral-sh/uv</link>
      <description>&lt;p&gt;An extremely fast Python package and project manager, written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uv&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/astral-sh/uv&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json&quot; alt=&quot;uv&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.python.org/pypi/uv&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/uv.svg?sanitize=true&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.python.org/pypi/uv&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/l/uv.svg?sanitize=true&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.python.org/pypi/uv&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/pyversions/uv.svg?sanitize=true&quot; alt=&quot;image&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/astral-sh/uv/actions&quot;&gt;&lt;img src=&quot;https://github.com/astral-sh/uv/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Actions status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/astral-sh&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An extremely fast Python package and project manager, written in Rust.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; 
 &lt;picture align=&quot;center&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/astral-sh/uv/assets/1309177/03aa9163-1c79-4a87-a31d-7a9311ed9310&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/astral-sh/uv/assets/1309177/629e59c0-9c6e-4013-9ad4-adb2bcf5080d&quot; /&gt; 
  &lt;img alt=&quot;Shows a bar chart with benchmark results.&quot; src=&quot;https://github.com/astral-sh/uv/assets/1309177/629e59c0-9c6e-4013-9ad4-adb2bcf5080d&quot; /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;i&gt;Installing &lt;a href=&quot;https://trio.readthedocs.io/&quot;&gt;Trio&lt;/a&gt;&#39;s dependencies with a warm cache.&lt;/i&gt; &lt;/p&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 A single tool to replace &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt;, &lt;code&gt;pipx&lt;/code&gt;, &lt;code&gt;poetry&lt;/code&gt;, &lt;code&gt;pyenv&lt;/code&gt;, &lt;code&gt;twine&lt;/code&gt;, &lt;code&gt;virtualenv&lt;/code&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;⚡️ &lt;a href=&quot;https://github.com/astral-sh/uv/raw/main/BENCHMARKS.md&quot;&gt;10-100x faster&lt;/a&gt; than &lt;code&gt;pip&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;🗂️ Provides &lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/#projects&quot;&gt;comprehensive project management&lt;/a&gt;, with a &lt;a href=&quot;https://docs.astral.sh/uv/concepts/projects/layout#the-lockfile&quot;&gt;universal lockfile&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;❇️ &lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/#scripts&quot;&gt;Runs scripts&lt;/a&gt;, with support for &lt;a href=&quot;https://docs.astral.sh/uv/guides/scripts#declaring-script-dependencies&quot;&gt;inline dependency metadata&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🐍 &lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/#python-versions&quot;&gt;Installs and manages&lt;/a&gt; Python versions.&lt;/li&gt; 
 &lt;li&gt;🛠️ &lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/#tools&quot;&gt;Runs and installs&lt;/a&gt; tools published as Python packages.&lt;/li&gt; 
 &lt;li&gt;🔩 Includes a &lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/#the-pip-interface&quot;&gt;pip-compatible interface&lt;/a&gt; for a performance boost with a familiar CLI.&lt;/li&gt; 
 &lt;li&gt;🏢 Supports Cargo-style &lt;a href=&quot;https://docs.astral.sh/uv/concepts/projects/workspaces&quot;&gt;workspaces&lt;/a&gt; for scalable projects.&lt;/li&gt; 
 &lt;li&gt;💾 Disk-space efficient, with a &lt;a href=&quot;https://docs.astral.sh/uv/concepts/cache&quot;&gt;global cache&lt;/a&gt; for dependency deduplication.&lt;/li&gt; 
 &lt;li&gt;⏬ Installable without Rust or Python via &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;🖥️ Supports macOS, Linux, and Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;uv is backed by &lt;a href=&quot;https://astral.sh&quot;&gt;Astral&lt;/a&gt;, the creators of &lt;a href=&quot;https://github.com/astral-sh/ruff&quot;&gt;Ruff&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install uv with our standalone installers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# On macOS and Linux.
curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# On Windows.
powershell -ExecutionPolicy ByPass -c &quot;irm https://astral.sh/uv/install.ps1 | iex&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, from &lt;a href=&quot;https://pypi.org/project/uv/&quot;&gt;PyPI&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# With pip.
pip install uv
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Or pipx.
pipx install uv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If installed via the standalone installer, uv can update itself to the latest version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;uv self update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.astral.sh/uv/getting-started/installation/&quot;&gt;installation documentation&lt;/a&gt; for details and alternative installation methods.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;uv&#39;s documentation is available at &lt;a href=&quot;https://docs.astral.sh/uv&quot;&gt;docs.astral.sh/uv&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, the command line reference documentation can be viewed with &lt;code&gt;uv help&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Projects&lt;/h3&gt; 
&lt;p&gt;uv manages project dependencies and environments, with support for lockfiles, workspaces, and more, similar to &lt;code&gt;rye&lt;/code&gt; or &lt;code&gt;poetry&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv init example
Initialized project `example` at `/home/user/example`

$ cd example

$ uv add ruff
Creating virtual environment at: .venv
Resolved 2 packages in 170ms
   Built example @ file:///home/user/example
Prepared 2 packages in 627ms
Installed 2 packages in 1ms
 + example==0.1.0 (from file:///home/user/example)
 + ruff==0.5.0

$ uv run ruff check
All checks passed!

$ uv lock
Resolved 2 packages in 0.33ms

$ uv sync
Resolved 2 packages in 0.70ms
Audited 1 package in 0.02ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.astral.sh/uv/guides/projects/&quot;&gt;project documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;uv also supports building and publishing projects, even if they&#39;re not managed with uv. See the &lt;a href=&quot;https://docs.astral.sh/uv/guides/publish/&quot;&gt;publish guide&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h3&gt;Scripts&lt;/h3&gt; 
&lt;p&gt;uv manages dependencies and environments for single-file scripts.&lt;/p&gt; 
&lt;p&gt;Create a new script and add inline metadata declaring its dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ echo &#39;import requests; print(requests.get(&quot;https://astral.sh&quot;))&#39; &amp;gt; example.py

$ uv add --script example.py requests
Updated `example.py`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, run the script in an isolated virtual environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv run example.py
Reading inline script metadata from: example.py
Installed 5 packages in 12ms
&amp;lt;Response [200]&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.astral.sh/uv/guides/scripts/&quot;&gt;scripts documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;uv executes and installs command-line tools provided by Python packages, similar to &lt;code&gt;pipx&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Run a tool in an ephemeral environment using &lt;code&gt;uvx&lt;/code&gt; (an alias for &lt;code&gt;uv tool run&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uvx pycowsay &#39;hello world!&#39;
Resolved 1 package in 167ms
Installed 1 package in 9ms
 + pycowsay==0.0.0.2
  &quot;&quot;&quot;

  ------------
&amp;lt; hello world! &amp;gt;
  ------------
   \   ^__^
    \  (oo)\_______
       (__)\       )\/\
           ||----w |
           ||     ||
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install a tool with &lt;code&gt;uv tool install&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv tool install ruff
Resolved 1 package in 6ms
Installed 1 package in 2ms
 + ruff==0.5.0
Installed 1 executable: ruff

$ ruff --version
ruff 0.5.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.astral.sh/uv/guides/tools/&quot;&gt;tools documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Python versions&lt;/h3&gt; 
&lt;p&gt;uv installs Python and allows quickly switching between versions.&lt;/p&gt; 
&lt;p&gt;Install multiple Python versions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv python install 3.10 3.11 3.12
Searching for Python versions matching: Python 3.10
Searching for Python versions matching: Python 3.11
Searching for Python versions matching: Python 3.12
Installed 3 versions in 3.42s
 + cpython-3.10.14-macos-aarch64-none
 + cpython-3.11.9-macos-aarch64-none
 + cpython-3.12.4-macos-aarch64-none
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Download Python versions as needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv venv --python 3.12.0
Using Python 3.12.0
Creating virtual environment at: .venv
Activate with: source .venv/bin/activate

$ uv run --python pypy@3.8 -- python --version
Python 3.8.16 (a9dbdca6fc3286b0addd2240f11d97d8e8de187a, Dec 29 2022, 11:45:30)
[PyPy 7.3.11 with GCC Apple LLVM 13.1.6 (clang-1316.0.21.2.5)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use a specific Python version in the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv python pin 3.11
Pinned `.python-version` to `3.11`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.astral.sh/uv/guides/install-python/&quot;&gt;Python installation documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;The pip interface&lt;/h3&gt; 
&lt;p&gt;uv provides a drop-in replacement for common &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt;, and &lt;code&gt;virtualenv&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;uv extends their interfaces with advanced features, such as dependency version overrides, platform-independent resolutions, reproducible resolutions, alternative resolution strategies, and more.&lt;/p&gt; 
&lt;p&gt;Migrate to uv without changing your existing workflows — and experience a 10-100x speedup — with the &lt;code&gt;uv pip&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;Compile requirements into a platform-independent requirements file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv pip compile docs/requirements.in \
   --universal \
   --output-file docs/requirements.txt
Resolved 43 packages in 12ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a virtual environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv venv
Using Python 3.12.3
Creating virtual environment at: .venv
Activate with: source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install the locked requirements:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ uv pip sync docs/requirements.txt
Resolved 43 packages in 11ms
Installed 43 packages in 208ms
 + babel==2.15.0
 + black==24.4.2
 + certifi==2024.7.4
 ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.astral.sh/uv/pip/index/&quot;&gt;pip interface documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Platform support&lt;/h2&gt; 
&lt;p&gt;See uv&#39;s &lt;a href=&quot;https://docs.astral.sh/uv/reference/platforms/&quot;&gt;platform support&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;Versioning policy&lt;/h2&gt; 
&lt;p&gt;See uv&#39;s &lt;a href=&quot;https://docs.astral.sh/uv/reference/versioning/&quot;&gt;versioning policy&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are passionate about supporting contributors of all levels of experience and would love to see you get involved in the project. See the &lt;a href=&quot;https://github.com/astral-sh/uv/raw/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;How do you pronounce uv?&lt;/h4&gt; 
&lt;p&gt;It&#39;s pronounced as &quot;you - vee&quot; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:IPA/English#Key&quot;&gt;&lt;code&gt;/juː viː/&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; 
&lt;h4&gt;How should I stylize uv?&lt;/h4&gt; 
&lt;p&gt;Just &quot;uv&quot;, please. See the &lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/STYLE.md#styling-uv&quot;&gt;style guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;uv&#39;s dependency resolver uses &lt;a href=&quot;https://github.com/pubgrub-rs/pubgrub&quot;&gt;PubGrub&lt;/a&gt; under the hood. We&#39;re grateful to the PubGrub maintainers, especially &lt;a href=&quot;https://github.com/Eh2406&quot;&gt;Jacob Finkelman&lt;/a&gt;, for their support.&lt;/p&gt; 
&lt;p&gt;uv&#39;s Git implementation is based on &lt;a href=&quot;https://github.com/rust-lang/cargo&quot;&gt;Cargo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some of uv&#39;s optimizations are inspired by the great work we&#39;ve seen in &lt;a href=&quot;https://pnpm.io/&quot;&gt;pnpm&lt;/a&gt;, &lt;a href=&quot;https://github.com/orogene/orogene&quot;&gt;Orogene&lt;/a&gt;, and &lt;a href=&quot;https://github.com/oven-sh/bun&quot;&gt;Bun&lt;/a&gt;. We&#39;ve also learned a lot from Nathaniel J. Smith&#39;s &lt;a href=&quot;https://github.com/njsmith/posy&quot;&gt;Posy&lt;/a&gt; and adapted its &lt;a href=&quot;https://github.com/njsmith/posy/tree/main/src/trampolines/windows-trampolines/posy-trampoline&quot;&gt;trampoline&lt;/a&gt; for Windows support.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;uv is licensed under either of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/LICENSE-APACHE&quot;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/LICENSE-MIT&quot;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in uv by you, as defined in the Apache-2.0 license, shall be dually licensed as above, without any additional terms or conditions.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a target=&quot;_blank&quot; href=&quot;https://astral.sh&quot; style=&quot;background:none&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/astral-sh/uv/main/assets/svg/Astral.svg?sanitize=true&quot; alt=&quot;Made by Astral&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>unionlabs/union</title>
      <link>https://github.com/unionlabs/union</link>
      <description>&lt;p&gt;The trust-minimized, zero-knowledge bridging protocol, designed for censorship resistance, extremely high security, and usage in decentralized finance.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./.github/images/union-logo-white.svg&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./.github/images/union-logo-black.svg&quot; /&gt; 
  &lt;img alt=&quot;Union&quot; src=&quot;https://raw.githubusercontent.com/unionlabs/union/main/.github/images/union-logo-black.svg?sanitize=true&quot; width=&quot;100%&quot; /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://garnix.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fgarnix.io%2Fapi%2Fbadges%2Funionlabs%2Funion%3Fbranch%3Dmain&quot; alt=&quot;built with garnix&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.union.build&quot; title=&quot;Official Union Docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-main-blue&quot; alt=&quot;Docs&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.union.build&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1158939416870522930?logo=discord&quot; alt=&quot;Discord badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=union_build&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/union_build.svg?style=social&amp;amp;label=Follow&quot; alt=&quot;Twitter handle&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Union is the hyper-efficient zero-knowledge infrastructure layer for general message passing, asset transfers, NFTs, and DeFi. Its based on &lt;a href=&quot;https://union.build/docs/concepts/consensus-verification/&quot;&gt;Consensus Verification&lt;/a&gt; and has no dependencies on trusted third parties, oracles, multi-signatures or MPC. It implements &lt;a href=&quot;https://github.com/cosmos/ibc&quot; title=&quot;cosmos/ibc&quot;&gt;IBC&lt;/a&gt; for compatibility with &lt;a href=&quot;https://cosmos.network&quot;&gt;Cosmos&lt;/a&gt; chains and connects to EVM chains like &lt;a href=&quot;https://ethereum.org&quot;&gt;Ethereum&lt;/a&gt;, &lt;a href=&quot;https://github.com/berachain/beacon-kit&quot;&gt;Berachain (beacon-kit)&lt;/a&gt;, &lt;a href=&quot;https://github.com/OffchainLabs/arbitrum&quot;&gt;Arbitrum&lt;/a&gt;, and more.&lt;/p&gt; 
&lt;p&gt;The upgradability of contracts on other chains, connections, token configurations, and evolution of the protocol will all be controlled by decentralized governance, aligning the priorities of Union with its users, validators, and operators.&lt;/p&gt; 
&lt;h2&gt;Components&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Component&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Language(s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/uniond/README.md&quot;&gt;&lt;code&gt;uniond&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Union node implementation, using &lt;a href=&quot;https://github.com/unionlabs/cometbls&quot;&gt;&lt;code&gt;CometBLS&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://go.dev/&quot;&gt;Go&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/galoisd&quot;&gt;&lt;code&gt;galoisd&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The zero-knowledge prover implementation&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://go.dev/&quot;&gt;Go&lt;/a&gt; &lt;a href=&quot;https://github.com/ConsenSys/gnark&quot;&gt;Gnark&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/voyager&quot;&gt;&lt;code&gt;voyager&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Modular hyper-performant cross-ecosystem relayer&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/hubble&quot;&gt;&lt;code&gt;hubble&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Multi-ecosystem, GMP-enabled chain indexer&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/cosmwasm&quot;&gt;&lt;code&gt;cosmwasm&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://cosmwasm.com/&quot;&gt;CosmWasm&lt;/a&gt; smart contract stack&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/cosmwasm/ibc-union/lightclient&quot;&gt;&lt;code&gt;light-clients&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://a16zcrypto.com/posts/article/an-introduction-to-light-clients/&quot;&gt;Light Clients&lt;/a&gt; for various ecosystems&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/unionvisor/README.md&quot;&gt;&lt;code&gt;unionvisor&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node supervisor intended for production usage&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/drip&quot;&gt;&lt;code&gt;drip&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Faucet for &lt;a href=&quot;https://cosmos.network&quot;&gt;Cosmos&lt;/a&gt; chains: &lt;a href=&quot;https://app.union.build/faucet&quot;&gt;app.union.build/faucet&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/evm&quot;&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ethereum.org/en/developers/docs/evm/&quot;&gt;EVM&lt;/a&gt; smart contract stack&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://soliditylang.org/&quot;&gt;Solidity&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/app2&quot;&gt;&lt;code&gt;app&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.union.build&quot;&gt;app.union.build&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; &lt;a href=&quot;https://svelte.dev&quot;&gt;Svelte&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://union.build&quot;&gt;union.build&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; &lt;a href=&quot;https://astro.build&quot;&gt;Astro&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/unionlabs/union/main/ts-sdk&quot;&gt;&lt;code&gt;TypeScript SDK&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;TypeScript SDK for interacting with Union&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Install &lt;a href=&quot;https://zero-to-nix.com/&quot;&gt;Nix&lt;/a&gt; to &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Reproducible_builds&quot;&gt;reproducibly build&lt;/a&gt; any component&lt;/em&gt;, and to enter a dev shell with &lt;em&gt;all dependencies&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;(Note that some components can only be built on Linux. If you are using macOS, we recommend using &lt;a href=&quot;https://orbstack.dev/&quot;&gt;OrbStack&lt;/a&gt; to easily set up a &lt;a href=&quot;https://nixos.org&quot;&gt;NixOS&lt;/a&gt; VM within two minutes. Most Union developers use macOS with &lt;a href=&quot;https://orbstack.dev/&quot;&gt;OrbStack&lt;/a&gt;, and there is no need to install Nix inside of the &lt;a href=&quot;https://nixos.org&quot;&gt;NixOS&lt;/a&gt; VM.)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can now &lt;em&gt;reproducibly&lt;/em&gt; build any of Union&#39;s components from source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nix build .#uniond -L
nix build .#voyager -L
nix build .#app -L

# to see all packages, run:
nix flake show
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of whatever you build will be in &lt;code&gt;result/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can now also enter our dev shell, which has all of the dependencies (&lt;code&gt;cargo&lt;/code&gt;, &lt;code&gt;rustc&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, etc.) you need to work on any component: &lt;em&gt;(Don&#39;t worry, this will not affect your system outside of this repo)&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nix develop
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the following to format the entire repo and check your spelling before each PR:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nix run .#pre-commit -L
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check the &lt;code&gt;#developers&lt;/code&gt; channel on &lt;a href=&quot;https://discord.union.build&quot;&gt;Union&#39;s discord&lt;/a&gt; if you need any help with this.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;The official docs are hosted &lt;a href=&quot;https://docs.union.build&quot; title=&quot;Official Union Docs&quot;&gt;here&lt;/a&gt;. Each individual component also has accompanying developer documentation for contributors, which you can find in each &lt;code&gt;README.md&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>paradigmxyz/reth</title>
      <link>https://github.com/paradigmxyz/reth</link>
      <description>&lt;p&gt;Modular, contributor-friendly and blazing-fast implementation of the Ethereum protocol, in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;reth&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/paradigmxyz/reth/actions/workflows/bench.yml&quot;&gt;&lt;img src=&quot;https://github.com/paradigmxyz/reth/actions/workflows/bench.yml/badge.svg?sanitize=true&quot; alt=&quot;bench status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/paradigmxyz/reth/actions/workflows/unit.yml&quot;&gt;&lt;img src=&quot;https://github.com/paradigmxyz/reth/workflows/unit/badge.svg?sanitize=true&quot; alt=&quot;CI status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/paradigmxyz/reth/actions/workflows/lint.yml&quot;&gt;&lt;img src=&quot;https://github.com/paradigmxyz/reth/actions/workflows/lint.yml/badge.svg?sanitize=true&quot; alt=&quot;cargo-lint status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/paradigm_reth&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?color=neon&amp;amp;logo=telegram&amp;amp;label=chat&amp;amp;url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fparadigm%5Freth&quot; alt=&quot;Telegram Chat&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modular, contributor-friendly and blazing-fast implementation of the Ethereum protocol&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/assets/reth-prod.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://paradigmxyz.github.io/reth/installation/installation.html&quot;&gt;Install&lt;/a&gt;&lt;/strong&gt; | &lt;a href=&quot;https://reth.rs&quot;&gt;User Docs&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/docs&quot;&gt;Developer Docs&lt;/a&gt; | &lt;a href=&quot;https://reth.rs/docs&quot;&gt;Crate Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Reth?&lt;/h2&gt; 
&lt;p&gt;Reth (short for Rust Ethereum, &lt;a href=&quot;https://twitter.com/kelvinfichter/status/1597653609411268608&quot;&gt;pronunciation&lt;/a&gt;) is a new Ethereum full node implementation that is focused on being user-friendly, highly modular, as well as being fast and efficient. Reth is an Execution Layer (EL) and is compatible with all Ethereum Consensus Layer (CL) implementations that support the &lt;a href=&quot;https://github.com/ethereum/execution-apis/tree/a0d03086564ab1838b462befbc083f873dcf0c0f/src/engine&quot;&gt;Engine API&lt;/a&gt;. It is originally built and driven forward by &lt;a href=&quot;https://paradigm.xyz/&quot;&gt;Paradigm&lt;/a&gt;, and is licensed under the Apache and MIT licenses.&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;As a full Ethereum node, Reth allows users to connect to the Ethereum network and interact with the Ethereum blockchain. This includes sending and receiving transactions/logs/traces, as well as accessing and interacting with smart contracts. Building a successful Ethereum node requires creating a high-quality implementation that is both secure and efficient, as well as being easy to use on consumer hardware. It also requires building a strong community of contributors who can help support and improve the software.&lt;/p&gt; 
&lt;p&gt;More concretely, our goals are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Modularity&lt;/strong&gt;: Every component of Reth is built to be used as a library: well-tested, heavily documented and benchmarked. We envision that developers will import the node&#39;s crates, mix and match, and innovate on top of them. Examples of such usage include but are not limited to spinning up standalone P2P networks, talking directly to a node&#39;s database, or &quot;unbundling&quot; the node into the components you need. To achieve that, we are licensing Reth under the Apache/MIT permissive license. You can learn more about the project&#39;s components &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/docs/repo/layout.md&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Reth aims to be fast, so we used Rust and the &lt;a href=&quot;https://erigon.substack.com/p/erigon-stage-sync-and-control-flows&quot;&gt;Erigon staged-sync&lt;/a&gt; node architecture. We also use our Ethereum libraries (including &lt;a href=&quot;https://github.com/alloy-rs/alloy/&quot;&gt;Alloy&lt;/a&gt; and &lt;a href=&quot;https://github.com/bluealloy/revm/&quot;&gt;revm&lt;/a&gt;) which we’ve battle-tested and optimized via &lt;a href=&quot;https://github.com/foundry-rs/foundry/&quot;&gt;Foundry&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free for anyone to use any way they want&lt;/strong&gt;: Reth is free open source software, built for the community, by the community. By licensing the software under the Apache/MIT license, we want developers to use it without being bound by business licenses, or having to think about the implications of GPL-like licenses.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Client Diversity&lt;/strong&gt;: The Ethereum protocol becomes more antifragile when no node implementation dominates. This ensures that if there&#39;s a software bug, the network does not finalize a bad block. By building a new client, we hope to contribute to Ethereum&#39;s antifragility.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support as many EVM chains as possible&lt;/strong&gt;: We aspire that Reth can full-sync not only Ethereum, but also other chains like Optimism, Polygon, BNB Smart Chain, and more. If you&#39;re working on any of these projects, please reach out.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurability&lt;/strong&gt;: We want to solve for node operators that care about fast historical queries, but also for hobbyists who cannot operate on large hardware. We also want to support teams and individuals who want both sync from genesis and via &quot;fast sync&quot;. We envision that Reth will be configurable enough and provide configurable &quot;profiles&quot; for the tradeoffs that each team faces.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;Reth is production ready, and suitable for usage in mission-critical environments such as staking or high-uptime services. We also actively recommend professional node operators to switch to Reth in production for performance and cost reasons in use cases where high performance with great margins is required such as RPC, MEV, Indexing, Simulations, and P2P activities.&lt;/p&gt; 
&lt;p&gt;More historical context below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We released 1.0 &quot;production-ready&quot; stable Reth in June 2024. 
  &lt;ul&gt; 
   &lt;li&gt;Reth completed an audit with &lt;a href=&quot;https://sigmaprime.io/&quot;&gt;Sigma Prime&lt;/a&gt;, the developers of &lt;a href=&quot;https://github.com/sigp/lighthouse&quot;&gt;Lighthouse&lt;/a&gt;, the Rust Consensus Layer implementation. Find it &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/audit/sigma_prime_audit_v2.pdf&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Revm (the EVM used in Reth) underwent an audit with &lt;a href=&quot;https://twitter.com/guidovranken&quot;&gt;Guido Vranken&lt;/a&gt; (#1 &lt;a href=&quot;https://ethereum.org/en/bug-bounty&quot;&gt;Ethereum Bug Bounty&lt;/a&gt;). We will publish the results soon.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;We released multiple iterative beta versions, up to &lt;a href=&quot;https://github.com/paradigmxyz/reth/releases/tag/v0.2.0-beta.9&quot;&gt;beta.9&lt;/a&gt; on Monday June 3rd 2024 the last beta release.&lt;/li&gt; 
 &lt;li&gt;We released &lt;a href=&quot;https://github.com/paradigmxyz/reth/releases/tag/v0.2.0-beta.1&quot;&gt;beta&lt;/a&gt; on Monday March 4th 2024, our first breaking change to the database model, providing faster query speed, smaller database footprint, and allowing &quot;history&quot; to be mounted on separate drives.&lt;/li&gt; 
 &lt;li&gt;We shipped iterative improvements until the last alpha release on February 28th 2024, &lt;a href=&quot;https://github.com/paradigmxyz/reth/releases/tag/v0.1.0-alpha.21&quot;&gt;0.1.0-alpha.21&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We &lt;a href=&quot;https://www.paradigm.xyz/2023/06/reth-alpha&quot;&gt;initially announced&lt;/a&gt; &lt;a href=&quot;https://github.com/paradigmxyz/reth/releases/tag/v0.1.0-alpha.1&quot;&gt;0.1.0-alpha.1&lt;/a&gt; in June 20th 2023.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database compatibility&lt;/h3&gt; 
&lt;p&gt;We do not have any breaking database changes since beta.1, and do not plan any in the near future.&lt;/p&gt; 
&lt;p&gt;Reth &lt;a href=&quot;https://github.com/paradigmxyz/reth/releases/tag/v0.2.0-beta.1&quot;&gt;v0.2.0-beta.1&lt;/a&gt; includes a &lt;a href=&quot;https://github.com/paradigmxyz/reth/pull/5191&quot;&gt;set of breaking database changes&lt;/a&gt; that makes it impossible to use database files produced by earlier versions.&lt;/p&gt; 
&lt;p&gt;If you had a database produced by alpha versions of Reth, you need to drop it with &lt;code&gt;reth db drop&lt;/code&gt; (using the same arguments such as &lt;code&gt;--config&lt;/code&gt; or &lt;code&gt;--datadir&lt;/code&gt; that you passed to &lt;code&gt;reth node&lt;/code&gt;), and resync using the same &lt;code&gt;reth node&lt;/code&gt; command you&#39;ve used before.&lt;/p&gt; 
&lt;h2&gt;For Users&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://paradigmxyz.github.io/reth&quot;&gt;Reth documentation&lt;/a&gt; for instructions on how to install and run Reth.&lt;/p&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;h3&gt;Using reth as a library&lt;/h3&gt; 
&lt;p&gt;You can use individual crates of reth in your project.&lt;/p&gt; 
&lt;p&gt;The crate docs can be found &lt;a href=&quot;https://paradigmxyz.github.io/reth/docs&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a general overview of the crates, see &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/docs/repo/layout.md&quot;&gt;Project Layout&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you want to contribute, or follow along with contributor discussion, you can use our &lt;a href=&quot;https://t.me/paradigm_reth&quot;&gt;main telegram&lt;/a&gt; to chat with us about the development of Reth!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our contributor guidelines can be found in &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/CONTRIBUTING.md&quot;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;See our &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/docs&quot;&gt;contributor docs&lt;/a&gt; for more information on the project. A good starting point is &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/docs/repo/layout.md&quot;&gt;Project Layout&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Building and testing&lt;/h3&gt; 
&lt;!--
When updating this, also update:
- clippy.toml
- Cargo.toml
- .github/workflows/lint.yml
--&gt; 
&lt;p&gt;The Minimum Supported Rust Version (MSRV) of this project is &lt;a href=&quot;https://blog.rust-lang.org/2025/06/26/Rust-1.88.0/&quot;&gt;1.88.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the docs for detailed instructions on how to &lt;a href=&quot;https://paradigmxyz.github.io/reth/installation/source&quot;&gt;build from source&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To fully test Reth, you will need to have &lt;a href=&quot;https://geth.ethereum.org/docs/getting-started/installing-geth&quot;&gt;Geth installed&lt;/a&gt;, but it is possible to run a subset of tests without Geth.&lt;/p&gt; 
&lt;p&gt;First, clone the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/paradigmxyz/reth
cd reth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, run the tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cargo nextest run --workspace

# Run the Ethereum Foundation tests
make ef-tests
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We highly recommend using &lt;a href=&quot;https://nexte.st/&quot;&gt;&lt;code&gt;cargo nextest&lt;/code&gt;&lt;/a&gt; to speed up testing. Using &lt;code&gt;cargo test&lt;/code&gt; to run tests may work fine, but this is not tested and does not support more advanced features like retries for spurious failures.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Some tests use random number generators to generate test data. If you want to use a deterministic seed, you can set the &lt;code&gt;SEED&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;If you have any questions, first see if the answer to your question can be found in the &lt;a href=&quot;https://paradigmxyz.github.io/reth/&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If the answer is not there:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;https://t.me/paradigm_reth&quot;&gt;Telegram&lt;/a&gt; to get help, or&lt;/li&gt; 
 &lt;li&gt;Open a &lt;a href=&quot;https://github.com/paradigmxyz/reth/discussions/new&quot;&gt;discussion&lt;/a&gt; with your question, or&lt;/li&gt; 
 &lt;li&gt;Open an issue with &lt;a href=&quot;https://github.com/paradigmxyz/reth/issues/new?assignees=&amp;amp;labels=C-bug%2CS-needs-triage&amp;amp;projects=&amp;amp;template=bug.yml&quot;&gt;the bug&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/paradigmxyz/reth/main/SECURITY.md&quot;&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Reth is a new implementation of the Ethereum protocol. In the process of developing the node we investigated the design decisions other nodes have made to understand what is done well, what is not, and where we can improve the status quo.&lt;/p&gt; 
&lt;p&gt;None of this would have been possible without them, so big shoutout to the teams below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ethereum/go-ethereum/&quot;&gt;Geth&lt;/a&gt;: We would like to express our heartfelt gratitude to the go-ethereum team for their outstanding contributions to Ethereum over the years. Their tireless efforts and dedication have helped to shape the Ethereum ecosystem and make it the vibrant and innovative community it is today. Thank you for your hard work and commitment to the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ledgerwatch/erigon&quot;&gt;Erigon&lt;/a&gt; (fka Turbo-Geth): Erigon pioneered the &lt;a href=&quot;https://erigon.substack.com/p/erigon-stage-sync-and-control-flows&quot;&gt;&quot;Staged Sync&quot; architecture&lt;/a&gt; that Reth is using, as well as &lt;a href=&quot;https://github.com/ledgerwatch/erigon/wiki/Choice-of-storage-engine&quot;&gt;introduced MDBX&lt;/a&gt; as the database of choice. We thank Erigon for pushing the state of the art research on the performance limits of Ethereum nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/akula-bft/akula/&quot;&gt;Akula&lt;/a&gt;: Reth uses forks of the Apache versions of Akula&#39;s &lt;a href=&quot;https://github.com/paradigmxyz/reth/pull/132&quot;&gt;MDBX Bindings&lt;/a&gt;, &lt;a href=&quot;https://github.com/paradigmxyz/reth/pull/63&quot;&gt;FastRLP&lt;/a&gt; and &lt;a href=&quot;https://github.com/paradigmxyz/reth/pull/80&quot;&gt;ECIES&lt;/a&gt; . Given that these packages were already released under the Apache License, and they implement standardized solutions, we decided not to reimplement them to iterate faster. We thank the Akula team for their contributions to the Rust Ethereum ecosystem and for publishing these packages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Warning&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;NippyJar&lt;/code&gt; and &lt;code&gt;Compact&lt;/code&gt; encoding formats and their implementations are designed for storing and retrieving data internally. They are not hardened to safely read potentially malicious data.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ratatui/ratatui</title>
      <link>https://github.com/ratatui/ratatui</link>
      <description>&lt;p&gt;A Rust crate for cooking up terminal user interfaces (TUIs) 👨‍🍳🐀 https://ratatui.rs&lt;/p&gt;&lt;hr&gt;&lt;details&gt; 
 &lt;summary&gt;Table of Contents&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#templates&quot;&gt;Templates&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#built-with-ratatui&quot;&gt;Built with Ratatui&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#alternatives&quot;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#acknowledgements&quot;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/ratatui/ratatui/raw/b23480adfa9430697071c906c7ba4d4f9bd37a73/assets/release-header.png?raw=true&quot; alt=&quot;Release header&quot; /&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://crates.io/crates/ratatui&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/ratatui?logo=rust&amp;amp;style=flat-square&amp;amp;color=E05D44&quot; alt=&quot;Crate Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ratatui/ratatui&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/repo-ratatui/ratatui-1370D3?style=flat-square&amp;amp;logo=github&quot; alt=&quot;Repo Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.rs/ratatui&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-ratatui-1370D3?style=flat-square&amp;amp;logo=rust&quot; alt=&quot;Docs Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/l/ratatui?style=flat-square&amp;amp;color=1370D3&quot; alt=&quot;License Badge&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/ratatui/ratatui/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/ratatui/ratatui/ci.yml?style=flat-square&amp;amp;logo=github&quot; alt=&quot;CI Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://deps.rs/repo/github/ratatui/ratatui?path=ratatui&quot;&gt;&lt;img src=&quot;https://deps.rs/repo/github/ratatui/ratatui/status.svg?path=ratatui&amp;amp;style=flat-square&quot; alt=&quot;Deps Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codecov.io/gh/ratatui/ratatui&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/ratatui/ratatui?logo=codecov&amp;amp;style=flat-square&amp;amp;token=BAQ8SOKEST&amp;amp;color=C43AC3&quot; alt=&quot;Codecov Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/ratatui&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/ratatui?logo=github&amp;amp;style=flat-square&amp;amp;color=1370D3&quot; alt=&quot;Sponsors Badge&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://ratatui.rs/&quot;&gt;Ratatui Website&lt;/a&gt; · &lt;a href=&quot;https://docs.rs/ratatui&quot;&gt;Docs&lt;/a&gt; · &lt;a href=&quot;https://github.com/ratatui/ratatui/tree/main/ratatui-widgets/examples&quot;&gt;Widget Examples&lt;/a&gt; · &lt;a href=&quot;https://github.com/ratatui/ratatui/tree/main/examples&quot;&gt;App Examples&lt;/a&gt; · &lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/BREAKING-CHANGES.md&quot;&gt;Breaking Changes&lt;/a&gt; · &lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; · &lt;a href=&quot;https://github.com/ratatui/ratatui/issues/new?labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&quot;&gt;Report a bug&lt;/a&gt; · &lt;a href=&quot;https://github.com/ratatui/ratatui/issues/new?labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&quot;&gt;Request a Feature&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://ratatui.rs/&quot;&gt;Ratatui&lt;/a&gt; (&lt;em&gt;ˌræ.təˈtu.i&lt;/em&gt;) is a Rust crate for cooking up terminal user interfaces (TUIs). It provides a simple and flexible way to create text-based user interfaces in the terminal, which can be used for command-line applications, dashboards, and other interactive console programs.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Ratatui has &lt;a href=&quot;https://github.com/ratatui/templates/&quot;&gt;templates&lt;/a&gt; available to help you get started quickly. You can use the &lt;a href=&quot;https://crates.io/crates/cargo-generate&quot;&gt;&lt;code&gt;cargo-generate&lt;/code&gt;&lt;/a&gt; command to create a new project with Ratatui:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install --locked cargo-generate
cargo generate ratatui/templates
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Selecting the Hello World template produces the following application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;use color_eyre::Result;
use crossterm::event::{self, Event};
use ratatui::{DefaultTerminal, Frame};

fn main() -&amp;gt; Result&amp;lt;()&amp;gt; {
    color_eyre::install()?;
    let terminal = ratatui::init();
    let result = run(terminal);
    ratatui::restore();
    result
}

fn run(mut terminal: DefaultTerminal) -&amp;gt; Result&amp;lt;()&amp;gt; {
    loop {
        terminal.draw(render)?;
        if matches!(event::read()?, Event::Key(_)) {
            break Ok(());
        }
    }
}

fn render(frame: &amp;amp;mut Frame) {
    frame.render_widget(&quot;hello world&quot;, frame.area());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.rs/ratatui&quot;&gt;Docs&lt;/a&gt; - the full API documentation for the library on docs.rs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ratatui.rs/&quot;&gt;Ratatui Website&lt;/a&gt; - explains the library&#39;s concepts and provides step-by-step tutorials.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.ratatui.rs&quot;&gt;Ratatui Forum&lt;/a&gt; - a place to ask questions and discuss the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ratatui/ratatui/tree/main/ratatui-widgets/examples&quot;&gt;Widget Examples&lt;/a&gt; - a collection of examples that demonstrate how to use the library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ratatui/ratatui/tree/main/examples&quot;&gt;App Examples&lt;/a&gt; - a collection of more complex examples that demonstrate how to build apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/ARCHITECTURE.md&quot;&gt;ARCHITECTURE.md&lt;/a&gt; - explains the crate organization and modular workspace structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; - generated by &lt;a href=&quot;https://git-cliff.org&quot;&gt;git-cliff&lt;/a&gt; utilizing &lt;a href=&quot;https://www.conventionalcommits.org&quot;&gt;Conventional Commits&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/BREAKING-CHANGES.md&quot;&gt;Breaking Changes&lt;/a&gt; - a list of breaking changes in the library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also watch the &lt;a href=&quot;https://www.youtube.com/watch?v=hWG51Mc1DlM&quot;&gt;EuroRust 2024 talk&lt;/a&gt; to learn about common concepts in Ratatui and what&#39;s possible to build with it.&lt;/p&gt; 
&lt;h2&gt;Templates&lt;/h2&gt; 
&lt;p&gt;If you&#39;re looking to get started quickly, you can use one of the available templates from the &lt;a href=&quot;https://github.com/ratatui/templates/&quot;&gt;templates&lt;/a&gt; repository using &lt;a href=&quot;https://crates.io/crates/cargo-generate&quot;&gt;&lt;code&gt;cargo-generate&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo generate ratatui/templates
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Built with Ratatui&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ratatui/awesome-ratatui&quot;&gt;&lt;img src=&quot;https://awesome.re/badge-flat2.svg?sanitize=true&quot; alt=&quot;Awesome&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://ratatui.rs/showcase/&quot;&gt;showcase&lt;/a&gt; section of the website, or the &lt;a href=&quot;https://github.com/ratatui/awesome-ratatui&quot;&gt;awesome-ratatui&lt;/a&gt; repository for a curated list of awesome apps and libraries built with Ratatui!&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crates.io/crates/cursive&quot;&gt;Cursive&lt;/a&gt; - a ncurses-based TUI library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crates.io/crates/iocraft&quot;&gt;iocraft&lt;/a&gt; - a declarative TUI library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/pMCEU9hNEj&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1070692720437383208?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&amp;amp;color=1370D3&amp;amp;logoColor=1370D3&quot; alt=&quot;Discord Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#ratatui:matrix.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/matrix/ratatui-general%3Amatrix.org?style=flat-square&amp;amp;logo=matrix&amp;amp;label=Matrix&amp;amp;color=C43AC3&quot; alt=&quot;Matrix Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.ratatui.rs&quot;&gt;&lt;img src=&quot;https://img.shields.io/discourse/likes?server=https%3A%2F%2Fforum.ratatui.rs&amp;amp;style=flat-square&amp;amp;logo=discourse&amp;amp;label=forum&amp;amp;color=C43AC3&quot; alt=&quot;Forum Badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Feel free to join our &lt;a href=&quot;https://discord.gg/pMCEU9hNEj&quot;&gt;Discord server&lt;/a&gt; for discussions and questions! There is also a &lt;a href=&quot;https://matrix.org/&quot;&gt;Matrix&lt;/a&gt; bridge available at &lt;a href=&quot;https://matrix.to/#/#ratatui:matrix.org&quot;&gt;#ratatui:matrix.org&lt;/a&gt;. We have also recently launched the &lt;a href=&quot;https://forum.ratatui.rs&quot;&gt;Ratatui Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We rely on GitHub for &lt;a href=&quot;https://github.com/ratatui/ratatui/issues/new?labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&quot;&gt;bugs&lt;/a&gt; and &lt;a href=&quot;https://github.com/ratatui/ratatui/issues/new?labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&quot;&gt;feature requests&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please make sure you read the &lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; guidelines before &lt;a href=&quot;https://github.com/ratatui/ratatui/compare&quot;&gt;creating a pull request&lt;/a&gt;. We accept AI generated code, but please read the &lt;a href=&quot;https://github.com/ratatui/ratatui/raw/main/CONTRIBUTING.md#ai-generated-content&quot;&gt;AI Contributions&lt;/a&gt; guidelines to ensure compliance.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to show your support, you can add the Ratatui badge to your project&#39;s README:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;[![Built With Ratatui](https://img.shields.io/badge/Built_With_Ratatui-000?logo=ratatui&amp;amp;logoColor=fff)](https://ratatui.rs/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://ratatui.rs/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Built_With_Ratatui-000?logo=ratatui&amp;amp;logoColor=fff&quot; alt=&quot;Built With Ratatui&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Ratatui was forked from the &lt;a href=&quot;https://crates.io/crates/tui&quot;&gt;tui-rs&lt;/a&gt; crate in 2023 in order to continue its development. None of this could be possible without &lt;a href=&quot;https://github.com/fdehau&quot;&gt;Florian Dehau&lt;/a&gt; who originally created &lt;a href=&quot;https://crates.io/crates/tui&quot;&gt;tui-rs&lt;/a&gt; which inspired many Rust TUIs.&lt;/p&gt; 
&lt;p&gt;Special thanks to &lt;a href=&quot;https://github.com/nawok&quot;&gt;Pavel Fomchenkov&lt;/a&gt; for his work in designing an awesome logo for the Ratatui project and organization.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/ratatui/ratatui/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>surrealdb/surrealdb</title>
      <link>https://github.com/surrealdb/surrealdb</link>
      <description>&lt;p&gt;A scalable, distributed, collaborative, document-graph database, for the realtime web&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://surrealdb.com#gh-dark-mode-only&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/white/hero.png&quot; alt=&quot;SurrealDB Hero&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://surrealdb.com#gh-light-mode-only&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/black/hero.png&quot; alt=&quot;SurrealDB Hero&quot; /&gt; &lt;/a&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/surrealdb/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/surrealdb/surrealdb?color=ff00a0&amp;amp;include_prereleases&amp;amp;label=version&amp;amp;sort=semver&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/surrealdb/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/built_with-Rust-dca282.svg?style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/surrealdb/surrealdb/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/surrealdb/surrealdb/nightly.yml?style=flat-square&amp;amp;branch=main&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/surrealdb/license&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-BSL_1.1-00bfff.svg?style=flat-square&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://hub.docker.com/repository/docker/surrealdb/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/surrealdb/surrealdb?label=docker%20pulls&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://crates.io/crates/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/d/surrealdb?color=dca282&amp;amp;label=rust&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.npmjs.com/package/surrealdb.js&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/dt/surrealdb.js?color=f7df1e&amp;amp;label=javascript&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://pypi.org/project/surrealdb/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pepy/dt/surrealdb?color=426c99&amp;amp;label=python&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.nuget.org/packages/SurrealDb.Net&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/surrealdb.net?color=4c2dcc&amp;amp;label=.NET&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://packagist.org/packages/surrealdb/surrealdb.php&quot;&gt;&lt;img src=&quot;https://img.shields.io/packagist/dt/surrealdb/surrealdb.php?color=4d588b&amp;amp;label=php&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://hub.docker.com/repository/docker/surrealdb/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/surrealdb/surrealdb/total?color=8259dd&amp;amp;label=github%20downloads&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://surrealdb.com/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/902568124350599239?label=discord&amp;amp;style=flat-square&amp;amp;color=5a66f6&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://x.com/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/x-follow_us-222222.svg?style=flat-square&quot; alt=&quot;X&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://dev.to/surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dev-join_us-86f7b7.svg?style=flat-square&quot; alt=&quot;Dev&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.linkedin.com/company/surrealdb/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/linkedin-connect_with_us-0a66c2.svg?style=flat-square&quot; alt=&quot;LinkedIn&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.youtube.com/@surrealdb&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/youtube-subscribe-fc1c1c.svg?style=flat-square&quot; alt=&quot;YouTube&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://surrealdb.com/blog&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/blog.svg?sanitize=true&quot; alt=&quot;Blog&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://github.com/surrealdb/surrealdb&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/github.svg?sanitize=true&quot; alt=&quot;Github&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.linkedin.com/company/surrealdb/&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/linkedin.svg?sanitize=true&quot; alt=&quot;LinkedIn&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://x.com/surrealdb&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/x.svg?sanitize=true&quot; alt=&quot;X&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.youtube.com/@surrealdb&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/youtube.svg?sanitize=true&quot; alt=&quot;YouTube&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://dev.to/surrealdb&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/dev.svg?sanitize=true&quot; alt=&quot;Dev&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/discord&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/discord.svg?sanitize=true&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://stackoverflow.com/questions/tagged/surrealdb&quot;&gt;&lt;img height=&quot;25&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/stack-overflow.svg?sanitize=true&quot; alt=&quot;Stack Overflow&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/whatissurreal.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;What is SurrealDB?&lt;/h2&gt; 
&lt;p&gt;SurrealDB is an end-to-end cloud-native database designed for modern applications, including web, mobile, serverless, Jamstack, backend, and traditional applications. With SurrealDB, you can simplify your database and API infrastructure, reduce development time, and build secure, performant apps quickly and cost-effectively.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key features of SurrealDB include:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reduces development time&lt;/strong&gt;: SurrealDB simplifies your database and API stack by removing the need for most server-side components, allowing you to build secure, performant apps faster and cheaper.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time collaborative API backend service:&lt;/strong&gt; SurrealDB functions as both a database and an API backend service, enabling real-time collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple querying languages:&lt;/strong&gt; SurrealDB supports SQL querying from client devices, GraphQL, ACID transactions, WebSocket connections, structured and unstructured data, graph querying, full-text indexing, and geospatial querying.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Granular access control&lt;/strong&gt;: SurrealDB provides row-level permissions-based access control, giving you the ability to manage data access with precision.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;View the &lt;a href=&quot;https://surrealdb.com/features&quot;&gt;features&lt;/a&gt;, the latest &lt;a href=&quot;https://surrealdb.com/releases&quot;&gt;releases&lt;/a&gt;, and &lt;a href=&quot;https://surrealdb.com/docs&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;img width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/interface.png&quot; alt=&quot;Surrealist&quot; /&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/contents.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#server-side-code&quot;&gt;Server side code&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#client-side-apps&quot;&gt;Client side apps&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#surreal-cloud&quot;&gt;Surreal Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#install-on-macos&quot;&gt;Install on macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#install-on-linux&quot;&gt;Install on Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#install-on-windows&quot;&gt;Install on Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#run-using-docker&quot;&gt;Run using Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#quick-look&quot;&gt;Quick look&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#why-surrealdb&quot;&gt;Why SurrealDB&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#database-api-and-permissions&quot;&gt;Database, API, and permissions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#tables-documents-and-graph&quot;&gt;Tables, documents, and graph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#advanced-inter-document-relations-and-analysis-no-joins-no-pain&quot;&gt;Advanced inter-document relations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#simple-schema-definition-for-frontend-and-backend-development&quot;&gt;Simple schema definition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#connect-and-query-directly-from-web-browsers-and-client-devices&quot;&gt;Connect directly from web-browsers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#query-the-database-with-the-tools-you-want&quot;&gt;Multiple different query methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#realtime-live-queries-and-data-changes-direct-to-application&quot;&gt;Realtime live queries and data changes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#scale-effortlessly-to-hundreds-of-nodes-for-high-availability-and-scalability&quot;&gt;Scale effortlessly for high-availability&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#extend-your-database-with-javascript-functions&quot;&gt;Extend your database with JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#designed-to-be-embedded-or-to-run-distributed-in-the-cloud&quot;&gt;Designed to be embedded or in the cloud&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/features.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Database server, or embedded library&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Multi-row, multi-table ACID transactions&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Single-node, or highly-scalable distributed mode&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Record links and directed typed graph connections&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Store structured and unstructured data&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Incrementally computed views for pre-computed advanced analytics&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Realtime-api layer, and security permissions built in&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Store and model data in any way with tables, documents, and graph&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Simple schema definition for frontend and backend development&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Connect and query directly from web-browsers and client devices&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Use embedded JavaScript functions for custom advanced functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/documentation.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Documentation&lt;/h2&gt; 
&lt;p&gt;For guidance on installation, development, deployment, and administration, take a look at the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href=&quot;https://surrealdb.com/docs&quot;&gt;https://surrealdb.com/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SurrealDB University: &lt;a href=&quot;https://surrealdb.com/learn/fundamentals&quot;&gt;https://surrealdb.com/learn/fundamentals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Aeon&#39;s Surreal Renaissance (interative book): &lt;a href=&quot;https://surrealdb.com/learn/book&quot;&gt;https://surrealdb.com/learn/book&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/gettingstarted.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Getting started&lt;/h2&gt; 
&lt;p&gt;Getting started with SurrealDB is as easy as starting up the SurrealDB database server, choosing your platform, and integrating its SDK into your code. You can easily get started with your platform of choice by reading one of our tutorials.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Server side code&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/rust&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Rust&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/rust.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;JavaScript&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/javascript.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;WebAssembly&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/webassembly.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Node.js&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/nodejs.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Deno&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/deno.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/python&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Python&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/python.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/golang&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Golang&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/golang.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/dotnet&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;.NET&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/dotnet.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/php&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;PHP&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/php.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/java&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Java&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/java.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Client side apps&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;JavaScript&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/javascript.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;WebAssembly&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/webassembly.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;React&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/reactjs.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/javascript&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Next.js&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/nextjs.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://surrealdb.com/docs/integration/sdks/ember&quot;&gt;&lt;img width=&quot;60&quot; title=&quot;Ember.js&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/icons/main/emberjs.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/cloud.svg?raw=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Surreal Cloud&lt;/h2&gt; 
&lt;a href=&quot;https://surrealdb.com/cloud#gh-dark-mode-only&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/white/cloud.png&quot; alt=&quot;Surreal Cloud&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://surrealdb.com/cloud#gh-light-mode-only&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;100%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/black/cloud.png&quot; alt=&quot;Surreal Cloud&quot; /&gt; &lt;/a&gt; 
&lt;p&gt;SurrealDB is available as a &lt;a href=&quot;https://surrealist.app/cloud&quot;&gt;hosted platform&lt;/a&gt;. Forget about infrastructure operations, monitoring, backups or capacity planning. &lt;a href=&quot;https://surrealdb.com/cloud&quot;&gt;Surreal Cloud&lt;/a&gt; allows you to focus on building great products using the power and flexibility of SurrealDB in just a few clicks. Grow from prototype to enterprise-scale. The Surreal Cloud scalable architecture allows your database to evolve as your application grows, ensuring you are always ahead of demand. However if you want to deploy SurrealDB yourself, keep reading below.&lt;/p&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/installation.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Installation&lt;/h2&gt; 
&lt;p&gt;SurrealDB is designed to be simple to install and simple to run - using just one command from your terminal. In addition to traditional installation, SurrealDB can be installed and run with HomeBrew, Docker, or using any other container orchestration tool such as Docker Compose, Docker Swarm, Rancher, or in Kubernetes.&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://surrealdb.com/install&quot;&gt;&lt;img width=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/apple.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&amp;nbsp;Install on macOS&lt;/h4&gt; 
&lt;p&gt;The quickest way to get going with SurrealDB on macOS is to use Homebrew. This will install both the command-line tools, and the SurrealDB server as a single executable. If you don&#39;t use Homebrew, follow the instructions for Linux below to install SurrealDB.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install surrealdb/tap/surreal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to test a version with the latest features, published every night, install the &lt;code&gt;nightly&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install surrealdb/tap/surreal-nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href=&quot;https://surrealdb.com/install&quot;&gt;&lt;img width=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/linux.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&amp;nbsp;Install on Linux&lt;/h4&gt; 
&lt;p&gt;The easiest and preferred way to get going with SurrealDB on Unix operating systems is to install and use the SurrealDB command-line tool. Run the following command in your terminal and follow the on-screen instructions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://install.surrealdb.com | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to run a beta release, before the next version is released, the &lt;code&gt;beta&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://install.surrealdb.com | sh -s -- --beta
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to test a version with the latest features, published every night, install the &lt;code&gt;nightly&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://install.surrealdb.com | sh -s -- --nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href=&quot;https://surrealdb.com/install&quot;&gt;&lt;img width=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/windows.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&amp;nbsp;Install on Windows&lt;/h4&gt; 
&lt;p&gt;The easiest and preferred way to get going with SurrealDB on Windows is to install and use the SurrealDB command-line tool. Run the following command in your terminal and follow the on-screen instructions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iwr https://windows.surrealdb.com -useb | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to test a version with the latest features, published every night, install the &lt;code&gt;nightly&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(irm https://windows.surrealdb.com) } -Nightly&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href=&quot;https://surrealdb.com/install&quot;&gt;&lt;img width=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/docker.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&amp;nbsp;Run using Docker&lt;/h4&gt; 
&lt;p&gt;Docker can be used to manage and run SurrealDB database instances without the need to install any command-line tools. The SurrealDB docker container contains the full command-line tools for importing and exporting data from a running server, or for running a server itself.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm --pull always --name surrealdb -p 8000:8000 surrealdb/surrealdb:latest start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For just getting started with a development server running in memory, you can pass the container a basic initialization to set the user and password as root and enable logging.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm --pull always --name surrealdb -p 8000:8000 surrealdb/surrealdb:latest start --log info --user root --pass root memory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/features.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Quick look&lt;/h2&gt; 
&lt;p&gt;With strongly-typed data types, data can be fully modelled right in the database.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;UPDATE person SET
    waist = &amp;lt;int&amp;gt; &quot;34&quot;,
    height = &amp;lt;float&amp;gt; 201,
    score = &amp;lt;decimal&amp;gt; 0.3 + 0.3 + 0.3 + 0.1
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store dynamically computed fields which are calculated when retrieved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE person SET
    birthday = &amp;lt;datetime&amp;gt; &quot;2007-06-22&quot;,
    can_drive = &amp;lt;future&amp;gt; { time::now() &amp;gt; birthday + 18y }
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Easily work with unstructured or structured data, in schema-less or schema-full mode.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;-- Create a schemafull table
DEFINE TABLE user SCHEMAFULL;

-- Specify fields on the user table
DEFINE FIELD name ON TABLE user TYPE object;
DEFINE FIELD name.first ON TABLE user TYPE string;
DEFINE FIELD name.last ON TABLE user TYPE string;
DEFINE FIELD email ON TABLE user TYPE string ASSERT string::is::email($value);

-- Add a unique index on the email field preventing duplicate values
DEFINE INDEX email ON TABLE user COLUMNS email UNIQUE;

-- Create a new event whenever a user changes their email address
DEFINE EVENT email ON TABLE user WHEN $before.email != $after.email THEN (
    CREATE event SET user = $value, time = time::now(), value = $after.email, action = &#39;email_changed&#39;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Connect records together with fully directed graph edge connections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;-- Add a graph edge between user:tobie and article:surreal
RELATE user:tobie-&amp;gt;write-&amp;gt;article:surreal
    SET time.written = time::now()
;

-- Add a graph edge between specific users and developers
LET $from = (SELECT users FROM company:surrealdb);
LET $devs = (SELECT * FROM user WHERE tags CONTAINS &#39;developer&#39;);
RELATE $from-&amp;gt;like-&amp;gt;$devs UNIQUE
    SET time.connected = time::now()
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Query data flexibly with advanced expressions and graph queries.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;-- Select a nested array, and filter based on an attribute
SELECT emails[WHERE active = true] FROM person;

-- Select all 1st, 2nd, and 3rd level people who this specific person record knows, or likes, as separate outputs
SELECT -&amp;gt;knows-&amp;gt;(? AS f1)-&amp;gt;knows-&amp;gt;(? AS f2)-&amp;gt;(knows, likes AS e3 WHERE influencer = true)-&amp;gt;(? AS f3) FROM person:tobie;

-- Select all person records (and their recipients), who have sent more than 5 emails
SELECT *, -&amp;gt;sent-&amp;gt;email-&amp;gt;to-&amp;gt;person FROM person WHERE count(-&amp;gt;sent-&amp;gt;email) &amp;gt; 5;

-- Select other products purchased by people who purchased this laptop
SELECT &amp;lt;-purchased&amp;lt;-person-&amp;gt;purchased-&amp;gt;product FROM product:laptop;

-- Select products purchased by people in the last 3 weeks who have purchased the same products that we purchased
SELECT -&amp;gt;purchased-&amp;gt;product&amp;lt;-purchased&amp;lt;-person-&amp;gt;(purchased WHERE created_at &amp;gt; time::now() - 3w)-&amp;gt;product FROM person:tobie;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store GeoJSON geographical data types, including points, lines and polygons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;UPDATE city:london SET
    centre = (-0.118092, 51.509865),
    boundary = {
        type: &quot;Polygon&quot;,
        coordinates: [[
            [-0.38314819, 51.37692386], [0.1785278, 51.37692386],
            [0.1785278, 51.61460570], [-0.38314819, 51.61460570],
            [-0.38314819, 51.37692386]
        ]]
    }
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Write custom embedded logic using JavaScript functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE film SET
    ratings = [
        { rating: 6, user: user:bt8e39uh1ouhfm8ko8s0 },
        { rating: 8, user: user:bsilfhu88j04rgs0ga70 },
    ],
    featured = function() {
        return this.ratings.filter(r =&amp;gt; {
            return r.rating &amp;gt;= 7;
        }).map(r =&amp;gt; {
            return { ...r, rating: r.rating * 10 };
        });
    }
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Specify granular access permissions for client and application access.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;-- Specify access permissions for the &#39;post&#39; table
DEFINE TABLE post SCHEMALESS
    PERMISSIONS
        FOR select
            -- Published posts can be selected
            WHERE published = true
            -- A user can select all their own posts
            OR user = $auth.id
        FOR create, update
            -- A user can create or update their own posts
            WHERE user = $auth.id
        FOR delete
            -- A user can delete their own posts
            WHERE user = $auth.id
            -- Or an admin can delete any posts
            OR $auth.admin = true
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/features.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Why SurrealDB?&lt;/h2&gt; 
&lt;p&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/database-api-security.jpg&quot; /&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/multimodel-database.jpg&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Database, API, and permissions&lt;/h3&gt; 
&lt;p&gt;SurrealDB combines the database layer, the querying layer, and the API and authentication layer into one platform. Advanced table-based and row-based customisable access permissions allow for granular data access patterns for different types of users. There&#39;s no need for custom backend code and security rules with complicated database development.&lt;/p&gt; 
&lt;h3&gt;Tables, documents, and graph&lt;/h3&gt; 
&lt;p&gt;As a multi-model database, SurrealDB enables developers to use multiple techniques to store and model data, without having to choose a method in advance. With the use of tables, SurrealDB has similarities with relational databases, but with the added functionality and flexibility of advanced nested fields and arrays. Inter-document record links allow for simple to understand and highly-performant related queries without the use of JOINs, eliminating the N+1 query problem.&lt;/p&gt; 
&lt;p&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/graph-database.jpg&quot; /&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/schema-direct-to-client.jpg&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Advanced inter-document relations and analysis. No JOINs. No pain.&lt;/h3&gt; 
&lt;p&gt;With full graph database functionality SurrealDB enables more advanced querying and analysis. Records (or vertices) can be connected to one another with edges, each with its own record properties and metadata. Simple extensions to traditional SQL queries allow for multi-table, multi-depth document retrieval, efficiently in the database, without the use of complicated JOINs and without bringing the data down to the client.&lt;/p&gt; 
&lt;h3&gt;Simple schema definition for frontend and backend development&lt;/h3&gt; 
&lt;p&gt;With SurrealDB, specify your database and API schema in one place, and define column rules and constraints just once. Once a schema is defined, database access is automatically granted to the relevant users. No more custom API code, and no more GraphQL integration. Simple, flexible, and ready for production in minutes not months.&lt;/p&gt; 
&lt;p&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/browser-sync.jpg&quot; /&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/multiple-integrations.jpg&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Connect and query directly from web-browsers and client devices&lt;/h3&gt; 
&lt;p&gt;Connect directly to SurrealDB from any end-user client device. Run SurrealQL queries directly within web-browsers, ensuring that users can only view or modify the data that they are allowed to access. Highly-performant WebSocket connections allow for efficient bi-directional queries, responses and notifications.&lt;/p&gt; 
&lt;h3&gt;Query the database with the tools you want&lt;/h3&gt; 
&lt;p&gt;Your data, your choice. SurrealDB is designed to be flexible to use, with support for SurrealQL, GraphQL (coming soon), CRUD support over REST, and JSON-RPC querying and modification over WebSockets. With direct-to-client connection with in-built permissions, SurrealDB speeds up the development process, and fits in seamlessly into any tech stack.&lt;/p&gt; 
&lt;p&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/realtime-live-queries.jpg&quot; /&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/scale-up.jpg&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Realtime live queries and data changes direct to application&lt;/h3&gt; 
&lt;p&gt;SurrealDB keeps every client device in-sync with data modifications pushed in realtime to the clients, applications, end-user devices, and server-side libraries. Live SQL queries allow for advanced filtering of the changes to which a client subscribes, and efficient data formats, including DIFFing and PATCHing enable highly-performant web-based data syncing.&lt;/p&gt; 
&lt;h3&gt;Scale effortlessly to hundreds of nodes for high-availability and scalability&lt;/h3&gt; 
&lt;p&gt;SurrealDB can be run as a single in-memory node, or as part of a distributed cluster - offering highly-available and highly-scalable system characteristics. Designed from the ground up to run in a distributed environment, SurrealDB makes use of special techniques when handling multi-table transactions, and document record IDs - with no use of table or row locks.&lt;/p&gt; 
&lt;p&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/database-plugins.jpg&quot; /&gt; &lt;img width=&quot;49%&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/cloud-or-embedded.jpg&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Extend your database with JavaScript functions&lt;/h3&gt; 
&lt;p&gt;Embedded JavaScript functions allow for advanced, custom functionality, with computation logic being moved to the data layer. This improves upon the traditional approach of moving data to the client devices before applying any computation logic, ensuring that only the necessary data is transferred remotely. These advanced JavaScript functions, with support for the ES2020 standard, allow any developer to analyse the data in ever more simple-yet-advanced ways.&lt;/p&gt; 
&lt;h3&gt;Designed to be embedded or to run distributed in the cloud&lt;/h3&gt; 
&lt;p&gt;Built entirely in Rust as a single library, SurrealDB is designed to be used as both an embedded database library with advanced querying functionality, and as a database server which can operate in a distributed cluster. With low memory usage and cpu requirements, the system requirements have been specifically thought through for running in all types of environment.&lt;/p&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/community.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community around the world, for help, ideas, and discussions regarding SurrealDB.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;View our official &lt;a href=&quot;https://surrealdb.com/blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat live with us on &lt;a href=&quot;https://surrealdb.com/discord&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href=&quot;https://x.com/surrealdb&quot;&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Connect with us on &lt;a href=&quot;https://www.linkedin.com/company/surrealdb/&quot;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Visit us on &lt;a href=&quot;https://www.youtube.com/@surrealdb&quot;&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href=&quot;https://dev.to/surrealdb&quot;&gt;Dev community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Questions tagged #surrealdb on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/surrealdb&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/contributing.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Contributing&lt;/h2&gt; 
&lt;p&gt;We would &amp;nbsp;&lt;img width=&quot;15&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/love.svg?sanitize=true&quot; /&gt;&amp;nbsp; for you to get involved with SurrealDB development! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/security.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;Security&lt;/h2&gt; 
&lt;p&gt;For security issues, view our &lt;a href=&quot;https://github.com/surrealdb/surrealdb/security/policy&quot;&gt;vulnerability policy&lt;/a&gt;, view our &lt;a href=&quot;https://surrealdb.com/legal/security&quot;&gt;security policy&lt;/a&gt;, and kindly email us at &lt;a href=&quot;mailto:security@surrealdb.com&quot;&gt;security@surrealdb.com&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; 
&lt;h2&gt;&lt;img height=&quot;20&quot; src=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/license.svg?sanitize=true&quot; /&gt;&amp;nbsp;&amp;nbsp;License&lt;/h2&gt; 
&lt;p&gt;Source code for SurrealDB is variously licensed under a number of different licenses. A copy of each license can be found in &lt;a href=&quot;https://github.com/surrealdb&quot;&gt;each repository&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Libraries and SDKs, each located in its own distinct repository, are released under either the &lt;a href=&quot;https://github.com/surrealdb/license/raw/main/APL.txt&quot;&gt;Apache License 2.0&lt;/a&gt; or &lt;a href=&quot;https://github.com/surrealdb/license/raw/main/MIT.txt&quot;&gt;MIT License&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Certain core database components, each located in its own distinct repository, are released under the &lt;a href=&quot;https://github.com/surrealdb/license/raw/main/APL.txt&quot;&gt;Apache License 2.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Core database code for SurrealDB, located in &lt;a href=&quot;https://github.com/surrealdb/surrealdb&quot;&gt;this repository&lt;/a&gt;, is released under the &lt;a href=&quot;https://raw.githubusercontent.com/surrealdb/surrealdb/main/LICENSE&quot;&gt;Business Source License 1.1&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, see the &lt;a href=&quot;https://github.com/surrealdb/license&quot;&gt;licensing information&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gleam-lang/gleam</title>
      <link>https://github.com/gleam-lang/gleam</link>
      <description>&lt;p&gt;⭐️ A friendly language for building type-safe, scalable systems!&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/gleam-lang/gleam/main/images/lucy.png&quot; alt=&quot;Lucy, Gleam&#39;s mascot&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/gleam-lang/gleam/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/gleam-lang/gleam&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/Fm8Pwmy&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/768594524158427167?color=blue&quot; alt=&quot;Discord chat&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- A spacer --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;p&gt;Gleam is a friendly language for building type-safe systems that scale! For more information see &lt;a href=&quot;https://gleam.run&quot;&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Gleam is kindly supported by its sponsors. If you would like to support Gleam please consider sponsoring its development &lt;a href=&quot;https://github.com/sponsors/lpil&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you to our sponsors! Gleam would not be possible without you.&lt;/p&gt; 
&lt;!-- Below this line this file is autogenerated --&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/agundy&quot;&gt;Aaron Gunderson&lt;/a&gt; - &lt;a href=&quot;https://github.com/abeljim&quot;&gt;Abel Jimenez&lt;/a&gt; - &lt;a href=&quot;https://github.com/ad-ops&quot;&gt;ad-ops&lt;/a&gt; - &lt;a href=&quot;https://github.com/AdamBrodzinski&quot;&gt;Adam Brodzinski&lt;/a&gt; - &lt;a href=&quot;https://github.com/adjohnston&quot;&gt;Adam Johnston&lt;/a&gt; - &lt;a href=&quot;https://github.com/adam-wyluda&quot;&gt;Adam Wyłuda&lt;/a&gt; - &lt;a href=&quot;https://github.com/thebugcatcher&quot;&gt;Adi Iyengar&lt;/a&gt; - &lt;a href=&quot;https://github.com/amouat&quot;&gt;Adrian Mouat&lt;/a&gt; - &lt;a href=&quot;https://github.com/JitPackJoyride&quot;&gt;Ajit Krishna&lt;/a&gt; - &lt;a href=&quot;https://github.com/Guria&quot;&gt;Aleksei Gurianov&lt;/a&gt; - &lt;a href=&quot;https://alembic.com.au&quot;&gt;Alembic&lt;/a&gt; - &lt;a href=&quot;https://github.com/ahouseago&quot;&gt;Alex Houseago&lt;/a&gt; - &lt;a href=&quot;https://github.com/rawhat&quot;&gt;Alex Manning&lt;/a&gt; - &lt;a href=&quot;https://github.com/aexvir&quot;&gt;Alex Viscreanu&lt;/a&gt; - &lt;a href=&quot;https://github.com/akoutmos&quot;&gt;Alexander Koutmos&lt;/a&gt; - &lt;a href=&quot;https://github.com/muonoum&quot;&gt;Alexander Stensrud&lt;/a&gt; - &lt;a href=&quot;https://github.com/defgenx&quot;&gt;Alexandre Del Vecchio&lt;/a&gt; - &lt;a href=&quot;https://github.com/Acepie&quot;&gt;Ameen Radwan&lt;/a&gt; - &lt;a href=&quot;https://github.com/abueide&quot;&gt;Andrea Bueide&lt;/a&gt; - &lt;a href=&quot;https://github.com/AndreHogberg&quot;&gt;AndreHogberg&lt;/a&gt; - &lt;a href=&quot;https://github.com/andremw&quot;&gt;André Mazoni&lt;/a&gt; - &lt;a href=&quot;https://github.com/antharuu&quot;&gt;Antharuu&lt;/a&gt; - &lt;a href=&quot;https://github.com/anthony-khong&quot;&gt;Anthony Khong&lt;/a&gt; - &lt;a href=&quot;https://github.com/Illbjorn&quot;&gt;Anthony Maxwell&lt;/a&gt; - &lt;a href=&quot;https://github.com/amscotti&quot;&gt;Anthony Scotti&lt;/a&gt; - &lt;a href=&quot;https://github.com/aweagel&quot;&gt;Arthur Weagel&lt;/a&gt; - &lt;a href=&quot;https://github.com/aryairani&quot;&gt;Arya Irani&lt;/a&gt; - &lt;a href=&quot;https://github.com/azureflash&quot;&gt;Azure Flash&lt;/a&gt; - &lt;a href=&quot;https://github.com/chiroptical&quot;&gt;Barry Moore&lt;/a&gt; - &lt;a href=&quot;https://github.com/bartekgorny&quot;&gt;Bartek Górny&lt;/a&gt; - &lt;a href=&quot;https://github.com/BenitoEck&quot;&gt;Ben&lt;/a&gt; - &lt;a href=&quot;https://github.com/requestben&quot;&gt;Ben Martin&lt;/a&gt; - &lt;a href=&quot;https://github.com/bgmarx&quot;&gt;Ben Marx&lt;/a&gt; - &lt;a href=&quot;https://github.com/benmyles&quot;&gt;Ben Myles&lt;/a&gt; - &lt;a href=&quot;https://github.com/bbkane&quot;&gt;Benjamin Kane&lt;/a&gt; - &lt;a href=&quot;https://github.com/drteeth&quot;&gt;Benjamin Moss&lt;/a&gt; - &lt;a href=&quot;https://github.com/bgwdotdev&quot;&gt;bgw&lt;/a&gt; - &lt;a href=&quot;https://github.com/bjartelund&quot;&gt;Bjarte Aarmo Lund&lt;/a&gt; - &lt;a href=&quot;https://github.com/00bpa&quot;&gt;Bjoern Paschen&lt;/a&gt; - &lt;a href=&quot;https://github.com/bmehder&quot;&gt;Brad Mehder&lt;/a&gt; - &lt;a href=&quot;https://github.com/brettcannon&quot;&gt;Brett Cannon&lt;/a&gt; - &lt;a href=&quot;https://github.com/brettkolodny&quot;&gt;Brett Kolodny&lt;/a&gt; - &lt;a href=&quot;https://github.com/brian-dawn&quot;&gt;Brian Dawn&lt;/a&gt; - &lt;a href=&quot;https://github.com/bglusman&quot;&gt;Brian Glusman&lt;/a&gt; - &lt;a href=&quot;https://github.com/bruce&quot;&gt;Bruce Williams&lt;/a&gt; - &lt;a href=&quot;https://github.com/nono&quot;&gt;Bruno Michel&lt;/a&gt; - &lt;a href=&quot;https://github.com/bucsi&quot;&gt;bucsi&lt;/a&gt; - &lt;a href=&quot;https://github.com/camray&quot;&gt;Cam Ray&lt;/a&gt; - &lt;a href=&quot;https://github.com/cameronpresley&quot;&gt;Cameron Presley&lt;/a&gt; - &lt;a href=&quot;https://github.com/carlomunguia&quot;&gt;Carlo Munguia&lt;/a&gt; - &lt;a href=&quot;https://github.com/csaltos&quot;&gt;Carlos Saltos&lt;/a&gt; - &lt;a href=&quot;https://github.com/chadselph&quot;&gt;Chad Selph&lt;/a&gt; - &lt;a href=&quot;https://github.com/ctdio&quot;&gt;Charlie Duong&lt;/a&gt; - &lt;a href=&quot;https://github.com/charlie-n01r&quot;&gt;Charlie Govea&lt;/a&gt; - &lt;a href=&quot;https://github.com/choonkeat&quot;&gt;Chew Choon Keat&lt;/a&gt; - &lt;a href=&quot;https://github.com/ceedon&quot;&gt;Chris Donnelly&lt;/a&gt; - &lt;a href=&quot;https://github.com/Morzaram&quot;&gt;Chris King&lt;/a&gt; - &lt;a href=&quot;https://github.com/chrislloyd&quot;&gt;Chris Lloyd&lt;/a&gt; - &lt;a href=&quot;https://github.com/utilForever&quot;&gt;Chris Ohk&lt;/a&gt; - &lt;a href=&quot;https://github.com/Chriscbr&quot;&gt;Chris Rybicki&lt;/a&gt; - &lt;a href=&quot;https://github.com/cvincent&quot;&gt;Chris Vincent&lt;/a&gt; - &lt;a href=&quot;https://github.com/christophershirk&quot;&gt;Christopher David Shirk&lt;/a&gt; - &lt;a href=&quot;https://github.com/devries&quot;&gt;Christopher De Vries&lt;/a&gt; - &lt;a href=&quot;https://github.com/cdaringe&quot;&gt;Christopher Dieringer&lt;/a&gt; - &lt;a href=&quot;https://github.com/christopherhjung&quot;&gt;Christopher Jung&lt;/a&gt; - &lt;a href=&quot;https://github.com/christhekeele&quot;&gt;Christopher Keele&lt;/a&gt; - &lt;a href=&quot;https://github.com/specialblend&quot;&gt;CJ Salem&lt;/a&gt; - &lt;a href=&quot;https://github.com/CliffordAnderson&quot;&gt;Clifford Anderson&lt;/a&gt; - &lt;a href=&quot;https://github.com/coder&quot;&gt;Coder&lt;/a&gt; - &lt;a href=&quot;https://github.com/colelawrence&quot;&gt;Cole Lawrence&lt;/a&gt; - &lt;a href=&quot;https://github.com/insanitybit&quot;&gt;Colin&lt;/a&gt; - &lt;a href=&quot;https://github.com/Comamoca&quot;&gt;Comamoca&lt;/a&gt; - &lt;a href=&quot;https://github.com/comet-ml&quot;&gt;Comet&lt;/a&gt; - &lt;a href=&quot;https://github.com/Lucostus&quot;&gt;Constantin (Cleo) Winkler&lt;/a&gt; - &lt;a href=&quot;https://github.com/jcorentin&quot;&gt;Corentin J.&lt;/a&gt; - &lt;a href=&quot;https://github.com/sdaigo&quot;&gt;Daigo Shitara&lt;/a&gt; - &lt;a href=&quot;https://github.com/dvic&quot;&gt;Damir Vandic&lt;/a&gt; - &lt;a href=&quot;https://github.com/d2718&quot;&gt;Dan&lt;/a&gt; - &lt;a href=&quot;https://github.com/ddresselhaus&quot;&gt;Dan Dresselhaus&lt;/a&gt; - &lt;a href=&quot;https://github.com/strongoose&quot;&gt;Dan Strong&lt;/a&gt; - &lt;a href=&quot;https://github.com/Daniel-Shunom&quot;&gt;Daniel S Jeremiah&lt;/a&gt; - &lt;a href=&quot;https://github.com/DanielleMaywood&quot;&gt;Danielle Maywood&lt;/a&gt; - &lt;a href=&quot;https://github.com/ndan&quot;&gt;Daniil Nevdah&lt;/a&gt; - &lt;a href=&quot;https://github.com/pinnet&quot;&gt;Danny Arnold&lt;/a&gt; - &lt;a href=&quot;https://github.com/despairblue&quot;&gt;Danny Martini&lt;/a&gt; - &lt;a href=&quot;https://github.com/dbernheisel&quot;&gt;David Bernheisel&lt;/a&gt; - &lt;a href=&quot;https://github.com/davidcornu&quot;&gt;David Cornu&lt;/a&gt; - &lt;a href=&quot;https://github.com/dangdennis&quot;&gt;Dennis Dang&lt;/a&gt; - &lt;a href=&quot;https://github.com/dennistruemper&quot;&gt;dennistruemper&lt;/a&gt; - &lt;a href=&quot;https://github.com/devinalvaro&quot;&gt;devinalvaro&lt;/a&gt; - &lt;a href=&quot;https://github.com/diemogebhardt&quot;&gt;Diemo Gebhardt&lt;/a&gt; - &lt;a href=&quot;https://github.com/floodfx&quot;&gt;Donnie Flood&lt;/a&gt; - &lt;a href=&quot;https://github.com/dbanty&quot;&gt;Dylan Anthony&lt;/a&gt; - &lt;a href=&quot;https://github.com/gdcrisp&quot;&gt;Dylan Carlson&lt;/a&gt; - &lt;a href=&quot;https://github.com/edhinrichsen&quot;&gt;Ed Hinrichsen&lt;/a&gt; - &lt;a href=&quot;https://github.com/edongashi&quot;&gt;Edon Gashi&lt;/a&gt; - &lt;a href=&quot;https://github.com/enoonan&quot;&gt;Eileen Noonan&lt;/a&gt; - &lt;a href=&quot;https://github.com/dropwhile&quot;&gt;eli&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/ijomeli/&quot;&gt;elke&lt;/a&gt; - &lt;a href=&quot;https://github.com/Emma-Fuller&quot;&gt;Emma&lt;/a&gt; - &lt;a href=&quot;https://github.com/EMRTS&quot;&gt;EMR Technical Solutions&lt;/a&gt; - &lt;a href=&quot;https://github.com/yellowsman&quot;&gt;Endo Shogo&lt;/a&gt; - &lt;a href=&quot;https://github.com/ekosz&quot;&gt;Eric Koslow&lt;/a&gt; - &lt;a href=&quot;https://github.com/eterps&quot;&gt;Erik Terpstra&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/erikareads/&quot;&gt;erikareads&lt;/a&gt; - &lt;a href=&quot;https://github.com/ErikML&quot;&gt;ErikML&lt;/a&gt; - &lt;a href=&quot;https://github.com/erlend-axelsson&quot;&gt;erlend-axelsson&lt;/a&gt; - &lt;a href=&quot;https://github.com/oberernst&quot;&gt;Ernesto Malave&lt;/a&gt; - &lt;a href=&quot;https://github.com/EthanOlpin&quot;&gt;Ethan Olpin&lt;/a&gt; - &lt;a href=&quot;https://github.com/evaldobratti&quot;&gt;Evaldo Bratti&lt;/a&gt; - &lt;a href=&quot;https://github.com/evanj2357&quot;&gt;Evan Johnson&lt;/a&gt; - &lt;a href=&quot;https://github.com/evanasse&quot;&gt;evanasse&lt;/a&gt; - &lt;a href=&quot;https://github.com/fabridamicelli&quot;&gt;Fabrizio Damicelli&lt;/a&gt; - &lt;a href=&quot;https://github.com/fmesteban&quot;&gt;Fede Esteban&lt;/a&gt; - &lt;a href=&quot;https://github.com/yerTools&quot;&gt;Felix&lt;/a&gt; - &lt;a href=&quot;https://github.com/nandofarias&quot;&gt;Fernando Farias&lt;/a&gt; - &lt;a href=&quot;https://github.com/ffigiel&quot;&gt;Filip Figiel&lt;/a&gt; - &lt;a href=&quot;https://github.com/floriank&quot;&gt;Florian Kraft&lt;/a&gt; - &lt;a href=&quot;https://github.com/francishamel&quot;&gt;Francis Hamel&lt;/a&gt; - &lt;a href=&quot;https://github.com/Frank-III&quot;&gt;frankwang&lt;/a&gt; - &lt;a href=&quot;https://github.com/gvrooyen&quot;&gt;G-J van Rooyen&lt;/a&gt; - &lt;a href=&quot;https://github.com/gabrielvincent&quot;&gt;Gabriel Vincent&lt;/a&gt; - &lt;a href=&quot;https://github.com/olgam4&quot;&gt;gamachexx&lt;/a&gt; - &lt;a href=&quot;https://github.com/allenap&quot;&gt;Gavin Panella&lt;/a&gt; - &lt;a href=&quot;https://github.com/gahjelle&quot;&gt;Geir Arne Hjelle&lt;/a&gt; - &lt;a href=&quot;https://github.com/brasilikum&quot;&gt;Georg Hartmann&lt;/a&gt; - &lt;a href=&quot;https://github.com/gmartsenkov&quot;&gt;Georgi Martsenkov&lt;/a&gt; - &lt;a href=&quot;https://github.com/ggobbe&quot;&gt;ggobbe&lt;/a&gt; - &lt;a href=&quot;https://github.com/giacomocavalieri&quot;&gt;Giacomo Cavalieri&lt;/a&gt; - &lt;a href=&quot;https://github.com/giovannibonetti&quot;&gt;Giovanni Kock Bonetti&lt;/a&gt; - &lt;a href=&quot;https://github.com/GV14982&quot;&gt;Graham Vasquez&lt;/a&gt; - &lt;a href=&quot;https://github.com/YoyoSaur&quot;&gt;Grant Everett&lt;/a&gt; - &lt;a href=&quot;https://github.com/nirev&quot;&gt;Guilherme de Maio&lt;/a&gt; - &lt;a href=&quot;https://github.com/guillheu&quot;&gt;Guillaume Heu&lt;/a&gt; - &lt;a href=&quot;https://github.com/ghivert&quot;&gt;Guillaume Hivert&lt;/a&gt; - &lt;a href=&quot;https://github.com/hammad-r-javed&quot;&gt;Hammad Javed&lt;/a&gt; - &lt;a href=&quot;https://github.com/kwando&quot;&gt;Hannes Nevalainen&lt;/a&gt; - &lt;a href=&quot;https://github.com/ildorn&quot;&gt;Hannes Schnaitter&lt;/a&gt; - &lt;a href=&quot;https://github.com/oderwat&quot;&gt;Hans Raaf&lt;/a&gt; - &lt;a href=&quot;https://github.com/hayleigh-dot-dev&quot;&gt;Hayleigh Thompson&lt;/a&gt; - &lt;a href=&quot;https://github.com/hibachrach&quot;&gt;Hazel Bachrach&lt;/a&gt; - &lt;a href=&quot;https://github.com/hdahlheim&quot;&gt;Henning Dahlheim&lt;/a&gt; - &lt;a href=&quot;https://github.com/tudborg&quot;&gt;Henrik Tudborg&lt;/a&gt; - &lt;a href=&quot;https://github.com/henrysdev&quot;&gt;Henry Warren&lt;/a&gt; - &lt;a href=&quot;https://github.com/losfair&quot;&gt;Heyang Zhou&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/Hizuru3/&quot;&gt;Hizuru3&lt;/a&gt; - &lt;a href=&quot;https://github.com/hubertmalkowski&quot;&gt;Hubert Małkowski&lt;/a&gt; - &lt;a href=&quot;https://github.com/iainh&quot;&gt;Iain H&lt;/a&gt; - &lt;a href=&quot;https://github.com/Ian-GL&quot;&gt;Ian González&lt;/a&gt; - &lt;a href=&quot;https://github.com/ianmjones&quot;&gt;Ian M. Jones&lt;/a&gt; - &lt;a href=&quot;https://github.com/igordsm&quot;&gt;Igor Montagner&lt;/a&gt; - &lt;a href=&quot;https://github.com/inoas&quot;&gt;inoas&lt;/a&gt; - &lt;a href=&quot;https://github.com/graphiteisaac&quot;&gt;Isaac&lt;/a&gt; - &lt;a href=&quot;https://github.com/isaacharrisholt&quot;&gt;Isaac Harris-Holt&lt;/a&gt; - &lt;a href=&quot;https://github.com/imcquee&quot;&gt;Isaac McQueen&lt;/a&gt; - &lt;a href=&quot;https://github.com/bozso&quot;&gt;István Bozsó&lt;/a&gt; - &lt;a href=&quot;https://github.com/ivarvong&quot;&gt;Ivar Vong&lt;/a&gt; - &lt;a href=&quot;https://github.com/jacobdalamb&quot;&gt;Jacob Lamb&lt;/a&gt; - &lt;a href=&quot;https://github.com/jakecleary&quot;&gt;Jake Cleary&lt;/a&gt; - &lt;a href=&quot;https://github.com/jzwood&quot;&gt;Jake Wood&lt;/a&gt; - &lt;a href=&quot;https://github.com/jakob753951&quot;&gt;Jakob Ladegaard Møller&lt;/a&gt; - &lt;a href=&quot;https://github.com/jamesbirtles&quot;&gt;James Birtles&lt;/a&gt; - &lt;a href=&quot;https://github.com/jamesmacaulay&quot;&gt;James MacAulay&lt;/a&gt; - &lt;a href=&quot;https://github.com/janpieper&quot;&gt;Jan Pieper&lt;/a&gt; - &lt;a href=&quot;https://github.com/monzool&quot;&gt;Jan Skriver Sørensen&lt;/a&gt; - &lt;a href=&quot;https://github.com/hypirion&quot;&gt;Jean Niklas L&#39;orange&lt;/a&gt; - &lt;a href=&quot;https://github.com/MightyGoldenOctopus&quot;&gt;Jean-Adrien Ducastaing&lt;/a&gt; - &lt;a href=&quot;https://github.com/jlgeering&quot;&gt;Jean-Luc Geering&lt;/a&gt; - &lt;a href=&quot;https://github.com/jihem&quot;&gt;Jean-Marc QUERE&lt;/a&gt; - &lt;a href=&quot;https://github.com/okkdev&quot;&gt;Jen Stehlik&lt;/a&gt; - &lt;a href=&quot;https://github.com/shepherdjerred&quot;&gt;Jerred Shepherd&lt;/a&gt; - &lt;a href=&quot;https://github.com/jiangplus&quot;&gt;jiangplus&lt;/a&gt; - &lt;a href=&quot;https://github.com/hunkyjimpjorps&quot;&gt;Jimpjorps™&lt;/a&gt; - &lt;a href=&quot;https://github.com/joeykilpatrick&quot;&gt;Joey Kilpatrick&lt;/a&gt; - &lt;a href=&quot;https://github.com/joeytrapp&quot;&gt;Joey Trapp&lt;/a&gt; - &lt;a href=&quot;https://github.com/johan-st&quot;&gt;Johan Strand&lt;/a&gt; - &lt;a href=&quot;https://github.com/JohnBjrk&quot;&gt;John Björk&lt;/a&gt; - &lt;a href=&quot;https://github.com/jmpavlick&quot;&gt;John Pavlick&lt;/a&gt; - &lt;a href=&quot;https://github.com/jrstrunk&quot;&gt;John Strunk&lt;/a&gt; - &lt;a href=&quot;https://github.com/xjojorx&quot;&gt;Jojor&lt;/a&gt; - &lt;a href=&quot;https://github.com/jonlambert&quot;&gt;Jon Lambert&lt;/a&gt; - &lt;a href=&quot;https://github.com/igern&quot;&gt;Jonas E. P&lt;/a&gt; - &lt;a href=&quot;https://github.com/JonasHedEng&quot;&gt;Jonas Hedman Engström&lt;/a&gt; - &lt;a href=&quot;https://github.com/jooaf&quot;&gt;jooaf&lt;/a&gt; - &lt;a href=&quot;https://github.com/joseph-lozano&quot;&gt;Joseph Lozano&lt;/a&gt; - &lt;a href=&quot;https://github.com/joshocalico&quot;&gt;Joshua Steele&lt;/a&gt; - &lt;a href=&quot;https://github.com/nineluj&quot;&gt;Julian Hirn&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/d2quadra/&quot;&gt;Julian Lukwata&lt;/a&gt; - &lt;a href=&quot;https://github.com/schurhammer&quot;&gt;Julian Schurhammer&lt;/a&gt; - &lt;a href=&quot;https://github.com/justinlubin&quot;&gt;Justin Lubin&lt;/a&gt; - &lt;a href=&quot;https://github.com/Neofox&quot;&gt;Jérôme Schaeffer&lt;/a&gt; - &lt;a href=&quot;https://github.com/Kamila-P&quot;&gt;KamilaP&lt;/a&gt; - &lt;a href=&quot;https://github.com/jkbrinso&quot;&gt;Kemp Brinson&lt;/a&gt; - &lt;a href=&quot;https://github.com/keroami&quot;&gt;Kero van Gelder&lt;/a&gt; - &lt;a href=&quot;https://github.com/kevinschweikert&quot;&gt;Kevin Schweikert&lt;/a&gt; - &lt;a href=&quot;https://github.com/hamptokr&quot;&gt;Kramer Hampton&lt;/a&gt; - &lt;a href=&quot;https://github.com/Bearfinn&quot;&gt;Kritsada Sunthornwutthikrai&lt;/a&gt; - &lt;a href=&quot;https://github.com/krzysztofgb&quot;&gt;Krzysztof Gasienica-Bednarz&lt;/a&gt; - &lt;a href=&quot;https://github.com/leah-u&quot;&gt;Leah Ulmschneider&lt;/a&gt; - &lt;a href=&quot;https://github.com/leostera&quot;&gt;Leandro Ostera&lt;/a&gt; - &lt;a href=&quot;https://github.com/leejarvis&quot;&gt;Lee Jarvis&lt;/a&gt; - &lt;a href=&quot;https://github.com/rcoder&quot;&gt;Lennon Day-Reynolds&lt;/a&gt; - &lt;a href=&quot;https://github.com/leonqadirie&quot;&gt;Leon Qadirie&lt;/a&gt; - &lt;a href=&quot;https://github.com/LeartS&quot;&gt;Leonardo Donelli&lt;/a&gt; - &lt;a href=&quot;https://github.com/lexx27&quot;&gt;Lexx&lt;/a&gt; - &lt;a href=&quot;https://github.com/defp&quot;&gt;lidashuang&lt;/a&gt; - &lt;a href=&quot;https://github.com/LilyRose2798&quot;&gt;Lily Rose&lt;/a&gt; - &lt;a href=&quot;https://github.com/lbjarre&quot;&gt;Lukas Bjarre&lt;/a&gt; - &lt;a href=&quot;https://github.com/lamdor&quot;&gt;Luke Amdor&lt;/a&gt; - &lt;a href=&quot;https://github.com/2kool4idkwhat&quot;&gt;Luna&lt;/a&gt; - &lt;a href=&quot;https://github.com/manuel-rubio&quot;&gt;Manuel Rubio&lt;/a&gt; - &lt;a href=&quot;https://github.com/ideaMarcos&quot;&gt;Marcos&lt;/a&gt; - &lt;a href=&quot;https://github.com/marcusandre&quot;&gt;marcusandre&lt;/a&gt; - &lt;a href=&quot;https://github.com/AYM1607&quot;&gt;Mariano Uvalle&lt;/a&gt; - &lt;a href=&quot;https://github.com/mariuskalvo&quot;&gt;Marius Kalvø&lt;/a&gt; - &lt;a href=&quot;https://github.com/mkdynamic&quot;&gt;Mark Dodwell&lt;/a&gt; - &lt;a href=&quot;https://github.com/markholmes&quot;&gt;Mark Holmes&lt;/a&gt; - &lt;a href=&quot;https://github.com/markmark206&quot;&gt;Mark Markaryan&lt;/a&gt; - &lt;a href=&quot;https://github.com/Janiczek&quot;&gt;Martin Janiczek&lt;/a&gt; - &lt;a href=&quot;https://github.com/poelstra&quot;&gt;Martin Poelstra&lt;/a&gt; - &lt;a href=&quot;https://github.com/rechsteiner&quot;&gt;Martin Rechsteiner &lt;/a&gt; - &lt;a href=&quot;https://github.com/martonkaufmann&quot;&gt;martonkaufmann&lt;/a&gt; - &lt;a href=&quot;https://github.com/mwarger&quot;&gt;Mat Warger&lt;/a&gt; - &lt;a href=&quot;https://github.com/han-tyumi&quot;&gt;Matt Champagne&lt;/a&gt; - &lt;a href=&quot;https://github.com/mhheise&quot;&gt;Matt Heise&lt;/a&gt; - &lt;a href=&quot;https://github.com/m&quot;&gt;Matt Mullenweg&lt;/a&gt; - &lt;a href=&quot;https://github.com/matthewrobinsondev&quot;&gt;Matt Robinson&lt;/a&gt; - &lt;a href=&quot;https://github.com/matt-savvy&quot;&gt;Matt Savoia&lt;/a&gt; - &lt;a href=&quot;https://github.com/mattvanhorn&quot;&gt;Matt Van Horn&lt;/a&gt; - &lt;a href=&quot;https://github.com/matthewj-dev&quot;&gt;Matthew Jackson&lt;/a&gt; - &lt;a href=&quot;https://github.com/mwhitworth&quot;&gt;Matthew Whitworth&lt;/a&gt; - &lt;a href=&quot;https://github.com/maxwelldb&quot;&gt;Max Bridges&lt;/a&gt; - &lt;a href=&quot;https://github.com/maxmcd&quot;&gt;Max McDonnell&lt;/a&gt; - &lt;a href=&quot;https://github.com/metame&quot;&gt;metame&lt;/a&gt; - &lt;a href=&quot;https://github.com/metatexx&quot;&gt;METATEXX GmbH&lt;/a&gt; - &lt;a href=&quot;https://github.com/amiroff&quot;&gt;Metin Emiroğlu&lt;/a&gt; - &lt;a href=&quot;https://github.com/stunthamster&quot;&gt;Michael Duffy&lt;/a&gt; - &lt;a href=&quot;https://github.com/michaeljones&quot;&gt;Michael Jones&lt;/a&gt; - &lt;a href=&quot;https://github.com/monocursive&quot;&gt;Michael Mazurczak&lt;/a&gt; - &lt;a href=&quot;https://github.com/mrmcc3&quot;&gt;Michael McClintock&lt;/a&gt; - &lt;a href=&quot;https://github.com/karlsson&quot;&gt;Mikael Karlsson&lt;/a&gt; - &lt;a href=&quot;https://github.com/mroach&quot;&gt;Mike Roach&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/mikej/&quot;&gt;Mikey J&lt;/a&gt; - &lt;a href=&quot;https://github.com/MoeDevelops&quot;&gt;MoeDev&lt;/a&gt; - &lt;a href=&quot;https://github.com/rykawamu&quot;&gt;MzRyuKa&lt;/a&gt; - &lt;a href=&quot;https://github.com/n8nio&quot;&gt;n8n - Workflow Automation&lt;/a&gt; - &lt;a href=&quot;https://github.com/natanaelsirqueira&quot;&gt;Natanael Sirqueira&lt;/a&gt; - &lt;a href=&quot;https://github.com/nathanielknight&quot;&gt;Nathaniel Knight&lt;/a&gt; - &lt;a href=&quot;https://github.com/NFIBrokerage&quot;&gt;NFIBrokerage&lt;/a&gt; - &lt;a href=&quot;https://github.com/nchapman&quot;&gt;Nick Chapman&lt;/a&gt; - &lt;a href=&quot;https://github.com/ndreynolds&quot;&gt;Nick Reynolds&lt;/a&gt; - &lt;a href=&quot;https://github.com/NicklasXYZ&quot;&gt;Nicklas Sindlev Andersen&lt;/a&gt; - &lt;a href=&quot;https://github.com/NicoVIII&quot;&gt;NicoVIII&lt;/a&gt; - &lt;a href=&quot;https://github.com/mrniket&quot;&gt;Niket Shah&lt;/a&gt; - &lt;a href=&quot;https://github.com/blink1415&quot;&gt;Nikolai Steen Kjosnes&lt;/a&gt; - &lt;a href=&quot;https://github.com/ninanomenon&quot;&gt;Ninaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&lt;/a&gt; - &lt;a href=&quot;http://www.ninefx.com&quot;&gt;NineFX&lt;/a&gt; - &lt;a href=&quot;https://github.com/Nezteb&quot;&gt;Noah Betzen&lt;/a&gt; - &lt;a href=&quot;https://github.com/nomio&quot;&gt;Nomio&lt;/a&gt; - &lt;a href=&quot;https://github.com/nunulk&quot;&gt;nunulk&lt;/a&gt; - &lt;a href=&quot;https://github.com/oceanlewis&quot;&gt;Ocean&lt;/a&gt; - &lt;a href=&quot;https://github.com/osebelin&quot;&gt;Olaf Sebelin&lt;/a&gt; - &lt;a href=&quot;https://github.com/OldhamMade&quot;&gt;OldhamMade&lt;/a&gt; - &lt;a href=&quot;https://github.com/CanadaHonk&quot;&gt;Oliver Medhurst&lt;/a&gt; - &lt;a href=&quot;https://github.com/otosky&quot;&gt;Oliver Tosky&lt;/a&gt; - &lt;a href=&quot;https://github.com/nnuuvv&quot;&gt;ollie&lt;/a&gt; - &lt;a href=&quot;https://github.com/optizio&quot;&gt;optizio&lt;/a&gt; - &lt;a href=&quot;https://github.com/Davorak&quot;&gt;Patrick Wheeler&lt;/a&gt; - &lt;a href=&quot;https://github.com/pguse&quot;&gt;Paul Guse&lt;/a&gt; - &lt;a href=&quot;https://github.com/Tulkdan&quot;&gt;Pedro Correa&lt;/a&gt; - &lt;a href=&quot;https://github.com/petejodo&quot;&gt;Pete Jodo&lt;/a&gt; - &lt;a href=&quot;https://github.com/pvsr&quot;&gt;Peter Rice&lt;/a&gt; - &lt;a href=&quot;https://github.com/philpax&quot;&gt;Philpax&lt;/a&gt; - &lt;a href=&quot;https://github.com/pierrot-lc&quot;&gt;Pierrot&lt;/a&gt; - &lt;a href=&quot;https://github.com/qdentity&quot;&gt;Qdentity&lt;/a&gt; - &lt;a href=&quot;https://github.com/raquentin&quot;&gt;Race Williams&lt;/a&gt; - &lt;a href=&quot;https://github.com/stoft&quot;&gt;Rasmus&lt;/a&gt; - &lt;a href=&quot;https://github.com/chouzar&quot;&gt;Raúl Chouza &lt;/a&gt; - &lt;a href=&quot;https://github.com/renatillas&quot;&gt;re.natillas&lt;/a&gt; - &lt;a href=&quot;https://github.com/redmar&quot;&gt;Redmar Kerkhoff&lt;/a&gt; - &lt;a href=&quot;https://github.com/reillysiemens&quot;&gt;Reilly Tucker Siemens&lt;/a&gt; - &lt;a href=&quot;https://github.com/renatomassaro&quot;&gt;Renato Massaro&lt;/a&gt; - &lt;a href=&quot;https://github.com/renovatorruler&quot;&gt;Renovator&lt;/a&gt; - &lt;a href=&quot;https://github.com/richard-viney&quot;&gt;Richard Viney&lt;/a&gt; - &lt;a href=&quot;https://github.com/rico&quot;&gt;Rico Leuthold&lt;/a&gt; - &lt;a href=&quot;https://github.com/rinx&quot;&gt;Rintaro Okamura&lt;/a&gt; - &lt;a href=&quot;https://github.com/ripta&quot;&gt;Ripta Pasay&lt;/a&gt; - &lt;a href=&quot;https://github.com/TanklesXL&quot;&gt;Robert Attard&lt;/a&gt; - &lt;a href=&quot;https://github.com/rellen&quot;&gt;Robert Ellen&lt;/a&gt; - &lt;a href=&quot;https://github.com/malkomalko&quot;&gt;Robert Malko&lt;/a&gt; - &lt;a href=&quot;https://github.com/Papipo&quot;&gt;Rodrigo Álvarez&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/Karakunai/&quot;&gt;Ronan Harris&lt;/a&gt; - &lt;a href=&quot;https://github.com/rotabull&quot;&gt;Rotabull&lt;/a&gt; - &lt;a href=&quot;https://github.com/reinefjord&quot;&gt;Rupus Reinefjord&lt;/a&gt; - &lt;a href=&quot;https://github.com/ustitc&quot;&gt;Ruslan Ustitc&lt;/a&gt; - &lt;a href=&quot;https://github.com/samaaron&quot;&gt;Sam Aaron&lt;/a&gt; - &lt;a href=&quot;https://github.com/metruzanca&quot;&gt;Sam Zanca&lt;/a&gt; - &lt;a href=&quot;https://github.com/soulsam480&quot;&gt;sambit&lt;/a&gt; - &lt;a href=&quot;https://github.com/bkspace&quot;&gt;Sammy Isseyegh&lt;/a&gt; - &lt;a href=&quot;https://github.com/castletaste&quot;&gt;Savva&lt;/a&gt; - &lt;a href=&quot;https://github.com/sasa1977&quot;&gt;Saša Jurić&lt;/a&gt; - &lt;a href=&quot;https://github.com/scotttrinh&quot;&gt;Scott Trinh&lt;/a&gt; - &lt;a href=&quot;https://github.com/scottwey&quot;&gt;Scott Wey&lt;/a&gt; - &lt;a href=&quot;https://github.com/star-szr&quot;&gt;Scott Zhu Reeves&lt;/a&gt; - &lt;a href=&quot;https://github.com/seancribbs&quot;&gt;Sean Cribbs&lt;/a&gt; - &lt;a href=&quot;https://github.com/seanjensengrey&quot;&gt;Sean Jensen-Grey&lt;/a&gt; - &lt;a href=&quot;https://github.com/SeanRoberts&quot;&gt;Sean Roberts&lt;/a&gt; - &lt;a href=&quot;https://github.com/sporto&quot;&gt;Sebastian Porto&lt;/a&gt; - &lt;a href=&quot;https://github.com/tehprofessor&quot;&gt;Seve Salazar&lt;/a&gt; - &lt;a href=&quot;https://github.com/codemonkey76&quot;&gt;Shane Poppleton&lt;/a&gt; - &lt;a href=&quot;https://github.com/sigmasternchen&quot;&gt;Sigma&lt;/a&gt; - &lt;a href=&quot;https://github.com/simonewebdesign&quot;&gt;simone&lt;/a&gt; - &lt;a href=&quot;https://github.com/bytesource&quot;&gt;Stefan&lt;/a&gt; - &lt;a href=&quot;https://github.com/sthagen&quot;&gt;Stefan Hagen&lt;/a&gt; - &lt;a href=&quot;https://github.com/steinareliassen&quot;&gt;Steinar Eliassen&lt;/a&gt; - &lt;a href=&quot;https://github.com/Qard&quot;&gt;Stephen Belanger&lt;/a&gt; - &lt;a href=&quot;https://github.com/Strandinator&quot;&gt;Strandinator&lt;/a&gt; - &lt;a href=&quot;https://github.com/slafs&quot;&gt;Sławomir Ehlert&lt;/a&gt; - &lt;a href=&quot;https://github.com/takasehideki&quot;&gt;takasehideki&lt;/a&gt; - &lt;a href=&quot;https://github.com/Theosaurus-Rex&quot;&gt;Theo Harris&lt;/a&gt; - &lt;a href=&quot;https://github.com/thomaswhyyou&quot;&gt;Thomas&lt;/a&gt; - &lt;a href=&quot;https://github.com/tcoopman&quot;&gt;Thomas Coopman&lt;/a&gt; - &lt;a href=&quot;https://github.com/ernstla&quot;&gt;Thomas Ernst&lt;/a&gt; - &lt;a href=&quot;https://github.com/tmbrwn&quot;&gt;Tim Brown&lt;/a&gt; - &lt;a href=&quot;https://github.com/timgluz&quot;&gt;Timo Sulg&lt;/a&gt; - &lt;a href=&quot;https://github.com/tomalexhughes&quot;&gt;Tom Hughes&lt;/a&gt; - &lt;a href=&quot;https://github.com/tomjschuster&quot;&gt;Tom Schuster&lt;/a&gt; - &lt;a href=&quot;https://github.com/tomekowal&quot;&gt;Tomasz Kowal&lt;/a&gt; - &lt;a href=&quot;https://github.com/tommaisey&quot;&gt;tommaisey&lt;/a&gt; - &lt;a href=&quot;https://github.com/TristanCacqueray&quot;&gt;Tristan de Cacqueray&lt;/a&gt; - &lt;a href=&quot;https://github.com/tsloughter&quot;&gt;Tristan Sloughter&lt;/a&gt; - &lt;a href=&quot;https://github.com/lucamtudor&quot;&gt;Tudor Luca&lt;/a&gt; - &lt;a href=&quot;https://github.com/tymak&quot;&gt;tymak&lt;/a&gt; - &lt;a href=&quot;https://github.com/vvzen&quot;&gt;Valerio Viperino&lt;/a&gt; - &lt;a href=&quot;https://github.com/bondiano&quot;&gt;Vassiliy Kuzenkov&lt;/a&gt; - &lt;a href=&quot;https://github.com/sandsower&quot;&gt;Vic Valenzuela&lt;/a&gt; - &lt;a href=&quot;https://github.com/rodrigues&quot;&gt;Victor Rodrigues&lt;/a&gt; - &lt;a href=&quot;https://github.com/PerpetualPossum&quot;&gt;Viv Verner&lt;/a&gt; - &lt;a href=&quot;https://github.com/yelps&quot;&gt;Volker Rabe&lt;/a&gt; - &lt;a href=&quot;https://github.com/Whoops&quot;&gt;Walton Hoops&lt;/a&gt; - &lt;a href=&quot;https://github.com/weizhliu&quot;&gt;Weizheng Liu&lt;/a&gt; - &lt;a href=&quot;https://github.com/Willyboar&quot;&gt;Willyboar&lt;/a&gt; - &lt;a href=&quot;https://github.com/wilsonsilva&quot;&gt;Wilson Silva&lt;/a&gt; - &lt;a href=&quot;https://github.com/HymanZHAN&quot;&gt;Xucong Zhan&lt;/a&gt; - &lt;a href=&quot;https://github.com/yamen&quot;&gt;Yamen Sader&lt;/a&gt; - &lt;a href=&quot;https://github.com/Yasuo-Higano&quot;&gt;Yasuo Higano&lt;/a&gt; - &lt;a href=&quot;https://github.com/yoshi-monster&quot;&gt;yoshi~ &lt;/a&gt; - &lt;a href=&quot;https://github.com/gasparinzsombor&quot;&gt;Zsombor Gasparin&lt;/a&gt; - &lt;a href=&quot;https://github.com/zwubs&quot;&gt;ZWubs&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/~1847917/&quot;&gt;~1847917&lt;/a&gt; - &lt;a href=&quot;https://liberapay.com/~1867501/&quot;&gt;~1867501&lt;/a&gt; - &lt;a href=&quot;https://github.com/eberfreitas&quot;&gt;Éber Freitas Dias&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zellij-org/zellij</title>
      <link>https://github.com/zellij-org/zellij</link>
      <description>&lt;p&gt;A terminal workspace with batteries included&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;br /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/assets/logo.png&quot; alt=&quot;logo&quot; width=&quot;200&quot; /&gt; &lt;br /&gt; Zellij &lt;br /&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://discord.gg/CrUAFH3&quot;&gt;&lt;img alt=&quot;Discord Chat&quot; src=&quot;https://img.shields.io/discord/771367133715628073?color=5865F2&amp;amp;label=discord&amp;amp;style=flat-square&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#zellij_general:matrix.org&quot;&gt;&lt;img alt=&quot;Matrix Chat&quot; src=&quot;https://img.shields.io/matrix/zellij_general:matrix.org?color=1d7e64&amp;amp;label=matrix%20chat&amp;amp;style=flat-square&amp;amp;logo=matrix&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://zellij.dev/documentation/&quot;&gt;&lt;img alt=&quot;Zellij documentation&quot; src=&quot;https://img.shields.io/badge/zellij-documentation-fc0060?style=flat-square&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/assets/demo.gif&quot; alt=&quot;demo&quot; /&gt; &lt;/p&gt; 
&lt;h4 align=&quot;center&quot;&gt; [&lt;a href=&quot;https://zellij.dev/documentation/installation&quot;&gt;Installation&lt;/a&gt;] [&lt;a href=&quot;https://zellij.dev/screencasts/&quot;&gt;Screencasts &amp;amp; Tutorials&lt;/a&gt;] [&lt;a href=&quot;https://zellij.dev/documentation/configuration&quot;&gt;Configuration&lt;/a&gt;] [&lt;a href=&quot;https://zellij.dev/documentation/layouts&quot;&gt;Layouts&lt;/a&gt;] [&lt;a href=&quot;https://zellij.dev/documentation/faq&quot;&gt;FAQ&lt;/a&gt;] &lt;/h4&gt; 
&lt;h1&gt;What is this?&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/#origin-of-the-name&quot;&gt;Zellij&lt;/a&gt; is a workspace aimed at developers, ops-oriented people and anyone who loves the terminal. Similar programs are sometimes called &quot;Terminal Multiplexers&quot;.&lt;/p&gt; 
&lt;p&gt;Zellij is designed around the philosophy that one must not sacrifice simplicity for power, taking pride in its great experience out of the box as well as the advanced features it places at its users&#39; fingertips.&lt;/p&gt; 
&lt;p&gt;Zellij is geared toward beginner and power users alike - allowing deep customizability, personal automation through &lt;a href=&quot;https://zellij.dev/documentation/layouts.html&quot;&gt;layouts&lt;/a&gt;, true multiplayer collaboration, unique UX features such as floating and stacked panes, and a &lt;a href=&quot;https://zellij.dev/documentation/plugins.html&quot;&gt;plugin system&lt;/a&gt; allowing one to create plugins in any language that compiles to WebAssembly.&lt;/p&gt; 
&lt;p&gt;Zellij includes a built-in &lt;a href=&quot;https://zellij.dev/tutorials/web-client/&quot;&gt;web-client&lt;/a&gt;, making a terminal optional.&lt;/p&gt; 
&lt;p&gt;You can get started by &lt;a href=&quot;https://zellij.dev/documentation/installation.html&quot;&gt;installing&lt;/a&gt; Zellij and checking out the &lt;a href=&quot;https://zellij.dev/screencasts/&quot;&gt;Screencasts &amp;amp; Tutorials&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more details about our future plans, read about upcoming features in our &lt;a href=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/#roadmap&quot;&gt;roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How do I install it?&lt;/h2&gt; 
&lt;p&gt;The easiest way to install Zellij is through a &lt;a href=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/docs/THIRD_PARTY_INSTALL.md&quot;&gt;package for your OS&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If one is not available for your OS, you could download a prebuilt binary from the &lt;a href=&quot;https://github.com/zellij-org/zellij/releases/latest&quot;&gt;latest release&lt;/a&gt; and place it in your &lt;code&gt;$PATH&lt;/code&gt;. If you&#39;d like, we could &lt;a href=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/#try-zellij-without-installing&quot;&gt;automatically choose one for you&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also install (compile) with &lt;code&gt;cargo&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cargo install --locked zellij
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Try Zellij without installing&lt;/h4&gt; 
&lt;p&gt;bash/zsh:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash &amp;lt;(curl -L https://zellij.dev/launch)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;fish/xonsh:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bash -c &#39;bash &amp;lt;(curl -L https://zellij.dev/launch)&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Installing from &lt;code&gt;main&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Installing Zellij from the &lt;code&gt;main&lt;/code&gt; branch is not recommended. This branch represents pre-release code, is constantly being worked on and may contain broken or unusable features. In addition, using it may corrupt the cache for future versions, forcing users to clear it before they can use the officially released version.&lt;/p&gt; 
&lt;p&gt;That being said - no-one will stop you from using it (and bug reports involving new features are greatly appreciated), but please consider using the latest release instead as detailed at the top of this section.&lt;/p&gt; 
&lt;h2&gt;How do I start a development environment?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the project&lt;/li&gt; 
 &lt;li&gt;In the project folder, for debug builds run: &lt;code&gt;cargo xtask run&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To run all tests: &lt;code&gt;cargo xtask test&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more build commands, see &lt;a href=&quot;https://raw.githubusercontent.com/zellij-org/zellij/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;For configuring Zellij, please see the &lt;a href=&quot;https://zellij.dev/documentation/configuration.html&quot;&gt;Configuration Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About issues in this repository&lt;/h2&gt; 
&lt;p&gt;Issues in this repository, whether open or closed, do not necessarily indicate a problem or a bug in the software. They only indicate that the reporter wanted to communicate their experiences or thoughts to the maintainers. The Zellij maintainers do their best to go over and reply to all issue reports, but unfortunately cannot promise these will always be dealt with or even read. Your understanding is appreciated.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Presented here is the project roadmap, divided into three main sections.&lt;/p&gt; 
&lt;p&gt;These are issues that are either being actively worked on or are planned for the near future.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;If you&#39;ll click on the image, you&#39;ll be led to an SVG version of it on the website where you can directly click on every issue&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://zellij.dev/roadmap&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/bb55d213-4a68-4c84-ae72-7db5c9bf94fb&quot; alt=&quot;roadmap&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Origin of the Name&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Zellij&quot;&gt;From Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Zellij (Arabic: الزليج, romanized: zillīj; also spelled zillij or zellige) is a style of mosaic tilework made from individually hand-chiseled tile pieces. The pieces were typically of different colours and fitted together to form various patterns on the basis of tessellations, most notably elaborate Islamic geometric motifs such as radiating star patterns composed of various polygons. This form of Islamic art is one of the main characteristics of architecture in the western Islamic world. It is found in the architecture of Morocco, the architecture of Algeria, early Islamic sites in Tunisia, and in the historic monuments of al-Andalus (in the Iberian Peninsula).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;Sponsored by&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://terminaltrove.com/&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/121595180?s=200&amp;amp;v=4&quot; width=&quot;80px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lumina-ai-inc/chunkr</title>
      <link>https://github.com/lumina-ai-inc/chunkr</link>
      <description>&lt;p&gt;Vision infrastructure to turn complex documents into RAG/LLM-ready data&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://github.com/lumina-ai-inc/chunkr&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/images/logo.svg?sanitize=true&quot; alt=&quot;Logo&quot; width=&quot;80&quot; height=&quot;80&quot; /&gt; &lt;/a&gt; 
 &lt;h3 align=&quot;center&quot;&gt;Chunkr | Open Source Document Intelligence API&lt;/h3&gt; 
 &lt;p align=&quot;center&quot;&gt; Production-ready API service for document layout analysis, OCR, and semantic chunking.&lt;br /&gt;Convert PDFs, PPTs, Word docs &amp;amp; images into RAG/LLM-ready chunks. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Layout Analysis&lt;/b&gt; | &lt;b&gt;OCR + Bounding Boxes&lt;/b&gt; | &lt;b&gt;Structured HTML and markdown&lt;/b&gt; | &lt;b&gt;VLM Processing controls&lt;/b&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://www.chunkr.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Try_it_out-chunkr.ai-blue?style=flat&amp;amp;logo=rocket&amp;amp;height=20&quot; alt=&quot;Try it out&quot; height=&quot;20&quot; /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://github.com/lumina-ai-inc/chunkr/issues/new&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Report_Bug-GitHub_Issues-red?style=flat&amp;amp;logo=github&amp;amp;height=20&quot; alt=&quot;Report Bug&quot; height=&quot;20&quot; /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#connect-with-us&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contact-Get_in_Touch-green?style=flat&amp;amp;logo=mail&amp;amp;height=20&quot; alt=&quot;Contact&quot; height=&quot;20&quot; /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://discord.gg/XzKWFByKzW&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;height=20&quot; alt=&quot;Discord&quot; height=&quot;20&quot; /&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://deepwiki.com/lumina-ai-inc/chunkr&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://www.chunkr.ai&quot; width=&quot;1200&quot; height=&quot;630&quot;&gt; &lt;img src=&quot;https://chunkr.ai/og-image.png&quot; style=&quot;bor&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#super-quick-start&quot;&gt;(Super) Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#opensource-vs-commercial-api-vs-enterprise&quot;&gt;OpenSource vs Commercial API vs Enterprise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#quick-start-with-docker-compose&quot;&gt;Quick Start with Docker Compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#llm-configuration&quot;&gt;LLM Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#using-modelsyaml-recommended&quot;&gt;Using models.yaml (Recommended)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#using-environment-variables-basic&quot;&gt;Using environment variables (Basic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#common-llm-api-providers&quot;&gt;Common LLM API Providers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#licensing&quot;&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#connect-with-us&quot;&gt;Connect With Us&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;(Super) Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to &lt;a href=&quot;https://www.chunkr.ai&quot;&gt;chunkr.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Make an account and copy your API key&lt;/li&gt; 
 &lt;li&gt;Install our Python SDK:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install chunkr-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Use the SDK to process your documents:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from chunkr_ai import Chunkr

# Initialize with your API key from chunkr.ai
chunkr = Chunkr(api_key=&quot;your_api_key&quot;)

# Upload a document (URL or local file path)
url = &quot;https://chunkr-web.s3.us-east-1.amazonaws.com/landing_page/input/science.pdf&quot;
task = chunkr.upload(url)

# Export results in various formats
html = task.html(output_file=&quot;output.html&quot;)
markdown = task.markdown(output_file=&quot;output.md&quot;)
content = task.content(output_file=&quot;output.txt&quot;)
task.json(output_file=&quot;output.json&quot;)

# Clean up
chunkr.close()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit our &lt;a href=&quot;https://docs.chunkr.ai&quot;&gt;docs&lt;/a&gt; for more information and examples.&lt;/p&gt; 
&lt;h2&gt;OpenSource vs Commercial API vs Enterprise&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Open Source&lt;/th&gt; 
   &lt;th&gt;Commercial API&lt;/th&gt; 
   &lt;th&gt;Enterprise&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Perfect for&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Development &amp;amp; testing&lt;/td&gt; 
   &lt;td&gt;Production applications&lt;/td&gt; 
   &lt;td&gt;Large-scale/High security deployments&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Layout Analysis&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Basic models&lt;/td&gt; 
   &lt;td&gt;Advanced models&lt;/td&gt; 
   &lt;td&gt;Advanced + custom-tuned&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OCR Accuracy&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Standard models&lt;/td&gt; 
   &lt;td&gt;Premium models&lt;/td&gt; 
   &lt;td&gt;Premium + domain-tuned&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;VLM Processing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Basic vision models&lt;/td&gt; 
   &lt;td&gt;Enhanced VLM models&lt;/td&gt; 
   &lt;td&gt;Enhanced + custom fine-tunes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Excel Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅ Native parser&lt;/td&gt; 
   &lt;td&gt;✅ Native parser&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Document Types&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;PDF, PPT, Word, Images&lt;/td&gt; 
   &lt;td&gt;PDF, PPT, Word, Images, Excel&lt;/td&gt; 
   &lt;td&gt;PDF, PPT, Word, Images, Excel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Self-hosted&lt;/td&gt; 
   &lt;td&gt;Fully managed&lt;/td&gt; 
   &lt;td&gt;Fully managed (On-prem or Chunkr-hosted)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Discord community&lt;/td&gt; 
   &lt;td&gt;Priority email + community&lt;/td&gt; 
   &lt;td&gt;24/7 dedicated founing team support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Migration Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Community resources&lt;/td&gt; 
   &lt;td&gt;Documentation + email&lt;/td&gt; 
   &lt;td&gt;Dedicated migration team&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quick Start with Docker Compose&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Prerequisites:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/get-docker/&quot;&gt;Docker and Docker Compose&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html&quot;&gt;NVIDIA Container Toolkit&lt;/a&gt; (for GPU support, optional)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/lumina-ai-inc/chunkr
cd chunkr
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Set up environment variables:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Copy the example environment file
cp .env.example .env

# Configure your llm models
cp models.example.yaml models.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on how to set up LLMs, see &lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/#llm-configuration&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Start the services:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# For GPU deployment:
docker compose up -d

# For CPU-only deployment:
docker compose -f compose.yaml -f compose.cpu.yaml up -d

# For Mac ARM architecture (M1, M2, M3, etc.):
docker compose -f compose.yaml -f compose.cpu.yaml -f compose.mac.yaml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt; &lt;p&gt;Access the services:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Web UI: &lt;code&gt;http://localhost:5173&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;API: &lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop the services when done:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# For GPU deployment:
docker compose down

# For CPU-only deployment:
docker compose -f compose.yaml -f compose.cpu.yaml down

# For Mac ARM architecture (M1, M2, M3, etc.):
docker compose -f compose.yaml -f compose.cpu.yaml -f compose.mac.yaml down
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;LLM Configuration&lt;/h2&gt; 
&lt;p&gt;Chunkr supports two ways to configure LLMs:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;models.yaml file&lt;/strong&gt;: Advanced configuration for multiple LLMs with additional options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Environment variables&lt;/strong&gt;: Simple configuration for a single LLM&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Using models.yaml (Recommended)&lt;/h3&gt; 
&lt;p&gt;For more flexible configuration with multiple models, default/fallback options, and rate limits:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Copy the example file to create your configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cp models.example.yaml models.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Edit the models.yaml file with your configuration. Example:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;models:
  - id: gpt-4o
    model: gpt-4o
    provider_url: https://api.openai.com/v1/chat/completions
    api_key: &quot;your_openai_api_key_here&quot;
    default: true
    rate-limit: 200 # requests per minute - optional
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Benefits of using models.yaml:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configure multiple LLM providers simultaneously&lt;/li&gt; 
 &lt;li&gt;Set default and fallback models&lt;/li&gt; 
 &lt;li&gt;Add distributed rate limits per model&lt;/li&gt; 
 &lt;li&gt;Reference models by ID in API requests (see docs for more info)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Read the &lt;code&gt;models.example.yaml&lt;/code&gt; file for more information on the available options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Using environment variables (Basic)&lt;/h3&gt; 
&lt;p&gt;You can use any OpenAI API compatible endpoint by setting the following variables in your .env file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;LLM__KEY:
LLM__MODEL:
LLM__URL:
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Common LLM API Providers&lt;/h3&gt; 
&lt;p&gt;Below is a table of common LLM providers and their configuration details to get you started:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
   &lt;th&gt;API URL&lt;/th&gt; 
   &lt;th&gt;Documentation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://api.openai.com/v1/chat/completions&quot;&gt;https://api.openai.com/v1/chat/completions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://platform.openai.com/docs&quot;&gt;OpenAI Docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Google AI Studio&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://generativelanguage.googleapis.com/v1beta/openai/chat/completions&quot;&gt;https://generativelanguage.googleapis.com/v1beta/openai/chat/completions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ai.google.dev/gemini-api/docs/openai&quot;&gt;Google AI Docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://openrouter.ai/api/v1/chat/completions&quot;&gt;https://openrouter.ai/api/v1/chat/completions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://openrouter.ai/models&quot;&gt;OpenRouter Models&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Self-Hosted&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://localhost:8000/v1&quot;&gt;http://localhost:8000/v1&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://docs.vllm.ai/en/latest/serving/openai_compatible_server.html&quot;&gt;VLLM&lt;/a&gt; or &lt;a href=&quot;https://ollama.com/blog/openai-compatibility&quot;&gt;Ollama&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;The core of this project is dual-licensed:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lumina-ai-inc/chunkr/main/LICENSE&quot;&gt;GNU Affero General Public License v3.0 (AGPL-3.0)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Commercial License&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To use Chunkr without complying with the AGPL-3.0 license terms you can &lt;a href=&quot;mailto:mehul@chunkr.ai&quot;&gt;contact us&lt;/a&gt; or visit our &lt;a href=&quot;https://chunkr.ai&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect With Us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📧 Email: &lt;a href=&quot;mailto:mehul@chunkr.ai&quot;&gt;mehul@chunkr.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📅 Schedule a call: &lt;a href=&quot;https://cal.com/mehulc/30min&quot;&gt;Book a 30-minute meeting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌐 Visit our website: &lt;a href=&quot;https://chunkr.ai&quot;&gt;chunkr.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nautechsystems/nautilus_trader</title>
      <link>https://github.com/nautechsystems/nautilus_trader</link>
      <description>&lt;p&gt;A high-performance algorithmic trading platform and event-driven backtester&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/nautilus-trader-logo.png&quot; width=&quot;500&quot; /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/gh/nautechsystems/nautilus_trader&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/nautechsystems/nautilus_trader/branch/master/graph/badge.svg?token=DXO9QQI40H&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codspeed.io/nautechsystems/nautilus_trader&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://codspeed.io/badge.json&quot; alt=&quot;codspeed&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/pypi/pyversions/nautilus_trader&quot; alt=&quot;pythons&quot; /&gt; &lt;img src=&quot;https://img.shields.io/pypi/v/nautilus_trader&quot; alt=&quot;pypi-version&quot; /&gt; &lt;img src=&quot;https://img.shields.io/pypi/format/nautilus_trader?color=blue&quot; alt=&quot;pypi-format&quot; /&gt; &lt;a href=&quot;https://pepy.tech/project/nautilus-trader&quot;&gt;&lt;img src=&quot;https://pepy.tech/badge/nautilus-trader&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/NautilusTrader&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://packages.nautechsystems.io/simple/nautilus-trader/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fmaster%2Fversion.json&quot; alt=&quot;version&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=nightly&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;nightly&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://packages.nautechsystems.io/simple/nautilus-trader/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fnightly%2Fversion.json&quot; alt=&quot;version&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=nightly&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://packages.nautechsystems.io/simple/nautilus-trader/index.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fnautechsystems%2Fnautilus_trader%2Fdevelop%2Fversion.json&quot; alt=&quot;version&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/actions/workflows/build.yml/badge.svg?branch=develop&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Platform&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Rust&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Python&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Linux (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;1.89.0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Linux (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;1.89.0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;macOS (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;1.89.0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;3.11-3.13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Windows (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;1.89.0&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;3.11-3.13*&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;* Windows builds are currently pinned to CPython 3.13.2, see &lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/docs/getting_started/installation.md&quot;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docs&lt;/strong&gt;: &lt;a href=&quot;https://nautilustrader.io/docs/&quot;&gt;https://nautilustrader.io/docs/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href=&quot;https://nautilustrader.io&quot;&gt;https://nautilustrader.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt;: &lt;a href=&quot;mailto:support@nautilustrader.io&quot;&gt;support@nautilustrader.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;NautilusTrader is an open-source, high-performance, production-grade algorithmic trading platform, providing quantitative traders with the ability to backtest portfolios of automated trading strategies on historical data with an event-driven engine, and also deploy those same strategies live, with no code changes.&lt;/p&gt; 
&lt;p&gt;The platform is &lt;em&gt;AI-first&lt;/em&gt;, designed to develop and deploy algorithmic trading strategies within a highly performant and robust Python-native environment. This helps to address the parity challenge of keeping the Python research/backtest environment consistent with the production live trading environment.&lt;/p&gt; 
&lt;p&gt;NautilusTrader&#39;s design, architecture, and implementation philosophy prioritizes software correctness and safety at the highest level, with the aim of supporting Python-native, mission-critical, trading system backtesting and live deployment workloads.&lt;/p&gt; 
&lt;p&gt;The platform is also universal, and asset-class-agnostic — with any REST API or WebSocket feed able to be integrated via modular adapters. It supports high-frequency trading across a wide range of asset classes and instrument types including FX, Equities, Futures, Options, Crypto, DeFi, and Betting, enabling seamless operations across multiple venues simultaneously.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/nautilus-trader.png&quot; alt=&quot;nautilus-trader&quot; title=&quot;nautilus-trader&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Core is written in Rust with asynchronous networking using &lt;a href=&quot;https://crates.io/crates/tokio&quot;&gt;tokio&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Rust-powered type- and thread-safety, with optional Redis-backed state persistence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portable&lt;/strong&gt;: OS independent, runs on Linux, macOS, and Windows. Deploy using Docker.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: Modular adapters mean any REST API or WebSocket feed can be integrated.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt;: Time in force &lt;code&gt;IOC&lt;/code&gt;, &lt;code&gt;FOK&lt;/code&gt;, &lt;code&gt;GTC&lt;/code&gt;, &lt;code&gt;GTD&lt;/code&gt;, &lt;code&gt;DAY&lt;/code&gt;, &lt;code&gt;AT_THE_OPEN&lt;/code&gt;, &lt;code&gt;AT_THE_CLOSE&lt;/code&gt;, advanced order types and conditional triggers. Execution instructions &lt;code&gt;post-only&lt;/code&gt;, &lt;code&gt;reduce-only&lt;/code&gt;, and icebergs. Contingency orders including &lt;code&gt;OCO&lt;/code&gt;, &lt;code&gt;OUO&lt;/code&gt;, &lt;code&gt;OTO&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: Add user-defined custom components, or assemble entire systems from scratch leveraging the &lt;a href=&quot;https://nautilustrader.io/docs/latest/concepts/cache&quot;&gt;cache&lt;/a&gt; and &lt;a href=&quot;https://nautilustrader.io/docs/latest/concepts/message_bus&quot;&gt;message bus&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtesting&lt;/strong&gt;: Run with multiple venues, instruments and strategies simultaneously using historical quote tick, trade tick, bar, order book and custom data with nanosecond resolution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live&lt;/strong&gt;: Use identical strategy implementations between backtesting and live deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-venue&lt;/strong&gt;: Multiple venue capabilities facilitate market-making and statistical arbitrage strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Training&lt;/strong&gt;: Backtest engine fast enough to be used to train AI trading agents (RL/ES).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/nautilus-art.png&quot; alt=&quot;Alt text&quot; title=&quot;nautilus&quot; /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;nautilus - from ancient Greek &#39;sailor&#39; and naus &#39;ship&#39;.&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;The nautilus shell consists of modular chambers with a growth factor which approximates a logarithmic spiral. The idea is that this can be translated to the aesthetics of design and architecture.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Why NautilusTrader?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Highly performant event-driven Python&lt;/strong&gt;: Native binary core components.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parity between backtesting and live trading&lt;/strong&gt;: Identical strategy code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reduced operational risk&lt;/strong&gt;: Enhanced risk management functionality, logical accuracy, and type safety.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly extendable&lt;/strong&gt;: Message bus, custom components and actors, custom data, custom adapters.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Traditionally, trading strategy research and backtesting might be conducted in Python using vectorized methods, with the strategy then needing to be reimplemented in a more event-driven way using C++, C#, Java or other statically typed language(s). The reasoning here is that vectorized backtesting code cannot express the granular time and event dependent complexity of real-time trading, where compiled languages have proven to be more suitable due to their inherently higher performance, and type safety.&lt;/p&gt; 
&lt;p&gt;One of the key advantages of NautilusTrader here, is that this reimplementation step is now circumvented - as the critical core components of the platform have all been written entirely in &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; or &lt;a href=&quot;https://cython.org/&quot;&gt;Cython&lt;/a&gt;. This means we&#39;re using the right tools for the job, where systems programming languages compile performant binaries, with CPython C extension modules then able to offer a Python-native environment, suitable for professional quantitative traders and trading firms.&lt;/p&gt; 
&lt;h2&gt;Why Python?&lt;/h2&gt; 
&lt;p&gt;Python was originally created decades ago as a simple scripting language with a clean straightforward syntax. It has since evolved into a fully fledged general purpose object-oriented programming language. Based on the TIOBE index, Python is currently the most popular programming language in the world. Not only that, Python has become the &lt;em&gt;de facto lingua franca&lt;/em&gt; of data science, machine learning, and artificial intelligence.&lt;/p&gt; 
&lt;p&gt;developer/user communities. However, Python has performance and typing limitations for large-scale, latency-sensitive systems. Cython addresses many of these issues by introducing static typing into Python&#39;s rich ecosystem of libraries and communities.&lt;/p&gt; 
&lt;h2&gt;Why Rust?&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; is a multi-paradigm programming language designed for performance and safety, especially safe concurrency. Rust is &quot;blazingly fast&quot; and memory-efficient (comparable to C and C++) with no garbage collector. It can power mission-critical systems, run on embedded devices, and easily integrates with other languages.&lt;/p&gt; 
&lt;p&gt;Rust’s rich type system and ownership model guarantees memory-safety and thread-safety deterministically — eliminating many classes of bugs at compile-time.&lt;/p&gt; 
&lt;p&gt;The project increasingly utilizes Rust for core performance-critical components. Python bindings are implemented via Cython and &lt;a href=&quot;https://pyo3.rs&quot;&gt;PyO3&lt;/a&gt;—no Rust toolchain is required at install time.&lt;/p&gt; 
&lt;p&gt;This project makes the &lt;a href=&quot;https://raphlinus.github.io/rust/2020/01/18/soundness-pledge.html&quot;&gt;Soundness Pledge&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;“The intent of this project is to be free of soundness bugs. The developers will do their best to avoid them, and welcome help in analyzing and fixing them.”&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; NautilusTrader relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is generally equal to the latest stable release of Rust.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;NautilusTrader is modularly designed to work with &lt;em&gt;adapters&lt;/em&gt;, enabling connectivity to trading venues and data providers by translating their raw APIs into a unified interface and normalized domain model.&lt;/p&gt; 
&lt;p&gt;The following integrations are currently supported; see &lt;a href=&quot;https://nautilustrader.io/docs/latest/integrations/&quot;&gt;docs/integrations/&lt;/a&gt; for details:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Name&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;ID&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Type&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Status&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://betfair.com&quot;&gt;Betfair&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;BETFAIR&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Sports Betting Exchange&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/betfair.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://binance.com&quot;&gt;Binance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/binance.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://binance.us&quot;&gt;Binance US&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/binance.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.binance.com/en/futures&quot;&gt;Binance Futures&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;BINANCE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/binance.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.bitmex.com&quot;&gt;BitMEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;BITMEX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/building-orange&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/bitmex.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.bybit.com&quot;&gt;Bybit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;BYBIT&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/bybit.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.coinbase.com/en/international-exchange&quot;&gt;Coinbase International&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;COINBASE_INTX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/coinbase_intx.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://databento.com&quot;&gt;Databento&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;DATABENTO&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Data Provider&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/databento.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://dydx.exchange/&quot;&gt;dYdX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;DYDX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (DEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/dydx.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://hyperliquid.xyz&quot;&gt;Hyperliquid&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;HYPERLIQUID&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (DEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/building-orange&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/hyperliquid.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.interactivebrokers.com&quot;&gt;Interactive Brokers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;INTERACTIVE_BROKERS&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Brokerage (multi-venue)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/ib.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://okx.com&quot;&gt;OKX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;OKX&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Exchange (CEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/beta-yellow&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/okx.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://polymarket.com&quot;&gt;Polymarket&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;POLYMARKET&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Prediction Market (DEX)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/polymarket.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://tardis.dev&quot;&gt;Tardis&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;TARDIS&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Crypto Data Provider&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stable-green&quot; alt=&quot;status&quot; /&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/docs/integrations/tardis.md&quot;&gt;Guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt;: The default client ID for the integrations adapter clients.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: The type of integration (often the venue type).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Status&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;building&lt;/code&gt;: Under construction and likely not in a usable state.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;beta&lt;/code&gt;: Completed to a minimally working state and in a beta testing phase.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: Stabilized feature set and API, the integration has been tested by both developers and users to a reasonable level (some bugs may still remain).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://nautilustrader.io/docs/latest/integrations/index.html&quot;&gt;Integrations&lt;/a&gt; documentation for further details.&lt;/p&gt; 
&lt;h2&gt;Versioning and releases&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NautilusTrader is still under active development&lt;/strong&gt;. Some features may be incomplete, and while the API is becoming more stable, breaking changes can occur between releases. We strive to document these changes in the release notes on a &lt;strong&gt;best-effort basis&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;We aim to follow a &lt;strong&gt;bi-weekly release schedule&lt;/strong&gt;, though experimental or larger features may cause delays.&lt;/p&gt; 
&lt;h3&gt;Branches&lt;/h3&gt; 
&lt;p&gt;We aim to maintain a stable, passing build across all branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;master&lt;/code&gt;: Reflects the source code for the latest released version; recommended for production use.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;: Daily snapshots of the &lt;code&gt;develop&lt;/code&gt; branch for early testing; merged at &lt;strong&gt;14:00 UTC&lt;/strong&gt; or on demand.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt;: Active development branch for contributors and feature work.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Our &lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/ROADMAP.md&quot;&gt;roadmap&lt;/a&gt; aims to achieve a &lt;strong&gt;stable API for version 2.x&lt;/strong&gt; (likely after the Rust port). Once this milestone is reached, we plan to implement a formal deprecation process for any API changes. This approach allows us to maintain a rapid development pace for now.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Precision mode&lt;/h2&gt; 
&lt;p&gt;NautilusTrader supports two precision modes for its core value types (&lt;code&gt;Price&lt;/code&gt;, &lt;code&gt;Quantity&lt;/code&gt;, &lt;code&gt;Money&lt;/code&gt;), which differ in their internal bit-width and maximum decimal precision.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;High-precision&lt;/strong&gt;: 128-bit integers with up to 16 decimals of precision, and a larger value range.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standard-precision&lt;/strong&gt;: 64-bit integers with up to 9 decimals of precision, and a smaller value range.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;By default, the official Python wheels &lt;strong&gt;ship&lt;/strong&gt; in high-precision (128-bit) mode on Linux and macOS. On Windows, only standard-precision (64-bit) is available due to the lack of native 128-bit integer support. For the Rust crates, the default is standard-precision unless you explicitly enable the &lt;code&gt;high-precision&lt;/code&gt; feature flag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://nautilustrader.io/docs/latest/getting_started/installation&quot;&gt;Installation Guide&lt;/a&gt; for further details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rust feature flag&lt;/strong&gt;: To enable high-precision mode in Rust, add the &lt;code&gt;high-precision&lt;/code&gt; feature to your Cargo.toml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[dependencies]
nautilus_model = { version = &quot;*&quot;, features = [&quot;high-precision&quot;] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;We recommend using the latest supported version of Python and installing &lt;a href=&quot;https://pypi.org/project/nautilus_trader/&quot;&gt;nautilus_trader&lt;/a&gt; inside a virtual environment to isolate dependencies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;There are two supported ways to install&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Pre-built binary wheel from PyPI &lt;em&gt;or&lt;/em&gt; the Nautech Systems package index.&lt;/li&gt; 
 &lt;li&gt;Build from source.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;We highly recommend installing using the &lt;a href=&quot;https://docs.astral.sh/uv&quot;&gt;uv&lt;/a&gt; package manager with a &quot;vanilla&quot; CPython.&lt;/p&gt; 
 &lt;p&gt;Conda and other Python distributions &lt;em&gt;may&lt;/em&gt; work but aren’t officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;From PyPI&lt;/h3&gt; 
&lt;p&gt;To install the latest binary wheel (or sdist package) from PyPI using Python&#39;s pip package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install -U nautilus_trader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;From the Nautech Systems package index&lt;/h3&gt; 
&lt;p&gt;The Nautech Systems package index (&lt;code&gt;packages.nautechsystems.io&lt;/code&gt;) complies with &lt;a href=&quot;https://peps.python.org/pep-0503/&quot;&gt;PEP-503&lt;/a&gt; and hosts both stable and development binary wheels for &lt;code&gt;nautilus_trader&lt;/code&gt;. This enables users to install either the latest stable release or pre-release versions for testing.&lt;/p&gt; 
&lt;h4&gt;Stable wheels&lt;/h4&gt; 
&lt;p&gt;Stable wheels correspond to official releases of &lt;code&gt;nautilus_trader&lt;/code&gt; on PyPI, and use standard versioning.&lt;/p&gt; 
&lt;p&gt;To install the latest stable release:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install -U nautilus_trader --index-url=https://packages.nautechsystems.io/simple
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Development wheels&lt;/h4&gt; 
&lt;p&gt;Development wheels are published from both the &lt;code&gt;nightly&lt;/code&gt; and &lt;code&gt;develop&lt;/code&gt; branches, allowing users to test features and fixes ahead of stable releases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Wheels from the &lt;code&gt;develop&lt;/code&gt; branch are only built for the Linux x86_64 platform to save time and compute resources, while &lt;code&gt;nightly&lt;/code&gt; wheels support additional platforms as shown below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Platform&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Nightly&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Develop&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Linux (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Linux (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;macOS (ARM64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;Windows (x86_64)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This process also helps preserve compute resources and ensures easy access to the exact binaries tested in CI pipelines, while adhering to &lt;a href=&quot;https://peps.python.org/pep-0440/&quot;&gt;PEP-440&lt;/a&gt; versioning standards:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; wheels use the version format &lt;code&gt;dev{date}+{build_number}&lt;/code&gt; (e.g., &lt;code&gt;1.208.0.dev20241212+7001&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; wheels use the version format &lt;code&gt;a{date}&lt;/code&gt; (alpha) (e.g., &lt;code&gt;1.208.0a20241212&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;We do not recommend using development wheels in production environments, such as live trading controlling real capital.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installation commands&lt;/h4&gt; 
&lt;p&gt;By default, pip will install the latest stable release. Adding the &lt;code&gt;--pre&lt;/code&gt; flag ensures that pre-release versions, including development wheels, are considered.&lt;/p&gt; 
&lt;p&gt;To install the latest available pre-release (including development wheels):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install -U nautilus_trader --pre --index-url=https://packages.nautechsystems.io/simple
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a specific development wheel (e.g., &lt;code&gt;1.208.0a20241212&lt;/code&gt; for December 12, 2024):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install nautilus_trader==1.208.0a20241212 --index-url=https://packages.nautechsystems.io/simple
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Available versions&lt;/h4&gt; 
&lt;p&gt;You can view all available versions of &lt;code&gt;nautilus_trader&lt;/code&gt; on the &lt;a href=&quot;https://packages.nautechsystems.io/simple/nautilus-trader/index.html&quot;&gt;package index&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To programmatically fetch and list available versions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -s https://packages.nautechsystems.io/simple/nautilus-trader/index.html | grep -oP &#39;(?&amp;lt;=&amp;lt;a href=&quot;)[^&quot;]+(?=&quot;)&#39; | awk -F&#39;#&#39; &#39;{print $1}&#39; | sort
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Branch updates&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; branch wheels (&lt;code&gt;.dev&lt;/code&gt;): Build and publish continuously with every merged commit.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; branch wheels (&lt;code&gt;a&lt;/code&gt;): Build and publish daily when we automatically merge the &lt;code&gt;develop&lt;/code&gt; branch at &lt;strong&gt;14:00 UTC&lt;/strong&gt; (if there are changes).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Retention policies&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;develop&lt;/code&gt; branch wheels (&lt;code&gt;.dev&lt;/code&gt;): We retain only the most recent wheel build.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nightly&lt;/code&gt; branch wheels (&lt;code&gt;a&lt;/code&gt;): We retain only the 10 most recent wheel builds.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;From Source&lt;/h3&gt; 
&lt;p&gt;It&#39;s possible to install from source using pip if you first install the build dependencies as specified in the &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href=&quot;https://rustup.rs/&quot;&gt;rustup&lt;/a&gt; (the Rust toolchain installer):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux and macOS:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Download and install &lt;a href=&quot;https://win.rustup.rs/x86_64&quot;&gt;&lt;code&gt;rustup-init.exe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;Install &quot;Desktop development with C++&quot; with &lt;a href=&quot;https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;amp;rel=16&quot;&gt;Build Tools for Visual Studio 2019&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Verify (any system): from a terminal session run: &lt;code&gt;rustc --version&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;cargo&lt;/code&gt; in the current shell:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux and macOS:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;source $HOME/.cargo/env
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Start a new PowerShell&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href=&quot;https://clang.llvm.org/&quot;&gt;clang&lt;/a&gt; (a C language frontend for LLVM):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Linux:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get install clang
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt; &lt;p&gt;Add Clang to your &lt;a href=&quot;https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;amp;rel=16&quot;&gt;Build Tools for Visual Studio 2019&lt;/a&gt;:&lt;/p&gt; 
      &lt;ul&gt; 
       &lt;li&gt;Start | Visual Studio Installer | Modify | C++ Clang tools for Windows (12.0.0 - x64…) = checked | Modify&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;clang&lt;/code&gt; in the current shell:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;[System.Environment]::SetEnvironmentVariable(&#39;path&#39;, &quot;C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\Llvm\x64\bin\;&quot; + $env:Path,&quot;User&quot;)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Verify (any system): from a terminal session run: &lt;code&gt;clang --version&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install uv (see the &lt;a href=&quot;https://docs.astral.sh/uv/getting-started/installation&quot;&gt;uv installation guide&lt;/a&gt; for more details):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the source with &lt;code&gt;git&lt;/code&gt;, and install from the project&#39;s root directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --branch develop --depth 1 https://github.com/nautechsystems/nautilus_trader
cd nautilus_trader
uv sync --all-extras
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;The &lt;code&gt;--depth 1&lt;/code&gt; flag fetches just the latest commit for a faster, lightweight clone.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;6&quot;&gt; 
 &lt;li&gt; &lt;p&gt;Set environment variables for PyO3 compilation (Linux and macOS only):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Set the library path for the Python interpreter (in this case Python 3.13.4)
export LD_LIBRARY_PATH=&quot;$HOME/.local/share/uv/python/cpython-3.13.4-linux-x86_64-gnu/lib:$LD_LIBRARY_PATH&quot;

# Set the Python executable path for PyO3
export PYO3_PYTHON=$(pwd)/.venv/bin/python
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Adjust the Python version and architecture in the &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; to match your system. Use &lt;code&gt;uv python list&lt;/code&gt; to find the exact path for your Python installation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://nautilustrader.io/docs/latest/getting_started/installation&quot;&gt;Installation Guide&lt;/a&gt; for other options and further details.&lt;/p&gt; 
&lt;h2&gt;Redis&lt;/h2&gt; 
&lt;p&gt;Using &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt; with NautilusTrader is &lt;strong&gt;optional&lt;/strong&gt; and only required if configured as the backend for a &lt;a href=&quot;https://nautilustrader.io/docs/latest/concepts/cache&quot;&gt;cache&lt;/a&gt; database or &lt;a href=&quot;https://nautilustrader.io/docs/latest/concepts/message_bus&quot;&gt;message bus&lt;/a&gt;. See the &lt;strong&gt;Redis&lt;/strong&gt; section of the &lt;a href=&quot;https://nautilustrader.io/docs/latest/getting_started/installation#redis&quot;&gt;Installation Guide&lt;/a&gt; for further details.&lt;/p&gt; 
&lt;h2&gt;Makefile&lt;/h2&gt; 
&lt;p&gt;A &lt;code&gt;Makefile&lt;/code&gt; is provided to automate most installation and build tasks for development. Some of the targets include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make install&lt;/code&gt;: Installs in &lt;code&gt;release&lt;/code&gt; build mode with all dependency groups and extras.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make install-debug&lt;/code&gt;: Same as &lt;code&gt;make install&lt;/code&gt; but with &lt;code&gt;debug&lt;/code&gt; build mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make install-just-deps&lt;/code&gt;: Installs just the &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; dependencies (does not install package).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;: Runs the build script in &lt;code&gt;release&lt;/code&gt; build mode (default).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build-debug&lt;/code&gt;: Runs the build script in &lt;code&gt;debug&lt;/code&gt; build mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build-wheel&lt;/code&gt;: Runs uv build with a wheel format in &lt;code&gt;release&lt;/code&gt; mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build-wheel-debug&lt;/code&gt;: Runs uv build with a wheel format in &lt;code&gt;debug&lt;/code&gt; mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make cargo-test&lt;/code&gt;: Runs all Rust crate tests using &lt;code&gt;cargo-nextest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt;: Deletes all build results, such as &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dll&lt;/code&gt; files.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make distclean&lt;/code&gt;: &lt;strong&gt;CAUTION&lt;/strong&gt; Removes all artifacts not in the git index from the repository. This includes source files which have not been &lt;code&gt;git add&lt;/code&gt;ed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make docs&lt;/code&gt;: Builds the documentation HTML using Sphinx.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make pre-commit&lt;/code&gt;: Runs the pre-commit checks over all files.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make ruff&lt;/code&gt;: Runs ruff over all files using the &lt;code&gt;pyproject.toml&lt;/code&gt; config (with autofix).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make pytest&lt;/code&gt;: Runs all tests with &lt;code&gt;pytest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test-performance&lt;/code&gt;: Runs performance tests with &lt;a href=&quot;https://codspeed.io&quot;&gt;codspeed&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;Run &lt;code&gt;make help&lt;/code&gt; for documentation on all available make targets.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;See the &lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/crates/infrastructure/TESTS.md&quot;&gt;crates/infrastructure/TESTS.md&lt;/a&gt; file for running the infrastructure integration tests.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Indicators and strategies can be developed in both Python and Cython. For performance and latency-sensitive applications, we recommend using Cython. Below are some examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/examples/indicators/ema_python.py&quot;&gt;indicator&lt;/a&gt; example written in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/indicators/&quot;&gt;indicator&lt;/a&gt; examples written in Cython.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/nautilus_trader/examples/strategies/&quot;&gt;strategy&lt;/a&gt; examples written in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/examples/backtest/&quot;&gt;backtest&lt;/a&gt; examples using a &lt;code&gt;BacktestEngine&lt;/code&gt; directly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;Docker containers are built using the base image &lt;code&gt;python:3.12-slim&lt;/code&gt; with the following variant tags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nautilus_trader:latest&lt;/code&gt; has the latest release version installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nautilus_trader:nightly&lt;/code&gt; has the head of the &lt;code&gt;nightly&lt;/code&gt; branch installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jupyterlab:latest&lt;/code&gt; has the latest release version installed along with &lt;code&gt;jupyterlab&lt;/code&gt; and an example backtest notebook with accompanying data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jupyterlab:nightly&lt;/code&gt; has the head of the &lt;code&gt;nightly&lt;/code&gt; branch installed along with &lt;code&gt;jupyterlab&lt;/code&gt; and an example backtest notebook with accompanying data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can pull the container images as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/nautechsystems/&amp;lt;image_variant_tag&amp;gt; --platform linux/amd64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can launch the backtest example container by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull ghcr.io/nautechsystems/jupyterlab:nightly --platform linux/amd64
docker run -p 8888:8888 ghcr.io/nautechsystems/jupyterlab:nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then open your browser at the following address:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;http://127.0.0.1:8888/lab
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;NautilusTrader currently exceeds the rate limit for Jupyter notebook logging (stdout output). Therefore, we set the &lt;code&gt;log_level&lt;/code&gt; to &lt;code&gt;ERROR&lt;/code&gt; in the examples. Lowering this level to see more logging will cause the notebook to hang during cell execution. We are investigating a fix that may involve either raising the configured rate limits for Jupyter or throttling the log flushing from Nautilus.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/jupyterlab/jupyterlab/issues/12845&quot;&gt;https://github.com/jupyterlab/jupyterlab/issues/12845&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/deshaw/jupyterlab-limit-output&quot;&gt;https://github.com/deshaw/jupyterlab-limit-output&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;We aim to provide the most pleasant developer experience possible for this hybrid codebase of Python, Cython and Rust. See the &lt;a href=&quot;https://nautilustrader.io/docs/latest/developer_guide/index.html&quot;&gt;Developer Guide&lt;/a&gt; for helpful information.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;Run &lt;code&gt;make build-debug&lt;/code&gt; to compile after changes to Rust or Cython code for the most efficient development workflow.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Testing with Rust&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://nexte.st&quot;&gt;cargo-nextest&lt;/a&gt; is the standard Rust test runner for NautilusTrader. Its key benefit is isolating each test in its own process, ensuring test reliability by avoiding interference.&lt;/p&gt; 
&lt;p&gt;You can install cargo-nextest by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cargo install cargo-nextest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;Run Rust tests with &lt;code&gt;make cargo-test&lt;/code&gt;, which uses &lt;strong&gt;cargo-nextest&lt;/strong&gt; with an efficient profile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you for considering contributing to NautilusTrader! We welcome any and all help to improve the project. If you have an idea for an enhancement or a bug fix, the first step is to open an &lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/issues&quot;&gt;issue&lt;/a&gt; on GitHub to discuss it with the team. This helps to ensure that your contribution will be well-aligned with the goals of the project and avoids duplication of effort.&lt;/p&gt; 
&lt;p&gt;Before getting started, be sure to review the &lt;a href=&quot;https://raw.githubusercontent.com/nautechsystems/nautilus_trader/develop/ROADMAP.md#open-source-scope&quot;&gt;open-source scope&lt;/a&gt; outlined in the project’s roadmap to understand what’s in and out of scope.&lt;/p&gt; 
&lt;p&gt;Once you&#39;re ready to start working on your contribution, make sure to follow the guidelines outlined in the &lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file. This includes signing a Contributor License Agreement (CLA) to ensure that your contributions can be included in the project.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Pull requests should target the &lt;code&gt;develop&lt;/code&gt; branch (the default branch). This is where new features and improvements are integrated before release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Thank you again for your interest in NautilusTrader! We look forward to reviewing your contributions and working with you to improve the project.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our community of users and contributors on &lt;a href=&quot;https://discord.gg/NautilusTrader&quot;&gt;Discord&lt;/a&gt; to chat and stay up-to-date with the latest announcements and features of NautilusTrader. Whether you&#39;re a developer looking to contribute or just want to learn more about the platform, all are welcome on our Discord server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;NautilusTrader does not issue, promote, or endorse any cryptocurrency tokens. Any claims or communications suggesting otherwise are unauthorized and false.&lt;/p&gt; 
 &lt;p&gt;All official updates and communications from NautilusTrader will be shared exclusively through &lt;a href=&quot;https://nautilustrader.io&quot;&gt;https://nautilustrader.io&lt;/a&gt;, our &lt;a href=&quot;https://discord.gg/NautilusTrader&quot;&gt;Discord server&lt;/a&gt;, or our X (Twitter) account: &lt;a href=&quot;https://x.com/NautilusTrader&quot;&gt;@NautilusTrader&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;If you encounter any suspicious activity, please report it to the appropriate platform and contact us at &lt;a href=&quot;mailto:info@nautechsystems.io&quot;&gt;info@nautechsystems.io&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The source code for NautilusTrader is available on GitHub under the &lt;a href=&quot;https://www.gnu.org/licenses/lgpl-3.0.en.html&quot;&gt;GNU Lesser General Public License v3.0&lt;/a&gt;. Contributions to the project are welcome and require the completion of a standard &lt;a href=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/CLA.md&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;NautilusTrader™ is developed and maintained by Nautech Systems, a technology company specializing in the development of high-performance trading systems. For more information, visit &lt;a href=&quot;https://nautilustrader.io&quot;&gt;https://nautilustrader.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;© 2015-2025 Nautech Systems Pty Ltd. All rights reserved.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/ns-logo.png&quot; alt=&quot;nautechsystems&quot; title=&quot;nautechsystems&quot; /&gt; &lt;img src=&quot;https://github.com/nautechsystems/nautilus_trader/raw/develop/assets/ferris.png&quot; width=&quot;128&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bevyengine/bevy</title>
      <link>https://github.com/bevyengine/bevy</link>
      <description>&lt;p&gt;A refreshingly simple data-driven game engine built in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://bevy.org&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/assets/branding/bevy_logo_light_dark_and_dimmed.svg?sanitize=true&quot; alt=&quot;Bevy&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bevyengine/bevy#license&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT%2FApache-blue.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/bevy&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/bevy.svg?sanitize=true&quot; alt=&quot;Crates.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/bevy&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/d/bevy.svg?sanitize=true&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.rs/bevy/latest/bevy/&quot;&gt;&lt;img src=&quot;https://docs.rs/bevy/badge.svg?sanitize=true&quot; alt=&quot;Docs&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bevyengine/bevy/actions&quot;&gt;&lt;img src=&quot;https://github.com/bevyengine/bevy/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/bevy&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/691052431525675048.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Bevy?&lt;/h2&gt; 
&lt;p&gt;Bevy is a refreshingly simple data-driven game engine built in Rust. It is free and open-source forever!&lt;/p&gt; 
&lt;h2&gt;WARNING&lt;/h2&gt; 
&lt;p&gt;Bevy is still in the early stages of development. Important features are missing. Documentation is sparse. A new version of Bevy containing breaking changes to the API is released &lt;a href=&quot;https://bevy.org/news/bevy-0-6/#the-train-release-schedule&quot;&gt;approximately once every 3 months&lt;/a&gt;. We provide &lt;a href=&quot;https://bevy.org/learn/migration-guides/&quot;&gt;migration guides&lt;/a&gt;, but we can&#39;t guarantee migrations will always be easy. Use only if you are willing to work in this environment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; Bevy relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is generally close to &quot;the latest stable release&quot; of Rust.&lt;/p&gt; 
&lt;h2&gt;Design Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Capable&lt;/strong&gt;: Offer a complete 2D and 3D feature set&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy for newbies to pick up, but infinitely flexible for power users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Focused&lt;/strong&gt;: Data-oriented architecture using the Entity Component System paradigm&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Use only what you need. Replace what you don&#39;t like&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: App logic should run quickly, and when possible, in parallel&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Productive&lt;/strong&gt;: Changes should compile quickly ... waiting isn&#39;t fun&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://bevy.org&quot;&gt;Features&lt;/a&gt;:&lt;/strong&gt; A quick overview of Bevy&#39;s features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://bevy.org/news/&quot;&gt;News&lt;/a&gt;&lt;/strong&gt;: A development blog that covers our progress, plans and shiny new features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://bevy.org/learn/quick-start/introduction&quot;&gt;Quick Start Guide&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s official Quick Start Guide. The best place to start learning Bevy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.rs/bevy&quot;&gt;Bevy Rust API Docs&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s Rust API docs, which are automatically generated from the doc comments in this repo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/bevyengine/bevy/tree/latest/examples&quot;&gt;Official Examples&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s dedicated, runnable examples, which are great for digging into specific concepts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://bevy.org/assets/#learning&quot;&gt;Community-Made Learning Resources&lt;/a&gt;&lt;/strong&gt;: More tutorials, documentation, and examples made by the Bevy community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Before contributing or participating in discussions with the community, you should familiarize yourself with our &lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/CODE_OF_CONDUCT.md&quot;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://discord.gg/bevy&quot;&gt;Discord&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s official discord server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://reddit.com/r/bevy&quot;&gt;Reddit&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s official subreddit.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/bevyengine/bevy/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;:&lt;/strong&gt; The best place for questions about Bevy, answered right here!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://bevy.org/assets/&quot;&gt;Bevy Assets&lt;/a&gt;:&lt;/strong&gt; A collection of awesome Bevy projects, tools, plugins and learning materials.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to help build Bevy, check out the &lt;strong&gt;&lt;a href=&quot;https://bevy.org/learn/contribute/introduction&quot;&gt;Contributor&#39;s Guide&lt;/a&gt;&lt;/strong&gt;. For simple problems, feel free to &lt;a href=&quot;https://github.com/bevyengine/bevy/issues&quot;&gt;open an issue&lt;/a&gt; or &lt;a href=&quot;https://github.com/bevyengine/bevy/pulls&quot;&gt;PR&lt;/a&gt; and tackle it yourself!&lt;/p&gt; 
&lt;p&gt;For more complex architecture decisions and experimental mad science, please open an &lt;a href=&quot;https://github.com/bevyengine/rfcs&quot;&gt;RFC&lt;/a&gt; (Request For Comments) so we can brainstorm together effectively!&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;We recommend checking out the &lt;a href=&quot;https://bevy.org/learn/quick-start/introduction&quot;&gt;Quick Start Guide&lt;/a&gt; for a brief introduction.&lt;/p&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://bevy.org/learn/quick-start/getting-started/setup&quot;&gt;Setup guide&lt;/a&gt; to ensure your development environment is set up correctly. Once set up, you can quickly try out the &lt;a href=&quot;https://github.com/bevyengine/bevy/tree/latest/examples&quot;&gt;examples&lt;/a&gt; by cloning this repo and running the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Switch to the correct version (latest release, default is main development branch)
git checkout latest
# Runs the &quot;breakout&quot; example
cargo run --example breakout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To draw a window with standard functionality enabled, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;use bevy::prelude::*;

fn main() {
  App::new()
    .add_plugins(DefaultPlugins)
    .run();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fast Compiles&lt;/h3&gt; 
&lt;p&gt;Bevy can be built just fine using default configuration on stable Rust. However for really fast iterative compiles, you should enable the &quot;fast compiles&quot; setup by &lt;a href=&quot;https://bevy.org/learn/quick-start/getting-started/setup&quot;&gt;following the instructions here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md&quot;&gt;Bevy Cargo Features&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This &lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md&quot;&gt;list&lt;/a&gt; outlines the different cargo features supported by Bevy. These allow you to customize the Bevy feature set for your use-case.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Bevy is the result of the hard work of many people. A huge thanks to all Bevy contributors, the many open source projects that have come before us, the &lt;a href=&quot;https://arewegameyet.rs/&quot;&gt;Rust gamedev ecosystem&lt;/a&gt;, and the many libraries we build on.&lt;/p&gt; 
&lt;p&gt;A huge thanks to Bevy&#39;s &lt;a href=&quot;https://bevy.org&quot;&gt;generous sponsors&lt;/a&gt;. Bevy will always be free and open source, but it isn&#39;t free to make. Please consider &lt;a href=&quot;https://bevy.org/donate/&quot;&gt;sponsoring our work&lt;/a&gt; if you like what we&#39;re building.&lt;/p&gt; 
&lt;!-- This next line need to stay exactly as is. It is required for BrowserStack sponsorship. --&gt; 
&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Bevy is free, open source and permissively licensed! Except where noted (below and/or in individual files), all code in this repository is dual-licensed under either:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT License (&lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-MIT&quot;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-APACHE&quot;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option. This means you can select the license you prefer! This dual-licensing approach is the de-facto standard in the Rust ecosystem and there are &lt;a href=&quot;https://github.com/bevyengine/bevy/issues/2373&quot;&gt;very good reasons&lt;/a&gt; to include both.&lt;/p&gt; 
&lt;p&gt;Some of the engine&#39;s code carries additional copyright notices and license terms due to their external origins. These are generally BSD-like, but exact details vary by crate: If the README of a crate contains a &#39;License&#39; header (or similar), the additional copyright notices and license terms applicable to that crate will be listed. The above licensing requirement still applies to contributions to those crates, and sections of those crates will carry those license terms. The &lt;a href=&quot;https://doc.rust-lang.org/cargo/reference/manifest.html#the-license-and-license-file-fields&quot;&gt;license&lt;/a&gt; field of each crate will also reflect this.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/assets&quot;&gt;assets&lt;/a&gt; included in this repository (for our &lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/examples/README.md&quot;&gt;examples&lt;/a&gt;) typically fall under different open licenses. These will not be included in your game (unless copied in by you), and they are not distributed in the published bevy crates. See &lt;a href=&quot;https://raw.githubusercontent.com/bevyengine/bevy/main/CREDITS.md&quot;&gt;CREDITS.md&lt;/a&gt; for the details of the licenses of those files.&lt;/p&gt; 
&lt;h3&gt;Your contributions&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iced-rs/iced</title>
      <link>https://github.com/iced-rs/iced</link>
      <description>&lt;p&gt;A cross-platform GUI library for Rust, inspired by Elm&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/docs/logo.svg?sanitize=true&quot; width=&quot;140px&quot; /&gt; 
 &lt;h1&gt;Iced&lt;/h1&gt; 
 &lt;p&gt;&lt;a href=&quot;https://docs.rs/iced/&quot;&gt;&lt;img src=&quot;https://docs.rs/iced/badge.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/iced&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/iced.svg?sanitize=true&quot; alt=&quot;Crates.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/iced-rs/iced/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/l/iced.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/iced&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/d/iced.svg?sanitize=true&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/iced-rs/iced/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/iced-rs/iced/test.yml?branch=master&amp;amp;event=push&amp;amp;label=test&quot; alt=&quot;Test Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discourse.iced.rs/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscourse.iced.rs%2Fsite%2Fstatistics.json&amp;amp;query=%24.users_count&amp;amp;suffix=%20users&amp;amp;label=discourse&amp;amp;color=5e7ce2&quot; alt=&quot;Discourse&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/3xZJ65GAhd&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/628993209984614400?label=&amp;amp;labelColor=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&quot; alt=&quot;Discord Server&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;A cross-platform GUI library for Rust focused on simplicity and type-safety. Inspired by &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;.&lt;/p&gt; 
 &lt;a href=&quot;https://github.com/squidowl/halloy&quot;&gt; &lt;img src=&quot;https://iced.rs/showcase/halloy.gif&quot; width=&quot;460px&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://github.com/hecrj/icebreaker&quot;&gt; &lt;img src=&quot;https://iced.rs/showcase/icebreaker.gif&quot; width=&quot;360px&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple, easy-to-use, batteries-included API&lt;/li&gt; 
 &lt;li&gt;Type-safe, reactive programming model&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/docs/images/todos_desktop.jpg&quot;&gt;Cross-platform support&lt;/a&gt; (Windows, macOS, Linux, and the Web)&lt;/li&gt; 
 &lt;li&gt;Responsive layout&lt;/li&gt; 
 &lt;li&gt;Built-in widgets (including &lt;a href=&quot;https://iced.rs/examples/text_input.mp4&quot;&gt;text inputs&lt;/a&gt;, &lt;a href=&quot;https://iced.rs/examples/scrollable.mp4&quot;&gt;scrollables&lt;/a&gt;, and more!)&lt;/li&gt; 
 &lt;li&gt;Custom widget support (create your own!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iced.rs/examples/debug.mp4&quot;&gt;Debug overlay with performance metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;First-class support for async actions (use futures!)&lt;/li&gt; 
 &lt;li&gt;Modular ecosystem split into reusable parts: 
  &lt;ul&gt; 
   &lt;li&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/runtime/&quot;&gt;renderer-agnostic native runtime&lt;/a&gt; enabling integration with existing systems&lt;/li&gt; 
   &lt;li&gt;Two built-in renderers leveraging &lt;a href=&quot;https://github.com/gfx-rs/wgpu&quot;&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/RazrFalcon/tiny-skia&quot;&gt;&lt;code&gt;tiny-skia&lt;/code&gt;&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/wgpu/&quot;&gt;&lt;code&gt;iced_wgpu&lt;/code&gt;&lt;/a&gt; supporting Vulkan, Metal and DX12&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/tiny_skia/&quot;&gt;&lt;code&gt;iced_tiny_skia&lt;/code&gt;&lt;/a&gt; offering a software alternative as a fallback&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/winit/&quot;&gt;windowing shell&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Iced is currently experimental software.&lt;/strong&gt; &lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/ROADMAP.md&quot;&gt;Take a look at the roadmap&lt;/a&gt; and &lt;a href=&quot;https://github.com/iced-rs/iced/issues&quot;&gt;check out the issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Inspired by &lt;a href=&quot;https://guide.elm-lang.org/architecture/&quot;&gt;The Elm Architecture&lt;/a&gt;, Iced expects you to split user interfaces into four different concepts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;State&lt;/strong&gt; — the state of your application&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; — user interactions or meaningful events that you care about&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View logic&lt;/strong&gt; — a way to display your &lt;strong&gt;state&lt;/strong&gt; as widgets that may produce &lt;strong&gt;messages&lt;/strong&gt; on user interaction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update logic&lt;/strong&gt; — a way to react to &lt;strong&gt;messages&lt;/strong&gt; and update your &lt;strong&gt;state&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We can build something to see how this works! Let&#39;s say we want a simple counter that can be incremented and decremented using two buttons.&lt;/p&gt; 
&lt;p&gt;We start by modelling the &lt;strong&gt;state&lt;/strong&gt; of our application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;#[derive(Default)]
struct Counter {
    value: i32,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we need to define the possible user interactions of our counter: the button presses. These interactions are our &lt;strong&gt;messages&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;#[derive(Debug, Clone, Copy)]
pub enum Message {
    Increment,
    Decrement,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, let&#39;s show the actual counter by putting it all together in our &lt;strong&gt;view logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;use iced::widget::{button, column, text, Column};

impl Counter {
    pub fn view(&amp;amp;self) -&amp;gt; Column&amp;lt;Message&amp;gt; {
        // We use a column: a simple vertical layout
        column![
            // The increment button. We tell it to produce an
            // `Increment` message when pressed
            button(&quot;+&quot;).on_press(Message::Increment),

            // We show the value of the counter here
            text(self.value).size(50),

            // The decrement button. We tell it to produce a
            // `Decrement` message when pressed
            button(&quot;-&quot;).on_press(Message::Decrement),
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, we need to be able to react to any produced &lt;strong&gt;messages&lt;/strong&gt; and change our &lt;strong&gt;state&lt;/strong&gt; accordingly in our &lt;strong&gt;update logic&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;impl Counter {
    // ...

    pub fn update(&amp;amp;mut self, message: Message) {
        match message {
            Message::Increment =&amp;gt; {
                self.value += 1;
            }
            Message::Decrement =&amp;gt; {
                self.value -= 1;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that&#39;s everything! We just wrote a whole user interface. Let&#39;s run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;fn main() -&amp;gt; iced::Result {
    iced::run(&quot;A cool counter&quot;, Counter::update, Counter::view)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Iced will automatically:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Take the result of our &lt;strong&gt;view logic&lt;/strong&gt; and layout its widgets.&lt;/li&gt; 
 &lt;li&gt;Process events from our system and produce &lt;strong&gt;messages&lt;/strong&gt; for our &lt;strong&gt;update logic&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Draw the resulting user interface.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://book.iced.rs/&quot;&gt;book&lt;/a&gt;, the &lt;a href=&quot;https://docs.rs/iced/&quot;&gt;documentation&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/iced-rs/iced/tree/master/examples#examples&quot;&gt;examples&lt;/a&gt; to learn more!&lt;/p&gt; 
&lt;h2&gt;Implementation details&lt;/h2&gt; 
&lt;p&gt;Iced was originally born as an attempt at bringing the simplicity of &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; and &lt;a href=&quot;https://guide.elm-lang.org/architecture/&quot;&gt;The Elm Architecture&lt;/a&gt; into &lt;a href=&quot;https://github.com/hecrj/coffee&quot;&gt;Coffee&lt;/a&gt;, a 2D game library I am working on.&lt;/p&gt; 
&lt;p&gt;The core of the library was implemented during May 2019 in &lt;a href=&quot;https://github.com/hecrj/coffee/pull/35&quot;&gt;this pull request&lt;/a&gt;. &lt;a href=&quot;https://github.com/iced-rs/iced/tree/0.1.0-alpha&quot;&gt;The first alpha version&lt;/a&gt; was eventually released as &lt;a href=&quot;https://www.reddit.com/r/rust/comments/czzjnv/iced_a_rendereragnostic_gui_library_focused_on/&quot;&gt;a renderer-agnostic GUI library&lt;/a&gt;. The library did not provide a renderer and implemented the current &lt;a href=&quot;https://raw.githubusercontent.com/iced-rs/iced/master/examples/README.md#tour&quot;&gt;tour example&lt;/a&gt; on top of &lt;a href=&quot;https://github.com/ggez/ggez&quot;&gt;&lt;code&gt;ggez&lt;/code&gt;&lt;/a&gt;, a game library.&lt;/p&gt; 
&lt;p&gt;Since then, the focus has shifted towards providing a batteries-included, end-user-oriented GUI library, while keeping the ecosystem modular.&lt;/p&gt; 
&lt;h2&gt;Contributing / Feedback&lt;/h2&gt; 
&lt;p&gt;If you want to contribute, please read our &lt;a href=&quot;https://github.com/iced-rs/iced/raw/master/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Feedback is also welcome! You can create a new topic in &lt;a href=&quot;https://discourse.iced.rs/&quot;&gt;our Discourse forum&lt;/a&gt; or come chat to &lt;a href=&quot;https://discord.gg/3xZJ65GAhd&quot;&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;The development of Iced is sponsored by the &lt;a href=&quot;https://cryptowat.ch/charts&quot;&gt;Cryptowatch&lt;/a&gt; team at &lt;a href=&quot;https://kraken.com/&quot;&gt;Kraken.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openobserve/openobserve</title>
      <link>https://github.com/openobserve/openobserve</link>
      <description>&lt;p&gt;🚀 10x easier, 🚀 140x lower storage cost, 🚀 high performance, 🚀 petabyte scale - Elasticsearch/Splunk/Datadog alternative for 🚀 (logs, metrics, traces, RUM, Error tracking, Session replay).&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://openobserve.ai&quot;&gt;&lt;img src=&quot;https://openobserve.ai/img/logo/o2-logo-readme.svg?sanitize=true&quot; alt=&quot;OpenObserve&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;em&gt;🚀 10x easier, 🚀 140x lower storage cost, 🚀 high performance, 🚀 petabyte scale - Elasticsearch/Splunk/Datadog alternative for 🚀 (logs, metrics, traces).&lt;/em&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/openobserve/openobserve&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/last-commit/openobserve/openobserve&quot; alt=&quot;Last Commit&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/openobserve/openobserve/stargazers&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/openobserve/openobserve&quot; alt=&quot;GitHub Stars&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/openobserve/openobserve/issues&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/issues/openobserve/openobserve&quot; alt=&quot;GitHub Issues&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/openobserve/openobserve/graphs/contributors&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/openobserve/openobserve&quot; alt=&quot;Contributors&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/openobserve/openobserve/releases&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/openobserve/openobserve&quot; alt=&quot;GitHub Release&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;OpenObserve (O2 for short) is a cloud-native observability platform built specifically for logs, metrics, traces, analytics, RUM (Real User Monitoring - Performance, Errors, Session Replay) designed to work at petabyte scale.&lt;/p&gt; 
&lt;p&gt;It is straightforward and easy to operate, in contrast to Elasticsearch, which requires understanding and tuning numerous settings. Get OpenObserve up and running in under 2 minutes.&lt;/p&gt; 
&lt;p&gt;OpenObserve serves as a seamless replacement for Elasticsearch for users who ingest data using APIs and perform searches. OpenObserve comes with its own user interface, eliminating the need for separate installation.&lt;/p&gt; 
&lt;p&gt;You can reduce your log storage costs by ~140x compared to Elasticsearch by using OpenObserve. Below, we present the results from pushing logs from our production Kubernetes cluster to both Elasticsearch and OpenObserve using Fluent Bit.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_vs_es.png&quot; alt=&quot;OpenObserve Vs Elasticsearch&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;🎥 Introduction Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=4VwuC1tpRP4&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/o2_intro.webp&quot; alt=&quot;OpenObserve Introduction&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Logs, Metrics, Traces&lt;/strong&gt;: Comprehensive support for various data types.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenTelemetry Support&lt;/strong&gt;: Full compatibility with OTLP for logs, metrics, and traces.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real User Monitoring (RUM)&lt;/strong&gt;: Includes performance tracking, error logging, and session replay.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dashboards, Reports, Alerts&lt;/strong&gt;: Features over 18 different chart types for comprehensive data visualization for on-the-fly analysis and reporting along with alerting.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pipelines&lt;/strong&gt;: Enrich, redact, reduce, normalize data on the fly. Stream processing for logs to metrics and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Embedded GUI&lt;/strong&gt;: Intuitive and user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQL and PromQL Support&lt;/strong&gt;: Query logs and traces with SQL, and metrics with SQL and PromQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Single Binary or HA Installation&lt;/strong&gt;: Install using a single binary for small deployments or in HA mode for large deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versatile Storage Options&lt;/strong&gt;: Supports local disk, S3, MinIO, GCS, Azure Blob Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High Availability and Clustering&lt;/strong&gt;: Ensures reliable and scalable performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Schema&lt;/strong&gt;: Adapts to your data structure seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in Authentication&lt;/strong&gt;: Secure and ready to use.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of Operation&lt;/strong&gt;: Designed for simplicity and efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Upgrades&lt;/strong&gt;: Hassle-free updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multilingual UI&lt;/strong&gt;: Supports 11 languages, including English, Spanish, German, French, Chinese, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a full list of features, check the &lt;a href=&quot;https://openobserve.ai/docs/#project-status-features-and-roadmap&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⚡️ Quick start&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d \
      --name openobserve \
      -v $PWD/data:/data \
      -p 5080:5080 \
      -e ZO_ROOT_USER_EMAIL=&quot;root@example.com&quot; \
      -e ZO_ROOT_USER_PASSWORD=&quot;Complexpass#123&quot; \
      public.ecr.aws/zinclabs/openobserve:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🐙 Docker Compose:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    restart: unless-stopped
    environment:
      ZO_ROOT_USER_EMAIL: &quot;root@example.com&quot;
      ZO_ROOT_USER_PASSWORD: &quot;Complexpass#123&quot;
    ports:
      - &quot;5080:5080&quot;
    volumes:
      - data:/data
volumes:
  data:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For other ways to quickly install OpenObserve or use OpenObserve cloud, check &lt;a href=&quot;https://openobserve.ai/docs/quickstart&quot;&gt;quickstart documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For installing OpenObserve in HA mode, check &lt;a href=&quot;https://openobserve.ai/docs/ha_deployment/&quot;&gt;HA deployment documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- ## Enterprise Vs Open source Vs Cloud edition

OpenObserve is available in three different editions:


| Feature | Open Source (Self hosted) | Enterprise (Self hosted) | Cloud |
| --- | --- | --- | --- | 
| Logs | ✅ | ✅ | ✅ |
| Metrics | ✅ | ✅ | ✅ |
| Traces | ✅ | ✅ | ✅ |
| RUM | ✅ | ✅ | ✅ |
| Alerts | ✅ | ✅ | ✅ |
| Dashboards | ✅ | ✅ | ✅ |
| Reports | ✅ | ✅ | ✅ |
| VRL functions | ✅ | ✅ | ✅ |
| Pipelines | ✅ | ✅ | ✅ |
| High Availability | ✅ | ✅ | ✅ |
| Multitenancy (Organizations) | ✅ | ✅ | ✅ |
| Dynamic schema and schema evolution | ✅ | ✅ | ✅ |
| Advanced multilingual GUI | ✅ | ✅ | ✅ |
| Single Sign On | ❌ | ✅ | ✅ |
| Role Based Access Control (RBAC) | ❌ | ✅ | ✅ |
| Federated search / Super cluster | ❌ | ✅ | ❌ |
| Query management | ❌ | ✅ | ❌ |
| Workload management (QoS) | ❌ | ✅ | ❌ |
| Audit trail | ❌ | ✅ | ❌ |
| Ability to influence roadmap | ❌ | ✅ | ✅ on enterprise plan |
| License | AGPL | Enterprise | Cloud |
| Support | Community | Enterprise | Cloud |
| Cost | Free | If self hosted, free for up to 200 GB/Day data ingested &lt;br&gt; Paid thereafter  | Free 200 GB/Month data ingested &lt;br&gt; Paid thereafter | --&gt; 
&lt;h2&gt;📷 Screenshots&lt;/h2&gt; 
&lt;h3&gt;Home&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_home.png&quot; alt=&quot;Home&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/logs.png&quot; alt=&quot;Logs&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Traces (OpenTelemetry)&lt;/h3&gt; 
&lt;p&gt;Trace details page &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/traces.png&quot; alt=&quot;Traces using OpenTelemetry&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Golden metrics based on traces &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/traces-overall.png&quot; alt=&quot;Traces golden metrics&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Visualizations and Dashboards&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard.png&quot; alt=&quot;Dashboard&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard2.png&quot; alt=&quot;Dashboard&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/create-panel.png&quot; alt=&quot;Create panel&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/map.png&quot; alt=&quot;Map&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Front end monitoring&lt;/h3&gt; 
&lt;p&gt;Performance analytics &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/performance.png&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Session replay &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/session-replay.png&quot; alt=&quot;Session replay&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Error tracking &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/error-tracking.png&quot; alt=&quot;Error tracking&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Alerts&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/alerts.png&quot; alt=&quot;Alerts&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Streams&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/streams.png&quot; alt=&quot;Streams&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Ingestion&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/ingestion1.png&quot; alt=&quot;Ingestion&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Pipeline&lt;/h3&gt; 
&lt;p&gt;Pipeline &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/pipeline.png&quot; alt=&quot;Pipeline&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Function &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/function.png&quot; alt=&quot;Function&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;IAM&lt;/h3&gt; 
&lt;p&gt;SSO (Single Sign On) &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/sso.png&quot; alt=&quot;SSO&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;RBAC (Role Based Access Control) &lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/iam_rbac.png&quot; alt=&quot;RBAC&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;SBOM&lt;/h3&gt; 
&lt;p&gt;Software Bill of Materials for OpenObserve&lt;/p&gt; 
&lt;h4&gt;Rust&lt;/h4&gt; 
&lt;p&gt;SBOM can be found &lt;a href=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/openobserve.cdx.xml&quot;&gt;here&lt;/a&gt;. You can analyze it using &lt;a href=&quot;https://dependencytrack.org/&quot;&gt;dependency track&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to generate the SBOM, you can use the following commands:&lt;/p&gt; 
&lt;p&gt;Install cargo-cyclonedx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cargo install cargo-cyclonedx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate the SBOM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cargo-cyclonedx cyclonedx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;JavaScript&lt;/h4&gt; 
&lt;p&gt;SBOM can be found &lt;a href=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/web/sbom.json&quot;&gt;here&lt;/a&gt;. You can analyze it using &lt;a href=&quot;https://dependencytrack.org/&quot;&gt;dependency track&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to generate the SBOM, you can use the following commands:&lt;/p&gt; 
&lt;p&gt;Install cyclonedx-npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install --global @cyclonedx/cyclonedx-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate the SBOM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd web
cyclonedx-npm &amp;gt; sbom.json         
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;⚖️ License&lt;/h2&gt; 
&lt;p&gt;OpenObserve is licensed under the AGPL-3.0 license. For more details, see the &lt;a href=&quot;https://github.com/openobserve/openobserve/raw/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🌍 Community&lt;/h2&gt; 
&lt;h3&gt;🔗 Join OpenObserve community on Slack&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://short.openobserve.ai/community&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/slack.png&quot; alt=&quot;Slack&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Easiest way to get support is to join the &lt;a href=&quot;https://short.openobserve.ai/community&quot;&gt;Slack channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;📱 Join OpenObserve community on WeChat&lt;/h3&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/wechat_qr.jpg&quot; width=&quot;300&quot; /&gt;</description>
    </item>
    
    <item>
      <title>pola-rs/polars</title>
      <link>https://github.com/pola-rs/polars</link>
      <description>&lt;p&gt;Dataframes powered by a multithreaded, vectorized query engine, written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://pola.rs&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pola-rs/polars-static/master/banner/polars_github_banner.svg?sanitize=true&quot; alt=&quot;Polars logo&quot; /&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://crates.io/crates/polars&quot;&gt; &lt;img src=&quot;https://img.shields.io/crates/v/polars.svg?sanitize=true&quot; alt=&quot;crates.io Latest Release&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://pypi.org/project/polars/&quot;&gt; &lt;img src=&quot;https://img.shields.io/pypi/v/polars.svg?sanitize=true&quot; alt=&quot;PyPi Latest Release&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://www.npmjs.com/package/nodejs-polars&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/nodejs-polars.svg?sanitize=true&quot; alt=&quot;NPM Latest Release&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://community.r-multiverse.org/polars&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fcommunity.r-multiverse.org%2Fapi%2Fpackages%2Fpolars&amp;amp;query=%24.Version&amp;amp;label=r-multiverse&quot; alt=&quot;R-multiverse Latest Release&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://doi.org/10.5281/zenodo.7697217&quot;&gt; &lt;img src=&quot;https://zenodo.org/badge/DOI/10.5281/zenodo.7697217.svg?sanitize=true&quot; alt=&quot;DOI Latest Release&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;Documentation&lt;/b&gt;: &lt;a href=&quot;https://docs.pola.rs/api/python/stable/reference/index.html&quot;&gt;Python&lt;/a&gt; - &lt;a href=&quot;https://docs.rs/polars/latest/polars/&quot;&gt;Rust&lt;/a&gt; - &lt;a href=&quot;https://pola-rs.github.io/nodejs-polars/index.html&quot;&gt;Node.js&lt;/a&gt; - &lt;a href=&quot;https://pola-rs.github.io/r-polars/index.html&quot;&gt;R&lt;/a&gt; | &lt;b&gt;StackOverflow&lt;/b&gt;: &lt;a href=&quot;https://stackoverflow.com/questions/tagged/python-polars&quot;&gt;Python&lt;/a&gt; - &lt;a href=&quot;https://stackoverflow.com/questions/tagged/rust-polars&quot;&gt;Rust&lt;/a&gt; - &lt;a href=&quot;https://stackoverflow.com/questions/tagged/nodejs-polars&quot;&gt;Node.js&lt;/a&gt; - &lt;a href=&quot;https://stackoverflow.com/questions/tagged/r-polars&quot;&gt;R&lt;/a&gt; | &lt;a href=&quot;https://docs.pola.rs/&quot;&gt;User guide&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/4UfP5cfBE7&quot;&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Polars: Blazingly fast DataFrames in Rust, Python, Node.js, R, and SQL&lt;/h2&gt; 
&lt;p&gt;Polars is a DataFrame interface on top of an OLAP Query Engine implemented in Rust using &lt;a href=&quot;https://arrow.apache.org/docs/format/Columnar.html&quot;&gt;Apache Arrow Columnar Format&lt;/a&gt; as the memory model.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lazy | eager execution&lt;/li&gt; 
 &lt;li&gt;Multi-threaded&lt;/li&gt; 
 &lt;li&gt;SIMD&lt;/li&gt; 
 &lt;li&gt;Query optimization&lt;/li&gt; 
 &lt;li&gt;Powerful expression API&lt;/li&gt; 
 &lt;li&gt;Hybrid Streaming (larger-than-RAM datasets)&lt;/li&gt; 
 &lt;li&gt;Rust | Python | NodeJS | R | ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more, read the &lt;a href=&quot;https://docs.pola.rs/&quot;&gt;user guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Python&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import polars as pl
&amp;gt;&amp;gt;&amp;gt; df = pl.DataFrame(
...     {
...         &quot;A&quot;: [1, 2, 3, 4, 5],
...         &quot;fruits&quot;: [&quot;banana&quot;, &quot;banana&quot;, &quot;apple&quot;, &quot;apple&quot;, &quot;banana&quot;],
...         &quot;B&quot;: [5, 4, 3, 2, 1],
...         &quot;cars&quot;: [&quot;beetle&quot;, &quot;audi&quot;, &quot;beetle&quot;, &quot;beetle&quot;, &quot;beetle&quot;],
...     }
... )

# embarrassingly parallel execution &amp;amp; very expressive query language
&amp;gt;&amp;gt;&amp;gt; df.sort(&quot;fruits&quot;).select(
...     &quot;fruits&quot;,
...     &quot;cars&quot;,
...     pl.lit(&quot;fruits&quot;).alias(&quot;literal_string_fruits&quot;),
...     pl.col(&quot;B&quot;).filter(pl.col(&quot;cars&quot;) == &quot;beetle&quot;).sum(),
...     pl.col(&quot;A&quot;).filter(pl.col(&quot;B&quot;) &amp;gt; 2).sum().over(&quot;cars&quot;).alias(&quot;sum_A_by_cars&quot;),
...     pl.col(&quot;A&quot;).sum().over(&quot;fruits&quot;).alias(&quot;sum_A_by_fruits&quot;),
...     pl.col(&quot;A&quot;).reverse().over(&quot;fruits&quot;).alias(&quot;rev_A_by_fruits&quot;),
...     pl.col(&quot;A&quot;).sort_by(&quot;B&quot;).over(&quot;fruits&quot;).alias(&quot;sort_A_by_B_by_fruits&quot;),
... )
shape: (5, 8)
┌──────────┬──────────┬──────────────┬─────┬─────────────┬─────────────┬─────────────┬─────────────┐
│ fruits   ┆ cars     ┆ literal_stri ┆ B   ┆ sum_A_by_ca ┆ sum_A_by_fr ┆ rev_A_by_fr ┆ sort_A_by_B │
│ ---      ┆ ---      ┆ ng_fruits    ┆ --- ┆ rs          ┆ uits        ┆ uits        ┆ _by_fruits  │
│ str      ┆ str      ┆ ---          ┆ i64 ┆ ---         ┆ ---         ┆ ---         ┆ ---         │
│          ┆          ┆ str          ┆     ┆ i64         ┆ i64         ┆ i64         ┆ i64         │
╞══════════╪══════════╪══════════════╪═════╪═════════════╪═════════════╪═════════════╪═════════════╡
│ &quot;apple&quot;  ┆ &quot;beetle&quot; ┆ &quot;fruits&quot;     ┆ 11  ┆ 4           ┆ 7           ┆ 4           ┆ 4           │
│ &quot;apple&quot;  ┆ &quot;beetle&quot; ┆ &quot;fruits&quot;     ┆ 11  ┆ 4           ┆ 7           ┆ 3           ┆ 3           │
│ &quot;banana&quot; ┆ &quot;beetle&quot; ┆ &quot;fruits&quot;     ┆ 11  ┆ 4           ┆ 8           ┆ 5           ┆ 5           │
│ &quot;banana&quot; ┆ &quot;audi&quot;   ┆ &quot;fruits&quot;     ┆ 11  ┆ 2           ┆ 8           ┆ 2           ┆ 2           │
│ &quot;banana&quot; ┆ &quot;beetle&quot; ┆ &quot;fruits&quot;     ┆ 11  ┆ 4           ┆ 8           ┆ 1           ┆ 1           │
└──────────┴──────────┴──────────────┴─────┴─────────────┴─────────────┴─────────────┴─────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SQL&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; df = pl.scan_csv(&quot;docs/assets/data/iris.csv&quot;)
&amp;gt;&amp;gt;&amp;gt; ## OPTION 1
&amp;gt;&amp;gt;&amp;gt; # run SQL queries on frame-level
&amp;gt;&amp;gt;&amp;gt; df.sql(&quot;&quot;&quot;
...	SELECT species,
...	  AVG(sepal_length) AS avg_sepal_length
...	FROM self
...	GROUP BY species
...	&quot;&quot;&quot;).collect()
shape: (3, 2)
┌────────────┬──────────────────┐
│ species    ┆ avg_sepal_length │
│ ---        ┆ ---              │
│ str        ┆ f64              │
╞════════════╪══════════════════╡
│ Virginica  ┆ 6.588            │
│ Versicolor ┆ 5.936            │
│ Setosa     ┆ 5.006            │
└────────────┴──────────────────┘
&amp;gt;&amp;gt;&amp;gt; ## OPTION 2
&amp;gt;&amp;gt;&amp;gt; # use pl.sql() to operate on the global context
&amp;gt;&amp;gt;&amp;gt; df2 = pl.LazyFrame({
...    &quot;species&quot;: [&quot;Setosa&quot;, &quot;Versicolor&quot;, &quot;Virginica&quot;],
...    &quot;blooming_season&quot;: [&quot;Spring&quot;, &quot;Summer&quot;, &quot;Fall&quot;]
...})
&amp;gt;&amp;gt;&amp;gt; pl.sql(&quot;&quot;&quot;
... SELECT df.species,
...     AVG(df.sepal_length) AS avg_sepal_length,
...     df2.blooming_season
... FROM df
... LEFT JOIN df2 ON df.species = df2.species
... GROUP BY df.species, df2.blooming_season
... &quot;&quot;&quot;).collect()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;SQL commands can also be run directly from your terminal using the Polars CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run an inline SQL query
&amp;gt; polars -c &quot;SELECT species, AVG(sepal_length) AS avg_sepal_length, AVG(sepal_width) AS avg_sepal_width FROM read_csv(&#39;docs/assets/data/iris.csv&#39;) GROUP BY species;&quot;

# run interactively
&amp;gt; polars
Polars CLI v0.3.0
Type .help for help.

&amp;gt; SELECT species, AVG(sepal_length) AS avg_sepal_length, AVG(sepal_width) AS avg_sepal_width FROM read_csv(&#39;docs/assets/data/iris.csv&#39;) GROUP BY species;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the &lt;a href=&quot;https://github.com/pola-rs/polars-cli&quot;&gt;Polars CLI repository&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Performance 🚀🚀&lt;/h2&gt; 
&lt;h3&gt;Blazingly fast&lt;/h3&gt; 
&lt;p&gt;Polars is very fast. In fact, it is one of the best performing solutions available. See the &lt;a href=&quot;https://www.pola.rs/benchmarks.html&quot;&gt;PDS-H benchmarks&lt;/a&gt; results.&lt;/p&gt; 
&lt;h3&gt;Lightweight&lt;/h3&gt; 
&lt;p&gt;Polars is also very lightweight. It comes with zero required dependencies, and this shows in the import times:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;polars: 70ms&lt;/li&gt; 
 &lt;li&gt;numpy: 104ms&lt;/li&gt; 
 &lt;li&gt;pandas: 520ms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Handles larger-than-RAM data&lt;/h3&gt; 
&lt;p&gt;If you have data that does not fit into memory, Polars&#39; query engine is able to process your query (or parts of your query) in a streaming fashion. This drastically reduces memory requirements, so you might be able to process your 250GB dataset on your laptop. Collect with &lt;code&gt;collect(engine=&#39;streaming&#39;)&lt;/code&gt; to run the query streaming. (This might be a little slower, but it is still very fast!)&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;Install the latest Polars version with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pip install polars
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We also have a conda package (&lt;code&gt;conda install -c conda-forge polars&lt;/code&gt;), however pip is the preferred way to install Polars.&lt;/p&gt; 
&lt;p&gt;Install Polars with all optional dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pip install &#39;polars[all]&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install a subset of all optional dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pip install &#39;polars[numpy,pandas,pyarrow]&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.pola.rs/user-guide/installation/#feature-flags&quot;&gt;User Guide&lt;/a&gt; for more details on optional dependencies&lt;/p&gt; 
&lt;p&gt;To see the current Polars version and a full list of its optional dependencies, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;pl.show_versions()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Releases happen quite often (weekly / every few days) at the moment, so updating Polars regularly to get the latest bugfixes / features might not be a bad idea.&lt;/p&gt; 
&lt;h3&gt;Rust&lt;/h3&gt; 
&lt;p&gt;You can take latest release from &lt;code&gt;crates.io&lt;/code&gt;, or if you want to use the latest features / performance improvements point to the &lt;code&gt;main&lt;/code&gt; branch of this repo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;polars = { git = &quot;https://github.com/pola-rs/polars&quot;, rev = &quot;&amp;lt;optional git tag&amp;gt;&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Requires Rust version &lt;code&gt;&amp;gt;=1.80&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute? Read our &lt;a href=&quot;https://docs.pola.rs/development/contributing/&quot;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Python: compile Polars from source&lt;/h2&gt; 
&lt;p&gt;If you want a bleeding edge release or maximal performance you should compile Polars from source.&lt;/p&gt; 
&lt;p&gt;This can be done by going through the following steps in sequence:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the latest &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;Rust compiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://maturin.rs/&quot;&gt;maturin&lt;/a&gt;: &lt;code&gt;pip install maturin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd py-polars&lt;/code&gt; and choose one of the following: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;, slow binary with debug assertions and symbols, fast compile times&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-release&lt;/code&gt;, fast binary without debug assertions, minimal debug symbols, long compile times&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-nodebug-release&lt;/code&gt;, same as build-release but without any debug symbols, slightly faster to compile&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-debug-release&lt;/code&gt;, same as build-release but with full debug symbols, slightly slower to compile&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;make build-dist-release&lt;/code&gt;, fastest binary, extreme compile times&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;By default the binary is compiled with optimizations turned on for a modern CPU. Specify &lt;code&gt;LTS_CPU=1&lt;/code&gt; with the command if your CPU is older and does not support e.g. AVX2.&lt;/p&gt; 
&lt;p&gt;Note that the Rust crate implementing the Python bindings is called &lt;code&gt;py-polars&lt;/code&gt; to distinguish from the wrapped Rust crate &lt;code&gt;polars&lt;/code&gt; itself. However, both the Python package and the Python module are named &lt;code&gt;polars&lt;/code&gt;, so you can &lt;code&gt;pip install polars&lt;/code&gt; and &lt;code&gt;import polars&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Using custom Rust functions in Python&lt;/h2&gt; 
&lt;p&gt;Extending Polars with UDFs compiled in Rust is easy. We expose PyO3 extensions for &lt;code&gt;DataFrame&lt;/code&gt; and &lt;code&gt;Series&lt;/code&gt; data structures. See more in &lt;a href=&quot;https://github.com/pola-rs/polars/tree/main/pyo3-polars&quot;&gt;https://github.com/pola-rs/polars/tree/main/pyo3-polars&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Going big...&lt;/h2&gt; 
&lt;p&gt;Do you expect more than 2^32 (~4.2 billion) rows? Compile Polars with the &lt;code&gt;bigidx&lt;/code&gt; feature flag or, for Python users, install &lt;code&gt;pip install polars-u64-idx&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Don&#39;t use this unless you hit the row boundary as the default build of Polars is faster and consumes less memory.&lt;/p&gt; 
&lt;h2&gt;Legacy&lt;/h2&gt; 
&lt;p&gt;Do you want Polars to run on an old CPU (e.g. dating from before 2011), or on an &lt;code&gt;x86-64&lt;/code&gt; build of Python on Apple Silicon under Rosetta? Install &lt;code&gt;pip install polars-lts-cpu&lt;/code&gt;. This version of Polars is compiled without &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions&quot;&gt;AVX&lt;/a&gt; target features.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com&quot;&gt;&lt;img src=&quot;https://www.jetbrains.com/company/brand/img/jetbrains_logo.png&quot; height=&quot;50&quot; alt=&quot;JetBrains logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>seanmonstar/warp</title>
      <link>https://github.com/seanmonstar/warp</link>
      <description>&lt;p&gt;A super-easy, composable, web server framework for warp speeds.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;warp&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://crates.io/crates/warp&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/warp.svg?sanitize=true&quot; alt=&quot;crates.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.rs/warp&quot;&gt;&lt;img src=&quot;https://docs.rs/warp/badge.svg?sanitize=true&quot; alt=&quot;Released API docs&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/seanmonstar/warp/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;MIT licensed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/seanmonstar/warp/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/seanmonstar/warp/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;GHA Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/RFsPjyt&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/500028886025895936.svg?logo=discord&quot; alt=&quot;Discord chat&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A super-easy, composable, web server framework for warp speeds.&lt;/p&gt; 
&lt;p&gt;The fundamental building block of &lt;code&gt;warp&lt;/code&gt; is the &lt;code&gt;Filter&lt;/code&gt;: they can be combined and composed to express rich requirements on requests.&lt;/p&gt; 
&lt;p&gt;Thanks to its &lt;code&gt;Filter&lt;/code&gt; system, warp provides these out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Path routing and parameter extraction&lt;/li&gt; 
 &lt;li&gt;Header requirements and extraction&lt;/li&gt; 
 &lt;li&gt;Query string deserialization&lt;/li&gt; 
 &lt;li&gt;JSON and Form bodies&lt;/li&gt; 
 &lt;li&gt;Multipart form data&lt;/li&gt; 
 &lt;li&gt;Static Files and Directories&lt;/li&gt; 
 &lt;li&gt;Websockets&lt;/li&gt; 
 &lt;li&gt;Access logging&lt;/li&gt; 
 &lt;li&gt;Gzip, Deflate, and Brotli compression&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Since it builds on top of &lt;a href=&quot;https://hyper.rs&quot;&gt;hyper&lt;/a&gt;, you automatically get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;HTTP/1&lt;/li&gt; 
 &lt;li&gt;HTTP/2&lt;/li&gt; 
 &lt;li&gt;Asynchronous&lt;/li&gt; 
 &lt;li&gt;One of the fastest HTTP implementations&lt;/li&gt; 
 &lt;li&gt;Tested and &lt;strong&gt;correct&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Add warp and Tokio to your dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;tokio = { version = &quot;1&quot;, features = [&quot;full&quot;] }
warp = { version = &quot;0.4&quot;, features = [&quot;server&quot;] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then get started in your &lt;code&gt;main.rs&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;use warp::Filter;

#[tokio::main]
async fn main() {
    // GET /hello/warp =&amp;gt; 200 OK with body &quot;Hello, warp!&quot;
    let hello = warp::path!(&quot;hello&quot; / String)
        .map(|name| format!(&quot;Hello, {}!&quot;, name));

    warp::serve(hello)
        .run(([127, 0, 0, 1], 3030))
        .await;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information you can check the &lt;a href=&quot;https://docs.rs/warp&quot;&gt;docs&lt;/a&gt; or the &lt;a href=&quot;https://github.com/seanmonstar/warp/tree/master/examples&quot;&gt;examples&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wezterm/wezterm</title>
      <link>https://github.com/wezterm/wezterm</link>
      <description>&lt;p&gt;A GPU-accelerated cross-platform terminal emulator and multiplexer written by @wez and implemented in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wez&#39;s Terminal&lt;/h1&gt; 
&lt;p&gt;&lt;img height=&quot;128&quot; alt=&quot;WezTerm Icon&quot; src=&quot;https://raw.githubusercontent.com/wezterm/wezterm/main/assets/icon/wezterm-icon.svg?sanitize=true&quot; align=&quot;left&quot; /&gt; &lt;em&gt;A GPU-accelerated cross-platform terminal emulator and multiplexer written by &lt;a href=&quot;https://github.com/wez&quot;&gt;@wez&lt;/a&gt; and implemented in &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;User facing docs and guide at: &lt;a href=&quot;https://wezterm.org/&quot;&gt;https://wezterm.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wezterm/wezterm/main/docs/screenshots/two.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Screenshot of wezterm on macOS, running vim&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://wezterm.org/installation&quot;&gt;https://wezterm.org/installation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;This is a spare time project, so please bear with me. There are a couple of channels for support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can use the &lt;a href=&quot;https://github.com/wezterm/wezterm/issues&quot;&gt;GitHub issue tracker&lt;/a&gt; to see if someone else has a similar issue, or to file a new one.&lt;/li&gt; 
 &lt;li&gt;Start or join a thread in our &lt;a href=&quot;https://github.com/wezterm/wezterm/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;; if you have general questions or want to chat with other wezterm users, you&#39;re welcome here!&lt;/li&gt; 
 &lt;li&gt;There is a &lt;a href=&quot;https://app.element.io/#/room/#wezterm:matrix.org&quot;&gt;Matrix room via Element.io&lt;/a&gt; for (potentially!) real time discussions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The GitHub Discussions and Element/Gitter rooms are better suited for questions than bug reports, but don&#39;t be afraid to use whichever you are most comfortable using and we&#39;ll work it out.&lt;/p&gt; 
&lt;h2&gt;Supporting the Project&lt;/h2&gt; 
&lt;p&gt;If you use and like WezTerm, please consider sponsoring it: your support helps to cover the fees required to maintain the project and to validate the time spent working on it!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://wezterm.org/sponsor.html&quot;&gt;Read more about sponsoring&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/wez&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/wez?label=Sponsor%20WezTerm&amp;amp;logo=github&amp;amp;style=for-the-badge&quot; alt=&quot;Sponsor WezTerm&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://patreon.com/WezFurlong&quot;&gt;Patreon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ko-fi.com/wezfurlong&quot;&gt;Ko-Fi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://liberapay.com/wez&quot;&gt;Liberapay&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>zed-industries/zed</title>
      <link>https://github.com/zed-industries/zed</link>
      <description>&lt;p&gt;Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zed&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://zed.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/zed-industries/zed/main/assets/badge/v0.json&quot; alt=&quot;Zed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zed-industries/zed/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/zed-industries/zed/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to Zed, a high-performance, multiplayer code editor from the creators of &lt;a href=&quot;https://github.com/atom/atom&quot;&gt;Atom&lt;/a&gt; and &lt;a href=&quot;https://github.com/tree-sitter/tree-sitter&quot;&gt;Tree-sitter&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;On macOS and Linux you can &lt;a href=&quot;https://zed.dev/download&quot;&gt;download Zed directly&lt;/a&gt; or &lt;a href=&quot;https://zed.dev/docs/linux#installing-via-a-package-manager&quot;&gt;install Zed via your local package manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other platforms are not yet available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (&lt;a href=&quot;https://github.com/zed-industries/zed/issues/5394&quot;&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web (&lt;a href=&quot;https://github.com/zed-industries/zed/issues/5396&quot;&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing Zed&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/macos.md&quot;&gt;Building Zed for macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/linux.md&quot;&gt;Building Zed for Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/windows.md&quot;&gt;Building Zed for Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/local-collaboration.md&quot;&gt;Running Collaboration Locally&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/zed-industries/zed/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for ways you can contribute to Zed.&lt;/p&gt; 
&lt;p&gt;Also... we&#39;re hiring! Check out our &lt;a href=&quot;https://zed.dev/jobs&quot;&gt;jobs&lt;/a&gt; page for open roles.&lt;/p&gt; 
&lt;h3&gt;Licensing&lt;/h3&gt; 
&lt;p&gt;License information for third party dependencies must be correctly provided for CI to pass.&lt;/p&gt; 
&lt;p&gt;We use &lt;a href=&quot;https://github.com/EmbarkStudios/cargo-about&quot;&gt;&lt;code&gt;cargo-about&lt;/code&gt;&lt;/a&gt; to automatically comply with open source licenses. If CI is failing, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Is it showing a &lt;code&gt;no license specified&lt;/code&gt; error for a crate you&#39;ve created? If so, add &lt;code&gt;publish = false&lt;/code&gt; under &lt;code&gt;[package]&lt;/code&gt; in your crate&#39;s Cargo.toml.&lt;/li&gt; 
 &lt;li&gt;Is the error &lt;code&gt;failed to satisfy license requirements&lt;/code&gt; for a dependency? If so, first determine what license the project has and whether this system is sufficient to comply with this license&#39;s requirements. If you&#39;re unsure, ask a lawyer. Once you&#39;ve verified that this system is acceptable add the license&#39;s SPDX identifier to the &lt;code&gt;accepted&lt;/code&gt; array in &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Is &lt;code&gt;cargo-about&lt;/code&gt; unable to find the license for a dependency? If so, add a clarification field at the end of &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;, as specified in the &lt;a href=&quot;https://embarkstudios.github.io/cargo-about/cli/generate/config.html#crate-configuration&quot;&gt;cargo-about book&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rust-lang/rust</title>
      <link>https://github.com/rust-lang/rust</link>
      <description>&lt;p&gt;Empowering everyone to build reliable and efficient software.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/rust-lang/www.rust-lang.org/master/static/images/rust-social-wide-dark.svg&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/rust-lang/www.rust-lang.org/master/static/images/rust-social-wide-light.svg&quot; /&gt; 
  &lt;img alt=&quot;The Rust Programming Language: A language empowering everyone to build reliable and efficient software&quot; src=&quot;https://raw.githubusercontent.com/rust-lang/www.rust-lang.org/master/static/images/rust-social-wide-light.svg?sanitize=true&quot; width=&quot;50%&quot; /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://www.rust-lang.org/learn/get-started&quot;&gt;Getting started&lt;/a&gt; | &lt;a href=&quot;https://www.rust-lang.org/learn&quot;&gt;Learn&lt;/a&gt; | &lt;a href=&quot;https://www.rust-lang.org/learn#learn-use&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;This is the main source code repository for &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;. It contains the compiler, standard library, and documentation.&lt;/p&gt; 
&lt;h2&gt;Why Rust?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance:&lt;/strong&gt; Fast and memory-efficient, suitable for critical services, embedded devices, and easily integrated with other languages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reliability:&lt;/strong&gt; Our rich type system and ownership model ensure memory and thread safety, reducing bugs at compile-time.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Productivity:&lt;/strong&gt; Comprehensive documentation, a compiler committed to providing great diagnostics, and advanced tooling including package manager and build tool (&lt;a href=&quot;https://github.com/rust-lang/cargo&quot;&gt;Cargo&lt;/a&gt;), auto-formatter (&lt;a href=&quot;https://github.com/rust-lang/rustfmt&quot;&gt;rustfmt&lt;/a&gt;), linter (&lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Clippy&lt;/a&gt;) and editor support (&lt;a href=&quot;https://github.com/rust-lang/rust-analyzer&quot;&gt;rust-analyzer&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://doc.rust-lang.org/book/ch01-01-installation.html&quot;&gt;&quot;Installation&quot;&lt;/a&gt; from &lt;a href=&quot;https://doc.rust-lang.org/book/index.html&quot;&gt;The Book&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing from Source&lt;/h2&gt; 
&lt;p&gt;If you really want to install from source (though this is not recommended), see &lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust/master/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.rust-lang.org/community&quot;&gt;https://www.rust-lang.org/community&lt;/a&gt; for a list of chat platforms and forums.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Rust is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0), with portions covered by various BSD-like licenses.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust/master/LICENSE-APACHE&quot;&gt;LICENSE-APACHE&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust/master/LICENSE-MIT&quot;&gt;LICENSE-MIT&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/rust-lang/rust/master/COPYRIGHT&quot;&gt;COPYRIGHT&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Trademark&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rustfoundation.org/&quot;&gt;The Rust Foundation&lt;/a&gt; owns and protects the Rust and Cargo trademarks and logos (the &quot;Rust Trademarks&quot;).&lt;/p&gt; 
&lt;p&gt;If you want to use these names or brands, please read the &lt;a href=&quot;https://rustfoundation.org/policy/rust-trademark-policy/&quot;&gt;Rust language trademark policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Third-party logos may be subject to third-party copyrights and trademarks. See &lt;a href=&quot;https://www.rust-lang.org/policies/licenses&quot;&gt;Licenses&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rathole-org/rathole</title>
      <link>https://github.com/rathole-org/rathole</link>
      <description>&lt;p&gt;A lightweight and high-performance reverse proxy for NAT traversal, written in Rust. An alternative to frp and ngrok.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rathole&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/img/rathole-logo.png&quot; alt=&quot;rathole-logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rapiz1/rathole/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/rapiz1/rathole&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rapiz1/rathole/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/rapiz1/rathole&quot; alt=&quot;GitHub release (latest SemVer)&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/rapiz1/rathole/rust.yml?branch=main&quot; alt=&quot;GitHub Workflow Status (branch)&quot; /&gt; &lt;a href=&quot;https://github.com/rapiz1/rathole/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/rapiz1/rathole/total&quot; alt=&quot;GitHub all releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/rapiz1/rathole&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/rapiz1/rathole&quot; alt=&quot;Docker Pulls&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/rapiz1/rathole?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/rapiz1/rathole.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/rapiz1/rathole&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/README.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/README-zh.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A secure, stable and high-performance reverse proxy for NAT traversal, written in Rust&lt;/p&gt; 
&lt;p&gt;rathole, like &lt;a href=&quot;https://github.com/fatedier/frp&quot;&gt;frp&lt;/a&gt; and &lt;a href=&quot;https://github.com/inconshreveable/ngrok&quot;&gt;ngrok&lt;/a&gt;, can help to expose the service on the device behind the NAT to the Internet, via a server with a public IP.&lt;/p&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#rathole&quot;&gt;rathole&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#configuration&quot;&gt;Configuration&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#logging&quot;&gt;Logging&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#tuning&quot;&gt;Tuning&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#planning&quot;&gt;Planning&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt; Much higher throughput can be achieved than frp, and more stable when handling a large volume of connections. See &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#benchmark&quot;&gt;Benchmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low Resource Consumption&lt;/strong&gt; Consumes much fewer memory than similar tools. See &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#benchmark&quot;&gt;Benchmark&lt;/a&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/build-guide.md&quot;&gt;The binary can be&lt;/a&gt; &lt;strong&gt;as small as ~500KiB&lt;/strong&gt; to fit the constraints of devices, like embedded devices as routers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; Tokens of services are mandatory and service-wise. The server and clients are responsible for their own configs. With the optional Noise Protocol, encryption can be configured at ease. No need to create a self-signed certificate! TLS is also supported.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hot Reload&lt;/strong&gt; Services can be added or removed dynamically by hot-reloading the configuration file. HTTP API is WIP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;A full-powered &lt;code&gt;rathole&lt;/code&gt; can be obtained from the &lt;a href=&quot;https://github.com/rapiz1/rathole/releases&quot;&gt;release&lt;/a&gt; page. Or &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/build-guide.md&quot;&gt;build from source&lt;/a&gt; &lt;strong&gt;for other platforms and minimizing the binary&lt;/strong&gt;. A &lt;a href=&quot;https://hub.docker.com/r/rapiz1/rathole&quot;&gt;Docker image&lt;/a&gt; is also available.&lt;/p&gt; 
&lt;p&gt;The usage of &lt;code&gt;rathole&lt;/code&gt; is very similar to frp. If you have experience with the latter, then the configuration is very easy for you. The only difference is that configuration of a service is split into the client side and the server side, and a token is mandatory.&lt;/p&gt; 
&lt;p&gt;To use &lt;code&gt;rathole&lt;/code&gt;, you need a server with a public IP, and a device behind the NAT, where some services that need to be exposed to the Internet.&lt;/p&gt; 
&lt;p&gt;Assuming you have a NAS at home behind the NAT, and want to expose its ssh service to the Internet:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;On the server which has a public IP&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Create &lt;code&gt;server.toml&lt;/code&gt; with the following content and accommodate it to your needs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# server.toml
[server]
bind_addr = &quot;0.0.0.0:2333&quot; # `2333` specifies the port that rathole listens for clients

[server.services.my_nas_ssh]
token = &quot;use_a_secret_that_only_you_know&quot; # Token that is used to authenticate the client for the service. Change to an arbitrary value.
bind_addr = &quot;0.0.0.0:5202&quot; # `5202` specifies the port that exposes `my_nas_ssh` to the Internet
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./rathole server.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;On the host which is behind the NAT (your NAS)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Create &lt;code&gt;client.toml&lt;/code&gt; with the following content and accommodate it to your needs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# client.toml
[client]
remote_addr = &quot;myserver.com:2333&quot; # The address of the server. The port must be the same with the port in `server.bind_addr`

[client.services.my_nas_ssh]
token = &quot;use_a_secret_that_only_you_know&quot; # Must be the same with the server to pass the validation
local_addr = &quot;127.0.0.1:22&quot; # The address of the service that needs to be forwarded
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./rathole client.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Now the client will try to connect to the server &lt;code&gt;myserver.com&lt;/code&gt; on port &lt;code&gt;2333&lt;/code&gt;, and any traffic to &lt;code&gt;myserver.com:5202&lt;/code&gt; will be forwarded to the client&#39;s port &lt;code&gt;22&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;So you can &lt;code&gt;ssh myserver.com:5202&lt;/code&gt; to ssh to your NAS.&lt;/p&gt; 
&lt;p&gt;To run &lt;code&gt;rathole&lt;/code&gt; run as a background service on Linux, checkout the &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/examples/systemd&quot;&gt;systemd examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;rathole&lt;/code&gt; can automatically determine to run in the server mode or the client mode, according to the content of the configuration file, if only one of &lt;code&gt;[server]&lt;/code&gt; and &lt;code&gt;[client]&lt;/code&gt; block is present, like the example in &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;But the &lt;code&gt;[client]&lt;/code&gt; and &lt;code&gt;[server]&lt;/code&gt; block can also be put in one file. Then on the server side, run &lt;code&gt;rathole --server config.toml&lt;/code&gt; and on the client side, run &lt;code&gt;rathole --client config.toml&lt;/code&gt; to explicitly tell &lt;code&gt;rathole&lt;/code&gt; the running mode.&lt;/p&gt; 
&lt;p&gt;Before heading to the full configuration specification, it&#39;s recommend to skim &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/examples&quot;&gt;the configuration examples&lt;/a&gt; to get a feeling of the configuration format.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/transport.md&quot;&gt;Transport&lt;/a&gt; for more details about encryption and the &lt;code&gt;transport&lt;/code&gt; block.&lt;/p&gt; 
&lt;p&gt;Here is the full configuration specification:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[client]
remote_addr = &quot;example.com:2333&quot; # Necessary. The address of the server
default_token = &quot;default_token_if_not_specify&quot; # Optional. The default token of services, if they don&#39;t define their own ones
heartbeat_timeout = 40 # Optional. Set to 0 to disable the application-layer heartbeat test. The value must be greater than `server.heartbeat_interval`. Default: 40 seconds
retry_interval = 1 # Optional. The interval between retry to connect to the server. Default: 1 second

[client.transport] # The whole block is optional. Specify which transport to use
type = &quot;tcp&quot; # Optional. Possible values: [&quot;tcp&quot;, &quot;tls&quot;, &quot;noise&quot;]. Default: &quot;tcp&quot;

[client.transport.tcp] # Optional. Also affects `noise` and `tls`
proxy = &quot;socks5://user:passwd@127.0.0.1:1080&quot; # Optional. The proxy used to connect to the server. `http` and `socks5` is supported.
nodelay = true # Optional. Determine whether to enable TCP_NODELAY, if applicable, to improve the latency but decrease the bandwidth. Default: true
keepalive_secs = 20 # Optional. Specify `tcp_keepalive_time` in `tcp(7)`, if applicable. Default: 20 seconds
keepalive_interval = 8 # Optional. Specify `tcp_keepalive_intvl` in `tcp(7)`, if applicable. Default: 8 seconds

[client.transport.tls] # Necessary if `type` is &quot;tls&quot;
trusted_root = &quot;ca.pem&quot; # Necessary. The certificate of CA that signed the server&#39;s certificate
hostname = &quot;example.com&quot; # Optional. The hostname that the client uses to validate the certificate. If not set, fallback to `client.remote_addr`

[client.transport.noise] # Noise protocol. See `docs/transport.md` for further explanation
pattern = &quot;Noise_NK_25519_ChaChaPoly_BLAKE2s&quot; # Optional. Default value as shown
local_private_key = &quot;key_encoded_in_base64&quot; # Optional
remote_public_key = &quot;key_encoded_in_base64&quot; # Optional

[client.transport.websocket] # Necessary if `type` is &quot;websocket&quot;
tls = true # If `true` then it will use settings in `client.transport.tls`

[client.services.service1] # A service that needs forwarding. The name `service1` can change arbitrarily, as long as identical to the name in the server&#39;s configuration
type = &quot;tcp&quot; # Optional. The protocol that needs forwarding. Possible values: [&quot;tcp&quot;, &quot;udp&quot;]. Default: &quot;tcp&quot;
token = &quot;whatever&quot; # Necessary if `client.default_token` not set
local_addr = &quot;127.0.0.1:1081&quot; # Necessary. The address of the service that needs to be forwarded
nodelay = true # Optional. Override the `client.transport.nodelay` per service
retry_interval = 1 # Optional. The interval between retry to connect to the server. Default: inherits the global config

[client.services.service2] # Multiple services can be defined
local_addr = &quot;127.0.0.1:1082&quot;

[server]
bind_addr = &quot;0.0.0.0:2333&quot; # Necessary. The address that the server listens for clients. Generally only the port needs to be change.
default_token = &quot;default_token_if_not_specify&quot; # Optional
heartbeat_interval = 30 # Optional. The interval between two application-layer heartbeat. Set to 0 to disable sending heartbeat. Default: 30 seconds

[server.transport] # Same as `[client.transport]`
type = &quot;tcp&quot;

[server.transport.tcp] # Same as the client
nodelay = true
keepalive_secs = 20
keepalive_interval = 8

[server.transport.tls] # Necessary if `type` is &quot;tls&quot;
pkcs12 = &quot;identify.pfx&quot; # Necessary. pkcs12 file of server&#39;s certificate and private key
pkcs12_password = &quot;password&quot; # Necessary. Password of the pkcs12 file

[server.transport.noise] # Same as `[client.transport.noise]`
pattern = &quot;Noise_NK_25519_ChaChaPoly_BLAKE2s&quot;
local_private_key = &quot;key_encoded_in_base64&quot;
remote_public_key = &quot;key_encoded_in_base64&quot;

[server.transport.websocket] # Necessary if `type` is &quot;websocket&quot;
tls = true # If `true` then it will use settings in `server.transport.tls`

[server.services.service1] # The service name must be identical to the client side
type = &quot;tcp&quot; # Optional. Same as the client `[client.services.X.type]
token = &quot;whatever&quot; # Necessary if `server.default_token` not set
bind_addr = &quot;0.0.0.0:8081&quot; # Necessary. The address of the service is exposed at. Generally only the port needs to be change.
nodelay = true # Optional. Same as the client

[server.services.service2]
bind_addr = &quot;0.0.0.1:8082&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;rathole&lt;/code&gt;, like many other Rust programs, use environment variables to control the logging level. &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt; are available.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;RUST_LOG=error ./rathole config.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will run &lt;code&gt;rathole&lt;/code&gt; with only error level logging.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;RUST_LOG&lt;/code&gt; is not present, the default logging level is &lt;code&gt;info&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Tuning&lt;/h3&gt; 
&lt;p&gt;From v0.4.7, rathole enables TCP_NODELAY by default, which should benefit the latency and interactive applications like rdp, Minecraft servers. However, it slightly decreases the bandwidth.&lt;/p&gt; 
&lt;p&gt;If the bandwidth is more important, TCP_NODELAY can be opted out with &lt;code&gt;nodelay = false&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Benchmark&lt;/h2&gt; 
&lt;p&gt;rathole has similar latency to &lt;a href=&quot;https://github.com/fatedier/frp&quot;&gt;frp&lt;/a&gt;, but can handle a more connections, provide larger bandwidth, with less memory usage.&lt;/p&gt; 
&lt;p&gt;For more details, see the separate page &lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/benchmark.md&quot;&gt;Benchmark&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;However, don&#39;t take it from here that &lt;code&gt;rathole&lt;/code&gt; can magically make your forwarded service faster several times than before.&lt;/strong&gt; The benchmark is done on local loopback, indicating the performance when the task is cpu-bounded. One can gain quite a improvement if the network is not the bottleneck. Unfortunately, that&#39;s not true for many users. In that case, the main benefit is lower resource consumption, while the bandwidth and the latency may not improved significantly.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/img/http_throughput.svg?sanitize=true&quot; alt=&quot;http_throughput&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/img/tcp_bitrate.svg?sanitize=true&quot; alt=&quot;tcp_bitrate&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/img/udp_bitrate.svg?sanitize=true&quot; alt=&quot;udp_bitrate&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/img/mem-graph.png&quot; alt=&quot;mem&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Planning&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; HTTP APIs for configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rathole-org/rathole/main/docs/out-of-scope.md&quot;&gt;Out of Scope&lt;/a&gt; lists features that are not planned to be implemented and why.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>category-labs/monad-bft</title>
      <link>https://github.com/category-labs/monad-bft</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monad BFT&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/monad-crypto/monad-bft/actions/workflows/randomized.yml/badge.svg?branch=master&quot; alt=&quot;Nightly Tests&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository contains implementation for the Monad consensus client and JsonRpc server. Monad consensus collects transactions and produces blocks which are written to a ledger filestream. These blocks are consumed by Monad execution, which then updates the state of the blockchain. The &lt;a href=&quot;https://raw.githubusercontent.com/category-labs/monad-bft/master/monad-triedb/README.md&quot;&gt;triedb&lt;/a&gt; is a database which stores block information and the blockchain state.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;The most straightforward way to start a consensus client + an execution client + a JsonRpc server. Run the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;cd docker/single-node&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nets/run.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Using Cargo&lt;/h3&gt; 
&lt;p&gt;To run a Monad consensus client, follow instructions &lt;a href=&quot;https://raw.githubusercontent.com/category-labs/monad-bft/master/monad-node/README.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To run a JsonRpc server, follow instructions &lt;a href=&quot;https://raw.githubusercontent.com/category-labs/monad-bft/master/monad-rpc/README.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
autonumber
    participant D as Driver
    box Purple Executor
    participant S as impl Stream
    participant E as impl Executor
    end
    participant State
    participant PersistenceLogger
    loop
    D -&amp;gt;&amp;gt;+ S: CALL next()
    Note over S: blocks until event ready
    S --&amp;gt;&amp;gt;- D: RETURN Event
    D -&amp;gt;&amp;gt; PersistenceLogger: CALL push(Event)
    D -&amp;gt;&amp;gt;+ State: CALL update(Event)
    Note over State: mutate state
    State --&amp;gt;&amp;gt;- D: RETURN Vec&amp;lt;Command&amp;gt;
    D -&amp;gt;&amp;gt; E: CALL exec(Vec&amp;lt;Command&amp;gt;)
    Note over E: apply side effects
    end
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>openai/codex</title>
      <link>https://github.com/openai/codex</link>
      <description>&lt;p&gt;Lightweight coding agent that runs in your terminal&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;OpenAI Codex CLI&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;code&gt;npm i -g @openai/codex&lt;/code&gt;&lt;br /&gt;or &lt;code&gt;brew install codex&lt;/code&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;Codex CLI&lt;/strong&gt; is a coding agent from OpenAI that runs locally on your computer.&lt;br /&gt;If you are looking for the &lt;em&gt;cloud-based agent&lt;/em&gt; from OpenAI, &lt;strong&gt;Codex Web&lt;/strong&gt;, see &lt;a href=&quot;https://chatgpt.com/codex&quot;&gt;chatgpt.com/codex&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-splash.png&quot; alt=&quot;Codex CLI splash&quot; width=&quot;50%&quot; /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/summary&gt; 
 &lt;!-- Begin ToC --&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#installing-and-running-codex-cli&quot;&gt;Installing and running Codex CLI&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#using-codex-with-your-chatgpt-plan&quot;&gt;Using Codex with your ChatGPT plan&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#connecting-on-a-headless-machine&quot;&gt;Connecting on a &quot;Headless&quot; Machine&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#authenticate-locally-and-copy-your-credentials-to-the-headless-machine&quot;&gt;Authenticate locally and copy your credentials to the &quot;headless&quot; machine&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#connecting-through-vps-or-remote&quot;&gt;Connecting through VPS or remote&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#usage-based-billing-alternative-use-an-openai-api-key&quot;&gt;Usage-based billing alternative: Use an OpenAI API key&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#choosing-codexs-level-of-autonomy&quot;&gt;Choosing Codex&#39;s level of autonomy&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#1-readwrite&quot;&gt;&lt;strong&gt;1. Read/write&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#2-read-only&quot;&gt;&lt;strong&gt;2. Read-only&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#3-advanced-configuration&quot;&gt;&lt;strong&gt;3. Advanced configuration&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#can-i-run-without-any-approvals&quot;&gt;Can I run without ANY approvals?&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#fine-tuning-in-configtoml&quot;&gt;Fine-tuning in &lt;code&gt;config.toml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#example-prompts&quot;&gt;Example prompts&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#running-with-a-prompt-as-input&quot;&gt;Running with a prompt as input&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#using-open-source-models&quot;&gt;Using Open Source Models&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#platform-sandboxing-details&quot;&gt;Platform sandboxing details&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#experimental-technology-disclaimer&quot;&gt;Experimental technology disclaimer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#system-requirements&quot;&gt;System requirements&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#cli-reference&quot;&gt;CLI reference&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#memory--project-docs&quot;&gt;Memory &amp;amp; project docs&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#non-interactive--ci-mode&quot;&gt;Non-interactive / CI mode&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#model-context-protocol-mcp&quot;&gt;Model Context Protocol (MCP)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#tracing--verbose-logging&quot;&gt;Tracing / verbose logging&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#dotslash&quot;&gt;DotSlash&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#configuration&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#zero-data-retention-zdr-usage&quot;&gt;Zero data retention (ZDR) usage&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#codex-open-source-fund&quot;&gt;Codex open source fund&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#contributing&quot;&gt;Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#development-workflow&quot;&gt;Development workflow&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#writing-high-impact-code-changes&quot;&gt;Writing high-impact code changes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#opening-a-pull-request&quot;&gt;Opening a pull request&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#review-process&quot;&gt;Review process&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#community-values&quot;&gt;Community values&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#getting-help&quot;&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#contributor-license-agreement-cla&quot;&gt;Contributor license agreement (CLA)&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#quick-fixes&quot;&gt;Quick fixes&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#releasing-codex&quot;&gt;Releasing &lt;code&gt;codex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#security--responsible-ai&quot;&gt;Security &amp;amp; responsible AI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;!-- End ToC --&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Installing and running Codex CLI&lt;/h3&gt; 
&lt;p&gt;Install globally with your preferred package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g @openai/codex  # Alternatively: `brew install codex`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then simply run &lt;code&gt;codex&lt;/code&gt; to get started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;codex
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;You can also go to the &lt;a href=&quot;https://github.com/openai/codex/releases/latest&quot;&gt;latest GitHub Release&lt;/a&gt; and download the appropriate binary for your platform.&lt;/summary&gt; 
 &lt;p&gt;Each GitHub Release contains many executables, but in practice, you likely want one of these:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;macOS 
   &lt;ul&gt; 
    &lt;li&gt;Apple Silicon/arm64: &lt;code&gt;codex-aarch64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;x86_64 (older Mac hardware): &lt;code&gt;codex-x86_64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Linux 
   &lt;ul&gt; 
    &lt;li&gt;x86_64: &lt;code&gt;codex-x86_64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;arm64: &lt;code&gt;codex-aarch64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Each archive contains a single entry with the platform baked into the name (e.g., &lt;code&gt;codex-x86_64-unknown-linux-musl&lt;/code&gt;), so you likely want to rename it to &lt;code&gt;codex&lt;/code&gt; after extracting it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Using Codex with your ChatGPT plan&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-login.png&quot; alt=&quot;Codex CLI login&quot; width=&quot;50%&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;codex&lt;/code&gt; and select &lt;strong&gt;Sign in with ChatGPT&lt;/strong&gt;. You&#39;ll need a Plus, Pro, or Team ChatGPT account, and will get access to our latest models, including &lt;code&gt;gpt-5&lt;/code&gt;, at no extra cost to your plan. (Enterprise is coming soon.)&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Important: If you&#39;ve used the Codex CLI before, follow these steps to migrate from usage-based billing with your API key:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Update the CLI and ensure &lt;code&gt;codex --version&lt;/code&gt; is &lt;code&gt;0.20.0&lt;/code&gt; or later&lt;/li&gt; 
  &lt;li&gt;Delete &lt;code&gt;~/.codex/auth.json&lt;/code&gt; (this should be &lt;code&gt;C:\Users\USERNAME\.codex\auth.json&lt;/code&gt; on Windows)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;codex login&lt;/code&gt; again&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you encounter problems with the login flow, please comment on &lt;a href=&quot;https://github.com/openai/codex/issues/1243&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting on a &quot;Headless&quot; Machine&lt;/h3&gt; 
&lt;p&gt;Today, the login process entails running a server on &lt;code&gt;localhost:1455&lt;/code&gt;. If you are on a &quot;headless&quot; server, such as a Docker container or are &lt;code&gt;ssh&lt;/code&gt;&#39;d into a remote machine, loading &lt;code&gt;localhost:1455&lt;/code&gt; in the browser on your local machine will not automatically connect to the webserver running on the &lt;em&gt;headless&lt;/em&gt; machine, so you must use one of the following workarounds:&lt;/p&gt; 
&lt;h4&gt;Authenticate locally and copy your credentials to the &quot;headless&quot; machine&lt;/h4&gt; 
&lt;p&gt;The easiest solution is likely to run through the &lt;code&gt;codex login&lt;/code&gt; process on your local machine such that &lt;code&gt;localhost:1455&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; accessible in your web browser. When you complete the authentication process, an &lt;code&gt;auth.json&lt;/code&gt; file should be available at &lt;code&gt;$CODEX_HOME/auth.json&lt;/code&gt; (on Mac/Linux, &lt;code&gt;$CODEX_HOME&lt;/code&gt; defaults to &lt;code&gt;~/.codex&lt;/code&gt; whereas on Windows, it defaults to &lt;code&gt;%USERPROFILE%\.codex&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Because the &lt;code&gt;auth.json&lt;/code&gt; file is not tied to a specific host, once you complete the authentication flow locally, you can copy the &lt;code&gt;$CODEX_HOME/auth.json&lt;/code&gt; file to the headless machine and then &lt;code&gt;codex&lt;/code&gt; should &quot;just work&quot; on that machine. Note to copy a file to a Docker container, you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# substitute MY_CONTAINER with the name or id of your Docker container:
CONTAINER_HOME=$(docker exec MY_CONTAINER printenv HOME)
docker exec MY_CONTAINER mkdir -p &quot;$CONTAINER_HOME/.codex&quot;
docker cp auth.json MY_CONTAINER:&quot;$CONTAINER_HOME/.codex/auth.json&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;whereas if you are &lt;code&gt;ssh&lt;/code&gt;&#39;d into a remote machine, you likely want to use &lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_copy_protocol&quot;&gt;&lt;code&gt;scp&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ssh user@remote &#39;mkdir -p ~/.codex&#39;
scp ~/.codex/auth.json user@remote:~/.codex/auth.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or try this one-liner:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ssh user@remote &#39;mkdir -p ~/.codex &amp;amp;&amp;amp; cat &amp;gt; ~/.codex/auth.json&#39; &amp;lt; ~/.codex/auth.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting through VPS or remote&lt;/h4&gt; 
&lt;p&gt;If you run Codex on a remote machine (VPS/server) without a local browser, the login helper starts a server on &lt;code&gt;localhost:1455&lt;/code&gt; on the remote host. To complete login in your local browser, forward that port to your machine before starting the login flow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# From your local machine
ssh -L 1455:localhost:1455 &amp;lt;user&amp;gt;@&amp;lt;remote-host&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, in that SSH session, run &lt;code&gt;codex&lt;/code&gt; and select &quot;Sign in with ChatGPT&quot;. When prompted, open the printed URL (it will be &lt;code&gt;http://localhost:1455/...&lt;/code&gt;) in your local browser. The traffic will be tunneled to the remote server.&lt;/p&gt; 
&lt;h3&gt;Usage-based billing alternative: Use an OpenAI API key&lt;/h3&gt; 
&lt;p&gt;If you prefer to pay-as-you-go, you can still authenticate with your OpenAI API key by setting it as an environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;export OPENAI_API_KEY=&quot;your-api-key-here&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;This command only sets the key for your current terminal session, which we recommend. To set it for all future sessions, you can also add the &lt;code&gt;export&lt;/code&gt; line to your shell&#39;s configuration file (e.g., &lt;code&gt;~/.zshrc&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;If you have signed in with ChatGPT, Codex will default to using your ChatGPT credits. If you wish to use your API key, use the &lt;code&gt;/logout&lt;/code&gt; command to clear your ChatGPT authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Choosing Codex&#39;s level of autonomy&lt;/h3&gt; 
&lt;p&gt;We always recommend running Codex in its default sandbox that gives you strong guardrails around what the agent can do. The default sandbox prevents it from editing files outside its workspace, or from accessing the network.&lt;/p&gt; 
&lt;p&gt;When you launch Codex in a new folder, it detects whether the folder is version controlled and recommends one of two levels of autonomy:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;1. Read/write&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Codex can run commands and write files in the workspace without approval.&lt;/li&gt; 
 &lt;li&gt;To write files in other folders, access network, update git or perform other actions protected by the sandbox, Codex will need your permission.&lt;/li&gt; 
 &lt;li&gt;By default, the workspace includes the current directory, as well as temporary directories like &lt;code&gt;/tmp&lt;/code&gt;. You can see what directories are in the workspace with the &lt;code&gt;/status&lt;/code&gt; command. See the docs for how to customize this behavior.&lt;/li&gt; 
 &lt;li&gt;Advanced: You can manually specify this configuration by running &lt;code&gt;codex --sandbox workspace-write --ask-for-approval on-request&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This is the recommended default for version-controlled folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;2. Read-only&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Codex can run read-only commands without approval.&lt;/li&gt; 
 &lt;li&gt;To edit files, access network, or perform other actions protected by the sandbox, Codex will need your permission.&lt;/li&gt; 
 &lt;li&gt;Advanced: You can manually specify this configuration by running &lt;code&gt;codex --sandbox read-only --ask-for-approval on-request&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This is the recommended default non-version-controlled folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;3. Advanced configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Codex gives you fine-grained control over the sandbox with the &lt;code&gt;--sandbox&lt;/code&gt; option, and over when it requests approval with the &lt;code&gt;--ask-for-approval&lt;/code&gt; option. Run &lt;code&gt;codex help&lt;/code&gt; for more on these options.&lt;/p&gt; 
&lt;h4&gt;Can I run without ANY approvals?&lt;/h4&gt; 
&lt;p&gt;Yes, run codex non-interactively with &lt;code&gt;--ask-for-approval never&lt;/code&gt;. This option works with all &lt;code&gt;--sandbox&lt;/code&gt; options, so you still have full control over Codex&#39;s level of autonomy. It will make its best attempt with whatever contrainsts you provide. For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox read-only&lt;/code&gt; when you are running many agents to answer questions in parallel in the same workspace.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox workspace-write&lt;/code&gt; when you want the agent to non-interactively take time to produce the best outcome, with strong guardrails around its behavior.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox danger-full-access&lt;/code&gt; to dangerously give the agent full autonomy. Because this disables important safety mechanisms, we recommend against using this unless running Codex in an isolated environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Fine-tuning in &lt;code&gt;config.toml&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# approval mode
approval_policy = &quot;untrusted&quot;
sandbox_mode    = &quot;read-only&quot;

# full-auto mode
approval_policy = &quot;on-request&quot;
sandbox_mode    = &quot;workspace-write&quot;

# Optional: allow network in workspace-write mode
[sandbox_workspace_write]
network_access = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also save presets as &lt;strong&gt;profiles&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[profiles.full_auto]
approval_policy = &quot;on-request&quot;
sandbox_mode    = &quot;workspace-write&quot;

[profiles.readonly_quiet]
approval_policy = &quot;never&quot;
sandbox_mode    = &quot;read-only&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example prompts&lt;/h3&gt; 
&lt;p&gt;Below are a few bite-size examples you can copy-paste. Replace the text in quotes with your own task. See the &lt;a href=&quot;https://github.com/openai/codex/raw/main/codex-cli/examples/prompting_guide.md&quot;&gt;prompting guide&lt;/a&gt; for more tips and usage patterns.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;✨&lt;/th&gt; 
   &lt;th&gt;What you type&lt;/th&gt; 
   &lt;th&gt;What happens&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Refactor the Dashboard component to React Hooks&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Codex rewrites the class component, runs &lt;code&gt;npm test&lt;/code&gt;, and shows the diff.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Generate SQL migrations for adding a users table&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Infers your ORM, creates migration files, and runs them in a sandboxed DB.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Write unit tests for utils/date.ts&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generates tests, executes them, and iterates until they pass.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Bulk-rename *.jpeg -&amp;gt; *.jpg with git mv&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Safely renames files and updates imports/usages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Explain what this regex does: ^(?=.*[A-Z]).{8,}$&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Outputs a step-by-step human explanation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Carefully review this repo, and propose 3 high impact well-scoped PRs&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Suggests impactful PRs in the current codebase.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;Look for vulnerabilities and create a security review report&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Finds and explains security bugs.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Running with a prompt as input&lt;/h2&gt; 
&lt;p&gt;You can also run Codex CLI with a prompt as input:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;codex &quot;explain this codebase to me&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;codex --full-auto &quot;create the fanciest todo-list app&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That&#39;s it - Codex will scaffold a file, run it inside a sandbox, install any missing dependencies, and show you the live result. Approve the changes and they&#39;ll be committed to your working directory.&lt;/p&gt; 
&lt;h2&gt;Using Open Source Models&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Use &lt;code&gt;--profile&lt;/code&gt; to use other models&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Codex also allows you to use other providers that support the OpenAI Chat Completions (or Responses) API.&lt;/p&gt; 
 &lt;p&gt;To do so, you must first define custom &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/config.md#model_providers&quot;&gt;providers&lt;/a&gt; in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. For example, the provider for a standard Ollama setup would be defined as follows:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[model_providers.ollama]
name = &quot;Ollama&quot;
base_url = &quot;http://localhost:11434/v1&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;code&gt;base_url&lt;/code&gt; will have &lt;code&gt;/chat/completions&lt;/code&gt; appended to it to build the full URL for the request.&lt;/p&gt; 
 &lt;p&gt;For providers that also require an &lt;code&gt;Authorization&lt;/code&gt; header of the form &lt;code&gt;Bearer: SECRET&lt;/code&gt;, an &lt;code&gt;env_key&lt;/code&gt; can be specified, which indicates the environment variable to read to use as the value of &lt;code&gt;SECRET&lt;/code&gt; when making a request:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[model_providers.openrouter]
name = &quot;OpenRouter&quot;
base_url = &quot;https://openrouter.ai/api/v1&quot;
env_key = &quot;OPENROUTER_API_KEY&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Providers that speak the Responses API are also supported by adding &lt;code&gt;wire_api = &quot;responses&quot;&lt;/code&gt; as part of the definition. Accessing OpenAI models via Azure is an example of such a provider, though it also requires specifying additional &lt;code&gt;query_params&lt;/code&gt; that need to be appended to the request URL:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[model_providers.azure]
name = &quot;Azure&quot;
# Make sure you set the appropriate subdomain for this URL.
base_url = &quot;https://YOUR_PROJECT_NAME.openai.azure.com/openai&quot;
env_key = &quot;AZURE_OPENAI_API_KEY&quot;  # Or &quot;OPENAI_API_KEY&quot;, whichever you use.
# Newer versions appear to support the responses API, see https://github.com/openai/codex/pull/1321
query_params = { api-version = &quot;2025-04-01-preview&quot; }
wire_api = &quot;responses&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once you have defined a provider you wish to use, you can configure it as your default provider as follows:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;model_provider = &quot;azure&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;[!TIP] If you find yourself experimenting with a variety of models and providers, then you likely want to invest in defining a &lt;em&gt;profile&lt;/em&gt; for each configuration like so:&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[profiles.o3]
model_provider = &quot;azure&quot;
model = &quot;o3&quot;

[profiles.mistral]
model_provider = &quot;ollama&quot;
model = &quot;mistral&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This way, you can specify one command-line argument (.e.g., &lt;code&gt;--profile o3&lt;/code&gt;, &lt;code&gt;--profile mistral&lt;/code&gt;) to override multiple settings together.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Codex can run fully locally against an OpenAI-compatible OSS host (like Ollama) using the &lt;code&gt;--oss&lt;/code&gt; flag:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Interactive UI: 
  &lt;ul&gt; 
   &lt;li&gt;codex --oss&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Non-interactive (programmatic) mode: 
  &lt;ul&gt; 
   &lt;li&gt;echo &quot;Refactor utils&quot; | codex exec --oss&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Model selection when using &lt;code&gt;--oss&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you omit &lt;code&gt;-m/--model&lt;/code&gt;, Codex defaults to -m gpt-oss:20b and will verify it exists locally (downloading if needed).&lt;/li&gt; 
 &lt;li&gt;To pick a different size, pass one of: 
  &lt;ul&gt; 
   &lt;li&gt;-m &quot;gpt-oss:20b&quot;&lt;/li&gt; 
   &lt;li&gt;-m &quot;gpt-oss:120b&quot;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Point Codex at your own OSS host:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;--oss&lt;/code&gt; talks to &lt;a href=&quot;http://localhost:11434/v1&quot;&gt;http://localhost:11434/v1&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To use a different host, set one of these environment variables before running Codex: 
  &lt;ul&gt; 
   &lt;li&gt;CODEX_OSS_BASE_URL, for example: 
    &lt;ul&gt; 
     &lt;li&gt;CODEX_OSS_BASE_URL=&quot;&lt;a href=&quot;http://my-ollama.example.com:11434/v1&quot;&gt;http://my-ollama.example.com:11434/v1&lt;/a&gt;&quot; codex --oss -m gpt-oss:20b&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;or CODEX_OSS_PORT (when the host is localhost): 
    &lt;ul&gt; 
     &lt;li&gt;CODEX_OSS_PORT=11434 codex --oss&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Advanced: you can persist this in your config instead of environment variables by overriding the built-in &lt;code&gt;oss&lt;/code&gt; provider in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;[model_providers.oss]
name = &quot;Open Source&quot;
base_url = &quot;http://my-ollama.example.com:11434/v1&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Platform sandboxing details&lt;/h3&gt; 
&lt;p&gt;The mechanism Codex uses to implement the sandbox policy depends on your OS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS 12+&lt;/strong&gt; uses &lt;strong&gt;Apple Seatbelt&lt;/strong&gt; and runs commands using &lt;code&gt;sandbox-exec&lt;/code&gt; with a profile (&lt;code&gt;-p&lt;/code&gt;) that corresponds to the &lt;code&gt;--sandbox&lt;/code&gt; that was specified.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; uses a combination of Landlock/seccomp APIs to enforce the &lt;code&gt;sandbox&lt;/code&gt; configuration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that when running Linux in a containerized environment such as Docker, sandboxing may not work if the host/container configuration does not support the necessary Landlock/seccomp APIs. In such cases, we recommend configuring your Docker container so that it provides the sandbox guarantees you are looking for and then running &lt;code&gt;codex&lt;/code&gt; with &lt;code&gt;--sandbox danger-full-access&lt;/code&gt; (or, more simply, the &lt;code&gt;--dangerously-bypass-approvals-and-sandbox&lt;/code&gt; flag) within your container.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Experimental technology disclaimer&lt;/h2&gt; 
&lt;p&gt;Codex CLI is an experimental project under active development. It is not yet stable, may contain bugs, incomplete features, or undergo breaking changes. We&#39;re building it in the open with the community and welcome:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug reports&lt;/li&gt; 
 &lt;li&gt;Feature requests&lt;/li&gt; 
 &lt;li&gt;Pull requests&lt;/li&gt; 
 &lt;li&gt;Good vibes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help us improve by filing issues or submitting PRs (see the section below for how to contribute)!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;System requirements&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Requirement&lt;/th&gt; 
   &lt;th&gt;Details&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Operating systems&lt;/td&gt; 
   &lt;td&gt;macOS 12+, Ubuntu 20.04+/Debian 10+, or Windows 11 &lt;strong&gt;via WSL2&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Git (optional, recommended)&lt;/td&gt; 
   &lt;td&gt;2.23+ for built-in PR helpers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RAM&lt;/td&gt; 
   &lt;td&gt;4-GB minimum (8-GB recommended)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;CLI reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive TUI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;...&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Initial prompt for interactive TUI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex &quot;fix lint errors&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex exec &quot;...&quot;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Non-interactive &quot;automation mode&quot;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex exec &quot;explain utils.ts&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Key flags: &lt;code&gt;--model/-m&lt;/code&gt;, &lt;code&gt;--ask-for-approval/-a&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Memory &amp;amp; project docs&lt;/h2&gt; 
&lt;p&gt;You can give Codex extra instructions and guidance using &lt;code&gt;AGENTS.md&lt;/code&gt; files. Codex looks for &lt;code&gt;AGENTS.md&lt;/code&gt; files in the following places, and merges them top-down:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt; - personal global guidance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGENTS.md&lt;/code&gt; at repo root - shared project notes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGENTS.md&lt;/code&gt; in the current working directory - sub-folder/feature specifics&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Non-interactive / CI mode&lt;/h2&gt; 
&lt;p&gt;Run Codex head-less in pipelines. Example GitHub Action step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- name: Update changelog via Codex
  run: |
    npm install -g @openai/codex
    export OPENAI_API_KEY=&quot;${{ secrets.OPENAI_KEY }}&quot;
    codex exec --full-auto &quot;update CHANGELOG for next release&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model Context Protocol (MCP)&lt;/h2&gt; 
&lt;p&gt;The Codex CLI can be configured to leverage MCP servers by defining an &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md#mcp_servers&quot;&gt;&lt;code&gt;mcp_servers&lt;/code&gt;&lt;/a&gt; section in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. It is intended to mirror how tools such as Claude and Cursor define &lt;code&gt;mcpServers&lt;/code&gt; in their respective JSON config files, though the Codex format is slightly different since it uses TOML rather than JSON, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# IMPORTANT: the top-level key is `mcp_servers` rather than `mcpServers`.
[mcp_servers.server-name]
command = &quot;npx&quot;
args = [&quot;-y&quot;, &quot;mcp-server&quot;]
env = { &quot;API_KEY&quot; = &quot;value&quot; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] It is somewhat experimental, but the Codex CLI can also be run as an MCP &lt;em&gt;server&lt;/em&gt; via &lt;code&gt;codex mcp&lt;/code&gt;. If you launch it with an MCP client such as &lt;code&gt;npx @modelcontextprotocol/inspector codex mcp&lt;/code&gt; and send it a &lt;code&gt;tools/list&lt;/code&gt; request, you will see that there is only one tool, &lt;code&gt;codex&lt;/code&gt;, that accepts a grab-bag of inputs, including a catch-all &lt;code&gt;config&lt;/code&gt; map for anything you might want to override. Feel free to play around with it and provide feedback via GitHub issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Tracing / verbose logging&lt;/h2&gt; 
&lt;p&gt;Because Codex is written in Rust, it honors the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable to configure its logging behavior.&lt;/p&gt; 
&lt;p&gt;The TUI defaults to &lt;code&gt;RUST_LOG=codex_core=info,codex_tui=info&lt;/code&gt; and log messages are written to &lt;code&gt;~/.codex/log/codex-tui.log&lt;/code&gt;, so you can leave the following running in a separate terminal to monitor log messages as they are written:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tail -F ~/.codex/log/codex-tui.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By comparison, the non-interactive mode (&lt;code&gt;codex exec&lt;/code&gt;) defaults to &lt;code&gt;RUST_LOG=error&lt;/code&gt;, but messages are printed inline, so there is no need to monitor a separate file.&lt;/p&gt; 
&lt;p&gt;See the Rust documentation on &lt;a href=&quot;https://docs.rs/env_logger/latest/env_logger/#enabling-logging&quot;&gt;&lt;code&gt;RUST_LOG&lt;/code&gt;&lt;/a&gt; for more information on the configuration options.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;DotSlash&lt;/h3&gt; 
&lt;p&gt;The GitHub Release also contains a &lt;a href=&quot;https://dotslash-cli.com/&quot;&gt;DotSlash&lt;/a&gt; file for the Codex CLI named &lt;code&gt;codex&lt;/code&gt;. Using a DotSlash file makes it possible to make a lightweight commit to source control to ensure all contributors use the same version of an executable, regardless of what platform they use for development.&lt;/p&gt;  
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build from source&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Clone the repository and navigate to the root of the Cargo workspace.
git clone https://github.com/openai/codex.git
cd codex/codex-rs

# Install the Rust toolchain, if necessary.
curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source &quot;$HOME/.cargo/env&quot;
rustup component add rustfmt
rustup component add clippy

# Build Codex.
cargo build

# Launch the TUI with a sample prompt.
cargo run --bin codex -- &quot;explain this codebase to me&quot;

# After making changes, ensure the code is clean.
cargo fmt -- --config imports_granularity=Item
cargo clippy --tests

# Run the tests.
cargo test
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Codex supports a rich set of configuration options documented in &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md&quot;&gt;&lt;code&gt;codex-rs/config.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By default, Codex loads its configuration from &lt;code&gt;~/.codex/config.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Though &lt;code&gt;--config&lt;/code&gt; can be used to set/override ad-hoc config values for individual invocations of &lt;code&gt;codex&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenAI released a model called Codex in 2021 - is this related?&lt;/summary&gt; 
 &lt;p&gt;In 2021, OpenAI released Codex, an AI system designed to generate code from natural language prompts. That original Codex model was deprecated as of March 2023 and is separate from the CLI tool.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Which models are supported?&lt;/summary&gt; 
 &lt;p&gt;Any model available with &lt;a href=&quot;https://platform.openai.com/docs/api-reference/responses&quot;&gt;Responses API&lt;/a&gt;. The default is &lt;code&gt;o4-mini&lt;/code&gt;, but pass &lt;code&gt;--model gpt-4.1&lt;/code&gt; or set &lt;code&gt;model: gpt-4.1&lt;/code&gt; in your config file to override.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why does &lt;code&gt;o3&lt;/code&gt; or &lt;code&gt;o4-mini&lt;/code&gt; not work for me?&lt;/summary&gt; 
 &lt;p&gt;It&#39;s possible that your &lt;a href=&quot;https://help.openai.com/en/articles/10910291-api-organization-verification&quot;&gt;API account needs to be verified&lt;/a&gt; in order to start streaming responses and seeing chain of thought summaries from the API. If you&#39;re still running into issues, please let us know!&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;How do I stop Codex from editing my files?&lt;/summary&gt; 
 &lt;p&gt;Codex runs model-generated commands in a sandbox. If a proposed command or file change doesn&#39;t look right, you can simply type &lt;strong&gt;n&lt;/strong&gt; to deny the command or give the model feedback.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Does it work on Windows?&lt;/summary&gt; 
 &lt;p&gt;Not directly. It requires &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/wsl/install&quot;&gt;Windows Subsystem for Linux (WSL2)&lt;/a&gt; - Codex has been tested on macOS and Linux with Node 22.&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Zero data retention (ZDR) usage&lt;/h2&gt; 
&lt;p&gt;Codex CLI &lt;strong&gt;does&lt;/strong&gt; support OpenAI organizations with &lt;a href=&quot;https://platform.openai.com/docs/guides/your-data#zero-data-retention&quot;&gt;Zero Data Retention (ZDR)&lt;/a&gt; enabled. If your OpenAI organization has Zero Data Retention enabled and you still encounter errors such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;OpenAI rejected the request. Error details: Status: 400, Code: unsupported_parameter, Type: invalid_request_error, Message: 400 Previous response cannot be used for this organization due to Zero Data Retention.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ensure you are running &lt;code&gt;codex&lt;/code&gt; with &lt;code&gt;--config disable_response_storage=true&lt;/code&gt; or add this line to &lt;code&gt;~/.codex/config.toml&lt;/code&gt; to avoid specifying the command line option each time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;disable_response_storage = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md#disable_response_storage&quot;&gt;the configuration documentation on &lt;code&gt;disable_response_storage&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Codex open source fund&lt;/h2&gt; 
&lt;p&gt;We&#39;re excited to launch a &lt;strong&gt;$1 million initiative&lt;/strong&gt; supporting open source projects that use Codex CLI and other OpenAI models.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grants are awarded up to &lt;strong&gt;$25,000&lt;/strong&gt; API credits.&lt;/li&gt; 
 &lt;li&gt;Applications are reviewed &lt;strong&gt;on a rolling basis&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Interested? &lt;a href=&quot;https://openai.com/form/codex-open-source-fund/&quot;&gt;Apply here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project is under active development and the code will likely change pretty significantly. We&#39;ll update this message once that&#39;s complete!&lt;/p&gt; 
&lt;p&gt;More broadly we welcome contributions - whether you are opening your very first pull request or you&#39;re a seasoned maintainer. At the same time we care about reliability and long-term maintainability, so the bar for merging code is intentionally &lt;strong&gt;high&lt;/strong&gt;. The guidelines below spell out what &quot;high-quality&quot; means in practice and should make the whole process transparent and friendly.&lt;/p&gt; 
&lt;h3&gt;Development workflow&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a &lt;em&gt;topic branch&lt;/em&gt; from &lt;code&gt;main&lt;/code&gt; - e.g. &lt;code&gt;feat/interactive-prompt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Keep your changes focused. Multiple unrelated fixes should be opened as separate PRs.&lt;/li&gt; 
 &lt;li&gt;Following the &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/#development-workflow&quot;&gt;development setup&lt;/a&gt; instructions above, ensure your change is free of lint warnings and test failures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Writing high-impact code changes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start with an issue.&lt;/strong&gt; Open a new one or comment on an existing discussion so we can agree on the solution before code is written.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add or update tests.&lt;/strong&gt; Every new feature or bug-fix should come with test coverage that fails before your change and passes afterwards. 100% coverage is not required, but aim for meaningful assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Document behaviour.&lt;/strong&gt; If your change affects user-facing behaviour, update the README, inline help (&lt;code&gt;codex --help&lt;/code&gt;), or relevant example projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keep commits atomic.&lt;/strong&gt; Each commit should compile and the tests should pass. This makes reviews and potential rollbacks easier.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Opening a pull request&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fill in the PR template (or include similar information) - &lt;strong&gt;What? Why? How?&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;strong&gt;all&lt;/strong&gt; checks locally (&lt;code&gt;cargo test &amp;amp;&amp;amp; cargo clippy --tests &amp;amp;&amp;amp; cargo fmt -- --config imports_granularity=Item&lt;/code&gt;). CI failures that could have been caught locally slow down the process.&lt;/li&gt; 
 &lt;li&gt;Make sure your branch is up-to-date with &lt;code&gt;main&lt;/code&gt; and that you have resolved merge conflicts.&lt;/li&gt; 
 &lt;li&gt;Mark the PR as &lt;strong&gt;Ready for review&lt;/strong&gt; only when you believe it is in a merge-able state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Review process&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;One maintainer will be assigned as a primary reviewer.&lt;/li&gt; 
 &lt;li&gt;We may ask for changes - please do not take this personally. We value the work, we just also value consistency and long-term maintainability.&lt;/li&gt; 
 &lt;li&gt;When there is consensus that the PR meets the bar, a maintainer will squash-and-merge.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Community values&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Be kind and inclusive.&lt;/strong&gt; Treat others with respect; we follow the &lt;a href=&quot;https://www.contributor-covenant.org/&quot;&gt;Contributor Covenant&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assume good intent.&lt;/strong&gt; Written communication is hard - err on the side of generosity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Teach &amp;amp; learn.&lt;/strong&gt; If you spot something confusing, open an issue or PR with improvements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting help&lt;/h3&gt; 
&lt;p&gt;If you run into problems setting up the project, would like feedback on an idea, or just want to say &lt;em&gt;hi&lt;/em&gt; - please open a Discussion or jump into the relevant issue. We are happy to help.&lt;/p&gt; 
&lt;p&gt;Together we can make Codex CLI an incredible tool. &lt;strong&gt;Happy hacking!&lt;/strong&gt; &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;Contributor license agreement (CLA)&lt;/h3&gt; 
&lt;p&gt;All contributors &lt;strong&gt;must&lt;/strong&gt; accept the CLA. The process is lightweight:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open your pull request.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paste the following comment (or reply &lt;code&gt;recheck&lt;/code&gt; if you&#39;ve signed before):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;I have read the CLA Document and I hereby sign the CLA
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The CLA-Assistant bot records your signature in the repo and marks the status check as passed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;No special Git commands, email attachments, or commit footers required.&lt;/p&gt; 
&lt;h4&gt;Quick fixes&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amend last commit&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git commit --amend -s --no-edit &amp;amp;&amp;amp; git push -f&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The &lt;strong&gt;DCO check&lt;/strong&gt; blocks merges until every commit in the PR carries the footer (with squash this is just the one).&lt;/p&gt; 
&lt;h3&gt;Releasing &lt;code&gt;codex&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;For admins only.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Make sure you are on &lt;code&gt;main&lt;/code&gt; and have no local changes. Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;VERSION=0.2.0  # Can also be 0.2.0-alpha.1 or any valid Rust version.
./codex-rs/scripts/create_github_release.sh &quot;$VERSION&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make a local commit on top of &lt;code&gt;main&lt;/code&gt; with &lt;code&gt;version&lt;/code&gt; set to &lt;code&gt;$VERSION&lt;/code&gt; in &lt;code&gt;codex-rs/Cargo.toml&lt;/code&gt; (note that on &lt;code&gt;main&lt;/code&gt;, we leave the version as &lt;code&gt;version = &quot;0.0.0&quot;&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;This will push the commit using the tag &lt;code&gt;rust-v${VERSION}&lt;/code&gt;, which in turn kicks off &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/.github/workflows/rust-release.yml&quot;&gt;the release workflow&lt;/a&gt;. This will create a new GitHub Release named &lt;code&gt;$VERSION&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If everything looks good in the generated GitHub Release, uncheck the &lt;strong&gt;pre-release&lt;/strong&gt; box so it is the latest release.&lt;/p&gt; 
&lt;p&gt;Create a PR to update &lt;a href=&quot;https://github.com/Homebrew/homebrew-core/raw/main/Formula/c/codex.rb&quot;&gt;&lt;code&gt;Formula/c/codex.rb&lt;/code&gt;&lt;/a&gt; on Homebrew.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security &amp;amp; responsible AI&lt;/h2&gt; 
&lt;p&gt;Have you discovered a vulnerability or have concerns about model output? Please e-mail &lt;strong&gt;&lt;a href=&quot;mailto:security@openai.com&quot;&gt;security@openai.com&lt;/a&gt;&lt;/strong&gt; and we will respond promptly.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/openai/codex/main/LICENSE&quot;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Orange-OpenSource/hurl</title>
      <link>https://github.com/Orange-OpenSource/hurl</link>
      <description>&lt;p&gt;Hurl, run and test HTTP requests with plain text.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;/docs/assets/img/logo-light.svg?sanitize=true&quot; /&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;/docs/assets/img/logo-dark.svg?sanitize=true&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/docs/assets/img/logo-light.svg?sanitize=true&quot; width=&quot;264px&quot; alt=&quot;Hurl Logo&quot; /&gt; 
&lt;/picture&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/actions&quot;&gt;&lt;img src=&quot;https://github.com/Orange-OpenSource/hurl/workflows/test/badge.svg?sanitize=true&quot; alt=&quot;deploy status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://Orange-OpenSource.github.io/hurl/coverage&quot;&gt;&lt;img src=&quot;https://Orange-OpenSource.github.io/hurl/coverage/badges/flat.svg?sanitize=true&quot; alt=&quot;coverage&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/hurl&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/hurl.svg?sanitize=true&quot; alt=&quot;Crates.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hurl.dev&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-documentation-ff0288&quot; alt=&quot;documentation&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What&#39;s Hurl?&lt;/h1&gt; 
&lt;p&gt;Hurl is a command line tool that runs &lt;b&gt;HTTP requests&lt;/b&gt; defined in a simple &lt;b&gt;plain text format&lt;/b&gt;.&lt;/p&gt; 
&lt;p&gt;It can chain requests, capture values and evaluate queries on headers and body response. Hurl is very versatile: it can be used for both &lt;b&gt;fetching data&lt;/b&gt; and &lt;b&gt;testing HTTP&lt;/b&gt; sessions.&lt;/p&gt; 
&lt;p&gt;Hurl makes it easy to work with &lt;b&gt;HTML&lt;/b&gt; content, &lt;b&gt;REST / SOAP / GraphQL&lt;/b&gt; APIs, or any other &lt;b&gt;XML / JSON&lt;/b&gt; based APIs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# Go home and capture token
GET https://example.org
HTTP 200
[Captures]
csrf_token: xpath &quot;string(//meta[@name=&#39;_csrf_token&#39;]/@content)&quot;


# Do login!
POST https://example.org/login
X-CSRF-TOKEN: {{csrf_token}}
[Form]
user: toto
password: 1234
HTTP 302
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Chaining multiple requests is easy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/api/health
GET https://example.org/api/step1
GET https://example.org/api/step2
GET https://example.org/api/step3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Also an HTTP Test Tool&lt;/h1&gt; 
&lt;p&gt;Hurl can run HTTP requests but can also be used to &lt;b&gt;test HTTP responses&lt;/b&gt;. Different types of queries and predicates are supported, from &lt;a href=&quot;https://en.wikipedia.org/wiki/XPath&quot;&gt;XPath&lt;/a&gt; and &lt;a href=&quot;https://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt; on body response, to assert on status code and response headers.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/player.html?id=starwars&amp;amp;speed=3&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/docs/assets/img/poster-starwars.png&quot; width=&quot;100%&quot; alt=&quot;Hurl Demo&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It is well adapted for &lt;b&gt;REST / JSON APIs&lt;/b&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/api/tests
{
    &quot;id&quot;: &quot;4568&quot;,
    &quot;evaluate&quot;: true
}
HTTP 200
[Asserts]
header &quot;X-Frame-Options&quot; == &quot;SAMEORIGIN&quot;
jsonpath &quot;$.status&quot; == &quot;RUNNING&quot;    # Check the status code
jsonpath &quot;$.tests&quot; count == 25      # Check the number of items
jsonpath &quot;$.id&quot; matches /\d{4}/     # Check the format of the id
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;b&gt;HTML content&lt;/b&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200
[Asserts]
xpath &quot;normalize-space(//head/title)&quot; == &quot;Hello world!&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;b&gt;GraphQL&lt;/b&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/graphql
```graphql
{
  human(id: &quot;1000&quot;) {
    name
    height(unit: FOOT)
  }
}
```
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and even &lt;b&gt;SOAP APIs&lt;/b&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/InStock
Content-Type: application/soap+xml; charset=utf-8
SOAPAction: &quot;http://www.w3.org/2003/05/soap-envelope&quot;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:m=&quot;https://example.org&quot;&amp;gt;
  &amp;lt;soap:Header&amp;gt;&amp;lt;/soap:Header&amp;gt;
  &amp;lt;soap:Body&amp;gt;
    &amp;lt;m:GetStockPrice&amp;gt;
      &amp;lt;m:StockName&amp;gt;GOOG&amp;lt;/m:StockName&amp;gt;
    &amp;lt;/m:GetStockPrice&amp;gt;
  &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hurl can also be used to test the &lt;b&gt;performance&lt;/b&gt; of HTTP endpoints&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/api/v1/pets
HTTP 200
[Asserts]
duration &amp;lt; 1000  # Duration in ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And check response bytes&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/data.tar.gz
HTTP 200
[Asserts]
sha256 == hex,039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, Hurl is easy to &lt;b&gt;integrate in CI/CD&lt;/b&gt;, with text, JUnit, TAP and HTML reports&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;/docs/assets/img/home-waterfall-light.png&quot; /&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;/docs/assets/img/home-waterfall-dark.png&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/docs/assets/img/home-waterfall-light.png&quot; width=&quot;480&quot; alt=&quot;HTML report&quot; /&gt; 
&lt;/picture&gt; 
&lt;h1&gt;Why Hurl?&lt;/h1&gt; 
&lt;ul class=&quot;showcase-container&quot;&gt; 
 &lt;li&gt;&lt;b&gt;Text Format:&lt;/b&gt; for both devops and developers&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Fast CLI:&lt;/b&gt; a command line for local dev and continuous integration&lt;/li&gt; 
 &lt;li&gt;&lt;b&gt;Single Binary:&lt;/b&gt; easy to install, with no runtime required&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Powered by curl&lt;/h1&gt; 
&lt;p&gt;Hurl is a lightweight binary written in &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt;. Under the hood, Hurl HTTP engine is powered by &lt;a href=&quot;https://curl.se/libcurl/&quot;&gt;libcurl&lt;/a&gt;, one of the most powerful and reliable file transfer libraries. With its text file format, Hurl adds syntactic sugar to run and test HTTP requests, but it&#39;s still the &lt;a href=&quot;https://curl.se&quot;&gt;curl&lt;/a&gt; that we love: &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;efficient&lt;/strong&gt; and &lt;strong&gt;IPv6 / HTTP/3 ready&lt;/strong&gt;.&lt;/p&gt; 
&lt;h1&gt;Feedbacks&lt;/h1&gt; 
&lt;p&gt;To support its development, &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/stargazers&quot;&gt;star Hurl on GitHub&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/issues&quot;&gt;Feedback, suggestion, bugs or improvements&lt;/a&gt; are welcome.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://hurl.dev/api/feedback
{
  &quot;name&quot;: &quot;John Doe&quot;,
  &quot;feedback&quot;: &quot;Hurl is awesome!&quot;
}
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/license.html&quot;&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/blog/&quot;&gt;Blog&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/tutorial/your-first-hurl-file.html&quot;&gt;Tutorial&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/installation.html&quot;&gt;Documentation&lt;/a&gt; (download &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/docs/standalone/hurl-7.0.0.html&quot;&gt;HTML&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/docs/standalone/hurl-7.0.0.pdf&quot;&gt;PDF&lt;/a&gt;, &lt;a href=&quot;https://hurl.dev/docs/standalone/hurl-7.0.0.html&quot;&gt;Markdown&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Orange-OpenSource/hurl&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#samples&quot;&gt;Samples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#getting-data&quot;&gt;Getting Data&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#http-headers&quot;&gt;HTTP Headers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#query-params&quot;&gt;Query Params&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#basic-authentication&quot;&gt;Basic Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#passing-data-between-requests&quot;&gt;Passing Data between Requests &lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#sending-data&quot;&gt;Sending Data&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#sending-html-form-data&quot;&gt;Sending HTML Form Data&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#sending-multipart-form-data&quot;&gt;Sending Multipart Form Data&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#posting-a-json-body&quot;&gt;Posting a JSON Body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#templating-a-json-body&quot;&gt;Templating a JSON Body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#templating-a-xml-body&quot;&gt;Templating a XML Body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#using-graphql-query&quot;&gt;Using GraphQL Query&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#using-dynamic-datas&quot;&gt;Using Dynamic Datas&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-response&quot;&gt;Testing Response&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-status-code&quot;&gt;Testing Status Code&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-response-headers&quot;&gt;Testing Response Headers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-rest-apis&quot;&gt;Testing REST APIs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-html-response&quot;&gt;Testing HTML Response&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-set-cookie-attributes&quot;&gt;Testing Set-Cookie Attributes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-bytes-content&quot;&gt;Testing Bytes Content&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ssl-certificate&quot;&gt;SSL Certificate&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#checking-full-body&quot;&gt;Checking Full Body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-redirections&quot;&gt;Testing Redirections&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#debug-tips&quot;&gt;Debug Tips&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#verbose-mode&quot;&gt;Verbose Mode&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#error-format&quot;&gt;Error Format&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#output-response-body&quot;&gt;Output Response Body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#export-curl-commands&quot;&gt;Export curl Commands&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#using-proxy&quot;&gt;Using Proxy&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#reports&quot;&gt;Reports&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#html-report&quot;&gt;HTML Report&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#json-report&quot;&gt;JSON Report&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#junit-report&quot;&gt;JUnit Report&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#tap-report&quot;&gt;TAP Report&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#json-output&quot;&gt;JSON Output&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#others&quot;&gt;Others&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#http-version&quot;&gt;HTTP Version&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ip-address&quot;&gt;IP Address&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#polling-and-retry&quot;&gt;Polling and Retry&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#delaying-requests&quot;&gt;Delaying Requests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#skipping-requests&quot;&gt;Skipping Requests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#testing-endpoint-performance&quot;&gt;Testing Endpoint Performance&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#using-soap-apis&quot;&gt;Using SOAP APIs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#capturing-and-using-a-csrf-token&quot;&gt;Capturing and Using a CSRF Token&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#redacting-secrets&quot;&gt;Redacting Secrets&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#checking-byte-order-mark-bom-in-response-body&quot;&gt;Checking Byte Order Mark (BOM) in Response Body&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#aws-signature-version-4-requests&quot;&gt;AWS Signature Version 4 Requests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#using-curl-options&quot;&gt;Using curl Options&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#manual&quot;&gt;Manual&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#name&quot;&gt;Name&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#synopsis&quot;&gt;Synopsis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#description&quot;&gt;Description&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#hurl-file-format&quot;&gt;Hurl File Format&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#capturing-values&quot;&gt;Capturing values&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#asserts&quot;&gt;Asserts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#options&quot;&gt;Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#environment&quot;&gt;Environment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#exit-codes&quot;&gt;Exit Codes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#www&quot;&gt;WWW&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#see-also&quot;&gt;See Also&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#binaries-installation&quot;&gt;Binaries Installation&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#linux&quot;&gt;Linux&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#debian--ubuntu&quot;&gt;Debian / Ubuntu&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#alpine&quot;&gt;Alpine&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#arch-linux--manjaro&quot;&gt;Arch Linux / Manjaro&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#nixos--nix&quot;&gt;NixOS / Nix&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#macos&quot;&gt;macOS&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#homebrew&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#macports&quot;&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#freebsd&quot;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#windows&quot;&gt;Windows&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#zip-file&quot;&gt;Zip File&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#installer&quot;&gt;Installer&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#chocolatey&quot;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#scoop&quot;&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#windows-package-manager&quot;&gt;Windows Package Manager&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cargo&quot;&gt;Cargo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#conda-forge&quot;&gt;conda-forge&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#docker&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#npm&quot;&gt;npm&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#building-from-sources&quot;&gt;Building From Sources&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#build-on-linux&quot;&gt;Build on Linux&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#debian-based-distributions&quot;&gt;Debian based distributions&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#fedora-based-distributions&quot;&gt;Fedora based distributions&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#red-hat-based-distributions&quot;&gt;Red Hat based distributions&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#arch-based-distributions&quot;&gt;Arch based distributions&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#alpine-based-distributions&quot;&gt;Alpine based distributions&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#build-on-macos&quot;&gt;Build on macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#build-on-windows&quot;&gt;Build on Windows&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Samples&lt;/h1&gt; 
&lt;p&gt;To run a sample, edit a file with the sample content, and run Hurl:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ vi sample.hurl

GET https://example.org

$ hurl sample.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, Hurl behaves like &lt;a href=&quot;https://curl.se&quot;&gt;curl&lt;/a&gt; and outputs the last HTTP response&#39;s &lt;a href=&quot;https://hurl.dev/docs/entry.html&quot;&gt;entry&lt;/a&gt;. To have a test oriented output, you can use &lt;a href=&quot;https://hurl.dev/docs/manual.html#test&quot;&gt;&lt;code&gt;--test&lt;/code&gt; option&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test sample.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A particular response can be saved with &lt;a href=&quot;https://hurl.dev/docs/request.html#options&quot;&gt;&lt;code&gt;[Options] section&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.ord/cats/123
[Options]
output: cat123.txt    # use - to output to stdout
HTTP 200

GET https://example.ord/dogs/567
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, Hurl can take files as input, or directories. In the latter case, Hurl will search files with &lt;code&gt;.hurl&lt;/code&gt; extension recursively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test integration/*.hurl
$ hurl --test .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can check &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/tree/master/integration/hurl/tests_ok&quot;&gt;Hurl tests suite&lt;/a&gt; for more samples.&lt;/p&gt; 
&lt;h2&gt;Getting Data&lt;/h2&gt; 
&lt;p&gt;A simple GET:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Requests can be chained:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/a
GET https://example.org/b
HEAD https://example.org/c
GET https://example.org/c
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#method&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;HTTP Headers&lt;/h3&gt; 
&lt;p&gt;A simple GET with headers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/news
User-Agent: Mozilla/5.0 
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#headers&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Query Params&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/news
[Query]
order: newest
search: something to search
count: 100
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/news?order=newest&amp;amp;search=something%20to%20search&amp;amp;count=100
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;With &lt;code&gt;[Query]&lt;/code&gt; section, params don&#39;t need to be URL escaped.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#query-parameters&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Basic Authentication&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/protected
[BasicAuth]
bob: secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#basic-authentication&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is equivalent to construct the request with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization&quot;&gt;Authorization&lt;/a&gt; header:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# Authorization header value can be computed with `echo -n &#39;bob:secret&#39; | base64`
GET https://example.org/protected
Authorization: Basic Ym9iOnNlY3JldA== 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Basic authentication section allows per request authentication. If you want to add basic authentication to all the requests of a Hurl file you could use &lt;a href=&quot;https://hurl.dev/docs/manual.html#user&quot;&gt;&lt;code&gt;-u/--user&lt;/code&gt; option&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --user bob:secret login.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#user&quot;&gt;&lt;code&gt;--user&lt;/code&gt;&lt;/a&gt; option can also be set per request:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/login
[Options]
user: bob:secret
HTTP 200

GET https://example.org/login
[Options]
user: alice:secret
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Passing Data between Requests&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/capturing-response.html&quot;&gt;Captures&lt;/a&gt; can be used to pass data from one request to another:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://sample.org/orders
HTTP 201
[Captures]
order_id: jsonpath &quot;$.order.id&quot;

GET https://sample.org/orders/{{order_id}}
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/capturing-response.html&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sending Data&lt;/h2&gt; 
&lt;h3&gt;Sending HTML Form Data&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/contact
[Form]
default: false
token: {{token}}
email: john.doe@rookie.org
number: 33611223344
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#form-parameters&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sending Multipart Form Data&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/upload
[Multipart]
field1: value1
field2: file,example.txt;
# One can specify the file content type:
field3: file,example.zip; application/zip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#multipart-form-data&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Multipart forms can also be sent with a &lt;a href=&quot;https://hurl.dev/docs/request.html#multiline-string-body&quot;&gt;multiline string body&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/upload
Content-Type: multipart/form-data; boundary=&quot;boundary&quot;
```
--boundary
Content-Disposition: form-data; name=&quot;key1&quot;

value1
--boundary
Content-Disposition: form-data; name=&quot;upload1&quot;; filename=&quot;data.txt&quot;
Content-Type: text/plain

Hello World!
--boundary
Content-Disposition: form-data; name=&quot;upload2&quot;; filename=&quot;data.html&quot;
Content-Type: text/html

&amp;lt;div&amp;gt;Hello &amp;lt;b&amp;gt;World&amp;lt;/b&amp;gt;!&amp;lt;/div&amp;gt;
--boundary--
```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In that case, files have to be inlined in the Hurl file.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#multiline-string-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Posting a JSON Body&lt;/h3&gt; 
&lt;p&gt;With an inline JSON:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/api/tests
{
    &quot;id&quot;: &quot;456&quot;,
    &quot;evaluate&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#json-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;With a local file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/api/tests
Content-Type: application/json
file,data.json;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#file-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Templating a JSON Body&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;PUT https://example.org/api/hits
Content-Type: application/json
{
    &quot;key0&quot;: &quot;{{a_string}}&quot;,
    &quot;key1&quot;: {{a_bool}},
    &quot;key2&quot;: {{a_null}},
    &quot;key3&quot;: {{a_number}}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Variables can be initialized via command line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --variable a_string=apple \
       --variable a_bool=true \
       --variable a_null=null \
       --variable a_number=42 \
       test.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Resulting in a PUT request with the following JSON body:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    &quot;key0&quot;: &quot;apple&quot;,
    &quot;key1&quot;: true,
    &quot;key2&quot;: null,
    &quot;key3&quot;: 42
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/templates.html&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Templating a XML Body&lt;/h3&gt; 
&lt;p&gt;Using templates with &lt;a href=&quot;https://hurl.dev/docs/request.html#xml-body&quot;&gt;XML body&lt;/a&gt; is not currently supported in Hurl. You can use templates in &lt;a href=&quot;https://hurl.dev/docs/request.html#multiline-string-body&quot;&gt;XML multiline string body&lt;/a&gt; with variables to send a variable XML body:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/echo/post/xml
```xml
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;Request&amp;gt;
    &amp;lt;Login&amp;gt;{{login}}&amp;lt;/Login&amp;gt;
    &amp;lt;Password&amp;gt;{{password}}&amp;lt;/Password&amp;gt;
&amp;lt;/Request&amp;gt;
```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#multiline-string-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using GraphQL Query&lt;/h3&gt; 
&lt;p&gt;A simple GraphQL query:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/starwars/graphql
```graphql
{
  human(id: &quot;1000&quot;) {
    name
    height(unit: FOOT)
  }
}
```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A GraphQL query with variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/starwars/graphql
```graphql
query Hero($episode: Episode, $withFriends: Boolean!) {
  hero(episode: $episode) {
    name
    friends @include(if: $withFriends) {
      name
    }
  }
}

variables {
  &quot;episode&quot;: &quot;JEDI&quot;,
  &quot;withFriends&quot;: false
}
```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;GraphQL queries can also use &lt;a href=&quot;https://hurl.dev/docs/templates.html&quot;&gt;Hurl templates&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#graphql-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Dynamic Datas&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/templates.html#functions&quot;&gt;Functions&lt;/a&gt; like &lt;code&gt;newUuid&lt;/code&gt; and &lt;code&gt;newDate&lt;/code&gt; can be used in templates to create dynamic datas:&lt;/p&gt; 
&lt;p&gt;A file that creates a dynamic email (i.e &lt;code&gt;0531f78f-7f87-44be-a7f2-969a1c4e6d97@test.com&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/api/foo
{
  &quot;name&quot;: &quot;foo&quot;,
  &quot;email&quot;: &quot;{{newUuid}}@test.com&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A file that creates a dynamic query parameter (i.e &lt;code&gt;2024-12-02T10:35:44.461731Z&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/api/foo
[Query]
date: {{newDate}}
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/templates.html#functions&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Testing Response&lt;/h2&gt; 
&lt;p&gt;Responses are optional, everything after &lt;code&gt;HTTP&lt;/code&gt; is part of the response asserts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# A request with (almost) no check:
GET https://foo.com

# A status code check:
GET https://foo.com
HTTP 200

# A test on response body
GET https://foo.com
HTTP 200
[Asserts]
jsonpath &quot;$.state&quot; == &quot;running&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing Status Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/order/435
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#version-status&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/order/435
# Testing status code is in a 200-300 range
HTTP *
[Asserts]
status &amp;gt;= 200
status &amp;lt; 300
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#status-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Response Headers&lt;/h3&gt; 
&lt;p&gt;Use implicit response asserts to test header values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/index.html
HTTP 200
Set-Cookie: theme=light
Set-Cookie: sessionToken=abc123; Expires=Wed, 09 Jun 2021 10:18:14 GMT
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#headers&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or use explicit response asserts with &lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#predicates&quot;&gt;predicates&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 302
[Asserts]
header &quot;Location&quot; contains &quot;www.example.net&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#header-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Implicit and explicit asserts can be combined:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/index.html
HTTP 200
Set-Cookie: theme=light
Set-Cookie: sessionToken=abc123; Expires=Wed, 09 Jun 2021 10:18:14 GMT
[Asserts]
header &quot;Location&quot; contains &quot;www.example.net&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing REST APIs&lt;/h3&gt; 
&lt;p&gt;Asserting JSON body response (node values, collection count etc...) with &lt;a href=&quot;https://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/order
screencapability: low
HTTP 200
[Asserts]
jsonpath &quot;$.validated&quot; == true
jsonpath &quot;$.userInfo.firstName&quot; == &quot;Franck&quot;
jsonpath &quot;$.userInfo.lastName&quot; == &quot;Herbert&quot;
jsonpath &quot;$.hasDevice&quot; == false
jsonpath &quot;$.links&quot; count == 12
jsonpath &quot;$.state&quot; != null
jsonpath &quot;$.order&quot; matches &quot;^order-\\d{8}$&quot;
jsonpath &quot;$.order&quot; matches /^order-\d{8}$/  # Alternative syntax with regex literal
jsonpath &quot;$.id&quot; matches /(?i)[a-z]*/        # See syntax for flags &amp;lt;https://docs.rs/regex/latest/regex/#grouping-and-flags&amp;gt;
jsonpath &quot;$.created&quot; isIsoDate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#jsonpath-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Testing HTML Response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200
Content-Type: text/html; charset=UTF-8
[Asserts]
xpath &quot;string(/html/head/title)&quot; contains &quot;Example&quot; # Check title
xpath &quot;count(//p)&quot; == 2  # Check the number of p
xpath &quot;//p&quot; count == 2  # Similar assert for p
xpath &quot;boolean(count(//h2))&quot; == false  # Check there is no h2  
xpath &quot;//h2&quot; not exists  # Similar assert for h2
xpath &quot;string(//div[1])&quot; matches /Hello.*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#xpath-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Set-Cookie Attributes&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/home
HTTP 200
[Asserts]
cookie &quot;JSESSIONID&quot; == &quot;8400BAFE2F66443613DC38AE3D9D6239&quot;
cookie &quot;JSESSIONID[Value]&quot; == &quot;8400BAFE2F66443613DC38AE3D9D6239&quot;
cookie &quot;JSESSIONID[Expires]&quot; contains &quot;Wed, 13 Jan 2021&quot;
cookie &quot;JSESSIONID[Secure]&quot; exists
cookie &quot;JSESSIONID[HttpOnly]&quot; exists
cookie &quot;JSESSIONID[SameSite]&quot; == &quot;Lax&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#cookie-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Bytes Content&lt;/h3&gt; 
&lt;p&gt;Check the SHA-256 response body hash:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/data.tar.gz
HTTP 200
[Asserts]
sha256 == hex,039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#sha-256-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;SSL Certificate&lt;/h3&gt; 
&lt;p&gt;Check the properties of a SSL certificate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200
[Asserts]
certificate &quot;Subject&quot; == &quot;CN=example.org&quot;
certificate &quot;Issuer&quot; == &quot;C=US, O=Let&#39;s Encrypt, CN=R3&quot;
certificate &quot;Expire-Date&quot; daysAfterNow &amp;gt; 15
certificate &quot;Serial-Number&quot; matches /[\da-f]+/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#ssl-certificate-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Checking Full Body&lt;/h3&gt; 
&lt;p&gt;Use implicit body to test an exact JSON body match:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/api/cats/123
HTTP 200
{
  &quot;name&quot; : &quot;Purrsloud&quot;,
  &quot;species&quot; : &quot;Cat&quot;,
  &quot;favFoods&quot; : [&quot;wet food&quot;, &quot;dry food&quot;, &quot;&amp;lt;strong&amp;gt;any&amp;lt;/strong&amp;gt; food&quot;],
  &quot;birthYear&quot; : 2016,
  &quot;photo&quot; : &quot;https://learnwebcode.github.io/json-example/images/cat-2.jpg&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#json-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or an explicit assert file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/index.html
HTTP 200
[Asserts]
body == file,cat.json;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#body-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Implicit asserts supports XML body:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/api/catalog
HTTP 200
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;catalog&amp;gt;
   &amp;lt;book id=&quot;bk101&quot;&amp;gt;
      &amp;lt;author&amp;gt;Gambardella, Matthew&amp;lt;/author&amp;gt;
      &amp;lt;title&amp;gt;XML Developer&#39;s Guide&amp;lt;/title&amp;gt;
      &amp;lt;genre&amp;gt;Computer&amp;lt;/genre&amp;gt;
      &amp;lt;price&amp;gt;44.95&amp;lt;/price&amp;gt;
      &amp;lt;publish_date&amp;gt;2000-10-01&amp;lt;/publish_date&amp;gt;
      &amp;lt;description&amp;gt;An in-depth look at creating applications with XML.&amp;lt;/description&amp;gt;
   &amp;lt;/book&amp;gt;
&amp;lt;/catalog&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#xml-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Plain text:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/models
HTTP 200
```
Year,Make,Model,Description,Price
1997,Ford,E350,&quot;ac, abs, moon&quot;,3000.00
1999,Chevy,&quot;Venture &quot;&quot;Extended Edition&quot;&quot;&quot;,&quot;&quot;,4900.00
1999,Chevy,&quot;Venture &quot;&quot;Extended Edition, Very Large&quot;&quot;&quot;,,5000.00
1996,Jeep,Grand Cherokee,&quot;MUST SELL! air, moon roof, loaded&quot;,4799.00
```
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#multiline-string-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;One line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/helloworld
HTTP 200
`Hello world!`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#oneline-string-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;File:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200
file,data.bin;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#file-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Redirections&lt;/h3&gt; 
&lt;p&gt;By default, Hurl doesn&#39;t follow redirection so each step of a redirect must be run manually and can be analysed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/step1
HTTP 301
[Asserts]
header &quot;Location&quot; == &quot;https://example.org/step2&quot;


GET https://example.org/step2
HTTP 301
[Asserts]
header &quot;Location&quot; == &quot;https://example.org/step3&quot;


GET https://example.org/step3
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Using &lt;a href=&quot;https://hurl.dev/docs/manual.html#location&quot;&gt;&lt;code&gt;--location&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hurl.dev/docs/manual.html#location-trusted&quot;&gt;&lt;code&gt;--location-trusted&lt;/code&gt;&lt;/a&gt; (either with command line option or per request), Hurl follows redirection and each step of the redirection can be checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/step1
[Options]
location: true
HTTP 200
[Asserts]
redirects count == 2
redirects nth 0 location == &quot;https://example.org/step2&quot;
redirects nth 1 location == &quot;https://example.org/step3&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/step1
[Options]
location-trusted: true
HTTP 200
[Asserts]
redirects last location == &quot;https://example.org/step2&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#redirects-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Debug Tips&lt;/h2&gt; 
&lt;h3&gt;Verbose Mode&lt;/h3&gt; 
&lt;p&gt;To get more info on a given request/response, use &lt;a href=&quot;https://hurl.dev/docs/request.html#options&quot;&gt;&lt;code&gt;[Options]&lt;/code&gt; section&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200

GET https://example.org/api/cats/123
[Options]
very-verbose: true
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;--verbose&lt;/code&gt; and &lt;code&gt;--very-verbose&lt;/code&gt; can be also used globally as command line options.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#very-verbose&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Error Format&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test --error-format long *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#error-format&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Output Response Body&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;--output&lt;/code&gt; on a specific request to get the response body (&lt;code&gt;-&lt;/code&gt; can be used as standard output):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://foo.com/failure
[Options]
# use - to output on standard output, foo.bin to save on disk 
output: -
HTTP 200

GET https://foo.com/success
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#output&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Export curl Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl ---curl /tmp/curl.txt *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#curl&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Proxy&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;--proxy&lt;/code&gt; on a specific request or globally as command line option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://foo.com/a
HTTP 200

GET https://foo.com/b
[Options]
proxy: localhost:8888
HTTP 200

GET https://foo.com/c
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Reports&lt;/h2&gt; 
&lt;h3&gt;HTML Report&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test --report-html build/report/ *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/running-tests.html#generating-report&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;JSON Report&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test --report-json build/report/ *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/running-tests.html#generating-report&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;JUnit Report&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test --report-junit build/report.xml *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/running-tests.html#generating-report&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TAP Report&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test --report-tap build/report.txt *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/running-tests.html#generating-report&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;JSON Output&lt;/h3&gt; 
&lt;p&gt;A structured output of running Hurl files can be obtained with &lt;a href=&quot;https://hurl.dev/docs/manual.html#json&quot;&gt;&lt;code&gt;--json&lt;/code&gt; option&lt;/a&gt;. Each file will produce a JSON export of the run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --json *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Others&lt;/h2&gt; 
&lt;h3&gt;HTTP Version&lt;/h3&gt; 
&lt;p&gt;Testing HTTP version (HTTP/1.0, HTTP/1.1, HTTP/2 or HTTP/3) can be done using implicit asserts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://foo.com
HTTP/3 200

GET https://bar.com
HTTP/2 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#version-status&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or explicit:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://foo.com
HTTP 200
[Asserts]
version == &quot;3&quot;

GET https://bar.com
HTTP 200
[Asserts]
version == &quot;2&quot;
version toFloat &amp;gt; 1.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#version-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;IP Address&lt;/h3&gt; 
&lt;p&gt;Testing the IP address of the response, as a string. This string may be IPv6 address:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://foo.com
HTTP 200
[Asserts]
ip == &quot;2001:0db8:85a3:0000:0000:8a2e:0370:733&quot;
ip startsWith &quot;2001&quot;
ip isIpv6
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Polling and Retry&lt;/h3&gt; 
&lt;p&gt;Retry request on any errors (asserts, captures, status code, runtime etc...):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# Create a new job
POST https://api.example.org/jobs
HTTP 201
[Captures]
job_id: jsonpath &quot;$.id&quot;
[Asserts]
jsonpath &quot;$.state&quot; == &quot;RUNNING&quot;


# Pull job status until it is completed
GET https://api.example.org/jobs/{{job_id}}
[Options]
retry: 10   # maximum number of retry, -1 for unlimited
retry-interval: 500ms
HTTP 200
[Asserts]
jsonpath &quot;$.state&quot; == &quot;COMPLETED&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/entry.html#retry&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Delaying Requests&lt;/h3&gt; 
&lt;p&gt;Add delay for every request, or a particular request:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# Delaying this request by 5 seconds (aka sleep)
GET https://example.org/turtle
[Options]
delay: 5s
HTTP 200

# No delay!
GET https://example.org/turtle
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#delay&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Skipping Requests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# a, c, d are run, b is skipped
GET https://example.org/a

GET https://example.org/b
[Options]
skip: true

GET https://example.org/c

GET https://example.org/d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#skip&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Endpoint Performance&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://sample.org/helloworld
HTTP *
[Asserts]
duration &amp;lt; 1000   # Check that response time is less than one second
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#duration-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using SOAP APIs&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org/InStock
Content-Type: application/soap+xml; charset=utf-8
SOAPAction: &quot;http://www.w3.org/2003/05/soap-envelope&quot;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:m=&quot;https://example.org&quot;&amp;gt;
  &amp;lt;soap:Header&amp;gt;&amp;lt;/soap:Header&amp;gt;
  &amp;lt;soap:Body&amp;gt;
    &amp;lt;m:GetStockPrice&amp;gt;
      &amp;lt;m:StockName&amp;gt;GOOG&amp;lt;/m:StockName&amp;gt;
    &amp;lt;/m:GetStockPrice&amp;gt;
  &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#xml-body&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Capturing and Using a CSRF Token&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200
[Captures]
csrf_token: xpath &quot;string(//meta[@name=&#39;_csrf_token&#39;]/@content)&quot;


POST https://example.org/login?user=toto&amp;amp;password=1234
X-CSRF-TOKEN: {{csrf_token}}
HTTP 302
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/capturing-response.html#xpath-capture&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Redacting Secrets&lt;/h3&gt; 
&lt;p&gt;Using command-line for known values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --secret token=1234 file.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://example.org
X-Token: {{token}}
{
  &quot;name&quot;: &quot;Alice&quot;,
  &quot;value&quot;: 100
}
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/templates.html#secrets&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;redact&lt;/code&gt; for dynamic values:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;# Get an authorization token:
GET https://example.org/token
HTTP 200
[Captures]
token: header &quot;X-Token&quot; redact

# Send an authorized request:
POST https://example.org
X-Token: {{token}}
{
  &quot;name&quot;: &quot;Alice&quot;,
  &quot;value&quot;: 100
}
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/capturing-response.html#redacting-secrets&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Checking Byte Order Mark (BOM) in Response Body&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org/data.bin
HTTP 200
[Asserts]
bytes startsWith hex,efbbbf;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/asserting-response.html#bytes-assert&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;AWS Signature Version 4 Requests&lt;/h3&gt; 
&lt;p&gt;Generate signed API requests with &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html&quot;&gt;AWS Signature Version 4&lt;/a&gt;, as used by several cloud providers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://sts.eu-central-1.amazonaws.com/
[Options]
aws-sigv4: aws:amz:eu-central-1:sts
[Form]
Action: GetCallerIdentity
Version: 2011-06-15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Access Key is given per &lt;a href=&quot;https://hurl.dev/docs/manual.html#user&quot;&gt;&lt;code&gt;--user&lt;/code&gt;&lt;/a&gt;, either with command line option or within the &lt;a href=&quot;https://hurl.dev/docs/request.html#options&quot;&gt;&lt;code&gt;[Options]&lt;/code&gt;&lt;/a&gt; section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;POST https://sts.eu-central-1.amazonaws.com/
[Options]
aws-sigv4: aws:amz:eu-central-1:sts
user: bob=secret
[Form]
Action: GetCallerIdentity
Version: 2011-06-15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/manual.html#aws-sigv4&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using curl Options&lt;/h3&gt; 
&lt;p&gt;curl options (for instance &lt;a href=&quot;https://hurl.dev/docs/manual.html#resolve&quot;&gt;&lt;code&gt;--resolve&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hurl.dev/docs/manual.html#connect-to&quot;&gt;&lt;code&gt;--connect-to&lt;/code&gt;&lt;/a&gt;) can be used as CLI argument. In this case, they&#39;re applicable to each request of an Hurl file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --resolve foo.com:8000:127.0.0.1 foo.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://hurl.dev/docs/request.html#options&quot;&gt;&lt;code&gt;[Options]&lt;/code&gt; section&lt;/a&gt; to configure a specific request:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET http://bar.com
HTTP 200


GET http://foo.com:8000/resolve
[Options]
resolve: foo.com:8000:127.0.0.1
HTTP 200
`Hello World!`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev/docs/request.html#options&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Manual&lt;/h1&gt; 
&lt;h2&gt;Name&lt;/h2&gt; 
&lt;p&gt;hurl - run and test HTTP requests.&lt;/p&gt; 
&lt;h2&gt;Synopsis&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;hurl&lt;/strong&gt; [options] [FILE...]&lt;/p&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Hurl&lt;/strong&gt; is a command line tool that runs HTTP requests defined in a simple plain text format.&lt;/p&gt; 
&lt;p&gt;It can chain requests, capture values and evaluate queries on headers and body response. Hurl is very versatile, it can be used for fetching data and testing HTTP sessions: HTML content, REST / SOAP / GraphQL APIs, or any other XML / JSON based APIs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl session.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If no input files are specified, input is read from stdin.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ echo GET http://httpbin.org/get | hurl
    {
      &quot;args&quot;: {},
      &quot;headers&quot;: {
        &quot;Accept&quot;: &quot;*/*&quot;,
        &quot;Accept-Encoding&quot;: &quot;gzip&quot;,
        &quot;Content-Length&quot;: &quot;0&quot;,
        &quot;Host&quot;: &quot;httpbin.org&quot;,
        &quot;User-Agent&quot;: &quot;hurl/0.99.10&quot;,
        &quot;X-Amzn-Trace-Id&quot;: &quot;Root=1-5eedf4c7-520814d64e2f9249ea44e0&quot;
      },
      &quot;origin&quot;: &quot;1.2.3.4&quot;,
      &quot;url&quot;: &quot;http://httpbin.org/get&quot;
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hurl can take files as input, or directories. In the latter case, Hurl will search files with &lt;code&gt;.hurl&lt;/code&gt; extension recursively.&lt;/p&gt; 
&lt;p&gt;Output goes to stdout by default. To have output go to a file, use the &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#output&quot;&gt;&lt;code&gt;-o, --output&lt;/code&gt;&lt;/a&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl -o output input.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, Hurl executes all HTTP requests and outputs the response body of the last HTTP call.&lt;/p&gt; 
&lt;p&gt;To have a test oriented output, you can use &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#test&quot;&gt;&lt;code&gt;--test&lt;/code&gt;&lt;/a&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --test *.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Hurl File Format&lt;/h2&gt; 
&lt;p&gt;The Hurl file format is fully documented in &lt;a href=&quot;https://hurl.dev/docs/hurl-file.html&quot;&gt;https://hurl.dev/docs/hurl-file.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It consists of one or several HTTP requests&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET http://example.org/endpoint1
GET http://example.org/endpoint2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Capturing values&lt;/h3&gt; 
&lt;p&gt;A value from an HTTP response can be-reused for successive HTTP requests.&lt;/p&gt; 
&lt;p&gt;A typical example occurs with CSRF tokens.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 200
# Capture the CSRF token value from html body.
[Captures]
csrf_token: xpath &quot;normalize-space(//meta[@name=&#39;_csrf_token&#39;]/@content)&quot;

# Do the login !
POST https://example.org/login?user=toto&amp;amp;password=1234
X-CSRF-TOKEN: {{csrf_token}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information on captures can be found here &lt;a href=&quot;https://hurl.dev/docs/capturing-response.html&quot;&gt;https://hurl.dev/docs/capturing-response.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Asserts&lt;/h3&gt; 
&lt;p&gt;The HTTP response defined in the Hurl file are used to make asserts. Responses are optional.&lt;/p&gt; 
&lt;p&gt;At the minimum, response includes assert on the HTTP status code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET http://example.org
HTTP 301
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It can also include asserts on the response headers&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET http://example.org
HTTP 301
Location: http://www.example.org
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Explicit asserts can be included by combining a query and a predicate&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET http://example.org
HTTP 301
[Asserts]
xpath &quot;string(//title)&quot; == &quot;301 Moved&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the addition of asserts, Hurl can be used as a testing tool to run scenarios.&lt;/p&gt; 
&lt;p&gt;More information on asserts can be found here &lt;a href=&quot;https://hurl.dev/docs/asserting-response.html&quot;&gt;https://hurl.dev/docs/asserting-response.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Options&lt;/h2&gt; 
&lt;p&gt;Options that exist in curl have exactly the same semantics.&lt;/p&gt; 
&lt;p&gt;Options specified on the command line are defined for every Hurl file&#39;s entry, except if they are tagged as cli-only (can not be defined in the Hurl request [Options] entry)&lt;/p&gt; 
&lt;p&gt;For instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hurl --location foo.hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will follow redirection for each entry in &lt;code&gt;foo.hurl&lt;/code&gt;. You can also define an option only for a particular entry with an &lt;code&gt;[Options]&lt;/code&gt; section. For instance, this Hurl file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-hurl&quot;&gt;GET https://example.org
HTTP 301

GET https://example.org
[Options]
location: true
HTTP 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will follow a redirection only for the second entry.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#aws-sigv4&quot; id=&quot;aws-sigv4&quot;&gt;&lt;code&gt;--aws-sigv4 &amp;lt;PROVIDER1[:PROVIDER2[:REGION[:SERVICE]]]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generate an &lt;code&gt;Authorization&lt;/code&gt; header with an AWS SigV4 signature.&lt;br /&gt;&lt;br /&gt;Use &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#user&quot;&gt;&lt;code&gt;-u, --user&lt;/code&gt;&lt;/a&gt; to specify Access Key Id (username) and Secret Key (password).&lt;br /&gt;&lt;br /&gt;To use temporary session credentials (e.g. for an AWS IAM Role), add the &lt;code&gt;X-Amz-Security-Token&lt;/code&gt; header containing the session token.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cacert&quot; id=&quot;cacert&quot;&gt;&lt;code&gt;--cacert &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Specifies the certificate file for peer verification. The file may contain multiple CA certificates and must be in PEM format.&lt;br /&gt;Normally Hurl is built to use a default file for this, so this option is typically used to alter that default file.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cert&quot; id=&quot;cert&quot;&gt;&lt;code&gt;-E, --cert &amp;lt;CERTIFICATE[:PASSWORD]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Client certificate file and password.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#key&quot;&gt;&lt;code&gt;--key&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#color&quot; id=&quot;color&quot;&gt;&lt;code&gt;--color&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Colorize debug output (the HTTP response output is not colorized).&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#compressed&quot; id=&quot;compressed&quot;&gt;&lt;code&gt;--compressed&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Request a compressed response using one of the algorithms br, gzip, deflate and automatically decompress the content.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#connect-timeout&quot; id=&quot;connect-timeout&quot;&gt;&lt;code&gt;--connect-timeout &amp;lt;SECONDS&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Maximum time in seconds that you allow Hurl&#39;s connection to take.&lt;br /&gt;&lt;br /&gt;You can specify time units in the connect timeout expression. Set Hurl to use a connect timeout of 20 seconds with &lt;code&gt;--connect-timeout 20s&lt;/code&gt; or set it to 35,000 milliseconds with &lt;code&gt;--connect-timeout 35000ms&lt;/code&gt;. No spaces allowed.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#max-time&quot;&gt;&lt;code&gt;-m, --max-time&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#connect-to&quot; id=&quot;connect-to&quot;&gt;&lt;code&gt;--connect-to &amp;lt;HOST1:PORT1:HOST2:PORT2&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;For a request to the given HOST1:PORT1 pair, connect to HOST2:PORT2 instead. This option can be used several times in a command line.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#resolve&quot;&gt;&lt;code&gt;--resolve&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#continue-on-error&quot; id=&quot;continue-on-error&quot;&gt;&lt;code&gt;--continue-on-error&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Continue executing requests to the end of the Hurl file even when an assert error occurs.&lt;br /&gt;By default, Hurl exits after an assert error in the HTTP response.&lt;br /&gt;&lt;br /&gt;Note that this option does not affect the behavior with multiple input Hurl files.&lt;br /&gt;&lt;br /&gt;All the input files are executed independently. The result of one file does not affect the execution of the other Hurl files.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cookie&quot; id=&quot;cookie&quot;&gt;&lt;code&gt;-b, --cookie &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Read cookies from FILE (using the Netscape cookie file format).&lt;br /&gt;&lt;br /&gt;Combined with &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cookie-jar&quot;&gt;&lt;code&gt;-c, --cookie-jar&lt;/code&gt;&lt;/a&gt;, you can simulate a cookie storage between successive Hurl runs.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cookie-jar&quot; id=&quot;cookie-jar&quot;&gt;&lt;code&gt;-c, --cookie-jar &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Write cookies to FILE after running the session.&lt;br /&gt;The file will be written using the Netscape cookie file format.&lt;br /&gt;&lt;br /&gt;Combined with &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#cookie&quot;&gt;&lt;code&gt;-b, --cookie&lt;/code&gt;&lt;/a&gt;, you can simulate a cookie storage between successive Hurl runs.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#curl&quot; id=&quot;curl&quot;&gt;&lt;code&gt;--curl &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Export each request to a list of curl commands.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#delay&quot; id=&quot;delay&quot;&gt;&lt;code&gt;--delay &amp;lt;MILLISECONDS&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Sets delay before each request (aka sleep). The delay is not applied to requests that have been retried because of &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#retry&quot;&gt;&lt;code&gt;--retry&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#retry-interval&quot;&gt;&lt;code&gt;--retry-interval&lt;/code&gt;&lt;/a&gt; to space retried requests.&lt;br /&gt;&lt;br /&gt;You can specify time units in the delay expression. Set Hurl to use a delay of 2 seconds with &lt;code&gt;--delay 2s&lt;/code&gt; or set it to 500 milliseconds with &lt;code&gt;--delay 500ms&lt;/code&gt;. No spaces allowed.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#error-format&quot; id=&quot;error-format&quot;&gt;&lt;code&gt;--error-format &amp;lt;FORMAT&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Control the format of error message (short by default or long)&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#file-root&quot; id=&quot;file-root&quot;&gt;&lt;code&gt;--file-root &amp;lt;DIR&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Set root directory to import files in Hurl. This is used for files in multipart form data, request body and response output.&lt;br /&gt;When it is not explicitly defined, files are relative to the Hurl file&#39;s directory.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#from-entry&quot; id=&quot;from-entry&quot;&gt;&lt;code&gt;--from-entry &amp;lt;ENTRY_NUMBER&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Execute Hurl file from ENTRY_NUMBER (starting at 1).&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#glob&quot; id=&quot;glob&quot;&gt;&lt;code&gt;--glob &amp;lt;GLOB&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Specify input files that match the given glob pattern.&lt;br /&gt;&lt;br /&gt;Multiple glob flags may be used. This flag supports common Unix glob patterns like *, ? and [].&lt;br /&gt;However, to avoid your shell accidentally expanding glob patterns before Hurl handles them, you must use single quotes or double quotes around each pattern.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#header&quot; id=&quot;header&quot;&gt;&lt;code&gt;-H, --header &amp;lt;HEADER&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add an extra header to include in information sent. Can be used several times in a command&lt;br /&gt;&lt;br /&gt;Do not add newlines or carriage returns&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#http10&quot; id=&quot;http10&quot;&gt;&lt;code&gt;-0, --http1.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tells Hurl to use HTTP version 1.0 instead of using its internally preferred HTTP version.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#http11&quot; id=&quot;http11&quot;&gt;&lt;code&gt;--http1.1&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tells Hurl to use HTTP version 1.1.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#http2&quot; id=&quot;http2&quot;&gt;&lt;code&gt;--http2&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tells Hurl to use HTTP version 2.&lt;br /&gt;For HTTPS, this means Hurl negotiates HTTP/2 in the TLS handshake. Hurl does this by default.&lt;br /&gt;For HTTP, this means Hurl attempts to upgrade the request to HTTP/2 using the Upgrade: request header.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#http3&quot; id=&quot;http3&quot;&gt;&lt;code&gt;--http3&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tells Hurl to try HTTP/3 to the host in the URL, but fallback to earlier HTTP versions if the HTTP/3 connection establishment fails. HTTP/3 is only available for HTTPS and not for HTTP URLs.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ignore-asserts&quot; id=&quot;ignore-asserts&quot;&gt;&lt;code&gt;--ignore-asserts&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ignore all asserts defined in the Hurl file.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#include&quot; id=&quot;include&quot;&gt;&lt;code&gt;-i, --include&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Include the HTTP headers in the output&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#insecure&quot; id=&quot;insecure&quot;&gt;&lt;code&gt;-k, --insecure&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;This option explicitly allows Hurl to perform &quot;insecure&quot; SSL connections and transfers.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ipv4&quot; id=&quot;ipv4&quot;&gt;&lt;code&gt;-4, --ipv4&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;This option tells Hurl to use IPv4 addresses only when resolving host names, and not for example try IPv6.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ipv6&quot; id=&quot;ipv6&quot;&gt;&lt;code&gt;-6, --ipv6&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;This option tells Hurl to use IPv6 addresses only when resolving host names, and not for example try IPv4.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#jobs&quot; id=&quot;jobs&quot;&gt;&lt;code&gt;--jobs &amp;lt;NUM&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Maximum number of parallel jobs in parallel mode. Default value corresponds (in most cases) to the&lt;br /&gt;current amount of CPUs.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#json&quot; id=&quot;json&quot;&gt;&lt;code&gt;--json&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Output each Hurl file result to JSON. The format is very closed to HAR format.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#key&quot; id=&quot;key&quot;&gt;&lt;code&gt;--key &amp;lt;KEY&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Private key file name.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#limit-rate&quot; id=&quot;limit-rate&quot;&gt;&lt;code&gt;--limit-rate &amp;lt;SPEED&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Specify the maximum transfer rate you want Hurl to use, for both downloads and uploads. This feature is useful if you have a limited pipe and you would like your transfer not to use your entire bandwidth. To make it slower than it otherwise would be.&lt;br /&gt;The given speed is measured in bytes/second.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#location&quot; id=&quot;location&quot;&gt;&lt;code&gt;-L, --location&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow redirect. To limit the amount of redirects to follow use the &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#max-redirs&quot;&gt;&lt;code&gt;--max-redirs&lt;/code&gt;&lt;/a&gt; option&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#location-trusted&quot; id=&quot;location-trusted&quot;&gt;&lt;code&gt;--location-trusted&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Like &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#location&quot;&gt;&lt;code&gt;-L, --location&lt;/code&gt;&lt;/a&gt;, but allows sending the name + password to all hosts that the site may redirect to.&lt;br /&gt;This may or may not introduce a security breach if the site redirects you to a site to which you send your authentication info (which is plaintext in the case of HTTP Basic authentication).&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#max-filesize&quot; id=&quot;max-filesize&quot;&gt;&lt;code&gt;--max-filesize &amp;lt;BYTES&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Specify the maximum size in bytes of a file to download. If the file requested is larger than this value, the transfer does not start.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#max-redirs&quot; id=&quot;max-redirs&quot;&gt;&lt;code&gt;--max-redirs &amp;lt;NUM&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Set maximum number of redirection-followings allowed&lt;br /&gt;&lt;br /&gt;By default, the limit is set to 50 redirections. Set this option to -1 to make it unlimited.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#max-time&quot; id=&quot;max-time&quot;&gt;&lt;code&gt;-m, --max-time &amp;lt;SECONDS&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Maximum time in seconds that you allow a request/response to take. This is the standard timeout.&lt;br /&gt;&lt;br /&gt;You can specify time units in the maximum time expression. Set Hurl to use a maximum time of 20 seconds with &lt;code&gt;--max-time 20s&lt;/code&gt; or set it to 35,000 milliseconds with &lt;code&gt;--max-time 35000ms&lt;/code&gt;. No spaces allowed.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#connect-timeout&quot;&gt;&lt;code&gt;--connect-timeout&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#negotiate&quot; id=&quot;negotiate&quot;&gt;&lt;code&gt;--negotiate&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tell Hurl to use Negotiate (SPNEGO) authentication.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc&quot; id=&quot;netrc&quot;&gt;&lt;code&gt;-n, --netrc&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Scan the .netrc file in the user&#39;s home directory for the username and password.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc-file&quot;&gt;&lt;code&gt;--netrc-file&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc-optional&quot;&gt;&lt;code&gt;--netrc-optional&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc-file&quot; id=&quot;netrc-file&quot;&gt;&lt;code&gt;--netrc-file &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Like &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc&quot;&gt;&lt;code&gt;--netrc&lt;/code&gt;&lt;/a&gt;, but provide the path to the netrc file.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc-optional&quot;&gt;&lt;code&gt;--netrc-optional&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc-optional&quot; id=&quot;netrc-optional&quot;&gt;&lt;code&gt;--netrc-optional&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Similar to &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc&quot;&gt;&lt;code&gt;--netrc&lt;/code&gt;&lt;/a&gt;, but make the .netrc usage optional.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#netrc-file&quot;&gt;&lt;code&gt;--netrc-file&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#no-color&quot; id=&quot;no-color&quot;&gt;&lt;code&gt;--no-color&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Do not colorize output.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#no-output&quot; id=&quot;no-output&quot;&gt;&lt;code&gt;--no-output&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Suppress output. By default, Hurl outputs the body of the last response.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#noproxy&quot; id=&quot;noproxy&quot;&gt;&lt;code&gt;--noproxy &amp;lt;HOST(S)&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Comma-separated list of hosts which do not use a proxy.&lt;br /&gt;&lt;br /&gt;Override value from Environment variable no_proxy.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ntlm&quot; id=&quot;ntlm&quot;&gt;&lt;code&gt;--ntlm&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tell Hurl to use NTLM authentication&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#output&quot; id=&quot;output&quot;&gt;&lt;code&gt;-o, --output &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Write output to FILE instead of stdout. Use &#39;-&#39; for stdout in [Options] sections.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#parallel&quot; id=&quot;parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Run files in parallel.&lt;br /&gt;&lt;br /&gt;Each Hurl file is executed in its own worker thread, without sharing anything with the other workers. The default run mode is sequential. Parallel execution is by default in &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#test&quot;&gt;&lt;code&gt;--test&lt;/code&gt;&lt;/a&gt; mode.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#jobs&quot;&gt;&lt;code&gt;--jobs&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#path-as-is&quot; id=&quot;path-as-is&quot;&gt;&lt;code&gt;--path-as-is&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tell Hurl to not handle sequences of /../ or /./ in the given URL path. Normally Hurl will squash or merge them according to standards but with this option set you tell it not to do that.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#pinnedpubkey&quot; id=&quot;pinnedpubkey&quot;&gt;&lt;code&gt;--pinnedpubkey &amp;lt;HASHES&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;When negotiating a TLS or SSL connection, the server sends a certificate indicating its identity. A public key is extracted from this certificate and if it does not exactly match the public key provided to this option, Hurl aborts the connection before sending or receiving any data.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#progress-bar&quot; id=&quot;progress-bar&quot;&gt;&lt;code&gt;--progress-bar&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Display a progress bar in test mode. The progress bar is displayed only in interactive TTYs. This option forces the progress bar to be displayed even in non-interactive TTYs.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#proxy&quot; id=&quot;proxy&quot;&gt;&lt;code&gt;-x, --proxy &amp;lt;[PROTOCOL://]HOST[:PORT]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Use the specified proxy.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#repeat&quot; id=&quot;repeat&quot;&gt;&lt;code&gt;--repeat &amp;lt;NUM&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Repeat the input files sequence NUM times, -1 for infinite loop. Given a.hurl, b.hurl, c.hurl as input, repeat two&lt;br /&gt;times will run a.hurl, b.hurl, c.hurl, a.hurl, b.hurl, c.hurl.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#report-html&quot; id=&quot;report-html&quot;&gt;&lt;code&gt;--report-html &amp;lt;DIR&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generate HTML report in DIR.&lt;br /&gt;&lt;br /&gt;If the HTML report already exists, it will be updated with the new test results.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#report-json&quot; id=&quot;report-json&quot;&gt;&lt;code&gt;--report-json &amp;lt;DIR&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generate JSON report in DIR.&lt;br /&gt;&lt;br /&gt;If the JSON report already exists, it will be updated with the new test results.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#report-junit&quot; id=&quot;report-junit&quot;&gt;&lt;code&gt;--report-junit &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generate JUnit File.&lt;br /&gt;&lt;br /&gt;If the FILE report already exists, it will be updated with the new test results.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#report-tap&quot; id=&quot;report-tap&quot;&gt;&lt;code&gt;--report-tap &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generate TAP report.&lt;br /&gt;&lt;br /&gt;If the FILE report already exists, it will be updated with the new test results.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#resolve&quot; id=&quot;resolve&quot;&gt;&lt;code&gt;--resolve &amp;lt;HOST:PORT:ADDR&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Provide a custom address for a specific host and port pair. Using this, you can make the Hurl requests(s) use a specified address and prevent the otherwise normally resolved address to be used. Consider it a sort of /etc/hosts alternative provided on the command line.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#retry&quot; id=&quot;retry&quot;&gt;&lt;code&gt;--retry &amp;lt;NUM&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Maximum number of retries, 0 for no retries, -1 for unlimited retries. Retry happens if any error occurs (asserts, captures, runtimes etc...).&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#retry-interval&quot; id=&quot;retry-interval&quot;&gt;&lt;code&gt;--retry-interval &amp;lt;MILLISECONDS&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Duration in milliseconds between each retry. Default is 1000 ms.&lt;br /&gt;&lt;br /&gt;You can specify time units in the retry interval expression. Set Hurl to use a retry interval of 2 seconds with &lt;code&gt;--retry-interval 2s&lt;/code&gt; or set it to 500 milliseconds with &lt;code&gt;--retry-interval 500ms&lt;/code&gt;. No spaces allowed.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#secret&quot; id=&quot;secret&quot;&gt;&lt;code&gt;--secret &amp;lt;NAME=VALUE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Define secret value to be redacted from logs and report. When defined, secrets can be used as variable everywhere variables are used.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#secrets-file&quot; id=&quot;secrets-file&quot;&gt;&lt;code&gt;--secrets-file &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Define a secrets file in which you define your secrets&lt;br /&gt;&lt;br /&gt;Each secret is defined as name=value exactly as with &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#secret&quot;&gt;&lt;code&gt;--secret&lt;/code&gt;&lt;/a&gt; option.&lt;br /&gt;&lt;br /&gt;Note that defining a secret twice produces an error.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#ssl-no-revoke&quot; id=&quot;ssl-no-revoke&quot;&gt;&lt;code&gt;--ssl-no-revoke&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;(Windows) This option tells Hurl to disable certificate revocation checks. WARNING: this option loosens the SSL security, and by using this flag you ask for exactly that.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#test&quot; id=&quot;test&quot;&gt;&lt;code&gt;--test&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Activate test mode: with this, the HTTP response is not outputted anymore, progress is reported for each Hurl file tested, and a text summary is displayed when all files have been run.&lt;br /&gt;&lt;br /&gt;In test mode, files are executed in parallel. To run test in a sequential way use &lt;code&gt;--job 1&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#jobs&quot;&gt;&lt;code&gt;--jobs&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#to-entry&quot; id=&quot;to-entry&quot;&gt;&lt;code&gt;--to-entry &amp;lt;ENTRY_NUMBER&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Execute Hurl file to ENTRY_NUMBER (starting at 1).&lt;br /&gt;Ignore the remaining of the file. It is useful for debugging a session.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#unix-socket&quot; id=&quot;unix-socket&quot;&gt;&lt;code&gt;--unix-socket &amp;lt;PATH&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;(HTTP) Connect through this Unix domain socket, instead of using the network.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#user&quot; id=&quot;user&quot;&gt;&lt;code&gt;-u, --user &amp;lt;USER:PASSWORD&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add basic Authentication header to each request.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#user-agent&quot; id=&quot;user-agent&quot;&gt;&lt;code&gt;-A, --user-agent &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Specify the User-Agent string to send to the HTTP server.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#variable&quot; id=&quot;variable&quot;&gt;&lt;code&gt;--variable &amp;lt;NAME=VALUE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Define variable (name/value) to be used in Hurl templates.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#variables-file&quot; id=&quot;variables-file&quot;&gt;&lt;code&gt;--variables-file &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Set properties file in which your define your variables.&lt;br /&gt;&lt;br /&gt;Each variable is defined as name=value exactly as with &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#variable&quot;&gt;&lt;code&gt;--variable&lt;/code&gt;&lt;/a&gt; option.&lt;br /&gt;&lt;br /&gt;Note that defining a variable twice produces an error.&lt;br /&gt;&lt;br /&gt;This is a cli-only option.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#verbose&quot; id=&quot;verbose&quot;&gt;&lt;code&gt;-v, --verbose&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Turn on verbose output on standard error stream.&lt;br /&gt;Useful for debugging.&lt;br /&gt;&lt;br /&gt;A line starting with &#39;&amp;gt;&#39; means data sent by Hurl.&lt;br /&gt;A line staring with &#39;&amp;lt;&#39; means data received by Hurl.&lt;br /&gt;A line starting with &#39;*&#39; means additional info provided by Hurl.&lt;br /&gt;&lt;br /&gt;If you only want HTTP headers in the output, &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#include&quot;&gt;&lt;code&gt;-i, --include&lt;/code&gt;&lt;/a&gt; might be the option you&#39;re looking for.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#very-verbose&quot; id=&quot;very-verbose&quot;&gt;&lt;code&gt;--very-verbose&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Turn on more verbose output on standard error stream.&lt;br /&gt;&lt;br /&gt;In contrast to &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#verbose&quot;&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/a&gt; option, this option outputs the full HTTP body request and response on standard error. In addition, lines starting with &#39;**&#39; are libcurl debug logs.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#help&quot; id=&quot;help&quot;&gt;&lt;code&gt;-h, --help&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Usage help. This lists all current command line options with a short description.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#version&quot; id=&quot;version&quot;&gt;&lt;code&gt;-V, --version&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Prints version information&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Environment&lt;/h2&gt; 
&lt;p&gt;Environment variables can only be specified in lowercase.&lt;/p&gt; 
&lt;p&gt;Using an environment variable to set the proxy has the same effect as using the &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#proxy&quot;&gt;&lt;code&gt;-x, --proxy&lt;/code&gt;&lt;/a&gt; option.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;http_proxy [PROTOCOL://]&amp;lt;HOST&amp;gt;[:PORT]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the proxy server to use for HTTP.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;https_proxy [PROTOCOL://]&amp;lt;HOST&amp;gt;[:PORT]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the proxy server to use for HTTPS.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;all_proxy [PROTOCOL://]&amp;lt;HOST&amp;gt;[:PORT]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the proxy server to use if no protocol-specific proxy is set.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;no_proxy &amp;lt;comma-separated list of hosts&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;List of host names that shouldn&#39;t go through any proxy.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HURL_name value&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Define variable (name/value) to be used in Hurl templates. This is similar than &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#variable&quot;&gt;&lt;code&gt;--variable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#variables-file&quot;&gt;&lt;code&gt;--variables-file&lt;/code&gt;&lt;/a&gt; options.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;NO_COLOR&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;When set to a non-empty string, do not colorize output (see &lt;a href=&quot;https://raw.githubusercontent.com/Orange-OpenSource/hurl/master/#no-color&quot;&gt;&lt;code&gt;--no-color&lt;/code&gt;&lt;/a&gt; option).&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Exit Codes&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Success.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Failed to parse command-line options.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Input File Parsing Error.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Runtime error (such as failure to connect to host).&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Assert Error.&lt;br /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;WWW&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://hurl.dev&quot;&gt;https://hurl.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;p&gt;curl(1) hurlfmt(1)&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;h2&gt;Binaries Installation&lt;/h2&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;Precompiled binary (depending on libc &amp;gt;=2.35) is available at &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/releases/latest&quot;&gt;Hurl latest GitHub release&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ INSTALL_DIR=/tmp
$ VERSION=7.0.0
$ curl --silent --location https://github.com/Orange-OpenSource/hurl/releases/download/$VERSION/hurl-$VERSION-x86_64-unknown-linux-gnu.tar.gz | tar xvz -C $INSTALL_DIR
$ export PATH=$INSTALL_DIR/hurl-$VERSION-x86_64-unknown-linux-gnu/bin:$PATH
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Debian / Ubuntu&lt;/h4&gt; 
&lt;p&gt;For Debian &amp;gt;=12 / Ubuntu &amp;gt;=22.04, Hurl can be installed using a binary .deb file provided in each Hurl release.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ VERSION=7.0.0
$ curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/$VERSION/hurl_${VERSION}_amd64.deb
$ sudo apt update &amp;amp;&amp;amp; sudo apt install ./hurl_${VERSION}_amd64.deb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Ubuntu &amp;gt;=18.04, Hurl can be installed from &lt;code&gt;ppa:lepapareil/hurl&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ VERSION=7.0.0
$ sudo apt-add-repository -y ppa:lepapareil/hurl
$ sudo apt install hurl=&quot;${VERSION}&quot;*
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Alpine&lt;/h4&gt; 
&lt;p&gt;Hurl is available on &lt;code&gt;testing&lt;/code&gt; channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arch Linux / Manjaro&lt;/h4&gt; 
&lt;p&gt;Hurl is available on &lt;a href=&quot;https://archlinux.org/packages/extra/x86_64/hurl/&quot;&gt;extra&lt;/a&gt; channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ pacman -Sy hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;NixOS / Nix&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://search.nixos.org/packages?from=0&amp;amp;size=1&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=hurl&quot;&gt;NixOS / Nix package&lt;/a&gt; is available on stable channel.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;Precompiled binaries for Intel and ARM CPUs are available at &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/releases/latest&quot;&gt;Hurl latest GitHub release&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Homebrew&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ brew install hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;MacPorts&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo port install hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FreeBSD&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo pkg install hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Windows requires the &lt;a href=&quot;https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#latest-microsoft-visual-c-redistributable-version&quot;&gt;Visual C++ Redistributable Package&lt;/a&gt; to be installed manually, as this is not included in the installer.&lt;/p&gt; 
&lt;h4&gt;Zip File&lt;/h4&gt; 
&lt;p&gt;Hurl can be installed from a standalone zip file at &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/releases/latest&quot;&gt;Hurl latest GitHub release&lt;/a&gt;. You will need to update your &lt;code&gt;PATH&lt;/code&gt; variable.&lt;/p&gt; 
&lt;h4&gt;Installer&lt;/h4&gt; 
&lt;p&gt;An executable installer is also available at &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/releases/latest&quot;&gt;Hurl latest GitHub release&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ choco install hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ scoop install hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Windows Package Manager&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ winget install hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cargo&lt;/h3&gt; 
&lt;p&gt;If you&#39;re a Rust programmer, Hurl can be installed with cargo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ cargo install --locked hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;conda-forge&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ conda install -c conda-forge hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hurl can also be installed with &lt;a href=&quot;https://conda-forge.org&quot;&gt;&lt;code&gt;conda-forge&lt;/code&gt;&lt;/a&gt; powered package manager like &lt;a href=&quot;https://prefix.dev&quot;&gt;&lt;code&gt;pixi&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/orange-opensource/hurl:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npm install --save-dev @orangeopensource/hurl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building From Sources&lt;/h2&gt; 
&lt;p&gt;Hurl sources are available in &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build on Linux&lt;/h3&gt; 
&lt;p&gt;Hurl depends on libssl, libcurl and libxml2 native libraries. You will need their development files in your platform.&lt;/p&gt; 
&lt;h4&gt;Debian based distributions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ apt install -y build-essential pkg-config libssl-dev libcurl4-openssl-dev libxml2-dev libclang-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Fedora based distributions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ dnf install -y pkgconf-pkg-config gcc openssl-devel libxml2-devel clang-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Red Hat based distributions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ yum install -y pkg-config gcc openssl-devel libxml2-devel clang-devel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arch based distributions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ pacman -S --noconfirm pkgconf gcc glibc openssl libxml2 clang
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Alpine based distributions&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ apk add curl-dev gcc libxml2-dev musl-dev openssl-dev clang-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build on macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ xcode-select --install
$ brew install pkg-config
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hurl is written in &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt;. You should &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;install&lt;/a&gt; the latest stable release.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ curl https://sh.rustup.rs -sSf | sh -s -- -y
$ source $HOME/.cargo/env
$ rustc --version
$ cargo --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then build hurl:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ git clone https://github.com/Orange-OpenSource/hurl
$ cd hurl
$ cargo build --release
$ ./target/release/hurl --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build on Windows&lt;/h3&gt; 
&lt;p&gt;Please follow the &lt;a href=&quot;https://github.com/Orange-OpenSource/hurl/raw/master/contrib/windows/README.md&quot;&gt;contrib on Windows section&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
