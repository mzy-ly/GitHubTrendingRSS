<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Go Weekly Trending</title>
    <description>Weekly Trending of Go in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:43:21 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ollama/ollama</title>
      <link>https://github.com/ollama/ollama</link>
      <description>&lt;p&gt;Get up and running with OpenAI gpt-oss, DeepSeek-R1, Gemma 3 and other models.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt;
  &amp;nbsp; 
 &lt;a href=&quot;https://ollama.com&quot;&gt; &lt;img alt=&quot;ollama&quot; width=&quot;240&quot; src=&quot;https://github.com/ollama/ollama/assets/3325447/0d0b44e2-8f4a-4e99-9b52-a5c1c741c8f7&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Ollama&lt;/h1&gt; 
&lt;p&gt;Get up and running with large language models.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://ollama.com/download/Ollama.dmg&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://ollama.com/download/OllamaSetup.exe&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl -fsSL https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ollama/ollama/raw/main/docs/linux.md&quot;&gt;Manual install instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The official &lt;a href=&quot;https://hub.docker.com/r/ollama/ollama&quot;&gt;Ollama Docker image&lt;/a&gt; &lt;code&gt;ollama/ollama&lt;/code&gt; is available on Docker Hub.&lt;/p&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama/ollama-python&quot;&gt;ollama-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama/ollama-js&quot;&gt;ollama-js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/ollama&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reddit.com/r/ollama&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To run and chat with &lt;a href=&quot;https://ollama.com/library/gemma3&quot;&gt;Gemma 3&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama run gemma3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model library&lt;/h2&gt; 
&lt;p&gt;Ollama supports a list of models available on &lt;a href=&quot;https://ollama.com/library&quot; title=&quot;ollama model library&quot;&gt;ollama.com/library&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here are some example models that can be downloaded:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Parameters&lt;/th&gt; 
   &lt;th&gt;Size&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;815MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;4B&lt;/td&gt; 
   &lt;td&gt;3.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;12B&lt;/td&gt; 
   &lt;td&gt;8.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:12b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;27B&lt;/td&gt; 
   &lt;td&gt;17GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:27b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QwQ&lt;/td&gt; 
   &lt;td&gt;32B&lt;/td&gt; 
   &lt;td&gt;20GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run qwq&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;671B&lt;/td&gt; 
   &lt;td&gt;404GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1:671b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;109B&lt;/td&gt; 
   &lt;td&gt;67GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:scout&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;400B&lt;/td&gt; 
   &lt;td&gt;245GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:maverick&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.3&lt;/td&gt; 
   &lt;td&gt;70B&lt;/td&gt; 
   &lt;td&gt;43GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;3B&lt;/td&gt; 
   &lt;td&gt;2.0GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;1.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;11B&lt;/td&gt; 
   &lt;td&gt;7.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;90B&lt;/td&gt; 
   &lt;td&gt;55GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision:90b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;405B&lt;/td&gt; 
   &lt;td&gt;231GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1:405b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4&lt;/td&gt; 
   &lt;td&gt;14B&lt;/td&gt; 
   &lt;td&gt;9.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4 Mini&lt;/td&gt; 
   &lt;td&gt;3.8B&lt;/td&gt; 
   &lt;td&gt;2.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4-mini&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run mistral&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moondream 2&lt;/td&gt; 
   &lt;td&gt;1.4B&lt;/td&gt; 
   &lt;td&gt;829MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run moondream&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Neural Chat&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run neural-chat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starling&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run starling-lm&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Code Llama&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run codellama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 2 Uncensored&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama2-uncensored&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLaVA&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llava&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Granite-3.3&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run granite3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run the 13B models, and 32 GB to run the 33B models.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Customize a model&lt;/h2&gt; 
&lt;h3&gt;Import from GGUF&lt;/h3&gt; 
&lt;p&gt;Ollama supports importing GGUF models in the Modelfile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;Modelfile&lt;/code&gt;, with a &lt;code&gt;FROM&lt;/code&gt; instruction with the local filepath to the model you want to import.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM ./vicuna-33b.Q4_0.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the model in Ollama&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama create example -f Modelfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the model&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama run example
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Import from Safetensors&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/ollama/ollama/main/docs/import.md&quot;&gt;guide&lt;/a&gt; on importing models for more information.&lt;/p&gt; 
&lt;h3&gt;Customize a prompt&lt;/h3&gt; 
&lt;p&gt;Models from the Ollama library can be customized with a prompt. For example, to customize the &lt;code&gt;llama3.2&lt;/code&gt; model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;Modelfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM llama3.2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM &quot;&quot;&quot;
You are Mario from Super Mario Bros. Answer as Mario, the assistant, only.
&quot;&quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create and run the model:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ollama create mario -f ./Modelfile
ollama run mario
&amp;gt;&amp;gt;&amp;gt; hi
Hello! It&#39;s your friend Mario.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on working with a Modelfile, see the &lt;a href=&quot;https://raw.githubusercontent.com/ollama/ollama/main/docs/modelfile.md&quot;&gt;Modelfile&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;h3&gt;Create a model&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama create&lt;/code&gt; is used to create a model from a Modelfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama create mymodel -f ./Modelfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pull a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command can also be used to update a local model. Only the diff will be pulled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Remove a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama rm llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Copy a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama cp llama3.2 my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiline input&lt;/h3&gt; 
&lt;p&gt;For multiline input, you can wrap text with &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &quot;&quot;&quot;Hello,
... world!
... &quot;&quot;&quot;
I&#39;m a basic program that prints the famous &quot;Hello, world!&quot; message to the console.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multimodal models&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ollama run llava &quot;What&#39;s in this image? /Users/jmorgan/Desktop/smile.png&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: The image features a yellow smiley face, which is likely the central focus of the picture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pass the prompt as an argument&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama run llama3.2 &quot;Summarize this file: $(cat README.md)&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Ollama is a lightweight, extensible framework for building and running language models on the local machine. It provides a simple API for creating, running, and managing models, as well as a library of pre-built models that can be easily used in a variety of applications.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Show model information&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama show llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List models on your computer&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List which models are currently loaded&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stop a model which is currently running&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ollama stop llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Ollama&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama serve&lt;/code&gt; is used when you want to start ollama without running the desktop application.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/ollama/ollama/raw/main/docs/development.md&quot;&gt;developer guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running local builds&lt;/h3&gt; 
&lt;p&gt;Next, start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, in a separate shell, run a model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;Ollama has a REST API for running and managing models.&lt;/p&gt; 
&lt;h3&gt;Generate a response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl http://localhost:11434/api/generate -d &#39;{
  &quot;model&quot;: &quot;llama3.2&quot;,
  &quot;prompt&quot;:&quot;Why is the sky blue?&quot;
}&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat with a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl http://localhost:11434/api/chat -d &#39;{
  &quot;model&quot;: &quot;llama3.2&quot;,
  &quot;messages&quot;: [
    { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;why is the sky blue?&quot; }
  ]
}&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/ollama/ollama/main/docs/api.md&quot;&gt;API documentation&lt;/a&gt; for all endpoints.&lt;/p&gt; 
&lt;h2&gt;Community Integrations&lt;/h2&gt; 
&lt;h3&gt;Web &amp;amp; Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/open-webui/open-webui&quot;&gt;Open WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/swift-chat&quot;&gt;SwiftChat (macOS with ReactNative)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustDev/enchanted&quot;&gt;Enchanted (macOS native)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/fmaclen/hollama&quot;&gt;Hollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ParisNeo/lollms-webui&quot;&gt;Lollms-Webui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danny-avila/LibreChat&quot;&gt;LibreChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bionic-gpt/bionic-gpt&quot;&gt;Bionic GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rtcfirefly/ollama-ui&quot;&gt;HTML UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jikkuatwork/saddle&quot;&gt;Saddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.tagspaces.org&quot;&gt;TagSpaces&lt;/a&gt; (A platform for file-based apps, &lt;a href=&quot;https://docs.tagspaces.org/ai/&quot;&gt;utilizing Ollama&lt;/a&gt; for the generation of tags and descriptions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivanfioravanti/chatbot-ollama&quot;&gt;Chatbot UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mckaywrigley/chatbot-ui&quot;&gt;Chatbot UI v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama-interface/Ollama-Gui?tab=readme-ov-file&quot;&gt;Typescript UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/richawo/minimal-llm-ui&quot;&gt;Minimalistic React UI for Ollama Models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinhermawan/Ollamac&quot;&gt;Ollamac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/enricoros/big-AGI&quot;&gt;big-AGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cheshire-cat-ai/core&quot;&gt;Cheshire Cat assistant framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/semperai/amica&quot;&gt;Amica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BruceMacD/chatd&quot;&gt;chatd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kghandour/Ollama-SwiftUI&quot;&gt;Ollama-SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langgenius/dify&quot;&gt;Dify.AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mindmac.app&quot;&gt;MindMac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakobhoeg/nextjs-ollama-llm-ui&quot;&gt;NextJS Web Interface for Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://msty.app&quot;&gt;Msty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Bin-Huang/Chatbox&quot;&gt;Chatbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tgraupmann/WinForm_Ollama_Copilot&quot;&gt;WinForm Ollama Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web&quot;&gt;NextChat&lt;/a&gt; with &lt;a href=&quot;https://docs.nextchat.dev/models/ollama&quot;&gt;Get Started Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmo80/alpaca-webui&quot;&gt;Alpaca WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/enoch1118/ollamaGUI&quot;&gt;OllamaGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/InternLM/OpenAOE&quot;&gt;OpenAOE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/leonid20000/OdinRunes&quot;&gt;Odin Runes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mrdjohnson/llm-x&quot;&gt;LLM-X&lt;/a&gt; (Progressive Web App)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mintplex-Labs/anything-llm&quot;&gt;AnythingLLM (Docker + MacOs/Windows/Linux native app)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_basic_chat&quot;&gt;Ollama Basic Chat: Uses HyperDiv Reactive UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drazdra/ollama-chats&quot;&gt;Ollama-chats RPG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://intellibar.app/&quot;&gt;IntelliBar&lt;/a&gt; (AI-powered assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AliAhmedNada/jirapt&quot;&gt;Jirapt&lt;/a&gt; (Jira Integration to generate issues, tasks, epics)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AliAhmedNada/ojira&quot;&gt;ojira&lt;/a&gt; (Jira chrome plugin to easily generate descriptions for tasks)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reid41/QA-Pilot&quot;&gt;QA-Pilot&lt;/a&gt; (Interactive chat tool that can leverage Ollama models for rapid understanding and navigation of GitHub code repositories)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sugarforever/chat-ollama&quot;&gt;ChatOllama&lt;/a&gt; (Open Source Chatbot based on Ollama with Knowledge Bases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Nagi-ovo/CRAG-Ollama-Chat&quot;&gt;CRAG Ollama Chat&lt;/a&gt; (Simple Web Search with Corrective RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/infiniflow/ragflow&quot;&gt;RAGFlow&lt;/a&gt; (Open-source Retrieval-Augmented Generation engine based on deep document understanding)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StreamDeploy-DevRel/streamdeploy-llm-app-scaffold&quot;&gt;StreamDeploy&lt;/a&gt; (LLM Application Scaffold)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/swuecho/chat&quot;&gt;chat&lt;/a&gt; (chat web app for teams)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lobehub/lobe-chat&quot;&gt;Lobe Chat&lt;/a&gt; with &lt;a href=&quot;https://lobehub.com/docs/self-hosting/examples/ollama&quot;&gt;Integrating Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/datvodinh/rag-chatbot.git&quot;&gt;Ollama RAG Chatbot&lt;/a&gt; (Local Chat with multiple PDFs using Ollama and RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nurgo-software.com/products/brainsoup&quot;&gt;BrainSoup&lt;/a&gt; (Flexible native client with RAG &amp;amp; multi-agent automation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Renset/macai&quot;&gt;macai&lt;/a&gt; (macOS client for Ollama, ChatGPT, and other compatible API back-ends)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josStorer/RWKV-Runner&quot;&gt;RWKV-Runner&lt;/a&gt; (RWKV offline LLM deployment tool, also usable as a client for ChatGPT and Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dezoito/ollama-grid-search&quot;&gt;Ollama Grid Search&lt;/a&gt; (app to evaluate and compare models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Otacon/olpaka&quot;&gt;Olpaka&lt;/a&gt; (User-friendly Flutter Web App for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://casibase.org&quot;&gt;Casibase&lt;/a&gt; (An open source AI knowledge base and dialogue system combining the latest RAG, SSO, ollama support, and multiple large language models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CrazyNeil/OllamaSpring&quot;&gt;OllamaSpring&lt;/a&gt; (Ollama Client for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kartikm7/llocal&quot;&gt;LLocal.in&lt;/a&gt; (Easy to use Electron Desktop Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dcSpark/shinkai-apps&quot;&gt;Shinkai Desktop&lt;/a&gt; (Two click install Local AI using Ollama + Files + RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeyoyt/ailama&quot;&gt;AiLama&lt;/a&gt; (A Discord User App that allows you to interact with Ollama anywhere in Discord)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_mesop/&quot;&gt;Ollama with Google Mesop&lt;/a&gt; (Mesop Chat Client implementation with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SciPhi-AI/R2R&quot;&gt;R2R&lt;/a&gt; (Open-source RAG engine)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/elearningshow/ollama-kis&quot;&gt;Ollama-Kis&lt;/a&gt; (A simple easy-to-use GUI with sample custom LLM for Drivers Education)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://opengpa.org&quot;&gt;OpenGPA&lt;/a&gt; (Open-source offline-first Enterprise Agentic Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mateuszmigas/painting-droid&quot;&gt;Painting Droid&lt;/a&gt; (Painting app with AI integrations)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kerlig.com/&quot;&gt;Kerlig AI&lt;/a&gt; (AI writing assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MindWorkAI/AI-Studio&quot;&gt;AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gyopak/sidellama&quot;&gt;Sidellama&lt;/a&gt; (browser-based LLM client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trypromptly/LLMStack&quot;&gt;LLMStack&lt;/a&gt; (No-code multi-agent framework to build LLM agents and workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boltai.com&quot;&gt;BoltAI for Mac&lt;/a&gt; (AI Chat Client for Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/av/harbor&quot;&gt;Harbor&lt;/a&gt; (Containerized LLM Toolkit with Ollama as default backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/szczyglis-dev/py-gpt&quot;&gt;PyGPT&lt;/a&gt; (AI desktop assistant for Linux, Windows, and Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Jeffser/Alpaca&quot;&gt;Alpaca&lt;/a&gt; (An Ollama client application for Linux and macOS made with GTK4 and Adwaita)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Significant-Gravitas/AutoGPT/raw/master/docs/content/platform/ollama.md&quot;&gt;AutoGPT&lt;/a&gt; (AutoGPT Ollama integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jonathanhecl.com/go-crew/&quot;&gt;Go-CREW&lt;/a&gt; (Powerful Offline RAG in Golang)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openvmp/partcad/&quot;&gt;PartCAD&lt;/a&gt; (CAD model generation with OpenSCAD and CadQuery)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama4j/ollama4j-web-ui&quot;&gt;Ollama4j Web UI&lt;/a&gt; - Java-based Web UI for Ollama built with Vaadin, Spring Boot, and Ollama4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kspviswa/pyOllaMx&quot;&gt;PyOllaMx&lt;/a&gt; - macOS application capable of chatting with both Ollama and Apple MLX models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cline/cline&quot;&gt;Cline&lt;/a&gt; - Formerly known as Claude Dev is a VSCode extension for multi-file/whole-repo coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kangfenmao/cherry-studio&quot;&gt;Cherry Studio&lt;/a&gt; (Desktop client with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1runeberg/confichat&quot;&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nickthecook/archyve&quot;&gt;Archyve&lt;/a&gt; (RAG-enabling document library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama-crew-mesop&quot;&gt;crewAI with Mesop&lt;/a&gt; (Mesop Web Interface to run crewAI with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/chyok/ollama-gui&quot;&gt;Tkinter-based client&lt;/a&gt; (Python tkinter-based Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trendy-design/llmchat&quot;&gt;LLMChat&lt;/a&gt; (Privacy focused, 100% local, intuitive all-in-one chat interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Leon-Sander/Local-Multimodal-AI-Chat&quot;&gt;Local Multimodal AI Chat&lt;/a&gt; (Ollama-based LLM Chat with support for multiple features, including PDF RAG, voice chat, image-based interactions, and integration with OpenAI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xark-argo/argo&quot;&gt;ARGO&lt;/a&gt; (Locally download and run Ollama and Huggingface models with RAG and deep research on Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/EliasPereirah/OrionChat&quot;&gt;OrionChat&lt;/a&gt; - OrionChat is a web interface for chatting with different AI providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bklieger-groq/g1&quot;&gt;G1&lt;/a&gt; (Prototype of using prompting strategies to improve the LLM&#39;s reasoning through o1-like reasoning chains.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lemonit-eric-mao/ollama-web-management&quot;&gt;Web management&lt;/a&gt; (Web management page)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/promptery/promptery&quot;&gt;Promptery&lt;/a&gt; (desktop client for Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JHubi1/ollama-app&quot;&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/annilq/chat-ollama&quot;&gt;chat-ollama&lt;/a&gt; (a React Native client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tcsenpai/spacellama&quot;&gt;SpaceLlama&lt;/a&gt; (Firefox and Chrome extension to quickly summarize web pages with ollama in a sidebar)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tcsenpai/youlama&quot;&gt;YouLama&lt;/a&gt; (Webapp to quickly summarize any YouTube video, supporting Invidious as well)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tcsenpai/dualmind&quot;&gt;DualMind&lt;/a&gt; (Experimental app allowing two models to talk to each other in the terminal or in a web interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/h1ddenpr0cess20/ollamarama-matrix&quot;&gt;ollamarama-matrix&lt;/a&gt; (Ollama chatbot for the Matrix chat protocol)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anan1213095357/ollama-chat-app&quot;&gt;ollama-chat-app&lt;/a&gt; (Flutter-based chat app)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.perfectmemory.ai/&quot;&gt;Perfect Memory AI&lt;/a&gt; (Productivity AI assists personalized by what you have seen on your screen, heard, and said in the meetings)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hexastack/hexabot&quot;&gt;Hexabot&lt;/a&gt; (A conversational AI builder)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/reddit_analyzer&quot;&gt;Reddit Rate&lt;/a&gt; (Search and Rate Reddit topics with a weighted summation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adarshM84/OpenTalkGpt&quot;&gt;OpenTalkGpt&lt;/a&gt; (Chrome Extension to manage open-source models supported by Ollama, create custom models, and chat with models from a user-friendly UI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vinhnx/vt.ai&quot;&gt;VT&lt;/a&gt; (A minimal multimodal AI chat app, with dynamic conversation routing. Supports local models via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nosia-ai/nosia&quot;&gt;Nosia&lt;/a&gt; (Easy to install and use RAG platform based on Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbonamy/witsy&quot;&gt;Witsy&lt;/a&gt; (An AI Desktop application available for Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/US-Artificial-Intelligence/abbey&quot;&gt;Abbey&lt;/a&gt; (A configurable AI interface server with notebooks, document storage, and YouTube support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dmayboroda/minima&quot;&gt;Minima&lt;/a&gt; (RAG with on-premises or fully local workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AidfulAI/aidful-ollama-model-delete&quot;&gt;aidful-ollama-model-delete&lt;/a&gt; (User interface for simplified model cleanup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ItzCrazyKns/Perplexica&quot;&gt;Perplexica&lt;/a&gt; (An AI-powered search engine &amp;amp; an open-source alternative to Perplexity AI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oslook/ollama-webui&quot;&gt;Ollama Chat WebUI for Docker &lt;/a&gt; (Support for local docker deployment, lightweight ollama webui)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/ai-tooklit/ollama-docs&quot;&gt;AI Toolkit for Visual Studio Code&lt;/a&gt; (Microsoft-official VSCode extension to chat, test, evaluate models with Ollama support, and use them in your AI applications.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anilkay/MinimalNextOllamaChat&quot;&gt;MinimalNextOllamaChat&lt;/a&gt; (Minimal Web UI for Chat and Model Control)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TilmanGriesel/chipper&quot;&gt;Chipper&lt;/a&gt; AI interface for tinkerers (Ollama, Haystack RAG, Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CosmicEventHorizon/ChibiChat&quot;&gt;ChibiChat&lt;/a&gt; (Kotlin-based Android app to chat with Ollama and Koboldcpp API endpoints)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/qusaismael/localllm&quot;&gt;LocalLLM&lt;/a&gt; (Minimal Web-App to run ollama models on it with a GUI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/buiducnhat/ollamazing&quot;&gt;Ollamazing&lt;/a&gt; (Web extension to run Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/benhaotang/OpenDeepResearcher-via-searxng&quot;&gt;OpenDeepResearcher-via-searxng&lt;/a&gt; (A Deep Research equivalent endpoint with Ollama support for running locally)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AIDotNet/AntSK&quot;&gt;AntSK&lt;/a&gt; (Out-of-the-box &amp;amp; Adaptable RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1Panel-dev/MaxKB/&quot;&gt;MaxKB&lt;/a&gt; (Ready-to-use &amp;amp; flexible RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/danielekp/yla&quot;&gt;yla&lt;/a&gt; (Web interface to freely interact with your customized models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RockChinQ/LangBot&quot;&gt;LangBot&lt;/a&gt; (LLM-based instant messaging bots platform, with Agents, RAG features, supports multiple platforms)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1Panel-dev/1Panel/&quot;&gt;1Panel&lt;/a&gt; (Web-based Linux Server Management Tool)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Soulter/AstrBot/&quot;&gt;AstrBot&lt;/a&gt; (User-friendly LLM-based multi-platform chatbot with a WebUI, supporting RAG, LLM agents, and plugins integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibrahimcetin/reins&quot;&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Aharon-Bensadoun/Flufy&quot;&gt;Flufy&lt;/a&gt; (A beautiful chat interface for interacting with Ollama&#39;s API. Built with React, TypeScript, and Material-UI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeozeozeo/ellama&quot;&gt;Ellama&lt;/a&gt; (Friendly native app to chat with an Ollama instance)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mediar-ai/screenpipe&quot;&gt;screenpipe&lt;/a&gt; Build agents powered by your screen history&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hengkysteen/ollamb&quot;&gt;Ollamb&lt;/a&gt; (Simple yet rich in features, cross-platform built with Flutter and designed for Ollama. Try the &lt;a href=&quot;https://hengkysteen.github.io/demo/ollamb/&quot;&gt;web demo&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Writeopia/Writeopia&quot;&gt;Writeopia&lt;/a&gt; (Text editor with integration with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AppFlowy-IO/AppFlowy&quot;&gt;AppFlowy&lt;/a&gt; (AI collaborative workspace with Ollama, cross-platform and self-hostable)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cushydigit/lumina.git&quot;&gt;Lumina&lt;/a&gt; (A lightweight, minimal React.js frontend for interacting with Ollama servers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pypi.org/project/tiny-notepad&quot;&gt;Tiny Notepad&lt;/a&gt; (A lightweight, notepad-like interface to chat with ollama available on PyPI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hellotunamayo/macLlama&quot;&gt;macLlama (macOS native)&lt;/a&gt; (A native macOS GUI application for interacting with Ollama models, featuring a chat interface.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philberndt/GPTranslate&quot;&gt;GPTranslate&lt;/a&gt; (A fast and lightweight, AI powered desktop translation application written with Rust and Tauri. Features real-time translation with OpenAI/Azure/Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NGC13009/ollama-launcher&quot;&gt;ollama launcher&lt;/a&gt; (A launcher for Ollama, aiming to provide users with convenient functions such as ollama server launching, management, or configuration.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Aj-Seven/ai-hub&quot;&gt;ai-hub&lt;/a&gt; (AI Hub supports multiple models via API keys and Chat support via Ollama API.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/mayan-edms/mayan-edms&quot;&gt;Mayan EDMS&lt;/a&gt; (Open source document management system to organize, tag, search, and automate your files with powerful Ollama driven workflows.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama&quot;&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fly.io/docs/python/do-more/add-ollama/&quot;&gt;Fly.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.koyeb.com/deploy/ollama&quot;&gt;Koyeb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ggozad/oterm&quot;&gt;oterm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/s-kostyaev/ellama&quot;&gt;Ellama Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zweifisch/ollama&quot;&gt;Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paradoxical-dev/neollama&quot;&gt;neollama&lt;/a&gt; UI client for interacting with models from within Neovim&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/David-Kunz/gen.nvim&quot;&gt;gen.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nomnivore/ollama.nvim&quot;&gt;ollama.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marco-souza/ollero.nvim&quot;&gt;ollero.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gerazov/ollama-chat.nvim&quot;&gt;ollama-chat.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/huynle/ogpt.nvim&quot;&gt;ogpt.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/karthink/gptel&quot;&gt;gptel Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dustinblackman/oatmeal&quot;&gt;Oatmeal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pgibler/cmdh&quot;&gt;cmdh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/npahlfer/ooo&quot;&gt;ooo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/reid41/shell-pilot&quot;&gt;shell-pilot&lt;/a&gt;(Interact with models via pure shell scripts on Linux or macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pythops/tenere&quot;&gt;tenere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/taketwo/llm-ollama&quot;&gt;llm-ollama&lt;/a&gt; for &lt;a href=&quot;https://llm.datasette.io/en/stable/&quot;&gt;Datasette&#39;s LLM CLI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anaisbetts/typechat-cli&quot;&gt;typechat-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/djcopley/ShellOracle&quot;&gt;ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yusufcanb/tlm&quot;&gt;tlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ericcurtin/podman-ollama&quot;&gt;podman-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sammcj/gollama&quot;&gt;gollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/paulrobello/parllama&quot;&gt;ParLlama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cognitivetech/ollama-ebook-summary/&quot;&gt;Ollama eBook Summary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_moe&quot;&gt;Ollama Mixture of Experts (MOE) in 50 lines of code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pepo-ec/vim-intelligence-bridge&quot;&gt;vim-intelligence-bridge&lt;/a&gt; Simple interaction of &quot;Ollama&quot; with the Vim editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x-cmd.com/mod/ollama&quot;&gt;x-cmd ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/drunkwcodes/bb7&quot;&gt;bb7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcusziade/Swollama&quot;&gt;SwollamaCLI&lt;/a&gt; bundled with the Swollama Swift package. &lt;a href=&quot;https://github.com/marcusziade/Swollama?tab=readme-ov-file#cli-usage&quot;&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sigoden/aichat&quot;&gt;aichat&lt;/a&gt; All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI tools &amp;amp; agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rrg92/powershai&quot;&gt;PowershAI&lt;/a&gt; PowerShell module that brings AI to terminal on Windows, including support for Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Abyss-c0re/deepshell&quot;&gt;DeepShell&lt;/a&gt; Your self-hosted AI assistant. Interactive Shell, Files and Folders analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xyproto/orbiton&quot;&gt;orbiton&lt;/a&gt; Configuration-free text editor and IDE with support for tab completion with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/molbal/orca-cli&quot;&gt;orca-cli&lt;/a&gt; Ollama Registry CLI Application - Browse, pull, and download models from Ollama Registry in your terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathanhecl/gguf-to-ollama&quot;&gt;GGUF-to-Ollama&lt;/a&gt; - Importing GGUF to Ollama made easy (multiplatform)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapidarchitect/ollama_strands&quot;&gt;AWS-Strands-With-Ollama&lt;/a&gt; - AWS Strands Agents with Ollama Examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/attogram/ollama-multirun&quot;&gt;ollama-multirun&lt;/a&gt; - A bash shell script to run a single prompt against any or all of your locally installed ollama models, saving the output and performance statistics as easily navigable web pages. (&lt;a href=&quot;https://attogram.github.io/ai_test_zone/&quot;&gt;Demo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/attogram/ollama-bash-toolshed&quot;&gt;ollama-bash-toolshed&lt;/a&gt; - Bash scripts to chat with tool using models. Add new tools to your shed with ease. Runs on Ollama.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apple Vision Pro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/swift-chat&quot;&gt;SwiftChat&lt;/a&gt; (Cross-platform AI chat app supporting Apple Vision Pro via &quot;Designed for iPad&quot;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustDev/enchanted&quot;&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/timescale/pgai&quot;&gt;pgai&lt;/a&gt; - PostgreSQL as a vector database (Create and search embeddings from Ollama models using pgvector) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/timescale/pgai/raw/main/docs/vectorizer-quick-start.md&quot;&gt;Get started guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mindsdb/mindsdb/raw/staging/mindsdb/integrations/handlers/ollama_handler/README.md&quot;&gt;MindsDB&lt;/a&gt; (Connects Ollama models with nearly 200 data platforms and apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philippgille/chromem-go/raw/v0.5.0/embed_ollama.go&quot;&gt;chromem-go&lt;/a&gt; with &lt;a href=&quot;https://github.com/philippgille/chromem-go/tree/v0.5.0/examples/rag-wikipedia-ollama&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dbkangaroo/kangaroo&quot;&gt;Kangaroo&lt;/a&gt; (AI-powered SQL client and admin tool for popular databases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://archlinux.org/packages/extra/x86_64/ollama/&quot;&gt;Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gentoo/guru/tree/master/app-misc/ollama&quot;&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://formulae.brew.sh/formula/ollama&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://artifacthub.io/packages/helm/ollama-helm/ollama&quot;&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://codeberg.org/tusharhero/ollama-guix&quot;&gt;Guix channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://search.nixos.org/packages?show=ollama&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=ollama&quot;&gt;Nix package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flox.dev/blog/ollama-part-one&quot;&gt;Flox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://python.langchain.com/docs/integrations/chat/ollama/&quot;&gt;LangChain&lt;/a&gt; and &lt;a href=&quot;https://js.langchain.com/docs/integrations/chat/ollama/&quot;&gt;LangChain.js&lt;/a&gt; with &lt;a href=&quot;https://js.langchain.com/docs/tutorials/local_rag/&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/genkit/plugins/ollama&quot;&gt;Firebase Genkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/crewAIInc/crewAI&quot;&gt;crewAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://remembersoftwares.github.io/yacana/&quot;&gt;Yacana&lt;/a&gt; (User-friendly multi-agent framework for brainstorming and executing predetermined flows with built-in tool integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;Spring AI&lt;/a&gt; with &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html&quot;&gt;reference&lt;/a&gt; and &lt;a href=&quot;https://github.com/tzolov/ollama-tools&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tmc/langchaingo/&quot;&gt;LangChainGo&lt;/a&gt; with &lt;a href=&quot;https://github.com/tmc/langchaingo/tree/main/examples/ollama-completion-example&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/langchain4j/langchain4j&quot;&gt;LangChain4j&lt;/a&gt; with &lt;a href=&quot;https://github.com/langchain4j/langchain4j-examples/tree/main/ollama-examples/src/main/java&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Abraxas-365/langchain-rust&quot;&gt;LangChainRust&lt;/a&gt; with &lt;a href=&quot;https://github.com/Abraxas-365/langchain-rust/raw/main/examples/llm_ollama.rs&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tryAGI/LangChain&quot;&gt;LangChain for .NET&lt;/a&gt; with &lt;a href=&quot;https://github.com/tryAGI/LangChain/raw/main/examples/LangChain.Samples.OpenAI/Program.cs&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/theodo-group/LLPhant?tab=readme-ov-file#ollama&quot;&gt;LLPhant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.llamaindex.ai/en/stable/examples/llm/ollama/&quot;&gt;LlamaIndex&lt;/a&gt; and &lt;a href=&quot;https://ts.llamaindex.ai/modules/llms/available_llms/ollama&quot;&gt;LlamaIndexTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BerriAI/litellm&quot;&gt;LiteLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/presbrey/ollamafarm&quot;&gt;OllamaFarm for Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/awaescher/OllamaSharp&quot;&gt;OllamaSharp for .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gbaptista/ollama-ai&quot;&gt;Ollama for Ruby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pepperoni21/ollama-rs&quot;&gt;Ollama-rs for Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jmont-dev/ollama-hpp&quot;&gt;Ollama-hpp for C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ollama4j/ollama4j&quot;&gt;Ollama4j for Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelfusion.dev/integration/model-provider/ollama&quot;&gt;ModelFusion Typescript Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinhermawan/OllamaKit&quot;&gt;OllamaKit for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/breitburg/dart-ollama&quot;&gt;Ollama for Dart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cloudstudio/ollama-laravel&quot;&gt;Ollama for Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/davidmigloz/langchain_dart&quot;&gt;LangChainDart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/ai/ollama&quot;&gt;Semantic Kernel - Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/deepset-ai/haystack-integrations/raw/main/integrations/ollama.md&quot;&gt;Haystack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brainlid/langchain&quot;&gt;Elixir LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JBGruber/rollama&quot;&gt;Ollama for R - rollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hauselin/ollama-r&quot;&gt;Ollama for R - ollama-r&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lebrunel/ollama-ex&quot;&gt;Ollama-ex for Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/b-tocs/abap_btocs_ollama&quot;&gt;Ollama Connector for SAP ABAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testcontainers.com/modules/ollama/&quot;&gt;Testcontainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://portkey.ai/docs/welcome/integration-guides/ollama&quot;&gt;Portkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/svilupp/PromptingTools.jl&quot;&gt;PromptingTools.jl&lt;/a&gt; with an &lt;a href=&quot;https://svilupp.github.io/PromptingTools.jl/dev/examples/working_with_ollama&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Project-Llama/llamascript&quot;&gt;LlamaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/emirsahin1/llm-axe&quot;&gt;llm-axe&lt;/a&gt; (Python Toolkit for Building LLM Powered Apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.gollm.co/examples/ollama-example&quot;&gt;Gollm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonathanhecl/gollama&quot;&gt;Gollama for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xyproto/ollamaclient&quot;&gt;Ollamaclient for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitlab.com/tozd/go/fun&quot;&gt;High-level function abstraction in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ArdaGnsrn/ollama-php&quot;&gt;Ollama PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/agents-flex/agents-flex&quot;&gt;Agents-Flex for Java&lt;/a&gt; with &lt;a href=&quot;https://github.com/agents-flex/agents-flex/tree/main/agents-flex-llm/agents-flex-llm-ollama/src/test/java/com/agentsflex/llm/ollama&quot;&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/parakeet-nest/parakeet&quot;&gt;Parakeet&lt;/a&gt; is a GoLang library, made to simplify the development of small generative AI applications with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andygill/haverscript&quot;&gt;Haverscript&lt;/a&gt; with &lt;a href=&quot;https://github.com/andygill/haverscript/tree/main/examples&quot;&gt;examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mattt/ollama-swift&quot;&gt;Ollama for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcusziade/Swollama&quot;&gt;Swollama for Swift&lt;/a&gt; with &lt;a href=&quot;https://marcusziade.github.io/Swollama/documentation/swollama/&quot;&gt;DocC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/prasad89/golamify&quot;&gt;GoLamify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tusharad/ollama-haskell&quot;&gt;Ollama for Haskell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nbonamy/multi-llm-ts&quot;&gt;multi-llm-ts&lt;/a&gt; (A Typescript/JavaScript library allowing access to different LLM in a unified API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lofcz/llmtornado&quot;&gt;LlmTornado&lt;/a&gt; (C# library providing a unified interface for major FOSS &amp;amp; Commercial inference APIs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dravenk/ollama-zig&quot;&gt;Ollama for Zig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lunary-ai/abso&quot;&gt;Abso&lt;/a&gt; (OpenAI-compatible TypeScript SDK for any LLM provider)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/goodreasonai/nichey&quot;&gt;Nichey&lt;/a&gt; is a Python package for generating custom wikis for your research topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kassane/ollama-d&quot;&gt;Ollama for D&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HardCodeDev777/OllamaPlusPlus&quot;&gt;OllamaPlusPlus&lt;/a&gt; (Very simple C++ library for Ollama)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aws-samples/swift-chat&quot;&gt;SwiftChat&lt;/a&gt; (Lightning-fast Cross-platform AI chat app with native UI for Android, iOS, and iPad)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AugustDev/enchanted&quot;&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Mobile-Artificial-Intelligence/maid&quot;&gt;Maid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JHubi1/ollama-app&quot;&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/1runeberg/confichat&quot;&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sunshine0523/OllamaServer&quot;&gt;Ollama Android Chat&lt;/a&gt; (No need for Termux, start the Ollama service with one click on an Android device)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ibrahimcetin/reins&quot;&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions &amp;amp; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/MassimilianoPasquini97/raycast_ollama&quot;&gt;Raycast extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mxyng/discollama&quot;&gt;Discollama&lt;/a&gt; (Discord bot inside the Ollama discord channel)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/continuedev/continue&quot;&gt;Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thewh1teagle/vibe&quot;&gt;Vibe&lt;/a&gt; (Transcribe and analyze meetings with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hinterdupfinger/obsidian-ollama&quot;&gt;Obsidian Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/omagdy7/ollama-logseq&quot;&gt;Logseq Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/andersrex/notesollama&quot;&gt;NotesOllama&lt;/a&gt; (Apple Notes Ollama plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/samalba/dagger-chatbot&quot;&gt;Dagger Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mekb-turtle/discord-ai-bot&quot;&gt;Discord AI Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ruecat/ollama-telegram&quot;&gt;Ollama Telegram Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ej52/hass-ollama-conversation&quot;&gt;Hass Ollama Conversation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/abrenneke/rivet-plugin-ollama&quot;&gt;Rivet plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/longy2k/obsidian-bmo-chatbot&quot;&gt;Obsidian BMO Chatbot plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/herval/cliobot&quot;&gt;Cliobot&lt;/a&gt; (Telegram bot with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/logancyang/obsidian-copilot&quot;&gt;Copilot for Obsidian plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pfrankov/obsidian-local-gpt&quot;&gt;Obsidian Local GPT plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openinterpreter.com/language-model-setup/local-models/ollama&quot;&gt;Open Interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ex3ndr/llama-coder&quot;&gt;Llama Coder&lt;/a&gt; (Copilot alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bernardo-bruning/ollama-copilot&quot;&gt;Ollama Copilot&lt;/a&gt; (Proxy that allows you to use Ollama as a copilot like GitHub Copilot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rjmacarthy/twinny&quot;&gt;twinny&lt;/a&gt; (Copilot and Copilot chat alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/RussellCanfield/wingman-ai&quot;&gt;Wingman-AI&lt;/a&gt; (Copilot code and chat alternative using Ollama and Hugging Face)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/n4ze3m/page-assist&quot;&gt;Page Assist&lt;/a&gt; (Chrome Extension)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/imoize/plasmoid-ollamacontrol&quot;&gt;Plasmoid Ollama Control&lt;/a&gt; (KDE Plasma extension that allows you to quickly manage/control Ollama model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tusharhero/aitelegrambot&quot;&gt;AI Telegram Bot&lt;/a&gt; (Telegram bot using Ollama in backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yaroslavyaroslav/OpenAI-sublime-text&quot;&gt;AI ST Completion&lt;/a&gt; (Sublime Text 4 AI assistant plugin with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kevinthedang/discord-ollama&quot;&gt;Discord-Ollama Chat Bot&lt;/a&gt; (Generalized TypeScript Discord Bot w/ Tuning Documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/josStorer/chatGPTBox&quot;&gt;ChatGPTBox: All in one browser extension&lt;/a&gt; with &lt;a href=&quot;https://github.com/josStorer/chatGPTBox/issues/616#issuecomment-1975186467&quot;&gt;Integrating Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rapmd73/Companion&quot;&gt;Discord AI chat/moderation bot&lt;/a&gt; Chat/moderation bot written in python. Uses Ollama to create personalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nischalj10/headless-ollama&quot;&gt;Headless Ollama&lt;/a&gt; (Scripts to automatically install ollama client &amp;amp; models on any OS for apps that depend on ollama server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/xuyangbocn/terraform-aws-self-host-llm&quot;&gt;Terraform AWS Ollama &amp;amp; Open WebUI&lt;/a&gt; (A Terraform module to deploy on AWS a ready-to-use Ollama service, together with its front-end Open WebUI service.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jakubburkiewicz/node-red-contrib-ollama&quot;&gt;node-red-contrib-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ivostoykov/localAI&quot;&gt;Local AI Helper&lt;/a&gt; (Chrome and Firefox extensions that enable interactions with the active tab and customisable API endpoints. Includes secure storage for user prompts.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jake83741/vnc-lm&quot;&gt;vnc-lm&lt;/a&gt; (Discord bot for messaging with LLMs through Ollama and LiteLLM. Seamlessly move between local and flagship models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SilasMarvin/lsp-ai&quot;&gt;LSP-AI&lt;/a&gt; (Open-source language server for AI-powered functionality)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Palm1r/QodeAssist&quot;&gt;QodeAssist&lt;/a&gt; (AI-powered coding assistant plugin for Qt Creator)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ECuiDev/obsidian-quiz-generator&quot;&gt;Obsidian Quiz Generator plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/philffm/ai-summary-helper&quot;&gt;AI Summmary Helper plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/suncloudsmoon/TextCraft&quot;&gt;TextCraft&lt;/a&gt; (Copilot in Word alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zeitlings/alfred-ollama&quot;&gt;Alfred Ollama&lt;/a&gt; (Alfred Workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/adarshM84/TextLLaMA&quot;&gt;TextLLaMA&lt;/a&gt; A Chrome Extension that helps you write emails, correct grammar, and translate into any language&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/zyphixor/simple-discord-ai&quot;&gt;Simple-Discord-AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/innightwolfsleep/llm_telegram_bot&quot;&gt;LLM Telegram Bot&lt;/a&gt; (telegram bot, primary for RP. Oobabooga-like buttons, &lt;a href=&quot;https://github.com/AUTOMATIC1111/stable-diffusion-webui&quot;&gt;A1111&lt;/a&gt; API integration e.t.c)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sammcj/mcp-llm&quot;&gt;mcp-llm&lt;/a&gt; (MCP Server to allow LLMs to call other LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HardCodeDev777/SimpleOllamaUnity&quot;&gt;SimpleOllamaUnity&lt;/a&gt; (Unity Engine extension for communicating with Ollama in a few lines of code. Also works at runtime)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/HardCodeDev777/UnityCodeLama&quot;&gt;UnityCodeLama&lt;/a&gt; (Unity Edtior tool to analyze scripts via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NativeMindBrowser/NativeMindExtension&quot;&gt;NativeMind&lt;/a&gt; (Private, on-device AI Assistant, no cloud dependencies)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gmai.premex.se/&quot;&gt;GMAI - Gradle Managed AI&lt;/a&gt; (Gradle plugin for automated Ollama lifecycle management during build phases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ggml-org/llama.cpp&quot;&gt;llama.cpp&lt;/a&gt; project founded by Georgi Gerganov.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.comet.com/docs/opik/cookbook/ollama&quot;&gt;Opik&lt;/a&gt; is an open-source platform to debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards. Opik supports native intergration to Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lunary.ai/docs/integrations/ollama&quot;&gt;Lunary&lt;/a&gt; is the leading open-source LLM observability platform. It provides a variety of enterprise-grade features such as real-time analytics, prompt templates management, PII masking, and comprehensive agent tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/openlit/openlit&quot;&gt;OpenLIT&lt;/a&gt; is an OpenTelemetry-native tool for monitoring Ollama Applications &amp;amp; GPUs using traces and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.honeyhive.ai/integrations/ollama&quot;&gt;HoneyHive&lt;/a&gt; is an AI observability and evaluation platform for AI agents. Use HoneyHive to evaluate agent performance, interrogate failures, and monitor quality in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://langfuse.com/docs/integrations/ollama&quot;&gt;Langfuse&lt;/a&gt; is an open source LLM observability platform that enables teams to collaboratively monitor, evaluate and debug AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing&quot;&gt;MLflow Tracing&lt;/a&gt; is an open source LLM observability tool with a convenient API to log and visualize traces, making it easy to debug and evaluate GenAI applications.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dstotijn/hetty</title>
      <link>https://github.com/dstotijn/hetty</link>
      <description>&lt;p&gt;An HTTP toolkit for security research.&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/983924/156430531-6193e187-7400-436b-81c6-f86862783ea5.svg#gh-light-mode-only&quot; width=&quot;240&quot; /&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/983924/156430660-9d5bd555-dcfd-47e2-ba70-54294c20c1b4.svg#gh-dark-mode-only&quot; width=&quot;240&quot; /&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dstotijn/hetty/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/dstotijn/hetty?color=25ae8f&quot; alt=&quot;Latest GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dstotijn/hetty/actions/workflows/build-test.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fdstotijn%2Fhetty%2Fbadge%3Fref%3Dmain&amp;amp;label=build&amp;amp;color=24ae8f&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/dstotijn/hetty/total?color=25ae8f&quot; alt=&quot;GitHub download count&quot; /&gt; &lt;a href=&quot;https://github.com/dstotijn/hetty/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dstotijn/hetty?color=25ae8f&quot; alt=&quot;GitHub&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hetty.xyz/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/hetty-docs-25ae8f&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hetty&lt;/strong&gt; is an HTTP toolkit for security research. It aims to become an open source alternative to commercial software like Burp Suite Pro, with powerful features tailored to the needs of the infosec and bug bounty community.&lt;/p&gt; 
&lt;img src=&quot;https://hetty.xyz/img/hero.png&quot; width=&quot;907&quot; alt=&quot;Hetty proxy logs (screenshot)&quot; /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Machine-in-the-middle (MITM) HTTP proxy, with logs and advanced search&lt;/li&gt; 
 &lt;li&gt;HTTP client for manually creating/editing requests, and replay proxied requests&lt;/li&gt; 
 &lt;li&gt;Intercept requests and responses for manual review (edit, send/receive, cancel)&lt;/li&gt; 
 &lt;li&gt;Scope support, to help keep work organized&lt;/li&gt; 
 &lt;li&gt;Easy-to-use web based admin interface&lt;/li&gt; 
 &lt;li&gt;Project based database storage, to help keep work organized&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;👷‍♂️ Hetty is under active development. Check the &lt;a href=&quot;https://github.com/dstotijn/hetty/projects/1&quot;&gt;backlog&lt;/a&gt; for the current status.&lt;/p&gt; 
&lt;p&gt;📣 Are you pen testing professionaly in a team? I would love to hear your thoughts on tooling via &lt;a href=&quot;https://forms.gle/36jtgNc3TJ2imi5A8&quot;&gt;this 5 minute survey&lt;/a&gt;. Thank you!&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;💡 The &lt;a href=&quot;https://hetty.xyz/docs/getting-started&quot;&gt;Getting started&lt;/a&gt; doc has more detailed install and usage instructions.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The quickest way to install and update Hetty is via a package manager:&lt;/p&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install hettysoft/tap/hetty
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Linux&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo snap install hetty
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;scoop bucket add hettysoft https://github.com/hettysoft/scoop-bucket.git
scoop install hettysoft/hetty
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Other&lt;/h4&gt; 
&lt;p&gt;Alternatively, you can &lt;a href=&quot;https://github.com/dstotijn/hetty/releases/latest&quot;&gt;download the latest release from GitHub&lt;/a&gt; for your OS and architecture, and move the binary to a directory in your &lt;code&gt;$PATH&lt;/code&gt;. If your OS is not available for one of the package managers or not listed in the GitHub releases, you can compile from source &lt;em&gt;(link coming soon)&lt;/em&gt;.&lt;/p&gt; 
&lt;h4&gt;Docker&lt;/h4&gt; 
&lt;p&gt;Docker images are distributed via &lt;a href=&quot;https://github.com/dstotijn/hetty/pkgs/container/hetty&quot;&gt;GitHub&#39;s Container registry&lt;/a&gt; and &lt;a href=&quot;https://hub.docker.com/r/dstotijn/hetty&quot;&gt;Docker Hub&lt;/a&gt;. To run Hetty via with a volume for database and certificate storage, and port 8080 forwarded:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -v $HOME/.hetty:/root/.hetty -p 8080:8080 \
  ghcr.io/dstotijn/hetty:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Once installed, start Hetty via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;hetty
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;💡 Read the &lt;a href=&quot;https://hetty.xyz/docs/getting-started&quot;&gt;Getting started&lt;/a&gt; doc for more details.&lt;/p&gt; 
&lt;p&gt;To list all available options, run: &lt;code&gt;hetty --help&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ hetty --help

Usage:
    hetty [flags] [subcommand] [flags]

Runs an HTTP server with (MITM) proxy, GraphQL service, and a web based admin interface.

Options:
    --cert         Path to root CA certificate. Creates file if it doesn&#39;t exist. (Default: &quot;~/.hetty/hetty_cert.pem&quot;)
    --key          Path to root CA private key. Creates file if it doesn&#39;t exist. (Default: &quot;~/.hetty/hetty_key.pem&quot;)
    --db           Database file path. Creates file if it doesn&#39;t exist. (Default: &quot;~/.hetty/hetty.db&quot;)
    --addr         TCP address for HTTP server to listen on, in the form \&quot;host:port\&quot;. (Default: &quot;:8080&quot;)
    --chrome       Launch Chrome with proxy settings applied and certificate errors ignored. (Default: false)
    --verbose      Enable verbose logging.
    --json         Encode logs as JSON, instead of pretty/human readable output.
    --version, -v  Output version.
    --help, -h     Output this usage text.

Subcommands:
    - cert  Certificate management

Run `hetty &amp;lt;subcommand&amp;gt; --help` for subcommand specific usage instructions.

Visit https://hetty.xyz to learn more about Hetty.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;📖 &lt;a href=&quot;https://hetty.xyz/docs&quot;&gt;Read the docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://github.com/dstotijn/hetty/issues&quot;&gt;issues&lt;/a&gt; for bug reports and feature requests, and &lt;a href=&quot;https://github.com/dstotijn/hetty/discussions&quot;&gt;discussions&lt;/a&gt; for questions and troubleshooting.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;💬 &lt;a href=&quot;https://discord.gg/3HVsj5pTFP&quot;&gt;Join the Hetty Discord server&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute? Great! Please check the &lt;a href=&quot;https://raw.githubusercontent.com/dstotijn/hetty/main/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Thanks to the &lt;a href=&quot;https://www.hacker101.com/discord&quot;&gt;Hacker101 community on Discord&lt;/a&gt; for the encouragement and early feedback.&lt;/li&gt; 
 &lt;li&gt;The font used in the logo and admin interface is &lt;a href=&quot;https://www.jetbrains.com/lp/mono/&quot;&gt;JetBrains Mono&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;💖 Are you enjoying Hetty? You can &lt;a href=&quot;https://github.com/sponsors/dstotijn&quot;&gt;sponsor me&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dstotijn/hetty/main/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;© 2019–2025 Hetty Software&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coroot/coroot</title>
      <link>https://github.com/coroot/coroot</link>
      <description>&lt;p&gt;Coroot is an open-source APM &amp; Observability tool, a DataDog and NewRelic alternative. Metrics, logs, traces, continuous profiling, and SLO-based alerting, supercharged with predefined dashboards and inspections.&lt;/p&gt;&lt;hr&gt;&lt;img width=&quot;200&quot; src=&quot;https://coroot.com/static/logo_u.png&quot; /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/coroot/coroot/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/coroot/coroot&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/coroot/coroot&quot; alt=&quot;Go Report Card&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://coroot.com/join-slack-community/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-coroot-brightgreen.svg?logo=slack&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/coroot/coroot/main/#features&quot;&gt;Features&lt;/a&gt; | &lt;a href=&quot;https://docs.coroot.com/&quot;&gt;Installation&lt;/a&gt; | &lt;a href=&quot;https://docs.coroot.com/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/coroot/coroot/main/#community--support&quot;&gt;Community &amp;amp; Support&lt;/a&gt; | &lt;a href=&quot;https://demo.coroot.com/&quot;&gt;Live demo&lt;/a&gt; | &lt;a href=&quot;https://coroot.com/enterprise/&quot;&gt;Coroot Enterprise&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Open-source observability augmented with actionable insights&lt;/h2&gt; 
&lt;p&gt;Collecting metrics, logs, and traces alone doesn&#39;t make your applications observable. Coroot turns that data into actionable insights for you!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Zero-instrumentation observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Metrics, logs, traces, and profiles are gathered automatically by using eBPF&lt;/li&gt; 
 &lt;li&gt;Coroot provides you with a Service Map that covers 100% of your system with no blind spots&lt;/li&gt; 
 &lt;li&gt;Predefined inspections audit each application without any configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;775&quot; src=&quot;https://user-images.githubusercontent.com/194465/235189673-833066d1-b18f-4c7a-8b81-81b37f966daf.png&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Application Health Summary&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easily understand the status of your services, even when dealing with hundreds of them&lt;/li&gt; 
 &lt;li&gt;Gain insight into application logs without the need to manually inspect each one&lt;/li&gt; 
 &lt;li&gt;SLOs (Service Level Objectives) tracking&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;773&quot; src=&quot;https://github.com/coroot/coroot/assets/194465/6cef06d4-0dcc-4908-85a3-7ec140bd444f&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Explore any outlier requests with distributed tracing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Investigate any anomaly with just one click&lt;/li&gt; 
 &lt;li&gt;Vendor-neutral instrumentation with OpenTelemetry&lt;/li&gt; 
 &lt;li&gt;Are you unable to instrument legacy or third-party services? Coroot&#39;s eBPF-based instrumentation can capture requests without requiring any code changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;1352&quot; src=&quot;https://github.com/coroot/coroot/assets/194465/f5a4342f-776d-48b1-a3b8-03ccbdf43b5e&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Grasp insights from logs with just a quick glance&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log patterns: out-of-the-box event clustering&lt;/li&gt; 
 &lt;li&gt;Seamless logs-to-traces correlation&lt;/li&gt; 
 &lt;li&gt;Lightning-fast search based on ClickHouse&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;777&quot; src=&quot;https://github.com/coroot/coroot/assets/194465/14abefdb-4737-4991-9d48-c7efec42fefd&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Profile any application in 1 click&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Analyze any unexpected spike in CPU or memory usage down to the precise line of code&lt;/li&gt; 
 &lt;li&gt;Don&#39;t make assumptions, know exactly what the resources were spent on&lt;/li&gt; 
 &lt;li&gt;Easily investigate any anomaly by comparing it to the system&#39;s baseline behavior&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;773&quot; src=&quot;https://user-images.githubusercontent.com/194465/235190071-21256cbe-6201-4d16-97f3-6565f7256f98.png&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Built-in expertise&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Coroot can automatically identify over 80% of issues&lt;/li&gt; 
 &lt;li&gt;If an app is not meeting its Service Level Objectives (SLOs), Coroot will send a single alert that includes the results of all relevant inspections&lt;/li&gt; 
 &lt;li&gt;You can easily adjust any inspection for a particular application or an entire project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;778&quot; src=&quot;https://github.com/coroot/coroot/assets/194465/3590a492-8895-4cc6-94df-a880656a330a&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Deployment Tracking&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Coroot discovers and monitors every application rollout in your Kubernetes cluster&lt;/li&gt; 
 &lt;li&gt;Requires no integration with your CI/CD pipeline&lt;/li&gt; 
 &lt;li&gt;Each release is automatically compared with the previous one, so you&#39;ll never miss even the slightest performance degradation&lt;/li&gt; 
 &lt;li&gt;With integrated Cost Monitoring, developers can track how each change affects their cloud bill&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;772&quot; src=&quot;https://user-images.githubusercontent.com/194465/235190275-a6541063-1b26-4ae3-8c20-87787d2e928d.png&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Cost Monitoring&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Understand your cloud costs down to the specific application&lt;/li&gt; 
 &lt;li&gt;Doesn&#39;t require access to you cloud account or any other configurations&lt;/li&gt; 
 &lt;li&gt;AWS, GCP, Azure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;771&quot; src=&quot;https://user-images.githubusercontent.com/194465/235190425-a7f33c7f-33ef-4ef5-9dc1-525ff7524e93.png&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You can run Coroot as a Docker container or deploy it into any Kubernetes cluster. Check out the &lt;a href=&quot;https://docs.coroot.com/&quot;&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The Coroot documentation is available at &lt;a href=&quot;https://docs.coroot.com/&quot;&gt;docs.coroot.com/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Live demo&lt;/h2&gt; 
&lt;p&gt;A live demo of Coroot is available at &lt;a href=&quot;https://demo.coroot.com/&quot;&gt;demo.coroot.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://coroot.com/join-slack-community/&quot;&gt;Community Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coroot/coroot/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coroot/coroot/issues&quot;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/coroot_com&quot;&gt;@coroot_com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;To start contributing, check out our &lt;a href=&quot;https://github.com/coroot/coroot/raw/main/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Coroot is licensed under the &lt;a href=&quot;https://github.com/coroot/coroot/raw/main/LICENSE&quot;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>steveiliop56/tinyauth</title>
      <link>https://github.com/steveiliop56/tinyauth</link>
      <description>&lt;p&gt;The simplest way to protect your apps with a login screen.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;Tinyauth&quot; title=&quot;Tinyauth&quot; width=&quot;96&quot; src=&quot;https://raw.githubusercontent.com/steveiliop56/tinyauth/main/assets/logo-rounded.png&quot; /&gt; 
 &lt;h1&gt;Tinyauth&lt;/h1&gt; 
 &lt;p&gt;The easiest way to secure your apps with a login screen.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img alt=&quot;License&quot; src=&quot;https://img.shields.io/github/license/steveiliop56/tinyauth&quot; /&gt; 
 &lt;img alt=&quot;Release&quot; src=&quot;https://img.shields.io/github/v/release/steveiliop56/tinyauth&quot; /&gt; 
 &lt;img alt=&quot;Issues&quot; src=&quot;https://img.shields.io/github/issues/steveiliop56/tinyauth&quot; /&gt; 
 &lt;img alt=&quot;Tinyauth CI&quot; src=&quot;https://github.com/steveiliop56/tinyauth/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; /&gt; 
 &lt;a title=&quot;Crowdin&quot; target=&quot;_blank&quot; href=&quot;https://crowdin.com/project/tinyauth&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/tinyauth/localized.svg?sanitize=true&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;Tinyauth is a simple authentication middleware that adds a simple login screen or OAuth with Google, Github and any provider to all of your docker apps. It supports all the popular proxies like Traefik, Nginx and Caddy.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/steveiliop56/tinyauth/main/assets/screenshot.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Tinyauth is in active development and configuration may change often. Please make sure to carefully read the release notes before updating.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can easily get started with Tinyauth by following the guide in the &lt;a href=&quot;https://tinyauth.app/docs/getting-started.html&quot;&gt;documentation&lt;/a&gt;. There is also an available &lt;a href=&quot;https://raw.githubusercontent.com/steveiliop56/tinyauth/main/docker-compose.example.yml&quot;&gt;docker compose&lt;/a&gt; file that has Traefik, Whoami and Tinyauth to demonstrate its capabilities.&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;If you are still not sure if Tinyauth suits your needs you can try out the &lt;a href=&quot;https://demo.tinyauth.app&quot;&gt;demo&lt;/a&gt;. The default username is &lt;code&gt;user&lt;/code&gt; and the default password is &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find documentation and guides on all of the available configuration of Tinyauth in the &lt;a href=&quot;https://tinyauth.app&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discord&lt;/h2&gt; 
&lt;p&gt;Tinyauth has a &lt;a href=&quot;https://discord.gg/eHzVaCzRRd&quot;&gt;discord&lt;/a&gt; server. Feel free to hop in to chat about self-hosting, homelabs and of course Tinyauth. See you there!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;All contributions to the codebase are welcome! If you have any free time feel free to pick up an &lt;a href=&quot;https://github.com/steveiliop56/tinyauth/issues&quot;&gt;issue&lt;/a&gt; or add your own missing features. Make sure to check out the &lt;a href=&quot;https://raw.githubusercontent.com/steveiliop56/tinyauth/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; for instructions on how to get the development server up and running.&lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;If you would like to help translate Tinyauth into more languages, visit the &lt;a href=&quot;https://crowdin.com/project/tinyauth&quot;&gt;Crowdin&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Tinyauth is licensed under the GNU General Public License v3.0. TL;DR — You may copy, distribute and modify the software as long as you track changes/dates in source files. Any modifications to or software including (via compiler) GPL-licensed code must also be made available under the GPL along with build &amp;amp; install instructions. For more information about the license check the &lt;a href=&quot;https://raw.githubusercontent.com/steveiliop56/tinyauth/main/LICENSE&quot;&gt;license&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;A big thank you to the following people for providing me with more coffee:&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href=&quot;https://github.com/erwinkramer&quot;&gt;&lt;img src=&quot;https://github.com/erwinkramer.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: erwinkramer&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href=&quot;https://github.com/nicotsx&quot;&gt;&lt;img src=&quot;https://github.com/nicotsx.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: nicotsx&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href=&quot;https://github.com/SimpleHomelab&quot;&gt;&lt;img src=&quot;https://github.com/SimpleHomelab.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: SimpleHomelab&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href=&quot;https://github.com/jmadden91&quot;&gt;&lt;img src=&quot;https://github.com/jmadden91.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: jmadden91&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href=&quot;https://github.com/tribor&quot;&gt;&lt;img src=&quot;https://github.com/tribor.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: tribor&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href=&quot;https://github.com/eliasbenb&quot;&gt;&lt;img src=&quot;https://github.com/eliasbenb.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: eliasbenb&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;a href=&quot;https://github.com/afunworm&quot;&gt;&lt;img src=&quot;https://github.com/afunworm.png&quot; width=&quot;64px&quot; alt=&quot;User avatar: afunworm&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
&lt;!-- sponsors --&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Freepik&lt;/strong&gt; for providing the police hat and badge.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Renee French&lt;/strong&gt; for the original gopher logo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Coderabbit AI&lt;/strong&gt; for providing free AI code reviews.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Syrhu&lt;/strong&gt; for providing the background image of the app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.star-history.com/#steveiliop56/tinyauth&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=steveiliop56/tinyauth&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>charmbracelet/bubbletea</title>
      <link>https://github.com/charmbracelet/bubbletea</link>
      <description>&lt;p&gt;A powerful little TUI framework 🏗&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bubble Tea&lt;/h1&gt; 
&lt;p&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://stuff.charm.sh/bubbletea/bubble-tea-v2-light.png&quot; width=&quot;308&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://stuff.charm.sh/bubbletea/bubble-tea-v2-dark.png&quot; width=&quot;312&quot; /&gt; 
  &lt;img src=&quot;https://stuff.charm.sh/bubbletea/bubble-tea-v2-light.png&quot; width=&quot;308&quot; /&gt; 
 &lt;/picture&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/charmbracelet/bubbletea.svg?sanitize=true&quot; alt=&quot;Latest Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://pkg.go.dev/github.com/charmbracelet/bubbletea?tab=doc&quot;&gt;&lt;img src=&quot;https://godoc.org/github.com/charmbracelet/bubbletea?status.svg?sanitize=true&quot; alt=&quot;GoDoc&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/actions&quot;&gt;&lt;img src=&quot;https://github.com/charmbracelet/bubbletea/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;The fun, functional and stateful way to build terminal apps. A Go framework based on &lt;a href=&quot;https://guide.elm-lang.org/architecture/&quot;&gt;The Elm Architecture&lt;/a&gt;. Bubble Tea is well-suited for simple and complex terminal applications, either inline, full-window, or a mix of both.&lt;/p&gt; 
&lt;p&gt; &lt;img src=&quot;https://stuff.charm.sh/bubbletea/bubbletea-example.gif&quot; width=&quot;100%&quot; alt=&quot;Bubble Tea Example&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;Bubble Tea is in use in production and includes a number of features and performance optimizations we’ve added along the way. Among those is a framerate-based renderer, mouse support, focus reporting and more.&lt;/p&gt; 
&lt;p&gt;To get started, see the tutorial below, the &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/tree/main/examples&quot;&gt;examples&lt;/a&gt;, the &lt;a href=&quot;https://pkg.go.dev/github.com/charmbracelet/bubbletea?tab=doc&quot;&gt;docs&lt;/a&gt;, the &lt;a href=&quot;https://charm.sh/yt&quot;&gt;video tutorials&lt;/a&gt; and some common &lt;a href=&quot;https://raw.githubusercontent.com/charmbracelet/bubbletea/main/#libraries-we-use-with-bubble-tea&quot;&gt;resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;By the way&lt;/h2&gt; 
&lt;p&gt;Be sure to check out &lt;a href=&quot;https://github.com/charmbracelet/bubbles&quot;&gt;Bubbles&lt;/a&gt;, a library of common UI components for Bubble Tea.&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://github.com/charmbracelet/bubbles&quot;&gt;&lt;img src=&quot;https://stuff.charm.sh/bubbles/bubbles-badge.png&quot; width=&quot;174&quot; alt=&quot;Bubbles Badge&quot; /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href=&quot;https://github.com/charmbracelet/bubbles&quot;&gt;&lt;img src=&quot;https://stuff.charm.sh/bubbles-examples/textinput.gif&quot; width=&quot;400&quot; alt=&quot;Text Input Example from Bubbles&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Tutorial&lt;/h2&gt; 
&lt;p&gt;Bubble Tea is based on the functional design paradigms of &lt;a href=&quot;https://guide.elm-lang.org/architecture/&quot;&gt;The Elm Architecture&lt;/a&gt;, which happens to work nicely with Go. It&#39;s a delightful way to build applications.&lt;/p&gt; 
&lt;p&gt;This tutorial assumes you have a working knowledge of Go.&lt;/p&gt; 
&lt;p&gt;By the way, the non-annotated source code for this program is available &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/tree/main/tutorials/basics&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Enough! Let&#39;s get to it.&lt;/h3&gt; 
&lt;p&gt;For this tutorial, we&#39;re making a shopping list.&lt;/p&gt; 
&lt;p&gt;To start we&#39;ll define our package and import some libraries. Our only external import will be the Bubble Tea library, which we&#39;ll call &lt;code&gt;tea&lt;/code&gt; for short.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

// These imports will be used later on the tutorial. If you save the file
// now, Go might complain they are unused, but that&#39;s fine.
// You may also need to run `go mod tidy` to download bubbletea and its
// dependencies.
import (
    &quot;fmt&quot;
    &quot;os&quot;

    tea &quot;github.com/charmbracelet/bubbletea&quot;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bubble Tea programs are comprised of a &lt;strong&gt;model&lt;/strong&gt; that describes the application state and three simple methods on that model:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Init&lt;/strong&gt;, a function that returns an initial command for the application to run.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update&lt;/strong&gt;, a function that handles incoming events and updates the model accordingly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;, a function that renders the UI based on the data in the model.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Model&lt;/h3&gt; 
&lt;p&gt;So let&#39;s start by defining our model which will store our application&#39;s state. It can be any type, but a &lt;code&gt;struct&lt;/code&gt; usually makes the most sense.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type model struct {
    choices  []string           // items on the to-do list
    cursor   int                // which to-do list item our cursor is pointing at
    selected map[int]struct{}   // which to-do items are selected
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Initialization&lt;/h3&gt; 
&lt;p&gt;Next, we’ll define our application’s initial state. In this case, we’re defining a function to return our initial model, however, we could just as easily define the initial model as a variable elsewhere, too.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func initialModel() model {
	return model{
		// Our to-do list is a grocery list
		choices:  []string{&quot;Buy carrots&quot;, &quot;Buy celery&quot;, &quot;Buy kohlrabi&quot;},

		// A map which indicates which choices are selected. We&#39;re using
		// the  map like a mathematical set. The keys refer to the indexes
		// of the `choices` slice, above.
		selected: make(map[int]struct{}),
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we define the &lt;code&gt;Init&lt;/code&gt; method. &lt;code&gt;Init&lt;/code&gt; can return a &lt;code&gt;Cmd&lt;/code&gt; that could perform some initial I/O. For now, we don&#39;t need to do any I/O, so for the command, we&#39;ll just return &lt;code&gt;nil&lt;/code&gt;, which translates to &quot;no command.&quot;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func (m model) Init() tea.Cmd {
    // Just return `nil`, which means &quot;no I/O right now, please.&quot;
    return nil
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;The Update Method&lt;/h3&gt; 
&lt;p&gt;Next up is the update method. The update function is called when ”things happen.” Its job is to look at what has happened and return an updated model in response. It can also return a &lt;code&gt;Cmd&lt;/code&gt; to make more things happen, but for now don&#39;t worry about that part.&lt;/p&gt; 
&lt;p&gt;In our case, when a user presses the down arrow, &lt;code&gt;Update&lt;/code&gt;’s job is to notice that the down arrow was pressed and move the cursor accordingly (or not).&lt;/p&gt; 
&lt;p&gt;The “something happened” comes in the form of a &lt;code&gt;Msg&lt;/code&gt;, which can be any type. Messages are the result of some I/O that took place, such as a keypress, timer tick, or a response from a server.&lt;/p&gt; 
&lt;p&gt;We usually figure out which type of &lt;code&gt;Msg&lt;/code&gt; we received with a type switch, but you could also use a type assertion.&lt;/p&gt; 
&lt;p&gt;For now, we&#39;ll just deal with &lt;code&gt;tea.KeyMsg&lt;/code&gt; messages, which are automatically sent to the update function when keys are pressed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
    switch msg := msg.(type) {

    // Is it a key press?
    case tea.KeyMsg:

        // Cool, what was the actual key pressed?
        switch msg.String() {

        // These keys should exit the program.
        case &quot;ctrl+c&quot;, &quot;q&quot;:
            return m, tea.Quit

        // The &quot;up&quot; and &quot;k&quot; keys move the cursor up
        case &quot;up&quot;, &quot;k&quot;:
            if m.cursor &amp;gt; 0 {
                m.cursor--
            }

        // The &quot;down&quot; and &quot;j&quot; keys move the cursor down
        case &quot;down&quot;, &quot;j&quot;:
            if m.cursor &amp;lt; len(m.choices)-1 {
                m.cursor++
            }

        // The &quot;enter&quot; key and the spacebar (a literal space) toggle
        // the selected state for the item that the cursor is pointing at.
        case &quot;enter&quot;, &quot; &quot;:
            _, ok := m.selected[m.cursor]
            if ok {
                delete(m.selected, m.cursor)
            } else {
                m.selected[m.cursor] = struct{}{}
            }
        }
    }

    // Return the updated model to the Bubble Tea runtime for processing.
    // Note that we&#39;re not returning a command.
    return m, nil
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may have noticed that &lt;kbd&gt;ctrl+c&lt;/kbd&gt; and &lt;kbd&gt;q&lt;/kbd&gt; above return a &lt;code&gt;tea.Quit&lt;/code&gt; command with the model. That’s a special command which instructs the Bubble Tea runtime to quit, exiting the program.&lt;/p&gt; 
&lt;h3&gt;The View Method&lt;/h3&gt; 
&lt;p&gt;At last, it’s time to render our UI. Of all the methods, the view is the simplest. We look at the model in its current state and use it to return a &lt;code&gt;string&lt;/code&gt;. That string is our UI!&lt;/p&gt; 
&lt;p&gt;Because the view describes the entire UI of your application, you don’t have to worry about redrawing logic and stuff like that. Bubble Tea takes care of it for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func (m model) View() string {
    // The header
    s := &quot;What should we buy at the market?\n\n&quot;

    // Iterate over our choices
    for i, choice := range m.choices {

        // Is the cursor pointing at this choice?
        cursor := &quot; &quot; // no cursor
        if m.cursor == i {
            cursor = &quot;&amp;gt;&quot; // cursor!
        }

        // Is this choice selected?
        checked := &quot; &quot; // not selected
        if _, ok := m.selected[i]; ok {
            checked = &quot;x&quot; // selected!
        }

        // Render the row
        s += fmt.Sprintf(&quot;%s [%s] %s\n&quot;, cursor, checked, choice)
    }

    // The footer
    s += &quot;\nPress q to quit.\n&quot;

    // Send the UI for rendering
    return s
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;All Together Now&lt;/h3&gt; 
&lt;p&gt;The last step is to simply run our program. We pass our initial model to &lt;code&gt;tea.NewProgram&lt;/code&gt; and let it rip:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func main() {
    p := tea.NewProgram(initialModel())
    if _, err := p.Run(); err != nil {
        fmt.Printf(&quot;Alas, there&#39;s been an error: %v&quot;, err)
        os.Exit(1)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What’s Next?&lt;/h2&gt; 
&lt;p&gt;This tutorial covers the basics of building an interactive terminal UI, but in the real world you&#39;ll also need to perform I/O. To learn about that have a look at the &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/tree/main/tutorials/commands/&quot;&gt;Command Tutorial&lt;/a&gt;. It&#39;s pretty simple.&lt;/p&gt; 
&lt;p&gt;There are also several &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/tree/main/examples&quot;&gt;Bubble Tea examples&lt;/a&gt; available and, of course, there are &lt;a href=&quot;https://pkg.go.dev/github.com/charmbracelet/bubbletea?tab=doc&quot;&gt;Go Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;h3&gt;Debugging with Delve&lt;/h3&gt; 
&lt;p&gt;Since Bubble Tea apps assume control of stdin and stdout, you’ll need to run delve in headless mode and then connect to it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Start the debugger
$ dlv debug --headless --api-version=2 --listen=127.0.0.1:43000 .
API server listening at: 127.0.0.1:43000

# Connect to it from another terminal
$ dlv connect 127.0.0.1:43000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not explicitly supply the &lt;code&gt;--listen&lt;/code&gt; flag, the port used will vary per run, so passing this in makes the debugger easier to use from a script or your IDE of choice.&lt;/p&gt; 
&lt;p&gt;Additionally, we pass in &lt;code&gt;--api-version=2&lt;/code&gt; because delve defaults to version 1 for backwards compatibility reasons. However, delve recommends using version 2 for all new development and some clients may no longer work with version 1. For more information, see the &lt;a href=&quot;https://github.com/go-delve/delve/tree/master/Documentation/api&quot;&gt;Delve documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Logging Stuff&lt;/h3&gt; 
&lt;p&gt;You can’t really log to stdout with Bubble Tea because your TUI is busy occupying that! You can, however, log to a file by including something like the following prior to starting your Bubble Tea program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;if len(os.Getenv(&quot;DEBUG&quot;)) &amp;gt; 0 {
	f, err := tea.LogToFile(&quot;debug.log&quot;, &quot;debug&quot;)
	if err != nil {
		fmt.Println(&quot;fatal:&quot;, err)
		os.Exit(1)
	}
	defer f.Close()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see what’s being logged in real time, run &lt;code&gt;tail -f debug.log&lt;/code&gt; while you run your program in another window.&lt;/p&gt; 
&lt;h2&gt;Libraries we use with Bubble Tea&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/bubbles&quot;&gt;Bubbles&lt;/a&gt;: Common Bubble Tea components such as text inputs, viewports, spinners and so on&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/lipgloss&quot;&gt;Lip Gloss&lt;/a&gt;: Style, format and layout tools for terminal applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/harmonica&quot;&gt;Harmonica&lt;/a&gt;: A spring animation library for smooth, natural motion&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/lrstanley/bubblezone&quot;&gt;BubbleZone&lt;/a&gt;: Easy mouse event tracking for Bubble Tea components&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NimbleMarkets/ntcharts&quot;&gt;ntcharts&lt;/a&gt;: A terminal charting library built for Bubble Tea and &lt;a href=&quot;https://github.com/charmbracelet/lipgloss&quot;&gt;Lip Gloss&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bubble Tea in the Wild&lt;/h2&gt; 
&lt;p&gt;There are over &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/network/dependents&quot;&gt;10,000 applications&lt;/a&gt; built with Bubble Tea! Here are a handful of ’em.&lt;/p&gt; 
&lt;h3&gt;Staff favourites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/twpayne/chezmoi&quot;&gt;chezmoi&lt;/a&gt;: securely manage your dotfiles across multiple machines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bensadeh/circumflex&quot;&gt;circumflex&lt;/a&gt;: read Hacker News in the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.github.com/dlvhdr/gh-dash&quot;&gt;gh-dash&lt;/a&gt;: a GitHub CLI extension for PRs and issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Broderick-Westrope/tetrigo&quot;&gt;Tetrigo&lt;/a&gt;: Tetris in the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/emprcl/signls&quot;&gt;Signls&lt;/a&gt;: a generative midi sequencer designed for composition and live performance&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yorukot/superfile&quot;&gt;Superfile&lt;/a&gt;: a super file manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;In Industry&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Microsoft Azure –&amp;nbsp;&lt;a href=&quot;https://github.com/Azure/aztfy&quot;&gt;Aztify&lt;/a&gt;: bring Microsoft Azure resources under Terraform&lt;/li&gt; 
 &lt;li&gt;Daytona –&amp;nbsp;&lt;a href=&quot;https://github.com/daytonaio/daytona&quot;&gt;Daytona&lt;/a&gt;: open source dev environment manager&lt;/li&gt; 
 &lt;li&gt;Cockroach Labs – &lt;a href=&quot;https://github.com/cockroachdb/cockroach&quot;&gt;CockroachDB&lt;/a&gt;: a cloud-native, high-availability distributed SQL database&lt;/li&gt; 
 &lt;li&gt;Truffle Security Co. –&amp;nbsp;&lt;a href=&quot;https://github.com/trufflesecurity/trufflehog&quot;&gt;Trufflehog&lt;/a&gt;: find leaked credentials&lt;/li&gt; 
 &lt;li&gt;NVIDIA –&amp;nbsp;&lt;a href=&quot;https://github.com/NVIDIA/container-canary&quot;&gt;container-canary&lt;/a&gt;: a container validator&lt;/li&gt; 
 &lt;li&gt;AWS –&amp;nbsp;&lt;a href=&quot;https://github.com/awslabs/eks-node-viewer&quot;&gt;eks-node-viewer&lt;/a&gt;: a tool for visualizing dynamic node usage within an EKS cluster&lt;/li&gt; 
 &lt;li&gt;MinIO –&amp;nbsp;&lt;a href=&quot;https://github.com/minio/mc&quot;&gt;mc&lt;/a&gt;: the official &lt;a href=&quot;https://min.io&quot;&gt;MinIO&lt;/a&gt; client&lt;/li&gt; 
 &lt;li&gt;Ubuntu –&amp;nbsp;&lt;a href=&quot;https://github.com/ubuntu/authd&quot;&gt;Authd&lt;/a&gt;: an authentication daemon for cloud-based identity providers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Charm stuff&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/glow&quot;&gt;Glow&lt;/a&gt;: a markdown reader, browser, and online markdown stash&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/huh&quot;&gt;Huh?&lt;/a&gt;: an interactive prompt and form toolkit&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/mods&quot;&gt;Mods&lt;/a&gt;: AI on the CLI, built for pipelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/charmbracelet/wishlist&quot;&gt;Wishlist&lt;/a&gt;: an SSH directory (and bastion!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;There’s so much more where that came from&lt;/h3&gt; 
&lt;p&gt;For more applications built with Bubble Tea see &lt;a href=&quot;https://github.com/charm-and-friends/charm-in-the-wild&quot;&gt;Charm &amp;amp; Friends&lt;/a&gt;. Is there something cool you made with Bubble Tea you want to share? &lt;a href=&quot;https://github.com/charm-and-friends/charm-in-the-wild&quot;&gt;PRs&lt;/a&gt; are welcome!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/charmbracelet/bubbletea/contribute&quot;&gt;contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;p&gt;We’d love to hear your thoughts on this project. Feel free to drop us a note!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/charmcli&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mastodon.social/@charmcli&quot;&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://charm.sh/chat&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Bubble Tea is based on the paradigms of &lt;a href=&quot;https://guide.elm-lang.org/architecture/&quot;&gt;The Elm Architecture&lt;/a&gt; by Evan Czaplicki et alia and the excellent &lt;a href=&quot;https://github.com/tj/go-tea&quot;&gt;go-tea&lt;/a&gt; by TJ Holowaychuk. It’s inspired by the many great &lt;a href=&quot;https://de.wikipedia.org/wiki/Zeichenorientierte_Benutzerschnittstelle&quot;&gt;&lt;em&gt;Zeichenorientierte Benutzerschnittstellen&lt;/em&gt;&lt;/a&gt; of days past.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/charmbracelet/bubbletea/raw/main/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Part of &lt;a href=&quot;https://charm.sh&quot;&gt;Charm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://charm.sh/&quot;&gt;&lt;img alt=&quot;The Charm logo&quot; src=&quot;https://stuff.charm.sh/charm-badge.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Charm热爱开源 • Charm loves open source • نحنُ نحب المصادر المفتوحة&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>containerd/containerd</title>
      <link>https://github.com/containerd/containerd</link>
      <description>&lt;p&gt;An open and reliable container runtime&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/color/containerd-horizontal-color.png#gh-light-mode-only&quot; alt=&quot;containerd banner light mode&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/white/containerd-horizontal-white.png#gh-dark-mode-only&quot; alt=&quot;containerd banner dark mode&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://pkg.go.dev/github.com/containerd/containerd/v2&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/containerd/containerd/v2&quot; alt=&quot;PkgGoDev&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/containerd/containerd/actions?query=workflow%3ACI+event%3Amerge_group&quot;&gt;&lt;img src=&quot;https://github.com/containerd/containerd/actions/workflows/ci.yml/badge.svg?event=merge_group&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/containerd/containerd/actions?query=workflow%3ANightly&quot;&gt;&lt;img src=&quot;https://github.com/containerd/containerd/workflows/Nightly/badge.svg?sanitize=true&quot; alt=&quot;Nightlies&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/containerd/containerd/v2&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/containerd/containerd/v2&quot; alt=&quot;Go Report Card&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/1271&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/1271/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/containerd/containerd&quot;&gt;&lt;img src=&quot;https://api.scorecard.dev/projects/github.com/containerd/containerd/badge&quot; alt=&quot;OpenSSF Scorecard&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/containerd/containerd/actions/workflows/links.yml&quot;&gt;&lt;img src=&quot;https://github.com/containerd/containerd/actions/workflows/links.yml/badge.svg?sanitize=true&quot; alt=&quot;Check Links&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;containerd is an industry-standard container runtime with an emphasis on simplicity, robustness, and portability. It is available as a daemon for Linux and Windows, which can manage the complete container lifecycle of its host system: image transfer and storage, container execution and supervision, low-level storage and network attachments, etc.&lt;/p&gt; 
&lt;p&gt;containerd is a member of CNCF with &lt;a href=&quot;https://landscape.cncf.io/?selected=containerd&quot;&gt;&#39;graduated&#39;&lt;/a&gt; status.&lt;/p&gt; 
&lt;p&gt;containerd is designed to be embedded into a larger system, rather than being used directly by developers or end-users.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/historical/design/architecture.png&quot; alt=&quot;architecture&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Announcements&lt;/h2&gt; 
&lt;h3&gt;containerd v2.0 is now released!&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/containerd-2.0.md&quot;&gt;&lt;code&gt;docs/containerd-2.0.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Now Recruiting&lt;/h3&gt; 
&lt;p&gt;We are a large inclusive OSS project that is welcoming help of any kind shape or form:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation help is needed to make the product easier to consume and extend.&lt;/li&gt; 
 &lt;li&gt;We need OSS community outreach/organizing help to get the word out; manage and create messaging and educational content; and help with social media, community forums/groups, and google groups.&lt;/li&gt; 
 &lt;li&gt;We are actively inviting new &lt;a href=&quot;https://github.com/containerd/project/raw/main/GOVERNANCE.md#security-advisors&quot;&gt;security advisors&lt;/a&gt; to join the team.&lt;/li&gt; 
 &lt;li&gt;New subprojects are being created, core and non-core that could use additional development help.&lt;/li&gt; 
 &lt;li&gt;Each of the &lt;a href=&quot;https://github.com/containerd&quot;&gt;containerd projects&lt;/a&gt; has a list of issues currently being worked on or that need help resolving. 
  &lt;ul&gt; 
   &lt;li&gt;If the issue has not already been assigned to someone or has not made recent progress, and you are interested, please inquire.&lt;/li&gt; 
   &lt;li&gt;If you are interested in starting with a smaller/beginner-level issue, look for issues with an &lt;code&gt;exp/beginner&lt;/code&gt; tag, for example &lt;a href=&quot;https://github.com/containerd/containerd/issues?q=is%3Aissue+is%3Aopen+label%3Aexp%2Fbeginner&quot;&gt;containerd/containerd beginner issues.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;See our documentation on &lt;a href=&quot;https://containerd.io&quot;&gt;containerd.io&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/ops.md&quot;&gt;for ops and admins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/namespaces.md&quot;&gt;namespaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/client-opts.md&quot;&gt;client options&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started contributing to containerd, see &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are interested in trying out containerd see our example at &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md&quot;&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;There are nightly builds available for download &lt;a href=&quot;https://github.com/containerd/containerd/actions?query=workflow%3ANightly&quot;&gt;here&lt;/a&gt;. Binaries are generated from &lt;code&gt;main&lt;/code&gt; branch every night for &lt;code&gt;Linux&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please be aware: nightly builds might have critical bugs, it&#39;s not recommended for use in production and no support provided.&lt;/p&gt; 
&lt;h2&gt;Kubernetes (k8s) CI Dashboard Group&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://testgrid.k8s.io/containerd&quot;&gt;k8s CI dashboard group for containerd&lt;/a&gt; contains test results regarding the health of kubernetes when run against main and a number of containerd release branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testgrid.k8s.io/containerd-periodic&quot;&gt;containerd-periodics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Runtime Requirements&lt;/h2&gt; 
&lt;p&gt;Runtime requirements for containerd are very minimal. Most interactions with the Linux and Windows container feature sets are handled via &lt;a href=&quot;https://github.com/opencontainers/runc&quot;&gt;runc&lt;/a&gt; and/or OS-specific libraries (e.g. &lt;a href=&quot;https://github.com/Microsoft/hcsshim&quot;&gt;hcsshim&lt;/a&gt; for Microsoft). The current required version of &lt;code&gt;runc&lt;/code&gt; is described in &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/RUNC.md&quot;&gt;RUNC.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are specific features used by containerd core code and snapshotters that will require a minimum kernel version on Linux. With the understood caveat of distro kernel versioning, a reasonable starting point for Linux is a minimum 4.x kernel version.&lt;/p&gt; 
&lt;p&gt;The overlay filesystem snapshotter, used by default, uses features that were finalized in the 4.x kernel series. If you choose to use btrfs, there may be more flexibility in kernel version (minimum recommended is 3.18), but will require the btrfs kernel module and btrfs tools to be installed on your Linux distribution.&lt;/p&gt; 
&lt;p&gt;To use Linux checkpoint and restore features, you will need &lt;code&gt;criu&lt;/code&gt; installed on your system. See more details in &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/#checkpoint-and-restore&quot;&gt;Checkpoint and Restore&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Build requirements for developers are listed in &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/BUILDING.md&quot;&gt;BUILDING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Registries&lt;/h2&gt; 
&lt;p&gt;Any registry which is compliant with the &lt;a href=&quot;https://github.com/opencontainers/distribution-spec&quot;&gt;OCI Distribution Specification&lt;/a&gt; is supported by containerd.&lt;/p&gt; 
&lt;p&gt;For configuring registries, see &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/hosts.md&quot;&gt;registry host configuration documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;For a detailed overview of containerd&#39;s core concepts and the features it supports, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/features.md&quot;&gt;FEATURES.MD&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Releases and API Stability&lt;/h3&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/RELEASES.md&quot;&gt;RELEASES.md&lt;/a&gt; for details on versioning and stability of containerd components.&lt;/p&gt; 
&lt;p&gt;Downloadable 64-bit Intel/AMD binaries of all official releases are available on our &lt;a href=&quot;https://github.com/containerd/containerd/releases&quot;&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For other architectures and distribution support, you will find that many Linux distributions package their own containerd and provide it across several architectures, such as &lt;a href=&quot;https://launchpad.net/ubuntu/bionic/+package/containerd&quot;&gt;Canonical&#39;s Ubuntu packaging&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Enabling command auto-completion&lt;/h4&gt; 
&lt;p&gt;Starting with containerd 1.4, the urfave client feature for auto-creation of bash and zsh autocompletion data is enabled. To use the autocomplete feature in a bash shell for example, source the autocomplete/ctr file in your &lt;code&gt;.bashrc&lt;/code&gt;, or manually like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ source ./contrib/autocomplete/ctr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Distribution of &lt;code&gt;ctr&lt;/code&gt; autocomplete for bash and zsh&lt;/h4&gt; 
&lt;p&gt;For bash, copy the &lt;code&gt;contrib/autocomplete/ctr&lt;/code&gt; script into &lt;code&gt;/etc/bash_completion.d/&lt;/code&gt; and rename it to &lt;code&gt;ctr&lt;/code&gt;. The &lt;code&gt;zsh_autocomplete&lt;/code&gt; file is also available and can be used similarly for zsh users.&lt;/p&gt; 
&lt;p&gt;Provide documentation to users to &lt;code&gt;source&lt;/code&gt; this file into their shell if you don&#39;t place the autocomplete file in a location where it is automatically loaded for the user&#39;s shell environment.&lt;/p&gt; 
&lt;h3&gt;CRI&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a &lt;a href=&quot;https://containerd.io/&quot;&gt;containerd&lt;/a&gt; plugin implementation of the Kubernetes &lt;a href=&quot;https://github.com/kubernetes/cri-api/raw/master/pkg/apis/runtime/v1/api.proto&quot;&gt;container runtime interface (CRI)&lt;/a&gt;. With it, you are able to use containerd as the container runtime for a Kubernetes cluster.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/cri.png&quot; alt=&quot;cri&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;CRI Status&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a native plugin of containerd. Since containerd 1.1, the cri plugin is built into the release binaries and enabled by default.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;cri&lt;/code&gt; plugin has reached GA status, representing that it is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature complete&lt;/li&gt; 
 &lt;li&gt;Works with Kubernetes 1.10 and above&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href=&quot;https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md&quot;&gt;CRI validation tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href=&quot;https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/e2e-node-tests.md&quot;&gt;node e2e tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href=&quot;https://github.com/kubernetes/community/raw/master/contributors/devel/sig-testing/e2e-tests.md&quot;&gt;e2e tests&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See results on the containerd k8s &lt;a href=&quot;https://testgrid.k8s.io/containerd&quot;&gt;test dashboard&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Validating Your &lt;code&gt;cri&lt;/code&gt; Setup&lt;/h4&gt; 
&lt;p&gt;A Kubernetes incubator project, &lt;a href=&quot;https://github.com/kubernetes-sigs/cri-tools&quot;&gt;cri-tools&lt;/a&gt;, includes programs for exercising CRI implementations. More importantly, cri-tools includes the program &lt;code&gt;critest&lt;/code&gt; which is used for running &lt;a href=&quot;https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md&quot;&gt;CRI Validation Testing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;CRI Guides&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/contrib/ansible/README.md&quot;&gt;Installing with Ansible and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md&quot;&gt;For Non-Ansible Users, Preforming a Custom Installation Using the Release Tarball and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/testing.md&quot;&gt;CRI Plugin Testing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/crictl.md&quot;&gt;Debugging Pods, Containers, and Images with &lt;code&gt;crictl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/config.md&quot;&gt;Configuring &lt;code&gt;cri&lt;/code&gt; Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/containerd/containerd/raw/main/docs/man/containerd-config.8.md&quot;&gt;Configuring containerd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication&lt;/h3&gt; 
&lt;p&gt;For async communication and long-running discussions please use issues and pull requests on the GitHub repo. This will be the best place to discuss design and implementation.&lt;/p&gt; 
&lt;p&gt;For sync communication catch us in the &lt;code&gt;#containerd&lt;/code&gt; and &lt;code&gt;#containerd-dev&lt;/code&gt; Slack channels on Cloud Native Computing Foundation&#39;s (CNCF) Slack - &lt;code&gt;cloud-native.slack.com&lt;/code&gt;. Everyone is welcome to join and chat. &lt;a href=&quot;https://slack.cncf.io&quot;&gt;Get Invite to CNCF Slack.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join our next community meeting hosted on Zoom. The schedule is posted on the &lt;a href=&quot;https://www.cncf.io/calendar/&quot;&gt;CNCF Calendar&lt;/a&gt; (search &#39;containerd&#39; to filter).&lt;/p&gt; 
&lt;h3&gt;Security audit&lt;/h3&gt; 
&lt;p&gt;Security audits for the containerd project are hosted on our website. Please see the &lt;a href=&quot;https://containerd.io/security/&quot;&gt;security page at containerd.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Reporting security issues&lt;/h3&gt; 
&lt;p&gt;Please follow the instructions at &lt;a href=&quot;https://github.com/containerd/project/raw/main/SECURITY.md#reporting-a-vulnerability&quot;&gt;containerd/project&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;The containerd codebase is released under the &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/LICENSE&quot;&gt;Apache 2.0 license&lt;/a&gt;. The README.md file and files in the &quot;docs&quot; folder are licensed under the Creative Commons Attribution 4.0 International License. You may obtain a copy of the license, titled CC-BY-4.0, at &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project details&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;containerd&lt;/strong&gt; is the primary open source project within the broader containerd GitHub organization. However, all projects within the repo have common maintainership, governance, and contributing guidelines which are stored in a &lt;code&gt;project&lt;/code&gt; repository commonly for all containerd projects.&lt;/p&gt; 
&lt;p&gt;Please find all these core project documents, including the:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/containerd/project/raw/main/GOVERNANCE.md&quot;&gt;Project governance&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/containerd/project/raw/main/MAINTAINERS&quot;&gt;Maintainers&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;and &lt;a href=&quot;https://github.com/containerd/project/raw/main/CONTRIBUTING.md&quot;&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;information in our &lt;a href=&quot;https://github.com/containerd/project&quot;&gt;&lt;code&gt;containerd/project&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Adoption&lt;/h2&gt; 
&lt;p&gt;Interested to see who is using containerd? Are you using containerd in a project? Please add yourself via pull request to our &lt;a href=&quot;https://raw.githubusercontent.com/containerd/containerd/main/ADOPTERS.md&quot;&gt;ADOPTERS.md&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>googleapis/google-cloud-go</title>
      <link>https://github.com/googleapis/google-cloud-go</link>
      <description>&lt;p&gt;Google Cloud Client Libraries for Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Cloud Client Libraries for Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://pkg.go.dev/cloud.google.com/go&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/cloud.google.com/go.svg?sanitize=true&quot; alt=&quot;Go Reference&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Go packages for &lt;a href=&quot;https://cloud.google.com&quot;&gt;Google Cloud Platform&lt;/a&gt; services.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;go get cloud.google.com/go/firestore@latest # Replace firestore with the package you want to use.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Some of these packages are under development, and may occasionally make backwards-incompatible changes.&lt;/p&gt; 
&lt;h2&gt;Supported APIs&lt;/h2&gt; 
&lt;p&gt;For an updated list of all of our released APIs please see our &lt;a href=&quot;https://cloud.google.com/go/docs/reference&quot;&gt;reference docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/googleapis/google-cloud-go/main/#supported-versions&quot;&gt;Go Versions Supported&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Our libraries are compatible with the two most recent major Go releases, the same &lt;a href=&quot;https://go.dev/doc/devel/release#policy&quot;&gt;policy&lt;/a&gt; the Go programming language follows. This means the currently supported versions are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.23&lt;/li&gt; 
 &lt;li&gt;Go 1.24&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;By default, each client library will use &lt;a href=&quot;https://developers.google.com/identity/protocols/application-default-credentials&quot;&gt;Application Default Credentials&lt;/a&gt; (ADC) to automatically configure the credentials used in calling the API endpoint. When using the libraries in a Google Cloud Platform environment such as Compute Engine, Kubernetes Engine, or App Engine, no additional authentication steps are necessary. See &lt;a href=&quot;https://cloud.google.com/docs/authentication&quot;&gt;Authentication methods at Google&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/docs/authentication/client-libraries&quot;&gt;Authenticate for using client libraries&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;client, err := storage.NewClient(ctx)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For applications running elsewhere, such as your local development environment, you can use the &lt;code&gt;gcloud auth application-default login&lt;/code&gt; command from the &lt;a href=&quot;https://cloud.google.com/cli&quot;&gt;Google Cloud CLI&lt;/a&gt; to set user credentials in your local filesystem. Application Default Credentials will automatically detect these credentials. See &lt;a href=&quot;https://cloud.google.com/docs/authentication/set-up-adc-local-dev-environment&quot;&gt;Set up ADC for a local development environment&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;Alternately, you may need to provide an explicit path to your credentials. To authenticate using a &lt;a href=&quot;https://cloud.google.com/docs/authentication#service-accounts&quot;&gt;service account&lt;/a&gt; key file, either set the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable to the path to your key file, or programmatically pass &lt;a href=&quot;https://pkg.go.dev/google.golang.org/api/option#WithCredentialsFile&quot;&gt;&lt;code&gt;option.WithCredentialsFile&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;NewClient&lt;/code&gt; function of the desired package. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;client, err := storage.NewClient(ctx, option.WithCredentialsFile(&quot;path/to/keyfile.json&quot;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can exert even more control over authentication by using the &lt;a href=&quot;https://pkg.go.dev/cloud.google.com/go/auth/credentials&quot;&gt;credentials&lt;/a&gt; package to create an &lt;a href=&quot;https://pkg.go.dev/cloud.google.com/go/auth#Credentials&quot;&gt;auth.Credentials&lt;/a&gt;. Then pass &lt;a href=&quot;https://pkg.go.dev/google.golang.org/api/option#WithAuthCredentials&quot;&gt;&lt;code&gt;option.WithAuthCredentials&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;NewClient&lt;/code&gt; function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;creds, err := credentials.DetectDefault(&amp;amp;credentials.DetectOptions{...})
...
client, err := storage.NewClient(ctx, option.WithAuthCredentials(creds))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href=&quot;https://github.com/GoogleCloudPlatform/google-cloud-go/raw/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; document for details.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href=&quot;https://github.com/GoogleCloudPlatform/google-cloud-go/raw/main/CONTRIBUTING.md#contributor-code-of-conduct&quot;&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/go/home&quot;&gt;Go on Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/go/getting-started&quot;&gt;Getting started with Go on Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/appengine/docs/standard/go/quickstart&quot;&gt;App Engine Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/functions/docs/quickstart-go&quot;&gt;Cloud Functions Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/run/docs/quickstarts/build-and-deploy#go&quot;&gt;Cloud Run Quickstart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jesseduffield/lazygit</title>
      <link>https://github.com/jesseduffield/lazygit</link>
      <description>&lt;p&gt;simple terminal UI for git commands&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=lazygit_20231023&quot;&gt; 
  &lt;div&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/warp.png&quot; width=&quot;330&quot; alt=&quot;Warp&quot; /&gt; 
  &lt;/div&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;b&gt;Available for MacOS and Linux&lt;/b&gt; &lt;br /&gt; 
  &lt;div&gt; 
   &lt;sup&gt;Visit&amp;nbsp;warp.dev&amp;nbsp;to learn more.&lt;/sup&gt; 
  &lt;/div&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;a href=&quot;https://www.subble.com&quot;&gt; 
  &lt;div&gt; 
   &lt;img src=&quot;https://subble-marketing-portal-media-storage.s3.amazonaws.com/images/subble-black-name-logo.svg?sanitize=true&quot; width=&quot;230&quot; alt=&quot;Subble&quot; /&gt; 
  &lt;/div&gt; &lt;b&gt;I (Jesse) co-founded Subble to save your company time and money by helping you manage its software subscriptions. Check it out!&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;536&quot; src=&quot;https://user-images.githubusercontent.com/8456633/174470852-339b5011-5800-4bb9-a628-ff230aa8cd4e.png&quot; /&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;A simple terminal UI for git commands &lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/jesseduffield/lazygit/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/jesseduffield/lazygit/total&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/jesseduffield/lazygit&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/jesseduffield/lazygit&quot; alt=&quot;Go Report Card&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codacy.com/gh/jesseduffield/lazygit/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade&quot;&gt;&lt;img src=&quot;https://app.codacy.com/project/badge/Grade/f46416b715d74622895657935fcada21&quot; alt=&quot;Codacy Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://app.codacy.com/gh/jesseduffield/lazygit/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_coverage&quot;&gt;&lt;img src=&quot;https://app.codacy.com/project/badge/Coverage/f46416b715d74622895657935fcada21&quot; alt=&quot;Codacy Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://golangci-lint.run/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/linted%20by-golangci--lint-brightgreen&quot; alt=&quot;golangci-lint&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jesseduffield/lazygit/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/tag/jesseduffield/lazygit?color=blue&quot; alt=&quot;GitHub tag&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://formulae.brew.sh/formula/lazygit&quot;&gt;&lt;img src=&quot;https://img.shields.io/homebrew/v/lazygit?color=blue&quot; alt=&quot;homebrew&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/commit_and_push-compressed.gif&quot; alt=&quot;commit_and_push&quot; /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; Maintenance of this project is made possible by all the &lt;a href=&quot;https://github.com/jesseduffield/lazygit/graphs/contributors&quot;&gt;contributors&lt;/a&gt; and &lt;a href=&quot;https://github.com/sponsors/jesseduffield&quot;&gt;sponsors&lt;/a&gt;. If you&#39;d like to sponsor this project and have your avatar or company logo appear below &lt;a href=&quot;https://github.com/sponsors/jesseduffield&quot;&gt;click here&lt;/a&gt;. 💙 &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; 
 &lt;!-- sponsors --&gt;&lt;a href=&quot;https://github.com/intabulas&quot;&gt;&lt;img src=&quot;https://github.com/intabulas.png&quot; width=&quot;60px&quot; alt=&quot;Mark Lussier&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/peppy&quot;&gt;&lt;img src=&quot;https://github.com/peppy.png&quot; width=&quot;60px&quot; alt=&quot;Dean Herbert&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/piot&quot;&gt;&lt;img src=&quot;https://github.com/piot.png&quot; width=&quot;60px&quot; alt=&quot;Peter Bjorklund&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/rgwood&quot;&gt;&lt;img src=&quot;https://github.com/rgwood.png&quot; width=&quot;60px&quot; alt=&quot;Reilly Wood&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/oliverguenther&quot;&gt;&lt;img src=&quot;https://github.com/oliverguenther.png&quot; width=&quot;60px&quot; alt=&quot;Oliver Günther&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/pawanjay176&quot;&gt;&lt;img src=&quot;https://github.com/pawanjay176.png&quot; width=&quot;60px&quot; alt=&quot;Pawan Dhananjay&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/bdach&quot;&gt;&lt;img src=&quot;https://github.com/bdach.png&quot; width=&quot;60px&quot; alt=&quot;Bartłomiej Dach&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/carstengehling&quot;&gt;&lt;img src=&quot;https://github.com/carstengehling.png&quot; width=&quot;60px&quot; alt=&quot;Carsten Gehling&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ceuk&quot;&gt;&lt;img src=&quot;https://github.com/ceuk.png&quot; width=&quot;60px&quot; alt=&quot;CEUK&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Xetera&quot;&gt;&lt;img src=&quot;https://github.com/Xetera.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/HoldenLucas&quot;&gt;&lt;img src=&quot;https://github.com/HoldenLucas.png&quot; width=&quot;60px&quot; alt=&quot;Holden Lucas&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/nartc&quot;&gt;&lt;img src=&quot;https://github.com/nartc.png&quot; width=&quot;60px&quot; alt=&quot;Chau Tran&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/matejcik&quot;&gt;&lt;img src=&quot;https://github.com/matejcik.png&quot; width=&quot;60px&quot; alt=&quot;matejcik&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/lucatume&quot;&gt;&lt;img src=&quot;https://github.com/lucatume.png&quot; width=&quot;60px&quot; alt=&quot;theAverageDev (Luca Tumedei)&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/IvanZuy&quot;&gt;&lt;img src=&quot;https://github.com/IvanZuy.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/nicholascloud&quot;&gt;&lt;img src=&quot;https://github.com/nicholascloud.png&quot; width=&quot;60px&quot; alt=&quot;Nicholas Cloud&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ava1ar&quot;&gt;&lt;img src=&quot;https://github.com/ava1ar.png&quot; width=&quot;60px&quot; alt=&quot;Aliaksandr Stelmachonak&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/minidfx&quot;&gt;&lt;img src=&quot;https://github.com/minidfx.png&quot; width=&quot;60px&quot; alt=&quot;Burgy Benjamin&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/JoeKlemmer&quot;&gt;&lt;img src=&quot;https://github.com/JoeKlemmer.png&quot; width=&quot;60px&quot; alt=&quot;Joe Klemmer&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/tobi&quot;&gt;&lt;img src=&quot;https://github.com/tobi.png&quot; width=&quot;60px&quot; alt=&quot;Tobias Lütke&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/benbfortis&quot;&gt;&lt;img src=&quot;https://github.com/benbfortis.png&quot; width=&quot;60px&quot; alt=&quot;Ben Beaumont&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/jakewarren&quot;&gt;&lt;img src=&quot;https://github.com/jakewarren.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/tgpholly&quot;&gt;&lt;img src=&quot;https://github.com/tgpholly.png&quot; width=&quot;60px&quot; alt=&quot;Holly&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/socketbox&quot;&gt;&lt;img src=&quot;https://github.com/socketbox.png&quot; width=&quot;60px&quot; alt=&quot;Casey Boettcher&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/bitprophet&quot;&gt;&lt;img src=&quot;https://github.com/bitprophet.png&quot; width=&quot;60px&quot; alt=&quot;Jeff Forcier&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/tayleighr&quot;&gt;&lt;img src=&quot;https://github.com/tayleighr.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Novakov&quot;&gt;&lt;img src=&quot;https://github.com/Novakov.png&quot; width=&quot;60px&quot; alt=&quot;Maciej T. Nowak&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/nekhaevskiy&quot;&gt;&lt;img src=&quot;https://github.com/nekhaevskiy.png&quot; width=&quot;60px&quot; alt=&quot;Yury&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/reivilibre&quot;&gt;&lt;img src=&quot;https://github.com/reivilibre.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/andreaskurth&quot;&gt;&lt;img src=&quot;https://github.com/andreaskurth.png&quot; width=&quot;60px&quot; alt=&quot;Andreas Kurth&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/BSteffaniak&quot;&gt;&lt;img src=&quot;https://github.com/BSteffaniak.png&quot; width=&quot;60px&quot; alt=&quot;Braden Steffaniak&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/jordan-gillard&quot;&gt;&lt;img src=&quot;https://github.com/jordan-gillard.png&quot; width=&quot;60px&quot; alt=&quot;Jordan Gillard&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/smangels&quot;&gt;&lt;img src=&quot;https://github.com/smangels.png&quot; width=&quot;60px&quot; alt=&quot;Sebastian&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/amslezak&quot;&gt;&lt;img src=&quot;https://github.com/amslezak.png&quot; width=&quot;60px&quot; alt=&quot;Andy Slezak&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mkock&quot;&gt;&lt;img src=&quot;https://github.com/mkock.png&quot; width=&quot;60px&quot; alt=&quot;Martin Kock&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/jessealama&quot;&gt;&lt;img src=&quot;https://github.com/jessealama.png&quot; width=&quot;60px&quot; alt=&quot;Jesse Alama&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/danielkokott&quot;&gt;&lt;img src=&quot;https://github.com/danielkokott.png&quot; width=&quot;60px&quot; alt=&quot;Daniel Kokott&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/heijmans&quot;&gt;&lt;img src=&quot;https://github.com/heijmans.png&quot; width=&quot;60px&quot; alt=&quot;Jan Heijmans&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/knowald&quot;&gt;&lt;img src=&quot;https://github.com/knowald.png&quot; width=&quot;60px&quot; alt=&quot;Kevin Nowald&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/omarluq&quot;&gt;&lt;img src=&quot;https://github.com/omarluq.png&quot; width=&quot;60px&quot; alt=&quot;Omar Luq&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ethanjli&quot;&gt;&lt;img src=&quot;https://github.com/ethanjli.png&quot; width=&quot;60px&quot; alt=&quot;Ethan Li&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/phubaba&quot;&gt;&lt;img src=&quot;https://github.com/phubaba.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/canhazcodez&quot;&gt;&lt;img src=&quot;https://github.com/canhazcodez.png&quot; width=&quot;60px&quot; alt=&quot;Maxi&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/neunkasulle&quot;&gt;&lt;img src=&quot;https://github.com/neunkasulle.png&quot; width=&quot;60px&quot; alt=&quot;Jan Zenkner&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/RVxLab&quot;&gt;&lt;img src=&quot;https://github.com/RVxLab.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/FrederickGeek8&quot;&gt;&lt;img src=&quot;https://github.com/FrederickGeek8.png&quot; width=&quot;60px&quot; alt=&quot;Frederick Morlock&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ezdac&quot;&gt;&lt;img src=&quot;https://github.com/ezdac.png&quot; width=&quot;60px&quot; alt=&quot;Maximilian Langenfeld&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/dbuls&quot;&gt;&lt;img src=&quot;https://github.com/dbuls.png&quot; width=&quot;60px&quot; alt=&quot;Davis Buls&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/lppassos&quot;&gt;&lt;img src=&quot;https://github.com/lppassos.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/neilcode&quot;&gt;&lt;img src=&quot;https://github.com/neilcode.png&quot; width=&quot;60px&quot; alt=&quot;Neil Lambert&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/dhh&quot;&gt;&lt;img src=&quot;https://github.com/dhh.png&quot; width=&quot;60px&quot; alt=&quot;David Heinemeier Hansson&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ethanfischer&quot;&gt;&lt;img src=&quot;https://github.com/ethanfischer.png&quot; width=&quot;60px&quot; alt=&quot;Ethan Fischer&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/poshboytl&quot;&gt;&lt;img src=&quot;https://github.com/poshboytl.png&quot; width=&quot;60px&quot; alt=&quot;Terry Tai&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/roesnera&quot;&gt;&lt;img src=&quot;https://github.com/roesnera.png&quot; width=&quot;60px&quot; alt=&quot;Adam Roesner&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/seven1m&quot;&gt;&lt;img src=&quot;https://github.com/seven1m.png&quot; width=&quot;60px&quot; alt=&quot;Tim Morgan&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/sgoridotla1&quot;&gt;&lt;img src=&quot;https://github.com/sgoridotla1.png&quot; width=&quot;60px&quot; alt=&quot;Max Shypulniak&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ADIX7&quot;&gt;&lt;img src=&quot;https://github.com/ADIX7.png&quot; width=&quot;60px&quot; alt=&quot;Kovács Ádám&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/slowdub&quot;&gt;&lt;img src=&quot;https://github.com/slowdub.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/serranomorante&quot;&gt;&lt;img src=&quot;https://github.com/serranomorante.png&quot; width=&quot;60px&quot; alt=&quot;Patricio Serrano&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/kiriDevs&quot;&gt;&lt;img src=&quot;https://github.com/kiriDevs.png&quot; width=&quot;60px&quot; alt=&quot;Kiri&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Bparsons0904&quot;&gt;&lt;img src=&quot;https://github.com/Bparsons0904.png&quot; width=&quot;60px&quot; alt=&quot;Bob Parsons&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/bjornevik&quot;&gt;&lt;img src=&quot;https://github.com/bjornevik.png&quot; width=&quot;60px&quot; alt=&quot;John Even Bjørnevik&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/moberst&quot;&gt;&lt;img src=&quot;https://github.com/moberst.png&quot; width=&quot;60px&quot; alt=&quot;Michael Oberst&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/stianh&quot;&gt;&lt;img src=&quot;https://github.com/stianh.png&quot; width=&quot;60px&quot; alt=&quot;Stian Hegglund&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/adam-e-trepanier&quot;&gt;&lt;img src=&quot;https://github.com/adam-e-trepanier.png&quot; width=&quot;60px&quot; alt=&quot;Adam Trepanier&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/arkalon76&quot;&gt;&lt;img src=&quot;https://github.com/arkalon76.png&quot; width=&quot;60px&quot; alt=&quot;Kenth Fagerlund&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Djuuu&quot;&gt;&lt;img src=&quot;https://github.com/Djuuu.png&quot; width=&quot;60px&quot; alt=&quot;Julien Tardot&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/antikytheraton&quot;&gt;&lt;img src=&quot;https://github.com/antikytheraton.png&quot; width=&quot;60px&quot; alt=&quot;Aaron Arredondo&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ellord&quot;&gt;&lt;img src=&quot;https://github.com/ellord.png&quot; width=&quot;60px&quot; alt=&quot;Ellord Tayag&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/EdgarPost&quot;&gt;&lt;img src=&quot;https://github.com/EdgarPost.png&quot; width=&quot;60px&quot; alt=&quot;Edgar Post-Buijs&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/sbc64&quot;&gt;&lt;img src=&quot;https://github.com/sbc64.png&quot; width=&quot;60px&quot; alt=&quot;sbc64&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/caillou&quot;&gt;&lt;img src=&quot;https://github.com/caillou.png&quot; width=&quot;60px&quot; alt=&quot;Pierre Spring&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mebezac&quot;&gt;&lt;img src=&quot;https://github.com/mebezac.png&quot; width=&quot;60px&quot; alt=&quot;Zac Clay&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Tom94&quot;&gt;&lt;img src=&quot;https://github.com/Tom94.png&quot; width=&quot;60px&quot; alt=&quot;Thomas Müller&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ccssmnn&quot;&gt;&lt;img src=&quot;https://github.com/ccssmnn.png&quot; width=&quot;60px&quot; alt=&quot;Carl Assmann&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ognevsd&quot;&gt;&lt;img src=&quot;https://github.com/ognevsd.png&quot; width=&quot;60px&quot; alt=&quot;Sergey Ognev&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/moodyhunter&quot;&gt;&lt;img src=&quot;https://github.com/moodyhunter.png&quot; width=&quot;60px&quot; alt=&quot;Moody Liu&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/code-hunger&quot;&gt;&lt;img src=&quot;https://github.com/code-hunger.png&quot; width=&quot;60px&quot; alt=&quot;Alex G&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/elithper&quot;&gt;&lt;img src=&quot;https://github.com/elithper.png&quot; width=&quot;60px&quot; alt=&quot;Michael Howard&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/LasseBloch&quot;&gt;&lt;img src=&quot;https://github.com/LasseBloch.png&quot; width=&quot;60px&quot; alt=&quot;Lasse Bloch Lauritsen&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/lmarburger&quot;&gt;&lt;img src=&quot;https://github.com/lmarburger.png&quot; width=&quot;60px&quot; alt=&quot;Larry Marburger&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/dbrockman&quot;&gt;&lt;img src=&quot;https://github.com/dbrockman.png&quot; width=&quot;60px&quot; alt=&quot;David Brockman&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/slavshik&quot;&gt;&lt;img src=&quot;https://github.com/slavshik.png&quot; width=&quot;60px&quot; alt=&quot;Alexander Slavschik&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/aidalgol&quot;&gt;&lt;img src=&quot;https://github.com/aidalgol.png&quot; width=&quot;60px&quot; alt=&quot;Aidan Gauland&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mbienkowsk&quot;&gt;&lt;img src=&quot;https://github.com/mbienkowsk.png&quot; width=&quot;60px&quot; alt=&quot;Maksym Bieńkowski&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/joshuawootonn&quot;&gt;&lt;img src=&quot;https://github.com/joshuawootonn.png&quot; width=&quot;60px&quot; alt=&quot;Joshua Wootonn&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/I4nJ&quot;&gt;&lt;img src=&quot;https://github.com/I4nJ.png&quot; width=&quot;60px&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/gurbindersingh&quot;&gt;&lt;img src=&quot;https://github.com/gurbindersingh.png&quot; width=&quot;60px&quot; alt=&quot;Gurbinder Singh&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/sandviklee&quot;&gt;&lt;img src=&quot;https://github.com/sandviklee.png&quot; width=&quot;60px&quot; alt=&quot;Simon Sandvik Lee&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/glagnar&quot;&gt;&lt;img src=&quot;https://github.com/glagnar.png&quot; width=&quot;60px&quot; alt=&quot;Thomas Gilbert&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/skrzepto&quot;&gt;&lt;img src=&quot;https://github.com/skrzepto.png&quot; width=&quot;60px&quot; alt=&quot;Szymon Mucha&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/TimShilov&quot;&gt;&lt;img src=&quot;https://github.com/TimShilov.png&quot; width=&quot;60px&quot; alt=&quot;Tim Shilov&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/unnawut&quot;&gt;&lt;img src=&quot;https://github.com/unnawut.png&quot; width=&quot;60px&quot; alt=&quot;Unnawut Leepaisalsuwanna&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/wortmanb&quot;&gt;&lt;img src=&quot;https://github.com/wortmanb.png&quot; width=&quot;60px&quot; alt=&quot;Bret Wortman&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/andre-lameirinhas&quot;&gt;&lt;img src=&quot;https://github.com/andre-lameirinhas.png&quot; width=&quot;60px&quot; alt=&quot;André Lameirinhas&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/SVappsLAB&quot;&gt;&lt;img src=&quot;https://github.com/SVappsLAB.png&quot; width=&quot;60px&quot; alt=&quot;Scott Velez&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ooojustin&quot;&gt;&lt;img src=&quot;https://github.com/ooojustin.png&quot; width=&quot;60px&quot; alt=&quot;justin&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/TakodaS&quot;&gt;&lt;img src=&quot;https://github.com/TakodaS.png&quot; width=&quot;60px&quot; alt=&quot;Austen Bolitho&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mantzu132&quot;&gt;&lt;img src=&quot;https://github.com/mantzu132.png&quot; width=&quot;60px&quot; alt=&quot;Mantas&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mayfieldiv&quot;&gt;&lt;img src=&quot;https://github.com/mayfieldiv.png&quot; width=&quot;60px&quot; alt=&quot;Mayfield&quot; /&gt;&lt;/a&gt;
 &lt;!-- sponsors --&gt; &lt;/p&gt; 
&lt;h2&gt;Elevator Pitch&lt;/h2&gt; 
&lt;p&gt;Rant time: You&#39;ve heard it before, git is &lt;em&gt;powerful&lt;/em&gt;, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? &lt;em&gt;Are you kidding me?&lt;/em&gt; To stage part of a file you need to use a command line program to step through each hunk and if a hunk can&#39;t be split down any further but contains code you don&#39;t want to stage, you have to edit an arcane patch file &lt;em&gt;by hand&lt;/em&gt;? &lt;em&gt;Are you KIDDING me?!&lt;/em&gt; Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren&#39;t even any conflicts and it would have been fine to just checkout the branch directly? &lt;em&gt;YOU HAVE GOT TO BE KIDDING ME!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re a mere mortal like me and you&#39;re tired of hearing how powerful git is when in your daily life it&#39;s a powerful pain in your ass, lazygit might be for you.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#sponsors&quot;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#elevator-pitch&quot;&gt;Elevator Pitch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#stage-individual-lines&quot;&gt;Stage individual lines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#interactive-rebase&quot;&gt;Interactive Rebase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#cherry-pick&quot;&gt;Cherry-pick&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#bisect&quot;&gt;Bisect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#nuke-the-working-tree&quot;&gt;Nuke the working tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#amend-an-old-commit&quot;&gt;Amend an old commit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#filter&quot;&gt;Filter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#invoke-a-custom-command&quot;&gt;Invoke a custom command&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#worktrees&quot;&gt;Worktrees&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#rebase-magic-custom-patches&quot;&gt;Rebase magic (custom patches)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#rebase-from-marked-base-commit&quot;&gt;Rebase from marked base commit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undo&quot;&gt;Undo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#commit-graph&quot;&gt;Commit graph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#compare-two-commits&quot;&gt;Compare two commits&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#tutorials&quot;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#binary-releases&quot;&gt;Binary Releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#homebrew&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#macports&quot;&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#void-linux&quot;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#scoop-windows&quot;&gt;Scoop (Windows)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#arch-linux&quot;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#fedora-and-rhel&quot;&gt;Fedora and RHEL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#solus-linux&quot;&gt;Solus Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#debian-and-ubuntu&quot;&gt;Debian and Ubuntu&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#funtoo-linux&quot;&gt;Funtoo Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#gentoo-linux&quot;&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#freebsd&quot;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#termux&quot;&gt;Termux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#conda&quot;&gt;Conda&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#go&quot;&gt;Go&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#chocolatey-windows&quot;&gt;Chocolatey (Windows)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#winget-windows-10-1709-or-later&quot;&gt;Winget (Windows 10 1709 or later)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#manual&quot;&gt;Manual&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#keybindings&quot;&gt;Keybindings&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#changing-directory-on-exit&quot;&gt;Changing Directory On Exit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undoredo&quot;&gt;Undo/Redo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration&quot;&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#custom-pagers&quot;&gt;Custom Pagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#custom-commands&quot;&gt;Custom Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#git-flow-support&quot;&gt;Git flow support&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#contributing&quot;&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#debugging-locally&quot;&gt;Debugging Locally&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#donate&quot;&gt;Donate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#faq&quot;&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#what-do-the-commit-colors-represent&quot;&gt;What do the commit colors represent?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#shameless-plug&quot;&gt;Shameless Plug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/#alternatives&quot;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Lazygit is not my fulltime job but it is a hefty part time job so if you want to support the project please consider &lt;a href=&quot;https://github.com/sponsors/jesseduffield&quot;&gt;sponsoring me&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Stage individual lines&lt;/h3&gt; 
&lt;p&gt;Press space on the selected line to stage it, or press &lt;code&gt;v&lt;/code&gt; to start selecting a range of lines. You can also press &lt;code&gt;a&lt;/code&gt; to select the entirety of the current hunk.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/stage_lines-compressed.gif&quot; alt=&quot;stage_lines&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive Rebase&lt;/h3&gt; 
&lt;p&gt;Press &lt;code&gt;i&lt;/code&gt; to start an interactive rebase. Then squash (&lt;code&gt;s&lt;/code&gt;), fixup (&lt;code&gt;f&lt;/code&gt;), drop (&lt;code&gt;d&lt;/code&gt;), edit (&lt;code&gt;e&lt;/code&gt;), move up (&lt;code&gt;ctrl+k&lt;/code&gt;) or move down (&lt;code&gt;ctrl+j&lt;/code&gt;) any of TODO commits, before continuing the rebase by bringing up the rebase options menu with &lt;code&gt;m&lt;/code&gt; and then selecting &lt;code&gt;continue&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also perform any these actions as a once-off (e.g. pressing &lt;code&gt;s&lt;/code&gt; on a commit to squash it) without explicitly starting a rebase.&lt;/p&gt; 
&lt;p&gt;This demo also uses shift+down to select a range of commits to move and fixup.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/interactive_rebase-compressed.gif&quot; alt=&quot;interactive_rebase&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Cherry-pick&lt;/h3&gt; 
&lt;p&gt;Press &lt;code&gt;shift+c&lt;/code&gt; on a commit to copy it and press &lt;code&gt;shift+v&lt;/code&gt; to paste (cherry-pick) it.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/cherry_pick-compressed.gif&quot; alt=&quot;cherry_pick&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Bisect&lt;/h3&gt; 
&lt;p&gt;Press &lt;code&gt;b&lt;/code&gt; in the commits view to mark a commit as good/bad in order to begin a git bisect.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/bisect-compressed.gif&quot; alt=&quot;bisect&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Nuke the working tree&lt;/h3&gt; 
&lt;p&gt;For when you really want to just get rid of anything that shows up when you run &lt;code&gt;git status&lt;/code&gt; (and yes that includes dirty submodules) &lt;a href=&quot;https://www.youtube.com/watch?v=N4E2B_k2Bss&quot;&gt;kidpix style&lt;/a&gt;, press &lt;code&gt;shift+d&lt;/code&gt; to bring up the reset options menu and then select the &#39;nuke&#39; option.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/nuke_working_tree-compressed.gif&quot; alt=&quot;Nuke working tree&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Amend an old commit&lt;/h3&gt; 
&lt;p&gt;Pressing &lt;code&gt;shift+a&lt;/code&gt; on any commit will amend that commit with the currently staged changes (running an interactive rebase in the background).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/amend_old_commit-compressed.gif&quot; alt=&quot;amend_old_commit&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Filter&lt;/h3&gt; 
&lt;p&gt;You can filter a view with &lt;code&gt;/&lt;/code&gt;. Here we filter down our branches view and then hit &lt;code&gt;enter&lt;/code&gt; to view its commits.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/filter-compressed.gif&quot; alt=&quot;filter&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Invoke a custom command&lt;/h3&gt; 
&lt;p&gt;Lazygit has a very flexible &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md&quot;&gt;custom command system&lt;/a&gt;. In this example a custom command is defined which emulates the built-in branch checkout action.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/custom_command-compressed.gif&quot; alt=&quot;custom_command&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Worktrees&lt;/h3&gt; 
&lt;p&gt;You can create worktrees to have multiple branches going at once without the need for stashing or creating WIP commits when switching between them. Press &lt;code&gt;w&lt;/code&gt; in the branches view to create a worktree from the selected branch and switch to it.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/worktree_create_from_branches-compressed.gif&quot; alt=&quot;worktree_create_from_branches&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Rebase magic (custom patches)&lt;/h3&gt; 
&lt;p&gt;You can build a custom patch from an old commit and then remove the patch from the commit, split out a new commit, apply the patch in reverse to the index, and more.&lt;/p&gt; 
&lt;p&gt;In this example we have a redundant comment that we want to remove from an old commit. We hit &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; on the commit to view its files, then &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; on a file to focus the patch, then &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; to add the comment line to our custom patch, and then &lt;code&gt;ctrl+p&lt;/code&gt; to view the custom patch options; selecting to remove the patch from the current commit.&lt;/p&gt; 
&lt;p&gt;Learn more in the &lt;a href=&quot;https://youtu.be/4XaToVut_hs&quot;&gt;Rebase magic Youtube tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/custom_patch-compressed.gif&quot; alt=&quot;custom_patch&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Rebase from marked base commit&lt;/h3&gt; 
&lt;p&gt;Say you&#39;re on a feature branch that was itself branched off of the develop branch, and you&#39;ve decided you&#39;d rather be branching off the master branch. You need a way to rebase only the commits from your feature branch. In this demo we check to see which was the last commit on the develop branch, then press &lt;code&gt;shift+b&lt;/code&gt; to mark that commit as our base commit, then press &lt;code&gt;r&lt;/code&gt; on the master branch to rebase onto it, only bringing across the commits from our feature branch. Then we push our changes with &lt;code&gt;shift+p&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/rebase_onto-compressed.gif&quot; alt=&quot;rebase_onto&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Undo&lt;/h3&gt; 
&lt;p&gt;You can undo the last action by pressing &lt;code&gt;z&lt;/code&gt; and redo with &lt;code&gt;ctrl+z&lt;/code&gt;. Here we drop a couple of commits and then undo the actions. Undo uses the reflog which is specific to commits and branches so we can&#39;t undo changes to the working tree or stash.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md&quot;&gt;More info&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/undo-compressed.gif&quot; alt=&quot;undo&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Commit graph&lt;/h3&gt; 
&lt;p&gt;When viewing the commit graph in an enlarged window (use &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; to cycle screen modes), the commit graph is shown. Colours correspond to the commit authors, and as you navigate down the graph, the parent commits of the selected commit are highlighted.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/commit_graph-compressed.gif&quot; alt=&quot;commit_graph&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Compare two commits&lt;/h3&gt; 
&lt;p&gt;If you press &lt;code&gt;shift+w&lt;/code&gt; on a commit (or branch/ref) a menu will open that allows you to mark that commit so that any other commit you select will be diffed against it. Once you&#39;ve selected the second commit, you&#39;ll see the diff in the main view and if you press &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; you&#39;ll see the files of the diff. You can press &lt;code&gt;shift+w&lt;/code&gt; to view the diff menu again to see options like reversing the diff direction or exiting diff mode. You can also exit diff mode by pressing &lt;code&gt;&amp;lt;escape&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/diff_commits-compressed.gif&quot; alt=&quot;diff_commits&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Tutorials&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/CPLdltN7wgE&quot;&gt;&lt;img src=&quot;https://i.imgur.com/sVEktDn.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/CPLdltN7wgE&quot;&gt;15 Lazygit Features in 15 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/VDXvbHZYeKY&quot;&gt;Basics Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/4XaToVut_hs&quot;&gt;Rebase Magic Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/project/lazygit/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/vertical-allrepos/lazygit.svg?columns=3&quot; alt=&quot;Packaging status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Most of the above packages are maintained by third parties so be sure to vet them yourself and confirm that the maintainer is a trustworthy looking person who attends local sports games and gives back to their communities with barbeque fundraisers etc&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Binary Releases&lt;/h3&gt; 
&lt;p&gt;For Windows, Mac OS(10.12+) or Linux, you can download a binary release &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;It works with Linux, too.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MacPorts&lt;/h3&gt; 
&lt;p&gt;Latest version built from github releases. Tap:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo port install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Void Linux&lt;/h3&gt; 
&lt;p&gt;Packages for Void Linux are available in the distro repo&lt;/p&gt; 
&lt;p&gt;They follow upstream latest releases&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo xbps-install -S lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&quot;https://scoop.sh/&quot;&gt;scoop&lt;/a&gt;. It&#39;s in the &lt;code&gt;extras&lt;/code&gt; bucket:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Add the extras bucket
scoop bucket add extras

# Install lazygit
scoop install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;p&gt;Packages for Arch Linux are available via pacman and AUR (Arch User Repository).&lt;/p&gt; 
&lt;p&gt;There are two packages. The stable one which is built with the latest release and the git version which builds from the most recent commit.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stable: &lt;code&gt;sudo pacman -S lazygit&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Development: &lt;a href=&quot;https://aur.archlinux.org/packages/lazygit-git/&quot;&gt;https://aur.archlinux.org/packages/lazygit-git/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Instruction of how to install AUR content can be found here: &lt;a href=&quot;https://wiki.archlinux.org/index.php/Arch_User_Repository&quot;&gt;https://wiki.archlinux.org/index.php/Arch_User_Repository&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Fedora / Amazon Linux 2023 / CentOS Stream&lt;/h3&gt; 
&lt;p&gt;Packages for Fedora, Amazon Linux 2023 and CentOS Stream are available via &lt;a href=&quot;https://copr.fedorainfracloud.org/coprs/dejan/lazygit/&quot;&gt;Copr&lt;/a&gt; (Cool Other Package Repo).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo dnf copr enable dejan/lazygit
sudo dnf install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These packages are built using the RPM spec file located here: &lt;a href=&quot;https://codeberg.org/dejan/rpm-lazygit&quot;&gt;https://codeberg.org/dejan/rpm-lazygit&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You should be able to build RPMs for Fedora 41 or older, and other Fedora derivatives using the SRPM (Source RPM) file that you can grab from the latest COPR build.&lt;/p&gt; 
&lt;h3&gt;Solus Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo eopkg install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Debian and Ubuntu&lt;/h3&gt; 
&lt;p&gt;For &lt;strong&gt;Debian 13 &quot;Trixie&quot;, Sid&lt;/strong&gt;, and later, or &lt;strong&gt;Ubuntu 25.10 &quot;Questing Quokka&quot;&lt;/strong&gt; and later:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;strong&gt;Debian 12 &quot;Bookworm&quot;, Ubuntu 25.04 &quot;Plucky Puffin&quot;&lt;/strong&gt; and earlier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;LAZYGIT_VERSION=$(curl -s &quot;https://api.github.com/repos/jesseduffield/lazygit/releases/latest&quot; | \grep -Po &#39;&quot;tag_name&quot;: *&quot;v\K[^&quot;]*&#39;)
curl -Lo lazygit.tar.gz &quot;https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz&quot;
tar xf lazygit.tar.gz lazygit
sudo install lazygit -D -t /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Verify the correct installation of lazygit:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;lazygit --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Funtoo Linux&lt;/h3&gt; 
&lt;p&gt;Funtoo Linux has an autogenerated lazygit package in &lt;a href=&quot;https://github.com/funtoo/dev-kit/tree/1.4-release/dev-vcs/lazygit&quot;&gt;dev-kit&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo emerge dev-vcs/lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gentoo Linux&lt;/h3&gt; 
&lt;p&gt;Lazygit is not (yet) in main Gentoo portage, however an ebuild is available in &lt;a href=&quot;https://github.com/gentoo-mirror/guru/tree/master/dev-vcs/lazygit&quot;&gt;GURU overlay&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can either add the overlay to your system and install lazygit as usual:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo eselect repository enable guru
sudo emaint sync -r guru
sudo emerge dev-vcs/lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;openSUSE&lt;/h3&gt; 
&lt;p&gt;The lazygit package is currently built in &lt;a href=&quot;https://build.opensuse.org/package/show/devel:languages:go/lazygit&quot;&gt;devel:languages:go/lazygit&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install lazygit on openSUSE Tumbleweed run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo zypper ar https://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/devel:languages:go.repo
sudo zypper ref &amp;amp;&amp;amp; sudo zypper in lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install lazygit on openSUSE Leap run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;source /etc/os-release
sudo zypper ar https://download.opensuse.org/repositories/devel:/languages:/go/$VERSION_ID/devel:languages:go.repo
sudo zypper ref &amp;amp;&amp;amp; sudo zypper in lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NixOs&lt;/h3&gt; 
&lt;p&gt;On NixOs lazygit is packaged with nix and distributed via nixpkgs. You can try the lazygit without installing it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nix-shell -p lazygit
# or with flakes enabled
nix run nixpkgs#lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can add lazygit to you &lt;code&gt;configuration.nix&lt;/code&gt; using the &lt;code&gt;environment.systemPackages&lt;/code&gt; option. More details can be found via NixOs search &lt;a href=&quot;https://search.nixos.org/&quot;&gt;page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Flox&lt;/h3&gt; 
&lt;p&gt;Lazygit can be installed into a Flox environment as follows.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;flox install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More details about Flox can be found on &lt;a href=&quot;https://flox.dev/&quot;&gt;their website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;FreeBSD&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pkg install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Termux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apt install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Conda&lt;/h3&gt; 
&lt;p&gt;Released versions are available for different platforms, see &lt;a href=&quot;https://anaconda.org/conda-forge/lazygit&quot;&gt;https://anaconda.org/conda-forge/lazygit&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;conda install -c conda-forge lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;go install github.com/jesseduffield/lazygit@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note: If you get an error claiming that lazygit cannot be found or is not defined, you may need to add &lt;code&gt;~/go/bin&lt;/code&gt; to your $PATH (MacOS/Linux), or &lt;code&gt;%HOME%\go\bin&lt;/code&gt; (Windows). Not to be mistaken for &lt;code&gt;C:\Go\bin&lt;/code&gt; (which is for Go&#39;s own binaries, not apps like lazygit).&lt;/p&gt; 
&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;choco install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Winget (Windows 10 1709 or later)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using the &lt;code&gt;winget&lt;/code&gt; command in the Windows Terminal with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install -e --id=JesseDuffield.lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;You&#39;ll need to &lt;a href=&quot;https://golang.org/doc/install&quot;&gt;install Go&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazygit.git
cd lazygit
go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Call &lt;code&gt;lazygit&lt;/code&gt; in your terminal inside a git repository.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want, you can also add an alias for this with &lt;code&gt;echo &quot;alias lg=&#39;lazygit&#39;&quot; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt; (or whichever rc file you&#39;re using).&lt;/p&gt; 
&lt;h3&gt;Keybindings&lt;/h3&gt; 
&lt;p&gt;You can check out the list of keybindings &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/keybindings&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Changing Directory On Exit&lt;/h3&gt; 
&lt;p&gt;If you change repos in lazygit and want your shell to change directory into that repo on exiting lazygit, add this to your &lt;code&gt;~/.zshrc&lt;/code&gt; (or other rc file):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lg()
{
    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

    lazygit &quot;$@&quot;

    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
            cd &quot;$(cat $LAZYGIT_NEW_DIR_FILE)&quot;
            rm -f $LAZYGIT_NEW_DIR_FILE &amp;gt; /dev/null
    fi
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;code&gt;source ~/.zshrc&lt;/code&gt; and from now on when you call &lt;code&gt;lg&lt;/code&gt; and exit you&#39;ll switch directories to whatever you were in inside lazygit. To override this behaviour you can exit using &lt;code&gt;shift+Q&lt;/code&gt; rather than just &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Undo/Redo&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md&quot;&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Config.md&quot;&gt;configuration docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Custom Pagers&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Pagers.md&quot;&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Commands&lt;/h3&gt; 
&lt;p&gt;If lazygit is missing a feature, there&#39;s a good chance you can implement it yourself with a custom command!&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md&quot;&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Git flow support&lt;/h3&gt; 
&lt;p&gt;Lazygit supports &lt;a href=&quot;https://github.com/nvie/gitflow&quot;&gt;Gitflow&lt;/a&gt; if you have it installed. To understand how the Gitflow model works check out Vincent Driessen&#39;s original &lt;a href=&quot;https://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;post&lt;/a&gt; explaining it. To view Gitflow options from within Lazygit, press &lt;code&gt;i&lt;/code&gt; from within the branches view.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love your input! Please check out the &lt;a href=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the &lt;a href=&quot;https://discord.gg/ehwFt2t4wt&quot;&gt;discord channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/ehwFt2t4wt&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jesseduffield/lazygit/assets/discord.png&quot; width=&quot;75&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out this &lt;a href=&quot;https://www.youtube.com/watch?v=kNavnhzZHtk&quot;&gt;video&lt;/a&gt; walking through the creation of a small feature in lazygit if you want an idea of where to get started.&lt;/p&gt; 
&lt;h3&gt;Debugging Locally&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;lazygit --debug&lt;/code&gt; in one terminal tab and &lt;code&gt;lazygit --logs&lt;/code&gt; in another to view the program and its log output side by side&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you would like to support the development of lazygit, consider &lt;a href=&quot;https://github.com/sponsors/jesseduffield&quot;&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What do the commit colors represent?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Green: the commit is included in the master branch&lt;/li&gt; 
 &lt;li&gt;Yellow: the commit is not included in the master branch&lt;/li&gt; 
 &lt;li&gt;Red: the commit has not been pushed to the upstream branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Shameless Plug&lt;/h2&gt; 
&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href=&quot;https://twitter.com/DuffieldJesse&quot;&gt;twitter&lt;/a&gt; or check out my &lt;a href=&quot;https://jesseduffield.com/&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;p&gt;If you find that lazygit doesn&#39;t quite satisfy your requirements, these may be a better fit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Extrawurst/gitui&quot;&gt;GitUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jonas/tig&quot;&gt;tig&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>samber/lo</title>
      <link>https://github.com/samber/lo</link>
      <description>&lt;p&gt;💥 A Lodash-style Go library based on Go 1.18+ Generics (map, filter, contains, find...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lo - Iterate over slices, maps, channels...&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samber/lo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/tag/samber/lo.svg?sanitize=true&quot; alt=&quot;tag&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/Go-%3E%3D%201.18-%23007d9c&quot; alt=&quot;Go Version&quot; /&gt; &lt;a href=&quot;https://pkg.go.dev/github.com/samber/lo&quot;&gt;&lt;img src=&quot;https://godoc.org/github.com/samber/lo?status.svg?sanitize=true&quot; alt=&quot;GoDoc&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/samber/lo/actions/workflows/test.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/samber/lo&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/samber/lo&quot; alt=&quot;Go report&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/samber/lo&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/github/samber/lo&quot; alt=&quot;Coverage&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/samber/lo/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/samber/lo&quot; alt=&quot;Contributors&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/samber/lo&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;✨ &lt;strong&gt;&lt;code&gt;samber/lo&lt;/code&gt; is a Lodash-style Go library based on Go 1.18+ Generics.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A utility library based on Go 1.18+ generics that makes it easier to work with slices, maps, strings, channels, and functions. It provides dozens of handy methods to simplify common coding tasks and improve code readability. It may look like &lt;a href=&quot;https://github.com/lodash/lodash&quot;&gt;Lodash&lt;/a&gt; in some aspects.&lt;/p&gt; 
&lt;p&gt;5 to 10 helpers may overlap with those from the Go standard library, in packages &lt;code&gt;slices&lt;/code&gt; and &lt;code&gt;maps&lt;/code&gt;. I feel this library is legitimate and offers many more valuable abstractions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/samber/do&quot;&gt;samber/do&lt;/a&gt;: A dependency injection toolkit based on Go 1.18+ Generics&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/samber/mo&quot;&gt;samber/mo&lt;/a&gt;: Monads based on Go 1.18+ Generics (Option, Result, Either...)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Why this name?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;I wanted a &lt;strong&gt;short name&lt;/strong&gt;, similar to &quot;Lodash&quot;, and no Go package uses this name.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samber/lo/master/img/logo-full.png&quot; alt=&quot;lo&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;go get github.com/samber/lo@v1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This library is v1 and follows SemVer strictly.&lt;/p&gt; 
&lt;p&gt;No breaking changes will be made to exported APIs before v2.0.0.&lt;/p&gt; 
&lt;p&gt;This library has no dependencies outside the Go standard library.&lt;/p&gt; 
&lt;h2&gt;💡 Usage&lt;/h2&gt; 
&lt;p&gt;You can import &lt;code&gt;lo&lt;/code&gt; using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
    &quot;github.com/samber/lo&quot;
    lop &quot;github.com/samber/lo/parallel&quot;
    lom &quot;github.com/samber/lo/mutable&quot;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use one of the helpers below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;names := lo.Uniq([]string{&quot;Samuel&quot;, &quot;John&quot;, &quot;Samuel&quot;})
// []string{&quot;Samuel&quot;, &quot;John&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tips for lazy developers&lt;/h3&gt; 
&lt;p&gt;I cannot recommend it, but in case you are too lazy for repeating &lt;code&gt;lo.&lt;/code&gt; everywhere, you can import the entire library into the namespace.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
    . &quot;github.com/samber/lo&quot;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;I take no responsibility on this junk. 😁 💩&lt;/p&gt; 
&lt;h2&gt;🤠 Spec&lt;/h2&gt; 
&lt;p&gt;GoDoc: &lt;a href=&quot;https://godoc.org/github.com/samber/lo&quot;&gt;https://godoc.org/github.com/samber/lo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Supported helpers for slices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#filter&quot;&gt;Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#map&quot;&gt;Map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#uniqmap&quot;&gt;UniqMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#filtermap&quot;&gt;FilterMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#flatmap&quot;&gt;FlatMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#reduce&quot;&gt;Reduce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#reduceright&quot;&gt;ReduceRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#foreach&quot;&gt;ForEach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#foreachwhile&quot;&gt;ForEachWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#times&quot;&gt;Times&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#uniq&quot;&gt;Uniq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#uniqby&quot;&gt;UniqBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#groupby&quot;&gt;GroupBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#groupbymap&quot;&gt;GroupByMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#chunk&quot;&gt;Chunk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#partitionby&quot;&gt;PartitionBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#flatten&quot;&gt;Flatten&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#interleave&quot;&gt;Interleave&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#shuffle&quot;&gt;Shuffle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#reverse&quot;&gt;Reverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fill&quot;&gt;Fill&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#repeat&quot;&gt;Repeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#repeatby&quot;&gt;RepeatBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#keyby&quot;&gt;KeyBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#slicetomap-alias-associate&quot;&gt;SliceToMap / Associate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#filterslicetomap&quot;&gt;FilterSliceToMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#keyify&quot;&gt;Keyify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#drop&quot;&gt;Drop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#dropright&quot;&gt;DropRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#dropwhile&quot;&gt;DropWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#droprightwhile&quot;&gt;DropRightWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#DropByIndex&quot;&gt;DropByIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#reject&quot;&gt;Reject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#rejectmap&quot;&gt;RejectMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#filterreject&quot;&gt;FilterReject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#count&quot;&gt;Count&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#countby&quot;&gt;CountBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#countvalues&quot;&gt;CountValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#countvaluesby&quot;&gt;CountValuesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#subset&quot;&gt;Subset&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#slice&quot;&gt;Slice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#replace&quot;&gt;Replace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#replaceall&quot;&gt;ReplaceAll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#compact&quot;&gt;Compact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#issorted&quot;&gt;IsSorted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#issortedbykey&quot;&gt;IsSortedByKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#Splice&quot;&gt;Splice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for maps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#keys&quot;&gt;Keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#uniqkeys&quot;&gt;UniqKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#haskey&quot;&gt;HasKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#valueor&quot;&gt;ValueOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#values&quot;&gt;Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#uniqvalues&quot;&gt;UniqValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#pickby&quot;&gt;PickBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#pickbykeys&quot;&gt;PickByKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#pickbyvalues&quot;&gt;PickByValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#omitby&quot;&gt;OmitBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#omitbykeys&quot;&gt;OmitByKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#omitbyvalues&quot;&gt;OmitByValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#entries-alias-topairs&quot;&gt;Entries / ToPairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fromentries-alias-frompairs&quot;&gt;FromEntries / FromPairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#invert&quot;&gt;Invert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#assign&quot;&gt;Assign (merge of maps)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#mapkeys&quot;&gt;MapKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#mapvalues&quot;&gt;MapValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#mapentries&quot;&gt;MapEntries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#maptoslice&quot;&gt;MapToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#FilterMapToSlice&quot;&gt;FilterMapToSlice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported math helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#range--rangefrom--rangewithsteps&quot;&gt;Range / RangeFrom / RangeWithSteps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#clamp&quot;&gt;Clamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#sum&quot;&gt;Sum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#sumby&quot;&gt;SumBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#product&quot;&gt;Product&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#productby&quot;&gt;ProductBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#mean&quot;&gt;Mean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#meanby&quot;&gt;MeanBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#mode&quot;&gt;Mode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for strings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#randomstring&quot;&gt;RandomString&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#substring&quot;&gt;Substring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#chunkstring&quot;&gt;ChunkString&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#runelength&quot;&gt;RuneLength&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#pascalcase&quot;&gt;PascalCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#camelcase&quot;&gt;CamelCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#kebabcase&quot;&gt;KebabCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#snakecase&quot;&gt;SnakeCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#words&quot;&gt;Words&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#capitalize&quot;&gt;Capitalize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#ellipsis&quot;&gt;Ellipsis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for tuples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#t2---t9&quot;&gt;T2 -&amp;gt; T9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#unpack2---unpack9&quot;&gt;Unpack2 -&amp;gt; Unpack9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#zip2---zip9&quot;&gt;Zip2 -&amp;gt; Zip9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#zipby2---zipby9&quot;&gt;ZipBy2 -&amp;gt; ZipBy9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#unzip2---unzip9&quot;&gt;Unzip2 -&amp;gt; Unzip9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#unzipby2---unzipby9&quot;&gt;UnzipBy2 -&amp;gt; UnzipBy9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#crossjoin2---crossjoin9&quot;&gt;CrossJoin2 -&amp;gt; CrossJoin2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#crossjoinby2---crossjoinby9&quot;&gt;CrossJoinBy2 -&amp;gt; CrossJoinBy2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for time and duration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#duration&quot;&gt;Duration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#duration0---duration10&quot;&gt;Duration0 -&amp;gt; Duration10&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#channeldispatcher&quot;&gt;ChannelDispatcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#slicetochannel&quot;&gt;SliceToChannel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#generator&quot;&gt;Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#bufferwithcontext&quot;&gt;BufferWithContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#bufferwithtimeout&quot;&gt;BufferWithTimeout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fanin&quot;&gt;FanIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fanout&quot;&gt;FanOut&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported intersection helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#contains&quot;&gt;Contains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#containsby&quot;&gt;ContainsBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#every&quot;&gt;Every&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#everyby&quot;&gt;EveryBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#some&quot;&gt;Some&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#someby&quot;&gt;SomeBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#none&quot;&gt;None&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#noneby&quot;&gt;NoneBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#intersect&quot;&gt;Intersect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#difference&quot;&gt;Difference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#union&quot;&gt;Union&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#without&quot;&gt;Without&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#withoutby&quot;&gt;WithoutBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#withoutempty&quot;&gt;WithoutEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#withoutnth&quot;&gt;WithoutNth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#ElementsMatch&quot;&gt;ElementsMatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#ElementsMatchBy&quot;&gt;ElementsMatchBy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported search helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#indexof&quot;&gt;IndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#lastindexof&quot;&gt;LastIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#find&quot;&gt;Find&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findindexof&quot;&gt;FindIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findlastindexof&quot;&gt;FindLastIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findorelse&quot;&gt;FindOrElse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findkey&quot;&gt;FindKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findkeyby&quot;&gt;FindKeyBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#finduniques&quot;&gt;FindUniques&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#finduniquesby&quot;&gt;FindUniquesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findduplicates&quot;&gt;FindDuplicates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#findduplicatesby&quot;&gt;FindDuplicatesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#min&quot;&gt;Min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#minindex&quot;&gt;MinIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#minby&quot;&gt;MinBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#minindexby&quot;&gt;MinIndexBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#earliest&quot;&gt;Earliest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#earliestby&quot;&gt;EarliestBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#max&quot;&gt;Max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#maxindex&quot;&gt;MaxIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#maxby&quot;&gt;MaxBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#maxindexby&quot;&gt;MaxIndexBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#latest&quot;&gt;Latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#latestby&quot;&gt;LatestBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#first&quot;&gt;First&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#FirstOrEmpty&quot;&gt;FirstOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#FirstOr&quot;&gt;FirstOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#last&quot;&gt;Last&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#LastOrEmpty&quot;&gt;LastOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#LastOr&quot;&gt;LastOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#nth&quot;&gt;Nth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#nthor&quot;&gt;NthOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#nthorempty&quot;&gt;NthOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#sample&quot;&gt;Sample&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#sampleby&quot;&gt;SampleBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#samples&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#samplesby&quot;&gt;SamplesBy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#ternary&quot;&gt;Ternary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#ternaryf&quot;&gt;TernaryF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#if--elseif--else&quot;&gt;If / ElseIf / Else&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#switch--case--default&quot;&gt;Switch / Case / Default&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Type manipulation helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#isnil&quot;&gt;IsNil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#isnotnil&quot;&gt;IsNotNil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#toptr&quot;&gt;ToPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#nil&quot;&gt;Nil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#emptyabletoptr&quot;&gt;EmptyableToPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fromptr&quot;&gt;FromPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fromptror&quot;&gt;FromPtrOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#tosliceptr&quot;&gt;ToSlicePtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fromsliceptr&quot;&gt;FromSlicePtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fromsliceptror&quot;&gt;FromSlicePtrOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#toanyslice&quot;&gt;ToAnySlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#fromanyslice&quot;&gt;FromAnySlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#empty&quot;&gt;Empty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#isempty&quot;&gt;IsEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#isnotempty&quot;&gt;IsNotEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#coalesce&quot;&gt;Coalesce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#coalesceorempty&quot;&gt;CoalesceOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#coalesceslice&quot;&gt;CoalesceSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#coalescesliceorempty&quot;&gt;CoalesceSliceOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#coalescemap&quot;&gt;CoalesceMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#coalescemaporempty&quot;&gt;CoalesceMapOrEmpty&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Function helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#partial&quot;&gt;Partial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#partial2---partial5&quot;&gt;Partial2 -&amp;gt; Partial5&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Concurrency helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#attempt&quot;&gt;Attempt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#attemptwhile&quot;&gt;AttemptWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#attemptwithdelay&quot;&gt;AttemptWithDelay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#attemptwhilewithdelay&quot;&gt;AttemptWhileWithDelay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#debounce&quot;&gt;Debounce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#debounceby&quot;&gt;DebounceBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#throttle&quot;&gt;Throttle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#throttle&quot;&gt;ThrottleWithCount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#throttle&quot;&gt;ThrottleBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#throttle&quot;&gt;ThrottleByWithCount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#synchronize&quot;&gt;Synchronize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#async&quot;&gt;Async&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#transaction&quot;&gt;Transaction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#waitfor&quot;&gt;WaitFor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#waitforwithcontext&quot;&gt;WaitForWithContext&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Error handling:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#validate&quot;&gt;Validate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#must&quot;&gt;Must&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#try&quot;&gt;Try&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#try0-6&quot;&gt;Try1 -&amp;gt; Try6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#tryor&quot;&gt;TryOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#tryor0-6&quot;&gt;TryOr1 -&amp;gt; TryOr6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#trycatch&quot;&gt;TryCatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#trywitherrorvalue&quot;&gt;TryWithErrorValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#trycatchwitherrorvalue&quot;&gt;TryCatchWithErrorValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#errorsas&quot;&gt;ErrorsAs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#assert&quot;&gt;Assert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/#assertf&quot;&gt;Assertf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constraints:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clonable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Filter&lt;/h3&gt; 
&lt;p&gt;Iterates over a collection and returns an array of all the elements the predicate function returns &lt;code&gt;true&lt;/code&gt; for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;even := lo.Filter([]int{1, 2, 3, 4}, func(x int, index int) bool {
    return x%2 == 0
})
// []int{2, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/Apjg3WeSi7K&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Mutable: like &lt;code&gt;lo.Filter()&lt;/code&gt;, but the slice is updated in place.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lom &quot;github.com/samber/lo/mutable&quot;

list := []int{1, 2, 3, 4}
newList := lom.Filter(list, func(x int) bool {
    return x%2 == 0
})

list
// []int{2, 4, 3, 4}

newList
// []int{2, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Map&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice of one type and transforms it into a slice of another type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import &quot;github.com/samber/lo&quot;

lo.Map([]int64{1, 2, 3, 4}, func(x int64, index int) string {
    return strconv.FormatInt(x, 10)
})
// []string{&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/OkPcYAhBo0D&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.Map()&lt;/code&gt;, but the mapper function is called in a goroutine. Results are returned in the same order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lop &quot;github.com/samber/lo/parallel&quot;

lop.Map([]int64{1, 2, 3, 4}, func(x int64, _ int) string {
    return strconv.FormatInt(x, 10)
})
// []string{&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mutable: like &lt;code&gt;lo.Map()&lt;/code&gt;, but the slice is updated in place.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lom &quot;github.com/samber/lo/mutable&quot;

list := []int{1, 2, 3, 4}
lom.Map(list, func(x int) int {
    return x*2
})
// []int{2, 4, 6, 8}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UniqMap&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice and transforms it to a slice of another type with unique values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type User struct {
    Name string
    Age  int
}
users := []User{{Name: &quot;Alex&quot;, Age: 10}, {Name: &quot;Alex&quot;, Age: 12}, {Name: &quot;Bob&quot;, Age: 11}, {Name: &quot;Alice&quot;, Age: 20}}

names := lo.UniqMap(users, func(u User, index int) string {
    return u.Name
})
// []string{&quot;Alex&quot;, &quot;Bob&quot;, &quot;Alice&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FilterMap&lt;/h3&gt; 
&lt;p&gt;Returns a slice which obtained after both filtering and mapping using the given callback function.&lt;/p&gt; 
&lt;p&gt;The callback function should return two values: the result of the mapping operation and whether the result element should be included or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;matching := lo.FilterMap([]string{&quot;cpu&quot;, &quot;gpu&quot;, &quot;mouse&quot;, &quot;keyboard&quot;}, func(x string, _ int) (string, bool) {
    if strings.HasSuffix(x, &quot;pu&quot;) {
        return &quot;xpu&quot;, true
    }
    return &quot;&quot;, false
})
// []string{&quot;xpu&quot;, &quot;xpu&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/-AuYXfy7opz&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FlatMap&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice and transforms and flattens it to a slice of another type. The transform function can either return a slice or a &lt;code&gt;nil&lt;/code&gt;, and in the &lt;code&gt;nil&lt;/code&gt; case no value is added to the final slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.FlatMap([]int64{0, 1, 2}, func(x int64, _ int) []string {
    return []string{
        strconv.FormatInt(x, 10),
        strconv.FormatInt(x, 10),
    }
})
// []string{&quot;0&quot;, &quot;0&quot;, &quot;1&quot;, &quot;1&quot;, &quot;2&quot;, &quot;2&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/YSoYmQTA8-U&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reduce&lt;/h3&gt; 
&lt;p&gt;Reduces a collection to a single value. The value is calculated by accumulating the result of running each element in the collection through an accumulator function. Each successive invocation is supplied with the return value returned by the previous call.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;sum := lo.Reduce([]int{1, 2, 3, 4}, func(agg int, item int, _ int) int {
    return agg + item
}, 0)
// 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/R4UHXZNaaUG&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ReduceRight&lt;/h3&gt; 
&lt;p&gt;Like &lt;code&gt;lo.Reduce&lt;/code&gt; except that it iterates over elements of collection from right to left.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.ReduceRight([][]int{{0, 1}, {2, 3}, {4, 5}}, func(agg []int, item []int, _ int) []int {
    return append(agg, item...)
}, []int{})
// []int{4, 5, 2, 3, 0, 1}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/Fq3W70l7wXF&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ForEach&lt;/h3&gt; 
&lt;p&gt;Iterates over elements of a collection and invokes the function over each element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import &quot;github.com/samber/lo&quot;

lo.ForEach([]string{&quot;hello&quot;, &quot;world&quot;}, func(x string, _ int) {
    println(x)
})
// prints &quot;hello\nworld\n&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/oofyiUPRf8t&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.ForEach()&lt;/code&gt;, but the callback is called as a goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lop &quot;github.com/samber/lo/parallel&quot;

lop.ForEach([]string{&quot;hello&quot;, &quot;world&quot;}, func(x string, _ int) {
    println(x)
})
// prints &quot;hello\nworld\n&quot; or &quot;world\nhello\n&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ForEachWhile&lt;/h3&gt; 
&lt;p&gt;Iterates over collection elements and invokes iteratee for each element collection return value decide to continue or break, like do while().&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []int64{1, 2, -42, 4}

lo.ForEachWhile(list, func(x int64, _ int) bool {
	if x &amp;lt; 0 {
		return false
	}
	fmt.Println(x)
	return true
})
// 1
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/QnLGt35tnow&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Times&lt;/h3&gt; 
&lt;p&gt;Times invokes the iteratee n times, returning an array of the results of each invocation. The iteratee is invoked with index as argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import &quot;github.com/samber/lo&quot;

lo.Times(3, func(i int) string {
    return strconv.FormatInt(int64(i), 10)
})
// []string{&quot;0&quot;, &quot;1&quot;, &quot;2&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/vgQj3Glr6lT&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.Times()&lt;/code&gt;, but callback is called in goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lop &quot;github.com/samber/lo/parallel&quot;

lop.Times(3, func(i int) string {
    return strconv.FormatInt(int64(i), 10)
})
// []string{&quot;0&quot;, &quot;1&quot;, &quot;2&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Uniq&lt;/h3&gt; 
&lt;p&gt;Returns a duplicate-free version of an array, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;uniqValues := lo.Uniq([]int{1, 2, 2, 1})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/DTzbeXZ6iEN&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqBy&lt;/h3&gt; 
&lt;p&gt;Returns a duplicate-free version of an array, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the array. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in array to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;uniqValues := lo.UniqBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// []int{0, 1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/g42Z3QSb53u&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;GroupBy&lt;/h3&gt; 
&lt;p&gt;Returns an object composed of keys generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lo &quot;github.com/samber/lo&quot;

groups := lo.GroupBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// map[int][]int{0: []int{0, 3}, 1: []int{1, 4}, 2: []int{2, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/XnQBd_v6brd&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.GroupBy()&lt;/code&gt;, but callback is called in goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lop &quot;github.com/samber/lo/parallel&quot;

lop.GroupBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// map[int][]int{0: []int{0, 3}, 1: []int{1, 4}, 2: []int{2, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GroupByMap&lt;/h3&gt; 
&lt;p&gt;Returns an object composed of keys generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lo &quot;github.com/samber/lo&quot;

groups := lo.GroupByMap([]int{0, 1, 2, 3, 4, 5}, func(i int) (int, int) {
    return i%3, i*2
})
// map[int][]int{0: []int{0, 6}, 1: []int{2, 8}, 2: []int{4, 10}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chunk&lt;/h3&gt; 
&lt;p&gt;Returns an array of elements split into groups the length of size. If array can&#39;t be split evenly, the final chunk will be the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.Chunk([]int{0, 1, 2, 3, 4, 5}, 2)
// [][]int{{0, 1}, {2, 3}, {4, 5}}

lo.Chunk([]int{0, 1, 2, 3, 4, 5, 6}, 2)
// [][]int{{0, 1}, {2, 3}, {4, 5}, {6}}

lo.Chunk([]int{}, 2)
// [][]int{}

lo.Chunk([]int{0}, 2)
// [][]int{{0}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/EeKl0AuTehH&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PartitionBy&lt;/h3&gt; 
&lt;p&gt;Returns an array of elements split into groups. The order of grouped values is determined by the order they occur in collection. The grouping is generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lo &quot;github.com/samber/lo&quot;

partitions := lo.PartitionBy([]int{-2, -1, 0, 1, 2, 3, 4, 5}, func(x int) string {
    if x &amp;lt; 0 {
        return &quot;negative&quot;
    } else if x%2 == 0 {
        return &quot;even&quot;
    }
    return &quot;odd&quot;
})
// [][]int{{-2, -1}, {0, 2, 4}, {1, 3, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/NfQ_nGjkgXW&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.PartitionBy()&lt;/code&gt;, but callback is called in goroutine. Results are returned in the same order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lop &quot;github.com/samber/lo/parallel&quot;

partitions := lop.PartitionBy([]int{-2, -1, 0, 1, 2, 3, 4, 5}, func(x int) string {
    if x &amp;lt; 0 {
        return &quot;negative&quot;
    } else if x%2 == 0 {
        return &quot;even&quot;
    }
    return &quot;odd&quot;
})
// [][]int{{-2, -1}, {0, 2, 4}, {1, 3, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flatten&lt;/h3&gt; 
&lt;p&gt;Returns an array a single level deep.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;flat := lo.Flatten([][]int{{0, 1}, {2, 3, 4, 5}})
// []int{0, 1, 2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/rbp9ORaMpjw&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Interleave&lt;/h3&gt; 
&lt;p&gt;Round-robin alternating input slices and sequentially appending value at index into result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;interleaved := lo.Interleave([]int{1, 4, 7}, []int{2, 5, 8}, []int{3, 6, 9})
// []int{1, 2, 3, 4, 5, 6, 7, 8, 9}

interleaved := lo.Interleave([]int{1}, []int{2, 5, 8}, []int{3, 6}, []int{4, 7, 9, 10})
// []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/-RJkTLQEDVt&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Shuffle&lt;/h3&gt; 
&lt;p&gt;Returns an array of shuffled values. Uses the Fisher-Yates shuffle algorithm.&lt;/p&gt; 
&lt;p&gt;⚠️ This helper is &lt;strong&gt;mutable&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lom &quot;github.com/samber/lo/mutable&quot;

list := []int{0, 1, 2, 3, 4, 5}
lom.Shuffle(list)

list
// []int{1, 4, 0, 3, 5, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/2xb3WdLjeSJ&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reverse&lt;/h3&gt; 
&lt;p&gt;Reverses array so that the first element becomes the last, the second element becomes the second to last, and so on.&lt;/p&gt; 
&lt;p&gt;⚠️ This helper is &lt;strong&gt;mutable&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import lom &quot;github.com/samber/lo/mutable&quot;

list := []int{0, 1, 2, 3, 4, 5}
lom.Reverse(list)

list
// []int{5, 4, 3, 2, 1, 0}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/O-M5pmCRgzV&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Fill&lt;/h3&gt; 
&lt;p&gt;Fills elements of array with &lt;code&gt;initial&lt;/code&gt; value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type foo struct {
  bar string
}

func (f foo) Clone() foo {
  return foo{f.bar}
}

initializedSlice := lo.Fill([]foo{foo{&quot;a&quot;}, foo{&quot;a&quot;}}, foo{&quot;b&quot;})
// []foo{foo{&quot;b&quot;}, foo{&quot;b&quot;}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/VwR34GzqEub&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Repeat&lt;/h3&gt; 
&lt;p&gt;Builds a slice with N copies of initial value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type foo struct {
  bar string
}

func (f foo) Clone() foo {
  return foo{f.bar}
}

slice := lo.Repeat(2, foo{&quot;a&quot;})
// []foo{foo{&quot;a&quot;}, foo{&quot;a&quot;}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/g3uHXbmc3b6&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RepeatBy&lt;/h3&gt; 
&lt;p&gt;Builds a slice with values returned by N calls of callback.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;slice := lo.RepeatBy(0, func (i int) string {
    return strconv.FormatInt(int64(math.Pow(float64(i), 2)), 10)
})
// []string{}

slice := lo.RepeatBy(5, func(i int) string {
    return strconv.FormatInt(int64(math.Pow(float64(i), 2)), 10)
})
// []string{&quot;0&quot;, &quot;1&quot;, &quot;4&quot;, &quot;9&quot;, &quot;16&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/ozZLCtX_hNU&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;KeyBy&lt;/h3&gt; 
&lt;p&gt;Transforms a slice or an array of structs to a map based on a pivot callback.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.KeyBy([]string{&quot;a&quot;, &quot;aa&quot;, &quot;aaa&quot;}, func(str string) int {
    return len(str)
})
// map[int]string{1: &quot;a&quot;, 2: &quot;aa&quot;, 3: &quot;aaa&quot;}

type Character struct {
  dir  string
  code int
}
characters := []Character{
    {dir: &quot;left&quot;, code: 97},
    {dir: &quot;right&quot;, code: 100},
}
result := lo.KeyBy(characters, func(char Character) string {
    return string(rune(char.code))
})
//map[a:{dir:left code:97} d:{dir:right code:100}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/mdaClUAT-zZ&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SliceToMap (alias: Associate)&lt;/h3&gt; 
&lt;p&gt;Returns a map containing key-value pairs provided by transform function applied to elements of the given slice. If any of two pairs would have the same key the last one gets added to the map.&lt;/p&gt; 
&lt;p&gt;The order of keys in returned map is not specified and is not guaranteed to be the same from the original array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := []*foo{{baz: &quot;apple&quot;, bar: 1}, {baz: &quot;banana&quot;, bar: 2}}

aMap := lo.SliceToMap(in, func (f *foo) (string, int) {
    return f.baz, f.bar
})
// map[string][int]{ &quot;apple&quot;:1, &quot;banana&quot;:2 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/WHa2CfMO3Lr&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterSliceToMap&lt;/h3&gt; 
&lt;p&gt;Returns a map containing key-value pairs provided by transform function applied to elements of the given slice.&lt;/p&gt; 
&lt;p&gt;If any of two pairs would have the same key the last one gets added to the map.&lt;/p&gt; 
&lt;p&gt;The order of keys in returned map is not specified and is not guaranteed to be the same from the original array.&lt;/p&gt; 
&lt;p&gt;The third return value of the transform function is a boolean that indicates whether the key-value pair should be included in the map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []string{&quot;a&quot;, &quot;aa&quot;, &quot;aaa&quot;}

result := lo.FilterSliceToMap(list, func(str string) (string, int, bool) {
    return str, len(str), len(str) &amp;gt; 1
})
// map[string][int]{&quot;aa&quot;:2 &quot;aaa&quot;:3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keyify&lt;/h3&gt; 
&lt;p&gt;Returns a map with each unique element of the slice as a key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;set := lo.Keyify([]int{1, 1, 2, 3, 4})
// map[int]struct{}{1:{}, 2:{}, 3:{}, 4:{}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Drop&lt;/h3&gt; 
&lt;p&gt;Drops n elements from the beginning of a slice or array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;l := lo.Drop([]int{0, 1, 2, 3, 4, 5}, 2)
// []int{2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/JswS7vXRJP2&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropRight&lt;/h3&gt; 
&lt;p&gt;Drops n elements from the end of a slice or array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;l := lo.DropRight([]int{0, 1, 2, 3, 4, 5}, 2)
// []int{0, 1, 2, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/GG0nXkSJJa3&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropWhile&lt;/h3&gt; 
&lt;p&gt;Drop elements from the beginning of a slice or array while the predicate returns true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;l := lo.DropWhile([]string{&quot;a&quot;, &quot;aa&quot;, &quot;aaa&quot;, &quot;aa&quot;, &quot;aa&quot;}, func(val string) bool {
    return len(val) &amp;lt;= 2
})
// []string{&quot;aaa&quot;, &quot;aa&quot;, &quot;aa&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/7gBPYw2IK16&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropRightWhile&lt;/h3&gt; 
&lt;p&gt;Drop elements from the end of a slice or array while the predicate returns true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;l := lo.DropRightWhile([]string{&quot;a&quot;, &quot;aa&quot;, &quot;aaa&quot;, &quot;aa&quot;, &quot;aa&quot;}, func(val string) bool {
    return len(val) &amp;lt;= 2
})
// []string{&quot;a&quot;, &quot;aa&quot;, &quot;aaa&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/3-n71oEC0Hz&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropByIndex&lt;/h3&gt; 
&lt;p&gt;Drops elements from a slice or array by the index. A negative index will drop elements from the end of the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;l := lo.DropByIndex([]int{0, 1, 2, 3, 4, 5}, 2, 4, -1)
// []int{0, 1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/JswS7vXRJP2&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reject&lt;/h3&gt; 
&lt;p&gt;The opposite of Filter, this method returns the elements of collection that predicate does not return truthy for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;odd := lo.Reject([]int{1, 2, 3, 4}, func(x int, _ int) bool {
    return x%2 == 0
})
// []int{1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/YkLMODy1WEL&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RejectMap&lt;/h3&gt; 
&lt;p&gt;The opposite of FilterMap, this method returns a slice which obtained after both filtering and mapping using the given callback function.&lt;/p&gt; 
&lt;p&gt;The callback function should return two values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the result of the mapping operation and&lt;/li&gt; 
 &lt;li&gt;whether the result element should be included or not.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;items := lo.RejectMap([]int{1, 2, 3, 4}, func(x int, _ int) (int, bool) {
    return x*10, x%2 == 0
})
// []int{10, 30}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FilterReject&lt;/h3&gt; 
&lt;p&gt;Mixes Filter and Reject, this method returns two slices, one for the elements of collection that predicate returns truthy for and one for the elements that predicate does not return truthy for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;kept, rejected := lo.FilterReject([]int{1, 2, 3, 4}, func(x int, _ int) bool {
    return x%2 == 0
})
// []int{2, 4}
// []int{1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Count&lt;/h3&gt; 
&lt;p&gt;Counts the number of elements in the collection that compare equal to value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;count := lo.Count([]int{1, 5, 1}, 1)
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/Y3FlK54yveC&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountBy&lt;/h3&gt; 
&lt;p&gt;Counts the number of elements in the collection for which predicate is true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;count := lo.CountBy([]int{1, 5, 1}, func(i int) bool {
    return i &amp;lt; 4
})
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/ByQbNYQQi4X&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountValues&lt;/h3&gt; 
&lt;p&gt;Counts the number of each element in the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.CountValues([]int{})
// map[int]int{}

lo.CountValues([]int{1, 2})
// map[int]int{1: 1, 2: 1}

lo.CountValues([]int{1, 2, 2})
// map[int]int{1: 1, 2: 2}

lo.CountValues([]string{&quot;foo&quot;, &quot;bar&quot;, &quot;&quot;})
// map[string]int{&quot;&quot;: 1, &quot;foo&quot;: 1, &quot;bar&quot;: 1}

lo.CountValues([]string{&quot;foo&quot;, &quot;bar&quot;, &quot;bar&quot;})
// map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/-p-PyLT4dfy&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountValuesBy&lt;/h3&gt; 
&lt;p&gt;Counts the number of each element in the collection. It ss equivalent to chaining lo.Map and lo.CountValues.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;isEven := func(v int) bool {
    return v%2==0
}

lo.CountValuesBy([]int{}, isEven)
// map[bool]int{}

lo.CountValuesBy([]int{1, 2}, isEven)
// map[bool]int{false: 1, true: 1}

lo.CountValuesBy([]int{1, 2, 2}, isEven)
// map[bool]int{false: 1, true: 2}

length := func(v string) int {
    return len(v)
}

lo.CountValuesBy([]string{&quot;foo&quot;, &quot;bar&quot;, &quot;&quot;}, length)
// map[int]int{0: 1, 3: 2}

lo.CountValuesBy([]string{&quot;foo&quot;, &quot;bar&quot;, &quot;bar&quot;}, length)
// map[int]int{3: 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/2U0dG1SnOmS&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Subset&lt;/h3&gt; 
&lt;p&gt;Returns a copy of a slice from &lt;code&gt;offset&lt;/code&gt; up to &lt;code&gt;length&lt;/code&gt; elements. Like &lt;code&gt;slice[start:start+length]&lt;/code&gt;, but does not panic on overflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := []int{0, 1, 2, 3, 4}

sub := lo.Subset(in, 2, 3)
// []int{2, 3, 4}

sub := lo.Subset(in, -4, 3)
// []int{1, 2, 3}

sub := lo.Subset(in, -2, math.MaxUint)
// []int{3, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/tOQu1GhFcog&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Slice&lt;/h3&gt; 
&lt;p&gt;Returns a copy of a slice from &lt;code&gt;start&lt;/code&gt; up to, but not including &lt;code&gt;end&lt;/code&gt;. Like &lt;code&gt;slice[start:end]&lt;/code&gt;, but does not panic on overflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := []int{0, 1, 2, 3, 4}

slice := lo.Slice(in, 0, 5)
// []int{0, 1, 2, 3, 4}

slice := lo.Slice(in, 2, 3)
// []int{2}

slice := lo.Slice(in, 2, 6)
// []int{2, 3, 4}

slice := lo.Slice(in, 4, 3)
// []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/8XWYhfMMA1h&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Replace&lt;/h3&gt; 
&lt;p&gt;Returns a copy of the slice with the first n non-overlapping instances of old replaced by new.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, 1)
// []int{42, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, -1, 42, 1)
// []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, 2)
// []int{42, 1, 42, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, -1)
// []int{42, 1, 42, 1, 2, 3, 42}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/XfPzmf9gql6&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ReplaceAll&lt;/h3&gt; 
&lt;p&gt;Returns a copy of the slice with all non-overlapping instances of old replaced by new.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.ReplaceAll(in, 0, 42)
// []int{42, 1, 42, 1, 2, 3, 42}

slice := lo.ReplaceAll(in, -1, 42)
// []int{0, 1, 0, 1, 2, 3, 0}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/a9xZFUHfYcV&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Compact&lt;/h3&gt; 
&lt;p&gt;Returns a slice of all non-zero elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := []string{&quot;&quot;, &quot;foo&quot;, &quot;&quot;, &quot;bar&quot;, &quot;&quot;}

slice := lo.Compact(in)
// []string{&quot;foo&quot;, &quot;bar&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/tXiy-iK6PAc&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsSorted&lt;/h3&gt; 
&lt;p&gt;Checks if a slice is sorted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;slice := lo.IsSorted([]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/mc3qR-t4mcx&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsSortedByKey&lt;/h3&gt; 
&lt;p&gt;Checks if a slice is sorted by iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;slice := lo.IsSortedByKey([]string{&quot;a&quot;, &quot;bb&quot;, &quot;ccc&quot;}, func(s string) int {
    return len(s)
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/wiG6XyBBu49&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Splice&lt;/h3&gt; 
&lt;p&gt;Splice inserts multiple elements at index i. A negative index counts back from the end of the slice. The helper is protected against overflow errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.Splice([]string{&quot;a&quot;, &quot;b&quot;}, 1, &quot;1&quot;, &quot;2&quot;)
// []string{&quot;a&quot;, &quot;1&quot;, &quot;2&quot;, &quot;b&quot;}

// negative
result = lo.Splice([]string{&quot;a&quot;, &quot;b&quot;}, -1, &quot;1&quot;, &quot;2&quot;)
// []string{&quot;a&quot;, &quot;1&quot;, &quot;2&quot;, &quot;b&quot;}

// overflow
result = lo.Splice([]string{&quot;a&quot;, &quot;b&quot;}, 42, &quot;1&quot;, &quot;2&quot;)
// []string{&quot;a&quot;, &quot;b&quot;, &quot;1&quot;, &quot;2&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/wiG6XyBBu49&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Keys&lt;/h3&gt; 
&lt;p&gt;Creates a slice of the map keys.&lt;/p&gt; 
&lt;p&gt;Use the UniqKeys variant to deduplicate common keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;keys := lo.Keys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2})
// []string{&quot;foo&quot;, &quot;bar&quot;}

keys := lo.Keys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;baz&quot;: 3})
// []string{&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;}

keys := lo.Keys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;bar&quot;: 3})
// []string{&quot;foo&quot;, &quot;bar&quot;, &quot;bar&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/Uu11fHASqrU&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqKeys&lt;/h3&gt; 
&lt;p&gt;Creates an array of unique map keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;keys := lo.UniqKeys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;baz&quot;: 3})
// []string{&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;}

keys := lo.UniqKeys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;bar&quot;: 3})
// []string{&quot;foo&quot;, &quot;bar&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/TPKAb6ILdHk&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;HasKey&lt;/h3&gt; 
&lt;p&gt;Returns whether the given key exists.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;exists := lo.HasKey(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, &quot;foo&quot;)
// true

exists := lo.HasKey(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, &quot;baz&quot;)
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/aVwubIvECqS&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Values&lt;/h3&gt; 
&lt;p&gt;Creates an array of the map values.&lt;/p&gt; 
&lt;p&gt;Use the UniqValues variant to deduplicate common values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;values := lo.Values(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2})
// []int{1, 2}

values := lo.Values(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;baz&quot;: 3})
// []int{1, 2, 3}

values := lo.Values(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;bar&quot;: 2})
// []int{1, 2, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/nnRTQkzQfF6&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqValues&lt;/h3&gt; 
&lt;p&gt;Creates an array of unique map values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;values := lo.UniqValues(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2})
// []int{1, 2}

values := lo.UniqValues(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;baz&quot;: 3})
// []int{1, 2, 3}

values := lo.UniqValues(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, map[string]int{&quot;bar&quot;: 2})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/nf6bXMh7rM3&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ValueOr&lt;/h3&gt; 
&lt;p&gt;Returns the value of the given key or the fallback value if the key is not present.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;value := lo.ValueOr(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, &quot;foo&quot;, 42)
// 1

value := lo.ValueOr(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}, &quot;baz&quot;, 42)
// 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/bAq9mHErB4V&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickBy&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given predicate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.PickBy(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, func(key string, value int) bool {
    return value%2 == 1
})
// map[string]int{&quot;foo&quot;: 1, &quot;baz&quot;: 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/kdg8GR_QMmf&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickByKeys&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.PickByKeys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, []string{&quot;foo&quot;, &quot;baz&quot;})
// map[string]int{&quot;foo&quot;: 1, &quot;baz&quot;: 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/R1imbuci9qU&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickByValues&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.PickByValues(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, []int{1, 3})
// map[string]int{&quot;foo&quot;: 1, &quot;baz&quot;: 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/1zdzSvbfsJc&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitBy&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given predicate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.OmitBy(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, func(key string, value int) bool {
    return value%2 == 1
})
// map[string]int{&quot;bar&quot;: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/EtBsR43bdsd&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitByKeys&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.OmitByKeys(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, []string{&quot;foo&quot;, &quot;baz&quot;})
// map[string]int{&quot;bar&quot;: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/t1QjCrs-ysk&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitByValues&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.OmitByValues(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, []int{1, 3})
// map[string]int{&quot;bar&quot;: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/9UYZi-hrs8j&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Entries (alias: ToPairs)&lt;/h3&gt; 
&lt;p&gt;Transforms a map into array of key/value pairs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;entries := lo.Entries(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2})
// []lo.Entry[string, int]{
//     {
//         Key: &quot;foo&quot;,
//         Value: 1,
//     },
//     {
//         Key: &quot;bar&quot;,
//         Value: 2,
//     },
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/3Dhgx46gawJ&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FromEntries (alias: FromPairs)&lt;/h3&gt; 
&lt;p&gt;Transforms an array of key/value pairs into a map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := lo.FromEntries([]lo.Entry[string, int]{
    {
        Key: &quot;foo&quot;,
        Value: 1,
    },
    {
        Key: &quot;bar&quot;,
        Value: 2,
    },
})
// map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/oIr5KHFGCEN&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Invert&lt;/h3&gt; 
&lt;p&gt;Creates a map composed of the inverted keys and values. If map contains duplicate values, subsequent values overwrite property assignments of previous values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m1 := lo.Invert(map[string]int{&quot;a&quot;: 1, &quot;b&quot;: 2})
// map[int]string{1: &quot;a&quot;, 2: &quot;b&quot;}

m2 := lo.Invert(map[string]int{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 1})
// map[int]string{1: &quot;c&quot;, 2: &quot;b&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/rFQ4rak6iA1&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assign&lt;/h3&gt; 
&lt;p&gt;Merges multiple maps from left to right.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;mergedMaps := lo.Assign(
    map[string]int{&quot;a&quot;: 1, &quot;b&quot;: 2},
    map[string]int{&quot;b&quot;: 3, &quot;c&quot;: 4},
)
// map[string]int{&quot;a&quot;: 1, &quot;b&quot;: 3, &quot;c&quot;: 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/VhwfJOyxf5o&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChunkEntries&lt;/h3&gt; 
&lt;p&gt;Splits a map into an array of elements in groups of a length equal to its size. If the map cannot be split evenly, the final chunk will contain the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;maps := lo.ChunkEntries(
    map[string]int{
        &quot;a&quot;: 1,
        &quot;b&quot;: 2,
        &quot;c&quot;: 3,
        &quot;d&quot;: 4,
        &quot;e&quot;: 5,
    },
    3,
)
// []map[string]int{
//    {&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3},
//    {&quot;d&quot;: 4, &quot;e&quot;: 5},
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/X_YQL6mmoD-&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapKeys&lt;/h3&gt; 
&lt;p&gt;Manipulates a map keys and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m2 := lo.MapKeys(map[int]int{1: 1, 2: 2, 3: 3, 4: 4}, func(_ int, v int) string {
    return strconv.FormatInt(int64(v), 10)
})
// map[string]int{&quot;1&quot;: 1, &quot;2&quot;: 2, &quot;3&quot;: 3, &quot;4&quot;: 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/9_4WPIqOetJ&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapValues&lt;/h3&gt; 
&lt;p&gt;Manipulates a map values and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m1 := map[int]int64{1: 1, 2: 2, 3: 3}

m2 := lo.MapValues(m1, func(x int64, _ int) string {
    return strconv.FormatInt(x, 10)
})
// map[int]string{1: &quot;1&quot;, 2: &quot;2&quot;, 3: &quot;3&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/T_8xAfvcf0W&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapEntries&lt;/h3&gt; 
&lt;p&gt;Manipulates a map entries and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;in := map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}

out := lo.MapEntries(in, func(k string, v int) (int, string) {
    return v,k
})
// map[int]string{1: &quot;foo&quot;, 2: &quot;bar&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/VuvNQzxKimT&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapToSlice&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on specific iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;m := map[int]int64{1: 4, 2: 5, 3: 6}

s := lo.MapToSlice(m, func(k int, v int64) string {
    return fmt.Sprintf(&quot;%d_%d&quot;, k, v)
})
// []string{&quot;1_4&quot;, &quot;2_5&quot;, &quot;3_6&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/ZuiCZpDt6LD&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterMapToSlice&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on specific iteratee. The iteratee returns a value and a boolean. If the boolean is true, the value is added to the result slice.&lt;/p&gt; 
&lt;p&gt;If the boolean is false, the value is not added to the result slice. The order of the keys in the input map is not specified and the order of the keys in the output slice is not guaranteed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;kv := map[int]int64{1: 1, 2: 2, 3: 3, 4: 4}

result := lo.FilterMapToSlice(kv, func(k int, v int64) (string, bool) {
    return fmt.Sprintf(&quot;%d_%d&quot;, k, v), k%2 == 0
})
// []{&quot;2_2&quot;, &quot;4_4&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Range / RangeFrom / RangeWithSteps&lt;/h3&gt; 
&lt;p&gt;Creates an array of numbers (positive and/or negative) progressing from start up to, but not including end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.Range(4)
// [0, 1, 2, 3]

result := lo.Range(-4)
// [0, -1, -2, -3]

result := lo.RangeFrom(1, 5)
// [1, 2, 3, 4, 5]

result := lo.RangeFrom[float64](1.0, 5)
// [1.0, 2.0, 3.0, 4.0, 5.0]

result := lo.RangeWithSteps(0, 20, 5)
// [0, 5, 10, 15]

result := lo.RangeWithSteps[float32](-1.0, -4.0, -1.0)
// [-1.0, -2.0, -3.0]

result := lo.RangeWithSteps(1, 4, -1)
// []

result := lo.Range(0)
// []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/0r6VimXAi9H&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Clamp&lt;/h3&gt; 
&lt;p&gt;Clamps number within the inclusive lower and upper bounds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;r1 := lo.Clamp(0, -10, 10)
// 0

r2 := lo.Clamp(-42, -10, 10)
// -10

r3 := lo.Clamp(42, -10, 10)
// 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/RU4lJNC2hlI&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Sum&lt;/h3&gt; 
&lt;p&gt;Sums the values in a collection.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []int{1, 2, 3, 4, 5}
sum := lo.Sum(list)
// 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/upfeJVqs4Bt&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SumBy&lt;/h3&gt; 
&lt;p&gt;Summarizes the values in a collection using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;strings := []string{&quot;foo&quot;, &quot;bar&quot;}
sum := lo.SumBy(strings, func(item string) int {
    return len(item)
})
// 6
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Product&lt;/h3&gt; 
&lt;p&gt;Calculates the product of the values in a collection.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []int{1, 2, 3, 4, 5}
product := lo.Product(list)
// 120
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/2_kjM_smtAH&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ProductBy&lt;/h3&gt; 
&lt;p&gt;Calculates the product of the values in a collection using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;strings := []string{&quot;foo&quot;, &quot;bar&quot;}
product := lo.ProductBy(strings, func(item string) int {
    return len(item)
})
// 9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/wadzrWr9Aer&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Mean&lt;/h3&gt; 
&lt;p&gt;Calculates the mean of a collection of numbers.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;mean := lo.Mean([]int{2, 3, 4, 5})
// 3

mean := lo.Mean([]float64{2, 3, 4, 5})
// 3.5

mean := lo.Mean([]float64{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MeanBy&lt;/h3&gt; 
&lt;p&gt;Calculates the mean of a collection of numbers using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []string{&quot;aa&quot;, &quot;bbb&quot;, &quot;cccc&quot;, &quot;ddddd&quot;}
mapper := func(item string) float64 {
    return float64(len(item))
}

mean := lo.MeanBy(list, mapper)
// 3.5

mean := lo.MeanBy([]float64{}, mapper)
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Mode&lt;/h3&gt; 
&lt;p&gt;Calculates the mode(most frequent value) of a collection of numbers.&lt;/p&gt; 
&lt;p&gt;If multiple values ​​have the same highest frequency, then multiple values ​​are returned.&lt;/p&gt; 
&lt;p&gt;If the collection is empty, the zero value of &lt;code&gt;T[]&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;mode := lo.Mode([]int{2, 2, 3, 4})
// [2]

mode := lo.Mode([]float64{2, 2, 3, 3})
// [2, 3]

mode := lo.Mode([]float64{})
// []

mode := lo.Mode([]int{1, 2, 3, 4, 5, 6, 7, 8, 9})
// [1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RandomString&lt;/h3&gt; 
&lt;p&gt;Returns a random string of the specified length and made of the specified charset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.RandomString(5, lo.LettersCharset)
// example: &quot;eIGbt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/rRseOQVVum4&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Substring&lt;/h3&gt; 
&lt;p&gt;Return part of a string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;sub := lo.Substring(&quot;hello&quot;, 2, 3)
// &quot;llo&quot;

sub := lo.Substring(&quot;hello&quot;, -4, 3)
// &quot;ell&quot;

sub := lo.Substring(&quot;hello&quot;, -2, math.MaxUint)
// &quot;lo&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/TQlxQi82Lu1&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChunkString&lt;/h3&gt; 
&lt;p&gt;Returns an array of strings split into groups the length of size. If array can&#39;t be split evenly, the final chunk will be the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.ChunkString(&quot;123456&quot;, 2)
// []string{&quot;12&quot;, &quot;34&quot;, &quot;56&quot;}

lo.ChunkString(&quot;1234567&quot;, 2)
// []string{&quot;12&quot;, &quot;34&quot;, &quot;56&quot;, &quot;7&quot;}

lo.ChunkString(&quot;&quot;, 2)
// []string{&quot;&quot;}

lo.ChunkString(&quot;1&quot;, 2)
// []string{&quot;1&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/__FLTuJVz54&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RuneLength&lt;/h3&gt; 
&lt;p&gt;An alias to utf8.RuneCountInString which returns the number of runes in string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;sub := lo.RuneLength(&quot;hellô&quot;)
// 5

sub := len(&quot;hellô&quot;)
// 6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/tuhgW_lWY8l&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PascalCase&lt;/h3&gt; 
&lt;p&gt;Converts string to pascal case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.PascalCase(&quot;hello_world&quot;)
// HelloWorld
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/iZkdeLP9oiB&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CamelCase&lt;/h3&gt; 
&lt;p&gt;Converts string to camel case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.CamelCase(&quot;hello_world&quot;)
// helloWorld
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/dtyFB58MBRp&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;KebabCase&lt;/h3&gt; 
&lt;p&gt;Converts string to kebab case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.KebabCase(&quot;helloWorld&quot;)
// hello-world
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/2YTuPafwECA&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SnakeCase&lt;/h3&gt; 
&lt;p&gt;Converts string to snake case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.SnakeCase(&quot;HelloWorld&quot;)
// hello_world
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/QVKJG9nOnDg&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Words&lt;/h3&gt; 
&lt;p&gt;Splits string into an array of its words.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.Words(&quot;helloWorld&quot;)
// []string{&quot;hello&quot;, &quot;world&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/2P4zhqqq61g&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Capitalize&lt;/h3&gt; 
&lt;p&gt;Converts the first character of string to upper case and the remaining to lower case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.Capitalize(&quot;heLLO&quot;)
// Hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ellipsis&lt;/h3&gt; 
&lt;p&gt;Trims and truncates a string to a specified length in &lt;code&gt;bytes&lt;/code&gt; and appends an ellipsis if truncated. If the string contains non-ASCII characters (which may occupy multiple bytes in UTF-8), truncating by byte length may split a character in the middle, potentially resulting in garbled output.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.Ellipsis(&quot;  Lorem Ipsum  &quot;, 5)
// Lo...

str := lo.Ellipsis(&quot;Lorem Ipsum&quot;, 100)
// Lorem Ipsum

str := lo.Ellipsis(&quot;Lorem Ipsum&quot;, 3)
// ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;T2 -&amp;gt; T9&lt;/h3&gt; 
&lt;p&gt;Creates a tuple from a list of values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;tuple1 := lo.T2(&quot;x&quot;, 1)
// Tuple2[string, int]{A: &quot;x&quot;, B: 1}

func example() (string, int) { return &quot;y&quot;, 2 }
tuple2 := lo.T2(example())
// Tuple2[string, int]{A: &quot;y&quot;, B: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/IllL3ZO4BQm&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Unpack2 -&amp;gt; Unpack9&lt;/h3&gt; 
&lt;p&gt;Returns values contained in tuple.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;r1, r2 := lo.Unpack2(lo.Tuple2[string, int]{&quot;a&quot;, 1})
// &quot;a&quot;, 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unpack is also available as a method of TupleX.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;tuple2 := lo.T2(&quot;a&quot;, 1)
a, b := tuple2.Unpack()
// &quot;a&quot;, 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/xVP_k0kJ96W&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Zip2 -&amp;gt; Zip9&lt;/h3&gt; 
&lt;p&gt;Zip creates a slice of grouped elements, the first of which contains the first elements of the given arrays, the second of which contains the second elements of the given arrays, and so on.&lt;/p&gt; 
&lt;p&gt;When collections have different size, the Tuple attributes are filled with zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;tuples := lo.Zip2([]string{&quot;a&quot;, &quot;b&quot;}, []int{1, 2})
// []Tuple2[string, int]{{A: &quot;a&quot;, B: 1}, {A: &quot;b&quot;, B: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/jujaA6GaJTp&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ZipBy2 -&amp;gt; ZipBy9&lt;/h3&gt; 
&lt;p&gt;ZipBy creates a slice of transformed elements, the first of which contains the first elements of the given arrays, the second of which contains the second elements of the given arrays, and so on.&lt;/p&gt; 
&lt;p&gt;When collections have different size, the Tuple attributes are filled with zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;items := lo.ZipBy2([]string{&quot;a&quot;, &quot;b&quot;}, []int{1, 2}, func(a string, b int) string {
    return fmt.Sprintf(&quot;%s-%d&quot;, a, b)
})
// []string{&quot;a-1&quot;, &quot;b-2&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unzip2 -&amp;gt; Unzip9&lt;/h3&gt; 
&lt;p&gt;Unzip accepts an array of grouped elements and creates an array regrouping the elements to their pre-zip configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;a, b := lo.Unzip2([]Tuple2[string, int]{{A: &quot;a&quot;, B: 1}, {A: &quot;b&quot;, B: 2}})
// []string{&quot;a&quot;, &quot;b&quot;}
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/ciHugugvaAW&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UnzipBy2 -&amp;gt; UnzipBy9&lt;/h3&gt; 
&lt;p&gt;UnzipBy2 iterates over a collection and creates an array regrouping the elements to their pre-zip configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;a, b := lo.UnzipBy2([]string{&quot;hello&quot;, &quot;john&quot;, &quot;doe&quot;}, func(str string) (string, int) {
    return str, len(str)
})
// []string{&quot;hello&quot;, &quot;john&quot;, &quot;doe&quot;}
// []int{5, 4, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CrossJoin2 -&amp;gt; CrossJoin9&lt;/h3&gt; 
&lt;p&gt;Combines every items from one list with every items from others. It is the cartesian product of lists received as arguments. It returns an empty list if a list is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.CrossJoin2([]string{&quot;hello&quot;, &quot;john&quot;, &quot;doe&quot;}, []int{1, 2})
// lo.Tuple2{&quot;hello&quot;, 1}
// lo.Tuple2{&quot;hello&quot;, 2}
// lo.Tuple2{&quot;john&quot;, 1}
// lo.Tuple2{&quot;john&quot;, 2}
// lo.Tuple2{&quot;doe&quot;, 1}
// lo.Tuple2{&quot;doe&quot;, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CrossJoinBy2 -&amp;gt; CrossJoinBy9&lt;/h3&gt; 
&lt;p&gt;Combines every items from one list with every items from others. It is the cartesian product of lists received as arguments. The project function is used to create the output values. It returns an empty list if a list is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.CrossJoinBy2([]string{&quot;hello&quot;, &quot;john&quot;, &quot;doe&quot;}, []int{1, 2}, func(a A, b B) string {
    return fmt.Sprintf(&quot;%s - %d&quot;, a, b)
})
// &quot;hello - 1&quot;
// &quot;hello - 2&quot;
// &quot;john - 1&quot;
// &quot;john - 2&quot;
// &quot;doe - 1&quot;
// &quot;doe - 2&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Duration&lt;/h3&gt; 
&lt;p&gt;Returns the time taken to execute a function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;duration := lo.Duration(func() {
    // very long job
})
// 3s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Duration0 -&amp;gt; Duration10&lt;/h3&gt; 
&lt;p&gt;Returns the time taken to execute a function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;duration := lo.Duration0(func() {
    // very long job
})
// 3s

err, duration := lo.Duration1(func() error {
    // very long job
    return fmt.Errorf(&quot;an error&quot;)
})
// an error
// 3s

str, nbr, err, duration := lo.Duration3(func() (string, int, error) {
    // very long job
    return &quot;hello&quot;, 42, nil
})
// hello
// 42
// nil
// 3s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ChannelDispatcher&lt;/h3&gt; 
&lt;p&gt;Distributes messages from input channels into N child channels. Close events are propagated to children.&lt;/p&gt; 
&lt;p&gt;Underlying channels can have a fixed buffer capacity or be unbuffered when cap is 0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := make(chan int, 42)
for i := 0; i &amp;lt;= 10; i++ {
    ch &amp;lt;- i
}

children := lo.ChannelDispatcher(ch, 5, 10, DispatchingStrategyRoundRobin[int])
// []&amp;lt;-chan int{...}

consumer := func(c &amp;lt;-chan int) {
    for {
        msg, ok := &amp;lt;-c
        if !ok {
            println(&quot;closed&quot;)

            break
        }

        println(msg)
    }
}

for i := range children {
    go consumer(children[i])
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Many distributions strategies are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/channel.go&quot;&gt;lo.DispatchingStrategyRoundRobin&lt;/a&gt;: Distributes messages in a rotating sequential manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/channel.go&quot;&gt;lo.DispatchingStrategyRandom&lt;/a&gt;: Distributes messages in a random manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/channel.go&quot;&gt;lo.DispatchingStrategyWeightedRandom&lt;/a&gt;: Distributes messages in a weighted manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/channel.go&quot;&gt;lo.DispatchingStrategyFirst&lt;/a&gt;: Distributes messages in the first non-full channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/channel.go&quot;&gt;lo.DispatchingStrategyLeast&lt;/a&gt;: Distributes messages in the emptiest channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/channel.go&quot;&gt;lo.DispatchingStrategyMost&lt;/a&gt;: Distributes to the fullest channel.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some strategies bring fallback, in order to favor non-blocking behaviors. See implementations.&lt;/p&gt; 
&lt;p&gt;For custom strategies, just implement the &lt;code&gt;lo.DispatchingStrategy&lt;/code&gt; prototype:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type DispatchingStrategy[T any] func(message T, messageIndex uint64, channels []&amp;lt;-chan T) int
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Eg:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type Message struct {
    TenantID uuid.UUID
}

func hash(id uuid.UUID) int {
    h := fnv.New32a()
    h.Write([]byte(id.String()))
    return int(h.Sum32())
}

// Routes messages per TenantID.
customStrategy := func(message string, messageIndex uint64, channels []&amp;lt;-chan string) int {
    destination := hash(message) % len(channels)

    // check if channel is full
    if len(channels[destination]) &amp;lt; cap(channels[destination]) {
        return destination
    }

    // fallback when child channel is full
    return utils.DispatchingStrategyRoundRobin(message, uint64(destination), channels)
}

children := lo.ChannelDispatcher(ch, 5, 10, customStrategy)
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SliceToChannel&lt;/h3&gt; 
&lt;p&gt;Returns a read-only channels of collection elements. Channel is closed after last element. Channel capacity can be customized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []int{1, 2, 3, 4, 5}

for v := range lo.SliceToChannel(2, list) {
    println(v)
}
// prints 1, then 2, then 3, then 4, then 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ChannelToSlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice built from channels items. Blocks until channel closes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;list := []int{1, 2, 3, 4, 5}
ch := lo.SliceToChannel(2, list)

items := ChannelToSlice(ch)
// []int{1, 2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generator&lt;/h3&gt; 
&lt;p&gt;Implements the generator design pattern. Channel is closed after last element. Channel capacity can be customized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;generator := func(yield func(int)) {
    yield(1)
    yield(2)
    yield(3)
}

for v := range lo.Generator(2, generator) {
    println(v)
}
// prints 1, then 2, then 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Buffer&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := lo.SliceToChannel(2, []int{1, 2, 3, 4, 5})

items1, length1, duration1, ok1 := lo.Buffer(ch, 3)
// []int{1, 2, 3}, 3, 0s, true
items2, length2, duration2, ok2 := lo.Buffer(ch, 3)
// []int{4, 5}, 2, 0s, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: RabbitMQ consumer 👇&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := readFromQueue()

for {
    // read 1k items
    items, length, _, ok := lo.Buffer(ch, 1000)

    // do batching stuff

    if !ok {
        break
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;BufferWithContext&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel, with timeout. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ctx, cancel := context.WithCancel(context.TODO())
go func() {
    ch &amp;lt;- 0
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 1
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 2
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 3
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 4
    time.Sleep(10*time.Millisecond)
    cancel()
}()

items1, length1, duration1, ok1 := lo.BufferWithContext(ctx, ch, 3)
// []int{0, 1, 2}, 3, 20ms, true
items2, length2, duration2, ok2 := lo.BufferWithContext(ctx, ch, 3)
// []int{3, 4}, 2, 30ms, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;BufferWithTimeout&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel, with timeout. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;generator := func(yield func(int)) {
    for i := 0; i &amp;lt; 5; i++ {
        yield(i)
        time.Sleep(35*time.Millisecond)
    }
}

ch := lo.Generator(0, generator)

items1, length1, duration1, ok1 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{1, 2}, 2, 100ms, true
items2, length2, duration2, ok2 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{3, 4, 5}, 3, 75ms, true
items3, length3, duration2, ok3 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{}, 0, 10ms, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: RabbitMQ consumer 👇&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := readFromQueue()

for {
    // read 1k items
    // wait up to 1 second
    items, length, _, ok := lo.BufferWithTimeout(ch, 1000, 1*time.Second)

    // do batching stuff

    if !ok {
        break
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: Multithreaded RabbitMQ consumer 👇&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := readFromQueue()

// 5 workers
// prefetch 1k messages per worker
children := lo.ChannelDispatcher(ch, 5, 1000, lo.DispatchingStrategyFirst[int])

consumer := func(c &amp;lt;-chan int) {
    for {
        // read 1k items
        // wait up to 1 second
        items, length, _, ok := lo.BufferWithTimeout(ch, 1000, 1*time.Second)

        // do batching stuff

        if !ok {
            break
        }
    }
}

for i := range children {
    go consumer(children[i])
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FanIn&lt;/h3&gt; 
&lt;p&gt;Merge messages from multiple input channels into a single buffered channel. Output messages has no priority. When all upstream channels reach EOF, downstream channel closes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;stream1 := make(chan int, 42)
stream2 := make(chan int, 42)
stream3 := make(chan int, 42)

all := lo.FanIn(100, stream1, stream2, stream3)
// &amp;lt;-chan int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FanOut&lt;/h3&gt; 
&lt;p&gt;Broadcasts all the upstream messages to multiple downstream channels. When upstream channel reach EOF, downstream channels close. If any downstream channels is full, broadcasting is paused.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;stream := make(chan int, 42)

all := lo.FanOut(5, 100, stream)
// [5]&amp;lt;-chan int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Contains&lt;/h3&gt; 
&lt;p&gt;Returns true if an element is present in a collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;present := lo.Contains([]int{0, 1, 2, 3, 4, 5}, 5)
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ContainsBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate function returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;present := lo.ContainsBy([]int{0, 1, 2, 3, 4, 5}, func(x int) bool {
    return x == 3
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Every&lt;/h3&gt; 
&lt;p&gt;Returns true if all elements of a subset are contained into a collection or if the subset is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ok := lo.Every([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// true

ok := lo.Every([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EveryBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for all elements in the collection or if the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;b := EveryBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 5
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Some&lt;/h3&gt; 
&lt;p&gt;Returns true if at least 1 element of a subset is contained into a collection. If the subset is empty Some returns false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ok := lo.Some([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// true

ok := lo.Some([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SomeBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for any of the elements in the collection. If the collection is empty SomeBy returns false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;b := SomeBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 3
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;None&lt;/h3&gt; 
&lt;p&gt;Returns true if no element of a subset are contained into a collection or if the subset is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;b := None([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// false
b := None([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NoneBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for none of the elements in the collection or if the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;b := NoneBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 0
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Intersect&lt;/h3&gt; 
&lt;p&gt;Returns the intersection between two collections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result1 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// []int{0, 2}

result2 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// []int{0}

result3 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Difference&lt;/h3&gt; 
&lt;p&gt;Returns the difference between two collections.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The first value is the collection of element absent of list2.&lt;/li&gt; 
 &lt;li&gt;The second value is the collection of element absent of list1.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;left, right := lo.Difference([]int{0, 1, 2, 3, 4, 5}, []int{0, 2, 6})
// []int{1, 3, 4, 5}, []int{6}

left, right := lo.Difference([]int{0, 1, 2, 3, 4, 5}, []int{0, 1, 2, 3, 4, 5})
// []int{}, []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Union&lt;/h3&gt; 
&lt;p&gt;Returns all distinct elements from given collections. Result will not change the order of elements relatively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;union := lo.Union([]int{0, 1, 2, 3, 4, 5}, []int{0, 2}, []int{0, 10})
// []int{0, 1, 2, 3, 4, 5, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Without&lt;/h3&gt; 
&lt;p&gt;Returns slice excluding all given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;subset := lo.Without([]int{0, 2, 10}, 2)
// []int{0, 10}

subset := lo.Without([]int{0, 2, 10}, 0, 1, 2, 3, 4, 5)
// []int{10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutBy&lt;/h3&gt; 
&lt;p&gt;Filters a slice by excluding elements whose extracted keys match any in the exclude list.&lt;/p&gt; 
&lt;p&gt;It returns a new slice containing only the elements whose keys are not in the exclude list.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type struct User {
    ID int
    Name string
}

// original users
users := []User{
    {ID: 1, Name: &quot;Alice&quot;},
    {ID: 2, Name: &quot;Bob&quot;},
    {ID: 3, Name: &quot;Charlie&quot;},
}

// extract function to get the user ID
getID := func(user User) int {
    return user.ID
}

// exclude users with IDs 2 and 3
excludedIDs := []int{2, 3}

// filtering users
filteredUsers := lo.WithoutBy(users, getID, excludedIDs...)
// []User[{ID: 1, Name: &quot;Alice&quot;}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutEmpty&lt;/h3&gt; 
&lt;p&gt;Returns slice excluding zero values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;subset := lo.WithoutEmpty([]int{0, 2, 10})
// []int{2, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutNth&lt;/h3&gt; 
&lt;p&gt;Returns slice excluding nth value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;subset := lo.WithoutNth([]int{-2, -1, 0, 1, 2}, 3, -42, 1)
// []int{-2, 0, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ElementsMatch&lt;/h3&gt; 
&lt;p&gt;Returns true if lists contain the same set of elements (including empty set).&lt;/p&gt; 
&lt;p&gt;If there are duplicate elements, the number of appearances of each of them in both lists should match.&lt;/p&gt; 
&lt;p&gt;The order of elements is not checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;b := lo.ElementsMatch([]int{1, 1, 2}, []int{2, 1, 1})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ElementsMatchBy&lt;/h3&gt; 
&lt;p&gt;Returns true if lists contain the same set of elements&#39; keys (including empty set).&lt;/p&gt; 
&lt;p&gt;If there are duplicate keys, the number of appearances of each of them in both lists should match.&lt;/p&gt; 
&lt;p&gt;The order of elements is not checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;b := lo.ElementsMatchBy(
    []someType{a, b},
    []someType{b, a},
    func(item someType) string { return item.ID() },
)
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IndexOf&lt;/h3&gt; 
&lt;p&gt;Returns the index at which the first occurrence of a value is found in an array or return -1 if the value cannot be found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;found := lo.IndexOf([]int{0, 1, 2, 1, 2, 3}, 2)
// 2

notFound := lo.IndexOf([]int{0, 1, 2, 1, 2, 3}, 6)
// -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastIndexOf&lt;/h3&gt; 
&lt;p&gt;Returns the index at which the last occurrence of a value is found in an array or return -1 if the value cannot be found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;found := lo.LastIndexOf([]int{0, 1, 2, 1, 2, 3}, 2)
// 4

notFound := lo.LastIndexOf([]int{0, 1, 2, 1, 2, 3}, 6)
// -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Find&lt;/h3&gt; 
&lt;p&gt;Search an element in a slice based on a predicate. It returns element and true if element was found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str, ok := lo.Find([]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;}, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;b&quot;, true

str, ok := lo.Find([]string{&quot;foobar&quot;}, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;&quot;, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindIndexOf&lt;/h3&gt; 
&lt;p&gt;FindIndexOf searches an element in a slice based on a predicate and returns the index and true. It returns -1 and false if the element is not found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str, index, ok := lo.FindIndexOf([]string{&quot;a&quot;, &quot;b&quot;, &quot;a&quot;, &quot;b&quot;}, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;b&quot;, 1, true

str, index, ok := lo.FindIndexOf([]string{&quot;foobar&quot;}, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;&quot;, -1, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindLastIndexOf&lt;/h3&gt; 
&lt;p&gt;FindLastIndexOf searches an element in a slice based on a predicate and returns the index and true. It returns -1 and false if the element is not found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str, index, ok := lo.FindLastIndexOf([]string{&quot;a&quot;, &quot;b&quot;, &quot;a&quot;, &quot;b&quot;}, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;b&quot;, 4, true

str, index, ok := lo.FindLastIndexOf([]string{&quot;foobar&quot;}, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;&quot;, -1, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindOrElse&lt;/h3&gt; 
&lt;p&gt;Search an element in a slice based on a predicate. It returns the element if found or a given fallback value otherwise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := lo.FindOrElse([]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;}, &quot;x&quot;, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;b&quot;

str := lo.FindOrElse([]string{&quot;foobar&quot;}, &quot;x&quot;, func(i string) bool {
    return i == &quot;b&quot;
})
// &quot;x&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindKey&lt;/h3&gt; 
&lt;p&gt;Returns the key of the first value matching.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result1, ok1 := lo.FindKey(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, 2)
// &quot;bar&quot;, true

result2, ok2 := lo.FindKey(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, 42)
// &quot;&quot;, false

type test struct {
    foobar string
}
result3, ok3 := lo.FindKey(map[string]test{&quot;foo&quot;: test{&quot;foo&quot;}, &quot;bar&quot;: test{&quot;bar&quot;}, &quot;baz&quot;: test{&quot;baz&quot;}}, test{&quot;foo&quot;})
// &quot;foo&quot;, true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindKeyBy&lt;/h3&gt; 
&lt;p&gt;Returns the key of the first element predicate returns truthy for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result1, ok1 := lo.FindKeyBy(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, func(k string, v int) bool {
    return k == &quot;foo&quot;
})
// &quot;foo&quot;, true

result2, ok2 := lo.FindKeyBy(map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3}, func(k string, v int) bool {
    return false
})
// &quot;&quot;, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindUniques&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all the unique elements of the collection. The order of result values is determined by the order they occur in the array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;uniqueValues := lo.FindUniques([]int{1, 2, 2, 1, 2, 3})
// []int{3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindUniquesBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all the unique elements of the collection. The order of result values is determined by the order they occur in the array. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in array to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;uniqueValues := lo.FindUniquesBy([]int{3, 4, 5, 6, 7}, func(i int) int {
    return i%3
})
// []int{5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindDuplicates&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the first occurrence of each duplicated elements of the collection. The order of result values is determined by the order they occur in the array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;duplicatedValues := lo.FindDuplicates([]int{1, 2, 2, 1, 2, 3})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindDuplicatesBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the first occurrence of each duplicated elements of the collection. The order of result values is determined by the order they occur in the array. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in array to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;duplicatedValues := lo.FindDuplicatesBy([]int{3, 4, 5, 6, 7}, func(i int) int {
    return i%3
})
// []int{3, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Min&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;min := lo.Min([]int{1, 2, 3})
// 1

min := lo.Min([]int{})
// 0

min := lo.Min([]time.Duration{time.Second, time.Hour})
// 1s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinIndex&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection and the index of the minimum value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;min, index := lo.MinIndex([]int{1, 2, 3})
// 1, 0

min, index := lo.MinIndex([]int{})
// 0, -1

min, index := lo.MinIndex([]time.Duration{time.Second, time.Hour})
// 1s, 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection using the given comparison function.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the smallest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;min := lo.MinBy([]string{&quot;s1&quot;, &quot;string2&quot;, &quot;s3&quot;}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// &quot;s1&quot;

min := lo.MinBy([]string{}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// &quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinIndexBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection using the given comparison function and the index of the minimum value.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the smallest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;min, index := lo.MinIndexBy([]string{&quot;s1&quot;, &quot;string2&quot;, &quot;s3&quot;}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// &quot;s1&quot;, 0

min, index := lo.MinIndexBy([]string{}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// &quot;&quot;, -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Earliest&lt;/h3&gt; 
&lt;p&gt;Search the minimum time.Time of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;earliest := lo.Earliest(time.Now(), time.Time{})
// 0001-01-01 00:00:00 +0000 UTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EarliestBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum time.Time of a collection using the given iteratee function.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type foo struct {
    bar time.Time
}

earliest := lo.EarliestBy([]foo{{time.Now()}, {}}, func(i foo) time.Time {
    return i.bar
})
// {bar:{2023-04-01 01:02:03 +0000 UTC}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Max&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;max := lo.Max([]int{1, 2, 3})
// 3

max := lo.Max([]int{})
// 0

max := lo.Max([]time.Duration{time.Second, time.Hour})
// 1h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxIndex&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection and the index of the maximum value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;max, index := lo.MaxIndex([]int{1, 2, 3})
// 3, 2

max, index := lo.MaxIndex([]int{})
// 0, -1

max, index := lo.MaxIndex([]time.Duration{time.Second, time.Hour})
// 1h, 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection using the given comparison function.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the greatest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;max := lo.MaxBy([]string{&quot;string1&quot;, &quot;s2&quot;, &quot;string3&quot;}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// &quot;string1&quot;

max := lo.MaxBy([]string{}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// &quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxIndexBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection using the given comparison function and the index of the maximum value.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the greatest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;max, index := lo.MaxIndexBy([]string{&quot;string1&quot;, &quot;s2&quot;, &quot;string3&quot;}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// &quot;string1&quot;, 0

max, index := lo.MaxIndexBy([]string{}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// &quot;&quot;, -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Latest&lt;/h3&gt; 
&lt;p&gt;Search the maximum time.Time of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;latest := lo.Latest(time.Now(), time.Time{})
// 2023-04-01 01:02:03 +0000 UTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LatestBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum time.Time of a collection using the given iteratee function.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type foo struct {
    bar time.Time
}

latest := lo.LatestBy([]foo{{time.Now()}, {}}, func(i foo) time.Time {
    return i.bar
})
// {bar:{2023-04-01 01:02:03 +0000 UTC}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;First&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection and check for availability of the first element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;first, ok := lo.First([]int{1, 2, 3})
// 1, true

first, ok := lo.First([]int{})
// 0, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FirstOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection or zero value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;first := lo.FirstOrEmpty([]int{1, 2, 3})
// 1

first := lo.FirstOrEmpty([]int{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FirstOr&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection or the fallback value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;first := lo.FirstOr([]int{1, 2, 3}, 245)
// 1

first := lo.FirstOr([]int{}, 31)
// 31
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Last&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or error if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;last, ok := lo.Last([]int{1, 2, 3})
// 3
// true

last, ok := lo.Last([]int{})
// 0
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or zero value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;last := lo.LastOrEmpty([]int{1, 2, 3})
// 3

last := lo.LastOrEmpty([]int{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastOr&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or the fallback value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;last := lo.LastOr([]int{1, 2, 3}, 245)
// 3

last := lo.LastOr([]int{}, 31)
// 31
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nth&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of collection. If &lt;code&gt;nth&lt;/code&gt; is negative, the nth element from the end is returned. An error is returned when nth is out of slice bounds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;nth, err := lo.Nth([]int{0, 1, 2, 3}, 2)
// 2

nth, err := lo.Nth([]int{0, 1, 2, 3}, -2)
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NthOr&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of the collection. If &lt;code&gt;nth&lt;/code&gt; is negative, it returns the &lt;code&gt;nth&lt;/code&gt; element from the end. If &lt;code&gt;nth&lt;/code&gt; is out of slice bounds, it returns the provided fallback value&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;nth := lo.NthOr([]int{10, 20, 30, 40, 50}, 2, -1)
// 30

nth := lo.NthOr([]int{10, 20, 30, 40, 50}, -1, -1)
// 50

nth := lo.NthOr([]int{10, 20, 30, 40, 50}, 5, -1)
// -1 (fallback value)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NthOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of the collection. If &lt;code&gt;nth&lt;/code&gt; is negative, it returns the &lt;code&gt;nth&lt;/code&gt; element from the end. If &lt;code&gt;nth&lt;/code&gt; is out of slice bounds, it returns the zero value for the element type (e.g., 0 for integers, &quot;&quot; for strings, etc).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, 2)
// 30

nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, -1)
// 50

nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, 5)
// 0 (zero value for int)

nth := lo.NthOrEmpty([]string{&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;}, 2)
// &quot;cherry&quot;

nth := lo.NthOrEmpty([]string{&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;}, 5)
// &quot;&quot; (zero value for string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Sample&lt;/h3&gt; 
&lt;p&gt;Returns a random item from collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.Sample([]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;})
// a random string from []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}

lo.Sample([]string{})
// &quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SampleBy&lt;/h3&gt; 
&lt;p&gt;Returns a random item from collection, using a given random integer generator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import &quot;math/rand&quot;

r := rand.New(rand.NewSource(42))
lo.SampleBy([]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, r.Intn)
// a random string from []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, using a seeded random generator

lo.SampleBy([]string{}, r.Intn)
// &quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;Returns N random unique items from collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.Samples([]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, 3)
// []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;} in random order
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SamplesBy&lt;/h3&gt; 
&lt;p&gt;Returns N random unique items from collection, using a given random integer generator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;r := rand.New(rand.NewSource(42))
lo.SamplesBy([]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, 3, r.Intn)
// []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;} in random order, using a seeded random generator
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ternary&lt;/h3&gt; 
&lt;p&gt;A 1 line if/else statement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.Ternary(true, &quot;a&quot;, &quot;b&quot;)
// &quot;a&quot;

result := lo.Ternary(false, &quot;a&quot;, &quot;b&quot;)
// &quot;b&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take care to avoid dereferencing potentially nil pointers in your A/B expressions, because they are both evaluated. See TernaryF to avoid this problem.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/t-D7WBL44h2&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TernaryF&lt;/h3&gt; 
&lt;p&gt;A 1 line if/else statement whose options are functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.TernaryF(true, func() string { return &quot;a&quot; }, func() string { return &quot;b&quot; })
// &quot;a&quot;

result := lo.TernaryF(false, func() string { return &quot;a&quot; }, func() string { return &quot;b&quot; })
// &quot;b&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Useful to avoid nil-pointer dereferencing in initializations, or avoid running unnecessary code&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;var s *string

someStr := TernaryF(s == nil, func() string { return uuid.New().String() }, func() string { return *s })
// ef782193-c30c-4e2e-a7ae-f8ab5e125e02
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/AO4VW20JoqM&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;If / ElseIf / Else&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.If(true, 1).
    ElseIf(false, 2).
    Else(3)
// 1

result := lo.If(false, 1).
    ElseIf(true, 2).
    Else(3)
// 2

result := lo.If(false, 1).
    ElseIf(false, 2).
    Else(3)
// 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.IfF(true, func () int {
        return 1
    }).
    ElseIfF(false, func () int {
        return 2
    }).
    ElseF(func () int {
        return 3
    })
// 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.IfF(true, func () int {
        return 1
    }).
    Else(42)
// 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/WSw3ApMxhyW&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Switch / Case / Default&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.Switch(1).
    Case(1, &quot;1&quot;).
    Case(2, &quot;2&quot;).
    Default(&quot;3&quot;)
// &quot;1&quot;

result := lo.Switch(2).
    Case(1, &quot;1&quot;).
    Case(2, &quot;2&quot;).
    Default(&quot;3&quot;)
// &quot;2&quot;

result := lo.Switch(42).
    Case(1, &quot;1&quot;).
    Case(2, &quot;2&quot;).
    Default(&quot;3&quot;)
// &quot;3&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.Switch(1).
    CaseF(1, func() string {
        return &quot;1&quot;
    }).
    CaseF(2, func() string {
        return &quot;2&quot;
    }).
    DefaultF(func() string {
        return &quot;3&quot;
    })
// &quot;1&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.Switch(1).
    CaseF(1, func() string {
        return &quot;1&quot;
    }).
    Default(&quot;42&quot;)
// &quot;1&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/TGbKUMAeRUd&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsNil&lt;/h3&gt; 
&lt;p&gt;Checks if a value is nil or if it&#39;s a reference type with a nil underlying value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;var x int
lo.IsNil(x)
// false

var k struct{}
lo.IsNil(k)
// false

var i *int
lo.IsNil(i)
// true

var ifaceWithNilValue any = (*string)(nil)
lo.IsNil(ifaceWithNilValue)
// true
ifaceWithNilValue == nil
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsNotNil&lt;/h3&gt; 
&lt;p&gt;Checks if a value is not nil or if it&#39;s not a reference type with a nil underlying value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;var x int
lo.IsNotNil(x)
// true

var k struct{}
lo.IsNotNil(k)
// true

var i *int
lo.IsNotNil(i)
// false

var ifaceWithNilValue any = (*string)(nil)
lo.IsNotNil(ifaceWithNilValue)
// false
ifaceWithNilValue == nil
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ToPtr&lt;/h3&gt; 
&lt;p&gt;Returns a pointer copy of the value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ptr := lo.ToPtr(&quot;hello world&quot;)
// *string{&quot;hello world&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nil&lt;/h3&gt; 
&lt;p&gt;Returns a nil pointer of type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ptr := lo.Nil[float64]()
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EmptyableToPtr&lt;/h3&gt; 
&lt;p&gt;Returns a pointer copy of value if it&#39;s nonzero. Otherwise, returns nil pointer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ptr := lo.EmptyableToPtr(nil)
// nil

ptr := lo.EmptyableToPtr(&quot;&quot;)
// nil

ptr := lo.EmptyableToPtr([]int{})
// *[]int{}

ptr := lo.EmptyableToPtr(&quot;hello world&quot;)
// *string{&quot;hello world&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromPtr&lt;/h3&gt; 
&lt;p&gt;Returns the pointer value or empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := &quot;hello world&quot;
value := lo.FromPtr(&amp;amp;str)
// &quot;hello world&quot;

value := lo.FromPtr(nil)
// &quot;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromPtrOr&lt;/h3&gt; 
&lt;p&gt;Returns the pointer value or the fallback value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str := &quot;hello world&quot;
value := lo.FromPtrOr(&amp;amp;str, &quot;empty&quot;)
// &quot;hello world&quot;

value := lo.FromPtrOr(nil, &quot;empty&quot;)
// &quot;empty&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ToSlicePtr&lt;/h3&gt; 
&lt;p&gt;Returns a slice of pointer copy of value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ptr := lo.ToSlicePtr([]string{&quot;hello&quot;, &quot;world&quot;})
// []*string{&quot;hello&quot;, &quot;world&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromSlicePtr&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the pointer values. Returns a zero value in case of a nil pointer element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str1 := &quot;hello&quot;
str2 := &quot;world&quot;

ptr := lo.FromSlicePtr[string]([]*string{&amp;amp;str1, &amp;amp;str2, nil})
// []string{&quot;hello&quot;, &quot;world&quot;, &quot;&quot;}

ptr := lo.Compact(
    lo.FromSlicePtr[string]([]*string{&amp;amp;str1, &amp;amp;str2, nil}),
)
// []string{&quot;hello&quot;, &quot;world&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromSlicePtrOr&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the pointer values or the fallback value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str1 := &quot;hello&quot;
str2 := &quot;world&quot;

ptr := lo.FromSlicePtrOr([]*string{&amp;amp;str1, nil, &amp;amp;str2}, &quot;fallback value&quot;)
// []string{&quot;hello&quot;, &quot;fallback value&quot;, &quot;world&quot;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/CuXGVzo9G65&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ToAnySlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all elements mapped to &lt;code&gt;any&lt;/code&gt; type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;elements := lo.ToAnySlice([]int{1, 5, 1})
// []any{1, 5, 1}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromAnySlice&lt;/h3&gt; 
&lt;p&gt;Returns an &lt;code&gt;any&lt;/code&gt; slice with all elements mapped to a type. Returns false in case of type conversion failure.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;elements, ok := lo.FromAnySlice([]any{&quot;foobar&quot;, 42})
// []string{}, false

elements, ok := lo.FromAnySlice([]any{&quot;foobar&quot;, &quot;42&quot;})
// []string{&quot;foobar&quot;, &quot;42&quot;}, true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Empty&lt;/h3&gt; 
&lt;p&gt;Returns the &lt;a href=&quot;https://go.dev/ref/spec#The_zero_value&quot;&gt;zero value&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.Empty[int]()
// 0
lo.Empty[string]()
// &quot;&quot;
lo.Empty[bool]()
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsEmpty&lt;/h3&gt; 
&lt;p&gt;Returns true if argument is a zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.IsEmpty(0)
// true
lo.IsEmpty(42)
// false

lo.IsEmpty(&quot;&quot;)
// true
lo.IsEmpty(&quot;foobar&quot;)
// false

type test struct {
    foobar string
}

lo.IsEmpty(test{foobar: &quot;&quot;})
// true
lo.IsEmpty(test{foobar: &quot;foobar&quot;})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsNotEmpty&lt;/h3&gt; 
&lt;p&gt;Returns true if argument is a zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;lo.IsNotEmpty(0)
// false
lo.IsNotEmpty(42)
// true

lo.IsNotEmpty(&quot;&quot;)
// false
lo.IsNotEmpty(&quot;foobar&quot;)
// true

type test struct {
    foobar string
}

lo.IsNotEmpty(test{foobar: &quot;&quot;})
// false
lo.IsNotEmpty(test{foobar: &quot;foobar&quot;})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Coalesce&lt;/h3&gt; 
&lt;p&gt;Returns the first non-empty arguments. Arguments must be comparable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result, ok := lo.Coalesce(0, 1, 2, 3)
// 1 true

result, ok := lo.Coalesce(&quot;&quot;)
// &quot;&quot; false

var nilStr *string
str := &quot;foobar&quot;
result, ok := lo.Coalesce(nil, nilStr, &amp;amp;str)
// &amp;amp;&quot;foobar&quot; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-empty arguments. Arguments must be comparable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.CoalesceOrEmpty(0, 1, 2, 3)
// 1

result := lo.CoalesceOrEmpty(&quot;&quot;)
// &quot;&quot;

var nilStr *string
str := &quot;foobar&quot;
result := lo.CoalesceOrEmpty(nil, nilStr, &amp;amp;str)
// &amp;amp;&quot;foobar&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceSlice&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result, ok := lo.CoalesceSlice([]int{1, 2, 3}, []int{4, 5, 6})
// [1, 2, 3]
// true

result, ok := lo.CoalesceSlice(nil, []int{})
// []
// true

result, ok := lo.CoalesceSlice([]int(nil))
// []
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceSliceOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.CoalesceSliceOrEmpty([]int{1, 2, 3}, []int{4, 5, 6})
// [1, 2, 3]

result := lo.CoalesceSliceOrEmpty(nil, []int{})
// []
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceMap&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result, ok := lo.CoalesceMap(map[string]int{&quot;1&quot;: 1, &quot;2&quot;: 2, &quot;3&quot;: 3}, map[string]int{&quot;4&quot;: 4, &quot;5&quot;: 5, &quot;6&quot;: 6})
// {&quot;1&quot;: 1, &quot;2&quot;: 2, &quot;3&quot;: 3}
// true

result, ok := lo.CoalesceMap(nil, map[string]int{})
// {}
// true

result, ok := lo.CoalesceMap(map[string]int(nil))
// {}
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceMapOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;result := lo.CoalesceMapOrEmpty(map[string]int{&quot;1&quot;: 1, &quot;2&quot;: 2, &quot;3&quot;: 3}, map[string]int{&quot;4&quot;: 4, &quot;5&quot;: 5, &quot;6&quot;: 6})
// {&quot;1&quot;: 1, &quot;2&quot;: 2, &quot;3&quot;: 3}

result := lo.CoalesceMapOrEmpty(nil, map[string]int{})
// {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Partial&lt;/h3&gt; 
&lt;p&gt;Returns new function that, when called, has its first argument set to the provided value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;add := func(x, y int) int { return x + y }
f := lo.Partial(add, 5)

f(10)
// 15

f(42)
// 47
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Partial2 -&amp;gt; Partial5&lt;/h3&gt; 
&lt;p&gt;Returns new function that, when called, has its first argument set to the provided value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;add := func(x, y, z int) int { return x + y + z }
f := lo.Partial2(add, 42)

f(10, 5)
// 57

f(42, -4)
// 80
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Attempt&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output. Returns either the caught error or nil.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;iter, err := lo.Attempt(42, func(i int) error {
    if i == 5 {
        return nil
    }

    return fmt.Errorf(&quot;failed&quot;)
})
// 6
// nil

iter, err := lo.Attempt(2, func(i int) error {
    if i == 5 {
        return nil
    }

    return fmt.Errorf(&quot;failed&quot;)
})
// 2
// error &quot;failed&quot;

iter, err := lo.Attempt(0, func(i int) error {
    if i &amp;lt; 42 {
        return fmt.Errorf(&quot;failed&quot;)
    }

    return nil
})
// 43
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look on &lt;a href=&quot;https://github.com/cenkalti/backoff&quot;&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/3ggJZ2ZKcMj&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWithDelay&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output, with a pause between each call. Returns either the caught error or nil.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;iter, duration, err := lo.AttemptWithDelay(5, 2*time.Second, func(i int, duration time.Duration) error {
    if i == 2 {
        return nil
    }

    return fmt.Errorf(&quot;failed&quot;)
})
// 3
// ~ 4 seconds
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look on &lt;a href=&quot;https://github.com/cenkalti/backoff&quot;&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/tVs6CygC7m1&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWhile&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output. Returns either the caught error or nil, along with a bool value to determine whether the function should be invoked again. It will terminate the invoke immediately if the second return value is false.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;count1, err1 := lo.AttemptWhile(5, func(i int) (error, bool) {
    err := doMockedHTTPRequest(i)
    if err != nil {
        if errors.Is(err, ErrBadRequest) { // lets assume ErrBadRequest is a critical error that needs to terminate the invoke
            return err, false // flag the second return value as false to terminate the invoke
        }

        return err, true
    }

    return nil, false
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look on &lt;a href=&quot;https://github.com/cenkalti/backoff&quot;&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/M2wVq24PaZM&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWhileWithDelay&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output, with a pause between each call. Returns either the caught error or nil, along with a bool value to determine whether the function should be invoked again. It will terminate the invoke immediately if the second return value is false.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;count1, time1, err1 := lo.AttemptWhileWithDelay(5, time.Millisecond, func(i int, d time.Duration) (error, bool) {
    err := doMockedHTTPRequest(i)
    if err != nil {
        if errors.Is(err, ErrBadRequest) { // lets assume ErrBadRequest is a critical error that needs to terminate the invoke
            return err, false // flag the second return value as false to terminate the invoke
        }

        return err, true
    }

    return nil, false
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look on &lt;a href=&quot;https://github.com/cenkalti/backoff&quot;&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/cfcmhvLO-nv&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Debounce&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;NewDebounce&lt;/code&gt; creates a debounced instance that delays invoking functions given until after wait milliseconds have elapsed, until &lt;code&gt;cancel&lt;/code&gt; is called.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;f := func() {
    println(&quot;Called once after 100ms when debounce stopped invoking!&quot;)
}

debounce, cancel := lo.NewDebounce(100 * time.Millisecond, f)
for j := 0; j &amp;lt; 10; j++ {
    debounce()
}

time.Sleep(1 * time.Second)
cancel()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/mz32VMK2nqe&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DebounceBy&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;NewDebounceBy&lt;/code&gt; creates a debounced instance for each distinct key, that delays invoking functions given until after wait milliseconds have elapsed, until &lt;code&gt;cancel&lt;/code&gt; is called.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;f := func(key string, count int) {
    println(key + &quot;: Called once after 100ms when debounce stopped invoking!&quot;)
}

debounce, cancel := lo.NewDebounceBy(100 * time.Millisecond, f)
for j := 0; j &amp;lt; 10; j++ {
    debounce(&quot;first key&quot;)
    debounce(&quot;second key&quot;)
}

time.Sleep(1 * time.Second)
cancel(&quot;first key&quot;)
cancel(&quot;second key&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/d3Vpt6pxhY8&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Throttle&lt;/h3&gt; 
&lt;p&gt;Creates a throttled instance that invokes given functions only once in every interval.&lt;/p&gt; 
&lt;p&gt;This returns 2 functions, First one is throttled function and Second one is a function to reset interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;f := func() {
	println(&quot;Called once in every 100ms&quot;)
}

throttle, reset := lo.NewThrottle(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle()
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;NewThrottleWithCount&lt;/code&gt; is NewThrottle with count limit, throttled function will be invoked count times in every interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;f := func() {
	println(&quot;Called three times in every 100ms&quot;)
}

throttle, reset := lo.NewThrottleWithCount(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle()
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;NewThrottleBy&lt;/code&gt; and &lt;code&gt;NewThrottleByWithCount&lt;/code&gt; are NewThrottle with sharding key, throttled function will be invoked count times in every interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;f := func(key string) {
	println(key, &quot;Called three times in every 100ms&quot;)
}

throttle, reset := lo.NewThrottleByWithCount(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle(&quot;foo&quot;)
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Synchronize&lt;/h3&gt; 
&lt;p&gt;Wraps the underlying callback in a mutex. It receives an optional mutex.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;s := lo.Synchronize()

for i := 0; i &amp;lt; 10; i++ {
    go s.Do(func () {
        println(&quot;will be called sequentially&quot;)
    })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;mu := sync.Mutex{}

func foobar() {
    mu.Lock()
    defer mu.Unlock()

    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async&lt;/h3&gt; 
&lt;p&gt;Executes a function in a goroutine and returns the result in a channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := lo.Async(func() error { time.Sleep(10 * time.Second); return nil })
// chan error (nil)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;Executes a function in a goroutine and returns the result in a channel. For function with multiple return values, the results will be returned as a tuple inside the channel. For function without return, struct{} will be returned in the channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ch := lo.Async0(func() { time.Sleep(10 * time.Second) })
// chan struct{}

ch := lo.Async1(func() int {
  time.Sleep(10 * time.Second);
  return 42
})
// chan int (42)

ch := lo.Async2(func() (int, string) {
  time.Sleep(10 * time.Second);
  return 42, &quot;Hello&quot;
})
// chan lo.Tuple2[int, string] ({42, &quot;Hello&quot;})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Transaction&lt;/h3&gt; 
&lt;p&gt;Implements a Saga pattern.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;transaction := NewTransaction().
    Then(
        func(state int) (int, error) {
            fmt.Println(&quot;step 1&quot;)
            return state + 10, nil
        },
        func(state int) int {
            fmt.Println(&quot;rollback 1&quot;)
            return state - 10
        },
    ).
    Then(
        func(state int) (int, error) {
            fmt.Println(&quot;step 2&quot;)
            return state + 15, nil
        },
        func(state int) int {
            fmt.Println(&quot;rollback 2&quot;)
            return state - 15
        },
    ).
    Then(
        func(state int) (int, error) {
            fmt.Println(&quot;step 3&quot;)

            if true {
                return state, fmt.Errorf(&quot;error&quot;)
            }

            return state + 42, nil
        },
        func(state int) int {
            fmt.Println(&quot;rollback 3&quot;)
            return state - 42
        },
    )

_, _ = transaction.Process(-5)

// Output:
// step 1
// step 2
// step 3
// rollback 2
// rollback 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WaitFor&lt;/h3&gt; 
&lt;p&gt;Runs periodically until a condition is validated.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;alwaysTrue := func(i int) bool { return true }
alwaysFalse := func(i int) bool { return false }
laterTrue := func(i int) bool {
    return i &amp;gt; 5
}

iterations, duration, ok := lo.WaitFor(alwaysTrue, 10*time.Millisecond, 2 * time.Millisecond)
// 1
// 1ms
// true

iterations, duration, ok := lo.WaitFor(alwaysFalse, 10*time.Millisecond, time.Millisecond)
// 10
// 10ms
// false

iterations, duration, ok := lo.WaitFor(laterTrue, 10*time.Millisecond, time.Millisecond)
// 7
// 7ms
// true

iterations, duration, ok := lo.WaitFor(laterTrue, 10*time.Millisecond, 5*time.Millisecond)
// 2
// 10ms
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WaitForWithContext&lt;/h3&gt; 
&lt;p&gt;Runs periodically until a condition is validated or context is invalid.&lt;/p&gt; 
&lt;p&gt;The condition receives also the context, so it can invalidate the process in the condition checker&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ctx := context.Background()

alwaysTrue := func(_ context.Context, i int) bool { return true }
alwaysFalse := func(_ context.Context, i int) bool { return false }
laterTrue := func(_ context.Context, i int) bool {
    return i &amp;gt;= 5
}

iterations, duration, ok := lo.WaitForWithContext(ctx, alwaysTrue, 10*time.Millisecond, 2 * time.Millisecond)
// 1
// 1ms
// true

iterations, duration, ok := lo.WaitForWithContext(ctx, alwaysFalse, 10*time.Millisecond, time.Millisecond)
// 10
// 10ms
// false

iterations, duration, ok := lo.WaitForWithContext(ctx, laterTrue, 10*time.Millisecond, time.Millisecond)
// 5
// 5ms
// true

iterations, duration, ok := lo.WaitForWithContext(ctx, laterTrue, 10*time.Millisecond, 5*time.Millisecond)
// 2
// 10ms
// false

expiringCtx, cancel := context.WithTimeout(ctx, 5*time.Millisecond)
iterations, duration, ok := lo.WaitForWithContext(expiringCtx, alwaysFalse, 100*time.Millisecond, time.Millisecond)
// 5
// 5.1ms
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Validate&lt;/h3&gt; 
&lt;p&gt;Helper function that creates an error when a condition is not met.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;slice := []string{&quot;a&quot;}
val := lo.Validate(len(slice) == 0, &quot;Slice should be empty but contains %v&quot;, slice)
// error(&quot;Slice should be empty but contains [a]&quot;)

slice := []string{}
val := lo.Validate(len(slice) == 0, &quot;Slice should be empty but contains %v&quot;, slice)
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/vPyh51XpCBt&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Must&lt;/h3&gt; 
&lt;p&gt;Wraps a function call to panics if second argument is &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, returns the value otherwise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;val := lo.Must(time.Parse(&quot;2006-01-02&quot;, &quot;2022-01-15&quot;))
// 2022-01-15

val := lo.Must(time.Parse(&quot;2006-01-02&quot;, &quot;bad-value&quot;))
// panics
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/TMoWrRp3DyC&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Must{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;Must* has the same behavior as Must, but returns multiple values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func example0() (error)
func example1() (int, error)
func example2() (int, string, error)
func example3() (int, string, time.Date, error)
func example4() (int, string, time.Date, bool, error)
func example5() (int, string, time.Date, bool, float64, error)
func example6() (int, string, time.Date, bool, float64, byte, error)

lo.Must0(example0())
val1 := lo.Must1(example1())    // alias to Must
val1, val2 := lo.Must2(example2())
val1, val2, val3 := lo.Must3(example3())
val1, val2, val3, val4 := lo.Must4(example4())
val1, val2, val3, val4, val5 := lo.Must5(example5())
val1, val2, val3, val4, val5, val6 := lo.Must6(example6())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can wrap functions like &lt;code&gt;func (...) (..., ok bool)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// math.Signbit(float64) bool
lo.Must0(math.Signbit(v))

// bytes.Cut([]byte,[]byte) ([]byte, []byte, bool)
before, after := lo.Must2(bytes.Cut(s, sep))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can give context to the panic message by adding some printf-like arguments.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;val, ok := lo.Find(myString, func(i string) bool {
    return i == requiredChar
})
lo.Must0(ok, &quot;&#39;%s&#39; must always contain &#39;%s&#39;&quot;, myString, requiredChar)

list := []int{0, 1, 2}
item := 5
lo.Must0(lo.Contains(list, item), &quot;&#39;%s&#39; must always contain &#39;%s&#39;&quot;, list, item)
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/TMoWrRp3DyC&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Try&lt;/h3&gt; 
&lt;p&gt;Calls the function and returns false in case of error and panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ok := lo.Try(func() error {
    panic(&quot;error&quot;)
    return nil
})
// false

ok := lo.Try(func() error {
    return nil
})
// true

ok := lo.Try(func() error {
    return fmt.Errorf(&quot;error&quot;)
})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/mTyyWUvn9u4&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Try{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but the callback returns 2 variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;ok := lo.Try2(func() (string, error) {
    panic(&quot;error&quot;)
    return &quot;&quot;, nil
})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/mTyyWUvn9u4&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryOr&lt;/h3&gt; 
&lt;p&gt;Calls the function and return a default value in case of error and on panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str, ok := lo.TryOr(func() (string, error) {
    panic(&quot;error&quot;)
    return &quot;hello&quot;, nil
}, &quot;world&quot;)
// world
// false

str, ok := lo.TryOr(func() error {
    return &quot;hello&quot;, nil
}, &quot;world&quot;)
// hello
// true

str, ok := lo.TryOr(func() error {
    return &quot;hello&quot;, fmt.Errorf(&quot;error&quot;)
}, &quot;world&quot;)
// world
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/B4F7Wg2Zh9X&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryOr{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;TryOr&lt;/code&gt;, but the callback returns &lt;code&gt;X&lt;/code&gt; variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;str, nbr, ok := lo.TryOr2(func() (string, int, error) {
    panic(&quot;error&quot;)
    return &quot;hello&quot;, 42, nil
}, &quot;world&quot;, 21)
// world
// 21
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/B4F7Wg2Zh9X&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryWithErrorValue&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but also returns the value passed to panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;err, ok := lo.TryWithErrorValue(func() error {
    panic(&quot;error&quot;)
    return nil
})
// &quot;error&quot;, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/Kc7afQIT2Fs&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryCatch&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but calls the catch function in case of error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;caught := false

ok := lo.TryCatch(func() error {
    panic(&quot;error&quot;)
    return nil
}, func() {
    caught = true
})
// false
// caught == true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/PnOON-EqBiU&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryCatchWithErrorValue&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;TryWithErrorValue&lt;/code&gt;, but calls the catch function in case of error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;caught := false

ok := lo.TryCatchWithErrorValue(func() error {
    panic(&quot;error&quot;)
    return nil
}, func(val any) {
    caught = val == &quot;error&quot;
})
// false
// caught == true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/8Pc9gwX_GZO&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ErrorsAs&lt;/h3&gt; 
&lt;p&gt;A shortcut for:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;err := doSomething()

var rateLimitErr *RateLimitError
if ok := errors.As(err, &amp;amp;rateLimitErr); ok {
    // retry later
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;1 line &lt;code&gt;lo&lt;/code&gt; helper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;err := doSomething()

if rateLimitErr, ok := lo.ErrorsAs[*RateLimitError](err); ok {
    // retry later
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/8wk5rH8UfrE&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assert&lt;/h3&gt; 
&lt;p&gt;Does nothing when the condition is &lt;code&gt;true&lt;/code&gt;, otherwise it panics with an optional message.&lt;/p&gt; 
&lt;p&gt;Think twice before using it, given that &lt;a href=&quot;https://go.dev/doc/faq#assertions&quot;&gt;Go intentionally omits assertions from its standard library&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;age := getUserAge()

lo.Assert(age &amp;gt;= 15)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;age := getUserAge()

lo.Assert(age &amp;gt;= 15, &quot;user age must be &amp;gt;= 15&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/Xv8LLKBMNwI&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assertf&lt;/h3&gt; 
&lt;p&gt;Like &lt;code&gt;Assert&lt;/code&gt;, but with &lt;code&gt;fmt.Printf&lt;/code&gt;-like formatting.&lt;/p&gt; 
&lt;p&gt;Think twice before using it, given that &lt;a href=&quot;https://go.dev/doc/faq#assertions&quot;&gt;Go intentionally omits assertions from its standard library&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;age := getUserAge()

lo.Assertf(age &amp;gt;= 15, &quot;user age must be &amp;gt;= 15, got %d&quot;, age)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href=&quot;https://go.dev/play/p/TVPEmVcyrdY&quot;&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h2&gt;🛩 Benchmark&lt;/h2&gt; 
&lt;p&gt;We executed a simple benchmark with a dead-simple &lt;code&gt;lo.Map&lt;/code&gt; loop:&lt;/p&gt; 
&lt;p&gt;See the full implementation &lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/map_benchmark_test.go&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;_ = lo.Map[int64](arr, func(x int64, i int) string {
    return strconv.FormatInt(x, 10)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Here is a comparison between &lt;code&gt;lo.Map&lt;/code&gt;, &lt;code&gt;lop.Map&lt;/code&gt;, &lt;code&gt;go-funk&lt;/code&gt; library and a simple Go &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ go test -benchmem -bench ./...
goos: linux
goarch: amd64
pkg: github.com/samber/lo
cpu: Intel(R) Core(TM) i5-7267U CPU @ 3.10GHz
cpu: Intel(R) Core(TM) i7 CPU         920  @ 2.67GHz
BenchmarkMap/lo.Map-8         	       8	 132728237 ns/op	39998945 B/op	 1000002 allocs/op
BenchmarkMap/lop.Map-8        	       2	 503947830 ns/op	119999956 B/op	 3000007 allocs/op
BenchmarkMap/reflect-8        	       2	 826400560 ns/op	170326512 B/op	 4000042 allocs/op
BenchmarkMap/for-8            	       9	 126252954 ns/op	39998674 B/op	 1000001 allocs/op
PASS
ok  	github.com/samber/lo	6.657s
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; is way faster (x7) than &lt;code&gt;go-funk&lt;/code&gt;, a reflection-based Map implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; has the same allocation profile as &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; is 4% slower than &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lop.Map&lt;/code&gt; is slower than &lt;code&gt;lo.Map&lt;/code&gt; because it implies more memory allocation and locks. &lt;code&gt;lop.Map&lt;/code&gt; will be useful for long-running callbacks, such as i/o bound processing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;for&lt;/code&gt; beats other implementations for memory and CPU.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ping me on Twitter &lt;a href=&quot;https://twitter.com/samuelberthe&quot;&gt;@samuelberthe&lt;/a&gt; (DMs, mentions, whatever :))&lt;/li&gt; 
 &lt;li&gt;Fork the &lt;a href=&quot;https://github.com/samber/lo&quot;&gt;project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fix &lt;a href=&quot;https://github.com/samber/lo/issues&quot;&gt;open issues&lt;/a&gt; or request new features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Don&#39;t hesitate ;)&lt;/p&gt; 
&lt;p&gt;Helper naming: helpers must be self-explanatory and respect standards (other languages, libraries...). Feel free to suggest many names in your contributions.&lt;/p&gt; 
&lt;h3&gt;With Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose run --rm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Without Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install some dev dependencies
make tools

# Run tests
make test
# or
make watch-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👤 Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=samber/lo&quot; alt=&quot;Contributors&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;💫 Show your support&lt;/h2&gt; 
&lt;p&gt;Give a ⭐️ if this project helped you!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/samber&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/samber?style=for-the-badge&quot; alt=&quot;GitHub Sponsors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2022 &lt;a href=&quot;https://github.com/samber&quot;&gt;Samuel Berthe&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is under &lt;a href=&quot;https://raw.githubusercontent.com/samber/lo/master/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rclone/rclone</title>
      <link>https://github.com/rclone/rclone</link>
      <description>&lt;p&gt;&quot;rsync for cloud storage&quot; - Google Drive, S3, Dropbox, Backblaze B2, One Drive, Swift, Hubic, Wasabi, Google Cloud Storage, Azure Blob, Azure Files, Yandex Files&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://rclone.org/#gh-light-mode-only&quot;&gt;&lt;img src=&quot;https://rclone.org/img/logo_on_light__horizontal_color.svg?sanitize=true&quot; width=&quot;50%&quot; alt=&quot;rclone logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- markdownlint-disable-next-line no-inline-html --&gt; 
&lt;p&gt;&lt;a href=&quot;https://rclone.org/#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;https://rclone.org/img/logo_on_dark__horizontal_color.svg?sanitize=true&quot; width=&quot;50%&quot; alt=&quot;rclone logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://rclone.org&quot;&gt;Website&lt;/a&gt; | &lt;a href=&quot;https://rclone.org/docs/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://rclone.org/downloads/&quot;&gt;Download&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/rclone/rclone/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; | &lt;a href=&quot;https://rclone.org/changelog/&quot;&gt;Changelog&lt;/a&gt; | &lt;a href=&quot;https://rclone.org/install/&quot;&gt;Installation&lt;/a&gt; | &lt;a href=&quot;https://forum.rclone.org/&quot;&gt;Forum&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rclone/rclone/actions?query=workflow%3Abuild&quot;&gt;&lt;img src=&quot;https://github.com/rclone/rclone/workflows/build/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/rclone/rclone&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/rclone/rclone&quot; alt=&quot;Go Report Card&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://godoc.org/github.com/rclone/rclone&quot;&gt;&lt;img src=&quot;https://godoc.org/github.com/rclone/rclone?status.svg?sanitize=true&quot; alt=&quot;GoDoc&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/rclone/rclone&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/rclone/rclone&quot; alt=&quot;Docker Pulls&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Rclone&lt;/h1&gt; 
&lt;p&gt;Rclone &lt;em&gt;(&quot;rsync for cloud storage&quot;)&lt;/em&gt; is a command-line program to sync files and directories to and from different cloud storage providers.&lt;/p&gt; 
&lt;h2&gt;Storage providers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;1Fichier &lt;a href=&quot;https://rclone.org/fichier/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Akamai Netstorage &lt;a href=&quot;https://rclone.org/netstorage/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Alibaba Cloud (Aliyun) Object Storage System (OSS) &lt;a href=&quot;https://rclone.org/s3/#alibaba-oss&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon S3 &lt;a href=&quot;https://rclone.org/s3/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ArvanCloud Object Storage (AOS) &lt;a href=&quot;https://rclone.org/s3/#arvan-cloud-object-storage-aos&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Backblaze B2 &lt;a href=&quot;https://rclone.org/b2/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Box &lt;a href=&quot;https://rclone.org/box/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ceph &lt;a href=&quot;https://rclone.org/s3/#ceph&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;China Mobile Ecloud Elastic Object Storage (EOS) &lt;a href=&quot;https://rclone.org/s3/#china-mobile-ecloud-eos&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cloudflare R2 &lt;a href=&quot;https://rclone.org/s3/#cloudflare-r2&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Citrix ShareFile &lt;a href=&quot;https://rclone.org/sharefile/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;DigitalOcean Spaces &lt;a href=&quot;https://rclone.org/s3/#digitalocean-spaces&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Digi Storage &lt;a href=&quot;https://rclone.org/koofr/#digi-storage&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dreamhost &lt;a href=&quot;https://rclone.org/s3/#dreamhost&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dropbox &lt;a href=&quot;https://rclone.org/dropbox/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Enterprise File Fabric &lt;a href=&quot;https://rclone.org/filefabric/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fastmail Files &lt;a href=&quot;https://rclone.org/webdav/#fastmail-files&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FileLu &lt;a href=&quot;https://rclone.org/filelu/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Files.com &lt;a href=&quot;https://rclone.org/filescom/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FlashBlade &lt;a href=&quot;https://rclone.org/s3/#pure-storage-flashblade&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FTP &lt;a href=&quot;https://rclone.org/ftp/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GoFile &lt;a href=&quot;https://rclone.org/gofile/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Storage &lt;a href=&quot;https://rclone.org/googlecloudstorage/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Drive &lt;a href=&quot;https://rclone.org/drive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Photos &lt;a href=&quot;https://rclone.org/googlephotos/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HDFS (Hadoop Distributed Filesystem) &lt;a href=&quot;https://rclone.org/hdfs/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hetzner Storage Box &lt;a href=&quot;https://rclone.org/sftp/#hetzner-storage-box&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HiDrive &lt;a href=&quot;https://rclone.org/hidrive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HTTP &lt;a href=&quot;https://rclone.org/http/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Huawei Cloud Object Storage Service(OBS) &lt;a href=&quot;https://rclone.org/s3/#huawei-obs&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;iCloud Drive &lt;a href=&quot;https://rclone.org/iclouddrive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ImageKit &lt;a href=&quot;https://rclone.org/imagekit/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Internet Archive &lt;a href=&quot;https://rclone.org/internetarchive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jottacloud &lt;a href=&quot;https://rclone.org/jottacloud/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;IBM COS S3 &lt;a href=&quot;https://rclone.org/s3/#ibm-cos-s3&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;IONOS Cloud &lt;a href=&quot;https://rclone.org/s3/#ionos&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Koofr &lt;a href=&quot;https://rclone.org/koofr/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Leviia Object Storage &lt;a href=&quot;https://rclone.org/s3/#leviia&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Liara Object Storage &lt;a href=&quot;https://rclone.org/s3/#liara-object-storage&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Linkbox &lt;a href=&quot;https://rclone.org/linkbox&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Linode Object Storage &lt;a href=&quot;https://rclone.org/s3/#linode&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Magalu Object Storage &lt;a href=&quot;https://rclone.org/s3/#magalu&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mail.ru Cloud &lt;a href=&quot;https://rclone.org/mailru/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Memset Memstore &lt;a href=&quot;https://rclone.org/swift/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MEGA &lt;a href=&quot;https://rclone.org/mega/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MEGA S4 Object Storage &lt;a href=&quot;https://rclone.org/s3/#mega&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Memory &lt;a href=&quot;https://rclone.org/memory/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Azure Blob Storage &lt;a href=&quot;https://rclone.org/azureblob/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Azure Files Storage &lt;a href=&quot;https://rclone.org/azurefiles/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft OneDrive &lt;a href=&quot;https://rclone.org/onedrive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Minio &lt;a href=&quot;https://rclone.org/s3/#minio&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Nextcloud &lt;a href=&quot;https://rclone.org/webdav/#nextcloud&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blomp Cloud Storage &lt;a href=&quot;https://rclone.org/swift/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenDrive &lt;a href=&quot;https://rclone.org/opendrive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenStack Swift &lt;a href=&quot;https://rclone.org/swift/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oracle Cloud Storage &lt;a href=&quot;https://rclone.org/swift/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oracle Object Storage &lt;a href=&quot;https://rclone.org/oracleobjectstorage/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Outscale &lt;a href=&quot;https://rclone.org/s3/#outscale&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OVHcloud Object Storage (Swift) &lt;a href=&quot;https://rclone.org/swift/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OVHcloud Object Storage (S3-compatible) &lt;a href=&quot;https://rclone.org/s3/#ovhcloud&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ownCloud &lt;a href=&quot;https://rclone.org/webdav/#owncloud&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;pCloud &lt;a href=&quot;https://rclone.org/pcloud/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Petabox &lt;a href=&quot;https://rclone.org/s3/#petabox&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;PikPak &lt;a href=&quot;https://rclone.org/pikpak/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Pixeldrain &lt;a href=&quot;https://rclone.org/pixeldrain/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;premiumize.me &lt;a href=&quot;https://rclone.org/premiumizeme/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;put.io &lt;a href=&quot;https://rclone.org/putio/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Proton Drive &lt;a href=&quot;https://rclone.org/protondrive/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;QingStor &lt;a href=&quot;https://rclone.org/qingstor/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Qiniu Cloud Object Storage (Kodo) &lt;a href=&quot;https://rclone.org/s3/#qiniu&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Quatrix &lt;a href=&quot;https://rclone.org/quatrix/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rackspace Cloud Files &lt;a href=&quot;https://rclone.org/swift/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;RackCorp Object Storage &lt;a href=&quot;https://rclone.org/s3/#RackCorp&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;rsync.net &lt;a href=&quot;https://rclone.org/sftp/#rsync-net&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scaleway &lt;a href=&quot;https://rclone.org/s3/#scaleway&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Seafile &lt;a href=&quot;https://rclone.org/seafile/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Seagate Lyve Cloud &lt;a href=&quot;https://rclone.org/s3/#lyve&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SeaweedFS &lt;a href=&quot;https://rclone.org/s3/#seaweedfs&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Selectel Object Storage &lt;a href=&quot;https://rclone.org/s3/#selectel&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SFTP &lt;a href=&quot;https://rclone.org/sftp/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SMB / CIFS &lt;a href=&quot;https://rclone.org/smb/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;StackPath &lt;a href=&quot;https://rclone.org/s3/#stackpath&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Storj &lt;a href=&quot;https://rclone.org/storj/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SugarSync &lt;a href=&quot;https://rclone.org/sugarsync/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Synology C2 Object Storage &lt;a href=&quot;https://rclone.org/s3/#synology-c2&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tencent Cloud Object Storage (COS) &lt;a href=&quot;https://rclone.org/s3/#tencent-cos&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Uloz.to &lt;a href=&quot;https://rclone.org/ulozto/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wasabi &lt;a href=&quot;https://rclone.org/s3/#wasabi&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WebDAV &lt;a href=&quot;https://rclone.org/webdav/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Yandex Disk &lt;a href=&quot;https://rclone.org/yandex/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Zoho WorkDrive &lt;a href=&quot;https://rclone.org/zoho/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Zata.ai &lt;a href=&quot;https://rclone.org/s3/#Zata&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;The local filesystem &lt;a href=&quot;https://rclone.org/local/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://rclone.org/overview/&quot;&gt;the full list of all storage providers and their features&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Virtual storage providers&lt;/h3&gt; 
&lt;p&gt;These backends adapt or modify other storage providers&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alias: rename existing remotes &lt;a href=&quot;https://rclone.org/alias/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cache: cache remotes (DEPRECATED) &lt;a href=&quot;https://rclone.org/cache/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chunker: split large files &lt;a href=&quot;https://rclone.org/chunker/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Combine: combine multiple remotes into a directory tree &lt;a href=&quot;https://rclone.org/combine/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Compress: compress files &lt;a href=&quot;https://rclone.org/compress/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Crypt: encrypt files &lt;a href=&quot;https://rclone.org/crypt/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hasher: hash files &lt;a href=&quot;https://rclone.org/hasher/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Union: join multiple remotes to work together &lt;a href=&quot;https://rclone.org/union/&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MD5/SHA-1 hashes checked at all times for file integrity&lt;/li&gt; 
 &lt;li&gt;Timestamps preserved on files&lt;/li&gt; 
 &lt;li&gt;Partial syncs supported on a whole file basis&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/commands/rclone_copy/&quot;&gt;Copy&lt;/a&gt; mode to just copy new/changed files&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/commands/rclone_sync/&quot;&gt;Sync&lt;/a&gt; (one way) mode to make a directory identical&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/bisync/&quot;&gt;Bisync&lt;/a&gt; (two way) to keep two directories in sync bidirectionally&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/commands/rclone_check/&quot;&gt;Check&lt;/a&gt; mode to check for file hash equality&lt;/li&gt; 
 &lt;li&gt;Can sync to and from network, e.g. two different cloud accounts&lt;/li&gt; 
 &lt;li&gt;Optional large file chunking (&lt;a href=&quot;https://rclone.org/chunker/&quot;&gt;Chunker&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Optional transparent compression (&lt;a href=&quot;https://rclone.org/compress/&quot;&gt;Compress&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Optional encryption (&lt;a href=&quot;https://rclone.org/crypt/&quot;&gt;Crypt&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Optional FUSE mount (&lt;a href=&quot;https://rclone.org/commands/rclone_mount/&quot;&gt;rclone mount&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Multi-threaded downloads to local disk&lt;/li&gt; 
 &lt;li&gt;Can &lt;a href=&quot;https://rclone.org/commands/rclone_serve/&quot;&gt;serve&lt;/a&gt; local or remote files over HTTP/WebDAV/FTP/SFTP/DLNA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation &amp;amp; documentation&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://rclone.org/&quot;&gt;rclone website&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/install/&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/docs/&quot;&gt;Documentation &amp;amp; configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/changelog/&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/faq/&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/overview/&quot;&gt;Storage providers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.rclone.org/&quot;&gt;Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;...and more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rclone.org/downloads/&quot;&gt;https://rclone.org/downloads/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This is free software under the terms of the MIT license (check the &lt;a href=&quot;https://raw.githubusercontent.com/rclone/rclone/master/COPYING&quot;&gt;COPYING file&lt;/a&gt; included in this package).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>crossplane/crossplane</title>
      <link>https://github.com/crossplane/crossplane</link>
      <description>&lt;p&gt;The Cloud Native Control Plane&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.bestpractices.dev/projects/3260&quot;&gt;&lt;img src=&quot;https://www.bestpractices.dev/projects/3260/badge&quot; alt=&quot;OpenSSF Best Practices&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/crossplane/crossplane/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/crossplane/crossplane&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/crossplane/crossplane&quot; alt=&quot;Go Report Card&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/crossplane/crossplane/main/banner.png&quot; alt=&quot;Crossplane&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Crossplane is a framework for building cloud native control planes without needing to write code. It has a highly extensible backend that enables you to build a control plane that can orchestrate applications and infrastructure no matter where they run, and a highly configurable frontend that puts you in control of the schema of the declarative API it offers.&lt;/p&gt; 
&lt;p&gt;Crossplane is a &lt;a href=&quot;https://www.cncf.io/&quot;&gt;Cloud Native Computing Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Crossplane&#39;s &lt;a href=&quot;https://docs.crossplane.io/latest/getting-started/&quot;&gt;Get Started Docs&lt;/a&gt; cover install and cloud provider quickstarts.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/crossplane/crossplane/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/crossplane/crossplane/all.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://artifacthub.io/packages/helm/crossplane/crossplane&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/crossplane&quot; alt=&quot;Artifact Hub&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Currently maintained releases, as well as the next few upcoming releases are listed below. For more information take a look at the Crossplane &lt;a href=&quot;https://docs.crossplane.io/knowledge-base/guides/release-cycle&quot;&gt;release cycle documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Release&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Release Date&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;EOL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;v1.19&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Feb 11, 2025&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Nov 2025&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;v1.20&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;May 21, 2025&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Feb 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;v2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Aug 8, 2025&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;May 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;v2.1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Early Nov &#39;25&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Aug 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;v2.2&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Early Feb &#39;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Nov 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;v2.3&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Early May &#39;26&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Feb 2027&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You can subscribe to the &lt;a href=&quot;https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month&quot;&gt;community calendar&lt;/a&gt; to track all release dates, and find the most recent releases on the &lt;a href=&quot;https://github.com/crossplane/crossplane/releases&quot;&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The public roadmap for Crossplane is published as a GitHub project board. Issues added to the roadmap have been triaged and identified as valuable to the community, and therefore a priority for the project that we expect to invest in.&lt;/p&gt; 
&lt;p&gt;The maintainer team regularly triages requests from the community to identify features and issues of suitable scope and impact to include in this roadmap. The community is encouraged to show their support for potential roadmap issues by adding a &lt;span&gt;👍&lt;/span&gt; reaction, leaving descriptive comments, and attending the &lt;a href=&quot;https://github.com/crossplane/crossplane/raw/main/README.md#get-involved&quot;&gt;regular community meetings&lt;/a&gt; to discuss their requirements and use cases.&lt;/p&gt; 
&lt;p&gt;The maintainer team updates the roadmap on an as needed basis, in response to demand, priority, and available resources. The public roadmap can be updated at any time.&lt;/p&gt; 
&lt;p&gt;Milestones assigned to any issues in the roadmap are intended to give a sense of overall priority and the expected order of delivery. They should be considered approximate estimations and are &lt;strong&gt;not&lt;/strong&gt; a strict commitment to a specific delivery timeline.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/crossplane/projects/20/views/9?pane=info&quot;&gt;Crossplane Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://slack.crossplane.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-crossplane-red?logo=slack&quot; alt=&quot;Slack&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bsky.app/profile/crossplane.io&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/bluesky-Follow-blue?logo=bluesky&quot; alt=&quot;Bluesky Follow&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=crossplane_io&amp;amp;user_id=788180534543339520&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/crossplane_io?logo=X&amp;amp;label=Follow&amp;amp;style=flat&quot; alt=&quot;Twitter Follow&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/@Crossplane&quot;&gt;&lt;img src=&quot;https://img.shields.io/youtube/channel/subscribers/UC19FgzMBMqBro361HbE46Fw&quot; alt=&quot;YouTube Channel Subscribers&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Crossplane is a community driven project; we welcome your contribution. To file a bug, suggest an improvement, or request a new feature please open an &lt;a href=&quot;https://github.com/crossplane/crossplane/issues&quot;&gt;issue against Crossplane&lt;/a&gt; or the relevant provider. Refer to our &lt;a href=&quot;https://raw.githubusercontent.com/crossplane/crossplane/main/contributing/README.md&quot;&gt;contributing guide&lt;/a&gt; for more information on how you can help.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discuss Crossplane on &lt;a href=&quot;https://slack.crossplane.io&quot;&gt;Slack&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href=&quot;https://bsky.app/profile/crossplane.io&quot;&gt;Bluesky&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/crossplane_io&quot;&gt;Twitter&lt;/a&gt;, or &lt;a href=&quot;https://www.linkedin.com/company/crossplane/&quot;&gt;LinkedIn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Contact us via &lt;a href=&quot;mailto:crossplane-info@lists.cncf.io&quot;&gt;Email&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join our regular community meetings.&lt;/li&gt; 
 &lt;li&gt;Provide feedback on our &lt;a href=&quot;https://github.com/orgs/crossplane/projects/20/views/9?pane=info&quot;&gt;roadmap and releases board&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Crossplane community meeting takes place every 4 weeks on &lt;a href=&quot;https://www.thetimezoneconverter.com/?t=10:00&amp;amp;tz=PT%20%28Pacific%20Time%29&quot;&gt;Thursday at 10:00am Pacific Time&lt;/a&gt;. You can find the up to date meeting schedule on the &lt;a href=&quot;https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month&quot;&gt;Community Calendar&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Anyone who wants to discuss the direction of the project, design and implementation reviews, or raise general questions with the broader community is encouraged to join.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Meeting link: &lt;a href=&quot;https://zoom-lfx.platform.linuxfoundation.org/meeting/98901510164?password=c60c41ae-1e1e-42d0-9a74-16de2fbb66f9&quot;&gt;https://zoom-lfx.platform.linuxfoundation.org/meeting/98901510164?password=c60c41ae-1e1e-42d0-9a74-16de2fbb66f9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1q_sp2jLQsDEOX7Yug6TPOv7Fwrys6EwcF5Itxjkno7Y/edit?usp=sharing&quot;&gt;Current agenda and past meeting notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL510POnNVaaYYYDSICFSNWFqNbx1EMr-M&quot;&gt;Past meeting recordings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month&quot;&gt;Community Calendar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Special Interest Groups (SIG)&lt;/h3&gt; 
&lt;p&gt;Each SIG collaborates in Slack and some groups have regular meetings, you can find the meetings in the &lt;a href=&quot;https://zoom-lfx.platform.linuxfoundation.org/meetings/crossplane?view=month&quot;&gt;Community Calendar&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C08V9PMLRQA&quot;&gt;#sig-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C05BP6QFLUW&quot;&gt;#sig-composition-environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C031Y29CSAE&quot;&gt;#sig-composition-functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C05BP8W5ALW&quot;&gt;#sig-deletion-ordering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C05U1LLM3B2&quot;&gt;#sig-devex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C02CAQ52DPU&quot;&gt;#sig-docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C05C8CCTVNV&quot;&gt;#sig-e2e-testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C061GNH3LA0&quot;&gt;#sig-observability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C04D5988QEA&quot;&gt;#sig-observe-only&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C056YAQRV16&quot;&gt;#sig-provider-families&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C05BY7DKFV2&quot;&gt;#sig-secret-stores&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crossplane.slack.com/archives/C05T19TB729&quot;&gt;#sig-upjet&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;A list of publicly known users of the Crossplane project can be found in &lt;a href=&quot;https://raw.githubusercontent.com/crossplane/crossplane/main/ADOPTERS.md&quot;&gt;ADOPTERS.md&lt;/a&gt;. We encourage all users of Crossplane to add themselves to this list - we want to see the community&#39;s growing success!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Crossplane is under the Apache 2.0 license.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.io/projects/git%2Bgithub.com%2Fcrossplane%2Fcrossplane?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcrossplane%2Fcrossplane.svg?type=large&quot; alt=&quot;FOSSA Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Named links --&gt;</description>
    </item>
    
    <item>
      <title>mostlygeek/llama-swap</title>
      <link>https://github.com/mostlygeek/llama-swap</link>
      <description>&lt;p&gt;Model swapping for llama.cpp (or any local OpenAPI compatible server)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mostlygeek/llama-swap/main/header2.png&quot; alt=&quot;llama-swap header image&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/mostlygeek/llama-swap/total&quot; alt=&quot;GitHub Downloads (all assets, all releases)&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/mostlygeek/llama-swap/go-ci.yml&quot; alt=&quot;GitHub Actions Workflow Status&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/stars/mostlygeek/llama-swap&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;llama-swap&lt;/h1&gt; 
&lt;p&gt;llama-swap is a light weight, transparent proxy server that provides automatic model swapping to llama.cpp&#39;s server.&lt;/p&gt; 
&lt;p&gt;Written in golang, it is very easy to install (single binary with no dependencies) and configure (single yaml file). To get started, download a pre-built binary or use the provided docker images.&lt;/p&gt; 
&lt;h2&gt;Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Easy to deploy: single binary with no dependencies&lt;/li&gt; 
 &lt;li&gt;✅ Easy to config: single yaml file&lt;/li&gt; 
 &lt;li&gt;✅ On-demand model switching&lt;/li&gt; 
 &lt;li&gt;✅ OpenAI API supported endpoints: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;v1/completions&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;v1/chat/completions&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;v1/embeddings&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;v1/rerank&lt;/code&gt;, &lt;code&gt;v1/reranking&lt;/code&gt;, &lt;code&gt;rerank&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;v1/audio/speech&lt;/code&gt; (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/issues/36&quot;&gt;#36&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;v1/audio/transcriptions&lt;/code&gt; (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/issues/41#issuecomment-2722637867&quot;&gt;docs&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ llama-swap custom API endpoints 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;/ui&lt;/code&gt; - web UI&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/log&lt;/code&gt; - remote log monitoring&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/upstream/:model_id&lt;/code&gt; - direct access to upstream HTTP server (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/pull/31&quot;&gt;demo&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/unload&lt;/code&gt; - manually unload running models (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/issues/58&quot;&gt;#58&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/running&lt;/code&gt; - list currently running models (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/issues/61&quot;&gt;#61&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/health&lt;/code&gt; - just returns &quot;OK&quot;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Run multiple models at once with &lt;code&gt;Groups&lt;/code&gt; (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/issues/107&quot;&gt;#107&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;✅ Automatic unloading of models after timeout by setting a &lt;code&gt;ttl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;✅ Use any local OpenAI compatible server (llama.cpp, vllm, tabbyAPI, etc)&lt;/li&gt; 
 &lt;li&gt;✅ Docker and Podman support&lt;/li&gt; 
 &lt;li&gt;✅ Full control over server settings per model&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How does llama-swap work?&lt;/h2&gt; 
&lt;p&gt;When a request is made to an OpenAI compatible endpoint, llama-swap will extract the &lt;code&gt;model&lt;/code&gt; value and load the appropriate server configuration to serve it. If the wrong upstream server is running, it will be replaced with the correct one. This is where the &quot;swap&quot; part comes in. The upstream server is automatically swapped to the correct one to serve the request.&lt;/p&gt; 
&lt;p&gt;In the most basic configuration llama-swap handles one model at a time. For more advanced use cases, the &lt;code&gt;groups&lt;/code&gt; feature allows multiple models to be loaded at the same time. You have complete control over how your system resources are used.&lt;/p&gt; 
&lt;h2&gt;config.yaml&lt;/h2&gt; 
&lt;p&gt;llama-swap is managed entirely through a yaml configuration file.&lt;/p&gt; 
&lt;p&gt;It can be very minimal to start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;models:
  &quot;qwen2.5&quot;:
    cmd: |
      /path/to/llama-server
      -hf bartowski/Qwen2.5-0.5B-Instruct-GGUF:Q4_K_M
      --port ${PORT}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, there are many more capabilities that llama-swap supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;groups&lt;/code&gt; to run multiple models at once&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ttl&lt;/code&gt; to automatically unload models&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;macros&lt;/code&gt; for reusable snippets&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aliases&lt;/code&gt; to use familiar model names (e.g., &quot;gpt-4o-mini&quot;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;env&lt;/code&gt; to pass custom environment variables to inference servers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cmdStop&lt;/code&gt; for to gracefully stop Docker/Podman containers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;useModelName&lt;/code&gt; to override model names sent to upstream servers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;healthCheckTimeout&lt;/code&gt; to control model startup wait times&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${PORT}&lt;/code&gt; automatic port variables for dynamic port assignment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/mostlygeek/llama-swap/wiki/Configuration&quot;&gt;configuration documentation&lt;/a&gt; in the wiki all options and examples.&lt;/p&gt; 
&lt;h2&gt;Web UI&lt;/h2&gt; 
&lt;p&gt;llama-swap includes a real time web interface for monitoring logs and models:&lt;/p&gt; 
&lt;img width=&quot;1360&quot; height=&quot;963&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/adef4a8e-de0b-49db-885a-8f6dedae6799&quot; /&gt; 
&lt;p&gt;The Activity Page shows recent requests:&lt;/p&gt; 
&lt;img width=&quot;1360&quot; height=&quot;963&quot; alt=&quot;image&quot; src=&quot;https://github.com/user-attachments/assets/5f3edee6-d03a-4ae5-ae06-b20ac1f135bd&quot; /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;llama-swap can be installed in multiple ways&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Docker&lt;/li&gt; 
 &lt;li&gt;Homebrew (OSX and Linux)&lt;/li&gt; 
 &lt;li&gt;From release binaries&lt;/li&gt; 
 &lt;li&gt;From source&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker Install (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/pkgs/container/llama-swap&quot;&gt;download images&lt;/a&gt;)&lt;/h3&gt; 
&lt;p&gt;Docker images with llama-swap and llama-server are built nightly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# use CPU inference comes with the example config above
$ docker run -it --rm -p 9292:8080 ghcr.io/mostlygeek/llama-swap:cpu

# qwen2.5 0.5B
$ curl -s http://localhost:9292/v1/chat/completions \
    -H &quot;Content-Type: application/json&quot; \
    -H &quot;Authorization: Bearer no-key&quot; \
    -d &#39;{&quot;model&quot;:&quot;qwen2.5&quot;,&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;,&quot;content&quot;: &quot;tell me a joke&quot;}]}&#39; | \
    jq -r &#39;.choices[0].message.content&#39;

# SmolLM2 135M
$ curl -s http://localhost:9292/v1/chat/completions \
    -H &quot;Content-Type: application/json&quot; \
    -H &quot;Authorization: Bearer no-key&quot; \
    -d &#39;{&quot;model&quot;:&quot;smollm2&quot;,&quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;,&quot;content&quot;: &quot;tell me a joke&quot;}]}&#39; | \
    jq -r &#39;.choices[0].message.content&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Docker images are built nightly with llama-server for cuda, intel, vulcan and musa.&lt;/summary&gt; 
 &lt;p&gt;They include:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;ghcr.io/mostlygeek/llama-swap:cpu&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;ghcr.io/mostlygeek/llama-swap:cuda&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;ghcr.io/mostlygeek/llama-swap:intel&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;ghcr.io/mostlygeek/llama-swap:vulkan&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;ROCm disabled until fixed in llama.cpp container&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Specific versions are also available and are tagged with the llama-swap, architecture and llama.cpp versions. For example: &lt;code&gt;ghcr.io/mostlygeek/llama-swap:v89-cuda-b4716&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;Beyond the demo you will likely want to run the containers with your downloaded models and custom configuration.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker run -it --rm --runtime nvidia -p 9292:8080 \
  -v /path/to/models:/models \
  -v /path/to/custom/config.yaml:/app/config.yaml \
  ghcr.io/mostlygeek/llama-swap:cuda
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Homebrew Install (macOS/Linux)&lt;/h3&gt; 
&lt;p&gt;The latest release of &lt;code&gt;llama-swap&lt;/code&gt; can be installed via &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# Set up tap and install formula 
brew tap mostlygeek/llama-swap
brew install llama-swap
# Run llama-swap
llama-swap --config path/to/config.yaml --listen localhost:8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will install the &lt;code&gt;llama-swap&lt;/code&gt; binary and make it available in your path. See the &lt;a href=&quot;https://github.com/mostlygeek/llama-swap/wiki/Configuration&quot;&gt;configuration documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Pre-built Binaries (&lt;a href=&quot;https://github.com/mostlygeek/llama-swap/releases&quot;&gt;download&lt;/a&gt;)&lt;/h3&gt; 
&lt;p&gt;Binaries are available for Linux, Mac, Windows and FreeBSD. These are automatically published and are likely a few hours ahead of the docker releases. The binary install works with any OpenAI compatible server, not just llama-server.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download a &lt;a href=&quot;https://github.com/mostlygeek/llama-swap/releases&quot;&gt;release&lt;/a&gt; appropriate for your OS and architecture.&lt;/li&gt; 
 &lt;li&gt;Create a configuration file, see the &lt;a href=&quot;https://github.com/mostlygeek/llama-swap/wiki/Configuration&quot;&gt;configuration documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run the binary with &lt;code&gt;llama-swap --config path/to/config.yaml --listen localhost:8080&lt;/code&gt;. Available flags: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--config&lt;/code&gt;: Path to the configuration file (default: &lt;code&gt;config.yaml&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--listen&lt;/code&gt;: Address and port to listen on (default: &lt;code&gt;:8080&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--version&lt;/code&gt;: Show version information and exit.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--watch-config&lt;/code&gt;: Automatically reload the configuration file when it changes. This will wait for in-flight requests to complete then stop all running models (default: &lt;code&gt;false&lt;/code&gt;).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Building from source&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Build requires golang and nodejs for the user interface.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git clone https://github.com/mostlygeek/llama-swap.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean all&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Binaries will be in &lt;code&gt;build/&lt;/code&gt; subdirectory&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Monitoring Logs&lt;/h2&gt; 
&lt;p&gt;Open the &lt;code&gt;http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/&lt;/code&gt; with your browser to get a web interface with streaming logs.&lt;/p&gt; 
&lt;p&gt;CLI access is also supported:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# sends up to the last 10KB of logs
curl http://host/logs&#39;

# streams combined logs
curl -Ns &#39;http://host/logs/stream&#39;

# just llama-swap&#39;s logs
curl -Ns &#39;http://host/logs/stream/proxy&#39;

# just upstream&#39;s logs
curl -Ns &#39;http://host/logs/stream/upstream&#39;

# stream and filter logs with linux pipes
curl -Ns http://host/logs/stream | grep &#39;eval time&#39;

# skips history and just streams new log entries
curl -Ns &#39;http://host/logs/stream?no-history&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Do I need to use llama.cpp&#39;s server (llama-server)?&lt;/h2&gt; 
&lt;p&gt;Any OpenAI compatible server would work. llama-swap was originally designed for llama-server and it is the best supported.&lt;/p&gt; 
&lt;p&gt;For Python based inference servers like vllm or tabbyAPI it is recommended to run them via podman or docker. This provides clean environment isolation as well as responding correctly to &lt;code&gt;SIGTERM&lt;/code&gt; signals to shutdown.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.star-history.com/#mostlygeek/llama-swap&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=mostlygeek/llama-swap&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gotify/server</title>
      <link>https://github.com/gotify/server</link>
      <description>&lt;p&gt;A simple server for sending and receiving messages in real-time per WebSocket. (Includes a sleek web-ui)&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/gotify/logo&quot;&gt; &lt;img height=&quot;275px&quot; src=&quot;https://raw.githubusercontent.com/gotify/logo/master/gotify-logo.png&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;gotify/server&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/gotify/server/actions/workflows/build.yml&quot;&gt; &lt;img alt=&quot;Build Status&quot; src=&quot;https://github.com/gotify/server/actions/workflows/build.yml/badge.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/gotify/server&quot;&gt; &lt;img alt=&quot;codecov&quot; src=&quot;https://codecov.io/gh/gotify/server/branch/master/graph/badge.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/gotify/server&quot;&gt; &lt;img alt=&quot;Go Report Card&quot; src=&quot;https://goreportcard.com/badge/github.com/gotify/server&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#gotify:matrix.org&quot;&gt; &lt;img alt=&quot;Matrix&quot; src=&quot;https://img.shields.io/matrix/gotify:matrix.org.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/gotify/server&quot;&gt; &lt;img alt=&quot;Docker Pulls&quot; src=&quot;https://img.shields.io/docker/pulls/gotify/server.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/gotify/server/releases/latest&quot;&gt; &lt;img alt=&quot;latest release&quot; src=&quot;https://img.shields.io/github/release/gotify/server.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;We wanted a simple server for sending and receiving messages (in real time per WebSocket). For this, not many open source projects existed and most of the existing ones were abandoned. Also, a requirement was that it can be self-hosted. We know there are many free and commercial push services out there.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;img alt=&quot;Gotify UI screenshot&quot; src=&quot;https://raw.githubusercontent.com/gotify/server/master/ui.png&quot; align=&quot;right&quot; width=&quot;500px&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;send messages via REST-API&lt;/li&gt; 
 &lt;li&gt;receive messages via WebSocket&lt;/li&gt; 
 &lt;li&gt;manage users, clients and applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gotify.net/docs/plugin&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Web-UI -&amp;gt; &lt;a href=&quot;https://raw.githubusercontent.com/gotify/server/master/ui&quot;&gt;./ui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI for sending messages -&amp;gt; &lt;a href=&quot;https://github.com/gotify/cli&quot;&gt;gotify/cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Android-App -&amp;gt; &lt;a href=&quot;https://github.com/gotify/android&quot;&gt;gotify/android&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.github.gotify&quot;&gt;&lt;img src=&quot;https://play.google.com/intl/en_gb/badges/images/generic/en_badge_web_generic.png&quot; alt=&quot;Get it on Google Play&quot; width=&quot;150&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://f-droid.org/de/packages/com.github.gotify/&quot;&gt;&lt;img src=&quot;https://f-droid.org/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; width=&quot;150&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;(Google Play and the Google Play logo are trademarks of Google LLC.)&lt;/sub&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://gotify.net/docs&quot;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gotify.net/docs/install&quot;&gt;Install&lt;/a&gt; ᛫ &lt;a href=&quot;https://gotify.net/docs/config&quot;&gt;Configuration&lt;/a&gt; ᛫ &lt;a href=&quot;https://gotify.net/api-docs&quot;&gt;REST-API&lt;/a&gt; ᛫ &lt;a href=&quot;https://gotify.net/docs/dev-setup&quot;&gt;Setup Dev Environment&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome all kinds of contribution, including bug reports, feature requests, documentation improvements, UI refinements, etc. Check out &lt;a href=&quot;https://raw.githubusercontent.com/gotify/server/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for guidelines.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href=&quot;http://semver.org/&quot;&gt;SemVer&lt;/a&gt; for versioning. For the versions available, see the &lt;a href=&quot;https://github.com/gotify/server/tags&quot;&gt;tags on this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://raw.githubusercontent.com/gotify/server/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuard®-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;234&quot; src=&quot;https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png&quot; /&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href=&quot;https://img.shields.io/badge/license-BSD--3-blue)&quot;&gt; &lt;img src=&quot;https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/netbirdio/netbird/raw/main/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-BSD--3-blue&quot; /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://docs.netbird.io/slack-url&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://forum.netbird.io&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/community forum-@netbird-red.svg?logo=discourse&quot; /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://gurubase.io/g/netbird&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt; Start using NetBird at &lt;a href=&quot;https://netbird.io/pricing&quot;&gt;netbird.io&lt;/a&gt; &lt;br /&gt; See &lt;a href=&quot;https://netbird.io/docs/&quot;&gt;Documentation&lt;/a&gt; &lt;br /&gt; Join our &lt;a href=&quot;https://docs.netbird.io/slack-url&quot;&gt;Slack channel&lt;/a&gt; or our &lt;a href=&quot;https://forum.netbird.io&quot;&gt;Community forum&lt;/a&gt; &lt;br /&gt; &lt;/strong&gt; &lt;br /&gt; &lt;a href=&quot;https://registry.terraform.io/providers/netbirdio/netbird/latest&quot;&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;img width=&quot;1188&quot; alt=&quot;centralized-network-management 1&quot; src=&quot;https://github.com/user-attachments/assets/c28cc8e4-15d2-4d2f-bb97-a6433db39d56&quot; /&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Kwrff6h0rEw&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg&quot; alt=&quot;Watch the video&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://github.com/netbirdio/dashboard&quot;&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login&quot;&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/api&quot;&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/manage-network-access&quot;&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/register-machines-using-setup-keys&quot;&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/selfhosted/identity-providers&quot;&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/audit-events-logging&quot;&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/selfhosted/selfhosted-quickstart&quot;&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/routing-traffic-to-private-networks&quot;&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/manage-dns-in-your-network&quot;&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/manage-posture-checks&quot;&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/add-users-to-your-network&quot;&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn&quot;&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/enforce-periodic-user-authentication&quot;&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href=&quot;https://docs.netbird.io/how-to/netbird-on-faas&quot;&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href=&quot;https://app.netbird.io/install&quot;&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href=&quot;https://app.netbird.io/&quot;&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href=&quot;https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider&quot;&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jqlang.github.io/jq/&quot;&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://curl.se/&quot;&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href=&quot;https://raw.githubusercontent.com/netbirdio/netbird/main/client/&quot;&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href=&quot;https://raw.githubusercontent.com/netbirdio/netbird/main/management/&quot;&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href=&quot;https://github.com/pion/ice&quot;&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href=&quot;https://en.wikipedia.org/wiki/STUN&quot;&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href=&quot;https://raw.githubusercontent.com/netbirdio/netbird/main/signal/&quot;&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn&#39;t possible. When this occurs the system falls back to a relay server called &lt;a href=&quot;https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT&quot;&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/coturn/coturn&quot;&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float=&quot;left&quot; align=&quot;middle&quot;&gt; &lt;img src=&quot;https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png&quot; width=&quot;700&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href=&quot;https://docs.netbird.io/about-netbird/how-netbird-works#architecture&quot;&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/physk/netbird-installer&quot;&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/&quot;&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href=&quot;https://github.com/netbirdio/netbird/releases&quot;&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href=&quot;https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure&quot;&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href=&quot;https://cispa.de/en&quot;&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png&quot; alt=&quot;CISPA_Logo_BLACK_EN_RZ_RGB (1)&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href=&quot;https://www.wireguard.com/&quot;&gt;WireGuard®&lt;/a&gt;, &lt;a href=&quot;https://github.com/pion/ice&quot;&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href=&quot;https://github.com/coturn/coturn&quot;&gt;Coturn&lt;/a&gt;, and &lt;a href=&quot;https://rosenpass.eu&quot;&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we&#39;d greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;This repository is licensed under BSD-3-Clause license that applies to all parts of the repository except for the directories management/, signal/ and relay/. Those directories are licensed under the GNU Affero General Public License version 3.0 (AGPLv3). See the respective LICENSE files inside each directory.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href=&quot;https://www.wireguard.com/trademark-policy/&quot;&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iawia002/lux</title>
      <link>https://github.com/iawia002/lux</link>
      <description>&lt;p&gt;👾 Fast and simple video download library and CLI tool written in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Lux&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Let there be Lux!&lt;/i&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://codecov.io/gh/iawia002/lux&quot;&gt; &lt;img src=&quot;https://img.shields.io/codecov/c/github/iawia002/lux.svg?style=flat-square&quot; alt=&quot;Codecov&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://github.com/iawia002/lux/actions&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/iawia002/lux/ci.yml?style=flat-square&quot; alt=&quot;GitHub Workflow Status&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://goreportcard.com/report/github.com/iawia002/lux&quot;&gt; &lt;img src=&quot;https://goreportcard.com/badge/github.com/iawia002/lux?style=flat-square&quot; alt=&quot;Go Report Card&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://github.com/iawia002/lux/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/iawia002/lux.svg?style=flat-square&quot; alt=&quot;GitHub release&quot; /&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://formulae.brew.sh/formula/lux&quot;&gt; &lt;img src=&quot;https://img.shields.io/homebrew/v/lux.svg?style=flat-square&quot; alt=&quot;Homebrew&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;👾 Lux is a fast and simple video downloader built with Go.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#installation&quot;&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#install-via-go-install&quot;&gt;Install via &lt;code&gt;go install&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#homebrew-macos-only&quot;&gt;Homebrew (macOS only)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#arch-linux&quot;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#void-linux&quot;&gt;Void Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#scoop-on-windows&quot;&gt;Scoop on Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#chocolatey-on-windows&quot;&gt;Chocolatey on Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#cask-on-windowsmacoslinux&quot;&gt;Cask on Windows/macOS/Linux&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#download-a-video&quot;&gt;Download a video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#download-anything-else&quot;&gt;Download anything else&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#download-playlist&quot;&gt;Download playlist&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#multiple-inputs&quot;&gt;Multiple inputs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#resume-a-download&quot;&gt;Resume a download&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#auto-retry&quot;&gt;Auto retry&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#cookies&quot;&gt;Cookies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#multi-thread&quot;&gt;Multi-Thread&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#short-link&quot;&gt;Short link&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#bilibili&quot;&gt;bilibili&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#use-specified-referrer&quot;&gt;Use specified Referrer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#specify-the-output-path-and-name&quot;&gt;Specify the output path and name&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#debug-mode&quot;&gt;Debug Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#reuse-extracted-data&quot;&gt;Reuse extracted data&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#options&quot;&gt;Options&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#download&quot;&gt;Download:&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#network&quot;&gt;Network:&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#playlist&quot;&gt;Playlist:&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#filesystem&quot;&gt;Filesystem:&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#subtitle&quot;&gt;Subtitle:&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#youku&quot;&gt;Youku:&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#aria2&quot;&gt;aria2:&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#supported-sites&quot;&gt;Supported Sites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#known-issues&quot;&gt;Known issues&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#%E4%BC%98%E9%85%B7&quot;&gt;优酷&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#%E8%A5%BF%E7%93%9C%E5%A4%B4%E6%9D%A1%E8%A7%86%E9%A2%91&quot;&gt;西瓜/头条视频&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#authors&quot;&gt;Authors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#similar-projects&quot;&gt;Similar projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;The following dependencies are required and must be installed separately.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: FFmpeg does not affect the download, only affects the final file merge.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Install via &lt;code&gt;go install&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;To install Lux, use &lt;code&gt;go install&lt;/code&gt;, or download the binary file from &lt;a href=&quot;https://github.com/iawia002/lux/releases&quot;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go install github.com/iawia002/lux@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Homebrew (macOS only)&lt;/h3&gt; 
&lt;p&gt;For macOS users, you can install &lt;code&gt;lux&lt;/code&gt; via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ brew install lux
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;p&gt;For Arch Users &lt;a href=&quot;https://aur.archlinux.org/packages/lux-dl/&quot;&gt;AUR&lt;/a&gt; package is available.&lt;/p&gt; 
&lt;h3&gt;Void Linux&lt;/h3&gt; 
&lt;p&gt;For Void linux users, you can install &lt;code&gt;lux&lt;/code&gt; via:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ xbps-install -S lux
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop&lt;/a&gt; on Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ scoop install lux
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; on Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ choco install lux
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/axetroy/cask.rs&quot;&gt;Cask&lt;/a&gt; on Windows/macOS/Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ cask install github.com/iawia002/lux
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lux [OPTIONS] URL [URL...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Download a video&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;

 Site:      YouTube youtube.com
 Title:     Rick Astley - Never Gonna Give You Up (Video)
 Type:      video
 Stream:
     [248]  -------------------
     Quality:         1080p video/webm; codecs=&quot;vp9&quot;
     Size:            63.93 MiB (67038963 Bytes)
     # download with: lux -f 248 ...

 41.88 MiB / 63.93 MiB [=================&amp;gt;-------------]  65.51% 4.22 MiB/s 00m05s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;-i&lt;/code&gt; option displays all available quality of video without downloading.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -i &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;

 Site:      YouTube youtube.com
 Title:     Rick Astley - Never Gonna Give You Up (Video)
 Type:      video
 Streams:   # All available quality
     [248]  -------------------
     Quality:         1080p video/webm; codecs=&quot;vp9&quot;
     Size:            49.29 MiB (51687554 Bytes)
     # download with: lux -f 248 ...

     [137]  -------------------
     Quality:         1080p video/mp4; codecs=&quot;avc1.640028&quot;
     Size:            43.45 MiB (45564306 Bytes)
     # download with: lux -f 137 ...

     [398]  -------------------
     Quality:         720p video/mp4; codecs=&quot;av01.0.05M.08&quot;
     Size:            37.12 MiB (38926432 Bytes)
     # download with: lux -f 398 ...

     [136]  -------------------
     Quality:         720p video/mp4; codecs=&quot;avc1.4d401f&quot;
     Size:            31.34 MiB (32867324 Bytes)
     # download with: lux -f 136 ...

     [247]  -------------------
     Quality:         720p video/webm; codecs=&quot;vp9&quot;
     Size:            31.03 MiB (32536181 Bytes)
     # download with: lux -f 247 ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;lux -f stream &quot;URL&quot;&lt;/code&gt; to download a specific stream listed in the output of &lt;code&gt;-i&lt;/code&gt; option.&lt;/p&gt; 
&lt;h3&gt;Download anything else&lt;/h3&gt; 
&lt;p&gt;If Lux is provided the URL of a specific resource, then it will be downloaded directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux &quot;https://img9.bcyimg.com/drawer/15294/post/1799t/1f5a87801a0711e898b12b640777720f.jpg&quot;

lux doesn&#39;t support this URL right now, but it will try to download it directly

 Site:      Universal
 Title:     1f5a87801a0711e898b12b640777720f
 Type:      image/jpeg
 Stream:
     [default]  -------------------
     Size:            1.00 MiB (1051042 Bytes)
     # download with: lux -f default &quot;URL&quot;

 1.00 MiB / 1.00 MiB [===================================] 100.00% 1.21 MiB/s 0s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Download playlist&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; option downloads an entire playlist instead of a single video.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -i -p &quot;https://www.bilibili.com/bangumi/play/ep198061&quot;

 Site:      哔哩哔哩 bilibili.com
 Title:     Doctor X 第四季：第一集
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            845.66 MiB (886738354 Bytes)
     # download with: lux -f default &quot;URL&quot;


 Site:      哔哩哔哩 bilibili.com
 Title:     Doctor X 第四季：第二集
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            930.71 MiB (975919195 Bytes)
     # download with: lux -f default &quot;URL&quot;

......
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use the &lt;code&gt;-start&lt;/code&gt;, &lt;code&gt;-end&lt;/code&gt; or &lt;code&gt;-items&lt;/code&gt; option to specify the download range of the list:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-start
    	Playlist video to start at (default 1)
-end
    	Playlist video to end at
-items
    	Playlist video items to download. Separated by commas like: 1,5,6,8-10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For bilibili playlists only:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-eto
  File name of each bilibili episode doesn&#39;t include the playlist title
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiple inputs&lt;/h3&gt; 
&lt;p&gt;You can also download multiple URLs at once:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -i &quot;https://www.bilibili.com/video/av21877586&quot; &quot;https://www.bilibili.com/video/av21990740&quot;

 Site:      哔哩哔哩 bilibili.com
 Title:     【莓机会了】甜到虐哭的13集单集MAD「我现在什么都不想干,更不想看14集」
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            51.88 MiB (54403767 Bytes)
     # download with: lux -f default &quot;URL&quot;


 Site:      哔哩哔哩 bilibili.com
 Title:     【莓救了】甜到虐哭！！！国家队单集MAD-当熟悉的bgm响起，眼泪从脸颊滑下
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            77.63 MiB (81404093 Bytes)
     # download with: lux -f default &quot;URL&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These URLs will be downloaded one by one.&lt;/p&gt; 
&lt;p&gt;You can also use the &lt;code&gt;-F&lt;/code&gt; option to read URLs from file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -F ~/Desktop/u.txt

 Site:      微博 weibo.com
 Title:     在Google，我们设计什么？ via@阑夕
 Type:      video
 Stream:
     [default]  -------------------
     Size:            19.19 MiB (20118196 Bytes)
     # download with: lux -f default &quot;URL&quot;

 19.19 MiB / 19.19 MiB [=================================] 100.00% 9.69 MiB/s 1s

......
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use the &lt;code&gt;-start&lt;/code&gt;, &lt;code&gt;-end&lt;/code&gt; or &lt;code&gt;-items&lt;/code&gt; option to specify the download range of the list:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-start
    	File line to start at (default 1)
-end
    	File line to end at
-items
    	File lines to download. Separated by commas like: 1,5,6,8-10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Resume a download&lt;/h3&gt; 
&lt;p&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt; interrupts a download.&lt;/p&gt; 
&lt;p&gt;A temporary &lt;code&gt;.download&lt;/code&gt; file is kept in the output directory. If &lt;code&gt;lux&lt;/code&gt; is ran with the same arguments, then the download progress will resume from the last session.&lt;/p&gt; 
&lt;h3&gt;Auto retry&lt;/h3&gt; 
&lt;p&gt;lux will auto retry when the download failed, you can specify the retry times by &lt;code&gt;-retry&lt;/code&gt; option (default is 100).&lt;/p&gt; 
&lt;h3&gt;Cookies&lt;/h3&gt; 
&lt;p&gt;Cookies can be provided to &lt;code&gt;lux&lt;/code&gt; with the &lt;code&gt;-c&lt;/code&gt; option if they are required for accessing the video.&lt;/p&gt; 
&lt;p&gt;Cookies can be the following format or &lt;a href=&quot;https://curl.haxx.se/rfc/cookie_spec.html&quot;&gt;Netscape Cookie&lt;/a&gt; format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;name=value; name2=value2; ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cookies can be a string or a text file, supply cookies in one of the two following ways.&lt;/p&gt; 
&lt;p&gt;As a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -c &quot;name=value; name2=value2&quot; &quot;https://www.bilibili.com/video/av20203945&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a text file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -c cookies.txt &quot;https://www.bilibili.com/video/av20203945&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Proxy&lt;/h3&gt; 
&lt;p&gt;You can set the HTTP/SOCKS5 proxy using environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ HTTP_PROXY=&quot;http://127.0.0.1:1087/&quot; lux -i &quot;https://www.youtube.com/watch?v=Gnbch2osEeo&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ HTTP_PROXY=&quot;socks5://127.0.0.1:1080/&quot; lux -i &quot;https://www.youtube.com/watch?v=Gnbch2osEeo&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multi-Thread&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;--multi-thread&lt;/code&gt; or &lt;code&gt;-m&lt;/code&gt; multiple threads to download single video.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;--thread&lt;/code&gt; or &lt;code&gt;-n&lt;/code&gt; option to set the number of download threads(default is 10).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If the video has multi fragment, the number of actual download threads will increase.&lt;/p&gt; 
 &lt;p&gt;For example:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If &lt;code&gt;-n&lt;/code&gt; is set to 10, and the video has 2 fragments, then 20 threads will actually be used.&lt;/li&gt; 
  &lt;li&gt;If the video has 20 fragments, only 10 fragments are downloaded in the same time, the actual threads count is 100.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Special Tips:&lt;/strong&gt; Use too many threads in &lt;strong&gt;mgtv&lt;/strong&gt; download will cause HTTP 403 error, we recommend setting the number of threads to &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Short link&lt;/h3&gt; 
&lt;h4&gt;bilibili&lt;/h4&gt; 
&lt;p&gt;You can just use &lt;code&gt;av&lt;/code&gt; or &lt;code&gt;ep&lt;/code&gt; number to download bilibili&#39;s video:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -i ep198381 av21877586

 Site:      哔哩哔哩 bilibili.com
 Title:     狐妖小红娘：第79话 南国公主的吃货本色
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            485.23 MiB (508798478 Bytes)
     # download with: lux -f default &quot;URL&quot;


 Site:      哔哩哔哩 bilibili.com
 Title:     【莓机会了】甜到虐哭的13集单集MAD「我现在什么都不想干,更不想看14集」
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            51.88 MiB (54403767 Bytes)
     # download with: lux -f default &quot;URL&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use specified Referrer&lt;/h3&gt; 
&lt;p&gt;A Referrer can be used for the request with the &lt;code&gt;-r&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -r &quot;https://www.bilibili.com/video/av20383055/&quot; &quot;http://cn-scnc1-dx.acgvideo.com/&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Specify the output path and name&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;-o&lt;/code&gt; option sets the path, and &lt;code&gt;-O&lt;/code&gt; option sets the name of the downloaded file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -o ../ -O &quot;hello&quot; &quot;https://example.com&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Debug Mode&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;-d&lt;/code&gt; option outputs network request messages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -i -d &quot;http://www.bilibili.com/video/av20088587&quot;

URL:         http://www.bilibili.com/video/av20088587
Method:      GET
Headers:     http.Header{
    &quot;Referer&quot;:         {&quot;http://www.bilibili.com/video/av20088587&quot;},
    &quot;Accept&quot;:          {&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;},
    &quot;Accept-Charset&quot;:  {&quot;UTF-8,*;q=0.5&quot;},
    &quot;Accept-Encoding&quot;: {&quot;gzip,deflate,sdch&quot;},
    &quot;Accept-Language&quot;: {&quot;en-US,en;q=0.8&quot;},
    &quot;User-Agent&quot;:      {&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36&quot;},
}
Status Code: 200

URL:         https://interface.bilibili.com/v2/playurl?appkey=84956560bc028eb7&amp;amp;cid=32782944&amp;amp;otype=json&amp;amp;qn=116&amp;amp;quality=116&amp;amp;type=&amp;amp;sign=fb2e3f261fec398652f96d358517e535
Method:      GET
Headers:     http.Header{
    &quot;Accept-Charset&quot;:  {&quot;UTF-8,*;q=0.5&quot;},
    &quot;Accept-Encoding&quot;: {&quot;gzip,deflate,sdch&quot;},
    &quot;Accept-Language&quot;: {&quot;en-US,en;q=0.8&quot;},
    &quot;User-Agent&quot;:      {&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36&quot;},
    &quot;Referer&quot;:         {&quot;https://interface.bilibili.com/v2/playurl?appkey=84956560bc028eb7&amp;amp;cid=32782944&amp;amp;otype=json&amp;amp;qn=116&amp;amp;quality=116&amp;amp;type=&amp;amp;sign=fb2e3f261fec398652f96d358517e535&quot;},
    &quot;Accept&quot;:          {&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;},
}
Status Code: 200

 Site:      哔哩哔哩 bilibili.com
 Title:     燃油动力的遥控奥迪R8跑赛道
 Type:      video
 Streams:   # All available quality
     [default]  -------------------
     Quality:         高清 1080P
     Size:            64.38 MiB (67504795 Bytes)
     # download with: lux -f default &quot;URL&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reuse extracted data&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;-j&lt;/code&gt; option will print the extracted data in JSON format.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ lux -j &quot;https://www.bilibili.com/video/av20203945&quot;

{
    &quot;site&quot;: &quot;哔哩哔哩 bilibili.com&quot;,
    &quot;title&quot;: &quot;【2018拜年祭单品】相遇day by day&quot;,
    &quot;type&quot;: &quot;video&quot;,
    &quot;streams&quot;: {
        &quot;15&quot;: {
            &quot;urls&quot;: [
                {
                    &quot;url&quot;: &quot;...&quot;,
                    &quot;size&quot;: 18355205,
                    &quot;ext&quot;: &quot;flv&quot;
                }
            ],
            &quot;quality&quot;: &quot;流畅 360P&quot;,
            &quot;size&quot;: 18355205
        },
        &quot;32&quot;: {
            &quot;urls&quot;: [
                {
                    &quot;url&quot;: &quot;...&quot;,
                    &quot;size&quot;: 40058632,
                    &quot;ext&quot;: &quot;flv&quot;
                }
            ],
            &quot;quality&quot;: &quot;清晰 480P&quot;,
            &quot;size&quot;: 40058632
        },
        &quot;64&quot;: {
            &quot;urls&quot;: [
                {
                    &quot;url&quot;: &quot;...&quot;,
                    &quot;size&quot;: 82691087,
                    &quot;ext&quot;: &quot;flv&quot;
                }
            ],
            &quot;quality&quot;: &quot;高清 720P&quot;,
            &quot;size&quot;: 82691087
        },
        &quot;80&quot;: {
            &quot;urls&quot;: [
                {
                    &quot;url&quot;: &quot;...&quot;,
                    &quot;size&quot;: 121735559,
                    &quot;ext&quot;: &quot;flv&quot;
                }
            ],
            &quot;quality&quot;: &quot;高清 1080P&quot;,
            &quot;size&quot;: 121735559
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;  -i	Information only
  -F string
    	URLs file path
  -d	Debug mode
  -j	Print extracted data
  -s	Minimum outputs
  -v	Show version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Download:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  -f string
    	Select specific stream to download
  -p	Download playlist
  -n int
    	The number of download thread (only works for multiple-parts video) (default 10)
  -c string
    	Cookie
  -r string
    	Use specified Referrer
  -cs int
    	HTTP chunk size for downloading (in MB) (default 1)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Network:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  -retry int
    	How many times to retry when the download failed (default 10)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Playlist:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  -start int
    	Playlist video to start at (default 1)
  -end int
    	Playlist video to end at
  -items string
    	Playlist video items to download. Separated by commas like: 1,5,6,8-10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Filesystem:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  -o string
    	Specify the output path
  -O string
    	Specify the output file name
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Subtitle:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  -C	Download captions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Youku:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  -ccode string
    	Youku ccode (default &quot;0502&quot;)
  -ckey string
    	Youku ckey (default &quot;7B19C0AB12633B22E7FE81271162026020570708D6CC189E4924503C49D243A0DE6CD84A766832C2C99898FC5ED31F3709BB3CDD82C96492E721BDD381735026&quot;)
  -password string
    	Youku password
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;aria2:&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If you use aria2 to download, you need to merge the multi-part videos yourself.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;  -aria2
    	Use Aria2 RPC to download
  -aria2addr string
    	Aria2 Address (default &quot;localhost:6800&quot;)
  -aria2method string
    	Aria2 Method (default &quot;http&quot;)
  -aria2token string
    	Aria2 RPC Token
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported Sites&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Site&lt;/th&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
   &lt;th&gt;🎬 Videos&lt;/th&gt; 
   &lt;th&gt;🌁 Images&lt;/th&gt; 
   &lt;th&gt;🔊 Audio&lt;/th&gt; 
   &lt;th&gt;📚 Playlist&lt;/th&gt; 
   &lt;th&gt;🍪 VIP adaptation&lt;/th&gt; 
   &lt;th&gt;Build Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;抖音&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.douyin.com&quot;&gt;https://www.douyin.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_douyin.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_douyin.yml/badge.svg?sanitize=true&quot; alt=&quot;douyin&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;哔哩哔哩&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bilibili.com&quot;&gt;https://www.bilibili.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_bilibili.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_bilibili.yml/badge.svg?sanitize=true&quot; alt=&quot;bilibili&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;半次元&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://bcy.net&quot;&gt;https://bcy.net&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_bcy.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_bcy.yml/badge.svg?sanitize=true&quot; alt=&quot;bcy&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pixivision&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.pixivision.net&quot;&gt;https://www.pixivision.net&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_pixivision.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_pixivision.yml/badge.svg?sanitize=true&quot; alt=&quot;pixivision&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;优酷&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youku.com&quot;&gt;https://www.youku.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_youku.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_youku.yml/badge.svg?sanitize=true&quot; alt=&quot;youku&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YouTube&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.youtube.com&quot;&gt;https://www.youtube.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_youtube.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_youtube.yml/badge.svg?sanitize=true&quot; alt=&quot;youtube&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;西瓜视频（头条）&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://m.toutiao.com&quot;&gt;https://m.toutiao.com&lt;/a&gt;, &lt;a href=&quot;https://v.ixigua.com&quot;&gt;https://v.ixigua.com&lt;/a&gt;, &lt;a href=&quot;https://www.ixigua.com&quot;&gt;https://www.ixigua.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_ixigua.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_ixigua.yml/badge.svg?sanitize=true&quot; alt=&quot;ixigua&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;爱奇艺&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.iqiyi.com&quot;&gt;https://www.iqiyi.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_iqiyi.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_iqiyi.yml/badge.svg?sanitize=true&quot; alt=&quot;iqiyi&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;新片场&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.xinpianchang.com&quot;&gt;https://www.xinpianchang.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_xinpianchang.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_xinpianchang.yml/badge.svg?sanitize=true&quot; alt=&quot;xinpianchang&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;芒果 TV&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.mgtv.com&quot;&gt;https://www.mgtv.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_mgtv.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_mgtv.yml/badge.svg?sanitize=true&quot; alt=&quot;mgtv&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;糖豆广场舞&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.tangdou.com&quot;&gt;https://www.tangdou.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_tangdou.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_tangdou.yml/badge.svg?sanitize=true&quot; alt=&quot;tangdou&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tumblr&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.tumblr.com&quot;&gt;https://www.tumblr.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_tumblr.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_tumblr.yml/badge.svg?sanitize=true&quot; alt=&quot;tumblr&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vimeo&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://vimeo.com&quot;&gt;https://vimeo.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_vimeo.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_vimeo.yml/badge.svg?sanitize=true&quot; alt=&quot;vimeo&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Facebook&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://facebook.com&quot;&gt;https://facebook.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_facebook.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_facebook.yml/badge.svg?sanitize=true&quot; alt=&quot;facebook&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;斗鱼视频&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://v.douyu.com&quot;&gt;https://v.douyu.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_douyu.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_douyu.yml/badge.svg?sanitize=true&quot; alt=&quot;douyu&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;秒拍&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.miaopai.com&quot;&gt;https://www.miaopai.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_miaopai.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_miaopai.yml/badge.svg?sanitize=true&quot; alt=&quot;miaopai&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;微博&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://weibo.com&quot;&gt;https://weibo.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_weibo.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_weibo.yml/badge.svg?sanitize=true&quot; alt=&quot;weibo&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Instagram&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.instagram.com&quot;&gt;https://www.instagram.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_instagram.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_instagram.yml/badge.svg?sanitize=true&quot; alt=&quot;instagram&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Threads&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.threads.net&quot;&gt;https://www.threads.net&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_threads.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_threads.yml/badge.svg?sanitize=true&quot; alt=&quot;threads&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Twitter&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com&quot;&gt;https://twitter.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_twitter.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_twitter.yml/badge.svg?sanitize=true&quot; alt=&quot;twitter&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;腾讯视频&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://v.qq.com&quot;&gt;https://v.qq.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_qq.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_qq.yml/badge.svg?sanitize=true&quot; alt=&quot;qq&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;网易云音乐&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://music.163.com&quot;&gt;https://music.163.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_netease.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_netease.yml/badge.svg?sanitize=true&quot; alt=&quot;netease&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;音悦台&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://yinyuetai.com&quot;&gt;https://yinyuetai.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_yinyuetai.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_yinyuetai.yml/badge.svg?sanitize=true&quot; alt=&quot;yinyuetai&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;极客时间&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://time.geekbang.org&quot;&gt;https://time.geekbang.org&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_geekbang.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_geekbang.yml/badge.svg?sanitize=true&quot; alt=&quot;geekbang&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Pornhub&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pornhub.com&quot;&gt;https://pornhub.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_pornhub.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_pornhub.yml/badge.svg?sanitize=true&quot; alt=&quot;pornhub&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;XVIDEOS&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://xvideos.com&quot;&gt;https://xvideos.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_xvideos.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_xvideos.yml/badge.svg?sanitize=true&quot; alt=&quot;xvideos&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;聯合新聞網&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://udn.com&quot;&gt;https://udn.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_udn.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_udn.yml/badge.svg?sanitize=true&quot; alt=&quot;udn&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TikTok&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.tiktok.com&quot;&gt;https://www.tiktok.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_tiktok.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_tiktok.yml/badge.svg?sanitize=true&quot; alt=&quot;tiktok&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Pinterest&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.pinterest.com&quot;&gt;https://www.pinterest.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_pinterest.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_pinterest.yml/badge.svg?sanitize=true&quot; alt=&quot;pinterest&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;好看视频&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://haokan.baidu.com&quot;&gt;https://haokan.baidu.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_haokan.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_haokan.yml/badge.svg?sanitize=true&quot; alt=&quot;haokan&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AcFun&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.acfun.cn&quot;&gt;https://www.acfun.cn&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_acfun.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_acfun.yml/badge.svg?sanitize=true&quot; alt=&quot;acfun&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Eporner&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://eporner.com&quot;&gt;https://eporner.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_eporner.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_eporner.yml/badge.svg?sanitize=true&quot; alt=&quot;eporner&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;StreamTape&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://streamtape.com&quot;&gt;https://streamtape.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_streamtape.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_streamtape.yml/badge.svg?sanitize=true&quot; alt=&quot;streamtape&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;虎扑&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://hupu.com&quot;&gt;https://hupu.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_hupu.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_hupu.yml/badge.svg?sanitize=true&quot; alt=&quot;hupu&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;虎牙视频&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://v.huya.com&quot;&gt;https://v.huya.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_huya.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_huya.yml/badge.svg?sanitize=true&quot; alt=&quot;huya&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;喜马拉雅&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ximalaya.com&quot;&gt;https://www.ximalaya.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_ximalaya.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_ximalaya.yml/badge.svg?sanitize=true&quot; alt=&quot;ximalaya&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;快手&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.kuaishou.com&quot;&gt;https://www.kuaishou.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_kuaishou.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_kuaishou.yml/badge.svg?sanitize=true&quot; alt=&quot;kuaishou&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reddit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.reddit.com&quot;&gt;https://www.reddit.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_reddit.yml&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_reddit.yml/badge.svg?sanitize=true&quot; alt=&quot;reddit&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VKontakte&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://vk.com&quot;&gt;https://vk.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_vk.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_vk.yml/badge.svg?sanitize=true&quot; alt=&quot;vk&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;知乎&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://zhihu.com&quot;&gt;https://zhihu.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_zhihu.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_zhihu.yml/badge.svg?sanitize=true&quot; alt=&quot;zhihu&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rumble&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://rumble.com&quot;&gt;https://rumble.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_rumble.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_rumble.yml/badge.svg?sanitize=true&quot; alt=&quot;rumble&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;小红书&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://xiaohongshu.com&quot;&gt;https://xiaohongshu.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_xiaohongshu.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_xiaohongshu.yml/badge.svg?sanitize=true&quot; alt=&quot;xiaohongshu&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zing MP3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://zingmp3.vn&quot;&gt;https://zingmp3.vn&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_zingmp3.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_zingmp3.yml/badge.svg?sanitize=true&quot; alt=&quot;zingmp3&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Bitchute&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.bitchute.com&quot;&gt;https://www.bitchute.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_bitchute.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_bitchute.yml/badge.svg?sanitize=true&quot; alt=&quot;bitchute&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Odysee&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://odysee.com&quot;&gt;https://odysee.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/iawia002/lux/actions/workflows/stream_odysee.yml/&quot;&gt;&lt;img src=&quot;https://github.com/iawia002/lux/actions/workflows/stream_odysee.yml/badge.svg?sanitize=true&quot; alt=&quot;odysee&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Known issues&lt;/h2&gt; 
&lt;h3&gt;优酷&lt;/h3&gt; 
&lt;p&gt;优酷的 &lt;code&gt;ccode&lt;/code&gt; 经常变化导致 lux 不可用，如果你知道有新的可用的 &lt;code&gt;ccode&lt;/code&gt;，可以直接使用 &lt;code&gt;lux -ccode ...&lt;/code&gt; 而不用等待 lux 更新（当然，也欢迎你给我们提一个 Pull request 来更新默认的 &lt;code&gt;ccode&lt;/code&gt;）&lt;/p&gt; 
&lt;p&gt;最好是每次下载都附带登录过的 Cookie 以避免部分 &lt;code&gt;ccode&lt;/code&gt; 的问题&lt;/p&gt; 
&lt;h3&gt;西瓜/头条视频&lt;/h3&gt; 
&lt;p&gt;西瓜/头条视频必须带 Cookie 才能下载成功，西瓜和头条可共用西瓜视频的 Cookie，Cookie 的有效期可能较短，下载失败就更新 Cookie 尝试：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ lux -c &quot;msToken=yoEh0-qLUq4obZ8Sfxsem_CxCo9R3NM6ViTrWaRcM1...; ttwid=1%7C...&quot; &quot;https://m.toutiao.com/is/iYbTfJ79/&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Lux is an open source project and built on the top of open-source projects. Check out the &lt;a href=&quot;https://raw.githubusercontent.com/iawia002/lux/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Code with ❤️ by &lt;a href=&quot;https://github.com/iawia002&quot;&gt;iawia002&lt;/a&gt; and lovely &lt;a href=&quot;https://github.com/iawia002/lux/graphs/contributors&quot;&gt;contributors&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Similar projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kkdai/youtube&quot;&gt;youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rg3/youtube-dl&quot;&gt;youtube-dl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/soimort/you-get&quot;&gt;you-get&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rylio/ytdl&quot;&gt;ytdl&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2018-present, iawia002&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SagerNet/sing-box</title>
      <link>https://github.com/SagerNet/sing-box</link>
      <description>&lt;p&gt;The universal proxy platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sing-box&lt;/h1&gt; 
&lt;p&gt;The universal proxy platform.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/project/sing-box/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/vertical-allrepos/sing-box.svg?sanitize=true&quot; alt=&quot;Packaging status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://sing-box.sagernet.org&quot;&gt;https://sing-box.sagernet.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2022 by nekohasekai &amp;lt;contact-sagernet@sekai.icu&amp;gt;

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

In addition, no derivative work may use the name or imply association
with this application without prior consent.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>lionsoul2014/ip2region</title>
      <link>https://github.com/lionsoul2014/ip2region</link>
      <description>&lt;p&gt;Ip2region (2.0 - xdb) is a offline IP address manager framework and locator, support billions of data segments, ten microsecond searching performance. xdb engine implementation for many programming languages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ip2region 是什么&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://ip2region.net&quot;&gt;ip2region&lt;/a&gt; - 是一个离线IP地址定位库和IP定位数据管理框架，10微秒级别的查询效率，提供了众多主流编程语言的 &lt;code&gt;xdb&lt;/code&gt; 数据生成和查询客户端实现。&lt;/p&gt; 
&lt;h1&gt;Ip2region 特性&lt;/h1&gt; 
&lt;h3&gt;1、数据管理框架&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 支持亿级别的 IP 数据段行数，默认的 region 信息都固定了格式：&lt;code&gt;国家|区域|省份|城市|ISP&lt;/code&gt;，缺省的地域信息默认是0。 region 信息支持完全自定义，例如：你可以在 region 中追加特定业务需求的数据，例如：GPS信息/国际统一地域信息编码/邮编等。也就是你完全可以使用 ip2region 来管理你自己的 IP 定位数据。&lt;/p&gt; 
&lt;h3&gt;2、数据去重和压缩&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 格式生成程序会自动去重和压缩部分数据，默认的全部 IP 数据，生成的 ip2region.xdb 数据库是 11MiB，随着数据的详细度增加数据库的大小也慢慢增大。&lt;/p&gt; 
&lt;h3&gt;3、极速查询响应&lt;/h3&gt; 
&lt;p&gt;即使是完全基于 &lt;code&gt;xdb&lt;/code&gt; 文件的查询，单次查询响应时间在十微秒级别，可通过如下两种方式开启内存加速查询：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;vIndex&lt;/code&gt; 索引缓存 ：使用固定的 &lt;code&gt;512KiB&lt;/code&gt; 的内存空间缓存 vector index 数据，减少一次 IO 磁盘操作，保持平均查询效率稳定在10-20微秒之间。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;xdb&lt;/code&gt; 整个文件缓存：将整个 &lt;code&gt;xdb&lt;/code&gt; 文件全部加载到内存，内存占用等同于 &lt;code&gt;xdb&lt;/code&gt; 文件大小，无磁盘 IO 操作，保持微秒级别的查询效率。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据查询&lt;/h1&gt; 
&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;searcher&lt;/code&gt; 查询客户端下的 ReadMe 介绍，全部查询 binding 实现情况如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Ok?&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;状态&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;编程语言&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;贡献者&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/golang&quot;&gt;golang&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;golang xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php&quot;&gt;php&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;php xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/java&quot;&gt;java&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;java xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua&quot;&gt;lua&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;纯 lua xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/c&quot;&gt;c&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ANSC c xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua_c&quot;&gt;lua_c&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;lua c 扩展 xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/rust&quot;&gt;rust&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;rust xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/gongzhengyang&quot;&gt;gongzhengyang&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/python&quot;&gt;python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;python xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/luckydog6132&quot;&gt;厉害的花花&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nodejs&quot;&gt;nodejs&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;nodejs xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/wujjpp&quot;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/csharp&quot;&gt;csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;csharp xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/malus2077&quot;&gt;Alen Lee&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/erlang&quot;&gt;erlang&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;erlang xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/malou996&quot;&gt;malou&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;待开始&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php7_ext&quot;&gt;php_ext&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;php c 扩展 xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;待确定&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nginx&quot;&gt;nginx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;nginx 扩展 xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/wujjpp&quot;&gt;Wu Jian Ping&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/cpp&quot;&gt;C++&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;C++ xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/liuyunbin&quot;&gt;Yunbin Liu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/typescript&quot;&gt;Typescript&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Typescript xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/malus2077&quot;&gt;Alan Lee&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;以下工具链实现由社区开发者通过第三方仓库贡献：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Ok?&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;状态&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;编程语言&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;贡献者&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/jicheng1014/ruby-ip2region&quot;&gt;ruby-ip2region&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ruby xdb 查询客户端实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/jicheng1014&quot;&gt;jicheng1014&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/orestonce/Ip2regionTool&quot;&gt;Ip2regionTool&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ip2region数据转换工具&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/orestonce&quot;&gt;orestonce&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据生成&lt;/h1&gt; 
&lt;p&gt;API 介绍，使用文档和测试程序请参考如下 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 文档：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Ok?&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;状态&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;编程语言&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;贡献者&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang&quot;&gt;golang&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;golang xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java&quot;&gt;java&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;java xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;待开始&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/c&quot;&gt;c&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;ANSC c xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/python&quot;&gt;python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;python xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/leolin49&quot;&gt;leolin49&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/csharp&quot;&gt;csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;csharp xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/malus2077&quot;&gt;Alan Lee&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/rust&quot;&gt;rust&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;rust xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/KevinWL&quot;&gt;KevinWang&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/cpp&quot;&gt;C++&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;C++ xdb 生成程序实现&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/liuyunbin&quot;&gt;Yunbin Liu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据更新&lt;/h1&gt; 
&lt;p&gt;ip2region 旨在于 &lt;b&gt;研究 IP 数据的存储和快速查询的设计和实现&lt;/b&gt;，并没有原始 IP 数据的支撑。 本项目的自带的 &lt;code&gt;./data/ip.merge.txt&lt;/code&gt; 原始数据已经很久没有更新，也不会再更新，对于数据精度和更新频率要求很高的使用场景建议到 &lt;a href=&quot;https://ip2region.net/products/offline&quot;&gt;Ip2Region社区&lt;/a&gt; 或者第三方购买商用离线数据，你可以使用如下几种方式来尝试自己更新数据：&lt;/p&gt; 
&lt;h3&gt;手动编辑更新&lt;/h3&gt; 
&lt;p&gt;你可以基于 ip2region 自带的 &lt;code&gt;./data/ip.merge.txt&lt;/code&gt; 原始 IP 数据用 ip2region 提供的编辑工具来自己修改，目前数据源有如下几种方式：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;ip2region 社区提供的数据（请参考地底部的公众号关注社区通知）&lt;/li&gt; 
 &lt;li&gt;ip2region Github/Gitee 中带有 &lt;code&gt;[数据源补充]&lt;/code&gt; 标签的 Issue&lt;/li&gt; 
 &lt;li&gt;其他自定义数据：例如客户提供的数据，或者通过 GPS 和 WIFI 定位得到的数据，或者来自其他平台的合法合规的数据&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;原始 IP 数据编辑工具使用方法请参考如下的 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 文档：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Ok?&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;状态&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;编程语言&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;贡献者&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&quot;&gt;golang&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;golang 原始 IP 数据编辑器&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;待开始&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&quot;&gt;java&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;java 原始 IP 数据编辑器&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/lionsoul2014&quot;&gt;Lion&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;已完成&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/cpp#xdb-%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91&quot;&gt;C++&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;C++ 原始 IP 数据编辑器&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/liuyunbin&quot;&gt;Yunbin Liu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;检测自动更新&lt;/h3&gt; 
&lt;p&gt;如果你想通过你自己的 API 或数据源来更新数据，你可以参考以下视频分享的 &lt;code&gt;基于检测算法&lt;/code&gt; 的更新算法来自己编写一个更新程序：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1934y1E7Q5/&quot;&gt;数据更新实现视频分享 - part1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1pF411j7Aw/&quot;&gt;数据更新实现视频分享 - part2&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;官方社区&lt;/h1&gt; 
&lt;p&gt;Ip2Region 官方社区正式上线于 &lt;code&gt;2025/06/12&lt;/code&gt; 日，一方面提供了稳定的 &lt;a href=&quot;https://ip2region.net/products/offline&quot;&gt;商用离线数据&lt;/a&gt; 服务，另一方面便于在核心代码外强化 IP 工具链和数据服务，例如 &lt;a href=&quot;https://ip2region.net/doc/&quot;&gt;使用文档&lt;/a&gt;，数据纠错，xdb IPv6 的设计和实现等，更多关于社区的信息和服务请访问 &lt;a href=&quot;https://ip2region.net/&quot;&gt;Ip2Region 官方社区&lt;/a&gt;。&lt;/p&gt; 
&lt;h1&gt;相关备注&lt;/h1&gt; 
&lt;h3&gt;1、并发查询必读&lt;/h3&gt; 
&lt;p&gt;xdb 整个缓存的查询都 &lt;b&gt;是&lt;/b&gt; 并发安全的，基于文件的查询都 &lt;b&gt;不是&lt;/b&gt; 并发安全的实现，不同进程/线程/协程需要通过创建不同的查询对象来安全使用，并发量很大的情况下，基于文件查询的方式可能会导致打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者将整个xdb加载到内存进行安全并发使用。&lt;/p&gt; 
&lt;h3&gt;2、技术资源分享&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;xdb 数据结构分析：&lt;a href=&quot;https://ip2region.net/doc/xdb/ipv4_structure&quot;&gt;“ip2region xdb-v4数据结构描述“&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;xdb 查询过程分析：&lt;a href=&quot;https://ip2region.net/doc/xdb/ipv4_search&quot;&gt;“ip2region xdb-v4查询过程描述”&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;xdb 生成过程分析：&lt;a href=&quot;https://ip2region.net/doc/xdb/ipv4_generate&quot;&gt;“ip2region xdb-v4生成过程描述”&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;xdb 文件生成教程：&lt;a href=&quot;https://ip2region.net/doc/data/ipv4_xdb_make&quot;&gt;“ip2region xdb-v4文件生成教程”&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;xdb 数据更新方法：&lt;a href=&quot;https://mp.weixin.qq.com/s/cZH5qIn4E5rQFy6N32RCzA&quot;&gt;“ip2region 数据更新和 xdb v4数据编辑器的使用”&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3、技术信息博客&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ip2region.net&quot;&gt;Ip2Region 官方社区&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;请先关注微信公众号 lionsoul-org (狮子的魂)&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>microsoft/typescript-go</title>
      <link>https://github.com/microsoft/typescript-go</link>
      <description>&lt;p&gt;Staging repo for development of native port of TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TypeScript 7&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/typescript-native-port/&quot;&gt;Not sure what this is? Read the announcement post!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;A preview build is available on npm as &lt;a href=&quot;https://www.npmjs.com/package/@typescript/native-preview&quot;&gt;&lt;code&gt;@typescript/native-preview&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install @typescript/native-preview
npx tsgo # Use this as you would tsc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A preview VS Code extension is &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.native-preview&quot;&gt;available on the VS Code marketplace&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this, set this in your VS Code settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;typescript.experimental.useTsgo&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to Build and Run&lt;/h2&gt; 
&lt;p&gt;This repo uses &lt;a href=&quot;https://go.dev/dl/&quot;&gt;Go 1.24 or higher&lt;/a&gt;, &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;Rust 1.85 or higher&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js with npm&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/hereby&quot;&gt;&lt;code&gt;hereby&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For tests and code generation, this repo contains a git submodule to the main TypeScript repo pointing to the commit being ported. When cloning, you&#39;ll want to clone with submodules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --recurse-submodules https://github.com/microsoft/typescript-go.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have already cloned the repo, you can initialize the submodule with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the submodule in place and &lt;code&gt;npm ci&lt;/code&gt;, you can run tasks via &lt;code&gt;hereby&lt;/code&gt;, similar to the TypeScript repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;hereby build          # Verify that the project builds
hereby test           # Run all tests
hereby install-tools  # Install additional tools such as linters
hereby lint           # Run all linters
hereby format         # Format all code
hereby generate       # Generate all Go code (e.g. diagnostics, committed to repo)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additional tasks are a work in progress.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;hereby&lt;/code&gt; is not required to work on the repo; the regular &lt;code&gt;go&lt;/code&gt; tooling (e.g., &lt;code&gt;go build&lt;/code&gt;, &lt;code&gt;go test ./...&lt;/code&gt;) will work as expected. &lt;code&gt;hereby&lt;/code&gt; tasks are provided as a convenience for those familiar with the TypeScript repo.&lt;/p&gt; 
&lt;h3&gt;Running &lt;code&gt;tsgo&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;After running &lt;code&gt;hereby build&lt;/code&gt;, you can run &lt;code&gt;built/local/tsgo&lt;/code&gt;, which behaves mostly the same as &lt;code&gt;tsc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Running LSP Prototype&lt;/h3&gt; 
&lt;p&gt;To debug and run the VS Code extension without installing it globally:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run VS Code in the repo workspace (&lt;code&gt;code .&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;.vscode/launch.template.json&lt;/code&gt; to &lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;F5&lt;/kbd&gt; (or &lt;code&gt;Debug: Start Debugging&lt;/code&gt; from the command palette)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This will launch a new VS Code instance which uses the Corsa LS as the backend. If correctly set up, you should see &quot;tsgo&quot; in the status bar when a TypeScript or JavaScript file is open:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/typescript-go/main/.github/ls-screenshot.png&quot; alt=&quot;LSP Prototype Screenshot&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;What Works So Far?&lt;/h2&gt; 
&lt;p&gt;This is still a work in progress and is not yet at full feature parity with TypeScript. Bugs may exist. Please check this list carefully before logging a new issue or assuming an intentional change.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Program creation&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same files and module resolution as TS5.8. Not all resolution modes supported yet.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parsing/scanning&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Exact same syntax errors as TS5.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Commandline and &lt;code&gt;tsconfig.json&lt;/code&gt; parsing&lt;/td&gt; 
   &lt;td&gt;mostly done&lt;/td&gt; 
   &lt;td&gt;Entry point slightly different for now&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Type resolution&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same types as TS5.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Type checking&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same errors, locations, and messages as TS5.8. Types printback in errors may display differently (in progress)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript-specific inference and JS Doc&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JSX&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Declaration emit&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;Most common features are in place, but some edge cases and feature flags are still unhandled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Emit (JS output)&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;target: esnext&lt;/code&gt; well-supported, other targets may have gaps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Watch mode&lt;/td&gt; 
   &lt;td&gt;prototype&lt;/td&gt; 
   &lt;td&gt;Watches files and rebuilds, but no incremental rechecking&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build mode / project references&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Incremental build&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language service (LSP)&lt;/td&gt; 
   &lt;td&gt;prototype&lt;/td&gt; 
   &lt;td&gt;Minimal functionality (errors, hover, go to def). More features coming soon&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Definitions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;done&lt;/strong&gt; aka &quot;believed done&quot;: We&#39;re not currently aware of any deficits or major left work to do. OK to log bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;in progress&lt;/strong&gt;: currently being worked on; some features may work and some might not. OK to log panics, but nothing else please&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;prototype&lt;/strong&gt;: proof-of-concept only; do not log bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;not ready&lt;/strong&gt;: either haven&#39;t even started yet, or far enough from ready that you shouldn&#39;t bother messing with it yet&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Notes&lt;/h2&gt; 
&lt;p&gt;Long-term, we expect that this repo and its contents will be merged into &lt;code&gt;microsoft/TypeScript&lt;/code&gt;. As a result, the repo and issue tracker for typescript-go will eventually be closed, so treat discussions/issues accordingly.&lt;/p&gt; 
&lt;p&gt;For a list of intentional changes with respect to TypeScript 5.7, see CHANGES.md.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;Contributor License Agreements&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fatedier/frp</title>
      <link>https://github.com/fatedier/frp</link>
      <description>&lt;p&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;frp&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/fatedier/frp&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/fatedier/frp.svg?style=shield&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fatedier/frp/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/tag/fatedier/frp.svg?label=release&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://goreportcard.com/report/github.com/fatedier/frp&quot;&gt;&lt;img src=&quot;https://goreportcard.com/badge/github.com/fatedier/frp&quot; alt=&quot;Go Report Card&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://somsubhra.github.io/github-release-stats/?username=fatedier&amp;amp;repository=frp&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/fatedier/frp/total.svg?logo=github&quot; alt=&quot;GitHub Releases Stats&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/README.md&quot;&gt;README&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/README_zh.md&quot;&gt;中文文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;frp is an open source project with its ongoing development made possible entirely by the support of our awesome sponsors. If you&#39;d like to join them, please consider &lt;a href=&quot;https://github.com/sponsors/fatedier&quot;&gt;sponsoring frp&#39;s development&lt;/a&gt;.&lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;Gold Sponsors&lt;/h3&gt; 
&lt;!--gold sponsors start--&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://go.warp.dev/frp&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;360px&quot; src=&quot;https://raw.githubusercontent.com/warpdotdev/brand-assets/refs/heads/main/Github/Sponsor/Warp-Github-LG-01.png&quot; /&gt; &lt;br /&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;Available for macOS, Linux and Windows&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://jb.gg/frp&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;420px&quot; src=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_jetbrains.jpg&quot; /&gt; &lt;br /&gt; &lt;b&gt;The complete IDE crafted for professional Go developers&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/daytonaio/daytona&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;420px&quot; src=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_daytona.png&quot; /&gt; &lt;br /&gt; &lt;b&gt;Secure and Elastic Infrastructure for Running Your AI-Generated Code&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/beclab/Olares&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;420px&quot; src=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/sponsor_olares.jpeg&quot; /&gt; &lt;br /&gt; &lt;b&gt;The sovereign cloud that puts you in control&lt;/b&gt; &lt;br /&gt; &lt;sub&gt;An open source, self-hosted alternative to public clouds, built for data ownership and privacy&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--gold sponsors end--&gt; 
&lt;h2&gt;What is frp?&lt;/h2&gt; 
&lt;p&gt;frp is a fast reverse proxy that allows you to expose a local server located behind a NAT or firewall to the Internet. It currently supports &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;, as well as &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;HTTPS&lt;/strong&gt; protocols, enabling requests to be forwarded to internal services via domain name.&lt;/p&gt; 
&lt;p&gt;frp also offers a P2P connect mode.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- vim-markdown-toc GFM --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#development-status&quot;&gt;Development Status&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#about-v2&quot;&gt;About V2&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#architecture&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage&quot;&gt;Example Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#access-your-computer-in-a-lan-network-via-ssh&quot;&gt;Access your computer in a LAN network via SSH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#multiple-ssh-services-sharing-the-same-port&quot;&gt;Multiple SSH services sharing the same port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#accessing-internal-web-services-with-custom-domains-in-lan&quot;&gt;Accessing Internal Web Services with Custom Domains in LAN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#forward-dns-query-requests&quot;&gt;Forward DNS query requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#forward-unix-domain-socket&quot;&gt;Forward Unix Domain Socket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#expose-a-simple-http-file-server&quot;&gt;Expose a simple HTTP file server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#enable-https-for-a-local-https-service&quot;&gt;Enable HTTPS for a local HTTP(S) service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#expose-your-service-privately&quot;&gt;Expose your service privately&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#p2p-mode&quot;&gt;P2P Mode&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#configuration-files&quot;&gt;Configuration Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#using-environment-variables&quot;&gt;Using Environment Variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#split-configures-into-different-files&quot;&gt;Split Configures Into Different Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#server-dashboard&quot;&gt;Server Dashboard&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#client-admin-ui&quot;&gt;Client Admin UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#monitor&quot;&gt;Monitor&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#prometheus&quot;&gt;Prometheus&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#authenticating-the-client&quot;&gt;Authenticating the Client&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#token-authentication&quot;&gt;Token Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#oidc-authentication&quot;&gt;OIDC Authentication&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#encryption-and-compression&quot;&gt;Encryption and Compression&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#tls&quot;&gt;TLS&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#hot-reloading-frpc-configuration&quot;&gt;Hot-Reloading frpc configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#get-proxy-status-from-client&quot;&gt;Get proxy status from client&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#only-allowing-certain-ports-on-the-server&quot;&gt;Only allowing certain ports on the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#port-reuse&quot;&gt;Port Reuse&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#bandwidth-limit&quot;&gt;Bandwidth Limit&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#for-each-proxy&quot;&gt;For Each Proxy&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-stream-multiplexing&quot;&gt;TCP Stream Multiplexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#support-kcp-protocol&quot;&gt;Support KCP Protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#support-quic-protocol&quot;&gt;Support QUIC Protocol&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#connection-pooling&quot;&gt;Connection Pooling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#load-balancing&quot;&gt;Load balancing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#service-health-check&quot;&gt;Service Health Check&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#rewriting-the-http-host-header&quot;&gt;Rewriting the HTTP Host Header&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#setting-other-http-headers&quot;&gt;Setting other HTTP Headers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#get-real-ip&quot;&gt;Get Real IP&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#http-x-forwarded-for&quot;&gt;HTTP X-Forwarded-For&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#proxy-protocol&quot;&gt;Proxy Protocol&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#require-http-basic-auth-password-for-web-services&quot;&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#custom-subdomain-names&quot;&gt;Custom Subdomain Names&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#url-routing&quot;&gt;URL Routing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#tcp-port-multiplexing&quot;&gt;TCP Port Multiplexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#connecting-to-frps-via-proxy&quot;&gt;Connecting to frps via PROXY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#port-range-mapping&quot;&gt;Port range mapping&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#client-plugins&quot;&gt;Client Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#server-manage-plugins&quot;&gt;Server Manage Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#ssh-tunnel-gateway&quot;&gt;SSH Tunnel Gateway&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#virtual-network-virtualnet&quot;&gt;Virtual Network (VirtualNet)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#feature-gates&quot;&gt;Feature Gates&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#available-feature-gates&quot;&gt;Available Feature Gates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#enabling-feature-gates&quot;&gt;Enabling Feature Gates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#feature-lifecycle&quot;&gt;Feature Lifecycle&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#related-projects&quot;&gt;Related Projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#donation&quot;&gt;Donation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#github-sponsors&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#paypal&quot;&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- vim-markdown-toc --&gt; 
&lt;h2&gt;Development Status&lt;/h2&gt; 
&lt;p&gt;frp is currently under development. You can try the latest release version in the &lt;code&gt;master&lt;/code&gt; branch, or use the &lt;code&gt;dev&lt;/code&gt; branch to access the version currently in development.&lt;/p&gt; 
&lt;p&gt;We are currently working on version 2 and attempting to perform some code refactoring and improvements. However, please note that it will not be compatible with version 1.&lt;/p&gt; 
&lt;p&gt;We will transition from version 0 to version 1 at the appropriate time and will only accept bug fixes and improvements, rather than big feature requests.&lt;/p&gt; 
&lt;h3&gt;About V2&lt;/h3&gt; 
&lt;p&gt;The complexity and difficulty of the v2 version are much higher than anticipated. I can only work on its development during fragmented time periods, and the constant interruptions disrupt productivity significantly. Given this situation, we will continue to optimize and iterate on the current version until we have more free time to proceed with the major version overhaul.&lt;/p&gt; 
&lt;p&gt;The concept behind v2 is based on my years of experience and reflection in the cloud-native domain, particularly in K8s and ServiceMesh. Its core is a modernized four-layer and seven-layer proxy, similar to envoy. This proxy itself is highly scalable, not only capable of implementing the functionality of intranet penetration but also applicable to various other domains. Building upon this highly scalable core, we aim to implement all the capabilities of frp v1 while also addressing the functionalities that were previously unachievable or difficult to implement in an elegant manner. Furthermore, we will maintain efficient development and iteration capabilities.&lt;/p&gt; 
&lt;p&gt;In addition, I envision frp itself becoming a highly extensible system and platform, similar to how we can provide a range of extension capabilities based on K8s. In K8s, we can customize development according to enterprise needs, utilizing features such as CRD, controller mode, webhook, CSI, and CNI. In frp v1, we introduced the concept of server plugins, which implemented some basic extensibility. However, it relies on a simple HTTP protocol and requires users to start independent processes and manage them on their own. This approach is far from flexible and convenient, and real-world demands vary greatly. It is unrealistic to expect a non-profit open-source project maintained by a few individuals to meet everyone&#39;s needs.&lt;/p&gt; 
&lt;p&gt;Finally, we acknowledge that the current design of modules such as configuration management, permission verification, certificate management, and API management is not modern enough. While we may carry out some optimizations in the v1 version, ensuring compatibility remains a challenging issue that requires a considerable amount of effort to address.&lt;/p&gt; 
&lt;p&gt;We sincerely appreciate your support for frp.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/architecture.png&quot; alt=&quot;architecture&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;p&gt;To begin, download the latest program for your operating system and architecture from the &lt;a href=&quot;https://github.com/fatedier/frp/releases&quot;&gt;Release&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Next, place the &lt;code&gt;frps&lt;/code&gt; binary and server configuration file on Server A, which has a public IP address.&lt;/p&gt; 
&lt;p&gt;Finally, place the &lt;code&gt;frpc&lt;/code&gt; binary and client configuration file on Server B, which is located on a LAN that cannot be directly accessed from the public internet.&lt;/p&gt; 
&lt;p&gt;Some antiviruses improperly mark frpc as malware and delete it. This is due to frp being a networking tool capable of creating reverse proxies. Antiviruses sometimes flag reverse proxies due to their ability to bypass firewall port restrictions. If you are using antivirus, then you may need to whitelist/exclude frpc in your antivirus settings to avoid accidental quarantine/deletion. See &lt;a href=&quot;https://github.com/fatedier/frp/issues/3637&quot;&gt;issue 3637&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Access your computer in a LAN network via SSH&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt; on server A by setting the &lt;code&gt;bindPort&lt;/code&gt; for frp clients to connect to:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
bindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt; on server A:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; on server B and set the &lt;code&gt;serverAddr&lt;/code&gt; field to the public IP address of your frps server:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;ssh&quot;
type = &quot;tcp&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 22
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the &lt;code&gt;localPort&lt;/code&gt; (listened on the client) and &lt;code&gt;remotePort&lt;/code&gt; (exposed on the server) are used for traffic going in and out of the frp system, while the &lt;code&gt;serverPort&lt;/code&gt; is used for communication between frps and frpc.&lt;/p&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on server B:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;To access server B from another machine through server A via SSH (assuming the username is &lt;code&gt;test&lt;/code&gt;), use the following command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 test@x.x.x.x&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Multiple SSH services sharing the same port&lt;/h3&gt; 
&lt;p&gt;This example implements multiple SSH services exposed through the same port using a proxy of type tcpmux. Similarly, as long as the client supports the HTTP Connect proxy connection method, port reuse can be achieved in this way.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Deploy frps on a machine with a public IP and modify the frps.toml file. Here is a simplified configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;bindPort = 7000
tcpmuxHTTPConnectPort = 5002
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Deploy frpc on the internal machine A with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;ssh1&quot;
type = &quot;tcpmux&quot;
multiplexer = &quot;httpconnect&quot;
customDomains = [&quot;machine-a.example.com&quot;]
localIP = &quot;127.0.0.1&quot;
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Deploy another frpc on the internal machine B with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;ssh2&quot;
type = &quot;tcpmux&quot;
multiplexer = &quot;httpconnect&quot;
customDomains = [&quot;machine-b.example.com&quot;]
localIP = &quot;127.0.0.1&quot;
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;To access internal machine A using SSH ProxyCommand, assuming the username is &quot;test&quot;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -o &#39;proxycommand socat - PROXY:x.x.x.x:%h:%p,proxyport=5002&#39; test@machine-a.example.com&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;To access internal machine B, the only difference is the domain name, assuming the username is &quot;test&quot;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -o &#39;proxycommand socat - PROXY:x.x.x.x:%h:%p,proxyport=5002&#39; test@machine-b.example.com&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Accessing Internal Web Services with Custom Domains in LAN&lt;/h3&gt; 
&lt;p&gt;Sometimes we need to expose a local web service behind a NAT network to others for testing purposes with our own domain name.&lt;/p&gt; 
&lt;p&gt;Unfortunately, we cannot resolve a domain name to a local IP. However, we can use frp to expose an HTTP(S) service.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt; and set the HTTP port for vhost to 8080:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
bindPort = 7000
vhostHTTPPort = 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to configure an https proxy, you need to set up the &lt;code&gt;vhostHTTPSPort&lt;/code&gt;.&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; and set &lt;code&gt;serverAddr&lt;/code&gt; to the IP address of the remote frps server. Specify the &lt;code&gt;localPort&lt;/code&gt; of your web service:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;web&quot;
type = &quot;http&quot;
localPort = 80
customDomains = [&quot;www.example.com&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt; &lt;p&gt;Map the A record of &lt;code&gt;www.example.com&lt;/code&gt; to either the public IP of the remote frps server or a CNAME record pointing to your original domain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Visit your local web service using url &lt;code&gt;http://www.example.com:8080&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Forward DNS query requests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify &lt;code&gt;frps.toml&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
bindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Start &lt;code&gt;frps&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frps -c ./frps.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Modify &lt;code&gt;frpc.toml&lt;/code&gt; and set &lt;code&gt;serverAddr&lt;/code&gt; to the IP address of the remote frps server. Forward DNS query requests to the Google Public DNS server &lt;code&gt;8.8.8.8:53&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;dns&quot;
type = &quot;udp&quot;
localIP = &quot;8.8.8.8&quot;
localPort = 53
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Start frpc:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;./frpc -c ./frpc.toml&lt;/code&gt;&lt;/p&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;Test DNS resolution using the &lt;code&gt;dig&lt;/code&gt; command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;dig @x.x.x.x -p 6000 www.google.com&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Forward Unix Domain Socket&lt;/h3&gt; 
&lt;p&gt;Expose a Unix domain socket (e.g. the Docker daemon socket) as TCP.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; as above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;unix_domain_socket&quot;
type = &quot;tcp&quot;
remotePort = 6000
[proxies.plugin]
type = &quot;unix_domain_socket&quot;
unixPath = &quot;/var/run/docker.sock&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Test the configuration by getting the docker version using &lt;code&gt;curl&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;curl http://x.x.x.x:6000/version&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Expose a simple HTTP file server&lt;/h3&gt; 
&lt;p&gt;Expose a simple HTTP file server to access files stored in the LAN from the public Internet.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; as described above, then:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;test_static_file&quot;
type = &quot;tcp&quot;
remotePort = 6000
[proxies.plugin]
type = &quot;static_file&quot;
localPath = &quot;/tmp/files&quot;
stripPrefix = &quot;static&quot;
httpUser = &quot;abc&quot;
httpPassword = &quot;abc&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Visit &lt;code&gt;http://x.x.x.x:6000/static/&lt;/code&gt; from your browser and specify correct username and password to view files in &lt;code&gt;/tmp/files&lt;/code&gt; on the &lt;code&gt;frpc&lt;/code&gt; machine.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Enable HTTPS for a local HTTP(S) service&lt;/h3&gt; 
&lt;p&gt;You may substitute &lt;code&gt;https2https&lt;/code&gt; for the plugin, and point the &lt;code&gt;localAddr&lt;/code&gt; to a HTTPS endpoint.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; with the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;test_https2http&quot;
type = &quot;https&quot;
customDomains = [&quot;test.example.com&quot;]

[proxies.plugin]
type = &quot;https2http&quot;
localAddr = &quot;127.0.0.1:80&quot;
crtPath = &quot;./server.crt&quot;
keyPath = &quot;./server.key&quot;
hostHeaderRewrite = &quot;127.0.0.1&quot;
requestHeaders.set.x-from-where = &quot;frp&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Visit &lt;code&gt;https://test.example.com&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Expose your service privately&lt;/h3&gt; 
&lt;p&gt;To mitigate risks associated with exposing certain services directly to the public network, STCP (Secret TCP) mode requires a preshared key to be used for access to the service from other clients.&lt;/p&gt; 
&lt;p&gt;Configure &lt;code&gt;frps&lt;/code&gt; same as above.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B with the following config. This example is for exposing the SSH service (port 22), and note the &lt;code&gt;secretKey&lt;/code&gt; field for the preshared key, and that the &lt;code&gt;remotePort&lt;/code&gt; field is removed here:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;secret_ssh&quot;
type = &quot;stcp&quot;
secretKey = &quot;abcdefg&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the following config to access the SSH service with a security key (&lt;code&gt;secretKey&lt;/code&gt; field):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[visitors]]
name = &quot;secret_ssh_visitor&quot;
type = &quot;stcp&quot;
serverName = &quot;secret_ssh&quot;
secretKey = &quot;abcdefg&quot;
bindAddr = &quot;127.0.0.1&quot;
bindPort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;P2P Mode&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;xtcp&lt;/strong&gt; is designed to transmit large amounts of data directly between clients. A frps server is still needed, as P2P here only refers to the actual data transmission.&lt;/p&gt; 
&lt;p&gt;Note that it may not work with all types of NAT devices. You might want to fallback to stcp if xtcp doesn&#39;t work.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start &lt;code&gt;frpc&lt;/code&gt; on machine B, and expose the SSH port. Note that the &lt;code&gt;remotePort&lt;/code&gt; field is removed:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000
# set up a new stun server if the default one is not available.
# natHoleStunServer = &quot;xxx&quot;

[[proxies]]
name = &quot;p2p_ssh&quot;
type = &quot;xtcp&quot;
secretKey = &quot;abcdefg&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 22
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Start another &lt;code&gt;frpc&lt;/code&gt; (typically on another machine C) with the configuration to connect to SSH using P2P mode:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000
# set up a new stun server if the default one is not available.
# natHoleStunServer = &quot;xxx&quot;

[[visitors]]
name = &quot;p2p_ssh_visitor&quot;
type = &quot;xtcp&quot;
serverName = &quot;p2p_ssh&quot;
secretKey = &quot;abcdefg&quot;
bindAddr = &quot;127.0.0.1&quot;
bindPort = 6000
# when automatic tunnel persistence is required, set it to true
keepTunnelOpen = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;On machine C, connect to SSH on machine B, using this command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;ssh -oPort=6000 127.0.0.1&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Configuration Files&lt;/h3&gt; 
&lt;p&gt;Since v0.52.0, we support TOML, YAML, and JSON for configuration. Please note that INI is deprecated and will be removed in future releases. New features will only be available in TOML, YAML, or JSON. Users wanting these new features should switch their configuration format accordingly.&lt;/p&gt; 
&lt;p&gt;Read the full example configuration files to find out even more features not described here.&lt;/p&gt; 
&lt;p&gt;Examples use TOML format, but you can still use YAML or JSON.&lt;/p&gt; 
&lt;p&gt;These configuration files is for reference only. Please do not use this configuration directly to run the program as it may have various issues.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/conf/frps_full_example.toml&quot;&gt;Full configuration file for frps (Server)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/conf/frpc_full_example.toml&quot;&gt;Full configuration file for frpc (Client)&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Environment Variables&lt;/h3&gt; 
&lt;p&gt;Environment variables can be referenced in the configuration file, using Go&#39;s standard format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;{{ .Envs.FRP_SERVER_ADDR }}&quot;
serverPort = 7000

[[proxies]]
name = &quot;ssh&quot;
type = &quot;tcp&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 22
remotePort = &quot;{{ .Envs.FRP_SSH_REMOTE_PORT }}&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the config above, variables can be passed into &lt;code&gt;frpc&lt;/code&gt; program like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export FRP_SERVER_ADDR=x.x.x.x
export FRP_SSH_REMOTE_PORT=6000
./frpc -c ./frpc.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;frpc&lt;/code&gt; will render configuration file template using OS environment variables. Remember to prefix your reference with &lt;code&gt;.Envs&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Split Configures Into Different Files&lt;/h3&gt; 
&lt;p&gt;You can split multiple proxy configs into different files and include them in the main file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000
includes = [&quot;./confd/*.toml&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# ./confd/test.toml

[[proxies]]
name = &quot;ssh&quot;
type = &quot;tcp&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 22
remotePort = 6000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Dashboard&lt;/h3&gt; 
&lt;p&gt;Check frp&#39;s status and proxies&#39; statistics information by Dashboard.&lt;/p&gt; 
&lt;p&gt;Configure a port for dashboard to enable this feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# The default value is 127.0.0.1. Change it to 0.0.0.0 when you want to access it from a public network.
webServer.addr = &quot;0.0.0.0&quot;
webServer.port = 7500
# dashboard&#39;s username and password are both optional
webServer.user = &quot;admin&quot;
webServer.password = &quot;admin&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://[serverAddr]:7500&lt;/code&gt; to see the dashboard, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can use HTTPS port by using your domains wildcard or normal SSL certificate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;webServer.port = 7500
# dashboard&#39;s username and password are both optional
webServer.user = &quot;admin&quot;
webServer.password = &quot;admin&quot;
webServer.tls.certFile = &quot;server.crt&quot;
webServer.tls.keyFile = &quot;server.key&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;https://[serverAddr]:7500&lt;/code&gt; to see the dashboard in secure HTTPS connection, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/pic/dashboard.png&quot; alt=&quot;dashboard&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Client Admin UI&lt;/h3&gt; 
&lt;p&gt;The Client Admin UI helps you check and manage frpc&#39;s configuration.&lt;/p&gt; 
&lt;p&gt;Configure an address for admin UI to enable this feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;webServer.addr = &quot;127.0.0.1&quot;
webServer.port = 7400
webServer.user = &quot;admin&quot;
webServer.password = &quot;admin&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://127.0.0.1:7400&lt;/code&gt; to see admin UI, with username and password both being &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Monitor&lt;/h3&gt; 
&lt;p&gt;When web server is enabled, frps will save monitor data in cache for 7 days. It will be cleared after process restart.&lt;/p&gt; 
&lt;p&gt;Prometheus is also supported.&lt;/p&gt; 
&lt;h4&gt;Prometheus&lt;/h4&gt; 
&lt;p&gt;Enable dashboard first, then configure &lt;code&gt;enablePrometheus = true&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;http://{dashboard_addr}/metrics&lt;/code&gt; will provide prometheus monitor data.&lt;/p&gt; 
&lt;h3&gt;Authenticating the Client&lt;/h3&gt; 
&lt;p&gt;There are 2 authentication methods to authenticate frpc with frps.&lt;/p&gt; 
&lt;p&gt;You can decide which one to use by configuring &lt;code&gt;auth.method&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt;, the default one is token.&lt;/p&gt; 
&lt;p&gt;Configuring &lt;code&gt;auth.additionalScopes = [&quot;HeartBeats&quot;]&lt;/code&gt; will use the configured authentication method to add and validate authentication on every heartbeat between frpc and frps.&lt;/p&gt; 
&lt;p&gt;Configuring &lt;code&gt;auth.additionalScopes = [&quot;NewWorkConns&quot;]&lt;/code&gt; will do the same for every new work connection between frpc and frps.&lt;/p&gt; 
&lt;h4&gt;Token Authentication&lt;/h4&gt; 
&lt;p&gt;When specifying &lt;code&gt;auth.method = &quot;token&quot;&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; - token based authentication will be used.&lt;/p&gt; 
&lt;p&gt;Make sure to specify the same &lt;code&gt;auth.token&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt; and &lt;code&gt;frpc.toml&lt;/code&gt; for frpc to pass frps validation&lt;/p&gt; 
&lt;h5&gt;Token Source&lt;/h5&gt; 
&lt;p&gt;frp supports reading authentication tokens from external sources using the &lt;code&gt;tokenSource&lt;/code&gt; configuration. Currently, file-based token source is supported.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;File-based token source:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
auth.method = &quot;token&quot;
auth.tokenSource.type = &quot;file&quot;
auth.tokenSource.file.path = &quot;/path/to/token/file&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The token will be read from the specified file at startup. This is useful for scenarios where tokens are managed by external systems or need to be kept separate from configuration files for security reasons.&lt;/p&gt; 
&lt;h4&gt;OIDC Authentication&lt;/h4&gt; 
&lt;p&gt;When specifying &lt;code&gt;auth.method = &quot;oidc&quot;&lt;/code&gt; in &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; - OIDC based authentication will be used.&lt;/p&gt; 
&lt;p&gt;OIDC stands for OpenID Connect, and the flow used is called &lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-4.4&quot;&gt;Client Credentials Grant&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this authentication type - configure &lt;code&gt;frpc.toml&lt;/code&gt; and &lt;code&gt;frps.toml&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
auth.method = &quot;oidc&quot;
auth.oidc.issuer = &quot;https://example-oidc-issuer.com/&quot;
auth.oidc.audience = &quot;https://oidc-audience.com/.default&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
auth.method = &quot;oidc&quot;
auth.oidc.clientID = &quot;98692467-37de-409a-9fac-bb2585826f18&quot; # Replace with OIDC client ID
auth.oidc.clientSecret = &quot;oidc_secret&quot;
auth.oidc.audience = &quot;https://oidc-audience.com/.default&quot;
auth.oidc.tokenEndpointURL = &quot;https://example-oidc-endpoint.com/oauth2/v2.0/token&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Encryption and Compression&lt;/h3&gt; 
&lt;p&gt;The features are off by default. You can turn on encryption and/or compression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;ssh&quot;
type = &quot;tcp&quot;
localPort = 22
remotePort = 6000
transport.useEncryption = true
transport.useCompression = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;TLS&lt;/h4&gt; 
&lt;p&gt;Since v0.50.0, the default value of &lt;code&gt;transport.tls.enable&lt;/code&gt; and &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; has been changed to true, and tls is enabled by default.&lt;/p&gt; 
&lt;p&gt;For port multiplexing, frp sends a first byte &lt;code&gt;0x17&lt;/code&gt; to dial a TLS connection. This only takes effect when you set &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; to false.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;enforce&lt;/strong&gt; &lt;code&gt;frps&lt;/code&gt; to only accept TLS connections - configure &lt;code&gt;transport.tls.force = true&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt;. &lt;strong&gt;This is optional.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;frpc&lt;/code&gt; TLS settings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;transport.tls.enable = true
transport.tls.certFile = &quot;certificate.crt&quot;
transport.tls.keyFile = &quot;certificate.key&quot;
transport.tls.trustedCaFile = &quot;ca.crt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;frps&lt;/code&gt; TLS settings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;transport.tls.force = true
transport.tls.certFile = &quot;certificate.crt&quot;
transport.tls.keyFile = &quot;certificate.key&quot;
transport.tls.trustedCaFile = &quot;ca.crt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will need &lt;strong&gt;a root CA cert&lt;/strong&gt; and &lt;strong&gt;at least one SSL/TLS certificate&lt;/strong&gt;. It &lt;strong&gt;can&lt;/strong&gt; be self-signed or regular (such as Let&#39;s Encrypt or another SSL/TLS certificate provider).&lt;/p&gt; 
&lt;p&gt;If you using &lt;code&gt;frp&lt;/code&gt; via IP address and not hostname, make sure to set the appropriate IP address in the Subject Alternative Name (SAN) area when generating SSL/TLS Certificates.&lt;/p&gt; 
&lt;p&gt;Given an example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepare openssl config file. It exists at &lt;code&gt;/etc/pki/tls/openssl.cnf&lt;/code&gt; in Linux System and &lt;code&gt;/System/Library/OpenSSL/openssl.cnf&lt;/code&gt; in MacOS, and you can copy it to current path, like &lt;code&gt;cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf&lt;/code&gt;. If not, you can build it by yourself, like:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;cat &amp;gt; my-openssl.cnf &amp;lt;&amp;lt; EOF
[ ca ]
default_ca = CA_default
[ CA_default ]
x509_extensions = usr_cert
[ req ]
default_bits        = 2048
default_md          = sha256
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes          = req_attributes
x509_extensions     = v3_ca
string_mask         = utf8only
[ req_distinguished_name ]
[ req_attributes ]
[ usr_cert ]
basicConstraints       = CA:FALSE
nsComment              = &quot;OpenSSL Generated Certificate&quot;
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
[ v3_ca ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = CA:true
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build ca certificates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -subj &quot;/CN=example.ca.com&quot; -days 5000 -out ca.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build frps certificates:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out server.key 2048

openssl req -new -sha256 -key server.key \
    -subj &quot;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com&quot; \
    -reqexts SAN \
    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf &quot;\n[SAN]\nsubjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com&quot;)) \
    -out server.csr

openssl x509 -req -days 365 -sha256 \
	-in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
	-extfile &amp;lt;(printf &quot;subjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com&quot;) \
	-out server.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;build frpc certificates：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;openssl genrsa -out client.key 2048
openssl req -new -sha256 -key client.key \
    -subj &quot;/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com&quot; \
    -reqexts SAN \
    -config &amp;lt;(cat my-openssl.cnf &amp;lt;(printf &quot;\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com&quot;)) \
    -out client.csr

openssl x509 -req -days 365 -sha256 \
    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
	-extfile &amp;lt;(printf &quot;subjectAltName=DNS:client.com,DNS:example.client.com&quot;) \
	-out client.crt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hot-Reloading frpc configuration&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;webServer&lt;/code&gt; fields are required for enabling HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
webServer.addr = &quot;127.0.0.1&quot;
webServer.port = 7400
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run command &lt;code&gt;frpc reload -c ./frpc.toml&lt;/code&gt; and wait for about 10 seconds to let &lt;code&gt;frpc&lt;/code&gt; create or update or remove proxies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note that global client parameters won&#39;t be modified except &#39;start&#39;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can run command &lt;code&gt;frpc verify -c ./frpc.toml&lt;/code&gt; before reloading to check if there are config errors.&lt;/p&gt; 
&lt;h3&gt;Get proxy status from client&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;frpc status -c ./frpc.toml&lt;/code&gt; to get status of all proxies. The &lt;code&gt;webServer&lt;/code&gt; fields are required for enabling HTTP API.&lt;/p&gt; 
&lt;h3&gt;Only allowing certain ports on the server&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;allowPorts&lt;/code&gt; in &lt;code&gt;frps.toml&lt;/code&gt; is used to avoid abuse of ports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
allowPorts = [
  { start = 2000, end = 3000 },
  { single = 3001 },
  { single = 3003 },
  { start = 4000, end = 50000 }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Port Reuse&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;vhostHTTPPort&lt;/code&gt; and &lt;code&gt;vhostHTTPSPort&lt;/code&gt; in frps can use same port with &lt;code&gt;bindPort&lt;/code&gt;. frps will detect the connection&#39;s protocol and handle it correspondingly.&lt;/p&gt; 
&lt;p&gt;What you need to pay attention to is that if you want to configure &lt;code&gt;vhostHTTPSPort&lt;/code&gt; and &lt;code&gt;bindPort&lt;/code&gt; to the same port, you need to first set &lt;code&gt;transport.tls.disableCustomTLSFirstByte&lt;/code&gt; to false.&lt;/p&gt; 
&lt;p&gt;We would like to try to allow multiple proxies bind a same remote port with different protocols in the future.&lt;/p&gt; 
&lt;h3&gt;Bandwidth Limit&lt;/h3&gt; 
&lt;h4&gt;For Each Proxy&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;ssh&quot;
type = &quot;tcp&quot;
localPort = 22
remotePort = 6000
transport.bandwidthLimit = &quot;1MB&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set &lt;code&gt;transport.bandwidthLimit&lt;/code&gt; in each proxy&#39;s configure to enable this feature. Supported units are &lt;code&gt;MB&lt;/code&gt; and &lt;code&gt;KB&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Set &lt;code&gt;transport.bandwidthLimitMode&lt;/code&gt; to &lt;code&gt;client&lt;/code&gt; or &lt;code&gt;server&lt;/code&gt; to limit bandwidth on the client or server side. Default is &lt;code&gt;client&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;TCP Stream Multiplexing&lt;/h3&gt; 
&lt;p&gt;frp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.&lt;/p&gt; 
&lt;p&gt;You can disable this feature by modify &lt;code&gt;frps.toml&lt;/code&gt; and &lt;code&gt;frpc.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml and frpc.toml, must be same
transport.tcpMux = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Support KCP Protocol&lt;/h3&gt; 
&lt;p&gt;KCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.&lt;/p&gt; 
&lt;p&gt;KCP mode uses UDP as the underlying transport. Using KCP in frp:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable KCP in frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
bindPort = 7000
# Specify a UDP port for KCP.
kcpBindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;kcpBindPort&lt;/code&gt; number can be the same number as &lt;code&gt;bindPort&lt;/code&gt;, since &lt;code&gt;bindPort&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Configure &lt;code&gt;frpc.toml&lt;/code&gt; to use KCP to connect to frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
# Same as the &#39;kcpBindPort&#39; in frps.toml
serverPort = 7000
transport.protocol = &quot;kcp&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Support QUIC Protocol&lt;/h3&gt; 
&lt;p&gt;QUIC is a new multiplexed transport built on top of UDP.&lt;/p&gt; 
&lt;p&gt;Using QUIC in frp:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable QUIC in frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
bindPort = 7000
# Specify a UDP port for QUIC.
quicBindPort = 7000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;quicBindPort&lt;/code&gt; number can be the same number as &lt;code&gt;bindPort&lt;/code&gt;, since &lt;code&gt;bindPort&lt;/code&gt; field specifies a TCP port.&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Configure &lt;code&gt;frpc.toml&lt;/code&gt; to use QUIC to connect to frps:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
# Same as the &#39;quicBindPort&#39; in frps.toml
serverPort = 7000
transport.protocol = &quot;quic&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connection Pooling&lt;/h3&gt; 
&lt;p&gt;By default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.&lt;/p&gt; 
&lt;p&gt;This feature is suitable for a large number of short connections.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configure the limit of pool count each proxy can use in &lt;code&gt;frps.toml&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
transport.maxPoolCount = 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Enable and specify the number of connection pool:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
transport.poolCount = 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Load balancing&lt;/h3&gt; 
&lt;p&gt;Load balancing is supported by &lt;code&gt;group&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This feature is only available for types &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;tcpmux&lt;/code&gt; now.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;test1&quot;
type = &quot;tcp&quot;
localPort = 8080
remotePort = 80
loadBalancer.group = &quot;web&quot;
loadBalancer.groupKey = &quot;123&quot;

[[proxies]]
name = &quot;test2&quot;
type = &quot;tcp&quot;
localPort = 8081
remotePort = 80
loadBalancer.group = &quot;web&quot;
loadBalancer.groupKey = &quot;123&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;loadBalancer.groupKey&lt;/code&gt; is used for authentication.&lt;/p&gt; 
&lt;p&gt;Connections to port 80 will be dispatched to proxies in the same group randomly.&lt;/p&gt; 
&lt;p&gt;For type &lt;code&gt;tcp&lt;/code&gt;, &lt;code&gt;remotePort&lt;/code&gt; in the same group should be the same.&lt;/p&gt; 
&lt;p&gt;For type &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;customDomains&lt;/code&gt;, &lt;code&gt;subdomain&lt;/code&gt;, &lt;code&gt;locations&lt;/code&gt; should be the same.&lt;/p&gt; 
&lt;h3&gt;Service Health Check&lt;/h3&gt; 
&lt;p&gt;Health check feature can help you achieve high availability with load balancing.&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;healthCheck.type = &quot;tcp&quot;&lt;/code&gt; or &lt;code&gt;healthCheck.type = &quot;http&quot;&lt;/code&gt; to enable health check.&lt;/p&gt; 
&lt;p&gt;With health check type &lt;strong&gt;tcp&lt;/strong&gt;, the service port will be pinged (TCPing):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;test1&quot;
type = &quot;tcp&quot;
localPort = 22
remotePort = 6000
# Enable TCP health check
healthCheck.type = &quot;tcp&quot;
# TCPing timeout seconds
healthCheck.timeoutSeconds = 3
# If health check failed 3 times in a row, the proxy will be removed from frps
healthCheck.maxFailed = 3
# A health check every 10 seconds
healthCheck.intervalSeconds = 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With health check type &lt;strong&gt;http&lt;/strong&gt;, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web&quot;
type = &quot;http&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 80
customDomains = [&quot;test.example.com&quot;]
# Enable HTTP health check
healthCheck.type = &quot;http&quot;
# frpc will send a GET request to &#39;/status&#39;
# and expect an HTTP 2xx OK response
healthCheck.path = &quot;/status&quot;
healthCheck.timeoutSeconds = 3
healthCheck.maxFailed = 3
healthCheck.intervalSeconds = 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rewriting the HTTP Host Header&lt;/h3&gt; 
&lt;p&gt;By default frp does not modify the tunneled HTTP requests at all as it&#39;s a byte-for-byte copy.&lt;/p&gt; 
&lt;p&gt;However, speaking of web servers and HTTP requests, your web server might rely on the &lt;code&gt;Host&lt;/code&gt; HTTP header to determine the website to be accessed. frp can rewrite the &lt;code&gt;Host&lt;/code&gt; header when forwarding the HTTP requests, with the &lt;code&gt;hostHeaderRewrite&lt;/code&gt; field:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web&quot;
type = &quot;http&quot;
localPort = 80
customDomains = [&quot;test.example.com&quot;]
hostHeaderRewrite = &quot;dev.example.com&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The HTTP request will have the &lt;code&gt;Host&lt;/code&gt; header rewritten to &lt;code&gt;Host: dev.example.com&lt;/code&gt; when it reaches the actual web server, although the request from the browser probably has &lt;code&gt;Host: test.example.com&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Setting other HTTP Headers&lt;/h3&gt; 
&lt;p&gt;Similar to &lt;code&gt;Host&lt;/code&gt;, You can override other HTTP request and response headers with proxy type &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web&quot;
type = &quot;http&quot;
localPort = 80
customDomains = [&quot;test.example.com&quot;]
hostHeaderRewrite = &quot;dev.example.com&quot;
requestHeaders.set.x-from-where = &quot;frp&quot;
responseHeaders.set.foo = &quot;bar&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this example, it will set header &lt;code&gt;x-from-where: frp&lt;/code&gt; in the HTTP request and &lt;code&gt;foo: bar&lt;/code&gt; in the HTTP response.&lt;/p&gt; 
&lt;h3&gt;Get Real IP&lt;/h3&gt; 
&lt;h4&gt;HTTP X-Forwarded-For&lt;/h4&gt; 
&lt;p&gt;This feature is for &lt;code&gt;http&lt;/code&gt; proxies or proxies with the &lt;code&gt;https2http&lt;/code&gt; and &lt;code&gt;https2https&lt;/code&gt; plugins enabled.&lt;/p&gt; 
&lt;p&gt;You can get user&#39;s real IP from HTTP request headers &lt;code&gt;X-Forwarded-For&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Proxy Protocol&lt;/h4&gt; 
&lt;p&gt;frp supports Proxy Protocol to send user&#39;s real IP to local services.&lt;/p&gt; 
&lt;p&gt;Here is an example for https service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web&quot;
type = &quot;https&quot;
localPort = 443
customDomains = [&quot;test.example.com&quot;]

# now v1 and v2 are supported
transport.proxyProtocolVersion = &quot;v2&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can enable Proxy Protocol support in nginx to expose user&#39;s real IP in HTTP header &lt;code&gt;X-Real-IP&lt;/code&gt;, and then read &lt;code&gt;X-Real-IP&lt;/code&gt; header in your web service for the real IP.&lt;/p&gt; 
&lt;h3&gt;Require HTTP Basic Auth (Password) for Web Services&lt;/h3&gt; 
&lt;p&gt;Anyone who can guess your tunnel URL can access your local web server unless you protect it with a password.&lt;/p&gt; 
&lt;p&gt;This enforces HTTP Basic Auth on all requests with the username and password specified in frpc&#39;s configure file.&lt;/p&gt; 
&lt;p&gt;It can only be enabled when proxy type is http.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web&quot;
type = &quot;http&quot;
localPort = 80
customDomains = [&quot;test.example.com&quot;]
httpUser = &quot;abc&quot;
httpPassword = &quot;abc&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit &lt;code&gt;http://test.example.com&lt;/code&gt; in the browser and now you are prompted to enter the username and password.&lt;/p&gt; 
&lt;h3&gt;Custom Subdomain Names&lt;/h3&gt; 
&lt;p&gt;It is convenient to use &lt;code&gt;subdomain&lt;/code&gt; configure for http and https types when many people share one frps server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
subDomainHost = &quot;frps.com&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Resolve &lt;code&gt;*.frps.com&lt;/code&gt; to the frps server&#39;s IP. This is usually called a Wildcard DNS record.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web&quot;
type = &quot;http&quot;
localPort = 80
subdomain = &quot;test&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can visit your web service on &lt;code&gt;test.frps.com&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that if &lt;code&gt;subdomainHost&lt;/code&gt; is not empty, &lt;code&gt;customDomains&lt;/code&gt; should not be the subdomain of &lt;code&gt;subdomainHost&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;URL Routing&lt;/h3&gt; 
&lt;p&gt;frp supports forwarding HTTP requests to different backend web services by url routing.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;locations&lt;/code&gt; specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;web01&quot;
type = &quot;http&quot;
localPort = 80
customDomains = [&quot;web.example.com&quot;]
locations = [&quot;/&quot;]

[[proxies]]
name = &quot;web02&quot;
type = &quot;http&quot;
localPort = 81
customDomains = [&quot;web.example.com&quot;]
locations = [&quot;/news&quot;, &quot;/about&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;HTTP requests with URL prefix &lt;code&gt;/news&lt;/code&gt; or &lt;code&gt;/about&lt;/code&gt; will be forwarded to &lt;strong&gt;web02&lt;/strong&gt; and other requests to &lt;strong&gt;web01&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;TCP Port Multiplexing&lt;/h3&gt; 
&lt;p&gt;frp supports receiving TCP sockets directed to different proxies on a single port on frps, similar to &lt;code&gt;vhostHTTPPort&lt;/code&gt; and &lt;code&gt;vhostHTTPSPort&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The only supported TCP port multiplexing method available at the moment is &lt;code&gt;httpconnect&lt;/code&gt; - HTTP CONNECT tunnel.&lt;/p&gt; 
&lt;p&gt;When setting &lt;code&gt;tcpmuxHTTPConnectPort&lt;/code&gt; to anything other than 0 in frps, frps will listen on this port for HTTP CONNECT requests.&lt;/p&gt; 
&lt;p&gt;The host of the HTTP CONNECT request will be used to match the proxy in frps. Proxy hosts can be configured in frpc by configuring &lt;code&gt;customDomains&lt;/code&gt; and / or &lt;code&gt;subdomain&lt;/code&gt; under &lt;code&gt;tcpmux&lt;/code&gt; proxies, when &lt;code&gt;multiplexer = &quot;httpconnect&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
bindPort = 7000
tcpmuxHTTPConnectPort = 1337
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000

[[proxies]]
name = &quot;proxy1&quot;
type = &quot;tcpmux&quot;
multiplexer = &quot;httpconnect&quot;
customDomains = [&quot;test1&quot;]
localPort = 80

[[proxies]]
name = &quot;proxy2&quot;
type = &quot;tcpmux&quot;
multiplexer = &quot;httpconnect&quot;
customDomains = [&quot;test2&quot;]
localPort = 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the above configuration - frps can be contacted on port 1337 with a HTTP CONNECT header such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CONNECT test1 HTTP/1.1\r\n\r\n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and the connection will be routed to &lt;code&gt;proxy1&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting to frps via PROXY&lt;/h3&gt; 
&lt;p&gt;frpc can connect to frps through proxy if you set OS environment variable &lt;code&gt;HTTP_PROXY&lt;/code&gt;, or if &lt;code&gt;transport.proxyURL&lt;/code&gt; is set in frpc.toml file.&lt;/p&gt; 
&lt;p&gt;It only works when protocol is tcp.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml
serverAddr = &quot;x.x.x.x&quot;
serverPort = 7000
transport.proxyURL = &quot;http://user:pwd@192.168.1.128:8080&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Port range mapping&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Added in v0.56.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;We can use the range syntax of Go template combined with the built-in &lt;code&gt;parseNumberRangePair&lt;/code&gt; function to achieve port range mapping.&lt;/p&gt; 
&lt;p&gt;The following example, when run, will create 8 proxies named &lt;code&gt;test-6000, test-6001 ... test-6007&lt;/code&gt;, each mapping the remote port to the local port.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{{- range $_, $v := parseNumberRangePair &quot;6000-6006,6007&quot; &quot;6000-6006,6007&quot; }}
[[proxies]]
name = &quot;tcp-{{ $v.First }}&quot;
type = &quot;tcp&quot;
localPort = {{ $v.First }}
remotePort = {{ $v.Second }}
{{- end }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Client Plugins&lt;/h3&gt; 
&lt;p&gt;frpc only forwards requests to local TCP or UDP ports by default.&lt;/p&gt; 
&lt;p&gt;Plugins are used for providing rich features. There are built-in plugins such as &lt;code&gt;unix_domain_socket&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;socks5&lt;/code&gt;, &lt;code&gt;static_file&lt;/code&gt;, &lt;code&gt;http2https&lt;/code&gt;, &lt;code&gt;https2http&lt;/code&gt;, &lt;code&gt;https2https&lt;/code&gt; and you can see &lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/#example-usage&quot;&gt;example usage&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Using plugin &lt;strong&gt;http_proxy&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frpc.toml

[[proxies]]
name = &quot;http_proxy&quot;
type = &quot;tcp&quot;
remotePort = 6000
[proxies.plugin]
type = &quot;http_proxy&quot;
httpUser = &quot;abc&quot;
httpPassword = &quot;abc&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;httpUser&lt;/code&gt; and &lt;code&gt;httpPassword&lt;/code&gt; are configuration parameters used in &lt;code&gt;http_proxy&lt;/code&gt; plugin.&lt;/p&gt; 
&lt;h3&gt;Server Manage Plugins&lt;/h3&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/server_plugin.md&quot;&gt;document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Find more plugins in &lt;a href=&quot;https://github.com/gofrp/plugin&quot;&gt;gofrp/plugin&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;SSH Tunnel Gateway&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;added in v0.53.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;frp supports listening to an SSH port on the frps side and achieves TCP protocol proxying through the SSH -R protocol, without relying on frpc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;# frps.toml
sshTunnelGateway.bindPort = 2200
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running &lt;code&gt;./frps -c frps.toml&lt;/code&gt;, a private key file named &lt;code&gt;.autogen_ssh_key&lt;/code&gt; will be automatically created in the current working directory. This generated private key file will be used by the SSH server in frps.&lt;/p&gt; 
&lt;p&gt;Executing the command&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ssh -R :80:127.0.0.1:8080 v0@{frp address} -p 2200 tcp --proxy_name &quot;test-tcp&quot; --remote_port 9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;sets up a proxy on frps that forwards the local 8080 service to the port 9090.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;frp (via SSH) (Ctrl+C to quit)

User:
ProxyName: test-tcp
Type: tcp
RemoteAddress: :9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;frpc tcp --proxy_name &quot;test-tcp&quot; --local_ip 127.0.0.1 --local_port 8080 --remote_port 9090
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to this &lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/ssh_tunnel_gateway.md&quot;&gt;document&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Virtual Network (VirtualNet)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Alpha feature added in v0.62.0&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The VirtualNet feature enables frp to create and manage virtual network connections between clients and visitors through a TUN interface. This allows for IP-level routing between machines, extending frp beyond simple port forwarding to support full network connectivity.&lt;/p&gt; 
&lt;p&gt;For detailed information about configuration and usage, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/fatedier/frp/dev/doc/virtual_net.md&quot;&gt;VirtualNet documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature Gates&lt;/h2&gt; 
&lt;p&gt;frp supports feature gates to enable or disable experimental features. This allows users to try out new features before they&#39;re considered stable.&lt;/p&gt; 
&lt;h3&gt;Available Feature Gates&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Stage&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VirtualNet&lt;/td&gt; 
   &lt;td&gt;ALPHA&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Virtual network capabilities for frp&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Enabling Feature Gates&lt;/h3&gt; 
&lt;p&gt;To enable an experimental feature, add the feature gate to your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-toml&quot;&gt;featureGates = { VirtualNet = true }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Feature Lifecycle&lt;/h3&gt; 
&lt;p&gt;Features typically go through three stages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ALPHA&lt;/strong&gt;: Disabled by default, may be unstable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BETA&lt;/strong&gt;: May be enabled by default, more stable but still evolving&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GA (Generally Available)&lt;/strong&gt;: Enabled by default, ready for production use&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gofrp/plugin&quot;&gt;gofrp/plugin&lt;/a&gt; - A repository for frp plugins that contains a variety of plugins implemented based on the frp extension mechanism, meeting the customization needs of different scenarios.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gofrp/tiny-frpc&quot;&gt;gofrp/tiny-frpc&lt;/a&gt; - A lightweight version of the frp client (around 3.5MB at minimum) implemented using the ssh protocol, supporting some of the most commonly used features, suitable for devices with limited resources.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Interested in getting involved? We would like to help you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Take a look at our &lt;a href=&quot;https://github.com/fatedier/frp/issues&quot;&gt;issues list&lt;/a&gt; and consider sending a Pull Request to &lt;strong&gt;dev branch&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.&lt;/li&gt; 
 &lt;li&gt;Sorry for my poor English. Improvements for this document are welcome, even some typo fixes.&lt;/li&gt; 
 &lt;li&gt;If you have great ideas, send an email to &lt;a href=&quot;mailto:fatedier@gmail.com&quot;&gt;fatedier@gmail.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note: We prefer you to give your advise in &lt;a href=&quot;https://github.com/fatedier/frp/issues&quot;&gt;issues&lt;/a&gt;, so others with a same question can search it quickly and we don&#39;t need to answer them repeatedly.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Donation&lt;/h2&gt; 
&lt;p&gt;If frp helps you a lot, you can support us by:&lt;/p&gt; 
&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; 
&lt;p&gt;Support us by &lt;a href=&quot;https://github.com/sponsors/fatedier&quot;&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can have your company&#39;s logo placed on README file of this project.&lt;/p&gt; 
&lt;h3&gt;PayPal&lt;/h3&gt; 
&lt;p&gt;Donate money by &lt;a href=&quot;https://www.paypal.me/fatedier&quot;&gt;PayPal&lt;/a&gt; to my account &lt;strong&gt;&lt;a href=&quot;mailto:fatedier@gmail.com&quot;&gt;fatedier@gmail.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-go</title>
      <link>https://github.com/openai/openai-go</link>
      <description>&lt;p&gt;The official Go library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Go API Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://pkg.go.dev/github.com/openai/openai-go/v2&quot;&gt;&lt;img src=&quot;https://pkg.go.dev/badge/github.com/openai/openai-go.svg?sanitize=true&quot; alt=&quot;Go Reference&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAI Go library provides convenient access to the &lt;a href=&quot;https://platform.openai.com/docs&quot;&gt;OpenAI REST API&lt;/a&gt; from applications written in Go.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The latest version of this package has small and limited breaking changes. See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt; for details.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
	&quot;github.com/openai/openai-go/v2&quot; // imported as openai
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;p&gt;Or to pin the version:&lt;/p&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;go get -u &#39;github.com/openai/openai-go@v2.0.2&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;This library requires Go 1.21+.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/api.md&quot;&gt;api.md&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;context&quot;
	&quot;fmt&quot;

	&quot;github.com/openai/openai-go/v2&quot;
	&quot;github.com/openai/openai-go/v2/option&quot;
	&quot;github.com/openai/openai-go/v2/shared&quot;
)

func main() {
	client := openai.NewClient(
		option.WithAPIKey(&quot;My API Key&quot;), // defaults to os.LookupEnv(&quot;OPENAI_API_KEY&quot;)
	)
	chatCompletion, err := client.Chat.Completions.New(context.TODO(), openai.ChatCompletionNewParams{
		Messages: []openai.ChatCompletionMessageParamUnion{
			openai.UserMessage(&quot;Say this is a test&quot;),
		},
		Model: openai.ChatModelGPT4o,
	})
	if err != nil {
		panic(err.Error())
	}
	println(chatCompletion.Choices[0].Message.Content)
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Conversations&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;param := openai.ChatCompletionNewParams{
	Messages: []openai.ChatCompletionMessageParamUnion{
		openai.UserMessage(&quot;What kind of houseplant is easy to take care of?&quot;),
	},
	Seed:     openai.Int(1),
	Model:    openai.ChatModelGPT4o,
}

completion, err := client.Chat.Completions.New(ctx, param)

param.Messages = append(param.Messages, completion.Choices[0].Message.ToParam())
param.Messages = append(param.Messages, openai.UserMessage(&quot;How big are those?&quot;))

// continue the conversation
completion, err = client.Chat.Completions.New(ctx, param)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Streaming responses&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;question := &quot;Write an epic&quot;

stream := client.Chat.Completions.NewStreaming(ctx, openai.ChatCompletionNewParams{
	Messages: []openai.ChatCompletionMessageParamUnion{
		openai.UserMessage(question),
	},
	Seed:  openai.Int(0),
	Model: openai.ChatModelGPT4o,
})

// optionally, an accumulator helper can be used
acc := openai.ChatCompletionAccumulator{}

for stream.Next() {
	chunk := stream.Current()
	acc.AddChunk(chunk)

	if content, ok := acc.JustFinishedContent(); ok {
		println(&quot;Content stream finished:&quot;, content)
	}

	// if using tool calls
	if tool, ok := acc.JustFinishedToolCall(); ok {
		println(&quot;Tool call stream finished:&quot;, tool.Index, tool.Name, tool.Arguments)
	}

	if refusal, ok := acc.JustFinishedRefusal(); ok {
		println(&quot;Refusal stream finished:&quot;, refusal)
	}

	// it&#39;s best to use chunks after handling JustFinished events
	if len(chunk.Choices) &amp;gt; 0 {
		println(chunk.Choices[0].Delta.Content)
	}
}

if stream.Err() != nil {
	panic(stream.Err())
}

// After the stream is finished, acc can be used like a ChatCompletion
_ = acc.Choices[0].Message.Content
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/chat-completion-accumulating/main.go&quot;&gt;full streaming and accumulation example&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Tool calling&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
	&quot;encoding/json&quot;
	// ...
)

// ...

question := &quot;What is the weather in New York City?&quot;

params := openai.ChatCompletionNewParams{
	Messages: []openai.ChatCompletionMessageParamUnion{
		openai.UserMessage(question),
	},
	Tools: []openai.ChatCompletionToolParam{
		{
			Function: openai.FunctionDefinitionParam{
				Name:        &quot;get_weather&quot;,
				Description: openai.String(&quot;Get weather at the given location&quot;),
				Parameters: openai.FunctionParameters{
					&quot;type&quot;: &quot;object&quot;,
					&quot;properties&quot;: map[string]interface{}{
						&quot;location&quot;: map[string]string{
							&quot;type&quot;: &quot;string&quot;,
						},
					},
					&quot;required&quot;: []string{&quot;location&quot;},
				},
			},
		},
	},
	Model: openai.ChatModelGPT4o,
}

// If there is a was a function call, continue the conversation
params.Messages = append(params.Messages, completion.Choices[0].Message.ToParam())
for _, toolCall := range toolCalls {
	if toolCall.Function.Name == &quot;get_weather&quot; {
		// Extract the location from the function call arguments
		var args map[string]interface{}
		err := json.Unmarshal([]byte(toolCall.Function.Arguments), &amp;amp;args)
		if err != nil {
			panic(err)
		}
		location := args[&quot;location&quot;].(string)

		// Simulate getting weather data
		weatherData := getWeather(location)

		// Print the weather data
		fmt.Printf(&quot;Weather in %s: %s\n&quot;, location, weatherData)

		params.Messages = append(params.Messages, openai.ToolMessage(weatherData, toolCall.ID))
	}
}

// ... continue the conversation with the information provided by the tool
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/chat-completion-tool-calling/main.go&quot;&gt;full tool calling example&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Structured outputs&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;import (
	&quot;encoding/json&quot;
	&quot;github.com/invopop/jsonschema&quot;
	// ...
)

// A struct that will be converted to a Structured Outputs response schema
type HistoricalComputer struct {
	Origin       Origin   `json:&quot;origin&quot; jsonschema_description:&quot;The origin of the computer&quot;`
	Name         string   `json:&quot;full_name&quot; jsonschema_description:&quot;The name of the device model&quot;`
	Legacy       string   `json:&quot;legacy&quot; jsonschema:&quot;enum=positive,enum=neutral,enum=negative&quot; jsonschema_description:&quot;Its influence on the field of computing&quot;`
	NotableFacts []string `json:&quot;notable_facts&quot; jsonschema_description:&quot;A few key facts about the computer&quot;`
}

type Origin struct {
	YearBuilt    int64  `json:&quot;year_of_construction&quot; jsonschema_description:&quot;The year it was made&quot;`
	Organization string `json:&quot;organization&quot; jsonschema_description:&quot;The organization that was in charge of its development&quot;`
}

func GenerateSchema[T any]() interface{} {
	// Structured Outputs uses a subset of JSON schema
	// These flags are necessary to comply with the subset
	reflector := jsonschema.Reflector{
		AllowAdditionalProperties: false,
		DoNotReference:            true,
	}
	var v T
	schema := reflector.Reflect(v)
	return schema
}

// Generate the JSON schema at initialization time
var HistoricalComputerResponseSchema = GenerateSchema[HistoricalComputer]()

func main() {

	// ...

	question := &quot;What computer ran the first neural network?&quot;

	schemaParam := openai.ResponseFormatJSONSchemaJSONSchemaParam{
		Name:        &quot;historical_computer&quot;,
		Description: openai.String(&quot;Notable information about a computer&quot;),
		Schema:      HistoricalComputerResponseSchema,
		Strict:      openai.Bool(true),
	}

	chat, _ := client.Chat.Completions.New(ctx, openai.ChatCompletionNewParams{
		// ...
		ResponseFormat: openai.ChatCompletionNewParamsResponseFormatUnion{
			OfJSONSchema: &amp;amp;openai.ResponseFormatJSONSchemaParam{
				JSONSchema: schemaParam,
			},
		},
		// only certain models can perform structured outputs
		Model: openai.ChatModelGPT4o2024_08_06,
	})

	// extract into a well-typed struct
	var historicalComputer HistoricalComputer
	_ = json.Unmarshal([]byte(chat.Choices[0].Message.Content), &amp;amp;historicalComputer)

	historicalComputer.Name
	historicalComputer.Origin.YearBuilt
	historicalComputer.Origin.Organization
	for i, fact := range historicalComputer.NotableFacts {
		// ...
	}
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/examples/structured-outputs/main.go&quot;&gt;full structured outputs example&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h3&gt;Request fields&lt;/h3&gt; 
&lt;p&gt;The openai library uses the &lt;a href=&quot;https://tip.golang.org/doc/go1.24#encodingjsonpkgencodingjson&quot;&gt;&lt;code&gt;omitzero&lt;/code&gt;&lt;/a&gt; semantics from the Go 1.24+ &lt;code&gt;encoding/json&lt;/code&gt; release for request fields.&lt;/p&gt; 
&lt;p&gt;Required primitive fields (&lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, etc.) feature the tag &lt;code&gt;`json:&quot;...,required&quot;`&lt;/code&gt;. These fields are always serialized, even their zero values.&lt;/p&gt; 
&lt;p&gt;Optional primitive types are wrapped in a &lt;code&gt;param.Opt[T]&lt;/code&gt;. These fields can be set with the provided constructors, &lt;code&gt;openai.String(string)&lt;/code&gt;, &lt;code&gt;openai.Int(int64)&lt;/code&gt;, etc.&lt;/p&gt; 
&lt;p&gt;Any &lt;code&gt;param.Opt[T]&lt;/code&gt;, map, slice, struct or string enum uses the tag &lt;code&gt;`json:&quot;...,omitzero&quot;`&lt;/code&gt;. Its zero value is considered omitted.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;param.IsOmitted(any)&lt;/code&gt; function can confirm the presence of any &lt;code&gt;omitzero&lt;/code&gt; field.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;p := openai.ExampleParams{
	ID:   &quot;id_xxx&quot;,             // required property
	Name: openai.String(&quot;...&quot;), // optional property

	Point: openai.Point{
		X: 0,             // required field will serialize as 0
		Y: openai.Int(1), // optional field will serialize as 1
		// ... omitted non-required fields will not be serialized
	},

	Origin: openai.Origin{}, // the zero value of [Origin] is considered omitted
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To send &lt;code&gt;null&lt;/code&gt; instead of a &lt;code&gt;param.Opt[T]&lt;/code&gt;, use &lt;code&gt;param.Null[T]()&lt;/code&gt;. To send &lt;code&gt;null&lt;/code&gt; instead of a struct &lt;code&gt;T&lt;/code&gt;, use &lt;code&gt;param.NullStruct[T]()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;p.Name = param.Null[string]()       // &#39;null&#39; instead of string
p.Point = param.NullStruct[Point]() // &#39;null&#39; instead of struct

param.IsNull(p.Name)  // true
param.IsNull(p.Point) // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Request structs contain a &lt;code&gt;.SetExtraFields(map[string]any)&lt;/code&gt; method which can send non-conforming fields in the request body. Extra fields overwrite any struct fields with a matching key. For security reasons, only use &lt;code&gt;SetExtraFields&lt;/code&gt; with trusted data.&lt;/p&gt; 
&lt;p&gt;To send a custom value instead of a struct, use &lt;code&gt;param.Override[T](value)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// In cases where the API specifies a given type,
// but you want to send something else, use [SetExtraFields]:
p.SetExtraFields(map[string]any{
	&quot;x&quot;: 0.01, // send &quot;x&quot; as a float instead of int
})

// Send a number instead of an object
custom := param.Override[openai.FooParams](12)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Request unions&lt;/h3&gt; 
&lt;p&gt;Unions are represented as a struct with fields prefixed by &quot;Of&quot; for each of it&#39;s variants, only one field can be non-zero. The non-zero field will be serialized.&lt;/p&gt; 
&lt;p&gt;Sub-properties of the union can be accessed via methods on the union struct. These methods return a mutable pointer to the underlying data, if present.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Only one field can be non-zero, use param.IsOmitted() to check if a field is set
type AnimalUnionParam struct {
	OfCat *Cat `json:&quot;,omitzero,inline`
	OfDog *Dog `json:&quot;,omitzero,inline`
}

animal := AnimalUnionParam{
	OfCat: &amp;amp;Cat{
		Name: &quot;Whiskers&quot;,
		Owner: PersonParam{
			Address: AddressParam{Street: &quot;3333 Coyote Hill Rd&quot;, Zip: 0},
		},
	},
}

// Mutating a field
if address := animal.GetOwner().GetAddress(); address != nil {
	address.ZipCode = 94304
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Response objects&lt;/h3&gt; 
&lt;p&gt;All fields in response structs are ordinary value types (not pointers or wrappers). Response structs also include a special &lt;code&gt;JSON&lt;/code&gt; field containing metadata about each property.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type Animal struct {
	Name   string `json:&quot;name,nullable&quot;`
	Owners int    `json:&quot;owners&quot;`
	Age    int    `json:&quot;age&quot;`
	JSON   struct {
		Name        respjson.Field
		Owner       respjson.Field
		Age         respjson.Field
		ExtraFields map[string]respjson.Field
	} `json:&quot;-&quot;`
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To handle optional data, use the &lt;code&gt;.Valid()&lt;/code&gt; method on the JSON field. &lt;code&gt;.Valid()&lt;/code&gt; returns true if a field is not &lt;code&gt;null&lt;/code&gt;, not present, or couldn&#39;t be marshaled.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;.Valid()&lt;/code&gt; is false, the corresponding field will simply be its zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;raw := `{&quot;owners&quot;: 1, &quot;name&quot;: null}`

var res Animal
json.Unmarshal([]byte(raw), &amp;amp;res)

// Accessing regular fields

res.Owners // 1
res.Name   // &quot;&quot;
res.Age    // 0

// Optional field checks

res.JSON.Owners.Valid() // true
res.JSON.Name.Valid()   // false
res.JSON.Age.Valid()    // false

// Raw JSON values

res.JSON.Owners.Raw()                  // &quot;1&quot;
res.JSON.Name.Raw() == &quot;null&quot;          // true
res.JSON.Name.Raw() == respjson.Null   // true
res.JSON.Age.Raw() == &quot;&quot;               // true
res.JSON.Age.Raw() == respjson.Omitted // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These &lt;code&gt;.JSON&lt;/code&gt; structs also include an &lt;code&gt;ExtraFields&lt;/code&gt; map containing any properties in the json response that were not specified in the struct. This can be useful for API features not yet present in the SDK.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;body := res.JSON.ExtraFields[&quot;my_unexpected_field&quot;].Raw()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Response Unions&lt;/h3&gt; 
&lt;p&gt;In responses, unions are represented by a flattened struct containing all possible fields from each of the object variants. To convert it to a variant use the &lt;code&gt;.AsFooVariant()&lt;/code&gt; method or the &lt;code&gt;.AsAny()&lt;/code&gt; method if present.&lt;/p&gt; 
&lt;p&gt;If a response value union contains primitive values, primitive fields will be alongside the properties but prefixed with &lt;code&gt;Of&lt;/code&gt; and feature the tag &lt;code&gt;json:&quot;...,inline&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;type AnimalUnion struct {
	// From variants [Dog], [Cat]
	Owner Person `json:&quot;owner&quot;`
	// From variant [Dog]
	DogBreed string `json:&quot;dog_breed&quot;`
	// From variant [Cat]
	CatBreed string `json:&quot;cat_breed&quot;`
	// ...

	JSON struct {
		Owner respjson.Field
		// ...
	} `json:&quot;-&quot;`
}

// If animal variant
if animal.Owner.Address.ZipCode == &quot;&quot; {
	panic(&quot;missing zip code&quot;)
}

// Switch on the variant
switch variant := animal.AsAny().(type) {
case Dog:
case Cat:
default:
	panic(&quot;unexpected type&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RequestOptions&lt;/h3&gt; 
&lt;p&gt;This library uses the functional options pattern. Functions defined in the &lt;code&gt;option&lt;/code&gt; package return a &lt;code&gt;RequestOption&lt;/code&gt;, which is a closure that mutates a &lt;code&gt;RequestConfig&lt;/code&gt;. These options can be supplied to the client or at individual requests. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;client := openai.NewClient(
	// Adds a header to every request made by the client
	option.WithHeader(&quot;X-Some-Header&quot;, &quot;custom_header_info&quot;),
)

client.Chat.Completions.New(context.TODO(), ...,
	// Override the header
	option.WithHeader(&quot;X-Some-Header&quot;, &quot;some_other_custom_header_info&quot;),
	// Add an undocumented field to the request body, using sjson syntax
	option.WithJSONSet(&quot;some.json.path&quot;, map[string]string{&quot;my&quot;: &quot;object&quot;}),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The request option &lt;code&gt;option.WithDebugLog(nil)&lt;/code&gt; may be helpful while debugging.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://pkg.go.dev/github.com/openai/openai-go/option&quot;&gt;full list of request options&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Pagination&lt;/h3&gt; 
&lt;p&gt;This library provides some conveniences for working with paginated list endpoints.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;.ListAutoPaging()&lt;/code&gt; methods to iterate through items across all pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;iter := client.FineTuning.Jobs.ListAutoPaging(context.TODO(), openai.FineTuningJobListParams{
	Limit: openai.Int(20),
})
// Automatically fetches more pages as needed.
for iter.Next() {
	fineTuningJob := iter.Current()
	fmt.Printf(&quot;%+v\n&quot;, fineTuningJob)
}
if err := iter.Err(); err != nil {
	panic(err.Error())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can use simple &lt;code&gt;.List()&lt;/code&gt; methods to fetch a single page and receive a standard response object with additional helper methods like &lt;code&gt;.GetNextPage()&lt;/code&gt;, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;page, err := client.FineTuning.Jobs.List(context.TODO(), openai.FineTuningJobListParams{
	Limit: openai.Int(20),
})
for page != nil {
	for _, job := range page.Data {
		fmt.Printf(&quot;%+v\n&quot;, job)
	}
	page, err = page.GetNextPage()
}
if err != nil {
	panic(err.Error())
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Errors&lt;/h3&gt; 
&lt;p&gt;When the API returns a non-success status code, we return an error with type &lt;code&gt;*openai.Error&lt;/code&gt;. This contains the &lt;code&gt;StatusCode&lt;/code&gt;, &lt;code&gt;*http.Request&lt;/code&gt;, and &lt;code&gt;*http.Response&lt;/code&gt; values of the request, as well as the JSON of the error body (much like other response objects in the SDK).&lt;/p&gt; 
&lt;p&gt;To handle errors, we recommend that you use the &lt;code&gt;errors.As&lt;/code&gt; pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;_, err := client.FineTuning.Jobs.New(context.TODO(), openai.FineTuningJobNewParams{
	Model:        openai.FineTuningJobNewParamsModelBabbage002,
	TrainingFile: &quot;file-abc123&quot;,
})
if err != nil {
	var apierr *openai.Error
	if errors.As(err, &amp;amp;apierr) {
		println(string(apierr.DumpRequest(true)))  // Prints the serialized HTTP request
		println(string(apierr.DumpResponse(true))) // Prints the serialized HTTP response
	}
	panic(err.Error()) // GET &quot;/fine_tuning/jobs&quot;: 400 Bad Request { ... }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When other errors occur, they are returned unwrapped; for example, if HTTP transport fails, you might receive &lt;code&gt;*url.Error&lt;/code&gt; wrapping &lt;code&gt;*net.OpError&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Timeouts&lt;/h3&gt; 
&lt;p&gt;Requests do not time out by default; use context to configure a timeout for a request lifecycle.&lt;/p&gt; 
&lt;p&gt;Note that if a request is &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/#retries&quot;&gt;retried&lt;/a&gt;, the context timeout does not start over. To set a per-retry timeout, use &lt;code&gt;option.WithRequestTimeout()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// This sets the timeout for the request, including all the retries.
ctx, cancel := context.WithTimeout(context.Background(), 5*time.Minute)
defer cancel()
client.Chat.Completions.New(
	ctx,
	openai.ChatCompletionNewParams{
		Messages: []openai.ChatCompletionMessageParamUnion{{
			OfUser: &amp;amp;openai.ChatCompletionUserMessageParam{
				Content: openai.ChatCompletionUserMessageParamContentUnion{
					OfString: openai.String(&quot;How can I list all files in a directory using Python?&quot;),
				},
			},
		}},
		Model: shared.ChatModelGPT5,
	},
	// This sets the per-retry timeout
	option.WithRequestTimeout(20*time.Second),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;File uploads&lt;/h3&gt; 
&lt;p&gt;Request parameters that correspond to file uploads in multipart requests are typed as &lt;code&gt;io.Reader&lt;/code&gt;. The contents of the &lt;code&gt;io.Reader&lt;/code&gt; will by default be sent as a multipart form part with the file name of &quot;anonymous_file&quot; and content-type of &quot;application/octet-stream&quot;.&lt;/p&gt; 
&lt;p&gt;The file name and content-type can be customized by implementing &lt;code&gt;Name() string&lt;/code&gt; or &lt;code&gt;ContentType() string&lt;/code&gt; on the run-time type of &lt;code&gt;io.Reader&lt;/code&gt;. Note that &lt;code&gt;os.File&lt;/code&gt; implements &lt;code&gt;Name() string&lt;/code&gt;, so a file returned by &lt;code&gt;os.Open&lt;/code&gt; will be sent with the file name on disk.&lt;/p&gt; 
&lt;p&gt;We also provide a helper &lt;code&gt;openai.File(reader io.Reader, filename string, contentType string)&lt;/code&gt; which can be used to wrap any &lt;code&gt;io.Reader&lt;/code&gt; with the appropriate file name and content type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// A file from the file system
file, err := os.Open(&quot;input.jsonl&quot;)
openai.FileNewParams{
	File:    file,
	Purpose: openai.FilePurposeFineTune,
}

// A file from a string
openai.FileNewParams{
	File:    strings.NewReader(&quot;my file contents&quot;),
	Purpose: openai.FilePurposeFineTune,
}

// With a custom filename and contentType
openai.FileNewParams{
	File:    openai.File(strings.NewReader(`{&quot;hello&quot;: &quot;foo&quot;}`), &quot;file.go&quot;, &quot;application/json&quot;),
	Purpose: openai.FilePurposeFineTune,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Webhook Verification&lt;/h2&gt; 
&lt;p&gt;Verifying webhook signatures is &lt;em&gt;optional but encouraged&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For more information about webhooks, see &lt;a href=&quot;https://platform.openai.com/docs/guides/webhooks&quot;&gt;the API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Parsing webhook payloads&lt;/h3&gt; 
&lt;p&gt;For most use cases, you will likely want to verify the webhook and parse the payload at the same time. To achieve this, we provide the method &lt;code&gt;client.Webhooks.Unwrap()&lt;/code&gt;, which parses a webhook request and verifies that it was sent by OpenAI. This method will return an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter should be the raw JSON bytes sent from the server (do not parse it first). The &lt;code&gt;Unwrap()&lt;/code&gt; method will parse this JSON for you into an event object after verifying the webhook was sent from OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;io&quot;
	&quot;log&quot;
	&quot;net/http&quot;
	&quot;os&quot;

	&quot;github.com/gin-gonic/gin&quot;
	&quot;github.com/openai/openai-go/v2&quot;
	&quot;github.com/openai/openai-go/v2/option&quot;
	&quot;github.com/openai/openai-go/v2/webhooks&quot;
)

func main() {
	client := openai.NewClient(
		option.WithWebhookSecret(os.Getenv(&quot;OPENAI_WEBHOOK_SECRET&quot;)), // env var used by default; explicit here.
	)

	r := gin.Default()

	r.POST(&quot;/webhook&quot;, func(c *gin.Context) {
		body, err := io.ReadAll(c.Request.Body)
		if err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{&quot;error&quot;: &quot;Error reading request body&quot;})
			return
		}
		defer c.Request.Body.Close()

		webhookEvent, err := client.Webhooks.Unwrap(body, c.Request.Header)
		if err != nil {
			log.Printf(&quot;Invalid webhook signature: %v&quot;, err)
			c.JSON(http.StatusBadRequest, gin.H{&quot;error&quot;: &quot;invalid signature&quot;})
			return
		}

		switch event := webhookEvent.AsAny().(type) {
		case webhooks.ResponseCompletedWebhookEvent:
			log.Printf(&quot;Response completed: %+v&quot;, event.Data)
		case webhooks.ResponseFailedWebhookEvent:
			log.Printf(&quot;Response failed: %+v&quot;, event.Data)
		default:
			log.Printf(&quot;Unhandled event type: %T&quot;, event)
		}

		c.JSON(http.StatusOK, gin.H{&quot;message&quot;: &quot;ok&quot;})
	})

	r.Run(&quot;:8000&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verifying webhook payloads directly&lt;/h3&gt; 
&lt;p&gt;In some cases, you may want to verify the webhook separately from parsing the payload. If you prefer to handle these steps separately, we provide the method &lt;code&gt;client.Webhooks.VerifySignature()&lt;/code&gt; to &lt;em&gt;only verify&lt;/em&gt; the signature of a webhook request. Like &lt;code&gt;Unwrap()&lt;/code&gt;, this method will return an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter should be the raw JSON bytes sent from the server (do not parse it first). You will then need to parse the body after verifying the signature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;encoding/json&quot;
	&quot;io&quot;
	&quot;log&quot;
	&quot;net/http&quot;
	&quot;os&quot;

	&quot;github.com/gin-gonic/gin&quot;
	&quot;github.com/openai/openai-go/v2&quot;
	&quot;github.com/openai/openai-go/v2/option&quot;
)

func main() {
	client := openai.NewClient(
		option.WithWebhookSecret(os.Getenv(&quot;OPENAI_WEBHOOK_SECRET&quot;)), // env var used by default; explicit here.
	)

	r := gin.Default()

	r.POST(&quot;/webhook&quot;, func(c *gin.Context) {
		body, err := io.ReadAll(c.Request.Body)
		if err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{&quot;error&quot;: &quot;Error reading request body&quot;})
			return
		}
		defer c.Request.Body.Close()

		err = client.Webhooks.VerifySignature(body, c.Request.Header)
		if err != nil {
			log.Printf(&quot;Invalid webhook signature: %v&quot;, err)
			c.JSON(http.StatusBadRequest, gin.H{&quot;error&quot;: &quot;invalid signature&quot;})
			return
		}

		c.JSON(http.StatusOK, gin.H{&quot;message&quot;: &quot;ok&quot;})
	})

	r.Run(&quot;:8000&quot;)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Retries&lt;/h3&gt; 
&lt;p&gt;Certain errors will be automatically retried 2 times by default, with a short exponential backoff. We retry by default all connection errors, 408 Request Timeout, 409 Conflict, 429 Rate Limit, and &amp;gt;=500 Internal errors.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;WithMaxRetries&lt;/code&gt; option to configure or disable this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Configure the default for all requests:
client := openai.NewClient(
	option.WithMaxRetries(0), // default is 2
)

// Override per-request:
client.Chat.Completions.New(
	context.TODO(),
	openai.ChatCompletionNewParams{
		Messages: []openai.ChatCompletionMessageParamUnion{{
			OfUser: &amp;amp;openai.ChatCompletionUserMessageParam{
				Content: openai.ChatCompletionUserMessageParamContentUnion{
					OfString: openai.String(&quot;How can I get the name of the current day in JavaScript?&quot;),
				},
			},
		}},
		Model: shared.ChatModelGPT5,
	},
	option.WithMaxRetries(5),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessing raw response data (e.g. response headers)&lt;/h3&gt; 
&lt;p&gt;You can access the raw HTTP response data by using the &lt;code&gt;option.WithResponseInto()&lt;/code&gt; request option. This is useful when you need to examine response headers, status codes, or other details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;// Create a variable to store the HTTP response
var response *http.Response
chatCompletion, err := client.Chat.Completions.New(
	context.TODO(),
	openai.ChatCompletionNewParams{
		Messages: []openai.ChatCompletionMessageParamUnion{{
			OfUser: &amp;amp;openai.ChatCompletionUserMessageParam{
				Content: openai.ChatCompletionUserMessageParamContentUnion{
					OfString: openai.String(&quot;Say this is a test&quot;),
				},
			},
		}},
		Model: shared.ChatModelGPT5,
	},
	option.WithResponseInto(&amp;amp;response),
)
if err != nil {
	// handle error
}
fmt.Printf(&quot;%+v\n&quot;, chatCompletion)

fmt.Printf(&quot;Status Code: %d\n&quot;, response.StatusCode)
fmt.Printf(&quot;Headers: %+#v\n&quot;, response.Header)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Making custom/undocumented requests&lt;/h3&gt; 
&lt;p&gt;This library is typed for convenient access to the documented API. If you need to access undocumented endpoints, params, or response properties, the library can still be used.&lt;/p&gt; 
&lt;h4&gt;Undocumented endpoints&lt;/h4&gt; 
&lt;p&gt;To make requests to undocumented endpoints, you can use &lt;code&gt;client.Get&lt;/code&gt;, &lt;code&gt;client.Post&lt;/code&gt;, and other HTTP verbs. &lt;code&gt;RequestOptions&lt;/code&gt; on the client, such as retries, will be respected when making these requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;var (
    // params can be an io.Reader, a []byte, an encoding/json serializable object,
    // or a &quot;…Params&quot; struct defined in this library.
    params map[string]any

    // result can be an []byte, *http.Response, a encoding/json deserializable object,
    // or a model defined in this library.
    result *http.Response
)
err := client.Post(context.Background(), &quot;/unspecified&quot;, params, &amp;amp;result)
if err != nil {
    …
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented request params&lt;/h4&gt; 
&lt;p&gt;To make requests using undocumented parameters, you may use either the &lt;code&gt;option.WithQuerySet()&lt;/code&gt; or the &lt;code&gt;option.WithJSONSet()&lt;/code&gt; methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;params := FooNewParams{
    ID:   &quot;id_xxxx&quot;,
    Data: FooNewParamsData{
        FirstName: openai.String(&quot;John&quot;),
    },
}
client.Foo.New(context.Background(), params, option.WithJSONSet(&quot;data.last_name&quot;, &quot;Doe&quot;))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented response properties&lt;/h4&gt; 
&lt;p&gt;To access undocumented response properties, you may either access the raw JSON of the response as a string with &lt;code&gt;result.JSON.RawJSON()&lt;/code&gt;, or get the raw JSON of a particular field on the result with &lt;code&gt;result.JSON.Foo.Raw()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Any fields that are not present on the response struct will be saved and can be accessed by &lt;code&gt;result.JSON.ExtraFields()&lt;/code&gt; which returns the extra fields as a &lt;code&gt;map[string]Field&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Middleware&lt;/h3&gt; 
&lt;p&gt;We provide &lt;code&gt;option.WithMiddleware&lt;/code&gt; which applies the given middleware to requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;func Logger(req *http.Request, next option.MiddlewareNext) (res *http.Response, err error) {
	// Before the request
	start := time.Now()
	LogReq(req)

	// Forward the request to the next handler
	res, err = next(req)

	// Handle stuff after the request
	end := time.Now()
	LogRes(res, err, start - end)

    return res, err
}

client := openai.NewClient(
	option.WithMiddleware(Logger),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When multiple middlewares are provided as variadic arguments, the middlewares are applied left to right. If &lt;code&gt;option.WithMiddleware&lt;/code&gt; is given multiple times, for example first in the client then the method, the middleware in the client will run first and the middleware given in the method will run next.&lt;/p&gt; 
&lt;p&gt;You may also replace the default &lt;code&gt;http.Client&lt;/code&gt; with &lt;code&gt;option.WithHTTPClient(client)&lt;/code&gt;. Only one http client is accepted (this overwrites any previous client) and receives requests after any middleware has been applied.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with [Azure OpenAI]&lt;a href=&quot;https://learn.microsoft.com/azure/ai-services/openai/overview&quot;&gt;https://learn.microsoft.com/azure/ai-services/openai/overview&lt;/a&gt;), use the option.RequestOption functions in the &lt;code&gt;azure&lt;/code&gt; package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;package main

import (
	&quot;github.com/Azure/azure-sdk-for-go/sdk/azidentity&quot;
	&quot;github.com/openai/openai-go/v2&quot;
	&quot;github.com/openai/openai-go/v2/azure&quot;
)

func main() {
	const azureOpenAIEndpoint = &quot;https://&amp;lt;azure-openai-resource&amp;gt;.openai.azure.com&quot;

	// The latest API versions, including previews, can be found here:
	// ttps://learn.microsoft.com/en-us/azure/ai-services/openai/reference#rest-api-versionng
	const azureOpenAIAPIVersion = &quot;2024-06-01&quot;

	tokenCredential, err := azidentity.NewDefaultAzureCredential(nil)

	if err != nil {
		fmt.Printf(&quot;Failed to create the DefaultAzureCredential: %s&quot;, err)
		os.Exit(1)
	}

	client := openai.NewClient(
		azure.WithEndpoint(azureOpenAIEndpoint, azureOpenAIAPIVersion),

		// Choose between authenticating using a TokenCredential or an API Key
		azure.WithTokenCredential(tokenCredential),
		// or azure.WithAPIKey(azureOpenAIAPIKey),
	)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href=&quot;https://www.github.com/openai/openai-go/issues&quot;&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-go/main/CONTRIBUTING.md&quot;&gt;the contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
