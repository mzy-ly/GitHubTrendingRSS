<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C Weekly Trending</title>
    <description>Weekly Trending of C in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:41:24 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>hashcat/hashcat</title>
      <link>https://github.com/hashcat/hashcat</link>
      <description>&lt;p&gt;World&#39;s fastest and most advanced password recovery utility&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;em&gt;hashcat&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;hashcat&lt;/strong&gt; is the world&#39;s fastest and most advanced password recovery utility, supporting five unique modes of attack for over 300 highly-optimized hashing algorithms. hashcat currently supports CPUs, GPUs, and other hardware accelerators on Linux, Windows, and macOS, and has facilities to help enable distributed password cracking.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;hashcat&lt;/strong&gt; is licensed under the MIT license. Refer to &lt;a href=&quot;https://raw.githubusercontent.com/hashcat/hashcat/master/docs/license.txt&quot;&gt;docs/license.txt&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href=&quot;https://hashcat.net/hashcat/&quot;&gt;latest release&lt;/a&gt; and unpack it in the desired location. Please remember to use &lt;code&gt;7z x&lt;/code&gt; when unpacking the archive from the command line to ensure full file paths remain intact.&lt;/p&gt; 
&lt;h3&gt;Usage/Help&lt;/h3&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://hashcat.net/wiki/&quot;&gt;Hashcat Wiki&lt;/a&gt; and the output of &lt;code&gt;--help&lt;/code&gt; for usage information and general help. A list of frequently asked questions may also be found &lt;a href=&quot;https://hashcat.net/wiki/doku.php?id=frequently_asked_questions&quot;&gt;here&lt;/a&gt;. The &lt;a href=&quot;https://hashcat.net/forum/&quot;&gt;Hashcat Forum&lt;/a&gt; also contains a plethora of information. If you still think you need help by a real human come to &lt;a href=&quot;https://discord.gg/HFS523HGBT&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://raw.githubusercontent.com/hashcat/hashcat/master/BUILD.md&quot;&gt;BUILD.md&lt;/a&gt; for instructions on how to build &lt;strong&gt;hashcat&lt;/strong&gt; from source.&lt;/p&gt; 
&lt;p&gt;Tests:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Travis&lt;/th&gt; 
   &lt;th&gt;Coverity&lt;/th&gt; 
   &lt;th&gt;GitHub Actions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://travis-ci.org/hashcat/hashcat&quot;&gt;&lt;img src=&quot;https://travis-ci.org/hashcat/hashcat.svg?branch=master&quot; alt=&quot;Hashcat Travis Build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://scan.coverity.com/projects/hashcat&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/11753/badge.svg?sanitize=true&quot; alt=&quot;Coverity Scan Build Status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hashcat/hashcat/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/hashcat/hashcat/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Hashcat GitHub Actions Build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome and encouraged, provided your code is of sufficient quality. Before submitting a pull request, please ensure your code adheres to the following requirements:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Licensed under MIT license, or dedicated to the public domain (BSD, GPL, etc. code is incompatible)&lt;/li&gt; 
 &lt;li&gt;Adheres to gnu99 standard&lt;/li&gt; 
 &lt;li&gt;Compiles cleanly with no warnings when compiled with &lt;code&gt;-W -Wall -std=gnu99&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style#Allman_style&quot;&gt;Allman-style&lt;/a&gt; code blocks &amp;amp; indentation&lt;/li&gt; 
 &lt;li&gt;Uses 2-spaces as the indentation or a tab if it&#39;s required (for example: Makefiles)&lt;/li&gt; 
 &lt;li&gt;Uses lower-case function and variable names&lt;/li&gt; 
 &lt;li&gt;Avoids the use of &lt;code&gt;!&lt;/code&gt; and uses positive conditionals wherever possible (e.g., &lt;code&gt;if (foo == 0)&lt;/code&gt; instead of &lt;code&gt;if (!foo)&lt;/code&gt;, and &lt;code&gt;if (foo)&lt;/code&gt; instead of &lt;code&gt;if (foo != 0)&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Use code like array[index + 0] if you also need to do array[index + 1], to keep it aligned&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can use GNU Indent to help assist you with the style requirements:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;indent -st -bad -bap -sc -bl -bli0 -ncdw -nce -cli0 -cbi0 -pcs -cs -npsl -bs -nbc -bls -blf -lp -i2 -ts2 -nut -l1024 -nbbo -fca -lc1024 -fc1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your pull request should fully describe the functionality you are adding/removing or the problem you are solving. Regardless of whether your patch modifies one line or one thousand lines, you must describe what has prompted and/or motivated the change.&lt;/p&gt; 
&lt;p&gt;Solve only one problem in each pull request. If you&#39;re fixing a bug and adding a new feature, you need to make two separate pull requests. If you&#39;re fixing three bugs, you need to make three separate pull requests. If you&#39;re adding four new features, you need to make four separate pull requests. So on, and so forth.&lt;/p&gt; 
&lt;p&gt;If your patch fixes a bug, please be sure there is an &lt;a href=&quot;https://github.com/hashcat/hashcat/issues&quot;&gt;issue&lt;/a&gt; open for the bug before submitting a pull request. If your patch aims to improve performance or optimize an algorithm, be sure to quantify your optimizations and document the trade-offs, and back up your claims with benchmarks and metrics.&lt;/p&gt; 
&lt;p&gt;In order to maintain the quality and integrity of the &lt;strong&gt;hashcat&lt;/strong&gt; source tree, all pull requests must be reviewed and signed off by at least two &lt;a href=&quot;https://github.com/orgs/hashcat/people&quot;&gt;board members&lt;/a&gt; before being merged. The &lt;a href=&quot;https://github.com/jsteube&quot;&gt;project lead&lt;/a&gt; has the ultimate authority in deciding whether to accept or reject a pull request. Do not be discouraged if your pull request is rejected!&lt;/p&gt; 
&lt;h3&gt;Happy Cracking!&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>NVIDIA/cuda-samples</title>
      <link>https://github.com/NVIDIA/cuda-samples</link>
      <description>&lt;p&gt;Samples for CUDA Developers which demonstrates features in CUDA Toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CUDA Samples&lt;/h1&gt; 
&lt;p&gt;Samples for CUDA Developers which demonstrates features in CUDA Toolkit. This version supports &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;CUDA Toolkit 13.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release Notes&lt;/h2&gt; 
&lt;p&gt;This section describes the release notes for the CUDA Samples on GitHub only.&lt;/p&gt; 
&lt;h3&gt;Change Log&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/CHANGELOG.md&quot;&gt;Revision History&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Download and install the &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;CUDA Toolkit&lt;/a&gt; for your corresponding platform. For system requirements and installation instructions of cuda toolkit, please refer to the &lt;a href=&quot;http://docs.nvidia.com/cuda/cuda-installation-guide-linux/&quot;&gt;Linux Installation Guide&lt;/a&gt;, and the &lt;a href=&quot;http://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html&quot;&gt;Windows Installation Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Getting the CUDA Samples&lt;/h3&gt; 
&lt;p&gt;Using git clone the repository of CUDA Samples using the command below.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/NVIDIA/cuda-samples.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Without using git the easiest way to use these samples is to download the zip file containing the current version by clicking the &quot;Download ZIP&quot; button on the repo page. You can then unzip the entire archive and use the samples.&lt;/p&gt; 
&lt;h2&gt;Building CUDA Samples&lt;/h2&gt; 
&lt;h3&gt;Building CUDA Samples&lt;/h3&gt; 
&lt;p&gt;The CUDA Samples are built using CMake. Follow the instructions below for building on Linux, Windows, and for cross-compilation to Tegra devices.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;Ensure that CMake (version 3.20 or later) is installed. Install it using your package manager if necessary:&lt;/p&gt; 
&lt;p&gt;e.g. &lt;code&gt;sudo apt install cmake&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Navigate to the root of the cloned repository and create a build directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configure the project with CMake:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake ..
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the samples:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the samples from their respective directories in the build folder. You can also follow this process from and subdirectory of the samples repo, or from within any individual sample.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Language services for CMake are available in Visual Studio 2019 version 16.5 or later, and you can directly import the CUDA samples repository from either the root level or from any subdirectory or individual sample.&lt;/p&gt; 
&lt;p&gt;To build from the command line, open the &lt;code&gt;x64 Native Tools Command Prompt for VS&lt;/code&gt; provided with your Visual Studio installation.&lt;/p&gt; 
&lt;p&gt;Navigate to the root of the cloned repository and create a build directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configure the project with CMake - for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake .. -G &quot;Visual Studio 16 2019&quot; -A x64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the generated solution file CUDA_Samples.sln in Visual Studio. Build the samples by selecting the desired configuration (e.g., Debug or Release) and pressing F7 (Build Solution).&lt;/p&gt; 
&lt;p&gt;Run the samples from the output directories specified in Visual Studio.&lt;/p&gt; 
&lt;h3&gt;Enabling On-GPU Debugging&lt;/h3&gt; 
&lt;p&gt;NVIDIA GPUs support on-GPU debugging through cuda-gdb. Enabling this may significantly affect application performance as certain compiler optimizations are disabled in this configuration, hence it&#39;s not on by default. Enablement of on-device debugging is controlled via the &lt;code&gt;-G&lt;/code&gt; switch to nvcc.&lt;/p&gt; 
&lt;p&gt;To enable cuda-gdb for samples builds, define the &lt;code&gt;ENABLE_CUDA_DEBUG&lt;/code&gt; flag on the CMake command line. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake -DENABLE_CUDA_DEBUG=True ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Platform-Specific Samples&lt;/h3&gt; 
&lt;p&gt;Some CUDA samples are specific to certain platforms, and require passing flags into CMake to enable. In particular, we define the following platform-specific flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;BUILD_TEGRA&lt;/code&gt; - for Tegra-specific samples&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To build these samples, set the variables either on the command line or through your CMake GUI. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake -DBUILD_TEGRA=True ..
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cross-Compilation for Tegra Platforms&lt;/h3&gt; 
&lt;p&gt;Install the NVIDIA toolchain and cross-compilation environment for Tegra devices as described in the Tegra Development Guide.&lt;/p&gt; 
&lt;p&gt;Ensure that CMake (version 3.20 or later) is installed.&lt;/p&gt; 
&lt;p&gt;Navigate to the root of the cloned repository and create a build directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configure the project with CMake, specifying the Tegra toolchain file. And you can use -DTARGET_FS to point to the target file system root path for necessary include and library files:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/toolchain-aarch64-linux.cmake -DTARGET_FS=/path/to/target/system/file/system
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the samples:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Transfer the built binaries to the Tegra device and execute them there.&lt;/p&gt; 
&lt;h3&gt;Cross Building for Automotive Linux Platforms from the DriveOS Docker containers&lt;/h3&gt; 
&lt;p&gt;To build CUDA samples to the target platform from the DriveOS Docker containers, use the following instructions.&lt;/p&gt; 
&lt;p&gt;Mount the target Root Filesystem (RFS) in the container so that the CUDA cmake process has the correct paths to CUDA and other system libraries required to build the samples.&lt;/p&gt; 
&lt;p&gt;Create a temporary directory, &lt;code&gt;&amp;lt;temp&amp;gt;&lt;/code&gt; is any temporary directory of your choosing, for example, you can use &lt;code&gt;/drive/temp&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ mkdir /drive/&amp;lt;temp&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mount the filesystem by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ mount /drive/drive-linux/filesystem/targetfs-images/dev_nsr_desktop_ubuntu-24.04_thor_rfs.img /drive/temp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configure the project by running the following cmake command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ mkdir build &amp;amp;&amp;amp; cd build
$ cmake .. -DBUILD_TEGRA=True \
  -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc \
  -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/toolchain-aarch64-linux.cmake \
  -DTARGET_FS=/drive/temp \
  -DCMAKE_LIBRARY_PATH=/drive/temp/usr/local/cuda-13.0/thor/lib64/ \
  -DCMAKE_INCLUDE_PATH=/drive/temp/usr/local/cuda-13.0/thor/include/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that the following libraries are not pre-installed in the DriveOS dev-nsr target filesystem:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;libdrm-dev&lt;/li&gt; 
 &lt;li&gt;Vulkan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This causes the cmake command to throw errors related to the missing files, and as a result, the related samples will not build in later steps. This issue will be addressed in a future DriveOS release.&lt;/p&gt; 
&lt;p&gt;To build the samples with ignore the error mentioned above, you can use &lt;code&gt;--ignore-errors&lt;/code&gt;/&lt;code&gt;--keep-going&lt;/code&gt; or comment out the comment out the corresponding &lt;code&gt;add_subdirectory&lt;/code&gt; command in the CMakeLists.txt in the parent folder for the samples requiring Vulkan and libdrm_dev:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ make -j$(nproc) --ignore-errors # or --keep-going
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;# In Samples/5_Domain_Specific/CMakeList.txt
# add_subdirectory(simpleGL)
# add_subdirectory(simpleVulkan)
# add_subdirectory(simpleVulkanMMAP)

# In Samples/8_Platform_Specific/Tegra/CMakeList.txt
# add_subdirectory(simpleGLES_EGLOutput)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;QNX&lt;/h3&gt; 
&lt;p&gt;Cross-compilation for QNX with CMake is supported in the CUDA 13.0 samples release and newer. An example build for the Tegra Thor QNX platform might look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ mkdir build
$ cd build

QNX_HOST=/path/to/qnx/host \
QNX_TARGET=/path/to/qnx/target \
cmake .. \
-DBUILD_TEGRA=True \
-DCMAKE_CUDA_COMPILER=/usr/local/cuda-safe-13.0/bin/nvcc \
-DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/toolchain-aarch64-qnx.cmake \
-DCMAKE_LIBRARY_PATH=/usr/local/cuda-safe-13.0/thor/targets/aarch64-qnx/lib/stubs/ \
-DCMAKE_INCLUDE_PATH=/usr/local/cuda-safe-13.0/thor/targets/aarch64-qnx/include/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Forward Compatibility&lt;/h3&gt; 
&lt;p&gt;To build samples with new CUDA Toolkit(CUDA 13.0 or later) and UMD(Version 580 or later) and old KMD(Version 550 or earlier)，you need to set the &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; for using new driver library, the command might like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_PREFIX_PATH=/usr/local/cuda/lib64/stubs/ ..
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running All Samples as Tests&lt;/h2&gt; 
&lt;p&gt;It&#39;s important to note that the CUDA samples are &lt;em&gt;not&lt;/em&gt; intended as a validation suite for CUDA. They do not cover corner cases, they do not completely cover the runtime and driver APIs, are not intended for performance benchmarking, etc. That said, it can sometimes be useful to run all of the samples as a quick sanity check and we provide a script to do so, &lt;code&gt;run_tests.py&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This Python3 script finds all executables in a subdirectory you choose, matching application names with command line arguments specified in &lt;code&gt;test_args.json&lt;/code&gt;. It accepts the following command line arguments:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Switch&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--dir&lt;/td&gt; 
   &lt;td&gt;Specify the root directory to search for executables (recursively)&lt;/td&gt; 
   &lt;td&gt;--dir ./build/Samples&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--config&lt;/td&gt; 
   &lt;td&gt;JSON configuration file for executable arguments&lt;/td&gt; 
   &lt;td&gt;--config test_args.json&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--output&lt;/td&gt; 
   &lt;td&gt;Output directory for test results (stdout saved to .txt files - directory will be created if it doesn&#39;t exist)&lt;/td&gt; 
   &lt;td&gt;--output ./test&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--args&lt;/td&gt; 
   &lt;td&gt;Global arguments to pass to all executables (not currently used)&lt;/td&gt; 
   &lt;td&gt;--args arg_1 arg_2 ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--parallel&lt;/td&gt; 
   &lt;td&gt;Number of applications to execute in parallel.&lt;/td&gt; 
   &lt;td&gt;--parallel 8&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Application configurations are loaded from &lt;code&gt;test_args.json&lt;/code&gt; and matched against executable names (discarding the &lt;code&gt;.exe&lt;/code&gt; extension on Windows).&lt;/p&gt; 
&lt;p&gt;The script returns 0 on success, or the first non-zero error code encountered during testing on failure. It will also print a condensed list of samples that failed, if any.&lt;/p&gt; 
&lt;p&gt;There are three primary modes of configuration:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Skip&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;An executable configured with &quot;skip&quot; will not be executed. These generally rely on having attached graphical displays and are not suited to this kind of automation.&lt;/p&gt; 
&lt;p&gt;Configuration example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;fluidsGL&quot;: {
    &quot;skip&quot;: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will see:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Skipping fluidsGL (marked as skip in config)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Single Run&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For executables to run one time only with arguments, specify each argument as a list entry. Each entry in the JSON file will be appended to the command line, separated by a space.&lt;/p&gt; 
&lt;p&gt;All applications execute from their current directory, so all paths are relative to the application&#39;s location.&lt;/p&gt; 
&lt;p&gt;Note that if an application needs no arguments, this entry is optional. An executable found without a matching entry in the JSON will just run as &lt;code&gt;./application&lt;/code&gt; from its current directory.&lt;/p&gt; 
&lt;p&gt;Configuration example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;ptxgen&quot;: {
    &quot;args&quot;: [
        &quot;test.ll&quot;,
        &quot;-arch=compute_75&quot;
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will see:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Running ptxgen
    Command: ./ptxgen test.ll -arch=compute_75
    Test completed with return code 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Multiple Runs&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For executables to run multiple times with different command line arguments, specify any number of sets of args within a &quot;runs&quot; list.&lt;/p&gt; 
&lt;p&gt;As with single runs, all applications execute from their current directory, so all paths are relative to the application&#39;s location.&lt;/p&gt; 
&lt;p&gt;Configuration example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&quot;recursiveGaussian&quot;: {
    &quot;runs&quot;: [
        {
            &quot;args&quot;: [
                &quot;-sigma=10&quot;,
                &quot;-file=data/ref_10.ppm&quot;
            ]
        },
        {
            &quot;args&quot;: [
                &quot;-sigma=14&quot;,
                &quot;-file=data/ref_14.ppm&quot;
            ]
        },
        {
            &quot;args&quot;: [
                &quot;-sigma=18&quot;,
                &quot;-file=data/ref_18.ppm&quot;
            ]
        },
        {
            &quot;args&quot;: [
                &quot;-sigma=22&quot;,
                &quot;-file=data/ref_22.ppm&quot;
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will see:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Running recursiveGaussian (run 1/4)
    Command: ./recursiveGaussian -sigma=10 -file=data/ref_10.ppm
    Test completed with return code 0
Running recursiveGaussian (run 2/4)
    Command: ./recursiveGaussian -sigma=14 -file=data/ref_14.ppm
    Test completed with return code 0
Running recursiveGaussian (run 3/4)
    Command: ./recursiveGaussian -sigma=18 -file=data/ref_18.ppm
    Test completed with return code 0
Running recursiveGaussian (run 4/4)
    Command: ./recursiveGaussian -sigma=22 -file=data/ref_22.ppm
    Test completed with return code 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;p&gt;Here is an example set of commands to build and test all of the samples.&lt;/p&gt; 
&lt;p&gt;First, build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir build
cd build
cmake ..
make -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, return to the samples root directory and run the test script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ..
python3 run_tests.py --output ./test --dir ./build/Samples --config test_args.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If all applications run successfully, you will see something similar to this (the specific number of samples will depend on your build type and system configuration):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Test Summary:
Ran 199 test runs for 180 executables.
All test runs passed!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If some samples fail, you will see something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Test Summary:
Ran 199 test runs for 180 executables.
Failed runs (2):
  bicubicTexture (run 1/5): Failed (code 1)
  Mandelbrot (run 1/2): Failed (code 1)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can inspect the stdout logs in the output directory (generally &lt;code&gt;APM_&amp;lt;application_name&amp;gt;.txt&lt;/code&gt; or &lt;code&gt;APM_&amp;lt;application_name&amp;gt;.run&amp;lt;n&amp;gt;.txt&lt;/code&gt;) to help determine what may have gone wrong from the output logs. Please file issues against the samples repository if you believe a sample is failing incorrectly on your system.&lt;/p&gt; 
&lt;h2&gt;Samples list&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/0_Introduction/README.md&quot;&gt;0. Introduction&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Basic CUDA samples for beginners that illustrate key concepts with using CUDA and CUDA runtime APIs.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/1_Utilities/README.md&quot;&gt;1. Utilities&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Utility samples that demonstrate how to query device capabilities and measure GPU/CPU bandwidth.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/2_Concepts_and_Techniques/README.md&quot;&gt;2. Concepts and Techniques&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Samples that demonstrate CUDA related concepts and common problem solving techniques.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/3_CUDA_Features/README.md&quot;&gt;3. CUDA Features&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Samples that demonstrate CUDA Features (Cooperative Groups, CUDA Dynamic Parallelism, CUDA Graphs etc).&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/4_CUDA_Libraries/README.md&quot;&gt;4. CUDA Libraries&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Samples that demonstrate how to use CUDA platform libraries (NPP, NVJPEG, NVGRAPH cuBLAS, cuFFT, cuSPARSE, cuSOLVER and cuRAND).&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/5_Domain_Specific/README.md&quot;&gt;5. Domain Specific&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Samples that are specific to domain (Graphics, Finance, Image Processing).&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/6_Performance/README.md&quot;&gt;6. Performance&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Samples that demonstrate performance optimization.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/cuda-samples/master/Samples/7_libNVVM/README.md&quot;&gt;7. libNVVM&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Samples that demonstrate the use of libNVVVM and NVVM IR.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Some CUDA Samples rely on third-party applications and/or libraries, or features provided by the CUDA Toolkit and Driver, to either build or execute. These dependencies are listed below.&lt;/p&gt; 
&lt;p&gt;If a sample has a third-party dependency that is available on the system, but is not installed, the sample will waive itself at build time.&lt;/p&gt; 
&lt;p&gt;Each sample&#39;s dependencies are listed in its README&#39;s Dependencies section.&lt;/p&gt; 
&lt;h3&gt;Third-Party Dependencies&lt;/h3&gt; 
&lt;p&gt;These third-party dependencies are required by some CUDA samples. If available, these dependencies are either installed on your system automatically, or are installable via your system&#39;s package manager (Linux) or a third-party website.&lt;/p&gt; 
&lt;h4&gt;FreeImage&lt;/h4&gt; 
&lt;p&gt;FreeImage is an open source imaging library. FreeImage can usually be installed on Linux using your distribution&#39;s package manager system. FreeImage can also be downloaded from the FreeImage website.&lt;/p&gt; 
&lt;p&gt;To set up FreeImage on a Windows system, extract the FreeImage DLL distribution into the folder &lt;code&gt;./Common/FreeImage/Dist/x64&lt;/code&gt; such that it contains the .h and .lib files. Copy the .dll file to the Release/ Debug/ execution folder or pass the FreeImage folder when cmake configuring with the &lt;code&gt;-DFreeImage_INCLUDE_DIR&lt;/code&gt; and &lt;code&gt;-DFreeImage_LIBRARY&lt;/code&gt; options.&lt;/p&gt; 
&lt;h4&gt;Message Passing Interface&lt;/h4&gt; 
&lt;p&gt;MPI (Message Passing Interface) is an API for communicating data between distributed processes. A MPI compiler can be installed using your Linux distribution&#39;s package manager system. It is also available on some online resources, such as &lt;a href=&quot;http://www.open-mpi.org/&quot;&gt;Open MPI&lt;/a&gt;. On Windows, to build and run MPI-CUDA applications one can install &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb524831(v=vs.85).aspx&quot;&gt;MS-MPI SDK&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Only 64-Bit&lt;/h4&gt; 
&lt;p&gt;Some samples can only be run on a 64-bit operating system.&lt;/p&gt; 
&lt;h4&gt;DirectX&lt;/h4&gt; 
&lt;p&gt;DirectX is a collection of APIs designed to allow development of multimedia applications on Microsoft platforms. For Microsoft platforms, NVIDIA&#39;s CUDA Driver supports DirectX. Several CUDA Samples for Windows demonstrates CUDA-DirectX Interoperability, for building such samples one needs to install Microsoft Visual Studio 2012 or higher which provides Microsoft Windows SDK for Windows 8.&lt;/p&gt; 
&lt;h4&gt;DirectX12&lt;/h4&gt; 
&lt;p&gt;DirectX 12 is a collection of advanced low-level programming APIs which can reduce driver overhead, designed to allow development of multimedia applications on Microsoft platforms starting with Windows 10 OS onwards. For Microsoft platforms, NVIDIA&#39;s CUDA Driver supports DirectX. Few CUDA Samples for Windows demonstrates CUDA-DirectX12 Interoperability, for building such samples one needs to install &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;Windows 10 SDK or higher&lt;/a&gt;, with VS 2015 or VS 2017.&lt;/p&gt; 
&lt;h4&gt;OpenGL&lt;/h4&gt; 
&lt;p&gt;OpenGL is a graphics library used for 2D and 3D rendering. On systems which support OpenGL, NVIDIA&#39;s OpenGL implementation is provided with the CUDA Driver.&lt;/p&gt; 
&lt;h4&gt;OpenGL ES&lt;/h4&gt; 
&lt;p&gt;OpenGL ES is an embedded systems graphics library used for 2D and 3D rendering. On systems which support OpenGL ES, NVIDIA&#39;s OpenGL ES implementation is provided with the CUDA Driver.&lt;/p&gt; 
&lt;h4&gt;Vulkan&lt;/h4&gt; 
&lt;p&gt;Vulkan is a low-overhead, cross-platform 3D graphics and compute API. Vulkan targets high-performance realtime 3D graphics applications such as video games and interactive media across all platforms. On systems which support Vulkan, NVIDIA&#39;s Vulkan implementation is provided with the CUDA Driver. For building and running Vulkan applications one needs to install the &lt;a href=&quot;https://www.lunarg.com/vulkan-sdk/&quot;&gt;Vulkan SDK&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;GLFW&lt;/h4&gt; 
&lt;p&gt;GLFW is a lightweight, open-source library designed for managing OpenGL, OpenGL ES, and Vulkan contexts. It simplifies the process of creating and managing windows, handling user input (keyboard, mouse, and joystick), and working with multiple monitors in a cross-platform manner.&lt;/p&gt; 
&lt;p&gt;To set up GLFW on a Windows system, Download the pre-built binaries from &lt;a href=&quot;https://www.glfw.org/download.html&quot;&gt;GLFW website&lt;/a&gt; and extract the zip file into the folder, pass the GLFW include header folder as &lt;code&gt;-DGLFW_INCLUDE_DIR&lt;/code&gt; and lib folder as &lt;code&gt;-DGLFW_LIB_DIR&lt;/code&gt; for cmake configuring.&lt;/p&gt; 
&lt;h4&gt;OpenMP&lt;/h4&gt; 
&lt;p&gt;OpenMP is an API for multiprocessing programming. OpenMP can be installed using your Linux distribution&#39;s package manager system. It usually comes preinstalled with GCC. It can also be found at the &lt;a href=&quot;http://openmp.org/&quot;&gt;OpenMP website&lt;/a&gt;. For compilers such as clang, &lt;code&gt;libomp.so&lt;/code&gt; and other components for LLVM must be installed separated. You will also need to set additional flags in your CMake configuration files, such as: &lt;code&gt;-DOpenMP_CXX_FLAGS=&quot;-fopenmp=libomp&quot; -DOpenMP_CXX_LIB_NAMES=&quot;omp&quot; -DOpenMP_omp_LIBRARY=&quot;/path/to/libomp.so&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Screen&lt;/h4&gt; 
&lt;p&gt;Screen is a windowing system found on the QNX operating system. Screen is usually found as part of the root filesystem.&lt;/p&gt; 
&lt;h4&gt;X11&lt;/h4&gt; 
&lt;p&gt;X11 is a windowing system commonly found on *-nix style operating systems. X11 can be installed using your Linux distribution&#39;s package manager, and comes preinstalled on Mac OS X systems.&lt;/p&gt; 
&lt;h4&gt;EGL&lt;/h4&gt; 
&lt;p&gt;EGL is an interface between Khronos rendering APIs (such as OpenGL, OpenGL ES or OpenVG) and the underlying native platform windowing system.&lt;/p&gt; 
&lt;h4&gt;EGLOutput&lt;/h4&gt; 
&lt;p&gt;EGLOutput is a set of EGL extensions which allow EGL to render directly to the display.&lt;/p&gt; 
&lt;h4&gt;EGLSync&lt;/h4&gt; 
&lt;p&gt;EGLSync is a set of EGL extensions which provides sync objects that are synchronization primitive, representing events whose completion can be tested or waited upon.&lt;/p&gt; 
&lt;h4&gt;NVSCI&lt;/h4&gt; 
&lt;p&gt;NvSci is a set of communication interface libraries out of which CUDA interops with NvSciBuf and NvSciSync. NvSciBuf allows applications to allocate and exchange buffers in memory. NvSciSync allows applications to manage synchronization objects which coordinate when sequences of operations begin and end.&lt;/p&gt; 
&lt;h4&gt;NvMedia&lt;/h4&gt; 
&lt;p&gt;NvMedia provides powerful processing of multimedia data for true hardware acceleration across NVIDIA Tegra devices. Applications leverage the NvMedia Application Programming Interface (API) to process the image and video data.&lt;/p&gt; 
&lt;h3&gt;CUDA Features&lt;/h3&gt; 
&lt;p&gt;These CUDA features are needed by some CUDA samples. They are provided by either the CUDA Toolkit or CUDA Driver. Some features may not be available on your system.&lt;/p&gt; 
&lt;h4&gt;CUFFT Callback Routines&lt;/h4&gt; 
&lt;p&gt;CUFFT Callback Routines are user-supplied kernel routines that CUFFT will call when loading or storing data. These callback routines are only available on Linux x86_64 and ppc64le systems.&lt;/p&gt; 
&lt;h4&gt;CUDA Dynamic Parallellism&lt;/h4&gt; 
&lt;p&gt;CDP (CUDA Dynamic Parallellism) allows kernels to be launched from threads running on the GPU. CDP is only available on GPUs with SM architecture of 3.5 or above.&lt;/p&gt; 
&lt;h4&gt;Multi-block Cooperative Groups&lt;/h4&gt; 
&lt;p&gt;Multi Block Cooperative Groups(MBCG) extends Cooperative Groups and the CUDA programming model to express inter-thread-block synchronization. MBCG is available on GPUs with Pascal and higher architecture.&lt;/p&gt; 
&lt;h4&gt;Multi-Device Cooperative Groups&lt;/h4&gt; 
&lt;p&gt;Multi Device Cooperative Groups extends Cooperative Groups and the CUDA programming model enabling thread blocks executing on multiple GPUs to cooperate and synchronize as they execute. This feature is available on GPUs with Pascal and higher architecture.&lt;/p&gt; 
&lt;h4&gt;CUBLAS&lt;/h4&gt; 
&lt;p&gt;CUBLAS (CUDA Basic Linear Algebra Subroutines) is a GPU-accelerated version of the BLAS library.&lt;/p&gt; 
&lt;h4&gt;CUDA Interprocess Communication&lt;/h4&gt; 
&lt;p&gt;IPC (Interprocess Communication) allows processes to share device pointers.&lt;/p&gt; 
&lt;h4&gt;CUFFT&lt;/h4&gt; 
&lt;p&gt;CUFFT (CUDA Fast Fourier Transform) is a GPU-accelerated FFT library.&lt;/p&gt; 
&lt;h4&gt;CURAND&lt;/h4&gt; 
&lt;p&gt;CURAND (CUDA Random Number Generation) is a GPU-accelerated RNG library.&lt;/p&gt; 
&lt;h4&gt;CUSPARSE&lt;/h4&gt; 
&lt;p&gt;CUSPARSE (CUDA Sparse Matrix) provides linear algebra subroutines used for sparse matrix calculations.&lt;/p&gt; 
&lt;h4&gt;CUSOLVER&lt;/h4&gt; 
&lt;p&gt;CUSOLVER library is a high-level package based on the CUBLAS and CUSPARSE libraries. It combines three separate libraries under a single umbrella, each of which can be used independently or in concert with other toolkit libraries. The intent ofCUSOLVER is to provide useful LAPACK-like features, such as common matrix factorization and triangular solve routines for dense matrices, a sparse least-squares solver and an eigenvalue solver. In addition cuSolver provides a new refactorization library useful for solving sequences of matrices with a shared sparsity pattern.&lt;/p&gt; 
&lt;h4&gt;NPP&lt;/h4&gt; 
&lt;p&gt;NPP (NVIDIA Performance Primitives) provides GPU-accelerated image, video, and signal processing functions.&lt;/p&gt; 
&lt;h4&gt;NVGRAPH&lt;/h4&gt; 
&lt;p&gt;NVGRAPH is a GPU-accelerated graph analytics library.&lt;/p&gt; 
&lt;h4&gt;NVJPEG&lt;/h4&gt; 
&lt;p&gt;NVJPEG library provides high-performance, GPU accelerated JPEG decoding functionality for image formats commonly used in deep learning and hyperscale multimedia applications.&lt;/p&gt; 
&lt;h4&gt;NVRTC&lt;/h4&gt; 
&lt;p&gt;NVRTC (CUDA RunTime Compilation) is a runtime compilation library for CUDA C++.&lt;/p&gt; 
&lt;h4&gt;Stream Priorities&lt;/h4&gt; 
&lt;p&gt;Stream Priorities allows the creation of streams with specified priorities. Stream Priorities is only available on GPUs with SM architecture of 3.5 or above.&lt;/p&gt; 
&lt;h4&gt;Unified Virtual Memory&lt;/h4&gt; 
&lt;p&gt;UVM (Unified Virtual Memory) enables memory that can be accessed by both the CPU and GPU without explicit copying between the two. UVM is only available on Linux and Windows systems.&lt;/p&gt; 
&lt;h4&gt;16-bit Floating Point&lt;/h4&gt; 
&lt;p&gt;FP16 is a 16-bit floating-point format. One bit is used for the sign, five bits for the exponent, and ten bits for the mantissa.&lt;/p&gt; 
&lt;h4&gt;C++11 CUDA&lt;/h4&gt; 
&lt;p&gt;NVCC support of &lt;a href=&quot;https://en.wikipedia.org/wiki/C++11&quot;&gt;C++11 features&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;CMake&lt;/h4&gt; 
&lt;p&gt;The libNVVM samples are built using &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt; 3.10 or later.&lt;/p&gt; 
&lt;h2&gt;Contributors Guide&lt;/h2&gt; 
&lt;p&gt;We welcome your input on issues and suggestions for samples. At this time we are not accepting contributions from the public, check back here as we evolve our contribution model.&lt;/p&gt; 
&lt;p&gt;We use Google C++ Style Guide for all the sources &lt;a href=&quot;https://google.github.io/styleguide/cppguide.html&quot;&gt;https://google.github.io/styleguide/cppguide.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Answers to frequently asked questions about CUDA can be found at &lt;a href=&quot;http://developer.nvidia.com/cuda-faq&quot;&gt;http://developer.nvidia.com/cuda-faq&lt;/a&gt; and in the &lt;a href=&quot;http://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html&quot;&gt;CUDA Toolkit Release Notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html&quot;&gt;CUDA Programming Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.nvidia.com/blog/?tags=accelerated-computing&quot;&gt;Accelerated Computing Blog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Attributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Teapot image is obtained from &lt;a href=&quot;https://en.wikipedia.org/wiki/File:Original_Utah_Teapot.jpg&quot;&gt;Wikimedia&lt;/a&gt; and is licensed under the Creative Commons &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/2.0/deed.en&quot;&gt;Attribution-Share Alike 2.0&lt;/a&gt; Generic license. The image is modified for samples use cases.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>openssl/openssl</title>
      <link>https://github.com/openssl/openssl</link>
      <description>&lt;p&gt;TLS/SSL and crypto library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the OpenSSL Project&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.openssl.org&quot; title=&quot;OpenSSL Homepage&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openssl/openssl/master/doc/images/openssl.svg?sanitize=true&quot; alt=&quot;openssl logo&quot; title=&quot;OpenSSL Logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/openssl/openssl/actions/workflows/ci.yml&quot; title=&quot;GitHub Actions CI&quot;&gt;&lt;img src=&quot;https://github.com/openssl/openssl/workflows/GitHub%20CI/badge.svg?sanitize=true&quot; alt=&quot;github actions ci badge&quot; title=&quot;GitHub Actions CI Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openssl/openssl/actions/workflows/os-zoo.yml&quot;&gt;&lt;img src=&quot;https://github.com/openssl/openssl/actions/workflows/os-zoo.yml/badge.svg?sanitize=true&quot; alt=&quot;Nightly OS Zoo ci badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openssl/openssl/actions/workflows/provider-compatibility.yml&quot;&gt;&lt;img src=&quot;https://github.com/openssl/openssl/actions/workflows/provider-compatibility.yml/badge.svg?sanitize=true&quot; alt=&quot;Provider Compatibility&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openssl/openssl/actions/workflows/run_quic_interop.yml&quot;&gt;&lt;img src=&quot;https://github.com/openssl/openssl/actions/workflows/run_quic_interop.yml/badge.svg?sanitize=true&quot; alt=&quot;Quic Interop&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openssl/openssl/actions/workflows/run-checker-daily.yml&quot;&gt;&lt;img src=&quot;https://github.com/openssl/openssl/actions/workflows/run-checker-daily.yml/badge.svg?sanitize=true&quot; alt=&quot;Daily checks&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;OpenSSL is a robust, commercial-grade, full-featured Open Source Toolkit for the TLS (formerly SSL), DTLS and QUIC protocols.&lt;/p&gt; 
&lt;p&gt;The protocol implementations are based on a full-strength general purpose cryptographic library, which can also be used stand-alone. Also included is a cryptographic module validated to conform with FIPS standards.&lt;/p&gt; 
&lt;p&gt;OpenSSL is descended from the SSLeay library developed by Eric A. Young and Tim J. Hudson.&lt;/p&gt; 
&lt;p&gt;The official Home Page of the OpenSSL Project is &lt;a href=&quot;https://www.openssl.org&quot; title=&quot;OpenSSL Homepage&quot;&gt;www.openssl.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#overview&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#download&quot;&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#build-and-install&quot;&gt;Build and Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#legalities&quot;&gt;Legalities&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;The OpenSSL toolkit includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;libssl&lt;/strong&gt; an implementation of all TLS protocol versions up to TLSv1.3 (&lt;a href=&quot;https://tools.ietf.org/html/rfc8446&quot;&gt;RFC 8446&lt;/a&gt;), DTLS protocol versions up to DTLSv1.2 (&lt;a href=&quot;https://tools.ietf.org/html/rfc6347&quot;&gt;RFC 6347&lt;/a&gt;) and the QUIC version 1 protocol (&lt;a href=&quot;https://tools.ietf.org/html/rfc9000&quot;&gt;RFC 9000&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;libcrypto&lt;/strong&gt; a full-strength general purpose cryptographic library. It constitutes the basis of the TLS implementation, but can also be used independently.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;openssl&lt;/strong&gt; the OpenSSL command line tool, a swiss army knife for cryptographic tasks, testing and analyzing. It can be used for&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;creation of key parameters&lt;/li&gt; 
   &lt;li&gt;creation of X.509 certificates, CSRs and CRLs&lt;/li&gt; 
   &lt;li&gt;calculation of message digests&lt;/li&gt; 
   &lt;li&gt;encryption and decryption&lt;/li&gt; 
   &lt;li&gt;SSL/TLS/DTLS and client and server tests&lt;/li&gt; 
   &lt;li&gt;QUIC client tests&lt;/li&gt; 
   &lt;li&gt;handling of S/MIME signed or encrypted mail&lt;/li&gt; 
   &lt;li&gt;and more...&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Download&lt;/h1&gt; 
&lt;h2&gt;For Production Use&lt;/h2&gt; 
&lt;p&gt;Source code tarballs of the official releases can be downloaded from &lt;a href=&quot;https://openssl-library.org/source/&quot;&gt;openssl-library.org/source/&lt;/a&gt;. The OpenSSL project does not distribute the toolkit in binary form.&lt;/p&gt; 
&lt;p&gt;However, for a large variety of operating systems precompiled versions of the OpenSSL toolkit are available. In particular, on Linux and other Unix operating systems, it is normally recommended to link against the precompiled shared libraries provided by the distributor or vendor.&lt;/p&gt; 
&lt;p&gt;We also maintain a list of third parties that produce OpenSSL binaries for various Operating Systems (including Windows) on the &lt;a href=&quot;https://github.com/openssl/openssl/wiki/Binaries&quot; title=&quot;List of third party OpenSSL binaries&quot;&gt;Binaries&lt;/a&gt; page on our wiki.&lt;/p&gt; 
&lt;h2&gt;For Testing and Development&lt;/h2&gt; 
&lt;p&gt;Although testing and development could in theory also be done using the source tarballs, having a local copy of the git repository with the entire project history gives you much more insight into the code base.&lt;/p&gt; 
&lt;p&gt;The main OpenSSL Git repository is private. There is a public GitHub mirror of it at &lt;a href=&quot;https://github.com/openssl/openssl&quot; title=&quot;OpenSSL GitHub Mirror&quot;&gt;github.com/openssl/openssl&lt;/a&gt;, which is updated automatically from the former on every commit.&lt;/p&gt; 
&lt;p&gt;A local copy of the Git repository can be obtained by cloning it from the GitHub mirror using&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/openssl/openssl.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you intend to contribute to OpenSSL, either to fix bugs or contribute new features, you need to fork the GitHub mirror and clone your public fork instead.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/yourname/openssl.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is necessary because all development of OpenSSL nowadays is done via GitHub pull requests. For more details, see &lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/#contributing&quot;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Build and Install&lt;/h1&gt; 
&lt;p&gt;After obtaining the Source, have a look at the &lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/INSTALL.md&quot;&gt;INSTALL&lt;/a&gt; file for detailed instructions about building and installing OpenSSL. For some platforms, the installation instructions are amended by a platform specific document.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-UNIX.md&quot;&gt;Notes for UNIX-like platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-ANDROID.md&quot;&gt;Notes for Android platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-WINDOWS.md&quot;&gt;Notes for Windows platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-DJGPP.md&quot;&gt;Notes for the DOS platform with DJGPP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-VMS.md&quot;&gt;Notes for the OpenVMS platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-PERL.md&quot;&gt;Notes on Perl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/NOTES-VALGRIND.md&quot;&gt;Notes on Valgrind&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Specific notes on upgrading to OpenSSL 3.x from previous versions can be found in the &lt;a href=&quot;https://docs.openssl.org/master/man7/ossl-guide-migration&quot; title=&quot;OpenSSL Migration Guide&quot;&gt;ossl-guide-migration(7ossl)&lt;/a&gt; manual page.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;h2&gt;README Files&lt;/h2&gt; 
&lt;p&gt;There are some README.md files in the top level of the source distribution containing additional information on specific topics.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/README-QUIC.md&quot;&gt;Information about the OpenSSL QUIC protocol implementation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/README-PROVIDERS.md&quot;&gt;Information about the OpenSSL Provider architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/README-FIPS.md&quot;&gt;Information about using the OpenSSL FIPS validated module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/README-ENGINES.md&quot;&gt;Information about the legacy OpenSSL Engine architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The OpenSSL Guide&lt;/h2&gt; 
&lt;p&gt;There are some tutorial and introductory pages on some important OpenSSL topics within the &lt;a href=&quot;https://docs.openssl.org/master/man7/ossl-guide-introduction&quot; title=&quot;An introduction to OpenSSL&quot;&gt;OpenSSL Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Manual Pages&lt;/h2&gt; 
&lt;p&gt;The manual pages for the master branch and all current stable releases are available online.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openssl.org/master/&quot;&gt;OpenSSL master&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openssl.org/3.5/&quot;&gt;OpenSSL 3.5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openssl.org/3.4/&quot;&gt;OpenSSL 3.4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openssl.org/3.3/&quot;&gt;OpenSSL 3.3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openssl.org/3.2/&quot;&gt;OpenSSL 3.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.openssl.org/3.0/&quot;&gt;OpenSSL 3.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demos&lt;/h2&gt; 
&lt;p&gt;There are numerous source code demos for using various OpenSSL capabilities in the &lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/demos&quot;&gt;demos subfolder&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Wiki&lt;/h2&gt; 
&lt;p&gt;There is a &lt;a href=&quot;https://github.com/openssl/openssl/wiki&quot; title=&quot;OpenSSL Wiki&quot;&gt;GitHub Wiki&lt;/a&gt; which is currently not very active.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;OpenSSL is licensed under the Apache License 2.0, which means that you are free to get and use it for commercial and non-commercial purposes as long as you fulfill its conditions.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; file for more details.&lt;/p&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;p&gt;There are various ways to get in touch. The correct channel depends on your requirement. See the &lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/SUPPORT.md&quot;&gt;SUPPORT&lt;/a&gt; file for more details.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;If you are interested and willing to contribute to the OpenSSL project, please take a look at the &lt;a href=&quot;https://raw.githubusercontent.com/openssl/openssl/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt; 
&lt;h1&gt;Legalities&lt;/h1&gt; 
&lt;p&gt;A number of nations restrict the use or export of cryptography. If you are potentially subject to such restrictions, you should seek legal advice before attempting to develop or distribute cryptographic code.&lt;/p&gt; 
&lt;h1&gt;Copyright&lt;/h1&gt; 
&lt;p&gt;Copyright (c) 1998-2025 The OpenSSL Project Authors&lt;/p&gt; 
&lt;p&gt;Copyright (c) 1995-1998 Eric A. Young, Tim J. Hudson&lt;/p&gt; 
&lt;p&gt;All rights reserved.&lt;/p&gt; 
&lt;!-- Links  --&gt; 
&lt;!-- Logos and Badges --&gt;</description>
    </item>
    
    <item>
      <title>TEN-framework/ten-vad</title>
      <link>https://github.com/TEN-framework/ten-vad</link>
      <description>&lt;p&gt;Voice Activity Detector(VAD) from TEN: low-latency, high-performance and lightweight&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&quot; alt=&quot;TEN VAD banner&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-vad/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ten-framework/ten-vad?color=369eff&amp;amp;labelColor=gray&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;TEN Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-vad/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/ten-framework/ten-vad?labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;Release Date&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-vad/discussions/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/discussions/TEN-framework/ten-vad?labelColor=gray&amp;amp;color=%20%23f79009&quot; alt=&quot;Discussion posts&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-vad/graphs/commit-activity&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/TEN-framework/ten-vad?labelColor=gray&amp;amp;color=pink&quot; alt=&quot;Commits&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-vad/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-search?query=repo%3ATEN-framework%2Ften-vad%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=gray&amp;amp;color=green&quot; alt=&quot;Issues closed&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/ten-framework/ten-vad?color=c4f042&amp;amp;labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-vad/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome!-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://huggingface.co/TEN-framework/ten-vad&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Hugging%20Face-TEN%20VAD-yellow?style=flat&amp;amp;logo=huggingface&quot; alt=&quot;HuggingFace TEN VAD&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-vad/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0_with_certain_conditions-blue.svg?labelColor=%20%23155EEF&amp;amp;color=%20%23528bff&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-vad&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;!-- [![ReadmeX](https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg)](https://readmex.com/TEN-framework/ten-vad) --&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/14548&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/14548&quot; alt=&quot;TEN-framework%2Ften-vad | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://GitHub.com/TEN-framework/ten-vad/watchers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/TEN-framework/ten-vad?style=social&amp;amp;label=Watch&quot; alt=&quot;GitHub watchers&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten-vad/network/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/TEN-framework/ten-vad?style=social&amp;amp;label=Fork&quot; alt=&quot;GitHub forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten-vad/stargazers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/TEN-framework/ten-vad?style=social&amp;amp;label=Star&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;Latest News 🔥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[2025/07] 🎉 Exciting news! &lt;strong&gt;TEN VAD&lt;/strong&gt; is now &lt;strong&gt;integrated&lt;/strong&gt; into &lt;a href=&quot;https://github.com/k2-fsa/sherpa-onnx&quot;&gt;&lt;strong&gt;k2-fsa/sherpa-onnx&lt;/strong&gt;&lt;/a&gt;, thanks to the fantastic work by &lt;a href=&quot;https://github.com/csukuangfj&quot;&gt;Fangjun Kuang&lt;/a&gt;! You can now achieve more precise speech segment extraction and enjoy an enhanced ASR experience! Refer to the &lt;a href=&quot;https://k2-fsa.github.io/sherpa/onnx/vad/ten-vad.html#&quot;&gt;documentation&lt;/a&gt; and give it a try!&lt;/li&gt; 
 &lt;li&gt;[2025/07] We supported &lt;strong&gt;Python inference&lt;/strong&gt; on &lt;strong&gt;macOS&lt;/strong&gt; and &lt;strong&gt;Windows&lt;/strong&gt; with usage of the prebuilt-lib!&lt;/li&gt; 
 &lt;li&gt;[2025/06] We &lt;strong&gt;finally&lt;/strong&gt; released and &lt;strong&gt;open-sourced&lt;/strong&gt; the &lt;strong&gt;ONNX&lt;/strong&gt; model and the corresponding &lt;strong&gt;preprocessing code&lt;/strong&gt;! Now you can deploy &lt;strong&gt;TEN VAD&lt;/strong&gt; on &lt;strong&gt;any platform&lt;/strong&gt; and &lt;strong&gt;any hardware architecture&lt;/strong&gt;!&lt;/li&gt; 
 &lt;li&gt;[2025/06] We are excited to announce the release of &lt;strong&gt;WASM+JS&lt;/strong&gt; for Web WASM Support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#welcome-to-ten&quot;&gt;Welcome to TEN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ten-hugging-face-space&quot;&gt;TEN Hugging Face Space&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#key-features&quot;&gt;Key Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-high-performance&quot;&gt;High-Performance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#2-agent-friendly&quot;&gt;Agent-Friendly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#3-lightweight&quot;&gt;Lightweight&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#4-multiple-programming-languages-and-platforms&quot;&gt;Multiple Programming Languages and Platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#5-supproted-sampling-rate-and-hop-size&quot;&gt;Supported Sampling Rate and Hop Size&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#quick-start&quot;&gt;Quick Start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#python-usage&quot;&gt;Python Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-linux&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#js-usage&quot;&gt;JS Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-web&quot;&gt;Web&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#c-usage&quot;&gt;C Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#1-linux-1&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#2-windows&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#3-macos&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#4-android&quot;&gt;Android&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#5-ios&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ten-ecosystem&quot;&gt;TEN Ecosystem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ask-questions&quot;&gt;Ask Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#citations&quot;&gt;Citations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Welcome to TEN&lt;/h2&gt; 
&lt;p&gt;TEN is a comprehensive open-source ecosystem for creating, customizing, and deploying real-time conversational AI agents with multimodal capabilities including voice, vision, and avatar interactions.&lt;/p&gt; 
&lt;p&gt;TEN includes &lt;a href=&quot;https://github.com/ten-framework/ten-framework&quot;&gt;TEN Framework&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;TEN Turn Detection&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;TEN VAD&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/demo&quot;&gt;TEN Agent&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;TMAN Designer&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;TEN Portal&lt;/a&gt;. Check out &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/#ten-ecosystem&quot;&gt;TEN Ecosystem&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Community Channel&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=TenFramework&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/TenFramework?logo=X&amp;amp;color=%20%23f5f5f5&quot; alt=&quot;Follow on X&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on X for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/company/ten-framework&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-TEN_Framework-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on LinkedIn for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://discord.gg/VnPftUzAMJ&quot;&gt;&lt;img src=&quot;https://dcbadge.vercel.app/api/server/VnPftUzAMJ?&amp;amp;style=flat&amp;amp;theme=light&amp;amp;color=lightgray&quot; alt=&quot;Discord TEN Community&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Discord community to connect with developers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://huggingface.co/TEN-framework&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Hugging%20Face-TEN%20Framework-yellow?style=flat&amp;amp;logo=huggingface&quot; alt=&quot;Hugging Face Space&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Hugging Face community to explore our spaces and models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/discussions/170&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TEN_Framework-WeChat_Group-%2307C160?logo=wechat&amp;amp;labelColor=darkgreen&amp;amp;color=gray&quot; alt=&quot;WeChat&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our WeChat group for Chinese community discussions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star TEN Repositories&lt;/strong&gt; ⭐️&lt;/p&gt; 
 &lt;p&gt;Get instant notifications for new releases and updates. Your support helps us grow and improve TEN!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/eeebe996-8c14-4bf7-82ae-f1a1f7e30705&quot; alt=&quot;TEN star us gif&quot; /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;TEN Hugging Face Space&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/725a8318-d679-4b17-b9e4-e3dce999b298&quot;&gt;https://github.com/user-attachments/assets/725a8318-d679-4b17-b9e4-e3dce999b298&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You are more than welcome to &lt;a href=&quot;https://huggingface.co/spaces/TEN-framework/ten-agent-demo&quot;&gt;Visit TEN Hugging Face Space&lt;/a&gt; to try VAD and Turn Detection together.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TEN VAD&lt;/strong&gt; is a real-time voice activity detection system designed for enterprise use, providing accurate frame-level speech activity detection. It shows superior precision compared to both WebRTC VAD and Silero VAD, which are commonly used in the industry. Additionally, TEN VAD offers lower computational complexity and reduced memory usage compared to Silero VAD. Meanwhile, the architecture&#39;s temporal efficiency enables rapid voice activity detection, significantly reducing end-to-end response and turn detection latency in conversational AI systems.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;1. High-Performance:&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;The precision-recall curves comparing the performance of WebRTC VAD (pitch-based), Silero VAD, and TEN VAD are shown below. The evaluation is conducted on the precisely manually annotated testset. The audio files are from librispeech, gigaspeech, DNS Challenge etc. As demonstrated, TEN VAD achieves the best performance. Additionally, cross-validation experiments conducted on large internal real-world datasets demonstrate the reproducibility of these findings. The &lt;strong&gt;testset with annotated labels&lt;/strong&gt; is released in directory &quot;testset&quot; of this repository.&lt;/p&gt; 
&lt;br /&gt; 
&lt;div style=&quot;text-align:&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/examples/images/PR_Curves_testset.png&quot; width=&quot;800&quot; /&gt; 
&lt;/div&gt; 
&lt;p&gt;Note that the default threshold of 0.5 is used to generate binary speech indicators (0 for non-speech signal, 1 for speech signal). This threshold needs to be tuned according to your domain-specific task. The precision-recall curve can be obtained by executing the following script on Linux x64. The output figure will be saved in the same directory as the script.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd ./examples
python plot_pr_curves.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h3&gt;&lt;strong&gt;2. Agent-Friendly:&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;As illustrated in the figure below, TEN VAD rapidly detects speech-to-non-speech transitions, whereas Silero VAD suffers from a delay of several hundred milliseconds, resulting in increased end-to-end latency in human-agent interaction systems. In addition, as demonstrated in the 6.5s-7.0s audio segment, Silero VAD fails to identify short silent durations between adjacent speech segments.&lt;/p&gt; 
&lt;div style=&quot;text-align:&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/examples/images/Agent-Friendly-image.png&quot; width=&quot;800&quot; /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h3&gt;&lt;strong&gt;3. Lightweight:&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;We evaluated the RTF (Real-Time Factor) across five distinct platforms, each equipped with varying CPUs. TEN VAD demonstrates much lower computational complexity and smaller library size than Silero VAD.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot; rowspan=&quot;2&quot; valign=&quot;middle&quot;&gt; Platform &lt;/th&gt; 
   &lt;th align=&quot;center&quot; rowspan=&quot;2&quot; valign=&quot;middle&quot;&gt; CPU &lt;/th&gt; 
   &lt;th align=&quot;center&quot; colspan=&quot;2&quot;&gt; RTF &lt;/th&gt; 
   &lt;th align=&quot;center&quot; colspan=&quot;2&quot;&gt; Lib Size &lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot; style=&quot;white-space: nowrap;&quot;&gt; TEN VAD &lt;/th&gt; 
   &lt;th align=&quot;center&quot; style=&quot;white-space: nowrap;&quot;&gt; Silero VAD &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; TEN VAD &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; Silero VAD &lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot; rowspan=&quot;3&quot;&gt; Linux &lt;/th&gt; 
   &lt;td style=&quot;white-space: nowrap;&quot;&gt; AMD Ryzen 9 5900X 12-Core &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0150 &lt;/td&gt; 
   &lt;td align=&quot;center&quot; rowspan=&quot;2&quot; valign=&quot;middle&quot;&gt; / &lt;/td&gt; 
   &lt;td align=&quot;center&quot; rowspan=&quot;3&quot; valign=&quot;middle&quot;&gt; 306KB &lt;/td&gt; 
   &lt;td align=&quot;center&quot; rowspan=&quot;10&quot; style=&quot;white-space: nowrap;&quot; valign=&quot;middle&quot;&gt; 2.16MB(JIT) / 2.22MB(ONNX) &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;white-space: nowrap;&quot;&gt; Intel(R) Xeon(R) Platinum 8253 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0136 &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;white-space: nowrap;&quot;&gt; Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0086 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0127 &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Windows &lt;/th&gt; 
   &lt;td&gt; Intel i7-10710U &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0150 &lt;/td&gt; 
   &lt;td align=&quot;center&quot; rowspan=&quot;7&quot; valign=&quot;middle&quot;&gt; / &lt;/td&gt; 
   &lt;td align=&quot;center&quot; style=&quot;white-space: nowrap;&quot;&gt; 464KB(x86) / 508KB(x64) &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; macOS &lt;/th&gt; 
   &lt;td&gt; M1 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0160 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 731KB &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Web &lt;/th&gt; 
   &lt;td&gt; macOS(M1) &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.010 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 277KB &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot; rowspan=&quot;2&quot;&gt; Android &lt;/th&gt; 
   &lt;td&gt; Galaxy J6+ (32bit, 425) &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0570 &lt;/td&gt; 
   &lt;td align=&quot;center&quot; rowspan=&quot;2&quot; style=&quot;white-space: nowrap;&quot;&gt; 373KB(v7a) / 532KB(v8a)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; Oppo A3s (450) &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0490 &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot; rowspan=&quot;2&quot;&gt; iOS &lt;/th&gt; 
   &lt;td&gt; iPhone6 (A8) &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0210 &lt;/td&gt; 
   &lt;td align=&quot;center&quot; rowspan=&quot;2&quot;&gt; 320KB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; iPhone8 (A11) &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; 0.0050 &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h3&gt;&lt;strong&gt;4. Multiple programming languages and platforms:&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;TEN VAD provides cross-platform C compatibility across five operating systems (Linux x64, Windows, macOS, Android, iOS), with Python bindings optimized for Linux x64, with wasm for Web. &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;5. Supproted sampling rate and hop size:&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;TEN VAD operates on 16kHz audio input with configurable hop sizes (optimized frame configurations: 160/256 samples=10/16ms). Other sampling rates must be resampled to 16kHz. &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/TEN-framework/ten-vad.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;The project supports five major platforms with dynamic library linking.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Platform &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; Dynamic Lib &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; Supported Arch &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; Interface Language &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; Header &lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt; Comment  &lt;/th&gt;
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Linux &lt;/th&gt; 
   &lt;td align=&quot;center&quot;&gt; libten_vad.so &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; x64 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; Python, C &lt;/td&gt; 
   &lt;td rowspan=&quot;6&quot;&gt;ten_vad.h &lt;br /&gt; ten_vad.py &lt;br /&gt; ten_vad.js&lt;/td&gt; 
   &lt;td&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Windows &lt;/th&gt; 
   &lt;td align=&quot;center&quot;&gt; ten_vad.dll &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; x64, x86 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; C &lt;/td&gt; 
   &lt;td&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; macOS &lt;/th&gt; 
   &lt;td align=&quot;center&quot;&gt; ten_vad.framework &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; arm64, x86_64 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; C &lt;/td&gt; 
   &lt;td&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Web &lt;/th&gt; 
   &lt;td align=&quot;center&quot;&gt; ten_vad.wasm &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; / &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; JS &lt;/td&gt; 
   &lt;td&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; Android &lt;/th&gt; 
   &lt;td align=&quot;center&quot;&gt; libten_vad.so &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; arm64-v8a, armeabi-v7a &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; C &lt;/td&gt; 
   &lt;td&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt; iOS &lt;/th&gt; 
   &lt;td align=&quot;center&quot;&gt; ten_vad.framework &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; arm64 &lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt; C &lt;/td&gt; 
   &lt;td&gt; 1. not simulator &lt;br /&gt; 2. not iPad &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h3&gt;&lt;strong&gt;Python Usage&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;1. Linux / macOS / Windows&lt;/strong&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;numpy (Version 1.17.4/1.26.4 verified)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;scipy (Version &amp;gt;= 1.5.0)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;scikit-learn (Version 1.2.2/1.5.0 verified, for plotting PR curves)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;matplotlib (Version 3.1.3/3.10.0 verified, for plotting PR curves)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;torchaudio (Version 2.2.2 verified, for plotting PR curves)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Python version 3.8.19/3.10.14 verified&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: You could use other versions of above packages, but we didn&#39;t test other versions.&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;The &lt;strong&gt;lib&lt;/strong&gt; only depend on numpy, you have to install the dependency via requirements.txt:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;running demo or plotting PR curves&lt;/strong&gt;, you have to install the dependencies:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r ./examples/requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Note that if you did not install &lt;strong&gt;libc++1&lt;/strong&gt; (Linux), you have to run the code below to install it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install libc++1
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Note: For usage in python, you can either use it by &lt;strong&gt;git clone&lt;/strong&gt; or &lt;strong&gt;pip&lt;/strong&gt;.&lt;/p&gt; 
&lt;h5&gt;&lt;strong&gt;By using git clone:&lt;/strong&gt;&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/TEN-framework/ten-vad.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Enter examples directory&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;cd ./examples
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Test&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;python test.py s0724-s0730.wav out.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h5&gt;&lt;strong&gt;By using pip:&lt;/strong&gt;&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install via pip&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;pip install -U --force-reinstall -v git+https://github.com/TEN-framework/ten-vad.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Write your own use cases and import the class, the attributes of class TenVAD you can refer to ten_vad.py&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;from ten_vad import TenVad
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h3&gt;&lt;strong&gt;JS Usage&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;1. Web&lt;/strong&gt;&lt;/h4&gt; 
&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (macOS v14.18.2, Linux v16.20.2 verified)&lt;/li&gt; 
 &lt;li&gt;Terminal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;1) cd ./examples
2) node test_node.js s0724-s0730.wav out.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h3&gt;&lt;strong&gt;C Usage&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Build Scripts&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Located in examples/ directory or examples_onnx/ (for &lt;strong&gt;ONNX&lt;/strong&gt; usage on Linux):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux: build-and-deploy-linux.sh&lt;/li&gt; 
 &lt;li&gt;Windows: build-and-deploy-windows.bat&lt;/li&gt; 
 &lt;li&gt;macOS: build-and-deploy-mac.sh&lt;/li&gt; 
 &lt;li&gt;Android: build-and-deploy-android.sh&lt;/li&gt; 
 &lt;li&gt;iOS: build-and-deploy-ios.sh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Dynamic Library Configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Runtime library path configuration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux/Android: LD_LIBRARY_PATH&lt;/li&gt; 
 &lt;li&gt;macOS: DYLD_FRAMEWORK_PATH&lt;/li&gt; 
 &lt;li&gt;Windows: DLL in executable directory or system PATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Customization&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modify platform-specific build scripts&lt;/li&gt; 
 &lt;li&gt;Adjust CMakeLists.txt&lt;/li&gt; 
 &lt;li&gt;Configure toolchain and architecture settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Overview of Usage&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Navigate to examples/ or examples_onnx/ (for &lt;strong&gt;ONNX&lt;/strong&gt; usage on Linux)&lt;/li&gt; 
 &lt;li&gt;Execute platform-specific build script&lt;/li&gt; 
 &lt;li&gt;Configure dynamic library path&lt;/li&gt; 
 &lt;li&gt;Run demo with sample audio s0724-s0730.wav&lt;/li&gt; 
 &lt;li&gt;Processed results saved to out.txt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;p&gt;The detailed usage methods of each platform are as follows &lt;br /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;1. Linux&lt;/strong&gt;&lt;/h4&gt; 
&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clang (e.g. 6.0.0-1ubuntu2 verified)&lt;/li&gt; 
 &lt;li&gt;CMake&lt;/li&gt; 
 &lt;li&gt;Terminal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that if you did not install &lt;strong&gt;libc++1&lt;/strong&gt;, you have to run the code below to install it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install libc++1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;strong&gt;Usage (prebuilt-lib)&lt;/strong&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;1) cd ./examples
2) ./build-and-deploy-linux.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;strong&gt;Usage (ONNX)&lt;/strong&gt;&lt;/h5&gt; 
&lt;p&gt;You have to download the &lt;strong&gt;onnxruntime&lt;/strong&gt; packages from the &lt;a href=&quot;https://github.com/microsoft/onnxruntime&quot;&gt;microsoft official onnxruntime github website&lt;/a&gt;. Note that the version of onnxruntime must be higher than or equal to 1.17.1 (e.g. onnxruntime-linux-x64-1.17.1.tgz). &lt;br /&gt; &lt;br /&gt; You can check the official &lt;strong&gt;ONNX Runtime releases&lt;/strong&gt; from &lt;a href=&quot;https://github.com/microsoft/onnxruntime/tags&quot;&gt;this website&lt;/a&gt;. And for example, to download version 1.17.1 (Linux x64), use &lt;a href=&quot;https://github.com/microsoft/onnxruntime/releases/download/v1.17.1/onnxruntime-linux-x64-1.17.1.tgz&quot;&gt;this link&lt;/a&gt;. After extracting the compressed file, you&#39;ll find two important directories:&lt;code&gt;include/&lt;/code&gt; - header files, &lt;code&gt;lib/&lt;/code&gt; - library files&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;1) cd examples_onnx/
2) ./build-and-deploy-linux.sh --ort-path /absolute/path/to/your/onnxruntime/root/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note 1&lt;/strong&gt;: If executing the onnx demo from a different directory than the one used when running build-and-deploy-linux.sh, ensure to create a symbolic link to src/onnx_model/ to prevent ONNX model file loading failures. &lt;br /&gt; &lt;strong&gt;Note 2&lt;/strong&gt;: The &lt;strong&gt;ONNX model&lt;/strong&gt; locates in &lt;code&gt;src/onnx_model&lt;/code&gt; directory.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h4&gt;&lt;strong&gt;2. Windows&lt;/strong&gt;&lt;/h4&gt; 
&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visual Studio (2017, 2019, 2022 verified)&lt;/li&gt; 
 &lt;li&gt;CMake (3.26.0-rc6 verified)&lt;/li&gt; 
 &lt;li&gt;Terminal (MINGW64 or powershell)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;1) cd ./examples
2) Configure &quot;build-and-deploy-windows.bat&quot; with your preferred:
    - Architecture (default: x64)
    - Visual Studio version (default: 2019)
3) ./build-and-deploy-windows.bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;&lt;strong&gt;3. macOS&lt;/strong&gt;&lt;/h4&gt; 
&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Xcode (15.2 verified)&lt;/li&gt; 
 &lt;li&gt;CMake (3.19.2 verified)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;1) cd ./examples
2) Configure &quot;build-and-deploy-mac.sh&quot; with your target architecture:
  - Default: arm64 (Apple Silicon)
  - Alternative: x86_64 (Intel)
3) ./build-and-deploy-mac.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;&lt;strong&gt;4. Android&lt;/strong&gt;&lt;/h4&gt; 
&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;NDK (r25b, macOS verified)&lt;/li&gt; 
 &lt;li&gt;CMake (3.19.2, macOS verified)&lt;/li&gt; 
 &lt;li&gt;adb (1.0.41, macOS verified)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code&gt;1) cd ./examples
2) export ANDROID_NDK=/path/to/android-ndk  # Replace it with your NDK installation path
3) Configure &quot;build-and-deploy-android.sh&quot; with your build settings:
  - Architecture: arm64-v8a (default) or armeabi-v7a
  - Toolchain: aarch64-linux-android-clang (default) or custom NDK toolchain
4) ./build-and-deploy-android.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;&lt;strong&gt;5. iOS&lt;/strong&gt;&lt;/h4&gt; 
&lt;h5&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h5&gt; 
&lt;p&gt;Xcode (15.2, macOS verified) CMake (3.19.2, macOS verified)&lt;/p&gt; 
&lt;h5&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enter examples directory&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;cd ./examples
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Creates Xcode project files for iOS build&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;./build-and-deploy-ios.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt; &lt;p&gt;Follow the steps below to build and test on iOS device:&lt;/p&gt; &lt;p&gt;3.1. Use Xcode to open .xcodeproj files: a) cd ./build-ios, b) open ./ten_vad_demo.xcodeproj&lt;/p&gt; &lt;p&gt;3.2. In Xcode IDE, select ten_vad_demo target (should check: Edit Scheme → Run → Release), then select your iOS Device (not simulator).&lt;/p&gt; 
  &lt;div style=&quot;text-align:&quot;&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/TEN-framework/ten-vad/main/examples/images/ios_image_1.jpg&quot; width=&quot;800&quot; /&gt; 
  &lt;/div&gt; &lt;p&gt;3.3. Drag ten_vad/lib/iOS/ten_vad.framework to &quot;Frameworks, Libraries, and Embedded Content&quot;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;(in TARGETS → ten_vad_demo → ten_vad_demo → General, should set Embed to &quot;Embed &amp;amp; Sign&quot;).&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;or add it directly in this way: &quot;Frameworks, Libraries, and Embedded Content&quot; → &quot;+&quot; → Add Other... → Add Files →...&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Note: If this step is not completed, you may encounter the following runtime error: &quot;dyld: Library not loaded: @rpath/ten_vad.framework/ten_vad&quot;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;div style=&quot;text-align:&quot;&amp;gt;
  &amp;lt;img src=&quot;./examples/images/ios_image_2.png&quot; width=&quot;800&quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;3.4. Configure iOS device Signature&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;in TARGETS → ten_vad_demo → Signing &amp;amp; Capabilities → Signing&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Modify Bundle Identifier: modify &quot;com.yourcompany&quot; to yours;&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Specify Provisioning Profile&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;In TARGETS → ten_vad_demo → Build Settings → Signing → Code Signing Identity:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Specify your Certification&lt;/p&gt; &lt;p&gt;3.5. Build in Xcode and run demo on your device.&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;br /&gt; 
&lt;h2&gt;TEN Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Preview&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten_framework&quot;&gt;&lt;strong&gt;🏚️ TEN Framework&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is an open-source framework for real-time, multimodal conversational AI.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten_framework?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;&lt;strong>️🔂 TEN Turn Detection&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is for full-duplex dialogue communication.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-turn-detection?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/8d0ec716-5d0e-43e4-ad9a-d97b17305658&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;&lt;strong&gt;🔉 TEN VAD&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN VAD is a low-latency, lightweight and high-performance streaming voice activity detector (VAD).&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-vad?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents&quot;&gt;&lt;strong&gt;🎙️ TEN Agent&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN Agent is a showcase of TEN Framewrok.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/38de2207-939b-4702-a0aa-04491f5b5275&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;&lt;strong&gt;🎨 TMAN Designer&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TMAN Designer is low/no code option to make a voice agent with easy to use workflow UI.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/804c3543-0a47-42b7-b40b-ef32b742fb8f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;&lt;strong&gt;📒 TEN Portal&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;The official site of TEN framework, it has documentation and blog.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/portal?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e17d8aaa-5928-45dd-ac71-814928e26a89&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h2&gt;Ask Questions&lt;/h2&gt; 
&lt;p&gt;TEN VAD is available on these AI-powered Q&amp;amp;A platforms. They can help you find answers quickly and accurately in multiple languages, covering everything from basic setup to advanced implementation details.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepWiki&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-vad&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ReadmeX&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://readmex.com/TEN-framework/ten-vad&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;strong&gt;Citations&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;@misc{TEN VAD,
  author = {TEN Team},
  title = {TEN VAD: A Low-Latency, Lightweight and High-Performance Streaming Voice Activity Detector (VAD)},
  year = {2025},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {https://github.com/TEN-framework/ten-vad.git},
  email = {developer@ten.ai}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under Apache 2.0 with certain conditions. Refer to the &quot;LICENSE&quot; file in the root directory for detailed information. Note that &lt;code&gt;pitch_est.cc&lt;/code&gt; contains modified code derived from &lt;a href=&quot;https://github.com/xiph/LPCNet&quot;&gt;LPCNet&lt;/a&gt;, which is &lt;a href=&quot;https://spdx.org/licenses/BSD-2-Clause.html&quot;&gt;BSD-2-Clause&lt;/a&gt; and &lt;a href=&quot;https://spdx.org/licenses/BSD-3-Clause.html&quot;&gt;BSD-3-Clause&lt;/a&gt; licensed, refer to the NOTICES file in the root directory for detailed information.&lt;/p&gt; 
&lt;br /&gt;</description>
    </item>
    
    <item>
      <title>torvalds/linux</title>
      <link>https://github.com/torvalds/linux</link>
      <description>&lt;p&gt;Linux kernel source tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux kernel&lt;/h1&gt; 
&lt;p&gt;There are several guides for kernel developers and users. These guides can be rendered in a number of formats, like HTML and PDF. Please read Documentation/admin-guide/README.rst first.&lt;/p&gt; 
&lt;p&gt;In order to build the documentation, use &lt;code&gt;make htmldocs&lt;/code&gt; or &lt;code&gt;make pdfdocs&lt;/code&gt;. The formatted documentation can also be read online at:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://www.kernel.org/doc/html/latest/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are various text files in the Documentation/ subdirectory, several of them using the reStructuredText markup notation.&lt;/p&gt; 
&lt;p&gt;Please read the Documentation/process/changes.rst file, as it contains the requirements for building and running the kernel, and information about the problems which may result by upgrading your kernel.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open5gs/open5gs</title>
      <link>https://github.com/open5gs/open5gs</link>
      <description>&lt;p&gt;Open5GS is a C-language Open Source implementation for 5G Core and EPC, i.e. the core network of LTE/NR network (Release-17)&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://open5gs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img width=&quot;100&quot; src=&quot;https://open5gs.org/assets/img/open5gs-logo-only.png&quot; alt=&quot;Open5GS logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Please follow the &lt;a href=&quot;https://open5gs.org/open5gs/docs/&quot;&gt;documentation&lt;/a&gt; at &lt;a href=&quot;https://open5gs.org/&quot;&gt;open5gs.org&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;If you find Open5GS useful for work, please consider supporting this Open Source project by &lt;a href=&quot;https://github.com/sponsors/acetcom&quot;&gt;Becoming a sponsor&lt;/a&gt;. To manage the funding transactions transparently, you can donate through &lt;a href=&quot;https://opencollective.com/open5gs&quot;&gt;OpenCollective&lt;/a&gt;.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;/p&gt;
&lt;h3 align=&quot;center&quot;&gt;Special Sponsor&lt;/h3&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://mobi.com&quot;&gt; &lt;img alt=&quot;special sponsor mobi&quot; src=&quot;https://open5gs.org/assets/img/mobi-open5GS.png&quot; width=&quot;400&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://open5gs.org/#sponsors&quot;&gt; &lt;img alt=&quot;sponsors&quot; src=&quot;https://open5gs.org/assets/img/sponsors.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Problem with Open5GS can be filed as &lt;a href=&quot;https://github.com/open5gs/open5gs/issues&quot;&gt;issues&lt;/a&gt; in this repository.&lt;/li&gt; 
 &lt;li&gt;Other topics related to this project are happening on the &lt;a href=&quot;https://github.com/open5gs/open5gs/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Voice and text chat are available in Open5GS&#39;s &lt;a href=&quot;https://discordapp.com/&quot;&gt;Discord&lt;/a&gt; workspace. Use &lt;a href=&quot;https://discord.gg/GreNkuc&quot;&gt;this link&lt;/a&gt; to get started.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you&#39;re contributing through a pull request to Open5GS project on GitHub, please read the &lt;a href=&quot;https://open5gs.org/open5gs/cla/&quot;&gt;Contributor License Agreement&lt;/a&gt; in advance.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open5GS Open Source files are made available under the terms of the GNU Affero General Public License (&lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0.html&quot;&gt;GNU AGPL v3.0&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://open5gs.org/open5gs/support/&quot;&gt;Commercial licenses&lt;/a&gt; are also available from &lt;a href=&quot;https://newplane.io/&quot;&gt;NewPlane&lt;/a&gt; at &lt;a href=&quot;mailto:sales@newplane.io&quot;&gt;sales@newplane.io&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Technical support and customized services for Open5GS are provided by &lt;a href=&quot;https://newplane.io/&quot;&gt;NewPlane&lt;/a&gt; at &lt;a href=&quot;mailto:support@newplane.io&quot;&gt;support@newplane.io&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jart/cosmopolitan</title>
      <link>https://github.com/jart/cosmopolitan</link>
      <description>&lt;p&gt;build-once run-anywhere c library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jart/cosmopolitan/master/usr/share/img/honeybadger.png&quot; alt=&quot;Cosmopolitan Honeybadger&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jart/cosmopolitan/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/jart/cosmopolitan/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Cosmopolitan&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://justine.lol/cosmopolitan/index.html&quot;&gt;Cosmopolitan Libc&lt;/a&gt; makes C/C++ a build-once run-anywhere language, like Java, except it doesn&#39;t need an interpreter or virtual machine. Instead, it reconfigures stock GCC and Clang to output a POSIX-approved polyglot format that runs natively on Linux + Mac + Windows + FreeBSD + OpenBSD 7.3 + NetBSD + BIOS with the best possible performance and the tiniest footprint imaginable.&lt;/p&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;For an introduction to this project, please read the &lt;a href=&quot;https://justine.lol/ape.html&quot;&gt;actually portable executable&lt;/a&gt; blog post and &lt;a href=&quot;https://justine.lol/cosmopolitan/index.html&quot;&gt;cosmopolitan libc&lt;/a&gt; website. We also have &lt;a href=&quot;https://justine.lol/cosmopolitan/documentation.html&quot;&gt;API documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can start by obtaining a release of our &lt;code&gt;cosmocc&lt;/code&gt; compiler from &lt;a href=&quot;https://cosmo.zip/pub/cosmocc/&quot;&gt;https://cosmo.zip/pub/cosmocc/&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;mkdir -p cosmocc
cd cosmocc
wget https://cosmo.zip/pub/cosmocc/cosmocc.zip
unzip cosmocc.zip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here&#39;s an example program we can write:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// hello.c
#include &amp;lt;stdio.h&amp;gt;

int main() {
  printf(&quot;hello world\n&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It can be compiled as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cosmocc -o hello hello.c
./hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Cosmopolitan Libc runtime links some heavyweight troubleshooting features by default, which are very useful for developers and admins. Here&#39;s how you can log system calls:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;./hello --strace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here&#39;s how you can get a much more verbose log of function calls:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;./hello --ftrace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use the Cosmopolitan&#39;s toolchain to build conventional open source projects which use autotools. This strategy normally works:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export CC=x86_64-unknown-cosmo-cc
export CXX=x86_64-unknown-cosmo-c++
./configure --prefix=/opt/cosmos/x86_64
make -j
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Cosmopolitan Source Builds&lt;/h2&gt; 
&lt;p&gt;Cosmopolitan can be compiled from source on any of our supported platforms. The Makefile will download cosmocc automatically.&lt;/p&gt; 
&lt;p&gt;It&#39;s recommended that you install a systemwide APE Loader. This command requires &lt;code&gt;sudo&lt;/code&gt; access to copy the &lt;code&gt;ape&lt;/code&gt; command to a system folder and register with binfmt_misc on Linux, for even more performance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ape/apeinstall.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now build the mono repo with any modern version of GNU Make. To bootstrap your build, you can install Cosmopolitan Make from this site:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://cosmo.zip/pub/cosmos/bin/make&quot;&gt;https://cosmo.zip/pub/cosmos/bin/make&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;E.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -LO https://cosmo.zip/pub/cosmos/bin/make
./make -j8
o//examples/hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After you&#39;ve built the repo once, you can also use the make from your cosmocc at &lt;code&gt;.cosmocc/current/bin/make&lt;/code&gt;. You might even prefer to alias make to &lt;code&gt;$COSMO/.cosmocc/current/bin/make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Since the Cosmopolitan repository is very large, you might only want to build one particular thing. Here&#39;s an example of a target that can be compiled relatively quickly, which is a simple POSIX test that only depends on core LIBC packages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm -rf o//libc o//test
.cosmocc/current/bin/make o//test/posix/signal_test
o//test/posix/signal_test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sometimes it&#39;s desirable to build a subset of targets, without having to list out each individual one. For example if you wanted to build and run all the unit tests in the &lt;code&gt;TEST_POSIX&lt;/code&gt; package, you could say:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;.cosmocc/current/bin/make o//test/posix
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cosmopolitan provides a variety of build modes. For example, if you want really tiny binaries (as small as 12kb in size) then you&#39;d say:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;.cosmocc/current/bin/make m=tiny
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can furthermore cut out the bloat of other operating systems, and have Cosmopolitan become much more similar to Musl Libc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;.cosmocc/current/bin/make m=tinylinux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For further details, see &lt;a href=&quot;https://raw.githubusercontent.com/jart/cosmopolitan/master/build/config.mk&quot;&gt;//build/config.mk&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;To print a log of system calls to stderr:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cosmocc -o hello hello.c
./hello --strace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To print a log of function calls to stderr:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cosmocc -o hello hello.c
./hello --ftrace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both strace and ftrace use the unbreakable kprintf() facility, which is able to be sent to a file by setting an environment variable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export KPRINTF_LOG=log
./hello --strace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;GDB&lt;/h2&gt; 
&lt;p&gt;Here&#39;s the recommended &lt;code&gt;~/.gdbinit&lt;/code&gt; config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-gdb&quot;&gt;set host-charset UTF-8
set target-charset UTF-8
set target-wide-charset UTF-8
set osabi none
set complaints 0
set confirm off
set history save on
set history filename ~/.gdb_history
define asm
  layout asm
  layout reg
end
define src
  layout src
  layout reg
end
src
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You normally run the &lt;code&gt;.dbg&lt;/code&gt; file under gdb. If you need to debug the `` file itself, then you can load the debug symbols independently as&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;gdb foo -ex &#39;add-symbol-file foo.dbg 0x401000&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Platform Notes&lt;/h2&gt; 
&lt;h3&gt;Shells&lt;/h3&gt; 
&lt;p&gt;If you use zsh and have trouble running APE programs try &lt;code&gt;sh -c ./prog&lt;/code&gt; or simply upgrade to zsh 5.9+ (since we patched it two years ago). The same is the case for Python &lt;code&gt;subprocess&lt;/code&gt;, old versions of fish, etc.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;Some Linux systems are configured to launch MZ executables under WINE. Other distros configure their stock installs so that APE programs will print &quot;run-detectors: unable to find an interpreter&quot;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;jart@ubuntu:~$ wget https://cosmo.zip/pub/cosmos/bin/dash
jart@ubuntu:~$ chmod +x dash
jart@ubuntu:~$ ./dash
run-detectors: unable to find an interpreter for ./dash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can fix that by registering APE with &lt;code&gt;binfmt_misc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo wget -O /usr/bin/ape https://cosmo.zip/pub/cosmos/bin/ape-$(uname -m).elf
sudo chmod +x /usr/bin/ape
sudo sh -c &quot;echo &#39;:APE:M::MZqFpD::/usr/bin/ape:&#39; &amp;gt;/proc/sys/fs/binfmt_misc/register&quot;
sudo sh -c &quot;echo &#39;:APE-jart:M::jartsr::/usr/bin/ape:&#39; &amp;gt;/proc/sys/fs/binfmt_misc/register&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should be good now. APE will not only work, it&#39;ll launch executables 400µs faster now too. However if things still didn&#39;t work out, it&#39;s also possible to disable &lt;code&gt;binfmt_misc&lt;/code&gt; as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo sh -c &#39;echo -1 &amp;gt; /proc/sys/fs/binfmt_misc/cli&#39;     # remove Ubuntu&#39;s MZ interpreter
sudo sh -c &#39;echo -1 &amp;gt; /proc/sys/fs/binfmt_misc/status&#39;  # remove ALL binfmt_misc entries
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WSL&lt;/h3&gt; 
&lt;p&gt;It&#39;s normally unsafe to use APE in a WSL environment, because it tries to run MZ executables as WIN32 binaries within the WSL environment. In order to make it safe to use Cosmopolitan software on WSL, run this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo sh -c &quot;echo -1 &amp;gt; /proc/sys/fs/binfmt_misc/WSLInterop&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Discord Chatroom&lt;/h2&gt; 
&lt;p&gt;The Cosmopolitan development team collaborates on the Redbean Discord server. You&#39;re welcome to join us! &lt;a href=&quot;https://discord.gg/FwAVVu7eJ4&quot;&gt;https://discord.gg/FwAVVu7eJ4&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support Vector&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Platform&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Min Version&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Circa&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;AMD&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;K8&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2003&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Intel&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;Core&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2006&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Linux&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2.6.18&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2007&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Windows&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;8 [1]&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2012&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Darwin (macOS)&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;23.1.0+&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2023&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;OpenBSD&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;7.3 or earlier&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2023&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;FreeBSD&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;13&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;NetBSD&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;9.2&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;2021&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;[1] See our &lt;a href=&quot;https://github.com/jart/cosmopolitan/tree/vista&quot;&gt;vista branch&lt;/a&gt; for a community supported version of Cosmopolitan that works on Windows Vista and Windows 7.&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;p&gt;Funding for this project is crowdsourced using &lt;a href=&quot;https://github.com/sponsors/jart&quot;&gt;GitHub Sponsors&lt;/a&gt; and &lt;a href=&quot;https://www.patreon.com/jart&quot;&gt;Patreon&lt;/a&gt;. Your support is what makes this project possible. Thank you! We&#39;d also like to give special thanks to the following groups and individuals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jdrumgoole&quot;&gt;Joe Drumgoole&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/robfig&quot;&gt;Rob Figueiredo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wasmer.io/&quot;&gt;Wasmer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For publicly sponsoring our work at the highest tier.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openwall/john</title>
      <link>https://github.com/openwall/john</link>
      <description>&lt;p&gt;John the Ripper jumbo - advanced offline password cracker, which supports hundreds of hash and cipher types, and runs on many operating systems, CPUs, GPUs, and even some FPGAs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/openwall/john/tree/bleeding-jumbo&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/openwall/john/tree/bleeding-jumbo.svg?style=shield&quot; alt=&quot;Circle CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openwall/john-packages/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Download-Windows%20Build-blue.svg?sanitize=true&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openwall/john/raw/bleeding-jumbo/doc/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPL%20v2%2B-blue.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/openwall/john?color=yellow&quot; alt=&quot;GitHub commit activity&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/commits-since/openwall/john/1.9.0-Jumbo-1?color=brown&quot; alt=&quot;GitHub commits since tagged version&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;John the Ripper&lt;/h1&gt; 
&lt;p&gt;This is the community-enhanced, &quot;jumbo&quot; version of John the Ripper. It has a lot of code, documentation, and data contributed by jumbo developers and the user community. It is easy for new code to be added to jumbo, and the quality requirements are low, although lately we&#39;ve started subjecting all contributions to quite some automated testing. This means that you get a lot of functionality that is not necessarily &quot;mature&quot;, which in turn means that bugs in this code are to be expected.&lt;/p&gt; 
&lt;p&gt;John the Ripper homepage is:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.openwall.com/john/&quot;&gt;https://www.openwall.com/john/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have any comments on this release or on JtR in general, please join the john-users mailing list and post in there:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.openwall.com/lists/john-users/&quot;&gt;https://www.openwall.com/lists/john-users/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For contributions to John the Ripper jumbo, please use pull requests on GitHub:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/openwall/john/raw/bleeding-jumbo/CONTRIBUTING.md&quot;&gt;https://github.com/openwall/john/blob/bleeding-jumbo/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Included below is basic John the Ripper core documentation.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;John the Ripper password cracker.&lt;/h2&gt; 
&lt;p&gt;John the Ripper is a fast password cracker, currently available for many flavors of Unix, macOS, Windows, DOS, BeOS, and OpenVMS (the latter requires a contributed patch). Its primary purpose is to detect weak Unix passwords. Besides several crypt(3) password hash types most commonly found on various Unix flavors, supported out of the box are Kerberos/AFS and Windows LM hashes, as well as DES-based tripcodes, plus hundreds of additional hashes and ciphers in &quot;-jumbo&quot; versions.&lt;/p&gt; 
&lt;h2&gt;How to install.&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/INSTALL&quot;&gt;INSTALL&lt;/a&gt; for information on installing John on your system.&lt;/p&gt; 
&lt;h2&gt;How to use.&lt;/h2&gt; 
&lt;p&gt;To run John, you need to supply it with some password files and optionally specify a cracking mode, like this, using the default order of modes and assuming that &quot;passwd&quot; is a copy of your password file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, to restrict it to the wordlist mode only, but permitting the use of word mangling rules:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john --wordlist=password.lst --rules passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cracked passwords will be printed to the terminal and saved in the file called $JOHN/john.pot (in the documentation and in the configuration file for John, &quot;$JOHN&quot; refers to John&#39;s &quot;home directory&quot;; which directory it really is depends on how you installed John). The $JOHN/john.pot file is also used to not load password hashes that you already cracked when you run John the next time.&lt;/p&gt; 
&lt;p&gt;To retrieve the cracked passwords, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john --show passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While cracking, you can press any key for status, or &#39;q&#39; or Ctrl-C to abort the session saving its state to a file ($JOHN/john.rec by default). If you press Ctrl-C for a second time before John had a chance to complete handling of your first Ctrl-C, John will abort immediately without saving. By default, the state is also saved every 10 minutes to permit for recovery in case of a crash.&lt;/p&gt; 
&lt;p&gt;To continue an interrupted session, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john --restore
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These are just the most essential things you can do with John. For a complete list of command line options and for more complicated usage examples you should refer to OPTIONS and EXAMPLES, respectively.&lt;/p&gt; 
&lt;p&gt;Please note that &quot;binary&quot; (pre-compiled) distributions of John may include alternate executables instead of just &quot;john&quot;. You may need to choose the executable that fits your system best, e.g. &quot;john-omp&quot; to take advantage of multiple CPUs and/or CPU cores.&lt;/p&gt; 
&lt;h2&gt;Features.&lt;/h2&gt; 
&lt;p&gt;John the Ripper is designed to be both feature-rich and fast. It combines several cracking modes in one program and is fully configurable for your particular needs (you can even define a custom cracking mode using the built-in compiler supporting a subset of C). Also, John is available for several different platforms which enables you to use the same cracker everywhere (you can even continue a cracking session which you started on another platform).&lt;/p&gt; 
&lt;p&gt;Out of the box, John supports (and autodetects) the following Unix crypt(3) hash types: traditional DES-based, &quot;bigcrypt&quot;, BSDI extended DES-based, FreeBSD MD5-based (also used on Linux and in Cisco IOS), and OpenBSD Blowfish-based (now also used on some Linux distributions and supported by recent versions of Solaris). Also supported out of the box are Kerberos/AFS and Windows LM (DES-based) hashes, as well as DES-based tripcodes.&lt;/p&gt; 
&lt;p&gt;When running on Linux distributions with glibc 2.7+, John 1.7.6+ additionally supports (and autodetects) SHA-crypt hashes (which are actually used by recent versions of Fedora and Ubuntu), with optional OpenMP parallelization (requires GCC 4.2+, needs to be explicitly enabled at compile-time by uncommenting the proper OMPFLAGS line near the beginning of the Makefile).&lt;/p&gt; 
&lt;p&gt;Similarly, when running on recent versions of Solaris, John 1.7.6+ supports and autodetects SHA-crypt and SunMD5 hashes, also with optional OpenMP parallelization (requires GCC 4.2+ or recent Sun Studio, needs to be explicitly enabled at compile-time by uncommenting the proper OMPFLAGS line near the beginning of the Makefile and at runtime by setting the OMP_NUM_THREADS environment variable to the desired number of threads).&lt;/p&gt; 
&lt;p&gt;&quot;-jumbo&quot; versions add support for hundreds of additional hash and cipher types, including fast built-in implementations of SHA-crypt and SunMD5, Windows NTLM (MD4-based) password hashes, various macOS and Mac OS X user password hashes, fast hashes such as raw MD5, SHA-1, SHA-256, and SHA-512 (which many &quot;web applications&quot; historically misuse for passwords), various other &quot;web application&quot; password hashes, various SQL and LDAP server password hashes, and lots of other hash types, as well as many non-hashes such as SSH private keys, S/Key skeykeys files, Kerberos TGTs, encrypted filesystems such as macOS .dmg files and &quot;sparse bundles&quot;, encrypted archives such as ZIP (classic PKZIP and WinZip/AES), RAR, and 7z, encrypted document files such as PDF and Microsoft Office&#39;s - and these are just some examples. To load some of these larger files for cracking, a corresponding bundled *2john program should be used first, and then its output fed into JtR -jumbo.&lt;/p&gt; 
&lt;h2&gt;Graphical User Interface (GUI).&lt;/h2&gt; 
&lt;p&gt;There is an official GUI for John the Ripper: Johnny.&lt;/p&gt; 
&lt;p&gt;Despite the fact that Johnny is oriented onto JtR core, all basic functionality is supposed to work in all versions, including jumbo.&lt;/p&gt; 
&lt;p&gt;Johnny is a separate program, therefore you need to have John the Ripper installed in order to use it.&lt;/p&gt; 
&lt;p&gt;More information about Johnny and its releases is on the wiki:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://openwall.info/wiki/john/johnny&quot;&gt;https://openwall.info/wiki/john/johnny&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation.&lt;/h2&gt; 
&lt;p&gt;The rest of documentation is located in separate files, listed here in the recommended order of reading:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/INSTALL&quot;&gt;INSTALL&lt;/a&gt; - installation instructions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/OPTIONS&quot;&gt;OPTIONS&lt;/a&gt; - command line options and additional utilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/MODES&quot;&gt;MODES&lt;/a&gt; - cracking modes: what they are&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CONFIG&quot;&gt;CONFIG&lt;/a&gt; (*) - how to customize&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/RULES&quot;&gt;RULES&lt;/a&gt; (*) - wordlist rules syntax&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt; (*) - defining an external mode&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; - usage examples - strongly recommended&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/FAQ&quot;&gt;FAQ&lt;/a&gt; - guess&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CHANGES&quot;&gt;CHANGES&lt;/a&gt; (*) - history of changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CONTACT&quot;&gt;CONTACT&lt;/a&gt; (*) - how to contact the author or otherwise obtain support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CREDITS&quot;&gt;CREDITS&lt;/a&gt; (*) - credits&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/LICENSE&quot;&gt;LICENSE&lt;/a&gt; - copyrights and licensing terms&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/COPYING&quot;&gt;COPYING&lt;/a&gt; - GNU GPL version 2, as referenced by LICENSE above&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(*) most users can safely skip these.&lt;/p&gt; 
&lt;p&gt;There are a lot of additional documentation files in jumbo&#39;s &quot;doc&quot; directory, which you&#39;ll also want to explore.&lt;/p&gt; 
&lt;p&gt;Happy reading!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FreeRTOS/FreeRTOS</title>
      <link>https://github.com/FreeRTOS/FreeRTOS</link>
      <description>&lt;p&gt;&#39;Classic&#39; FreeRTOS distribution. Started as Git clone of FreeRTOS SourceForge SVN repo. Submodules the kernel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS/tree/202411.00&quot;&gt;FreeRTOS 202411.00&lt;/a&gt; release updates FreeRTOS Kernel, FreeRTOS+TCP, coreMQTT, corePKCS11, coreHTTP, coreJSON, AWS IoT Over-the-air-Updates (OTA), AWS IoT Device Shadow, AWS IoT Jobs, AWS IoT Device Defender, Backoff Algorithm, AWS IoT Fleet Provisioning, coreSNTP, SigV4, and FreeRTOS Cellular Interface libraries to their &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-LTS/raw/202406-LTS/CHANGELOG.md&quot;&gt;202406-LTS&lt;/a&gt; versions. It also updates coreMQTT Agent to v1.3.0 and MbedTLS to v3.5.1. This release also adds ARMv7-R No_GIC Port Demo, ARMv7-R MPU Port Demos and FreeRTOS_Plus_TCP_IPv6_Demo Windows Simulator Demo. Additionally, all WinSim Demos are updated to use TLSv1.3. This release also updates WolfSSL to version v5.6.4.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS/tree/202212.00&quot;&gt;FreeRTOS 202212.00&lt;/a&gt; release updates FreeRTOS Kernel, FreeRTOS+TCP, coreMQTT, corePKCS11, coreHTTP, coreJSON, AWS IoT Over-the-air-Updates (OTA), AWS IoT Device Shadow, AWS IoT Jobs, AWS IoT Device Defender, Backoff Algorithm, AWS IoT Fleet Provisioning, coreSNTP, SigV4, and FreeRTOS Cellular Interface libraries to their &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-LTS/raw/202210-LTS/CHANGELOG.md&quot;&gt;LTS 2.0&lt;/a&gt; versions. It also updates coreMQTT Agent to v1.2.0 to be compatible with coreMQTT v2.X.X, and updates MbedTLS to v3.2.1. This release also adds Visual Studio static library projects for the FreeRTOS Kernel, FreeRTOS+TCP, Logging, MbedTLS, coreHTTP, and corePKCS11. With the addition of the static library projects, all Visual Studio projects have been updated to use them. Additionally, all demos dependent on coreMQTT have been updated to work with coreMQTT v2.X.X.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.freertos.org&quot;&gt;FreeRTOS.org&lt;/a&gt; website contains a &lt;a href=&quot;https://www.freertos.org/Documentation/01-FreeRTOS-quick-start/01-Beginners-guide/02-Quick-start-guide&quot;&gt;FreeRTOS Kernel Quick Start Guide&lt;/a&gt;, a &lt;a href=&quot;https://www.freertos.org/RTOS_ports.html&quot;&gt;list of supported devices and compilers&lt;/a&gt;, the &lt;a href=&quot;https://www.freertos.org/Documentation/02-Kernel/04-API-references/01-Task-creation/00-TaskHandle&quot;&gt;API reference&lt;/a&gt;, and many other resources.&lt;/p&gt; 
&lt;h3&gt;Getting help&lt;/h3&gt; 
&lt;p&gt;You can use your Github login to get support from both the FreeRTOS community and directly from the primary FreeRTOS developers on our &lt;a href=&quot;https://forums.freertos.org&quot;&gt;active support forum&lt;/a&gt;. The &lt;a href=&quot;https://www.freertos.org/Why-FreeRTOS/FAQs&quot;&gt;FAQ&lt;/a&gt; provides another support resource.&lt;/p&gt; 
&lt;h2&gt;Cloning this repository&lt;/h2&gt; 
&lt;p&gt;This repo uses &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Submodules&quot;&gt;Git Submodules&lt;/a&gt; to bring in dependent components.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you download the ZIP file provided by the GitHub UI, you will not get the contents of the submodules. (The ZIP file is also not a valid git repository)&lt;/p&gt; 
&lt;p&gt;If using Windows, because this repository and its submodules contain symbolic links, set &lt;code&gt;core.symlinks&lt;/code&gt; to true with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git config --global core.symlinks true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to this, either enable &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/apps/get-started/enable-your-device-for-development&quot;&gt;Developer Mode&lt;/a&gt; or, whenever using a git command that writes to the system (e.g. &lt;code&gt;git pull&lt;/code&gt;, &lt;code&gt;git clone&lt;/code&gt;, and &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;), use a console elevated as administrator so that git can properly create symbolic links for this repository. Otherwise, symbolic links will be written as normal files with the symbolic links&#39; paths in them as text. &lt;a href=&quot;https://blogs.windows.com/windowsdeveloper/2016/12/02/symlinks-windows-10/&quot;&gt;This&lt;/a&gt; gives more explanation.&lt;/p&gt; 
&lt;p&gt;To clone using HTTPS:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/FreeRTOS/FreeRTOS.git --recurse-submodules
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using SSH:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone git@github.com:FreeRTOS/FreeRTOS.git --recurse-submodules
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have downloaded the repo without using the &lt;code&gt;--recurse-submodules&lt;/code&gt; argument, you need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Repository structure&lt;/h2&gt; 
&lt;p&gt;This repository contains the FreeRTOS Kernel, a number of supplementary libraries including the LTS ones, and a comprehensive set of example projects. Many libraries (including the FreeRTOS kernel) are included as Git submodules from their own Git repositories.&lt;/p&gt; 
&lt;h3&gt;Kernel source code and example projects&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;FreeRTOS/Source&lt;/code&gt; contains the FreeRTOS kernel source code (submoduled from &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-Kernel&quot;&gt;https://github.com/FreeRTOS/FreeRTOS-Kernel&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;FreeRTOS/Demo&lt;/code&gt; contains pre-configured example projects that demonstrate the FreeRTOS kernel executing on different hardware platforms and using different compilers.&lt;/p&gt; 
&lt;h3&gt;Supplementary library source code and example projects&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;FreeRTOS-Plus/Source&lt;/code&gt; contains source code for additional FreeRTOS component libraries, as well as select partner provided libraries. These subdirectories contain further readme files and links to documentation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;FreeRTOS-Plus/Demo&lt;/code&gt; contains pre-configured example projects that demonstrate the FreeRTOS kernel used with the additional FreeRTOS component libraries.&lt;/p&gt; 
&lt;h2&gt;Previous releases&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS/releases&quot;&gt;Releases&lt;/a&gt; contains older FreeRTOS releases.&lt;/p&gt; 
&lt;h2&gt;FreeRTOS Lab Projects&lt;/h2&gt; 
&lt;p&gt;FreeRTOS Lab projects are libraries and demos that are fully functional, but may be experimental or undergoing optimizations and refactorization to improve memory usage, modularity, documentation, demo usability, or test coverage.&lt;/p&gt; 
&lt;p&gt;Most FreeRTOS Lab libraries can be found in the &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-Labs&quot;&gt;FreeRTOS-Labs repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A number of FreeRTOS Lab Demos can be found in the &lt;a href=&quot;https://github.com/FreeRTOS&quot;&gt;FreeRTOS Github Organization&lt;/a&gt; by searching for &quot;Lab&quot; or following &lt;a href=&quot;https://github.com/FreeRTOS?q=Lab&amp;amp;type=&amp;amp;language=&quot;&gt;this link&lt;/a&gt; to the search results.&lt;/p&gt; 
&lt;h2&gt;coreMQTT Agent Demos&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/FreeRTOS/coreMQTT-Agent-Demos&quot;&gt;FreeRTOS/coreMQTT-Agent-Demos&lt;/a&gt; repository contains demos to showcase use of the &lt;a href=&quot;https://github.com/FreeRTOS/coreMQTT-Agent&quot;&gt;coreMQTT-Agent&lt;/a&gt; library to share an MQTT connection between multiple application tasks.&lt;/p&gt; 
&lt;p&gt;The demos show a single MQTT connection usage between multiple application tasks for interacting with AWS services (including &lt;a href=&quot;https://docs.aws.amazon.com/freertos/latest/userguide/freertos-ota-dev.html&quot;&gt;Over-the-air-Updates&lt;/a&gt;, &lt;a href=&quot;https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html&quot;&gt;Device Shadow&lt;/a&gt;, &lt;a href=&quot;https://docs.aws.amazon.com/iot/latest/developerguide/device-defender.html&quot;&gt;Device Defender&lt;/a&gt;) alongside performing simple Publish-Subscribe operations.&lt;/p&gt; 
&lt;h2&gt;CBMC&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;FreeRTOS/Test/CBMC/proofs&lt;/code&gt; directory contains CBMC proofs.&lt;/p&gt; 
&lt;p&gt;To learn more about CBMC and proofs specifically, review the training material &lt;a href=&quot;https://model-checking.github.io/cbmc-training&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In order to run these proofs you will need to install CBMC and other tools by following the instructions &lt;a href=&quot;https://model-checking.github.io/cbmc-training/installation.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>screetsec/TheFatRat</title>
      <link>https://github.com/screetsec/TheFatRat</link>
      <description>&lt;p&gt;Thefatrat a massive exploiting tool : Easy tool to generate backdoor and easy tool to post exploitation attack like browser attack and etc . This tool compiles a malware with popular payload and then the compiled malware can be execute on windows, android, mac . The malware that created with this tool also have an ability to bypass most AV softw…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TheFatRat&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TheFatRat-1.9.8-brightgreen.svg?maxAge=259200&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Codename-Target-red.svg?maxAge=259200&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Release-Testing-brightgreen.svg?sanitize=true&quot; alt=&quot;Stage&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Supported_OS-Linux-orange.svg?sanitize=true&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Available-BlackArch-red.svg?maxAge=259200&quot; alt=&quot;Available&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ManhNho/CEHv10/tree/master/Slides&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CEHv10-eccouncil-blue.svg?maxAge=259200&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-blue.svg?style=flat&quot; alt=&quot;Contributions Welcome&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;A Massive Exploiting Tool&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17976841/65820028-6ae17e00-e24e-11e9-894f-35836481cc2c.png&quot; alt=&quot;Banner&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TheFatRat&lt;/strong&gt; is an exploiting tool which compiles a malware with famous payload, and then the compiled maware can be executed on Linux , Windows , Mac and Android. &lt;strong&gt;TheFatRat&lt;/strong&gt; Provides An Easy way to create Backdoors and Payload which can bypass most anti-virus.&lt;/p&gt; 
&lt;h2&gt;Information&lt;/h2&gt; 
&lt;p&gt;This tool is for educational purpose only, usage of TheFatRat for attacking targets without prior mutual consent is illegal. Developers assume no liability and are not responsible for any misuse or damage cause by this program.&lt;/p&gt; 
&lt;h2&gt;Features !&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully Automating MSFvenom &amp;amp; Metasploit.&lt;/li&gt; 
 &lt;li&gt;Local or remote listener Generation.&lt;/li&gt; 
 &lt;li&gt;Easily Make Backdoor by category Operating System.&lt;/li&gt; 
 &lt;li&gt;Generate payloads in Various formats.&lt;/li&gt; 
 &lt;li&gt;Bypass anti-virus backdoors.&lt;/li&gt; 
 &lt;li&gt;File pumper that you can use for increasing the size of your files.&lt;/li&gt; 
 &lt;li&gt;The ability to detect external IP &amp;amp; Interface address .&lt;/li&gt; 
 &lt;li&gt;Automatically creates AutoRun files for USB / CDROM exploitation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;But it&#39;s shit! And your implementation sucks!&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Yes, you&#39;re probably correct. Feel free to &quot;Not use it&quot; and there is a pull button to &quot;Make it better&quot;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Instructions on how to install &lt;em&gt;TheFatRat&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Screetsec/TheFatRat.git
cd TheFatRat
chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd TheFatRat
./update &amp;amp;&amp;amp; chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Troubleshoot on TheFatRat&lt;/h3&gt; 
&lt;p&gt;chk_tools script to use in case of problems in setup.sh of fatrat this script will check if everything is in the right version to run fatrat and will also provide you a solution for the problem&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd TheFatRat
chmod +x chk_tools 
./chk_tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools Overview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Front View&lt;/th&gt; 
   &lt;th&gt;Sample Feature&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17976841/25420100/9ee12cf6-2a80-11e7-8dfa-c2e3cfe71366.png&quot; alt=&quot;Index&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17976841/65820886-91a4b200-e258-11e9-9a00-1e5905f6be16.jpg&quot; alt=&quot;f&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation Available in Modules CEH v9 and V10 , Download source here 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/khanhnnvn/CEHv10/raw/master/Labs/CEHv10%20Module%2006%20System%20Hacking.pdf&quot;&gt;CEHv10 Module 06 System Hacking.pdf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/khanhnnvn/CEHv10/raw/master/Labs/CEHv10%20Module%2017%20Hacking%20Mobile%20Platforms.pdf&quot;&gt;CEHv10 Module 17 Hacking Mobile Platforms.pdf&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Published in International Journal of Cyber-Security and Digital Forensics 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/publication/323574673_MALWARE_ANALYSIS_OF_BACKDOOR_CREATOR_FATRAT&quot;&gt;Malware Analysis Of Backdoor Creator : TheFatRat&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Youtube Videos 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FsSgJFxyzFQ&quot;&gt;How To Download &amp;amp; Install TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NCsrcqhUBCc&amp;amp;feature=youtu.be&amp;amp;list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8&quot;&gt;TheFatRat 1.9.6 - Trodebi ( Embed Trojan into Debian Package )&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bFXVAXRXE9Q&quot;&gt;hacking windows 10 with TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FlXMslSjnGw&quot;&gt;Hacking Windows using TheFatRat + Apache2 Server + Ettercap + Metasploit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lglOXojT84M&quot;&gt;Hacking with a Microsoft Office Word Document from TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=pbvg7pgxVjo&quot;&gt;XSS to powershell attack and bypass Antivirus using BeEF + TheFatRat + Metasploit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XLNigYZ5-fM&quot;&gt;TheFatRat - Hacking Over WAN - Embedding Payload in Original Android APK - Without Port Forwarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=C_Og6LnEZSg&quot;&gt;How To Automatically Embed Payloads In APK&#39;s - Evil-Droid, Thefatrat &amp;amp; Apkinjector&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VPl1TMCAIy8&quot;&gt;Bind FUD Payload with JPG and Hack over WAN with TheFatRat&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;All notable changes to this project will be documented in this &lt;a href=&quot;https://github.com/Screetsec/thefatrat/raw/master/CHANGELOG.md&quot;&gt;file&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;About issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://github.com/Screetsec/TheFatRat/raw/master/issues.md&quot;&gt;document&lt;/a&gt; before making an issue&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternative Best Tool - Generating Backdoor &amp;amp; Bypass&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Veil-Framework/Veil&quot;&gt;Veil-Framework /Veil&lt;/a&gt; - Veil Framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shellterproject.com/download/&quot;&gt;Shellter&lt;/a&gt; - Shellter AV Evasion Artware&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trustedsec/unicorn&quot;&gt;Unicorn&lt;/a&gt; - Trustedsec&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/g0tmi1k/msfpc&quot;&gt;MSFvenom Payload Creator (MSFPC)&lt;/a&gt; - g0tmi1k&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r00t-3xp10it/venom&quot;&gt;Venom&lt;/a&gt; - Pedro Ubuntu&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oddcod3/Phantom-Evasion&quot;&gt;Phantom-Evasion&lt;/a&gt; - Diego Cornacchini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits &amp;amp; Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/&quot;&gt;Offensive Security&lt;/a&gt; - Offensive Security&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dracos-linux.org/&quot;&gt;dracOs Linux&lt;/a&gt; - Penetration Testing OS From Indonesia&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peterpt&quot;&gt;peterpt&lt;/a&gt; - Maintainer &amp;amp; Contributor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dana-at-cp/backdoor-apk&quot;&gt;Dana James Traversie&lt;/a&gt; - backdoor_apk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/z0noxz/powerstager&quot;&gt;z0noxz&lt;/a&gt; - Powerstager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trustedsec/unicorn&quot;&gt;TrustedSec&lt;/a&gt; - Unicorn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rsmudge&quot;&gt;Raphael Mudge&lt;/a&gt; - External Source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://astr0baby.wordpress.com&quot;&gt;astr0baby&lt;/a&gt; - Reference Source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ngesec.id/&quot;&gt;NgeSEC&lt;/a&gt; Community&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gauli.net/&quot;&gt;Gauli(dot)Net&lt;/a&gt; - Lab Penetration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;TheFatRat is made with 🖤 by Edo Maland &amp;amp; All &lt;a href=&quot;https://github.com/Screetsec/TheFatRat/graphs/contributors&quot;&gt;Contributors&lt;/a&gt;. See the &lt;strong&gt;License&lt;/strong&gt; file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThrowTheSwitch/Unity</title>
      <link>https://github.com/ThrowTheSwitch/Unity</link>
      <description>&lt;p&gt;Simple unit testing for C&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity Test &lt;img src=&quot;https://github.com/ThrowTheSwitch/Unity/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Copyright (c) 2007 - 2024 Unity Project by Mike Karlesky, Mark VanderVoord, and Greg Williams&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to the Unity Test Project, one of the main projects of ThrowTheSwitch.org. Unity Test is a unit testing framework built for C, with a focus on working with embedded toolchains.&lt;/p&gt; 
&lt;p&gt;This project is made to test code targetting microcontrollers big and small. The core project is a single C file and a pair of headers, allowing it to be added to your existing build setup without too much headache. You may use any compiler you wish, and may use most existing build systems including Make, CMake, etc. If you&#39;d like to leave the hard work to us, you might be interested in Ceedling, a build tool also by ThrowTheSwitch.org.&lt;/p&gt; 
&lt;p&gt;If you&#39;re new to Unity, we encourage you to tour the &lt;a href=&quot;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityGettingStartedGuide.md&quot;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also find the &lt;a href=&quot;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityChangeLog.md&quot;&gt;change log&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityKnownIssues.md&quot;&gt;known issues&lt;/a&gt; in our documentation.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/&quot;&gt;docs&lt;/a&gt; folder contains a &lt;a href=&quot;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityGettingStartedGuide.md&quot;&gt;getting started guide&lt;/a&gt; and much more tips about using Unity.&lt;/p&gt; 
&lt;h2&gt;Unity Assertion Summary&lt;/h2&gt; 
&lt;p&gt;For the full list, see &lt;a href=&quot;https://raw.githubusercontent.com/ThrowTheSwitch/Unity/master/docs/UnityAssertionsReference.md&quot;&gt;UnityAssertionsReference.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Basic Validity Tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_TRUE(condition)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Evaluates whatever code is in condition and fails if it evaluates to false&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_FALSE(condition)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Evaluates whatever code is in condition and fails if it evaluates to true&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT(condition)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another way of calling &lt;code&gt;TEST_ASSERT_TRUE&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_UNLESS(condition)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another way of calling &lt;code&gt;TEST_ASSERT_FALSE&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_FAIL()
TEST_FAIL_MESSAGE(message)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This test is automatically marked as a failure. The message is output stating why.&lt;/p&gt; 
&lt;h3&gt;Numerical Assertions: Integers&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_INT(expected, actual)
TEST_ASSERT_EQUAL_INT8(expected, actual)
TEST_ASSERT_EQUAL_INT16(expected, actual)
TEST_ASSERT_EQUAL_INT32(expected, actual)
TEST_ASSERT_EQUAL_INT64(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two integers for equality and display errors as signed integers. A cast will be performed to your natural integer size so often this can just be used. When you need to specify the exact size, you can use a specific version.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_UINT(expected, actual)
TEST_ASSERT_EQUAL_UINT8(expected, actual)
TEST_ASSERT_EQUAL_UINT16(expected, actual)
TEST_ASSERT_EQUAL_UINT32(expected, actual)
TEST_ASSERT_EQUAL_UINT64(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two integers for equality and display errors as unsigned integers. Like INT, there are variants for different sizes also.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_HEX(expected, actual)
TEST_ASSERT_EQUAL_HEX8(expected, actual)
TEST_ASSERT_EQUAL_HEX16(expected, actual)
TEST_ASSERT_EQUAL_HEX32(expected, actual)
TEST_ASSERT_EQUAL_HEX64(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compares two integers for equality and display errors as hexadecimal. Like the other integer comparisons, you can specify the size... here the size will also affect how many nibbles are shown (for example, &lt;code&gt;HEX16&lt;/code&gt; will show 4 nibbles).&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another way of calling TEST_ASSERT_EQUAL_INT&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_INT_WITHIN(delta, expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that the actual value is within plus or minus delta of the expected value. This also comes in size specific variants.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_GREATER_THAN(threshold, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that the actual value is greater than the threshold. This also comes in size specific variants.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_LESS_THAN(threshold, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that the actual value is less than the threshold. This also comes in size specific variants.&lt;/p&gt; 
&lt;h3&gt;Arrays&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;_ARRAY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can append &lt;code&gt;_ARRAY&lt;/code&gt; to any of these macros to make an array comparison of that type. Here you will need to care a bit more about the actual size of the value being checked. You will also specify an additional argument which is the number of elements to compare. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_HEX8_ARRAY(expected, actual, elements)

_EACH_EQUAL
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another array comparison option is to check that EVERY element of an array is equal to a single expected value. You do this by specifying the EACH_EQUAL macro. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EACH_EQUAL_INT32(expected, actual, elements)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Numerical Assertions: Bitwise&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BITS(mask, expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use an integer mask to specify which bits should be compared between two other integers. High bits in the mask are compared, low bits ignored.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BITS_HIGH(mask, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use an integer mask to specify which bits should be inspected to determine if they are all set high. High bits in the mask are compared, low bits ignored.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BITS_LOW(mask, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use an integer mask to specify which bits should be inspected to determine if they are all set low. High bits in the mask are compared, low bits ignored.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BIT_HIGH(bit, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Test a single bit and verify that it is high. The bit is specified 0-31 for a 32-bit integer.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_BIT_LOW(bit, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Test a single bit and verify that it is low. The bit is specified 0-31 for a 32-bit integer.&lt;/p&gt; 
&lt;h3&gt;Numerical Assertions: Floats&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_FLOAT_WITHIN(delta, expected, actual)
TEST_ASSERT_DOUBLE_WITHIN(delta, expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that the actual value is within plus or minus delta of the expected value.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_FLOAT_NOT_WITHIN(delta, expected, actual)
TEST_ASSERT_DOUBLE_NOT_WITHIN(delta, expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that the actual value is NOT within plus or minus delta of the expected value.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_FLOAT(expected, actual)
TEST_ASSERT_EQUAL_DOUBLE(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that two floating point values are &quot;equal&quot; within a small % delta of the expected value.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_NOT_EQUAL_FLOAT(expected, actual)
TEST_ASSERT_NOT_EQUAL_DOUBLE(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that two floating point values are NOT &quot;equal&quot; within a small % delta of the expected value.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_LESS_THAN_FLOAT(threshold, actual)
TEST_ASSERT_LESS_THAN_DOUBLE(threshold, actual)
TEST_ASSERT_GREATER_THAN_FLOAT(threshold, actual)
TEST_ASSERT_GREATER_THAN_DOUBLE(threshold, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Asserts that the actual value is less than or greater than the threshold.&lt;/p&gt; 
&lt;p&gt;There are also &lt;code&gt;LESS_OR_EQUAL&lt;/code&gt; and &lt;code&gt;GREATER_OR_EQUAL&lt;/code&gt; variations. These obey the same rules for equality as do &lt;code&gt;TEST_ASSERT_EQUAL_FLOAT&lt;/code&gt; and &lt;code&gt;TEST_ASSERT_EQUAL_DOUBLE&lt;/code&gt;: If the two values are within a small % delta of the expected value, the assertion will pass.&lt;/p&gt; 
&lt;h3&gt;String Assertions&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING(expected, actual)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two null-terminate strings. Fail if any character is different or if the lengths are different.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING_LEN(expected, actual, len)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two strings. Fail if any character is different, stop comparing after len characters.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING_MESSAGE(expected, actual, message)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two null-terminate strings. Fail if any character is different or if the lengths are different. Output a custom message on failure.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_STRING_LEN_MESSAGE(expected, actual, len, message)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two strings. Fail if any character is different, stop comparing after len characters. Output a custom message on failure.&lt;/p&gt; 
&lt;h3&gt;Pointer Assertions&lt;/h3&gt; 
&lt;p&gt;Most pointer operations can be performed by simply using the integer comparisons above. However, a couple of special cases are added for clarity.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_NULL(pointer)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fails if the pointer is not equal to NULL&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_NOT_NULL(pointer)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fails if the pointer is equal to NULL&lt;/p&gt; 
&lt;h3&gt;Memory Assertions&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;TEST_ASSERT_EQUAL_MEMORY(expected, actual, len)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare two blocks of memory. This is a good generic assertion for types that can&#39;t be coerced into acting like standard types... but since it&#39;s a memory compare, you have to be careful that your data types are packed.&lt;/p&gt; 
&lt;h3&gt;_MESSAGE&lt;/h3&gt; 
&lt;p&gt;You can append &lt;code&gt;\_MESSAGE&lt;/code&gt; to any of the macros to make them take an additional argument. This argument is a string that will be printed at the end of the failure strings. This is useful for specifying more information about the problem.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HandBrake/HandBrake</title>
      <link>https://github.com/HandBrake/HandBrake</link>
      <description>&lt;p&gt;HandBrake&#39;s main development repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HandBrake &lt;a href=&quot;https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22macOS+build%22&quot;&gt;&lt;img src=&quot;https://github.com/HandBrake/HandBrake/workflows/macOS%20build/badge.svg?sanitize=true&quot; alt=&quot;macOS Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22Windows+Build%22&quot;&gt;&lt;img src=&quot;https://github.com/HandBrake/HandBrake/workflows/Windows%20Build/badge.svg?sanitize=true&quot; alt=&quot;Windows Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22Linux+Build%22&quot;&gt;&lt;img src=&quot;https://github.com/HandBrake/HandBrake/workflows/Linux%20Build/badge.svg?sanitize=true&quot; alt=&quot;Linux Build&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;HandBrake is an open-source video transcoder available for Linux, Mac, and Windows, licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/HandBrake/HandBrake/master/LICENSE&quot;&gt;GNU General Public License (GPL) Version 2&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;HandBrake takes videos you already have and makes new ones that work on your mobile phone, tablet, TV media player, game console, computer, or web browser—nearly anything that supports modern video formats.&lt;/p&gt; 
&lt;p&gt;HandBrake works with most common video files and formats, including ones created by consumer and professional video cameras, mobile devices such as phones and tablets, game and computer screen recordings, and DVD and Blu-ray discs. HandBrake leverages tools such as FFmpeg, x264, and x265, SVT-AV1 to create new MP4, MKV or WebM video files from these &lt;em&gt;Sources&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For information on downloading, building/installing, and using HandBrake, see the official &lt;a href=&quot;https://handbrake.fr/docs&quot;&gt;HandBrake Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community Support&lt;/h2&gt; 
&lt;p&gt;For information on HandBrake&#39;s community support channels, please see &lt;a href=&quot;https://handbrake.fr/docs/en/latest/help/community-support.html&quot;&gt;Community Support&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please familiarise yourself with our &lt;a href=&quot;https://github.com/HandBrake/HandBrake/raw/master/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome most contributions. While it is our goal to allow everyone to contribute, contributions not meeting the project&#39;s goals or standards may be rejected.&lt;/p&gt; 
&lt;p&gt;Please read our &lt;a href=&quot;https://handbrake.fr/docs/en/latest/contributing/contribute.html&quot;&gt;guide to contributing&lt;/a&gt;. This will provide you with all the information you need to start contributing to the project.&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We are now accepting translations via &lt;a href=&quot;https://www.transifex.com/HandBrakeProject/public&quot;&gt;Transifex&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please read our &lt;a href=&quot;https://github.com/HandBrake/HandBrake/raw/master/TRANSLATION.markdown&quot;&gt;Translations Guide&lt;/a&gt; and follow the instructions if you are interested in joining the translation effort.&lt;/p&gt; 
&lt;h2&gt;Additional Information&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/HandBrake/HandBrake/wiki/Application-Information&quot;&gt;Application / Project Information&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/HandBrake/HandBrake/master/AUTHORS.markdown&quot;&gt;Authors&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/HandBrake/HandBrake/master/LICENSE&quot;&gt;License&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/HandBrake/HandBrake/master/NEWS.markdown&quot;&gt;News&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.macstadium.com/&quot;&gt;&lt;img width=&quot;200&quot; alt=&quot;MacStadium&quot; src=&quot;https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;and to many others who have contributed! &lt;a href=&quot;https://raw.githubusercontent.com/HandBrake/HandBrake/master/THANKS.markdown&quot;&gt;Thanks&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hathach/tinyusb</title>
      <link>https://github.com/hathach/tinyusb</link>
      <description>&lt;p&gt;An open source cross-platform USB stack for embedded system&lt;/p&gt;&lt;hr&gt;&lt;p&gt;|Build Status| |CircleCI Status| |Documentation Status| |Fuzzing Status| |License|&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;TinyUSB is funded by: Adafruit. Purchasing products from them helps to support this project.&lt;/p&gt; 
&lt;p&gt;.. figure:: docs/assets/adafruit_logo.svg :alt: Adafruit Logo :target: &lt;a href=&quot;https://www.adafruit.com&quot;&gt;https://www.adafruit.com&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;TinyUSB Project&lt;/h1&gt; 
&lt;p&gt;.. figure:: docs/assets/logo.svg :alt: TinyUSB&lt;/p&gt; 
&lt;p&gt;TinyUSB is an open-source cross-platform USB Host/Device stack for embedded system, designed to be memory-safe with no dynamic allocation and thread-safe with all interrupt events are deferred then handled in the non-ISR task function. Check out the online &lt;code&gt;documentation &amp;lt;https://docs.tinyusb.org/&amp;gt;&lt;/code&gt;__ for more details.&lt;/p&gt; 
&lt;p&gt;.. figure:: docs/assets/stack.svg :width: 500px :alt: stackup&lt;/p&gt; 
&lt;p&gt;::&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.
├── docs            # Documentation
├── examples        # Examples with make and cmake build system
├── hw
│   ├── bsp         # Supported boards source files
│   └── mcu         # Low level mcu core &amp;amp; peripheral drivers
├── lib             # Sources from 3rd party such as FreeRTOS, FatFs ...
├── src             # All sources files for TinyUSB stack itself.
├── test            # Tests: unit test, fuzzing, hardware test
└── tools           # Files used internally
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Getting started&lt;/h1&gt; 
&lt;p&gt;See the &lt;code&gt;online documentation &amp;lt;https://docs.tinyusb.org&amp;gt;&lt;/code&gt;_ for information about using TinyUSB and how it is implemented.&lt;/p&gt; 
&lt;p&gt;Check out &lt;code&gt;Getting Started&lt;/code&gt;_ guide for adding TinyUSB to your project or building the examples. If you are new to TinyUSB, we recommend starting with the &lt;code&gt;cdc_msc&lt;/code&gt; example. There is a handful of &lt;code&gt;Supported Boards&lt;/code&gt;_ that should work out of the box.&lt;/p&gt; 
&lt;p&gt;We use &lt;code&gt;GitHub Discussions &amp;lt;https://github.com/hathach/tinyusb/discussions&amp;gt;&lt;/code&gt;_ as our forum. It is a great place to ask questions and advice from the community or to discuss your TinyUSB-based projects.&lt;/p&gt; 
&lt;p&gt;For bugs and feature requests, please &lt;code&gt;raise an issue &amp;lt;https://github.com/hathach/tinyusb/issues&amp;gt;&lt;/code&gt;_ and follow the templates there.&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;Porting&lt;/code&gt;_ guide for adding support for new MCUs and boards.&lt;/p&gt; 
&lt;h1&gt;Device Stack&lt;/h1&gt; 
&lt;p&gt;Supports multiple device configurations by dynamically changing USB descriptors, low power functions such like suspend, resume, and remote wakeup. The following device classes are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Audio Class 2.0 (UAC2)&lt;/li&gt; 
 &lt;li&gt;Bluetooth Host Controller Interface (BTH HCI)&lt;/li&gt; 
 &lt;li&gt;Communication Device Class (CDC)&lt;/li&gt; 
 &lt;li&gt;Device Firmware Update (DFU): DFU mode (WIP) and Runtime&lt;/li&gt; 
 &lt;li&gt;Human Interface Device (HID): Generic (In &amp;amp; Out), Keyboard, Mouse, Gamepad etc ...&lt;/li&gt; 
 &lt;li&gt;Mass Storage Class (MSC): with multiple LUNs&lt;/li&gt; 
 &lt;li&gt;Musical Instrument Digital Interface (MIDI)&lt;/li&gt; 
 &lt;li&gt;Network with RNDIS, Ethernet Control Model (ECM), Network Control Model (NCM)&lt;/li&gt; 
 &lt;li&gt;Test and Measurement Class (USBTMC)&lt;/li&gt; 
 &lt;li&gt;Video class 1.5 (UVC): work in progress&lt;/li&gt; 
 &lt;li&gt;Vendor-specific class support with generic In &amp;amp; Out endpoints. Can be used with MS OS 2.0 compatible descriptor to load winUSB driver without INF file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WebUSB &amp;lt;https://github.com/WICG/webusb&amp;gt;&lt;/code&gt;__ with vendor-specific class&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have a special requirement, &lt;code&gt;usbd_app_driver_get_cb()&lt;/code&gt; can be used to write your own class driver without modifying the stack. Here is how the RPi team added their reset interface &lt;code&gt;raspberrypi/pico-sdk#197 &amp;lt;https://github.com/raspberrypi/pico-sdk/pull/197&amp;gt;&lt;/code&gt;_&lt;/p&gt; 
&lt;h1&gt;Host Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Human Interface Device (HID): Keyboard, Mouse, Generic&lt;/li&gt; 
 &lt;li&gt;Mass Storage Class (MSC)&lt;/li&gt; 
 &lt;li&gt;Communication Device Class: CDC-ACM&lt;/li&gt; 
 &lt;li&gt;Vendor serial over USB: FTDI, CP210x, CH34x, PL2303&lt;/li&gt; 
 &lt;li&gt;Hub with multiple-level support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Similar to the Device Stack, if you have a special requirement, &lt;code&gt;usbh_app_driver_get_cb()&lt;/code&gt; can be used to write your own class driver without modifying the stack.&lt;/p&gt; 
&lt;h1&gt;Power Delivery Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Power Delivery 3.0 (PD3.0) with USB Type-C support (WIP)&lt;/li&gt; 
 &lt;li&gt;Super early stage, only for testing purpose&lt;/li&gt; 
 &lt;li&gt;Only support STM32 G4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;OS Abstraction layer&lt;/h1&gt; 
&lt;p&gt;TinyUSB is completely thread-safe by pushing all Interrupt Service Request (ISR) events into a central queue, then processing them later in the non-ISR context task function. It also uses semaphore/mutex to access shared resources such as Communication Device Class (CDC) FIFO. Therefore the stack needs to use some of the OS&#39;s basic APIs. Following OSes are already supported out of the box.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;No OS&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRTOS&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RT-Thread &amp;lt;https://github.com/RT-Thread/rt-thread&amp;gt;&lt;/code&gt;&lt;em&gt;: &lt;code&gt;repo &amp;lt;https://github.com/RT-Thread-packages/tinyusb&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mynewt&lt;/strong&gt; Due to the newt package build system, Mynewt examples are better to be on its &lt;code&gt;own repo &amp;lt;https://github.com/hathach/mynewt-tinyusb-example&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported CPUs&lt;/h1&gt; 
&lt;p&gt;+--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Manufacturer | Family | Device | Host | Highspeed | Driver | Note | +==============+=============================+========+======+===========+========================+===================+ | Allwinner | F1C100s/F1C200s | ✔ | | ✔ | sunxi | musb variant | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Analog | MAX3421E | | ✔ | ✖ | max3421 | via SPI | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | MAX32 650, 666, 690, | ✔ | | ✔ | musb | 1-dir ep | | | MAX78002 | | | | | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Artery AT32 | F403a_407, F413 | ✔ | | | fsdev | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | F415, F435_437, F423, F425 | ✔ | ✔ | | dwc2 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | F402_F405 | ✔ | ✔ | ✔ | dwc2 | F405 is HS | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Brigetek | FT90x | ✔ | | ✔ | ft9xx | 1-dir ep | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Broadcom | BCM2711, BCM2837 | ✔ | | ✔ | dwc2 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Dialog | DA1469x | ✔ | ✖ | ✖ | da146xx | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Espressif | S2, S3 | ✔ | ✔ | ✖ | dwc2 or esp32sx | | | ESP32 +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | P4 | ✔ | ✔ | ✔ | dwc2 | | +--------------+----+------------------------+--------+------+-----------+------------------------+-------------------+ | GigaDevice | GD32VF103 | ✔ | | ✖ | dwc2 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Infineon | XMC4500 | ✔ | ✔ | ✖ | dwc2 | | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | MicroChip | SAM | D11, D21, L21, L22 | ✔ | | ✖ | samd | | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | D51, E5x | ✔ | | ✖ | samd | | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | G55 | ✔ | | ✖ | samg | 1-dir ep | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | E70,S70,V70,V71 | ✔ | | ✔ | samx7x | 1-dir ep | | +-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | | PIC | 24 | ✔ | | | pic | ci_fs variant | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | 32 mm, mk, mx | ✔ | | | pic | ci_fs variant | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | dsPIC33 | ✔ | | | pic | ci_fs variant | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | 32mz | ✔ | | | pic32mz | musb variant | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | Mind Montion | mm32 | ✔ | | ✖ | mm32f327x_otg | ci_fs variant | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | NordicSemi | nRF 52833, 52840, 5340 | ✔ | ✖ | ✖ | nrf5x | only ep8 is ISO | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Nuvoton | NUC120 | ✔ | ✖ | ✖ | nuc120 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | NUC121/NUC125 | ✔ | ✖ | ✖ | nuc121 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | NUC126 | ✔ | ✖ | ✖ | nuc121 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | NUC505 | ✔ | | ✔ | nuc505 | | +--------------+---------+-------------------+--------+------+-----------+------------------------+-------------------+ | NXP | iMXRT | RT 10xx, 11xx | ✔ | ✔ | ✔ | ci_hs | | | +---------+-------------------+--------+------+-----------+------------------------+-------------------+ | | Kinetis | KL | ✔ | ⚠ | ✖ | ci_fs, khci | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | K32L2 | ✔ | | ✖ | khci | ci_fs variant | | +---------+-------------------+--------+------+-----------+------------------------+-------------------+ | | LPC | 11u, 13, 15 | ✔ | ✖ | ✖ | lpc_ip3511 | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 17, 40 | ✔ | ⚠ | ✖ | lpc17_40 | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 18, 43 | ✔ | ✔ | ✔ | ci_hs | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 51u | ✔ | ✖ | ✖ | lpc_ip3511 | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 54, 55 | ✔ | | ✔ | lpc_ip3511 | | | +---------+-------------------+--------+------+-----------+------------------------+-------------------+ | | MCX | N9 | ✔ | | ✔ | ci_fs, ci_hs | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | A15 | ✔ | | | ci_fs | | +--------------+---------+-------------------+--------+------+-----------+------------------------+-------------------+ | Raspberry Pi | RP2040, RP2350 | ✔ | ✔ | ✖ | rp2040, pio_usb | | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | Renesas | RX | 63N, 65N, 72N | ✔ | ✔ | ✖ | rusb2 | | | +-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | | RA | 4M1, 4M3, 6M1 | ✔ | ✔ | ✖ | rusb2 | | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | 6M5 | ✔ | ✔ | ✔ | rusb2 | | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | Silabs | EFM32GG12 | ✔ | | ✖ | dwc2 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Sony | CXD56 | ✔ | ✖ | ✔ | cxd56 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | ST STM32 | F0, F3, L0, L1, L5, WBx5 | ✔ | ✖ | ✖ | stm32_fsdev | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | F1 | 102, 103 | ✔ | ✖ | ✖ | stm32_fsdev | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 105, 107 | ✔ | ✔ | ✖ | dwc2 | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | F2, F4, F7, H7, H7RS | ✔ | ✔ | ✔ | dwc2 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | C0, G0, H5 | ✔ | | ✖ | stm32_fsdev | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | G4 | ✔ | ✖ | ✖ | stm32_fsdev | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | L0, L1 | ✔ | ✖ | ✖ | stm32_fsdev | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | L4 | 4x2, 4x3 | ✔ | ✖ | ✖ | stm32_fsdev | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 4x5, 4x6, 4+ | ✔ | ✔ | ✖ | dwc2 | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | N6 | ✔ | ✔ | ✔ | dwc2 | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | U5 | 535, 545 | ✔ | | ✖ | stm32_fsdev | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 575, 585 | ✔ | ✔ | ✖ | dwc2 | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 59x,5Ax,5Fx,5Gx | ✔ | ✔ | ✔ | dwc2 | | +--------------+----+------------------------+--------+------+-----------+------------------------+-------------------+ | TI | MSP430 | ✔ | ✖ | ✖ | msp430x5xx | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | MSP432E4, TM4C123 | ✔ | | ✖ | musb | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | ValentyUSB | eptri | ✔ | ✖ | ✖ | eptri | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | WCH | CH32F20x | ✔ | | ✔ | ch32_usbhs | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | CH32V20x | ✔ | | ✖ | stm32_fsdev/ch32_usbfs | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | CH32V305, CH32V307 | ✔ | | ✔ | ch32_usbfs/hs | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+&lt;/p&gt; 
&lt;h2&gt;Table Legend&lt;/h2&gt; 
&lt;p&gt;========= ========================= ✔ Supported ⚠ Partial support ✖ Not supported by hardware [empty] Unknown ========= =========================&lt;/p&gt; 
&lt;p&gt;.. |Build Status| image:: &lt;a href=&quot;https://github.com/hathach/tinyusb/actions/workflows/build.yml/badge.svg&quot;&gt;https://github.com/hathach/tinyusb/actions/workflows/build.yml/badge.svg&lt;/a&gt; :target: &lt;a href=&quot;https://github.com/hathach/tinyusb/actions&quot;&gt;https://github.com/hathach/tinyusb/actions&lt;/a&gt; .. |CircleCI Status| image:: &lt;a href=&quot;https://dl.circleci.com/status-badge/img/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master.svg?style=svg&quot;&gt;https://dl.circleci.com/status-badge/img/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master.svg?style=svg&lt;/a&gt; :target: &lt;a href=&quot;https://dl.circleci.com/status-badge/redirect/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master&quot;&gt;https://dl.circleci.com/status-badge/redirect/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master&lt;/a&gt; .. |Documentation Status| image:: &lt;a href=&quot;https://readthedocs.org/projects/tinyusb/badge/?version=latest&quot;&gt;https://readthedocs.org/projects/tinyusb/badge/?version=latest&lt;/a&gt; :target: &lt;a href=&quot;https://docs.tinyusb.org/en/latest/?badge=latest&quot;&gt;https://docs.tinyusb.org/en/latest/?badge=latest&lt;/a&gt; .. |Fuzzing Status| image:: &lt;a href=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/badges/tinyusb.svg&quot;&gt;https://oss-fuzz-build-logs.storage.googleapis.com/badges/tinyusb.svg&lt;/a&gt; :target: &lt;a href=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/index.html#tinyusb&quot;&gt;https://oss-fuzz-build-logs.storage.googleapis.com/index.html#tinyusb&lt;/a&gt; .. |License| image:: &lt;a href=&quot;https://img.shields.io/badge/license-MIT-brightgreen.svg&quot;&gt;https://img.shields.io/badge/license-MIT-brightgreen.svg&lt;/a&gt; :target: &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. _Changelog: docs/info/changelog.rst .. _Contributors: CONTRIBUTORS.rst .. _Getting Started: docs/reference/getting_started.rst .. _Supported Boards: docs/reference/boards.rst .. _Dependencies: docs/reference/dependencies.rst .. _Concurrency: docs/reference/concurrency.rst .. _Contributing: docs/contributing/index.rst .. _Code of Conduct: CODE_OF_CONDUCT.rst .. _Porting: docs/contributing/porting.rst&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lvgl/lvgl</title>
      <link>https://github.com/lvgl/lvgl</link>
      <description>&lt;p&gt;Embedded graphics library to create beautiful UIs for any MCU, MPU and display type.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/lvgl&quot; target=&quot;_blank&quot;&gt;&lt;img align=&quot;left&quot; src=&quot;https://lvgl.io/github-assets/sponsor.png&quot; height=&quot;32px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_zh.md&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_pt_BR.md&quot;&gt;Português do Brasil&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_jp.md&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_he.md&quot;&gt;עברית&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &amp;nbsp; &lt;img src=&quot;https://lvgl.io/github-assets/logo-colored.png&quot; width=&quot;300px&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;&amp;nbsp; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;Light and Versatile Graphics Library&lt;/h1&gt; &amp;nbsp; 
&lt;br /&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://lvgl.io/github-assets/smartwatch-demo.gif&quot; /&gt; &amp;nbsp; &amp;nbsp; 
 &lt;img border=&quot;1px&quot; src=&quot;https://lvgl.io/github-assets/widgets-demo.gif&quot; /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://lvgl.io&quot; title=&quot;Homepage of LVGL&quot;&gt;Website &lt;/a&gt; | &lt;a href=&quot;https://docs.lvgl.io/&quot; title=&quot;Detailed documentation with 100+ examples&quot;&gt;Docs&lt;/a&gt; | &lt;a href=&quot;https://forum.lvgl.io&quot; title=&quot;Get help and help others&quot;&gt;Forum&lt;/a&gt; | &lt;a href=&quot;https://lvgl.io/demos&quot; title=&quot;Demos running in your browser&quot;&gt;Demos&lt;/a&gt; | &lt;a href=&quot;https://lvgl.io/services&quot; title=&quot;Graphics design, UI implementation and consulting&quot;&gt;Services&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;span&gt;📒&lt;/span&gt; Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mature and Well-known&lt;/strong&gt;&lt;br /&gt; LVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It&#39;s supported by industry leading vendors and projects like &amp;nbsp;Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Feature Rich&lt;/strong&gt;&lt;br /&gt; It has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;br /&gt; Our team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🚀&lt;/span&gt; Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Free and Portable&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A fully portable C (C++ compatible) library with no external dependencies.&lt;/li&gt; 
 &lt;li&gt;Can be compiled to any MCU or MPU, with any (RT)OS.&lt;/li&gt; 
 &lt;li&gt;Supports monochrome, ePaper, OLED or TFT displays, or even monitors. &lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/display/index.html&quot;&gt;Displays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Distributed under the MIT license, so you can easily use it in commercial projects too.&lt;/li&gt; 
 &lt;li&gt;Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/li&gt; 
 &lt;li&gt;OS, External memory and GPU are supported but not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Widgets, Styles, Layouts and more&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;30+ built-in &lt;a href=&quot;https://docs.lvgl.io/master/details/widgets/index.html&quot;&gt;Widgets&lt;/a&gt;: &amp;nbsp;Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.lvgl.io/master/details/common-widget-features/styles/index.html&quot;&gt;Style system&lt;/a&gt; with &amp;nbsp;~100 style properties to customize any part of the widgets in any state.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/common-widget-features/layouts/flex.html&quot;&gt;Flexbox&lt;/a&gt; and &lt;a href=&quot;https://docs.lvgl.io/master/details/common-widget-features/layouts/grid.html&quot;&gt;Grid&lt;/a&gt;-like layouts engines to automatically size and position the widgets in a responsive way.&lt;/li&gt; 
 &lt;li&gt;Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems.&lt;/li&gt; 
 &lt;li&gt;Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts.&lt;/li&gt; 
 &lt;li&gt;Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc &amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder &lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/indev.html&quot;&gt;Input devices&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/display/overview.html#how-many-displays-can-lvgl-use&quot;&gt;Multiple display&lt;/a&gt; support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Binding and Build Support&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.lvgl.io/2019-02-20/micropython-bindings&quot;&gt;MicroPython Binding&lt;/a&gt; exposes LVGL API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.lvgl.io/2022-08-24/pikascript-and-lvgl&quot;&gt;PikaScript Binding&lt;/a&gt; python on MCU lighter and easier.&lt;/li&gt; 
 &lt;li&gt;No custom build system is used. You can build LVGL as you build the other files of your project.&lt;/li&gt; 
 &lt;li&gt;Support for Make and &lt;a href=&quot;https://docs.lvgl.io/master/details/integration/building/cmake.html&quot;&gt;CMake&lt;/a&gt; is included out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html&quot;&gt;Develop on PC&lt;/a&gt; and use the same UI code on embedded hardware.&lt;/li&gt; 
 &lt;li&gt;Convert the C UI code to HTML file with our &lt;a href=&quot;https://github.com/lvgl/lv_web_emscripten&quot;&gt;Emscripten port&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Docs, Tools, and Services&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detailed &lt;a href=&quot;https://docs.lvgl.io/&quot;&gt;Documentation&lt;/a&gt; with &lt;a href=&quot;https://docs.lvgl.io/master/examples.html&quot;&gt;100+ simple examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lvgl.io/services&quot;&gt;Services&lt;/a&gt; such as User interface design, Implementation and Consulting to make UI development simpler and faster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;❤️&lt;/span&gt; Sponsor&lt;/h2&gt; 
&lt;p&gt;If LVGL saved you a lot of time and money or you just had fun using it, consider &lt;a href=&quot;https://github.com/sponsors/lvgl&quot;&gt;Supporting its Development&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How do we spend the donations?&lt;/strong&gt;&lt;br /&gt; Our goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How to donate?&lt;/strong&gt;&lt;br /&gt; We use &lt;a href=&quot;https://github.com/sponsors/lvgl&quot;&gt;GitHub Sponsors&lt;/a&gt; where you can easily send one time or recurring donations. You can also see all of our expenses in a transparent way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How to get paid for your contribution?&lt;/strong&gt;&lt;br /&gt; If someone implements or fixes an issue labeled as &lt;a href=&quot;https://github.com/lvgl/lvgl/labels/Sponsored&quot;&gt;Sponsored&lt;/a&gt; he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a &lt;a href=&quot;https://github.com/lvgl/lvgl/labels/Sponsored&quot;&gt;Sponsored&lt;/a&gt; issue saying &quot;Hi, I&#39;d like to deal with it. This is how I&#39;m planning to fix/implement it...&quot;. A work is considered ready when it&#39;s approved and merged by a maintainer. After that you can submit and expense at &lt;a href=&quot;https://opencollective.com/lvgl&quot;&gt;opencollective.com&lt;/a&gt; and you will receive the payment in a few days.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Organizations supporting LVGL&lt;/strong&gt;&lt;br /&gt; &lt;a href=&quot;https://opencollective.com/lvgl&quot;&gt;&lt;img src=&quot;https://opencollective.com/lvgl/organizations.svg?width=600&quot; alt=&quot;Sponsors of LVGL&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Individuals supporting LVGL&lt;/strong&gt;&lt;br /&gt; &lt;a href=&quot;https://opencollective.com/lvgl&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&quot; alt=&quot;Backers of LVGL&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📦&lt;/span&gt; Packages&lt;/h2&gt; 
&lt;p&gt;LVGL is available as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/framework/arduino.html&quot;&gt;Arduino library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://registry.platformio.org/libraries/lvgl/lvgl&quot;&gt;PlatformIO package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/os/zephyr.html&quot;&gt;Zephyr library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://components.espressif.com/components/lvgl/lvgl&quot;&gt;ESP-IDF(ESP32) component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nxp.com/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY&quot;&gt;NXP MCUXpresso component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/os/nuttx.html&quot;&gt;NuttX library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/os/rt-thread.html&quot;&gt;RT-Thread RTOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CMSIS-Pack&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doc.riot-os.org/group__pkg__lvgl.html#details&quot;&gt;RIOT OS package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;🤖&lt;/span&gt; Examples&lt;/h2&gt; 
&lt;p&gt;See some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor.&lt;/p&gt; 
&lt;p&gt;For more examples check out the &lt;a href=&quot;https://github.com/lvgl/lvgl/tree/master/examples&quot;&gt;Examples&lt;/a&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Hello world label&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_1.png&quot; alt=&quot;Simple Hello world label example in LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;/*Change the active screen&#39;s background color*/
lv_obj_set_style_bg_color(lv_screen_active(), lv_color_hex(0x003a57), LV_PART_MAIN);

/*Create a white label, set its text and align it to the center*/
lv_obj_t * label = lv_label_create(lv_screen_active());
lv_label_set_text(label, &quot;Hello world&quot;);
lv_obj_set_style_text_color(label, lv_color_hex(0xffffff), LV_PART_MAIN);
lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_direct=4ab7c40c35b0dc349aa2f0c3b00938d7d8e8ac9f&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Change the active screen&#39;s background color
scr = lv.screen_active()
scr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN)

# Create a white label, set its text and align it to the center
label = lv.label(lv.screen_active())
label.set_text(&quot;Hello world&quot;)
label.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN)
label.align(lv.ALIGN.CENTER, 0, 0)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Button with Click Event&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_2.gif&quot; alt=&quot;LVGL button with label example&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;lv_obj_t * button = lv_button_create(lv_screen_active()); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Add a button to the current screen*/
lv_obj_center(button); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;         /*Set its position*/
lv_obj_set_size(button, 100, 50); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Set its size*/
lv_obj_add_event_cb(button, button_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/

lv_obj_t * label = lv_label_create(button); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Add a label to the button*/
lv_label_set_text(label, &quot;Button&quot;); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Set the labels text*/
lv_obj_center(label); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Align the label to the center*/
...

void button_event_cb(lv_event_t * e)
{
&amp;nbsp; printf(&quot;Clicked\n&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=926bde43ec7af0146c486de470c53f11f167491e&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def button_event_cb(e):
&amp;nbsp; print(&quot;Clicked&quot;)

# Create a Button and a Label
button = lv.button(lv.screen_active())
button.center()
button.set_size(100, 50)
button.add_event_cb(button_event_cb, lv.EVENT.CLICKED, None)

label = lv.label(button)
label.set_text(&quot;Button&quot;)
label.center()
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Checkboxes with Layout&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_3.gif&quot; alt=&quot;Checkboxes with layout in LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;
lv_obj_set_flex_flow(lv_screen_active(), LV_FLEX_FLOW_COLUMN);
lv_obj_set_flex_align(lv_screen_active(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER);

lv_obj_t * cb;
cb = lv_checkbox_create(lv_screen_active());
lv_checkbox_set_text(cb, &quot;Apple&quot;);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);

cb = lv_checkbox_create(lv_screen_active());
lv_checkbox_set_text(cb, &quot;Banana&quot;);
lv_obj_add_state(cb, LV_STATE_CHECKED);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);

cb = lv_checkbox_create(lv_screen_active());
lv_checkbox_set_text(cb, &quot;Lemon&quot;);
lv_obj_add_state(cb, LV_STATE_DISABLED);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);

cb = lv_checkbox_create(lv_screen_active());
lv_obj_add_state(cb, LV_STATE_CHECKED);
lv_obj_add_state(cb, LV_STATE_DISABLED);
lv_checkbox_set_text(cb, &quot;Melon\nand a new line&quot;);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=311d37e5f70daf1cb0d2cad24c7f72751b5f1792&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def event_handler(e):
    code = e.get_code()
    obj = e.get_target_obj()
    if code == lv.EVENT.VALUE_CHANGED:
        txt = obj.get_text()
        if obj.get_state() &amp;amp; lv.STATE.CHECKED:
            state = &quot;Checked&quot;
        else:
            state = &quot;Unchecked&quot;
        print(txt + &quot;:&quot; + state)


lv.screen_active().set_flex_flow(lv.FLEX_FLOW.COLUMN)
lv.screen_active().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER)

cb = lv.checkbox(lv.screen_active())
cb.set_text(&quot;Apple&quot;)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)

cb = lv.checkbox(lv.screen_active())
cb.set_text(&quot;Banana&quot;)
cb.add_state(lv.STATE.CHECKED)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)

cb = lv.checkbox(lv.screen_active())
cb.set_text(&quot;Lemon&quot;)
cb.add_state(lv.STATE.DISABLED)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)

cb = lv.checkbox(lv.screen_active())
cb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED)
cb.set_text(&quot;Melon&quot;)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Styling a Slider&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_4.gif&quot; alt=&quot;Styling a slider with LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;lv_obj_t * slider = lv_slider_create(lv_screen_active());
lv_slider_set_value(slider, 70, LV_ANIM_OFF);
lv_obj_set_size(slider, 300, 20);
lv_obj_center(slider);

/*Add local styles to MAIN part (background rectangle)*/
lv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN);
lv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN);
lv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN);
lv_obj_set_style_border_width(slider, 5, LV_PART_MAIN);
lv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN);

/*Create a reusable style sheet for the INDICATOR part*/
static lv_style_t style_indicator;
lv_style_init(&amp;amp;style_indicator);
lv_style_set_bg_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));
lv_style_set_bg_grad_color(&amp;amp;style_indicator, lv_color_hex(0x1464F0));
lv_style_set_bg_grad_dir(&amp;amp;style_indicator, LV_GRAD_DIR_HOR);
lv_style_set_shadow_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));
lv_style_set_shadow_width(&amp;amp;style_indicator, 15);
lv_style_set_shadow_spread(&amp;amp;style_indicator, 5);
4
/*Add the style sheet to the slider&#39;s INDICATOR part*/
lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_INDICATOR);

/*Add the same style to the KNOB part too and locally overwrite some properties*/
lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_KNOB);

lv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB);
lv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB);
lv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB);
lv_obj_set_style_shadow_spread(slider, 2, LV_PART_KNOB);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=c431c7b4dfd2cc0dd9c392b74365d5af6ea986f0&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Create a slider and add the style
slider = lv.slider(lv.screen_active())
slider.set_value(70, lv.ANIM.OFF)
slider.set_size(300, 20)
slider.center()

# Add local styles to MAIN part (background rectangle)
slider.set_style_bg_color(lv.color_hex(0x0F1215), lv.PART.MAIN)
slider.set_style_bg_opa(255, lv.PART.MAIN)
slider.set_style_border_color(lv.color_hex(0x333943), lv.PART.MAIN)
slider.set_style_border_width(5, lv.PART.MAIN)
slider.set_style_pad_all(5, lv.PART.MAIN)

# Create a reusable style sheet for the INDICATOR part
style_indicator = lv.style_t()
style_indicator.init()
style_indicator.set_bg_color(lv.color_hex(0x37B9F5))
style_indicator.set_bg_grad_color(lv.color_hex(0x1464F0))
style_indicator.set_bg_grad_dir(lv.GRAD_DIR.HOR)
style_indicator.set_shadow_color(lv.color_hex(0x37B9F5))
style_indicator.set_shadow_width(15)
style_indicator.set_shadow_spread(5)

# Add the style sheet to the slider&#39;s INDICATOR part
slider.add_style(style_indicator, lv.PART.INDICATOR)
slider.add_style(style_indicator, lv.PART.KNOB)

# Add the same style to the KNOB part too and locally overwrite some properties
slider.set_style_outline_color(lv.color_hex(0x0096FF), lv.PART.KNOB)
slider.set_style_outline_width(3, lv.PART.KNOB)
slider.set_style_outline_pad(-5, lv.PART.KNOB)
slider.set_style_shadow_spread(2, lv.PART.KNOB)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;English, Hebrew (mixed LTR-RTL) and Chinese texts&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_5.png&quot; alt=&quot;English, Hebrew and Chinese texts with LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;lv_obj_t * ltr_label = lv_label_create(lv_screen_active());
lv_label_set_text(ltr_label, &quot;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&quot;);
lv_obj_set_style_text_font(ltr_label, &amp;amp;lv_font_montserrat_16, 0);
lv_obj_set_width(ltr_label, 310);
lv_obj_align(ltr_label, LV_ALIGN_TOP_LEFT, 5, 5);

lv_obj_t * rtl_label = lv_label_create(lv_screen_active());
lv_label_set_text(rtl_label,&quot;מעבד, או בשמו המלא יחידת עיבוד מרכזית (באנגלית: CPU - Central Processing Unit).&quot;);
lv_obj_set_style_base_dir(rtl_label, LV_BASE_DIR_RTL, 0);
lv_obj_set_style_text_font(rtl_label, &amp;amp;lv_font_dejavu_16_persian_hebrew, 0);
lv_obj_set_width(rtl_label, 310);
lv_obj_align(rtl_label, LV_ALIGN_LEFT_MID, 5, 0);

lv_obj_t * cz_label = lv_label_create(lv_screen_active());
lv_label_set_text(cz_label,
                  &quot;嵌入式系统（Embedded System），\n是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机系统。&quot;);
lv_obj_set_style_text_font(cz_label, &amp;amp;lv_font_source_han_sans_sc_16_cjk, 0);
lv_obj_set_width(cz_label, 310);
lv_obj_align(cz_label, LV_ALIGN_BOTTOM_LEFT, 5, -5);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=18bb38200a64e10ead1aa17a65c977fc18131842&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;ltr_label = lv.label(lv.screen_active())
ltr_label.set_text(&quot;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&quot;)
ltr_label.set_style_text_font(lv.font_montserrat_16, 0);

ltr_label.set_width(310)
ltr_label.align(lv.ALIGN.TOP_LEFT, 5, 5)

rtl_label = lv.label(lv.screen_active())
rtl_label.set_text(&quot;מעבד, או בשמו המלא יחידת עיבוד מרכזית (באנגלית: CPU - Central Processing Unit).&quot;)
rtl_label.set_style_base_dir(lv.BASE_DIR.RTL, 0)
rtl_label.set_style_text_font(lv.font_dejavu_16_persian_hebrew, 0)
rtl_label.set_width(310)
rtl_label.align(lv.ALIGN.LEFT_MID, 5, 0)

font_hans_sans_16_cjk = lv.font_load(&quot;S:../../assets/font/lv_font_source_han_sans_sc_16_cjk.fnt&quot;)

cz_label = lv.label(lv.screen_active())
cz_label.set_style_text_font(font_hans_sans_16_cjk, 0)
cz_label.set_text(&quot;嵌入式系统（Embedded System），\n是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机系统。&quot;)
cz_label.set_width(310)
cz_label.align(lv.ALIGN.BOTTOM_LEFT, 5, -5)

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;span&gt;▶&lt;/span&gt; Get started&lt;/h2&gt; 
&lt;p&gt;This list will guide you to get started with LVGL step-by-step.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Get Familiar with LVGL&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://lvgl.io/demos&quot;&gt;Online demos&lt;/a&gt; to see LVGL in action (3 minutes).&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://docs.lvgl.io/master/intro/introduction/index.html&quot;&gt;Introduction&lt;/a&gt; page of the documentation (5 minutes).&lt;/li&gt; 
 &lt;li&gt;Get familiar with the basics on the &lt;a href=&quot;https://docs.lvgl.io/master/intro/getting_started/learn_the_basics.html&quot;&gt;Quick overview&lt;/a&gt; page (15 minutes).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Start to Use LVGL&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Set up a &lt;a href=&quot;https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html#simulator&quot;&gt;Simulator&lt;/a&gt; (10 minutes).&lt;/li&gt; 
 &lt;li&gt;Try out some &lt;a href=&quot;https://github.com/lvgl/lvgl/tree/master/examples&quot;&gt;Examples&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Port LVGL to a board. See the &lt;a href=&quot;https://docs.lvgl.io/master/details/integration/adding-lvgl-to-your-project/index.html&quot;&gt;Porting&lt;/a&gt; guide or check out the ready-to-use &lt;a href=&quot;https://github.com/lvgl?q=lv_port_&quot;&gt;Projects&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Become a Pro&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/index.html&quot;&gt;Main-Modules&lt;/a&gt; page to get a better understanding of the library (2-3 hours)&lt;/li&gt; 
 &lt;li&gt;Check the documentation of the &lt;a href=&quot;https://docs.lvgl.io/master/details/widgets/index.html&quot;&gt;Widgets&lt;/a&gt; to see their features and usage&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Get Help and Help Others&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;9&quot;&gt; 
 &lt;li&gt;If you have questions go to the &lt;a href=&quot;http://forum.lvgl.io/&quot;&gt;Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://docs.lvgl.io/master/contributing/index.html&quot;&gt;Contributing&lt;/a&gt; guide to see how you can help to improve LVGL (15 minutes)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;span&gt;🤝&lt;/span&gt; Services&lt;/h2&gt; 
&lt;p&gt;LVGL LLC was established to provide a solid background for LVGL library and to offer several type of services to help you in UI development. With 15+ years of experience in the user interface and graphics industry we can help you the bring your UI to the next level.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Graphics design&lt;/strong&gt; Our in-house graphics designers are experts in creating beautiful modern designs which fit to your product and the resources of your hardware.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI implementation&lt;/strong&gt; We can also implement your UI based on the design you or we have created. You can be sure that we will make the most out of your hardware and LVGL. If a feature or widget is missing from LVGL, don&#39;t worry, we will implement it for you.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consulting and Support&lt;/strong&gt; We can support you with consulting as well to avoid pricey and time consuming mistakes during the UI development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Board certification&lt;/strong&gt; For companies who are offering development boards, or production ready kits we do board certification which shows how board can run LVGL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://lvgl.io/demos&quot;&gt;Demos&lt;/a&gt; as reference. For more information take look at the &lt;a href=&quot;https://lvgl.io/services&quot;&gt;Services page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lvgl.io/#contact&quot;&gt;Contact us&lt;/a&gt; and tell how we can help.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🌟&lt;/span&gt; Contributing&lt;/h2&gt; 
&lt;p&gt;LVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs or even hosting your own project under the LVGL organization.&lt;/p&gt; 
&lt;p&gt;For a detailed description of contribution opportunities visit the &lt;a href=&quot;https://docs.lvgl.io/master/contributing/index.html&quot;&gt;Contributing&lt;/a&gt; section of the documentation.&lt;/p&gt; 
&lt;p&gt;More than 300 people already left their fingerprint in LVGL. Be one them! See you here! &lt;span&gt;🙂&lt;/span&gt;&lt;/p&gt; 
&lt;a href=&quot;https://github.com/lvgl/lvgl/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&quot; /&gt; &lt;/a&gt; 
&lt;p&gt;... and many other.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ventoy/Ventoy</title>
      <link>https://github.com/ventoy/Ventoy</link>
      <description>&lt;p&gt;A new bootable USB solution.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.ventoy.net/&quot;&gt;Ventoy&lt;/a&gt; &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/ventoy/Ventoy.svg?style=for-the-badge&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/license/ventoy/Ventoy?style=for-the-badge&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/stars/ventoy/Ventoy?style=for-the-badge&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/ventoy/Ventoy/total.svg?style=for-the-badge&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/ventoy/Ventoy/ci.yml?label=actions&amp;amp;logo=github&amp;amp;style=for-the-badge&quot; /&gt; &lt;/p&gt; 
&lt;h4 align=&quot;left&quot;&gt; Ventoy is an open source tool to create bootable USB drive for ISO/WIM/IMG/VHD(x)/EFI files. &lt;br /&gt; With ventoy, you don&#39;t need to format the disk over and over, you just need to copy the image files to the USB drive and boot it. You can copy many image files at a time and ventoy will give you a boot menu to select them. &lt;br /&gt; You can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disk and boot them.&lt;br /&gt; x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI and MIPS64EL UEFI are supported in the same way.&lt;br /&gt; Both MBR and GPT partition style are supported in the same way.&lt;br /&gt; Most type of OS supported(Windows/WinPE/Linux/Unix/ChromeOS/Vmware/Xen...) &lt;br /&gt; 1200+ ISO files are tested (&lt;a href=&quot;https://www.ventoy.net/en/isolist.html&quot;&gt;List&lt;/a&gt;). 90%+ distros in &lt;a href=&quot;https://distrowatch.com/&quot;&gt;distrowatch.com&lt;/a&gt; supported (&lt;a href=&quot;https://www.ventoy.net/en/distrowatch.html&quot;&gt;Details&lt;/a&gt;). &lt;br /&gt; &lt;br /&gt;Official Website: &lt;a href=&quot;https://www.ventoy.net&quot;&gt;https://www.ventoy.net&lt;/a&gt; &lt;/h4&gt; 
&lt;h1&gt;Tested OS&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;br /&gt; Windows 7, Windows 8, Windows 8.1, Windows 10, Windows 11, Windows Server 2012, Windows Server 2012 R2, Windows Server 2016, Windows Server 2019, Windows Server 2022, WinPE&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;br /&gt; Debian, Ubuntu, CentOS(6/7/8/9), RHEL(6/7/8/9), Deepin, Fedora, Rocky Linux, AlmaLinux, EuroLinux(6/7/8/9), openEuler, OpenAnolis, SLES, openSUSE, MX Linux, Manjaro, Linux Mint, Endless OS, Elementary OS, Solus, Linx, Zorin, antiX, PClinuxOS, Arch, ArcoLinux, ArchLabs, BlackArch, Obarun, Artix Linux, Puppy Linux, Tails, Slax, Kali, Mageia, Slackware, Q4OS, Archman, Gentoo, Pentoo, NixOS, Kylin, openKylin, Ubuntu Kylin, KylinSec, Lubuntu, Xubuntu, Kubuntu, Ubuntu MATE, Ubuntu Budgie, Ubuntu Studio, Bluestar, OpenMandriva, ExTiX, Netrunner, ALT Linux, Nitrux, Peppermint, KDE neon, Linux Lite, Parrot OS, Qubes, Pop OS, ROSA, Void Linux, Star Linux, EndeavourOS, MakuluLinux, Voyager, Feren, ArchBang, LXLE, Knoppix, Calculate Linux, Clear Linux, Pure OS, Oracle Linux, Trident, Septor, Porteus, Devuan, GoboLinux, 4MLinux, Simplicity Linux, Zeroshell, Android-x86, netboot.xyz, Slitaz, SuperGrub2Disk, Proxmox VE, Kaspersky Rescue, SystemRescueCD, MemTest86, MemTest86+, MiniTool Partition Wizard, Parted Magic, veket, Sabayon, Scientific, alpine, ClearOS, CloneZilla, Berry Linux, Trisquel, Ataraxia Linux, Minimal Linux Live, BackBox Linux, Emmabuntüs, ESET SysRescue Live,Nova Linux, AV Linux, RoboLinux, NuTyX, IPFire, SELKS, ZStack, Enso Linux, Security Onion, Network Security Toolkit, Absolute Linux, TinyCore, Springdale Linux, Frost Linux, Shark Linux, LinuxFX, Snail Linux, Astra Linux, Namib Linux, Resilient Linux, Virage Linux, Blackweb Security OS, R-DriveImage, O-O.DiskImage, Macrium, ToOpPy LINUX, GNU Guix, YunoHost, foxclone, siduction, Adelie Linux, Elive, Pardus, CDlinux, AcademiX, Austrumi, Zenwalk, Anarchy, DuZeru, BigLinux, OpenMediaVault, Ubuntu DP, Exe GNU/Linux, 3CX Phone System, KANOTIX, Grml, Karoshi, PrimTux, ArchStrike, CAELinux, Cucumber, Fatdog, ForLEx, Hanthana, Kwort, MiniNo, Redcore, Runtu, Asianux, Clu Linux Live, Uruk, OB2D, BlueOnyx, Finnix, HamoniKR, Parabola, LinHES, LinuxConsole, BEE free, Untangle, Pearl, Thinstation, TurnKey, tuxtrans, Neptune, HefftorLinux, GeckoLinux, Mabox Linux, Zentyal, Maui, Reborn OS, SereneLinux , SkyWave Linux, Kaisen Linux, Regata OS, TROM-Jaro, DRBL Linux, Chalet OS, Chapeau, Desa OS, BlankOn, OpenMamba, Frugalware, Kibojoe Linux, Revenge OS, Tsurugi Linux, Drauger OS, Hash Linux, gNewSense, Ikki Boot, SteamOS, Hyperbola, VyOS, EasyNAS, SuperGamer, Live Raizo, Swift Linux, RebeccaBlackOS, Daphile, CRUX, Univention, Ufficio Zero, Rescuezilla, Phoenix OS, Garuda Linux, Mll, NethServer, OSGeoLive, Easy OS, Volumio, FreedomBox, paldo, UBOS, Recalbox, batocera, Lakka, LibreELEC, Pardus Topluluk, Pinguy, KolibriOS, Elastix, Arya, Omoikane, Omarine, Endian Firewall, Hamara, Rocks Cluster, MorpheusArch, Redo, Slackel, SME Server, APODIO, Smoothwall, Dragora, Linspire, Secure-K OS, Peach OSI, Photon, Plamo, SuperX, Bicom, Ploplinux, HP SPP, LliureX, Freespire, DietPi, BOSS, Webconverger, Lunar, TENS, Source Mage, RancherOS, T2, Vine, Pisi, blackPanther, mAid, Acronis, Active.Boot, AOMEI, Boot.Repair, CAINE, DaRT, EasyUEFI, R-Drive, PrimeOS, Avira Rescue System, bitdefender, Checkra1n Linux, Lenovo Diagnostics, Clover, Bliss-OS, Lenovo BIOS Update, Arcabit Rescue Disk, MiyoLinux, TeLOS, Kerio Control, RED OS, OpenWrt, MocaccinoOS, EasyStartup, Pyabr, Refracta, Eset SysRescue, Linpack Xtreme, Archcraft, NHVBOOT, pearOS, SeaTools, Easy Recovery Essentional, iKuai, StorageCraft SCRE, ZFSBootMenu, TROMjaro, BunsenLabs, Todo en Uno, ChallengerOS, Nobara, Holo, CachyOS, Peux OS, Vanilla OS, ShredOS, paladin, Palen1x, dban, ReviOS, HelenOS, XeroLinux, Tiny 11, chimera linux, CuteFish, DragonOs, Rhino Linux, vanilladpup, crystal, IGELOS, MiniOS, gnoppix, PikaOS, ......&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unix&lt;/strong&gt;&lt;br /&gt; DragonFly, FreeBSD, pfSense, GhostBSD, FreeNAS, TrueNAS, XigmaNAS, FuryBSD, OPNsense, HardenedBSD, MidnightBSD, ClonOS, EmergencyBootKit&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ChromeOS&lt;/strong&gt;&lt;br /&gt; FydeOS, CloudReady, ChromeOS Flex&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;br /&gt; VMware ESXi, Citrix XenServer, Xen XCP-ng&lt;/p&gt; 
&lt;h1&gt;Tested Image Report&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ventoy/Ventoy/issues/1195&quot;&gt;【How to report a successfully tested image file】&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Ventoy Browser&lt;/h1&gt; 
&lt;p&gt;With Ventoy, you can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disk and boot them. &lt;a href=&quot;https://www.ventoy.net/en/doc_browser.html&quot;&gt;Notes&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;VentoyPlugson&lt;/h1&gt; 
&lt;p&gt;A GUI Ventoy plugin configurator. &lt;a href=&quot;https://www.ventoy.net/en/plugin_plugson.html&quot;&gt;VentoyPlugson&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% open source&lt;/li&gt; 
 &lt;li&gt;Simple to use&lt;/li&gt; 
 &lt;li&gt;Fast (limited only by the speed of copying iso file)&lt;/li&gt; 
 &lt;li&gt;Can be installed in USB/Local Disk/SSD/NVMe/SD Card&lt;/li&gt; 
 &lt;li&gt;Directly boot from ISO/WIM/IMG/VHD(x)/EFI files, no extraction needed&lt;/li&gt; 
 &lt;li&gt;Support to browse and boot ISO/WIM/IMG/VHD(x)/EFI files in local disk&lt;/li&gt; 
 &lt;li&gt;No need to be continuous in disk for ISO/WIM/IMG/VHD(x)/EFI files&lt;/li&gt; 
 &lt;li&gt;MBR and GPT partition style supported (1.0.15+)&lt;/li&gt; 
 &lt;li&gt;x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI, MIPS64EL UEFI supported&lt;/li&gt; 
 &lt;li&gt;IA32/x86_64 UEFI Secure Boot supported (1.0.07+)&lt;/li&gt; 
 &lt;li&gt;Linux Persistence supported (1.0.11+)&lt;/li&gt; 
 &lt;li&gt;Windows auto installation supported (1.0.09+)&lt;/li&gt; 
 &lt;li&gt;Linux auto installation supported (1.0.09+)&lt;/li&gt; 
 &lt;li&gt;Variables Expansion supported for Windows/Linux auto installation script&lt;/li&gt; 
 &lt;li&gt;FAT32/exFAT/NTFS/UDF/XFS/Ext2(3)(4) supported for main partition&lt;/li&gt; 
 &lt;li&gt;ISO files larger than 4GB supported&lt;/li&gt; 
 &lt;li&gt;Menu alias, Menu tip message supported&lt;/li&gt; 
 &lt;li&gt;Password protect supported&lt;/li&gt; 
 &lt;li&gt;Native boot menu style for Legacy &amp;amp; UEFI&lt;/li&gt; 
 &lt;li&gt;Most types of OS supported, 1200+ iso files tested&lt;/li&gt; 
 &lt;li&gt;Linux vDisk boot supported&lt;/li&gt; 
 &lt;li&gt;Not only boot but also complete installation process&lt;/li&gt; 
 &lt;li&gt;Menu dynamically switchable between List/TreeView mode&lt;/li&gt; 
 &lt;li&gt;&quot;Ventoy Compatible&quot; concept&lt;/li&gt; 
 &lt;li&gt;Plugin Framework and GUI plugin configurator&lt;/li&gt; 
 &lt;li&gt;Injection files to runtime environment&lt;/li&gt; 
 &lt;li&gt;Boot configuration file dynamically replacement&lt;/li&gt; 
 &lt;li&gt;Highly customizable theme and menu&lt;/li&gt; 
 &lt;li&gt;USB drive write-protected support&lt;/li&gt; 
 &lt;li&gt;USB normal use unaffected&lt;/li&gt; 
 &lt;li&gt;Data nondestructive during version upgrade&lt;/li&gt; 
 &lt;li&gt;No need to update Ventoy when a new distro is released&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://www.ventoy.net/static/img/screen/screen_uefi.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Installation Instructions&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.ventoy.net/en/doc_start.html&quot;&gt;https://www.ventoy.net/en/doc_start.html&lt;/a&gt; for detailed instructions.&lt;/p&gt; 
&lt;h1&gt;Compile Instructions&lt;/h1&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/ventoy/Ventoy/master/DOC/BuildVentoyFromSource.txt&quot;&gt;BuildVentoyFromSource.txt&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Document&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Title&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Install &amp;amp; Update&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_start.html&quot;&gt;https://www.ventoy.net/en/doc_start.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Browse/Boot Files In Local Disk&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_browser.html&quot;&gt;https://www.ventoy.net/en/doc_browser.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Secure Boot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_secure.html&quot;&gt;https://www.ventoy.net/en/doc_secure.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Customize Theme&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_theme.html&quot;&gt;https://www.ventoy.net/en/plugin_theme.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Global Control&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_control.html&quot;&gt;https://www.ventoy.net/en/plugin_control.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Image List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_imagelist.html&quot;&gt;https://www.ventoy.net/en/plugin_imagelist.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Auto Installation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_autoinstall.html&quot;&gt;https://www.ventoy.net/en/plugin_autoinstall.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Injection Plugin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_injection.html&quot;&gt;https://www.ventoy.net/en/plugin_injection.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Persistence Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_persistence.html&quot;&gt;https://www.ventoy.net/en/plugin_persistence.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Boot WIM file&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_wimboot.html&quot;&gt;https://www.ventoy.net/en/plugin_wimboot.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Windows VHD Boot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_vhdboot.html&quot;&gt;https://www.ventoy.net/en/plugin_vhdboot.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linux vDisk Boot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_vtoyboot.html&quot;&gt;https://www.ventoy.net/en/plugin_vtoyboot.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;DUD Plugin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_dud.html&quot;&gt;https://www.ventoy.net/en/plugin_dud.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Password Plugin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_password.html&quot;&gt;https://www.ventoy.net/en/plugin_password.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Conf Replace Plugin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_bootconf_replace.html&quot;&gt;https://www.ventoy.net/en/plugin_bootconf_replace.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Menu Class&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_menuclass.html&quot;&gt;https://www.ventoy.net/en/plugin_menuclass.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Menu Alias&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_menualias.html&quot;&gt;https://www.ventoy.net/en/plugin_menualias.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Menu Extension&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/plugin_grubmenu.html&quot;&gt;https://www.ventoy.net/en/plugin_grubmenu.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memdisk Mode&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_memdisk.html&quot;&gt;https://www.ventoy.net/en/doc_memdisk.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TreeView Mode&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_treeview.html&quot;&gt;https://www.ventoy.net/en/doc_treeview.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Disk Layout MBR&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_disk_layout.html&quot;&gt;https://www.ventoy.net/en/doc_disk_layout.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Disk Layout GPT&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_disk_layout_gpt.html&quot;&gt;https://www.ventoy.net/en/doc_disk_layout_gpt.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Search Configuration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.ventoy.net/en/doc_search_path.html&quot;&gt;https://www.ventoy.net/en/doc_search_path.html&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;FAQ&lt;/h1&gt; 
&lt;p&gt;See &lt;a href=&quot;https://www.ventoy.net/en/faq.html&quot;&gt;https://www.ventoy.net/en/faq.html&lt;/a&gt; for detail&lt;/p&gt; 
&lt;h1&gt;Forum&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://forums.ventoy.net&quot;&gt;https://forums.ventoy.net&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Donation&lt;/h1&gt; 
&lt;p&gt;It would be much appreciated if you want to make a small donation to support my work!&lt;br /&gt; Alipay, WeChat Pay, PayPal and Bitcoin are available for donation. You can choose any of them.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Alipay&lt;/th&gt; 
   &lt;th&gt;WeChat Pay&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://www.ventoy.net/static/img/AliPay.png&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://www.ventoy.net/static/img/WeChatPay.png&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;PayPal&lt;/strong&gt;&lt;br /&gt; You can transfer to my paypal account &lt;code&gt;admin@ventoy.net&lt;/code&gt; or just click &lt;a href=&quot;https://www.paypal.me/ventoy&quot;&gt;https://www.paypal.me/ventoy&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt;&lt;br /&gt; Bitcoin Address &lt;code&gt;19mZDWzZgzkHCi9YX9H3fYCUuCHq3W6wfT&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>axboe/fio</title>
      <link>https://github.com/axboe/fio</link>
      <description>&lt;p&gt;Flexible I/O Tester&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview and history&lt;/h2&gt; 
&lt;p&gt;Fio was originally written to save me the hassle of writing special test case programs when I wanted to test a specific workload, either for performance reasons or to find/reproduce a bug. The process of writing such a test app can be tiresome, especially if you have to do it often. Hence I needed a tool that would be able to simulate a given I/O workload without resorting to writing a tailored test case again and again.&lt;/p&gt; 
&lt;p&gt;A test work load is difficult to define, though. There can be any number of processes or threads involved, and they can each be using their own way of generating I/O. You could have someone dirtying large amounts of memory in a memory mapped file, or maybe several threads issuing reads using asynchronous I/O. fio needed to be flexible enough to simulate both of these cases, and many more.&lt;/p&gt; 
&lt;p&gt;Fio spawns a number of threads or processes doing a particular type of I/O action as specified by the user. fio takes a number of global parameters, each inherited by the thread unless otherwise parameters given to them overriding that setting is given. The typical use of fio is to write a job file matching the I/O load one wants to simulate.&lt;/p&gt; 
&lt;h2&gt;Source&lt;/h2&gt; 
&lt;p&gt;Fio resides in a git repo, the canonical place is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://git.kernel.dk/cgit/fio/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Snapshots are frequently generated and :file:&lt;code&gt;fio-git-*.tar.gz&lt;/code&gt; include the git meta data as well. Other tarballs are archives of official fio releases. Snapshots can download from:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://brick.kernel.dk/snaps/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are also two official mirrors. Both of these are automatically synced with the main repository, when changes are pushed. If the main repo is down for some reason, either one of these is safe to use as a backup:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://git.kernel.org/pub/scm/linux/kernel/git/axboe/fio.git

https://github.com/axboe/fio.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Mailing list&lt;/h2&gt; 
&lt;p&gt;The fio project mailing list is meant for anything related to fio including general discussion, bug reporting, questions, and development. For bug reporting, see REPORTING-BUGS.&lt;/p&gt; 
&lt;p&gt;An automated mail detailing recent commits is automatically sent to the list at most daily. The list address is &lt;a href=&quot;mailto:fio@vger.kernel.org&quot;&gt;fio@vger.kernel.org&lt;/a&gt;, subscribe by sending an email to &lt;a href=&quot;mailto:fio+subscribe@vger.kernel.org&quot;&gt;fio+subscribe@vger.kernel.org&lt;/a&gt; or visit &lt;a href=&quot;https://subspace.kernel.org/vger.kernel.org.html&quot;&gt;https://subspace.kernel.org/vger.kernel.org.html&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Archives can be found here:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://www.spinics.net/lists/fio/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or here:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://lore.kernel.org/fio/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and archives for the old list can be found here:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://maillist.kernel.dk/fio-devel/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Fio was written by Jens Axboe &lt;a href=&quot;mailto:axboe@kernel.dk&quot;&gt;axboe@kernel.dk&lt;/a&gt; to enable flexible testing of the Linux I/O subsystem and schedulers. He got tired of writing specific test applications to simulate a given workload, and found that the existing I/O benchmark/test tools out there weren&#39;t flexible enough to do what he wanted.&lt;/p&gt; 
&lt;p&gt;Jens Axboe &lt;a href=&quot;mailto:axboe@kernel.dk&quot;&gt;axboe@kernel.dk&lt;/a&gt; 20060905&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Fio is maintained by Jens Axboe &amp;lt;&lt;a href=&quot;mailto:axboe@kernel.dk&quot;&gt;axboe@kernel.dk&lt;/a&gt; and Vincent Fu &lt;a href=&quot;mailto:vincentfu@gmail.com&quot;&gt;vincentfu@gmail.com&lt;/a&gt; - however, for reporting bugs please use the fio reflector or the GitHub page rather than email any of them directly. By using the public resources, others will be able to learn from the responses too. Chances are also good that other members will be able to help with your inquiry as well.&lt;/p&gt; 
&lt;h2&gt;Binary packages&lt;/h2&gt; 
&lt;p&gt;Debian: Starting with Debian &quot;Squeeze&quot;, fio packages are part of the official Debian repository. &lt;a href=&quot;https://packages.debian.org/search?keywords=fio&quot;&gt;https://packages.debian.org/search?keywords=fio&lt;/a&gt; .&lt;/p&gt; 
&lt;p&gt;Ubuntu: Starting with Ubuntu 10.04 LTS (aka &quot;Lucid Lynx&quot;), fio packages are part of the Ubuntu &quot;universe&quot; repository. &lt;a href=&quot;https://packages.ubuntu.com/search?keywords=fio&quot;&gt;https://packages.ubuntu.com/search?keywords=fio&lt;/a&gt; .&lt;/p&gt; 
&lt;p&gt;Red Hat, Fedora, CentOS &amp;amp; Co: Starting with Fedora 9/Extra Packages for Enterprise Linux 4, fio packages are part of the Fedora/EPEL repositories. &lt;a href=&quot;https://packages.fedoraproject.org/pkgs/fio/&quot;&gt;https://packages.fedoraproject.org/pkgs/fio/&lt;/a&gt; .&lt;/p&gt; 
&lt;p&gt;Mandriva: Mandriva has integrated fio into their package repository, so installing on that distro should be as easy as typing &lt;code&gt;urpmi fio&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Arch Linux: An Arch Linux package is provided under the Community sub-repository: &lt;a href=&quot;https://www.archlinux.org/packages/?sort=&amp;amp;q=fio&quot;&gt;https://www.archlinux.org/packages/?sort=&amp;amp;q=fio&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Solaris: Packages for Solaris are available from OpenCSW. Install their pkgutil tool (&lt;a href=&quot;http://www.opencsw.org/get-it/pkgutil/&quot;&gt;http://www.opencsw.org/get-it/pkgutil/&lt;/a&gt;) and then install fio via &lt;code&gt;pkgutil -i fio&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Windows: Beginning with fio 3.31 Windows installers for tagged releases are available on GitHub at &lt;a href=&quot;https://github.com/axboe/fio/releases&quot;&gt;https://github.com/axboe/fio/releases&lt;/a&gt;. The latest installers for Windows can also be obtained as GitHub Actions artifacts by selecting a build from &lt;a href=&quot;https://github.com/axboe/fio/actions&quot;&gt;https://github.com/axboe/fio/actions&lt;/a&gt;. These require logging in to a GitHub account.&lt;/p&gt; 
&lt;p&gt;BSDs: Packages for BSDs may be available from their binary package repositories. Look for a package &quot;fio&quot; using their binary package managers.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Just type::&lt;/p&gt; 
&lt;p&gt;$ ./configure $ make $ make install&lt;/p&gt; 
&lt;p&gt;Note that GNU make is required. On BSDs it&#39;s available from devel/gmake within ports directory; on Solaris it&#39;s in the SUNWgmake package. On platforms where GNU make isn&#39;t the default, type &lt;code&gt;gmake&lt;/code&gt; instead of &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Configure will print the enabled options. Note that on Linux based platforms, the libaio development packages must be installed to use the libaio engine. Depending on the distro, it is usually called libaio-devel or libaio-dev.&lt;/p&gt; 
&lt;p&gt;For gfio, gtk 2.18 (or newer), associated glib threads, and cairo are required to be installed. gfio isn&#39;t built automatically and can be enabled with a &lt;code&gt;--enable-gfio&lt;/code&gt; option to configure.&lt;/p&gt; 
&lt;p&gt;To build fio with a cross-compiler::&lt;/p&gt; 
&lt;p&gt;$ make clean $ make CROSS_COMPILE=/path/to/toolchain/prefix&lt;/p&gt; 
&lt;p&gt;Configure will attempt to determine the target platform automatically.&lt;/p&gt; 
&lt;p&gt;It&#39;s possible to build fio for ESX as well, use the &lt;code&gt;--esx&lt;/code&gt; switch to configure.&lt;/p&gt; 
&lt;p&gt;The HTTP engine is enabled depending on if the curl and openssl shared libraries are detected on the system. For Ubuntu, these packages are libcurl4-openssl-dev and libssl-dev.&lt;/p&gt; 
&lt;p&gt;Windows&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
The minimum versions of Windows for building/running fio are Windows 7/Windows
Server 2008 R2. On Windows, Cygwin (https://www.cygwin.com/) is required in
order to build fio. To create an MSI installer package install WiX from
https://wixtoolset.org and run :file:`dobuild.cmd` from the :file:`os/windows`
directory.

How to compile fio on 64-bit Windows:

 1. Install Cygwin (https://www.cygwin.com/). Install **make** and all
    packages starting with **mingw64-x86_64**. Ensure
    **mingw64-x86_64-zlib** are installed if you wish
    to enable fio&#39;s log compression functionality.
 2. Open the Cygwin Terminal.
 3. Go to the fio directory (source files).
 4. Run ``make clean &amp;amp;&amp;amp; make -j``.

To build fio for 32-bit Windows, ensure the -i686 versions of the previously
mentioned -x86_64 packages are installed and run ``./configure
--build-32bit-win`` before ``make``.

It&#39;s recommended that once built or installed, fio be run in a Command Prompt or
other &#39;native&#39; console such as console2, since there are known to be display and
signal issues when running it under a Cygwin shell (see
https://github.com/mintty/mintty/issues/56 and
https://github.com/mintty/mintty/wiki/Tips#inputoutput-interaction-with-alien-programs
for details).


Documentation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Fio uses Sphinx_ to generate documentation from the reStructuredText_ files. To build HTML formatted documentation run &lt;code&gt;make -C doc html&lt;/code&gt; and direct your browser to :file:&lt;code&gt;./doc/output/html/index.html&lt;/code&gt;. To build manual page run &lt;code&gt;make -C doc man&lt;/code&gt; and then &lt;code&gt;man doc/output/man/fio.1&lt;/code&gt;. To see what other output formats are supported run &lt;code&gt;make -C doc help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;.. _reStructuredText: &lt;a href=&quot;https://www.sphinx-doc.org/rest.html&quot;&gt;https://www.sphinx-doc.org/rest.html&lt;/a&gt; .. _Sphinx: &lt;a href=&quot;https://www.sphinx-doc.org&quot;&gt;https://www.sphinx-doc.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;p&gt;Fio works on (at least) Linux, Solaris, AIX, HP-UX, OSX, NetBSD, OpenBSD, Windows, FreeBSD, and DragonFly. Some features and/or options may only be available on some of the platforms, typically because those features only apply to that platform (like the solarisaio engine, or the splice engine on Linux).&lt;/p&gt; 
&lt;p&gt;Some features are not available on FreeBSD/Solaris even if they could be implemented, I&#39;d be happy to take patches for that. An example of that is disk utility statistics and (I think) huge page support, support for that does exist in FreeBSD/Solaris.&lt;/p&gt; 
&lt;p&gt;Fio uses pthread mutexes for signaling and locking and some platforms do not support process shared pthread mutexes. As a result, on such platforms only threads are supported. This could be fixed with sysv ipc locking or other locking alternatives.&lt;/p&gt; 
&lt;p&gt;Other *BSD platforms are untested, but fio should work there almost out of the box. Since I don&#39;t do test runs or even compiles on those platforms, your mileage may vary. Sending me patches for other platforms is greatly appreciated. There&#39;s a lot of value in having the same test/benchmark tool available on all platforms.&lt;/p&gt; 
&lt;p&gt;Note that POSIX aio is not enabled by default on AIX. Messages like these::&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Symbol resolution failed for /usr/lib/libc.a(posix_aio.o) because:
    Symbol _posix_kaio_rdwr (number 2) is not exported from dependent module /unix.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;indicate one needs to enable POSIX aio. Run the following commands as root::&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# lsdev -C -l posix_aio0
    posix_aio0 Defined  Posix Asynchronous I/O
# cfgmgr -l posix_aio0
# lsdev -C -l posix_aio0
    posix_aio0 Available  Posix Asynchronous I/O
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;POSIX aio should work now. To make the change permanent::&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# chdev -l posix_aio0 -P -a autoconfig=&#39;available&#39;
    posix_aio0 changed
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running fio&lt;/h2&gt; 
&lt;p&gt;Running fio is normally the easiest part - you just give it the job file (or job files) as parameters::&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ fio [options] [jobfile] ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and it will start doing what the &lt;em&gt;jobfile&lt;/em&gt; tells it to do. You can give more than one job file on the command line, fio will serialize the running of those files. Internally that is the same as using the :option:&lt;code&gt;stonewall&lt;/code&gt; parameter described in the parameter section.&lt;/p&gt; 
&lt;p&gt;If the job file contains only one job, you may as well just give the parameters on the command line. The command line parameters are identical to the job parameters, with a few extra that control global parameters. For example, for the job file parameter :option:&lt;code&gt;iodepth=2 &amp;lt;iodepth&amp;gt;&lt;/code&gt;, the mirror command line option would be :option:&lt;code&gt;--iodepth 2 &amp;lt;iodepth&amp;gt;&lt;/code&gt; or :option:&lt;code&gt;--iodepth=2 &amp;lt;iodepth&amp;gt;&lt;/code&gt;. You can also use the command line for giving more than one job entry. For each :option:&lt;code&gt;--name &amp;lt;name&amp;gt;&lt;/code&gt; option that fio sees, it will start a new job with that name. Command line entries following a :option:&lt;code&gt;--name &amp;lt;name&amp;gt;&lt;/code&gt; entry will apply to that job, until there are no more entries or a new :option:&lt;code&gt;--name &amp;lt;name&amp;gt;&lt;/code&gt; entry is seen. This is similar to the job file options, where each option applies to the current job until a new [] job entry is seen.&lt;/p&gt; 
&lt;p&gt;fio does not need to run as root, except if the files or devices specified in the job section requires that. Some other options may also be restricted, such as memory locking, I/O scheduler switching, and decreasing the nice value.&lt;/p&gt; 
&lt;p&gt;If &lt;em&gt;jobfile&lt;/em&gt; is specified as &lt;code&gt;-&lt;/code&gt;, the job file will be read from standard input.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dev-Ali2008/xanite</title>
      <link>https://github.com/dev-Ali2008/xanite</link>
      <description>&lt;p&gt;Xanite&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/dev-Ali2008/xanite-android/raw/a94647d4a56a7abc37f302a7fcec753c3ef8c1db/Xanite.png&quot;&gt; &lt;img height=&quot;150px&quot; src=&quot;https://github.com/dev-Ali2008/xanite-android/raw/a94647d4a56a7abc37f302a7fcec753c3ef8c1db/Xanite.png&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Xanite - Xbox OG/360 emulator &lt;/h1&gt; 
&lt;p&gt;Xanite is a &quot;proof of concept&quot; emulator.&lt;/p&gt; 
&lt;p&gt;This project emulates both the original Xbox and Xbox 360 consoles on Android, supporting game ROMs in various formats.&lt;/p&gt; 
&lt;h2&gt;Game Compatibility&lt;/h2&gt; 
&lt;h3&gt;Xbox Original&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported formats: xiso, xbe&lt;/li&gt; 
 &lt;li&gt;BIOS required (must be obtained from your own Xbox)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Xbox 360&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported formats: iso, xex, god&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;the games you can play depends on your device&#39;s performance and storage capacity.&lt;/p&gt; 
&lt;h2&gt;Platform Support&lt;/h2&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;p&gt;&lt;a&gt;&lt;img src=&quot;https://img.shields.io/badge/Android A64 build-none-aaaaaa.svg&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;img height=&quot;200px&quot; src=&quot;https://github.com/dev-Ali2008/xanite/raw/e718259484b8afd71a774a7cae3a15f5caacf5e5/test.png&quot; /&gt;  -- Key Features 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Hardware Detection:&lt;br /&gt; Automatically identifies your device&#39;s hardware (GPU, RAM) and optimizes settings for peak performance&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Dual Console Support:&lt;br /&gt; Play both Xbox and Xbox 360 games in one emulator&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Performance Scaling:&lt;br /&gt; you can manually adjust the resolution and performance in settings for experiment or low end devices&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;h3&gt;For Xbox Original&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Processors:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Snapdragon 855 or better&lt;/li&gt; 
   &lt;li&gt;Exynos 990 or better&lt;/li&gt; 
   &lt;li&gt;Dimensity 1000 or better&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RAM:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;4 GB minimum&lt;/li&gt; 
   &lt;li&gt;8+ GB recommended&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;For Xbox 360 (higher requirements)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Processors:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Snapdragon 888 or better&lt;/li&gt; 
   &lt;li&gt;Exynos 2200 or better&lt;/li&gt; 
   &lt;li&gt;Dimensity 8300 or better&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RAM:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;8 GB minimum&lt;/li&gt; 
   &lt;li&gt;12+ GB recommended&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Graphics:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;3.2 opengl&lt;/li&gt; 
 &lt;li&gt;(vulkan coming soon)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OS Requirements:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Android 10+ (no root)&lt;/li&gt; 
 &lt;li&gt;Android 9 and below not supported&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Use&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;For Xbox Original:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Install BIOS from your own Xbox&lt;/li&gt; 
   &lt;li&gt;Obtain games in iso/xiso format from your personal game copies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For Xbox 360:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Requires Xbox 360 system files from your console&lt;/li&gt; 
   &lt;li&gt;Games in iso/xex/god format from your personal collection&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you want to contribute as a developer, please contact us in discord&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Developed by @FreePalestine1970,@Yebot32 and 4 other developers on Telegram and discord.&lt;br /&gt; Special thanks to all Xanite supporters.&lt;/p&gt; 
&lt;h2&gt;DISCLAIMER !&lt;/h2&gt; 
&lt;p&gt;Xanite is an open-source project not affiliated with Microsoft, Xemu, or Xenia. It is intended for educational&lt;/p&gt; 
&lt;p&gt;We do not condone piracy. BIOS files and game ROMs should be legally owned. While the emulator itself is legal, possessing illegal copies of games or BIOS files is not. Be cautious online.&lt;/p&gt; 
&lt;p&gt;Performance is not guaranteed in the current early version.&lt;/p&gt; 
&lt;p&gt;Xanite is not currently available.&lt;/p&gt; 
&lt;h2&gt;xanite socials&lt;/h2&gt; 
&lt;p&gt;❤️👇 website&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev-ali2008.github.io/Xanite.io/#social&quot;&gt;https://dev-ali2008.github.io/Xanite.io/#social&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BasedHardware/omi</title>
      <link>https://github.com/BasedHardware/omi</link>
      <description>&lt;p&gt;AI wearables. Put it on, speak, transcribe, automatically&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;&lt;strong&gt;omi&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p&gt;Meet Omi, the world’s leading open-source AI wearable that captures conversations, gives summaries, action items and does actions for you. Simply connect Omi to your mobile device and enjoy automatic, high-quality transcriptions of meetings, chats, and voice memos wherever you are.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/834d3fdb-31b5-4f22-ae35-da3d2b9a8f59&quot; alt=&quot;Omi&quot; /&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/7a658366-9e02-4057-bde5-a510e1f0217a&quot; alt=&quot;CleanShot 2025-02-08 at 18 22 23&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;http://discord.omi.me&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1192313062041067520?label=Discord&quot; alt=&quot;Discord Follow&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://x.com/kodjima33&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/kodjima33&quot; alt=&quot;Twitter Follow&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/BasedHardware/Omi&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/BasedHardware/Omi&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt; &lt;p&gt;&lt;a href=&quot;https://omi.me/&quot;&gt;Homepage&lt;/a&gt; | &lt;a href=&quot;https://docs.omi.me/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/products/omi-dev-kit-2&quot;&gt;Buy omi Developer Kit&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/glass&quot;&gt;Buy Omi Glass Dev Kit&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Quick Start (2 min)&lt;/h2&gt; 
&lt;p&gt;Download omi App&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.friend.ios&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/78/Google_Play_Store_badge_EN.svg?sanitize=true&quot; alt=&quot;Get it on Google Play&quot; height=&quot;50px&quot; width=&quot;180px&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apps.apple.com/us/app/friend-ai-wearable/id6502156163&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/3/3c/Download_on_the_App_Store_Badge.svg?sanitize=true&quot; alt=&quot;Download on the App Store&quot; height=&quot;50px&quot; width=&quot;180px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create webhook using &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site&lt;/a&gt; and copy this url&lt;/p&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/083a6ec4-4694-4c7a-843a-4a1a0c254453&quot; width=&quot;500&quot; /&gt; 
&lt;p&gt;In omi App:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Explore =&amp;gt; Create an App&lt;/th&gt; 
   &lt;th&gt;Select Capability&lt;/th&gt; 
   &lt;th&gt;Paste Webhook URL&lt;/th&gt; 
   &lt;th&gt;Install App&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/31809b81-7de2-4381-b5fc-5c9714972211&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59cfbe8e-7e3b-437f-81f7-25eb50ccdd7d&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/3d864ee8-555f-4ded-b4db-87ff78128323&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/58cf6da6-e245-415e-92e7-dc1f46583cfc&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Start speaking, you&#39;ll see Real-time transcript on &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;In this repo:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omi&quot;&gt;omi device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omiGlass&quot;&gt;omi glass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/app&quot;&gt;omi app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/personas-open-source&quot;&gt;ai personas (web)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/BasedHardware/omi/main/sdks&quot;&gt;SDKs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/developer/AppSetup&quot;&gt;omi App setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/assembly/Buying_Guide/&quot;&gt;Buying Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/assembly/Build_the_device/&quot;&gt;Build the device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/get_started/Flash_device/&quot;&gt;Install firmware&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/docs/developer/apps/Introduction&quot;&gt;Create your own app in 1 minute&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://docs.omi.me/docs/developer/Contribution/&quot;&gt;contributions guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Earn from contributing! Check the &lt;a href=&quot;https://omi.me/bounties&quot;&gt;paid bounties 🤑&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://github.com/BasedHardware/Omi/issues&quot;&gt;current issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;http://discord.omi.me&quot;&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Build your own &lt;a href=&quot;https://docs.omi.me/docs/developer/apps/Introduction&quot;&gt;Plugins/Integrations&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Omi is available under &lt;a href=&quot;https://github.com/BasedHardware/omi/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>libsdl-org/SDL</title>
      <link>https://github.com/libsdl-org/SDL</link>
      <description>&lt;p&gt;Simple Directmedia Layer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Simple DirectMedia Layer (SDL for short) is a cross-platform library designed to make it easy to write multi-media software, such as games and emulators.&lt;/p&gt; 
&lt;p&gt;You can find the latest release and additional information at: &lt;a href=&quot;https://www.libsdl.org/&quot;&gt;https://www.libsdl.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Installation instructions and a quick introduction is available in &lt;a href=&quot;https://raw.githubusercontent.com/libsdl-org/SDL/main/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library is distributed under the terms of the zlib license, available in &lt;a href=&quot;https://raw.githubusercontent.com/libsdl-org/SDL/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Enjoy!&lt;/p&gt; 
&lt;p&gt;Sam Lantinga (&lt;a href=&quot;mailto:slouken@libsdl.org&quot;&gt;slouken@libsdl.org&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NVIDIA/open-gpu-kernel-modules</title>
      <link>https://github.com/NVIDIA/open-gpu-kernel-modules</link>
      <description>&lt;p&gt;NVIDIA Linux open GPU kernel module source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NVIDIA Linux Open GPU Kernel Module Source&lt;/h1&gt; 
&lt;p&gt;This is the source release of the NVIDIA Linux open GPU kernel modules, version 580.76.05.&lt;/p&gt; 
&lt;h2&gt;How to Build&lt;/h2&gt; 
&lt;p&gt;To build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make modules -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install, first uninstall any existing NVIDIA kernel modules. Then, as root:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make modules_install -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the kernel modules built here must be used with GSP firmware and user-space NVIDIA GPU driver components from a corresponding 580.76.05 driver release. This can be achieved by installing the NVIDIA GPU driver from the .run file using the &lt;code&gt;--no-kernel-modules&lt;/code&gt; option. E.g.,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sh ./NVIDIA-Linux-[...].run --no-kernel-modules
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported Target CPU Architectures&lt;/h2&gt; 
&lt;p&gt;Currently, the kernel modules can be built for x86_64 or aarch64. If cross-compiling, set these variables on the make command line:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TARGET_ARCH=aarch64|x86_64
CC
LD
AR
CXX
OBJCOPY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;E.g.,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# compile on x86_64 for aarch64
make modules -j$(nproc)         \
    TARGET_ARCH=aarch64         \
    CC=aarch64-linux-gnu-gcc    \
    LD=aarch64-linux-gnu-ld     \
    AR=aarch64-linux-gnu-ar     \
    CXX=aarch64-linux-gnu-g++   \
    OBJCOPY=aarch64-linux-gnu-objcopy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Other Build Knobs&lt;/h2&gt; 
&lt;p&gt;NV_VERBOSE - Set this to &quot;1&quot; to print each complete command executed; otherwise, a succinct &quot;CC&quot; line is printed.&lt;/p&gt; 
&lt;p&gt;DEBUG - Set this to &quot;1&quot; to build the kernel modules as debug. By default, the build compiles without debugging information. This also enables various debug log messages in the kernel modules.&lt;/p&gt; 
&lt;p&gt;These variables can be set on the make command line. E.g.,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make modules -j$(nproc) NV_VERBOSE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported Toolchains&lt;/h2&gt; 
&lt;p&gt;Any reasonably modern version of GCC or Clang can be used to build the kernel modules. Note that the kernel interface layers of the kernel modules must be built with the toolchain that was used to build the kernel.&lt;/p&gt; 
&lt;h2&gt;Supported Linux Kernel Versions&lt;/h2&gt; 
&lt;p&gt;The NVIDIA open kernel modules support the same range of Linux kernel versions that are supported with the proprietary NVIDIA kernel modules. This is currently Linux kernel 4.15 or newer.&lt;/p&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Contributions can be made by creating a pull request on &lt;a href=&quot;https://github.com/NVIDIA/open-gpu-kernel-modules&quot;&gt;https://github.com/NVIDIA/open-gpu-kernel-modules&lt;/a&gt; We&#39;ll respond via GitHub.&lt;/p&gt; 
&lt;p&gt;Note that when submitting a pull request, you will be prompted to accept a Contributor License Agreement.&lt;/p&gt; 
&lt;p&gt;This code base is shared with NVIDIA&#39;s proprietary drivers, and various processing is performed on the shared code to produce the source code that is published here. This has several implications for the foreseeable future:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The GitHub repository will function mostly as a snapshot of each driver release.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We do not expect to be able to provide revision history for individual changes that were made to NVIDIA&#39;s shared code base. There will likely only be one git commit per driver release.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We may not be able to reflect individual contributions as separate git commits in the GitHub repository.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Because the code undergoes various processing prior to publishing here, contributions made here require manual merging to be applied to the shared code base. Therefore, large refactoring changes made here may be difficult to merge and accept back into the shared code base. If you have large refactoring to suggest, please contact us in advance, so we can coordinate.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Report Issues&lt;/h2&gt; 
&lt;p&gt;Problems specific to the Open GPU Kernel Modules can be reported in the Issues section of the &lt;a href=&quot;https://github.com/NVIDIA/open-gpu-kernel-modules&quot;&gt;https://github.com/NVIDIA/open-gpu-kernel-modules&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;Further, any of the existing bug reporting venues can be used to communicate problems to NVIDIA, such as our forum:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://forums.developer.nvidia.com/c/gpu-graphics/linux/148&quot;&gt;https://forums.developer.nvidia.com/c/gpu-graphics/linux/148&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;or &lt;a href=&quot;mailto:linux-bugs@nvidia.com&quot;&gt;linux-bugs@nvidia.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please see the &#39;NVIDIA Contact Info and Additional Resources&#39; section of the NVIDIA GPU Driver README for details.&lt;/p&gt; 
&lt;p&gt;Please see the separate &lt;a href=&quot;https://raw.githubusercontent.com/NVIDIA/open-gpu-kernel-modules/main/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt; document if you believe you have discovered a security vulnerability in this software.&lt;/p&gt; 
&lt;h2&gt;Kernel Interface and OS-Agnostic Components of Kernel Modules&lt;/h2&gt; 
&lt;p&gt;Most of NVIDIA&#39;s kernel modules are split into two components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;An &quot;OS-agnostic&quot; component: this is the component of each kernel module that is independent of operating system.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &quot;kernel interface layer&quot;: this is the component of each kernel module that is specific to the Linux kernel version and configuration.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When packaged in the NVIDIA .run installation package, the OS-agnostic component is provided as a binary: it is large and time-consuming to compile, so pre-built versions are provided so that the user does not have to compile it during every driver installation. For the nvidia.ko kernel module, this component is named &quot;nv-kernel.o_binary&quot;. For the nvidia-modeset.ko kernel module, this component is named &quot;nv-modeset-kernel.o_binary&quot;. Neither nvidia-drm.ko nor nvidia-uvm.ko have OS-agnostic components.&lt;/p&gt; 
&lt;p&gt;The kernel interface layer component for each kernel module must be built for the target kernel.&lt;/p&gt; 
&lt;h2&gt;Directory Structure Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kernel-open/&lt;/code&gt; The kernel interface layer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kernel-open/nvidia/&lt;/code&gt; The kernel interface layer for nvidia.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kernel-open/nvidia-drm/&lt;/code&gt; The kernel interface layer for nvidia-drm.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kernel-open/nvidia-modeset/&lt;/code&gt; The kernel interface layer for nvidia-modeset.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kernel-open/nvidia-uvm/&lt;/code&gt; The kernel interface layer for nvidia-uvm.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/&lt;/code&gt; The OS-agnostic code&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/nvidia/&lt;/code&gt; The OS-agnostic code for nvidia.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/nvidia-modeset/&lt;/code&gt; The OS-agnostic code for nvidia-modeset.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/common/&lt;/code&gt; Utility code used by one or more of nvidia.ko and nvidia-modeset.ko&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;nouveau/&lt;/code&gt; Tools for integration with the Nouveau device driver&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Nouveau device driver integration&lt;/h2&gt; 
&lt;p&gt;The Python script in the &#39;nouveau&#39; directory is used to extract some of the firmware binary images (and related data) encoded in the source code and store them as distinct files. These files are used by the Nouveau device driver to load and communicate with the GSP firmware.&lt;/p&gt; 
&lt;p&gt;The layout of the binary files is described in nouveau_firmware_layout.ods, which is an OpenDocument Spreadsheet file, compatible with most spreadsheet software applications.&lt;/p&gt; 
&lt;h2&gt;Compatible GPUs&lt;/h2&gt; 
&lt;p&gt;The NVIDIA open kernel modules can be used on any Turing or later GPU (see the table below).&lt;/p&gt; 
&lt;p&gt;For details on feature support and limitations, see the NVIDIA GPU driver end user README here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://us.download.nvidia.com/XFree86/Linux-x86_64/580.76.05/README/kernel_open.html&quot;&gt;https://us.download.nvidia.com/XFree86/Linux-x86_64/580.76.05/README/kernel_open.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For vGPU support, please refer to the README.vgpu packaged in the vGPU Host Package for more details.&lt;/p&gt; 
&lt;p&gt;In the below table, if three IDs are listed, the first is the PCI Device ID, the second is the PCI Subsystem Vendor ID, and the third is the PCI Subsystem Device ID.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Product Name&lt;/th&gt; 
   &lt;th&gt;PCI ID&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA TITAN RTX&lt;/td&gt; 
   &lt;td&gt;1E02&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Ti&lt;/td&gt; 
   &lt;td&gt;1E04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Ti&lt;/td&gt; 
   &lt;td&gt;1E07&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA CMP 50HX&lt;/td&gt; 
   &lt;td&gt;1E09&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 6000&lt;/td&gt; 
   &lt;td&gt;1E30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 8000&lt;/td&gt; 
   &lt;td&gt;1E30 1028 129E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 8000&lt;/td&gt; 
   &lt;td&gt;1E30 103C 129E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 8000&lt;/td&gt; 
   &lt;td&gt;1E30 10DE 129E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 6000&lt;/td&gt; 
   &lt;td&gt;1E36&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 8000&lt;/td&gt; 
   &lt;td&gt;1E78 10DE 13D8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 6000&lt;/td&gt; 
   &lt;td&gt;1E78 10DE 13D9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 SUPER&lt;/td&gt; 
   &lt;td&gt;1E81&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080&lt;/td&gt; 
   &lt;td&gt;1E82&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 SUPER&lt;/td&gt; 
   &lt;td&gt;1E84&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080&lt;/td&gt; 
   &lt;td&gt;1E87&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1E89&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080&lt;/td&gt; 
   &lt;td&gt;1E90&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1025 1375&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08A2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08EA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08EB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08EC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08ED&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08EE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 08EF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 093B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1028 093C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 8572&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 8573&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 8602&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 8606&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 86C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 86C7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 87A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 103C 87A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1043 131F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1043 137F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1043 141F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1043 1751&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 1660&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 1661&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 1662&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 75A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 75A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 86A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1458 86A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1462 1274&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1462 1277&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 152D 1220&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1558 95E1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1558 97E1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1A58 2002&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1A58 2005&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1A58 2007&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1A58 3000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1A58 3001&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E90 1D05 1069&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super&lt;/td&gt; 
   &lt;td&gt;1E91&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 103C 8607&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 103C 878A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 103C 878B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1043 1E61&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 1511&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 75B3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 75B4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 76B2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 76B3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 78A2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 78A3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 86B2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1458 86B3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1462 12AE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1462 12B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1462 12C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 17AA 22C3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 17AA 22C5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1A58 2009&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1A58 200A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 1A58 3002&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E91 8086 3012&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super&lt;/td&gt; 
   &lt;td&gt;1E93&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1025 1401&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1025 149C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1028 09D2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 8607&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 86C7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 87A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 103C 87A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 75B1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 75B2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 76B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 76B1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 78A0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 78A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 86B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1458 86B1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1462 12AE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1462 12B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1462 12B4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1462 12C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1558 50D3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1558 70D1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 17AA 22C3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 17AA 22C5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1A58 2009&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1A58 200A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1A58 3002&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1E93 1D05 1089&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000&lt;/td&gt; 
   &lt;td&gt;1EB0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000&lt;/td&gt; 
   &lt;td&gt;1EB1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000&lt;/td&gt; 
   &lt;td&gt;1EB5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1025 1375&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1025 1401&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1025 149C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1028 09C3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8780&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8782&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8783&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 103C 8785&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1043 1DD1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1462 1274&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1462 12B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1462 12C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 17AA 22B8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 17AA 22BA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1A58 2005&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1A58 2007&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1A58 2008&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB5 1A58 200A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000&lt;/td&gt; 
   &lt;td&gt;1EB6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 1028 09C3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8780&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8782&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8783&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 103C 8785&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 1462 1274&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 1462 1277&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 1462 12B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 1462 12C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 17AA 22B8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 4000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1EB6 17AA 22BA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tesla T4&lt;/td&gt; 
   &lt;td&gt;1EB8 10DE 12A2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 SUPER&lt;/td&gt; 
   &lt;td&gt;1EC2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 SUPER&lt;/td&gt; 
   &lt;td&gt;1EC7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080&lt;/td&gt; 
   &lt;td&gt;1ED0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 1025 132D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 1028 08ED&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 1028 08EE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 1028 08EF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 103C 8572&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 103C 8573&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 103C 8600&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 103C 8605&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 1043 138F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 1043 15C1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 17AA 3FEE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED0 17AA 3FFE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super&lt;/td&gt; 
   &lt;td&gt;1ED1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 1025 1432&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 103C 8746&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 103C 878A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 1043 165F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 144D C192&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 17AA 3FCE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 17AA 3FCF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED1 17AA 3FD0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super&lt;/td&gt; 
   &lt;td&gt;1ED3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 1025 1432&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 1028 09D1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 103C 8746&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 103C 878A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 1043 1D61&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 1043 1E51&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 1043 1F01&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 17AA 3FCE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 17AA 3FCF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2080 Super with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1ED3 17AA 3FD0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 5000&lt;/td&gt; 
   &lt;td&gt;1EF5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070&lt;/td&gt; 
   &lt;td&gt;1F02&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F03&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 SUPER&lt;/td&gt; 
   &lt;td&gt;1F06&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070&lt;/td&gt; 
   &lt;td&gt;1F07&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F08&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1F0A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA CMP 40HX&lt;/td&gt; 
   &lt;td&gt;1F0B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070&lt;/td&gt; 
   &lt;td&gt;1F10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1025 132D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1025 1342&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08A2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08EA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08EB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08EC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08ED&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08EE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 08EF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 093B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1028 093C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 103C 8572&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 103C 8573&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 103C 8602&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 103C 8606&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1043 132F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1043 136F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1043 1881&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1043 1E6E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 1658&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 1663&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 1664&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 75A4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 75A5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 86A4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1458 86A5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1462 1274&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1462 1277&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1558 95E1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1558 97E1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1A58 2002&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1A58 2005&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1A58 2007&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1A58 3000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1A58 3001&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1D05 105E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1D05 1070&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 1D05 2087&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F10 8086 2087&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F12&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 1028 098F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 103C 8741&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 103C 8744&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 103C 878E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 103C 880E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 1043 1E11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 1043 1F11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 1462 12D9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 17AA 3801&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 17AA 3802&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F12 17AA 3803&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070&lt;/td&gt; 
   &lt;td&gt;1F14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1025 1401&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1025 1432&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1025 1442&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1025 1446&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1025 147D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1028 09E2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1028 09F3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 8607&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 86C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 86C7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 8746&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 878A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 878B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 87A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 103C 87A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1043 174F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 1512&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 75B5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 75B6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 76B4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 76B5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 78A4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 78A5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 86B4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1458 86B5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1462 12AE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1462 12B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1462 12C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1558 50D3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1558 70D1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1A58 200C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1A58 2011&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F14 1A58 3002&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000&lt;/td&gt; 
   &lt;td&gt;1F36&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F36 1028 0990&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F36 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F36 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F36 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F36 1043 13CF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F36 1414 0032&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 SUPER&lt;/td&gt; 
   &lt;td&gt;1F42&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060 SUPER&lt;/td&gt; 
   &lt;td&gt;1F47&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070&lt;/td&gt; 
   &lt;td&gt;1F50&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 1028 08ED&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 1028 08EE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 1028 08EF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 103C 8572&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 103C 8573&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 103C 8574&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 103C 8600&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 103C 8605&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 17AA 3FEE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F50 17AA 3FFE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F51&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070&lt;/td&gt; 
   &lt;td&gt;1F54&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F54 103C 878A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F54 17AA 3FCE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F54 17AA 3FCF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2070 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F54 17AA 3FD0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2060&lt;/td&gt; 
   &lt;td&gt;1F55&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro RTX 3000&lt;/td&gt; 
   &lt;td&gt;1F76&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Matrox D-Series D2450&lt;/td&gt; 
   &lt;td&gt;1F76 102B 2800&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Matrox D-Series D2480&lt;/td&gt; 
   &lt;td&gt;1F76 102B 2900&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1F82&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1630&lt;/td&gt; 
   &lt;td&gt;1F83&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1F91&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 103C 863E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 103C 86E7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 103C 86E8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1043 12CF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1043 156F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1414 0032&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 144D C822&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1462 127E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1462 1281&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1462 1284&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1462 1285&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1462 129C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 17AA 229F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 17AA 3802&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 17AA 3806&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 17AA 3F1A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F91 1A58 1001&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti&lt;/td&gt; 
   &lt;td&gt;1F95&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1025 1479&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1025 147A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1025 147B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1025 147C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 103C 86E7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 103C 86E8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 103C 8815&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1043 1DFF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1043 1E1F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 144D C838&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1462 12BD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1462 12C5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1462 12D2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 17AA 22C0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 17AA 22C1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 17AA 3837&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 17AA 3F95&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1A58 1003&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1A58 1006&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1A58 1007&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F95 1E83 3E30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1F96&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F96 1462 1297&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX450&lt;/td&gt; 
   &lt;td&gt;1F97&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX450&lt;/td&gt; 
   &lt;td&gt;1F98&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1F99&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1025 1479&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1025 147A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1025 147B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1025 147C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 103C 8815&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1043 13B2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1043 1402&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1043 1902&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1462 12BD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1462 12C5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1462 12D2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 17AA 22DA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 17AA 3F93&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F99 1E83 3E30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX450&lt;/td&gt; 
   &lt;td&gt;1F9C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1F9D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1043 128D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1043 130D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1043 149C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1043 185C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1043 189C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1462 12F4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1462 1302&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1462 131B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1462 1326&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1462 132A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1F9D 1462 132E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX550&lt;/td&gt; 
   &lt;td&gt;1F9F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX550&lt;/td&gt; 
   &lt;td&gt;1FA0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000&lt;/td&gt; 
   &lt;td&gt;1FB0 1028 12DB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000&lt;/td&gt; 
   &lt;td&gt;1FB0 103C 12DB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000&lt;/td&gt; 
   &lt;td&gt;1FB0 103C 8A80&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000&lt;/td&gt; 
   &lt;td&gt;1FB0 10DE 12DB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA DGX Display&lt;/td&gt; 
   &lt;td&gt;1FB0 10DE 1485&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000&lt;/td&gt; 
   &lt;td&gt;1FB0 17AA 12DB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600&lt;/td&gt; 
   &lt;td&gt;1FB1 1028 1488&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600&lt;/td&gt; 
   &lt;td&gt;1FB1 103C 1488&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600&lt;/td&gt; 
   &lt;td&gt;1FB1 103C 8A80&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600&lt;/td&gt; 
   &lt;td&gt;1FB1 10DE 1488&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600&lt;/td&gt; 
   &lt;td&gt;1FB1 17AA 1488&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400&lt;/td&gt; 
   &lt;td&gt;1FB2 1028 1489&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400&lt;/td&gt; 
   &lt;td&gt;1FB2 103C 1489&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400&lt;/td&gt; 
   &lt;td&gt;1FB2 103C 8A80&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400&lt;/td&gt; 
   &lt;td&gt;1FB2 10DE 1489&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400&lt;/td&gt; 
   &lt;td&gt;1FB2 17AA 1489&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;1FB6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T550 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;1FB7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000&lt;/td&gt; 
   &lt;td&gt;1FB8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 1028 097E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8780&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8782&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8783&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 8785&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 103C 87F0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 1462 1281&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 1462 12BD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 17AA 22C0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T2000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB8 17AA 22C1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000&lt;/td&gt; 
   &lt;td&gt;1FB9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 1025 1479&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 1025 147A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 1025 147B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 1025 147C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8736&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8738&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8772&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8780&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8782&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8783&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 8785&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 103C 87F0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 1462 12BD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 17AA 22C0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000 with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;1FB9 17AA 22C1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T600 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;1FBA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T500&lt;/td&gt; 
   &lt;td&gt;1FBB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1200 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;1FBC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;1FDD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000 8GB&lt;/td&gt; 
   &lt;td&gt;1FF0 1028 1612&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000 8GB&lt;/td&gt; 
   &lt;td&gt;1FF0 103C 1612&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000 8GB&lt;/td&gt; 
   &lt;td&gt;1FF0 103C 8A80&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000 8GB&lt;/td&gt; 
   &lt;td&gt;1FF0 10DE 1612&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T1000 8GB&lt;/td&gt; 
   &lt;td&gt;1FF0 17AA 1612&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400 4GB&lt;/td&gt; 
   &lt;td&gt;1FF2 1028 1613&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400 4GB&lt;/td&gt; 
   &lt;td&gt;1FF2 103C 1613&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400E&lt;/td&gt; 
   &lt;td&gt;1FF2 103C 18FF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400 4GB&lt;/td&gt; 
   &lt;td&gt;1FF2 103C 8A80&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400 4GB&lt;/td&gt; 
   &lt;td&gt;1FF2 10DE 1613&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400E&lt;/td&gt; 
   &lt;td&gt;1FF2 10DE 18FF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400 4GB&lt;/td&gt; 
   &lt;td&gt;1FF2 17AA 1613&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA T400E&lt;/td&gt; 
   &lt;td&gt;1FF2 17AA 18FF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Quadro T1000&lt;/td&gt; 
   &lt;td&gt;1FF9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM4-40GB&lt;/td&gt; 
   &lt;td&gt;20B0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-PG509-200&lt;/td&gt; 
   &lt;td&gt;20B0 10DE 1450&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20B2 10DE 1463&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20B2 10DE 147F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20B2 10DE 1622&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20B2 10DE 1623&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA PG509-210&lt;/td&gt; 
   &lt;td&gt;20B2 10DE 1625&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM-64GB&lt;/td&gt; 
   &lt;td&gt;20B3 10DE 14A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-SXM-64GB&lt;/td&gt; 
   &lt;td&gt;20B3 10DE 14A8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100 80GB PCIe&lt;/td&gt; 
   &lt;td&gt;20B5 10DE 1533&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100 80GB PCIe&lt;/td&gt; 
   &lt;td&gt;20B5 10DE 1642&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA PG506-232&lt;/td&gt; 
   &lt;td&gt;20B6 10DE 1492&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A30&lt;/td&gt; 
   &lt;td&gt;20B7 10DE 1532&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A30&lt;/td&gt; 
   &lt;td&gt;20B7 10DE 1804&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A30&lt;/td&gt; 
   &lt;td&gt;20B7 10DE 1852&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-40GB&lt;/td&gt; 
   &lt;td&gt;20BD 10DE 17F4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A100-PCIE-40GB&lt;/td&gt; 
   &lt;td&gt;20F1 10DE 145F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 179B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 179C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 179D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 179E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 179F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 17A0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 17A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800-SXM4-80GB&lt;/td&gt; 
   &lt;td&gt;20F3 10DE 17A2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800 80GB PCIe&lt;/td&gt; 
   &lt;td&gt;20F5 10DE 1799&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800 80GB PCIe LC&lt;/td&gt; 
   &lt;td&gt;20F5 10DE 179A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800 40GB Active&lt;/td&gt; 
   &lt;td&gt;20F6 1028 180A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800 40GB Active&lt;/td&gt; 
   &lt;td&gt;20F6 103C 180A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800 40GB Active&lt;/td&gt; 
   &lt;td&gt;20F6 10DE 180A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A800 40GB Active&lt;/td&gt; 
   &lt;td&gt;20F6 17AA 180A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA AX800&lt;/td&gt; 
   &lt;td&gt;20FD 10DE 17F8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti&lt;/td&gt; 
   &lt;td&gt;2182&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660&lt;/td&gt; 
   &lt;td&gt;2184&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 SUPER&lt;/td&gt; 
   &lt;td&gt;2187&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650&lt;/td&gt; 
   &lt;td&gt;2188&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA CMP 30HX&lt;/td&gt; 
   &lt;td&gt;2189&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti&lt;/td&gt; 
   &lt;td&gt;2191&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1028 0949&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 85FB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 85FE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 86D6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 8741&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 8744&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 878D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 87AF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 103C 87B3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1043 171F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1043 17EF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1043 18D1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1414 0032&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1462 128A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1462 128B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1462 12C6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1462 12CB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1462 12CC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 1462 12D9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 17AA 380C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 17AA 381D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti with Max-Q Design&lt;/td&gt; 
   &lt;td&gt;2191 17AA 381E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1650 Ti&lt;/td&gt; 
   &lt;td&gt;2192&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 SUPER&lt;/td&gt; 
   &lt;td&gt;21C4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce GTX 1660 Ti&lt;/td&gt; 
   &lt;td&gt;21D1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3090 Ti&lt;/td&gt; 
   &lt;td&gt;2203&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3090&lt;/td&gt; 
   &lt;td&gt;2204&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080&lt;/td&gt; 
   &lt;td&gt;2206&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070 Ti&lt;/td&gt; 
   &lt;td&gt;2207&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080 Ti&lt;/td&gt; 
   &lt;td&gt;2208&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080&lt;/td&gt; 
   &lt;td&gt;220A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA CMP 90HX&lt;/td&gt; 
   &lt;td&gt;220D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080&lt;/td&gt; 
   &lt;td&gt;2216&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A6000&lt;/td&gt; 
   &lt;td&gt;2230 1028 1459&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A6000&lt;/td&gt; 
   &lt;td&gt;2230 103C 1459&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A6000&lt;/td&gt; 
   &lt;td&gt;2230 10DE 1459&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A6000&lt;/td&gt; 
   &lt;td&gt;2230 17AA 1459&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5000&lt;/td&gt; 
   &lt;td&gt;2231 1028 147E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5000&lt;/td&gt; 
   &lt;td&gt;2231 103C 147E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5000&lt;/td&gt; 
   &lt;td&gt;2231 10DE 147E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5000&lt;/td&gt; 
   &lt;td&gt;2231 17AA 147E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4500&lt;/td&gt; 
   &lt;td&gt;2232 1028 163C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4500&lt;/td&gt; 
   &lt;td&gt;2232 103C 163C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4500&lt;/td&gt; 
   &lt;td&gt;2232 10DE 163C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4500&lt;/td&gt; 
   &lt;td&gt;2232 17AA 163C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5500&lt;/td&gt; 
   &lt;td&gt;2233 1028 165A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5500&lt;/td&gt; 
   &lt;td&gt;2233 103C 165A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5500&lt;/td&gt; 
   &lt;td&gt;2233 10DE 165A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5500&lt;/td&gt; 
   &lt;td&gt;2233 17AA 165A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A40&lt;/td&gt; 
   &lt;td&gt;2235 10DE 145A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A10&lt;/td&gt; 
   &lt;td&gt;2236 10DE 1482&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A10G&lt;/td&gt; 
   &lt;td&gt;2237 10DE 152F&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A10M&lt;/td&gt; 
   &lt;td&gt;2238 10DE 1677&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H100 NVL&lt;/td&gt; 
   &lt;td&gt;2321 10DE 1839&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H800 PCIe&lt;/td&gt; 
   &lt;td&gt;2322 10DE 17A4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H800&lt;/td&gt; 
   &lt;td&gt;2324 10DE 17A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H800&lt;/td&gt; 
   &lt;td&gt;2324 10DE 17A8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H20&lt;/td&gt; 
   &lt;td&gt;2329 10DE 198B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H20&lt;/td&gt; 
   &lt;td&gt;2329 10DE 198C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H20-3e&lt;/td&gt; 
   &lt;td&gt;232C 10DE 2063&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H100 80GB HBM3&lt;/td&gt; 
   &lt;td&gt;2330 10DE 16C0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H100 80GB HBM3&lt;/td&gt; 
   &lt;td&gt;2330 10DE 16C1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H100 PCIe&lt;/td&gt; 
   &lt;td&gt;2331 10DE 1626&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H200&lt;/td&gt; 
   &lt;td&gt;2335 10DE 18BE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H200&lt;/td&gt; 
   &lt;td&gt;2335 10DE 18BF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H100&lt;/td&gt; 
   &lt;td&gt;2339 10DE 17FC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H800 NVL&lt;/td&gt; 
   &lt;td&gt;233A 10DE 183A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA H200 NVL&lt;/td&gt; 
   &lt;td&gt;233B 10DE 1996&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GH200 120GB&lt;/td&gt; 
   &lt;td&gt;2342 10DE 16EB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GH200 120GB&lt;/td&gt; 
   &lt;td&gt;2342 10DE 1805&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GH200 480GB&lt;/td&gt; 
   &lt;td&gt;2342 10DE 1809&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GH200 144G HBM3e&lt;/td&gt; 
   &lt;td&gt;2348 10DE 18D2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Ti&lt;/td&gt; 
   &lt;td&gt;2414&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2420&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5500 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2438&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2460&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070 Ti&lt;/td&gt; 
   &lt;td&gt;2482&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070&lt;/td&gt; 
   &lt;td&gt;2484&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Ti&lt;/td&gt; 
   &lt;td&gt;2486&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060&lt;/td&gt; 
   &lt;td&gt;2487&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070&lt;/td&gt; 
   &lt;td&gt;2488&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Ti&lt;/td&gt; 
   &lt;td&gt;2489&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA CMP 70HX&lt;/td&gt; 
   &lt;td&gt;248A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;249C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;249C 1D05 1194&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;249D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24A0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24A0 1D05 1192&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4000&lt;/td&gt; 
   &lt;td&gt;24B0 1028 14AD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4000&lt;/td&gt; 
   &lt;td&gt;24B0 103C 14AD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4000&lt;/td&gt; 
   &lt;td&gt;24B0 10DE 14AD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4000&lt;/td&gt; 
   &lt;td&gt;24B0 17AA 14AD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4000H&lt;/td&gt; 
   &lt;td&gt;24B1 10DE 1658&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A5000 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24B6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4000 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24B7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A3000 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24B8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A3000 12GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24B9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4500 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24BA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A3000 12GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24BB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060&lt;/td&gt; 
   &lt;td&gt;24C7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Ti&lt;/td&gt; 
   &lt;td&gt;24C9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3080 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24DC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24DD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3070 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;24E0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A4500 Embedded GPU&lt;/td&gt; 
   &lt;td&gt;24FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060&lt;/td&gt; 
   &lt;td&gt;2503&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060&lt;/td&gt; 
   &lt;td&gt;2504&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050&lt;/td&gt; 
   &lt;td&gt;2507&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 OEM&lt;/td&gt; 
   &lt;td&gt;2508&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2520&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2521&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2523&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000&lt;/td&gt; 
   &lt;td&gt;2531 1028 151D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000&lt;/td&gt; 
   &lt;td&gt;2531 103C 151D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000&lt;/td&gt; 
   &lt;td&gt;2531 10DE 151D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000&lt;/td&gt; 
   &lt;td&gt;2531 17AA 151D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060&lt;/td&gt; 
   &lt;td&gt;2544&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2560&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2563&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 12GB&lt;/td&gt; 
   &lt;td&gt;2571 1028 1611&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 12GB&lt;/td&gt; 
   &lt;td&gt;2571 103C 1611&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 12GB&lt;/td&gt; 
   &lt;td&gt;2571 10DE 1611&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 12GB&lt;/td&gt; 
   &lt;td&gt;2571 17AA 1611&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050&lt;/td&gt; 
   &lt;td&gt;2582&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050&lt;/td&gt; 
   &lt;td&gt;2584&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A0 103C 8928&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A0 103C 89F9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A0 1D05 1196&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A2 1028 0BAF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A2 1D05 1195&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25A5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX570&lt;/td&gt; 
   &lt;td&gt;25A6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2050&lt;/td&gt; 
   &lt;td&gt;25A7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2050&lt;/td&gt; 
   &lt;td&gt;25A9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce MX570 A&lt;/td&gt; 
   &lt;td&gt;25AA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 4GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25AB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 6GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25AC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2050&lt;/td&gt; 
   &lt;td&gt;25AD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000&lt;/td&gt; 
   &lt;td&gt;25B0 1028 1878&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000&lt;/td&gt; 
   &lt;td&gt;25B0 103C 1878&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000&lt;/td&gt; 
   &lt;td&gt;25B0 103C 8D96&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000&lt;/td&gt; 
   &lt;td&gt;25B0 10DE 1878&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000&lt;/td&gt; 
   &lt;td&gt;25B0 17AA 1878&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A400&lt;/td&gt; 
   &lt;td&gt;25B2 1028 1879&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A400&lt;/td&gt; 
   &lt;td&gt;25B2 103C 1879&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A400&lt;/td&gt; 
   &lt;td&gt;25B2 103C 8D95&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A400&lt;/td&gt; 
   &lt;td&gt;25B2 10DE 1879&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A400&lt;/td&gt; 
   &lt;td&gt;25B2 17AA 1879&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A16&lt;/td&gt; 
   &lt;td&gt;25B6 10DE 14A9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA A2&lt;/td&gt; 
   &lt;td&gt;25B6 10DE 157E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25B8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25B9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 8GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25BA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A500 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25BB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000 6GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25BC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A500 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25BD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25E0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25E2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25E5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 6GB Laptop GPU&lt;/td&gt; 
   &lt;td&gt;25EC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 2050&lt;/td&gt; 
   &lt;td&gt;25ED&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A1000 Embedded GPU&lt;/td&gt; 
   &lt;td&gt;25F9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A2000 Embedded GPU&lt;/td&gt; 
   &lt;td&gt;25FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX A500 Embedded GPU&lt;/td&gt; 
   &lt;td&gt;25FB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4090&lt;/td&gt; 
   &lt;td&gt;2684&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4090 D&lt;/td&gt; 
   &lt;td&gt;2685&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070 Ti SUPER&lt;/td&gt; 
   &lt;td&gt;2689&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 6000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B1 1028 16A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 6000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B1 103C 16A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 6000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B1 10DE 16A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 6000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B1 17AA 16A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B2 1028 17FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B2 103C 17FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B2 10DE 17FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B2 17AA 17FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5880 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B3 1028 1934&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5880 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B3 103C 1934&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5880 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B3 10DE 1934&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5880 Ada Generation&lt;/td&gt; 
   &lt;td&gt;26B3 17AA 1934&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L40&lt;/td&gt; 
   &lt;td&gt;26B5 10DE 169D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L40&lt;/td&gt; 
   &lt;td&gt;26B5 10DE 17DA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L40S&lt;/td&gt; 
   &lt;td&gt;26B9 10DE 1851&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L40S&lt;/td&gt; 
   &lt;td&gt;26B9 10DE 18CF&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L20&lt;/td&gt; 
   &lt;td&gt;26BA 10DE 1957&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L20&lt;/td&gt; 
   &lt;td&gt;26BA 10DE 1990&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4080 SUPER&lt;/td&gt; 
   &lt;td&gt;2702&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4080&lt;/td&gt; 
   &lt;td&gt;2704&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070 Ti SUPER&lt;/td&gt; 
   &lt;td&gt;2705&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070&lt;/td&gt; 
   &lt;td&gt;2709&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4090 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2717&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5000 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2730&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4090 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2757&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 5000 Ada Generation Embedded GPU&lt;/td&gt; 
   &lt;td&gt;2770&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070 Ti&lt;/td&gt; 
   &lt;td&gt;2782&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070 SUPER&lt;/td&gt; 
   &lt;td&gt;2783&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070&lt;/td&gt; 
   &lt;td&gt;2786&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060 Ti&lt;/td&gt; 
   &lt;td&gt;2788&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4080 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;27A0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 SFF Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B0 1028 16FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 SFF Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B0 103C 16FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 SFF Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B0 10DE 16FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 SFF Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B0 17AA 16FA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4500 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B1 1028 180C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4500 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B1 103C 180C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4500 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B1 10DE 180C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4500 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B1 17AA 180C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B2 1028 181B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B2 103C 181B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B2 10DE 181B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;27B2 17AA 181B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L2&lt;/td&gt; 
   &lt;td&gt;27B6 10DE 1933&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L4&lt;/td&gt; 
   &lt;td&gt;27B8 10DE 16CA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA L4&lt;/td&gt; 
   &lt;td&gt;27B8 10DE 16EE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 4000 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;27BA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 3500 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;27BB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4080 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;27E0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 3500 Ada Generation Embedded GPU&lt;/td&gt; 
   &lt;td&gt;27FB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060 Ti&lt;/td&gt; 
   &lt;td&gt;2803&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060 Ti&lt;/td&gt; 
   &lt;td&gt;2805&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060&lt;/td&gt; 
   &lt;td&gt;2808&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2820&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 A Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2822&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 3000 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2838&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4070 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2860&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060&lt;/td&gt; 
   &lt;td&gt;2882&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28A0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28A1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 A Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28A3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 1028 1870&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 103C 1870&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000E Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 103C 1871&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 10DE 1870&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000E Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 10DE 1871&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000 Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 17AA 1870&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000E Ada Generation&lt;/td&gt; 
   &lt;td&gt;28B0 17AA 1871&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28B8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 1000 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28B9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 500 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28BA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 500 Ada Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28BB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28E0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 4050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28E1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 3050 A Laptop GPU&lt;/td&gt; 
   &lt;td&gt;28E3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX 2000 Ada Generation Embedded GPU&lt;/td&gt; 
   &lt;td&gt;28F8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA B200&lt;/td&gt; 
   &lt;td&gt;2901 10DE 1999&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA B200&lt;/td&gt; 
   &lt;td&gt;2901 10DE 199B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA B200&lt;/td&gt; 
   &lt;td&gt;2901 10DE 20DA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GB200&lt;/td&gt; 
   &lt;td&gt;2941 10DE 2046&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GB200&lt;/td&gt; 
   &lt;td&gt;2941 10DE 20CA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GB200&lt;/td&gt; 
   &lt;td&gt;2941 10DE 20D5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GB200&lt;/td&gt; 
   &lt;td&gt;2941 10DE 21C9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GB200&lt;/td&gt; 
   &lt;td&gt;2941 10DE 21CA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5090&lt;/td&gt; 
   &lt;td&gt;2B85&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5090 D&lt;/td&gt; 
   &lt;td&gt;2B87&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5090 D V2&lt;/td&gt; 
   &lt;td&gt;2B8C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB1 1028 204B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB1 103C 204B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB1 10DE 204B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB1 17AA 204B&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 5000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2BB3 1028 204D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 5000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2BB3 103C 204D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 5000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2BB3 10DE 204D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 5000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2BB3 17AA 204D&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Max-Q Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB4 1028 204C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Max-Q Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB4 103C 204C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Max-Q Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB4 10DE 204C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Max-Q Workstation Edition&lt;/td&gt; 
   &lt;td&gt;2BB4 17AA 204C&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 6000 Blackwell Server Edition&lt;/td&gt; 
   &lt;td&gt;2BB5 10DE 204E&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5080&lt;/td&gt; 
   &lt;td&gt;2C02&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5070 Ti&lt;/td&gt; 
   &lt;td&gt;2C05&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5090 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2C18&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5080 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2C19&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4500 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C31 1028 2051&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4500 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C31 103C 2051&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4500 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C31 10DE 2051&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4500 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C31 17AA 2051&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell SFF Edition&lt;/td&gt; 
   &lt;td&gt;2C33 1028 2053&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell SFF Edition&lt;/td&gt; 
   &lt;td&gt;2C33 103C 2053&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell SFF Edition&lt;/td&gt; 
   &lt;td&gt;2C33 10DE 2053&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell SFF Edition&lt;/td&gt; 
   &lt;td&gt;2C33 17AA 2053&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C34 1028 2052&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C34 103C 2052&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C34 10DE 2052&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2C34 17AA 2052&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 5000 Blackwell Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2C38&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 4000 Blackwell Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2C39&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5090 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2C58&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5080 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2C59&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5060 Ti&lt;/td&gt; 
   &lt;td&gt;2D04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5060&lt;/td&gt; 
   &lt;td&gt;2D05&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5070 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2D18&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2D19&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 2000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2D30 1028 2054&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 2000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2D30 103C 2054&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 2000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2D30 10DE 2054&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 2000 Blackwell&lt;/td&gt; 
   &lt;td&gt;2D30 17AA 2054&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 2000 Blackwell Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2D39&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5070 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2D58&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5060 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2D59&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5050&lt;/td&gt; 
   &lt;td&gt;2D83&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2D98&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 1000 Blackwell Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2DB8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 500 Blackwell Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2DB9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5050 Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2DD8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5070&lt;/td&gt; 
   &lt;td&gt;2F04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5070 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2F18&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA RTX PRO 3000 Blackwell Generation Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2F38&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NVIDIA GeForce RTX 5070 Ti Laptop GPU&lt;/td&gt; 
   &lt;td&gt;2F58&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>bol-van/zapret</title>
      <link>https://github.com/bol-van/zapret</link>
      <description>&lt;p&gt;DPI bypass multi platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zapret v71.3&lt;/h1&gt; 
&lt;h1&gt;ВНИМАНИЕ, остерегайтесь мошенников&lt;/h1&gt; 
&lt;p&gt;zapret является свободным и open source. Всякий, кто понуждает вас скачивать zapret только с его ресурса, требует удалить ссылки, видео, файлы, обосновывая эти требования авторскими правами, сам нарушает &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/LICENSE.txt&quot;&gt;лицензию&lt;/a&gt;. Однако, это не исключает &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%B0%D1%82%D1%8C-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D0%B0&quot;&gt;добровольные пожертвования&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Multilanguage README&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/readme.en.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-en-red.svg?sanitize=true&quot; alt=&quot;en&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/readme.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lang-ru-green.svg?sanitize=true&quot; alt=&quot;ru&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B7%D0%B0%D1%87%D0%B5%D0%BC-%D1%8D%D1%82%D0%BE-%D0%BD%D1%83%D0%B6%D0%BD%D0%BE&quot;&gt;Зачем это нужно&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B1%D1%8B%D1%81%D1%82%D1%80%D1%8B%D0%B9-%D1%81%D1%82%D0%B0%D1%80%D1%82&quot;&gt;Быстрый старт&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D0%B0%D0%BA-%D1%8D%D1%82%D0%BE-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82&quot;&gt;Как это работает&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%87%D1%82%D0%BE-%D1%81%D0%B5%D0%B9%D1%87%D0%B0%D1%81-%D0%BF%D1%80%D0%BE%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%B8%D1%82-%D0%B2-%D1%80%D0%BE%D1%81%D1%81%D0%B8%D0%B8&quot;&gt;Что сейчас происходит в России&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D0%B0%D0%BA-%D1%8D%D1%82%D0%BE-%D1%80%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-%D0%BD%D0%B0-%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B5-%D0%B2-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B5-linux&quot;&gt;Как это реализовать на практике в системе linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D1%8D%D1%82%D0%BE-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%82%D1%8C-%D0%BD%D0%B5-%D0%B1%D1%83%D0%B4%D0%B5%D1%82&quot;&gt;Когда это работать не будет&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#nfqws&quot;&gt;nfqws&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B0%D1%82%D0%B0%D0%BA%D0%B0-%D0%B4%D0%B5%D1%81%D0%B8%D0%BD%D1%85%D1%80%D0%BE%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-dpi&quot;&gt;АТАКА ДЕСИНХРОНИЗАЦИИ DPI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%84%D0%B5%D0%B9%D0%BA%D0%B8&quot;&gt;ФЕЙКИ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D1%84%D0%B5%D0%B9%D0%BA%D0%BE%D0%B2&quot;&gt;МОДИФИКАЦИЯ ФЕЙКОВ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#tcp-%D1%81%D0%B5%D0%B3%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F&quot;&gt;TCP СЕГМЕНТАЦИЯ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D0%B5%D1%80%D0%B5%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5-sequence-numbers&quot;&gt;ПЕРЕКРЫТИЕ SEQUENCE NUMBERS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D1%80%D0%B5%D0%B6%D0%B8%D0%BC%D1%8B-ipv6&quot;&gt;СПЕЦИФИЧЕСКИЕ РЕЖИМЫ IPV6&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D0%BE%D1%80%D0%B8%D0%B3%D0%B8%D0%BD%D0%B0%D0%BB%D0%B0&quot;&gt;МОДИФИКАЦИЯ ОРИГИНАЛА&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B4%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%D1%82%D1%8B&quot;&gt;ДУБЛИКАТЫ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D0%BE%D0%BC%D0%B1%D0%B8%D0%BD%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%BE%D0%B2-%D0%B4%D0%B5%D1%81%D0%B8%D0%BD%D1%85%D1%80%D0%BE%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8&quot;&gt;КОМБИНИРОВАНИЕ МЕТОДОВ ДЕСИНХРОНИЗАЦИИ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D1%8D%D1%88-ip&quot;&gt;КЭШ IP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%80%D0%B5%D0%B0%D0%BA%D1%86%D0%B8%D1%8F-dpi-%D0%BD%D0%B0-%D0%BE%D1%82%D0%B2%D0%B5%D1%82-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0&quot;&gt;РЕАКЦИЯ DPI НА ОТВЕТ СЕРВЕРА&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%80%D0%B5%D0%B6%D0%B8%D0%BC-synack&quot;&gt;РЕЖИМ SYNACK&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%80%D0%B5%D0%B6%D0%B8%D0%BC-syndata&quot;&gt;РЕЖИМ SYNDATA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B2%D0%B8%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%8B&quot;&gt;ВИРТУАЛЬНЫЕ МАШИНЫ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#conntrack&quot;&gt;CONNTRACK&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%80%D0%B5%D0%B0%D1%81%D1%81%D0%B5%D0%BC%D0%B1%D0%BB%D0%B8%D0%BD%D0%B3&quot;&gt;РЕАССЕМБЛИНГ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%BA%D0%B0-udp&quot;&gt;ПОДДЕРЖКА UDP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#ip-%D1%84%D1%80%D0%B0%D0%B3%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F&quot;&gt;IP ФРАГМЕНТАЦИЯ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BD%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D1%81%D1%82%D1%80%D0%B0%D1%82%D0%B5%D0%B3%D0%B8%D0%B8&quot;&gt;МНОЖЕСТВЕННЫЕ СТРАТЕГИИ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D0%BE-wifi&quot;&gt;ФИЛЬТРАЦИЯ ПО WIFI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#iptables-%D0%B4%D0%BB%D1%8F-nfqws&quot;&gt;IPTABLES ДЛЯ NFQWS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#nftables-%D0%B4%D0%BB%D1%8F-nfqws&quot;&gt;NFTABLES ДЛЯ NFQWS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#flow-offloading&quot;&gt;FLOW OFFLOADING&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B4%D1%83%D1%80%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81%D0%BE-%D1%81%D1%82%D0%BE%D1%80%D0%BE%D0%BD%D1%8B-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0&quot;&gt;ДУРЕНИЕ СО СТОРОНЫ СЕРВЕРА&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#tpws&quot;&gt;tpws&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#tcp-%D1%81%D0%B5%D0%B3%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2-tpws&quot;&gt;TCP СЕГМЕНТАЦИЯ В TPWS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#tlsrec&quot;&gt;TLSREC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#mss&quot;&gt;MSS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B4%D1%80%D1%83%D0%B3%D0%B8%D0%B5-%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D1%8B-%D0%B4%D1%83%D1%80%D0%B5%D0%BD%D0%B8%D1%8F&quot;&gt;ДРУГИЕ ПАРАМЕТРЫ ДУРЕНИЯ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BD%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D1%81%D1%82%D1%80%D0%B0%D1%82%D0%B5%D0%B3%D0%B8%D0%B8-1&quot;&gt;МНОЖЕСТВЕННЫЕ СТРАТЕГИИ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%81%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D1%8B%D0%B5-%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D1%8B&quot;&gt;СЛУЖЕБНЫЕ ПАРАМЕТРЫ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#iptables-%D0%B4%D0%BB%D1%8F-tpws&quot;&gt;IPTABLES ДЛЯ TPWS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#nftables-%D0%B4%D0%BB%D1%8F-tpws&quot;&gt;NFTABLES ДЛЯ TPWS&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#ip2net&quot;&gt;ip2net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#mdig&quot;&gt;mdig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-%D1%81%D0%BF%D0%B8%D1%81%D0%BA%D0%B0-%D0%B7%D0%B0%D0%B1%D0%BB%D0%BE%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-ip&quot;&gt;Способы получения списка заблокированных IP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D0%BE-%D0%B8%D0%BC%D0%B5%D0%BD%D0%B0%D0%BC-%D0%B4%D0%BE%D0%BC%D0%B5%D0%BD%D0%BE%D0%B2&quot;&gt;Фильтрация по именам доменов&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%80%D0%B5%D0%B6%D0%B8%D0%BC-%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D0%B0%D1%86%D0%B8%D0%B8-autohostlist&quot;&gt;Режим фильтрации autohostlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%BF%D1%80%D0%BE%D0%B2%D0%B0%D0%B9%D0%B4%D0%B5%D1%80%D0%B0&quot;&gt;Проверка провайдера&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B2%D1%8B%D0%B1%D0%BE%D1%80-%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2&quot;&gt;Выбор параметров&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D1%80%D0%B8%D0%BA%D1%80%D1%83%D1%87%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BA-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B5-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D1%84%D0%B0%D0%B5%D1%80%D0%B2%D0%BE%D0%BB%D0%BE%D0%BC-%D0%B8%D0%BB%D0%B8-%D1%81%D0%B2%D0%BE%D0%B5%D0%B9-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B5-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B0&quot;&gt;Прикручивание к системе управления фаерволом или своей системе запуска&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B2%D0%B0%D1%80%D0%B8%D0%B0%D0%BD%D1%82-custom&quot;&gt;Вариант custom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D1%80%D0%BE%D1%81%D1%82%D0%B0%D1%8F-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0&quot;&gt;Простая установка&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-%D0%BF%D0%BE%D0%B4-systemd&quot;&gt;Установка под systemd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D1%80%D0%BE%D1%81%D1%82%D0%B0%D1%8F-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-%D0%BD%D0%B0-openwrt&quot;&gt;Простая установка на openwrt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-%D0%BD%D0%B0-openwrt-%D0%B2-%D1%80%D0%B5%D0%B6%D0%B8%D0%BC%D0%B5-%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B9-%D0%BD%D0%B5%D1%85%D0%B2%D0%B0%D1%82%D0%BA%D0%B8-%D0%BC%D0%B5%D1%81%D1%82%D0%B0-%D0%BD%D0%B0-%D0%B4%D0%B8%D1%81%D0%BA%D0%B5&quot;&gt;Установка на openwrt в режиме острой нехватки места на диске&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#android&quot;&gt;Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BE%D0%B1%D0%B8%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BC%D1%8B-%D0%B8-%D1%80%D0%BE%D1%83%D1%82%D0%B5%D1%80%D1%8B-huawei&quot;&gt;Мобильные модемы и роутеры huawei&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#freebsd-openbsd-macos&quot;&gt;FreeBSD, OpenBSD, MacOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#windows&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%B4%D1%80%D1%83%D0%B3%D0%B8%D0%B5-%D0%BF%D1%80%D0%BE%D1%88%D0%B8%D0%B2%D0%BA%D0%B8&quot;&gt;Другие прошивки&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BE%D0%B1%D1%85%D0%BE%D0%B4-%D0%B1%D0%BB%D0%BE%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B8-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-%D1%81%D1%82%D0%BE%D1%80%D0%BE%D0%BD%D0%BD%D0%B8%D0%B9-%D1%85%D0%BE%D1%81%D1%82&quot;&gt;Обход блокировки через сторонний хост&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D1%81%D1%82%D0%BE%D0%B8%D1%82-%D0%B2%D0%BB%D0%BE%D0%B6%D0%B8%D1%82%D1%8C%D1%81%D1%8F-%D0%B2-%D0%BF%D0%BE%D0%BA%D1%83%D0%BF%D0%BA%D1%83-vps&quot;&gt;Почему стоит вложиться в покупку VPS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BF%D0%BE%D0%B4%D0%B4%D0%B5%D1%80%D0%B6%D0%B0%D1%82%D1%8C-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D0%B0&quot;&gt;Поддержать разработчика&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Зачем это нужно&lt;/h2&gt; 
&lt;p&gt;Автономное средство противодействия DPI, которое не требует подключения каких-либо сторонних серверов. Может помочь обойти блокировки или замедление сайтов HTTP(S), сигнатурный анализ TCP и UDP протоколов, например, с целью блокировки VPN.&lt;/p&gt; 
&lt;p&gt;Проект нацелен прежде всего на маломощные embedded устройства - роутеры, работающие под OpenWrt. Поддерживаются традиционные Linux-системы, FreeBSD, OpenBSD, частично macOS. В некоторых случаях возможна самостоятельная прикрутка решения к различным прошивкам.&lt;/p&gt; 
&lt;p&gt;Большая часть функционала работает на Windows.&lt;/p&gt; 
&lt;h2&gt;Быстрый старт&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/quick_start.md&quot;&gt;Linux/openWrt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/quick_start_windows.md&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Как это работает&lt;/h2&gt; 
&lt;p&gt;В самом простейшем случае вы имеете дело с пассивным DPI. Пассивный DPI может читать трафик из потока, может инжектить свои пакеты, но не может блокировать проходящие пакеты. Если запрос &quot;плохой&quot;, пассивный DPI инжектит пакет RST, опционально дополняя его пакетом HTTP redirect. Если фейк пакет инжектится только для клиента, в этом случае можно обойтись командами iptables для дропа RST и/или редиректа на заглушку по определённым условиям, которые нужно подбирать для каждого провайдера индивидуально. Так мы обходим последствия срабатывания триггера запрета. Если пассивный DPI направляет пакет RST в том числе и серверу, то вы ничего с этим не сможете сделать. Ваша задача — не допустить срабатывания триггера запрета. Одними iptables уже не обойтись. Этот проект нацелен именно на предотвращение срабатывания запрета, а не ликвидацию его последствий.&lt;/p&gt; 
&lt;p&gt;Активный DPI ставится в разрез провода и может дропать пакеты по любым критериям, в том числе распознавать TCP-потоки и блокировать любые пакеты, принадлежащие потоку.&lt;/p&gt; 
&lt;p&gt;Как не допустить срабатывания триггера запрета? Послать то, на что DPI не рассчитывает и что ломает ему алгоритм распознавания запросов и их блокировки.&lt;/p&gt; 
&lt;p&gt;Некоторые DPI не могут распознать HTTP-запрос, если он разделен на TCP-сегменты. Например, запрос вида &lt;code&gt;GET / HTTP/1.1\r\nHost: kinozal.tv......&lt;/code&gt; мы посылаем двумя частями: сначала идет &lt;code&gt;GET&lt;/code&gt;, затем &lt;code&gt;/ HTTP/1.1\r\nHost: kinozal.tv.....&lt;/code&gt;. Другие DPI спотыкаются, когда заголовок &lt;code&gt;Host:&lt;/code&gt; пишется в другом регистре: например, &lt;code&gt;host:&lt;/code&gt;. Кое-где работает добавление дополнительного пробела после метода: &lt;code&gt;GET /&lt;/code&gt; → &lt;code&gt;GET /&lt;/code&gt; или добавление точки в конце имени хоста: &lt;code&gt;Host: kinozal.tv.&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Существует и более продвинутая магия, направленная на преодоление DPI на пакетном уровне.&lt;/p&gt; 
&lt;p&gt;Подробнее про DPI:&lt;br /&gt; &lt;a href=&quot;https://habr.com/ru/post/335436&quot;&gt;https://habr.com/ru/post/335436&lt;/a&gt; или &lt;a href=&quot;https://web.archive.org/web/20230331233644/https://habr.com/ru/post/335436/&quot;&gt;https://web.archive.org/web/20230331233644/https://habr.com/ru/post/335436/&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://geneva.cs.umd.edu/papers/geneva_ccs19.pdf&quot;&gt;https://geneva.cs.umd.edu/papers/geneva_ccs19.pdf&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Что сейчас происходит в России&lt;/h2&gt; 
&lt;p&gt;Раньше, до внедрения повсеместных систем ТСПУ, использовался зоопарк различных DPI у провайдеров. Какие-то были активными, какие-то пассивными. Сейчас время простых iptables окончательно ушло. Везде активный DPI ТСПУ, но кое-где могут оставаться невыключенными дополнительные старые DPI из зоопарка. В этом случае приходится обходить сразу несколько DPI. Все больше становится внереестровых блокировок, о которых вы узнаете только по факту недоступности чего-либо, в списках этого нет. Применяются блокировки некоторых диапазонов ip адресов (автономный обход невозможен) и протоколов (VPN). На некоторых диапазонах IP используется более строгий фильтр, распознающий попытки обмана через сегментацию. Должно быть это связано с некоторыми сервисами, которые пытаются таким образом обмануть DPI.&lt;/p&gt; 
&lt;h2&gt;Как это реализовать на практике в системе linux&lt;/h2&gt; 
&lt;p&gt;Если кратко, то варианты можно классифицировать по следующей схеме :&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Пассивный DPI, не отправляющий RST серверу. Помогут индивидуально настраиваемые под провайдера команды iptables. На rutracker в разделе &quot;обход блокировок - другие способы&quot; по этому вопросу существует отдельная тема. В данном проекте не рассматривается. Если вы не допустите срабатывание триггера запрета, то и не придется бороться с его последствиями.&lt;/li&gt; 
 &lt;li&gt;Модификация TCP соединения на уровне потока. Реализуется через proxy или transparent proxy.&lt;/li&gt; 
 &lt;li&gt;Модификация TCP соединения на уровне пакетов. Реализуется через обработчик очереди NFQUEUE и raw сокеты.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Для вариантов 2 и 3 реализованы программы tpws и nfqws соответственно. Чтобы они работали, необходимо их запустить с нужными параметрами и перенаправить на них определенный трафик средствами iptables или nftables.&lt;/p&gt; 
&lt;h2&gt;Когда это работать не будет&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Если подменяется DNS. С этой проблемой легко справиться.&lt;/li&gt; 
 &lt;li&gt;Если блокировка осуществляется по IP.&lt;/li&gt; 
 &lt;li&gt;Если соединение проходит через фильтр, способный реконструировать TCP соединение, и который следует всем стандартам. Например, нас заворачивают на squid. Соединение идет через полноценный стек tcpip операционной системы. Проект нацелен на обман DPI, который всилу ограниченности ресурсов и большого трафика вынужден интерпретировать его лишь ограниченно. Обмануть полноценный стек ОС и полноценные серверные приложения не получится.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;nfqws&lt;/h2&gt; 
&lt;p&gt;Эта программа - модификатор пакетов и обработчик очереди NFQUEUE. Для BSD систем существует адаптированный вариант - dvtws, собираемый из тех же исходников (см. &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/bsd.md&quot;&gt;документация BSD&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@&amp;lt;config_file&amp;gt;|$&amp;lt;config_file&amp;gt;                      ; читать конфигурацию из файла. опция должна быть первой. остальные опции игнорируются.

--debug=0|1                                        ; 1=выводить отладочные сообщения
--dry-run                                          ; проверить опции командной строки и выйти. код 0 - успешная проверка.
--version                                          ; вывести версию и выйти
--comment                                          ; любой текст (игнорируется)
--daemon                                           ; демонизировать прогу
--pidfile=&amp;lt;file&amp;gt;                                   ; сохранить PID в файл
--user=&amp;lt;username&amp;gt;                                  ; менять uid процесса
--uid=uid[:gid]                                    ; менять uid процесса
--qnum=N                                           ; номер очереди N
--bind-fix4                                        ; пытаться решить проблему неверного выбора исходящего интерфейса для сгенерированных ipv4 пакетов
--bind-fix6                                        ; пытаться решить проблему неверного выбора исходящего интерфейса для сгенерированных ipv6 пакетов
--ctrack-timeouts=S:E:F[:U]                        ; таймауты внутреннего conntrack в состояниях SYN, ESTABLISHED, FIN, таймаут udp. по умолчанию 60:300:60:60
--ctrack-disable=[0|1]                             ; 1 или остутствие аргумента отключает conntrack
--ipcache-lifetime=&amp;lt;int&amp;gt;                           ; время жизни записей кэша IP в секундах. 0 - без ограничений.
--ipcache-hostname=[0|1]                           ; 1 или отсутствие аргумента включают кэширование имен хостов для применения в стратегиях нулевой фазы
--wsize=&amp;lt;winsize&amp;gt;[:&amp;lt;scale_factor&amp;gt;]                 ; менять tcp window size на указанный размер в SYN,ACK. если не задан scale_factor, то он не меняется (устарело !)
--wssize=&amp;lt;winsize&amp;gt;[:&amp;lt;scale_factor&amp;gt;]                ; менять tcp window size на указанный размер в исходящих пакетах. scale_factor по умолчанию 0. (см. conntrack !)
--wssize-cutoff=[n|d|s]N                           ; изменять server window size в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру меньше N
--synack-split=[syn|synack|acksyn]                 ; выполнить tcp split handshake. вместо SYN,ACK отсылать только SYN, SYN+ACK или ACK+SYN
--orig-ttl=&amp;lt;int&amp;gt;                                   ; модифицировать TTL оригинального пакета
--orig-ttl6=&amp;lt;int&amp;gt;                                  ; модифицировать ipv6 hop limit оригинальных пакетов.  если не указано, используется значение --orig-ttl
--orig-autottl=[&amp;lt;delta&amp;gt;[:&amp;lt;min&amp;gt;[-&amp;lt;max&amp;gt;]]|-]         ; режим auto ttl для ipv4 и ipv6. по умолчанию: +5:3-64. &quot;0:0-0&quot; или &quot;-&quot; отключает функцию
--orig-autottl6=[&amp;lt;delta&amp;gt;[:&amp;lt;min&amp;gt;[-&amp;lt;max&amp;gt;]]|-]        ; переопределение предыдущего параметра для ipv6
--orig-mod-start=[n|d|s]N                          ; применять orig-mod только в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру больше или равно N
--orig-mod-cutoff=[n|d|s]N                         ; применять orig-mod только в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру меньше N
--dup=&amp;lt;int&amp;gt;                                        ; высылать N дубликатов до оригинала
--dup-replace=[0|1]                                ; 1 или отсутствие аргумента блокирует отправку оригинала. отправляются только дубликаты.
--dup-ttl=&amp;lt;int&amp;gt;                                    ; модифицировать TTL дубликатов
--dup-ttl6=&amp;lt;int&amp;gt;                                   ; модифицировать ipv6 hop limit дубликатов. если не указано, используется значение --dup-ttl
--dup-autottl=[&amp;lt;delta&amp;gt;[:&amp;lt;min&amp;gt;[-&amp;lt;max&amp;gt;]]|-]          ; режим auto ttl для ipv4 и ipv6. по умолчанию: +1:3-64. &quot;0:0-0&quot; или &quot;-&quot; отключает функцию
--dup-autottl6=[&amp;lt;delta&amp;gt;[:&amp;lt;min&amp;gt;[-&amp;lt;max&amp;gt;]]|-]         ; переопределение предыдущего параметра для ipv6
--dup-fooling=&amp;lt;fooling&amp;gt;                            ; дополнительные методики как сделать, чтобы дубликат не дошел до сервера. none md5sig badseq badsum datanoack ts hopbyhop hopbyhop2
--dup-ts-increment=&amp;lt;int|0xHEX&amp;gt;                     ; инкремент TSval для ts. по умолчанию -600000
--dup-badseq-increment=&amp;lt;int|0xHEX&amp;gt;                 ; инкремент sequence number для badseq. по умолчанию -10000
--dup-badack-increment=&amp;lt;int|0xHEX&amp;gt;                 ; инкремент ack sequence number для badseq. по умолчанию -66000
--dup-start=[n|d|s]N                               ; применять dup только в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру больше или равно N
--dup-cutoff=[n|d|s]N                              ; применять dup только в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру меньше N
--hostcase                                         ; менять регистр заголовка &quot;Host:&quot; по умолчанию на &quot;host:&quot;.
--hostnospace                                      ; убрать пробел после &quot;Host:&quot; и переместить его в конец значения &quot;User-Agent:&quot; для сохранения длины пакета
--methodeol                                        ; добавить перевод строки в unix стиле (&#39;\n&#39;) перед методом и убрать пробел из Host: : &quot;GET / ... Host: domain.com&quot; =&amp;gt; &quot;\nGET  / ... Host:domain.com&quot;
--hostspell=HoST                                   ; точное написание заголовка Host (можно &quot;HOST&quot; или &quot;HoSt&quot;). автоматом включает --hostcase
--domcase                                          ; домен после Host: сделать таким : TeSt.cOm
--dpi-desync=[&amp;lt;mode0&amp;gt;,]&amp;lt;mode&amp;gt;[,&amp;lt;mode2]             ; атака по десинхронизации DPI. mode : synack syndata fake fakeknown rst rstack hopbyhop destopt ipfrag1 multisplit multidisorder fakedsplit fakeddisorder ipfrag2 udplen tamper
--dpi-desync-fwmark=&amp;lt;int|0xHEX&amp;gt;                    ; бит fwmark для пометки десинхронизирующих пакетов, чтобы они повторно не падали в очередь. default = 0x40000000
--dpi-desync-ttl=&amp;lt;int&amp;gt;                             ; установить ttl для десинхронизирующих пакетов
--dpi-desync-ttl6=&amp;lt;int&amp;gt;                            ; установить ipv6 hop limit для десинхронизирующих пакетов. если не указано, используется значение --dpi-desync-ttl
--dpi-desync-autottl=[&amp;lt;delta&amp;gt;[:&amp;lt;min&amp;gt;[-&amp;lt;max&amp;gt;]]|-]   ; режим auto ttl для ipv4 и ipv6. по умолчанию: 1:3-20. &quot;0:0-0&quot; или &quot;-&quot; отключает функцию
--dpi-desync-autottl6=[&amp;lt;delta&amp;gt;[:&amp;lt;min&amp;gt;[-&amp;lt;max&amp;gt;]]|-]  ; переопределение предыдущего параметра для ipv6
--dpi-desync-fooling=&amp;lt;fooling&amp;gt;                     ; дополнительные методики как сделать, чтобы фейковый пакет не дошел до сервера. none md5sig badseq badsum datanoack ts hopbyhop hopbyhop2
--dpi-desync-repeats=&amp;lt;N&amp;gt;                           ; посылать каждый генерируемый в nfqws пакет N раз (не влияет на остальные пакеты)
--dpi-desync-skip-nosni=0|1                        ; 1(default)=не применять dpi desync для запросов без hostname в SNI, в частности для ESNI
--dpi-desync-split-pos=N|-N|marker+N|marker-N      ; список через запятую маркеров для tcp сегментации в режимах split и disorder
--dpi-desync-split-seqovl=N|-N|marker+N|marker-N   ; единичный маркер, определяющий величину перекрытия sequence в режимах split и disorder. для split поддерживается только положительное число.
--dpi-desync-split-seqovl-pattern=&amp;lt;filename&amp;gt;|0xHEX ; чем заполнять фейковую часть overlap
--dpi-desync-fakedsplit-pattern=&amp;lt;filename&amp;gt;|0xHEX   ; чем заполнять фейки в fakedsplit/fakeddisorder
--dpi-desync-ts-increment=&amp;lt;int|0xHEX&amp;gt;              ; инкремент TSval для ts. по умолчанию -600000
--dpi-desync-badseq-increment=&amp;lt;int|0xHEX&amp;gt;          ; инкремент sequence number для badseq. по умолчанию -10000
--dpi-desync-badack-increment=&amp;lt;int|0xHEX&amp;gt;          ; инкремент ack sequence number для badseq. по умолчанию -66000
--dpi-desync-any-protocol=0|1                      ; 0(default)=работать только по http request и tls clienthello  1=по всем непустым пакетам данных
--dpi-desync-fake-http=&amp;lt;filename&amp;gt;|0xHEX	           ; файл, содержащий фейковый http запрос для dpi-desync=fake, на замену стандартному www.iana.org
--dpi-desync-fake-tls=&amp;lt;filename&amp;gt;|0xHEX|!           ; файл, содержащий фейковый tls clienthello для dpi-desync=fake, на замену стандартному. &#39;!&#39; = стандартный фейк
--dpi-desync-fake-tls-mod=mod[,mod]                ; список через запятую режимов runtime модификации фейков : none,rnd,rndsni,sni=&amp;lt;sni&amp;gt;,dupsid,padencap
--dpi-desync-fake-unknown=&amp;lt;filename&amp;gt;|0xHEX         ; файл, содержащий фейковый пейлоад неизвестного протокола для dpi-desync=fake, на замену стандартным нулям 256 байт
--dpi-desync-fake-syndata=&amp;lt;filename&amp;gt;|0xHEX         ; файл, содержащий фейковый пейлоад пакета SYN для режима десинхронизации syndata
--dpi-desync-fake-quic=&amp;lt;filename&amp;gt;|0xHEX            ; файл, содержащий фейковый QUIC Initial
--dpi-desync-fake-wireguard=&amp;lt;filename&amp;gt;|0xHEX       ; файл, содержащий фейковый wireguard handshake initiation
--dpi-desync-fake-dht=&amp;lt;filename&amp;gt;|0xHEX             ; файл, содержащий фейковый пейлоад DHT протокола для dpi-desync=fake, на замену стандартным нулям 64 байт
--dpi-desync-fake-discord=&amp;lt;filename&amp;gt;|0xHEX         ; файл, содержащий фейковый пейлоад Discord протокола нахождения IP адреса для голосовых чатов для dpi-desync=fake, на замену стандартным нулям 64 байт
--dpi-desync-fake-stun=&amp;lt;filename&amp;gt;|0xHEX            ; файл, содержащий фейковый пейлоад STUN протокола для dpi-desync=fake, на замену стандартным нулям 64 байт
--dpi-desync-fake-unknown-udp=&amp;lt;filename&amp;gt;|0xHEX     ; файл, содержащий фейковый пейлоад неизвестного udp протокола для dpi-desync=fake, на замену стандартным нулям 64 байт
--dpi-desync-udplen-increment=&amp;lt;int&amp;gt;                ; насколько увеличивать длину udp пейлоада в режиме udplen
--dpi-desync-udplen-pattern=&amp;lt;filename&amp;gt;|0xHEX       ; чем добивать udp пакет в режиме udplen. по умолчанию - нули
--dpi-desync-start=[n|d|s]N                        ; применять dpi desync только в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру больше или равно N
--dpi-desync-cutoff=[n|d|s]N                       ; применять dpi desync только в исходящих пакетах (n), пакетах данных (d), относительных sequence (s) по номеру меньше N
--hostlist=&amp;lt;filename&amp;gt;                              ; действовать только над доменами, входящими в список из filename. поддомены автоматически учитываются, если хост не начинается с &#39;^&#39;.
                                                   ; в файле должен быть хост на каждой строке.
                                                   ; список читается при старте и хранится в памяти в виде иерархической структуры для быстрого поиска.
                                                   ; при изменении времени модификации файла он перечитывается автоматически по необходимости
                                                   ; список может быть запакован в gzip. формат автоматически распознается и разжимается
                                                   ; списков может быть множество. пустой общий лист = его отсутствие
                                                   ; хосты извлекаются из Host: хедера обычных http запросов и из SNI в TLS ClientHello.
--hostlist-domains=&amp;lt;domain_list&amp;gt;                   ; фиксированный список доменов через зяпятую. можно использовать # в начале для комментирования отдельных доменов.
--hostlist-exclude=&amp;lt;filename&amp;gt;                      ; не применять дурение к доменам из листа. может быть множество листов. схема аналогична include листам.
--hostlist-exclude-domains=&amp;lt;domain_list&amp;gt;           ; фиксированный список доменов через зяпятую. можно использовать # в начале для комментирования отдельных доменов.
--hostlist-auto=&amp;lt;filename&amp;gt;                         ; обнаруживать автоматически блокировки и заполнять автоматический hostlist (требует перенаправления входящего трафика)
--hostlist-auto-fail-threshold=&amp;lt;int&amp;gt;               ; сколько раз нужно обнаружить ситуацию, похожую на блокировку, чтобы добавить хост в лист (по умолчанию: 3)
--hostlist-auto-fail-time=&amp;lt;int&amp;gt;                    ; все эти ситуации должны быть в пределах указанного количества секунд (по умолчанию: 60)
--hostlist-auto-retrans-threshold=&amp;lt;int&amp;gt;            ; сколько ретрансмиссий запроса считать блокировкой (по умолчанию: 3)
--hostlist-auto-debug=&amp;lt;logfile&amp;gt;                    ; лог положительных решений по autohostlist. позволяет разобраться почему там появляются хосты.
--new                                              ; начало новой стратегии (новый профиль)
--skip                                             ; не использовать этот профиль . полезно для временной деактивации профиля без удаления параметров.
--filter-l3=ipv4|ipv6                              ; фильтр версии ip для текущей стратегии
--filter-tcp=[~]port1[-port2]|*                    ; фильтр портов tcp для текущей стратегии. ~ означает инверсию. установка фильтра tcp и неустановка фильтра udp запрещает udp. поддерживается список через запятую.
--filter-udp=[~]port1[-port2]|*                    ; фильтр портов udp для текущей стратегии. ~ означает инверсию. установка фильтра udp и неустановка фильтра tcp запрещает tcp. поддерживается список через запятую.
--filter-l7=&amp;lt;proto&amp;gt;                                ; фильтр протокола L6-L7. поддерживается несколько значений через запятую. proto : http tls quic wireguard dht discord stun unknown
--filter-ssid=ssid1[,ssid2,ssid3,...]              ; фильтр по имени wifi сети (только для linux)
--ipset=&amp;lt;filename&amp;gt;                                 ; включающий ip list. на каждой строчке ip или cidr ipv4 или ipv6. поддерживается множество листов и gzip. перечитка автоматическая.
--ipset-ip=&amp;lt;ip_list&amp;gt;                               ; фиксированный список подсетей через запятую. можно использовать # в начале для комментирования отдельных подсетей.
--ipset-exclude=&amp;lt;filename&amp;gt;                         ; исключающий ip list. на каждой строчке ip или cidr ipv4 или ipv6. поддерживается множество листов и gzip. перечитка автоматическая.
--ipset-exclude-ip=&amp;lt;ip_list&amp;gt;                       ; фиксированный список подсетей через запятую. можно использовать # в начале для комментирования отдельных подсетей.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;--debug&lt;/code&gt; позволяет выводить подробный лог действий на консоль, в syslog или в файл. Может быть важен порядок следования опций. &lt;code&gt;--debug&lt;/code&gt; лучше всего указывать в самом начале. Опции анализируются последовательно. Если ошибка будет при проверке опции, а до анализа &lt;code&gt;--debug&lt;/code&gt; еще дело не дошло, то сообщения не будут выведены в файл или syslog. При логировании в файл процесс не держит файл открытым. Ради каждой записи файл открывается и потом закрывается. Так что файл можно удалить в любой момент, и он будет создан заново при первом же сообщении в лог. Но имейте в виду, что если вы запускаете процесс под root, то будет сменен UID на не-root. В начале на лог файл меняется owner, иначе запись будет невозможна. Если вы потом удалите файл, и у процесса не будет прав на создание файла в его директории, лог больше не будет вестись. Вместо удаления лучше использовать truncate. В шелле это можно сделать через команду &quot;: &amp;gt;filename&quot;&lt;/p&gt; 
&lt;h3&gt;АТАКА ДЕСИНХРОНИЗАЦИИ DPI&lt;/h3&gt; 
&lt;p&gt;Суть ее в следующем. Берется оригинальный запрос, модифицируется, добавляется поддельная информация (фейки) таким образом, чтобы ОС сервера передала серверному процессу оригинальный запрос в неизменном виде, а DPI увидел другое. То, что он блокировать не станет. Сервер видит одно, DPI - другое. DPI не понимает, что передается запрещенный запрос и не блокирует его.&lt;/p&gt; 
&lt;p&gt;Есть арсенал возможностей, чтобы достичь такого результата. Это может быть передача фейк пакетов, чтобы они дошли до DPI, но не дошли до сервера. Может использоваться фрагментация на уровне TCP (сегментация) или на уровне IP. Есть атаки, основанные на игре с tcp sequence numbers или с перепутыванием порядка следования tcp сегментов. Методы могут сочетаться в различных вариантах.&lt;/p&gt; 
&lt;h3&gt;ФЕЙКИ&lt;/h3&gt; 
&lt;p&gt;Фейки - это отдельные сгенерированные nfqws пакеты, несущие ложную информацию для DPI. Они либо не должны дойти до сервера, либо могут дойти, но должны быть им отброшены. Иначе получается слом tcp соединения или нарушение целостности передаваемого потока, что гарантированно приводит к поломке ресурса. Есть ряд методов для решения этой задачи.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;md5sig&lt;/code&gt; добавляет TCP опцию &lt;strong&gt;MD5 signature&lt;/strong&gt;. Работает не на всех серверах. Пакеты с md5 обычно отбрасывают только linux. Требуется значительное увеличение длины tcp пакета, чтобы вместить tcp option. При обработке многосегментных запросов (TLS Kyber) первый пакет идет полный под MTU. При fakedsplit/fakeddisorder на небольших позициях отдельные tcp сегменты достаточно велики, чтобы внедрение md5 tcp option вызвало переполнение MTU и ошибку отправки &quot;message too long&quot;. &lt;code&gt;nfqws&lt;/code&gt; не умеет перераспределять данные между tcp сегментами, поэтому надо или отказываться от kyber, или увеличивать сплит-позицию, или отказываться от fakedsplit/fakeddisorder.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;badsum&lt;/code&gt; портит контрольную сумму TCP. Не сработает, если ваше устройство за NAT, который не пропускает пакеты с инвалидной суммой. Наиболее распространенная настройка NAT роутера в Linux их не пропускает. На Linux построено большинство домашних роутеров. Непропускание обеспечивается так : настройка ядра sysctl по умолчанию &lt;code&gt;net.netfilter.nf_conntrack_checksum=1&lt;/code&gt; заставляет conntrack проверять tcp и udp чексуммы входящих пакетов и выставлять state INVALID для пакетов с инвалидной суммой. Обычно в правилах iptables вставляется правило для дропа пакетов с состоянием INVALID в цепочке FORWARD. Совместное сочетание этих факторов приводит к непрохождению badsum через такой роутер. В OpenWrt из коробки &lt;code&gt;net.netfilter.nf_conntrack_checksum=0&lt;/code&gt;, в других роутерах часто нет, и не всегда это можно изменить. Чтобы nfqws мог работать через роутер, нужно на нем выставить указанное значение sysctl в 0. nfqws на самом роутере будет работать и без этой настройки, потому что чексумма локально созданных пакетов не проверяется никогда. Если роутер за другим NAT, например провайдерским, и он не пропускает invalid packets вы ничего не сможете с этим сделать. Но обычно провайдеры все же пропускают badsum. На некоторых адаптерах/свитчах/драйверах принудительно включен rx-checksum offload, badsum пакеты отсекаются еще до получения в ОС. В этом случае если что-то и можно сделать, то только модифицировать драйвер, что представляется задачей крайне нетривиальной. Установлено, что так себя ведут некоторые роутеры на базе mediatek. badsum пакеты уходят с клиентской ОС, но роутером не видятся в br-lan через tcpdump. При этом если nfqws выполняется на самом роутере, обход может работать. badsum нормально уходят с внешнего интерфейса.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;badseq&lt;/code&gt; увеличивает TCP sequence number на определенное значение, выводя его тем самым из TCP window. Такие пакеты будут наверняка отброшены принимающим узлом, но так же и DPI, если он ориентируется на sequence numbers. По умолчанию смещение seq выбирается -10000. Практика показала, что некоторые DPI не пропускают seq вне определенного окна. Однако, такое небольшое смещение может вызвать проблемы при существенной потоковой передаче и потере пакетов. Если вы используете &lt;code&gt;--dpi-desync-any-protocol&lt;/code&gt;, может понадобиться установить badseq increment 0x80000000. Это обеспечит надежную гарантию, что поддельный пакет не вклинится в tcp window на сервере. Так же было замечено, что badseq ломает логику некоторых DPI при анализе http, вызывая зависание соединения. Причем на тех же DPI TLS с badseq работает нормально.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TTL&lt;/code&gt; казалось бы - лучший вариант, но он требует индивидуальной настройки под каждого провайдера. Если DPI находится дальше локальных сайтов провайдера, то вы можете отрезать себе доступ к ним. Ситуация усугубляется наличием ТСПУ на магистралах, что вынуждает делать TTL достаточно высоким, увеличивая риск пробоя фейка до сервера. Необходим ip exclude list, заполняемый вручную. Вместе с ttl можно применять md5sig. Это ничего не испортит, зато дает неплохой шанс работы сайтов, до которых &quot;плохой&quot; пакет дойдет по TTL. Если не удается найти автоматическое решение, воспользуйтесь файлом &lt;code&gt;zapret-hosts-user-exclude.txt&lt;/code&gt;. Некоторые стоковые прошивки роутеров фиксируют исходящий TTL, без отключения этой опции через них работать не будет. КАКИМ СТОИТ ВЫБИРАТЬ TTL : найдите минимальное значение, при котором обход еще работает. Это и будет номер хопа вашего DPI.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hopbyhop&lt;/code&gt; относится только к ipv6. Добавляется ipv6 extenstion header &lt;code&gt;hop-by-hop options&lt;/code&gt;. В варианте &lt;code&gt;hopbyhop2&lt;/code&gt; добавляются 2 хедера, что является нарушением стандарта и гарантированно отбрасывается стеком протоколов во всех ОС. Один хедер hop-by-hop принимается всеми ОС, однако на некоторых каналах/провайдерах такие пакеты могут фильтроваться и не доходить. Расчет идет на то, что DPI проанализирует пакет с hop-by-hop, но он либо не дойдет до адресата в силу фильтров провайдера, либо будет отброшен сервером, потому что хедера два.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;datanoack&lt;/code&gt; высылает фейки со снятым tcp флагом ACK. Сервера такое не принимают, а DPI может принять. Эта техника может ломать NAT и не всегда работает с iptables, если используется masquerade, даже с локальной системы (почти всегда на роутерах ipv4). На системах c iptables без masquerade и на nftables работает без ограничений. Экспериментально выяснено, что многие провайдерские NAT не отбрасывают эти пакеты, потому работает даже с внутренним провайдерским IP. Но linux NAT оно не пройдет, так что за домашним роутером эта техника скорее всего не сработает, но может сработать с него. Может сработать и через роутер, если подключение по проводу, и на роутере включено аппаратное ускорение.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ts&lt;/code&gt; прибавляет к значению TSval таймштампа tcp значение ts increment (по умолчанию -600000). Сервера отбрасывают пакеты с TSval в определенных пределах. По практическим тестам инкремент должен быть где-то от -100 до -0x80000000. timestamps генерирует клиентская ОС. В linux таймштампы включены по умолчанию, в windows выключены по умолчанию. Можно включить через команду &lt;code&gt;netsh interface tcp set global timestamps=enabled&lt;/code&gt;. ts fooling требует, чтобы таймштампы были включены, иначе работать не будет. Включать надо на каждом клиентском устройстве. TSecr оставляется без изменений. Так же требуется, чтобы сервер понимал timestamps, но это в большинстве случаев так.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autottl&lt;/code&gt;. Суть режима в автоматическом определении TTL, чтобы пакет почти наверняка прошел DPI и немного не дошел до сервера (&lt;code&gt;--dpi-desync-autottl&lt;/code&gt;). Или наоборот - TTL едва хватило, чтобы он все-таки дошел до сервера (см &lt;code&gt;--dup-autottl&lt;/code&gt;, &lt;code&gt;--orig-autottl&lt;/code&gt;). Берутся базовые значения TTL 64,128,255, смотрится входящий пакет (да, требуется направить первый входящий пакет на nfqws !). Вычисляется длина пути, прибавляется &lt;code&gt;delta&lt;/code&gt;. delta может быть положительной или отрицательной. Чтобы задать положительную дельту, нужно указать унарный знак &lt;strong&gt;+&lt;/strong&gt; перед числом. В случае его отсутствия или при наличии унарного знака &lt;strong&gt;-&lt;/strong&gt; дельта считается отрицательной. Если TTL вне диапазона min,max, то берутся значения min,max, чтобы вписаться в диапазон. Если при этом дельта отрицательная и полученный TTL больше длины пути или дельта положительная и полученный TTL меньше длины пути, то автоматизм не сработал и берутся фиксированные значения : &lt;code&gt;--dpi-desync-ttl&lt;/code&gt;, &lt;code&gt;--orig-ttl&lt;/code&gt;, &lt;code&gt;--dup-ttl&lt;/code&gt;. Техника позволяет решить вопрос, когда вся сеть перегорожена шлагбаумами (DPI, ТСПУ) везде где только можно, включая магистралов. Но потенциально может давать сбои. Например, при асимметрии входящего и исходящего канала до конкретного сервера. Некоторые сервера выдают нестандартный TTL (google), потому на них получается полная ерунда. Если не учитывать подобные исключения, то на каких-то провайдерах эта техника будет работать неплохо, на других доставит больше проблем, чем пользы. Где-то может потребоваться тюнинг параметров. Лучше использовать с дополнительным ограничителем.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Режимы дурения могут сочетаться в любых комбинациях. &lt;code&gt;--dpi-desync-fooling&lt;/code&gt; берет множество значений через запятую.&lt;/p&gt; 
&lt;p&gt;Возможно задание множества фейков через повторение парамеров &lt;code&gt;--dpi-desync-fake-???&lt;/code&gt;, кроме &lt;code&gt;--dpi-desync-fake-syndata&lt;/code&gt;. Фейки будут отосланы в указанном порядке. &lt;code&gt;--dpi-desync-repeats&lt;/code&gt; повторяет каждый отосланный фейк. Итоговый порядок будет такой : &lt;code&gt;fake1 fake1 fake1 fake2 fake2 fake2 fake3 fake3 fake3 .....&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;МОДИФИКАЦИЯ ФЕЙКОВ&lt;/h3&gt; 
&lt;p&gt;В nfqws зашит базовый вариант фейка для TLS. Его можно переопределить опцией &lt;code&gt;--dpi-desync-fake-tls&lt;/code&gt;. Переопределение фейков дает возможность использовать любые данные в качестве фейка для TLS. Можно использовать фейковый Client Hello с любым фингерпринтом и с любым SNI.&lt;/p&gt; 
&lt;p&gt;Некоторые модификации можно делать в процессе выполнения с помощью &lt;code&gt;--dpi-desync-fake-tls-mod&lt;/code&gt;. Часть из них работает при обработке каждого TLS Client Hello и может подстраиваться под отправляемые данные. Модификации требуют наличия полного валидного TLS Client Hello в качестве фейка, они не работают с произвольными данными.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;none&lt;/code&gt;. Не применять никакие модификации.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rnd&lt;/code&gt;. Рандомизировать поля &lt;code&gt;random&lt;/code&gt; и &lt;code&gt;session id&lt;/code&gt;. Выполняется на каждый запрос.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dupsid&lt;/code&gt;. Копировать &lt;code&gt;session ID&lt;/code&gt; из передаваемого TLS Client Hello. Имеет приоритет над &lt;code&gt;rnd&lt;/code&gt;. Выполняется на каждый запрос.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rndsni&lt;/code&gt;. Рандомизировать SNI. Если SNI &amp;gt;=7 символов, применяется случайный домен 2 уровня с известным TLD, иначе заполняется случайными символами без точки. Выполняется один раз при старте.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sni=&amp;lt;sni&amp;gt;&lt;/code&gt;. Заменить sni на указанное значение. Макс длина SNI - 63 байта. Общая длина TLS фейка и длины в структуре TLS Client Hello меняются. Выполняется один раз при старте. Если сочетается с &lt;code&gt;rndsni&lt;/code&gt;, выполняется до него.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;padencap&lt;/code&gt;. Расширяется padding extension на размер передаваемого TLS Client Hello (включая многопакетный вариант с kyber). Если padding отсутствует, он добавляется в конец. Если присутствует - требуется, чтобы padding шел последним extension. Правятся все длины, чтобы создать видимость включения передаваемого TLS Client Hello в padding extension. Размер фейка не изменяется. Расчет идет на DPI, который не анализирует sequence numbers должным образом. Выполняется на каждый запрос.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;По умолчанию если не задан собственный фейк для TLS используются модификации &lt;code&gt;rnd,rndsni,dupsid&lt;/code&gt;. Если фейк задан, используется &lt;code&gt;none&lt;/code&gt;. Это соответствует поведению программы более старых версий с добавлением функции &lt;code&gt;dupsid&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Если задан режим модификации и имеется множество TLS фейков, к каждому из них применяется последний режим модификации. Если режим модификации задан после фейка, то он замещает предыдущий режим. Таким образом можно использовать разные режимы модификации для разных фейков. При невозможности модифицировать фейк на этапе запуска программа завершается с ошибкой.&lt;/p&gt; 
&lt;p&gt;Если сначала идет TLS фейк, для него задан режим однократной модификации, затем идет не TLS фейк, то будет ошибка. Нужно использовать `--dpi-desync-fake-tls-mod=none&#39;.&lt;/p&gt; 
&lt;p&gt;Пример : `--dpi-desync-fake-tls=iana_org.bin --dpi-desync-fake-tls-mod=rndsni --dpi-desync-fake-tls=0xaabbccdd --dpi-desync-fake-tls-mod=none&#39;&lt;/p&gt; 
&lt;h3&gt;TCP СЕГМЕНТАЦИЯ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;multisplit&lt;/code&gt;. нарезаем запрос на указанных в &lt;code&gt;--dpi-desync-split-pos&lt;/code&gt; позициях.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;multidisorder&lt;/code&gt;. нарезаем запрос на указанных в &lt;code&gt;--dpi-desync-split-pos&lt;/code&gt; позициях и отправляем в обратном порядке.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fakedsplit&lt;/code&gt;. нарезаем запрос на 2 части, обрамляя каждую часть фейками : фейк 1-й части, 1 часть, фейк 1-й части, фейк 2-й части, 2 часть, фейк 2-й части&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fakeddisorder&lt;/code&gt;. аналогично &lt;code&gt;fakedsplit&lt;/code&gt;, только в обратном порядке : фейк 2-й части, 2 часть, фейк 2-й части, фейк 1-й части, 1 часть, фейк 1 части.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Содержимое фейков в &lt;code&gt;fakedsplit&lt;/code&gt;/&lt;code&gt;fakeddisorder&lt;/code&gt; определяется параметром &lt;code&gt;--dpi-desync-fakedsplit-pattern&lt;/code&gt; (по умолчанию 0x00). Данные фейков берутся из паттерна со смещением, соответствующим смещению отсылаемых частей. Размеры фейков соответствуют длинам отсылаемых частей. Цель этих режимов - максимально усложнить выявление оригинальных данных среди фейков.&lt;/p&gt; 
&lt;p&gt;Использование &lt;code&gt;fakedsplit&lt;/code&gt; или &lt;code&gt;fakeddisorder&lt;/code&gt; на TLS kyber с md5sig fooling может привести к ошибкам &quot;message too long&quot;, если позиция сплита мала, поскольку будет превышение MTU из-за md5 tcp option.&lt;/p&gt; 
&lt;p&gt;Для определения позиций нарезки используются маркеры.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Абсолютный положительный маркер&lt;/strong&gt; - числовое смещение внутри пакета или группы пакетов от начала.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Абсолютный отрицательный маркер&lt;/strong&gt; - числовое смещение внутри пакета или группы пакетов от следующего за концом байта. -1 указывает на последний байт.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Относительный маркер&lt;/strong&gt; - положительное или отрицательное смещение относительно логической позиции внутри пакета или группы пакетов.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Относительные позиции :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;method&lt;/strong&gt; - начало метода HTTP (&#39;GET&#39;, &#39;POST&#39;, &#39;HEAD&#39;, ...). Метод обычно всегда находится на позиции 0, но может сместиться из-за &lt;code&gt;--methodeol&lt;/code&gt;. Тогда позиция может стать 1 или 2.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;host&lt;/strong&gt; - начало имени хоста в известном протоколе (http, TLS)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;endhost&lt;/strong&gt; - байт, следующий за последним байтом имени хоста&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;sld&lt;/strong&gt; - начало домена 2 уровня в имени хоста&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;endsld&lt;/strong&gt; - байт, следующий за последним байтом домена 2 уровня в имени хоста&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;midsld&lt;/strong&gt; - середина домена 2 уровня в имени хоста&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;sniext&lt;/strong&gt; - начало поля данных SNI extension в TLS. Любой extension состоит из 2-байтовых полей type и length, за ними идет поле данных.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Пример списка маркеров : &lt;code&gt;100,midsld,sniext+1,endhost-2,-10&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;При разбиении пакета первым делом происходит ресолвинг маркеров - нахождение всех указанных относительных позиций и применение смещений. Если относительная позиция отсутствует в текущем протоколе, такие позиции не применяются и отбрасываются. Дальше происходит нормализация позиций относительно смещения текущего пакета в группе пакетов (многопакетные запросы TLS с kyber, например). Выкидываются все позиции, выходящие за пределы текущего пакета. Оставшиеся сортируются в порядке возрастания и удаляются дубли. В вариантах &lt;code&gt;multisplit&lt;/code&gt; и &lt;code&gt;multidisorder&lt;/code&gt; если не осталось ни одной позиции, разбиение не происходит.&lt;/p&gt; 
&lt;p&gt;Варианты &lt;code&gt;fakedsplit&lt;/code&gt; и &lt;code&gt;fakeddisorder&lt;/code&gt; применяют только одну позицию сплита. Ее поиск среди списка &lt;code&gt;--dpi-desync-split-pos&lt;/code&gt; осуществляется особым образом. Сначала сверяются все относительные маркеры. Если среди них найден подходящий, применяется он. В противном случае сверяются все абсолютные маркеры. Если и среди них ничего не найдено, применяется позиция 1.&lt;/p&gt; 
&lt;p&gt;Например, можно написать &lt;code&gt;--dpi-desync-split-pos=method+2,midsld,5&lt;/code&gt;. Если протокол http, разбиение будет на позиции &lt;code&gt;method+2&lt;/code&gt;. Если протокол TLS - на позиции &lt;code&gt;midsld&lt;/code&gt;. Если протокол неизвестен и включено &lt;code&gt;--dpi-desync-any-protocol&lt;/code&gt;, разбиение будет на позиции 5. Чтобы все было однозначнее, можно использовать разные профили для разных протоколов и указывать только одну позицию, которая точно есть в этом протоколе.&lt;/p&gt; 
&lt;h3&gt;ПЕРЕКРЫТИЕ SEQUENCE NUMBERS&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;seqovl&lt;/code&gt; добавляет в начало одного из TCP сегментов &lt;code&gt;seqovl&lt;/code&gt; байт со смещенным в минус sequence number на величину &lt;code&gt;seqovl&lt;/code&gt;. Для &lt;code&gt;split&lt;/code&gt; - в начало первого сегмента, для &lt;code&gt;disorder&lt;/code&gt; - в начало предпоследнего отсылаемого сегмента (второго в оригинальном порядке следования).&lt;/p&gt; 
&lt;p&gt;В случае &lt;code&gt;split&lt;/code&gt; расчет идет на то, что предыдущий отсыл, если он был, уже попал в сокет серверного приложения, поэтому новая пришедшая часть лишь частично находится в пределах текущего окна (in-window). Спереди фейковая часть отбрасывается, а оставшаяся часть содержит оригинал и начинается с начала window, поэтому попадает в сокет. Серверное приложение получает все, что реально отсылает клиент, отбрасывая фейковую out-of-window часть. Но DPI не может этого понять, поэтому у него происходит sequence десинхронизация. Обязательно, чтобы первый сегмент вместе с &lt;code&gt;seqovl&lt;/code&gt; не превысили длину MTU. Эта ситуация распознается автоматически в Linux, и &lt;code&gt;seqovl&lt;/code&gt; отменяется. В остальных системах ситуация не распознается, и это приведет к поломке соединения. Поэтому выбирайте первую позицию сплита и &lt;code&gt;seqovl&lt;/code&gt; таким образом, чтобы MTU не был превышен в любом случае. Иначе дурение может не работать или работать хаотично.&lt;/p&gt; 
&lt;p&gt;Для &lt;code&gt;disorder&lt;/code&gt; overlap идет на предпоследнюю отсылаемую часть пакета. Для простоты будем считать, что разбиение идет на 2 части, шлются они в порядке &quot;2 1&quot; при оригинальном порядке &quot;1 2&quot;. Обязательно, чтобы &lt;code&gt;seqovl&lt;/code&gt; был меньше позиции первого сплита, иначе все отосланное будет передано в сокет сразу же, включая фейк, ломая протокол прикладного уровня. Такая ситуация легко обнаруживается программой, и &lt;code&gt;seqovl&lt;/code&gt; отменяется. Увеличение размера пакета невозможно в принципе. При соблюдении условия 2-я часть пакета является полностью in-window, поэтому серверная ОС принимает ее целиком, включая фейк. Но поскольку начальная часть данных из 1 пакета еще не принята, то фейк и реальные данные остаются в памяти ядра, не отправляясь в серверное приложение. Как только приходит 1-я часть пакета, она переписывает фейковую часть в памяти ядра. Ядро получает данные из 1 и 2 части, поэтому далее идет отправка в сокет приложения. Таково поведение всех unix ОС, кроме solaris - оставлять последние принятые данные. Windows оставляет старые данные, поэтому disorder с seqovl будет приводить к зависаниям соединения при работе с Windows серверами. Solaris практически мертв, windows серверов очень немного. Можно использовать листы при необходимости. Метод позволяет обойтись без fooling и TTL. Фейки перемешаны с реальным данными. &lt;code&gt;fakedsplit/fakeddisorder&lt;/code&gt; по-прежнему добавляют дополнительные отдельные фейки.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;seqovl&lt;/code&gt; в варианте &lt;code&gt;split&lt;/code&gt; может быть только абсолютным положительным значением, поскольку применяется только в первому пакету. В варианте &lt;code&gt;disorder&lt;/code&gt; допустимо применение всех вариантов маркеров. Они автоматически нормализуются к текущему пакету в серии. Можно сплитать на &lt;code&gt;midsld&lt;/code&gt; и делать seqovl на &lt;code&gt;midsld-1&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;СПЕЦИФИЧЕСКИЕ РЕЖИМЫ IPV6&lt;/h3&gt; 
&lt;p&gt;Режимы десинхронизации &lt;code&gt;hopbyhop&lt;/code&gt;, &lt;code&gt;destopt&lt;/code&gt; и &lt;code&gt;ipfrag1&lt;/code&gt; (не путать с fooling !) относятся только к ipv6 и заключается в добавлении хедера &lt;code&gt;hop-by-hop options&lt;/code&gt;, &lt;code&gt;destination options&lt;/code&gt; или &lt;code&gt;fragment&lt;/code&gt; во все пакеты, попадающие под десинхронизацию. Здесь надо обязательно понимать, что добавление хедера увеличивает размер пакета, потому не может быть применено к пакетам максимального размера. Это имеет место при передаче больших сообщений. В случае невозможности отослать пакет дурение будет отменено, пакет будет выслан в оригинале. Расчет идет на то, что DPI увидит 0 в поле next header основного заголовка &lt;code&gt;ipv6&lt;/code&gt; и не будет скакать по extension хедерам в поисках транспортного хедера. Таким образом не поймет, что это tcp или udp, и пропустит пакет без анализа. Возможно, какие-то DPI на это купятся. Может сочетаться с любыми режимами 2-й фазы, кроме варианта &lt;code&gt;ipfrag1+ipfrag2&lt;/code&gt;. Например, &lt;code&gt;hopbyhop,multisplit&lt;/code&gt; означает разбить tcp пакет на несколько сегментов, в каждый из них добавить hop-by-hop. При &lt;code&gt;hopbyhop,ipfrag2&lt;/code&gt; последовательность хедеров будет : &lt;code&gt;ipv6,hop-by-hop&lt;/code&gt;,&lt;code&gt;fragment&lt;/code&gt;,&lt;code&gt;tcp/udp&lt;/code&gt;. Режим &lt;code&gt;ipfrag1&lt;/code&gt; может срабатывать не всегда без специальной подготовки. См. раздел &lt;code&gt;IP фрагментация&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;МОДИФИКАЦИЯ ОРИГИНАЛА&lt;/h3&gt; 
&lt;p&gt;Параметры &lt;code&gt;--orig-ttl&lt;/code&gt; и &lt;code&gt;--orig-ttl6&lt;/code&gt; позволяют изменить TTL оригинальных пакетов. Если дальнейшие манипуляции связаны с оригиналом, например, идет TCP сегментация, то исходными данными являются измененные оригинальные пакеты. То есть в данном примере TCP сегменты пойдут с измененным TTL.&lt;/p&gt; 
&lt;p&gt;Вариант &lt;code&gt;--orig-autottl&lt;/code&gt; и &lt;code&gt;--orig-autottl6&lt;/code&gt; работает аналогично &lt;code&gt;dpi-desync-autottl&lt;/code&gt;, но по оригинальным пакетам. Дельту стоит указывать положительную с унарным знаком &lt;code&gt;+&lt;/code&gt;, иначе оригинал не дойдет до сервера, и вы вообще ничего не получите. Пример : &lt;code&gt;--orig-autottl=+5:3-64&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--orig-mod-start&lt;/code&gt; и &lt;code&gt;--orig-mod-cutoff&lt;/code&gt; задают ограничитель по началу и концу модификации оригинала. Схема аналогична &lt;code&gt;--dpi-desync-start&lt;/code&gt; и &lt;code&gt;--dpi-desync-cutoff&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Функция может быть полезна, когда DPI охотится за фейками и блокирует соединение при наличии подозрительных признаков, в частности, измененный TTL у фейка относительно оригинала.&lt;/p&gt; 
&lt;h3&gt;ДУБЛИКАТЫ&lt;/h3&gt; 
&lt;p&gt;Дубликаты - это копии оригинальных пакетов, высылаемые перед ними. Включаются параметром &lt;code&gt;--dup=N&lt;/code&gt;, где N - количество дублей, не включающее оригинал. &lt;code&gt;--dup-replace&lt;/code&gt; отключает отсылку оригинала.&lt;/p&gt; 
&lt;p&gt;Отсылка дублей имеет место только в тех случаях, когда высылается и оригинал без реконструкции. Например, если случилась TCP сегментация, то оригинал фактически дропается и заменяется искусственно сконструированными сегментами. Дубли высланы не будут. Это же касается изменения состава хедеров ipv6, режима tamper для DHT и других.&lt;/p&gt; 
&lt;p&gt;Возможно применение всех вариантов дурения, как и для desync : &lt;code&gt;--dup-ttl&lt;/code&gt;. &lt;code&gt;--dup-ttl6&lt;/code&gt;, &lt;code&gt;--dup-fooling&lt;/code&gt;. Нужно ли, чтобы эти пакеты доходили до сервера и в каком виде, решаете вы согласно задуманной стратегии.&lt;/p&gt; 
&lt;p&gt;Вариант &lt;code&gt;--dup-autottl&lt;/code&gt; и &lt;code&gt;--dup-autottl6&lt;/code&gt; работает аналогично &lt;code&gt;dpi-desync-autottl&lt;/code&gt;, но по дублям. Дельту можно указывать положительную с унарным знаком &lt;code&gt;+&lt;/code&gt;, а можно и отрицательную. Зависит от вашей задумки. Пример : &lt;code&gt;--dup-autottl=-2:3-64&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--dup-start&lt;/code&gt; и &lt;code&gt;--dup-cutoff&lt;/code&gt; задают ограничитель по началу и концу применения стратегии дубликатов. Схема аналогична &lt;code&gt;--dpi-desync-start&lt;/code&gt; и &lt;code&gt;--dpi-desync-cutoff&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Функция может помочь, когда DPI сечет разницу в характеристиках фейков и оригинала. Дубликатами можно попытаться заставить DPI принять , что весь сеанс идет аномальным. Например, у нас имеется TCP сеанс с MD5 сразу с первого SYN пакета. Значит последующие MD5 будут восприниматься нормально.&lt;/p&gt; 
&lt;h3&gt;КОМБИНИРОВАНИЕ МЕТОДОВ ДЕСИНХРОНИЗАЦИИ&lt;/h3&gt; 
&lt;p&gt;В параметре dpi-desync можно указать до 3 режимов через запятую.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;0 фаза - предполагает работу на этапе установления соединения : &lt;code&gt;synack&lt;/code&gt;, &lt;code&gt;syndata&lt;/code&gt;, &lt;code&gt;--wsize&lt;/code&gt;, &lt;code&gt;--wssize&lt;/code&gt;. На эту фазу не действуют фильтры по &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BD%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D1%81%D1%82%D1%80%D0%B0%D1%82%D0%B5%D0%B3%D0%B8%D0%B8&quot;&gt;hostlist&lt;/a&gt;, кроме случая, описанного &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D1%8D%D1%88-ip&quot;&gt;далее&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;1 фаза - отсылка чего-либо до оригинального пакета данных : &lt;code&gt;fake&lt;/code&gt;, &lt;code&gt;rst&lt;/code&gt;, &lt;code&gt;rstack&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;2 фаза - отсылка в модифицированном виде оригинального пакета данных (например, &lt;code&gt;fakedsplit&lt;/code&gt; или &lt;code&gt;ipfrag2&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Режимы требуют указания в порядке возрастания номеров фаз.&lt;/p&gt; 
&lt;h3&gt;КЭШ IP&lt;/h3&gt; 
&lt;p&gt;ipcache представляет собой структуру в памяти процесса, позволяющую по ключу IP адреса и имени интерфейса запоминать некоторую информацию, которую впоследствии можно извлечь и использовать как недостающие данные. На текущий момент это применяются в следующих ситуациях :&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;IP,interface =&amp;gt; hop count . Кэшируется количество хопов до сервера для последующего применения в autottl прямо с первого пакета, когда еще ответа не было. Пока записи в кэше нет, autottl не будет применен сразу. При повторном запросе до истечения времени жизни записи autottl будет применение сразу.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IP =&amp;gt; hostname . Кэшируется имя хоста, вне привязки к интерфейсу, для последующего применения в стратегиях нулевой фазы. Режим отключен по умолчанию и включается через параметры &lt;code&gt;ipcache-hostname&lt;/code&gt;. Данная техника является экспериментальной. Ее проблема в том, что как такового нет однозначного соответствия между доменом и IP. Множество доменов могут ссылаться на тот же IP адрес. При коллизии происходит замещение имени хоста на последний вариант. Домен может скакать по разным IP на CDN. Сейчас один адрес, через час - другой. Эта проблема решается через время жизни записей кэша : &lt;code&gt;--ipcache-lifetime&lt;/code&gt;. По умолчанию 2 часа. Однако, может случиться и так, что в вашем случае применение техники несет больше пользы, чем проблем. Будьте готовы к непонятному на первый взгляд поведению, которое может быть исследовано только через &lt;code&gt;--debug&lt;/code&gt; лог.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;При подаче сигнала SIGUSR2 процесс выводит содержимое ipcache на консоль.&lt;/p&gt; 
&lt;h3&gt;РЕАКЦИЯ DPI НА ОТВЕТ СЕРВЕРА&lt;/h3&gt; 
&lt;p&gt;Есть DPI, которые анализируют ответы от сервера, в частности сертификат из ServerHello, где прописаны домены. Подтверждением доставки ClientHello является ACK пакет от сервера с номером ACK sequence, соответствующим длине ClientHello+1. В варианте disorder обычно приходит сперва частичное подтверждение (SACK), потом полный ACK. Если вместо ACK или SACK идет RST пакет с минимальной задержкой, то DPI вас отсекает еще на этапе вашего запроса. Если RST идет после полного ACK спустя задержку, равную примерно пингу до сервера, тогда вероятно DPI реагирует на ответ сервера. DPI может отстать от потока, если ClientHello его удовлетворил и не проверять ServerHello. Тогда вам повезло. Вариант fake может сработать. Если же он не отстает и упорно проверяет ServerHello, то можно попробовать заставить сервер высылать ServerHello частями через параметр --wssize (см. conntrack). Если и это не помогает, то сделать с этим что-либо вряд ли возможно без помощи со стороны сервера. Лучшее решение - включить на сервере поддержку TLS 1.3. В нем сертификат сервера передается в зашифрованном виде. Это рекомендация ко всем админам блокируемых сайтов. Включайте TLS 1.3. Так вы дадите больше возможностей преодолеть DPI.&lt;/p&gt; 
&lt;h3&gt;РЕЖИМ SYNACK&lt;/h3&gt; 
&lt;p&gt;В документации по geneva это называется &quot;TCB turnaround&quot;. Попытка ввести DPI в заблуждение относительно ролей клиента и сервера.&lt;/p&gt; 
&lt;p&gt;Поскольку режим нарушает работу NAT, техника может сработать только если между атакующим устройством и DPI нет NAT. Атака не сработает через NAT роутер, но может сработать с него. Для реализации атаки на проходящий трафик требуются nftables и схема &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#nftables-%D0%B4%D0%BB%D1%8F-nfqws&quot;&gt;POSTNAT&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;РЕЖИМ SYNDATA&lt;/h3&gt; 
&lt;p&gt;Тут все просто. Добавляются данные в пакет SYN. Все ОС их игнорируют, если не используется TCP fast open (TFO), а DPI может воспринять, не разобравшись есть там TFO или нет. Оригинальные соединения с TFO не трогаются, поскольку это их точно сломает. Без уточняющего параметра добавляются 16 нулевых байтов.&lt;/p&gt; 
&lt;h3&gt;ВИРТУАЛЬНЫЕ МАШИНЫ&lt;/h3&gt; 
&lt;p&gt;Изнутри VM от virtualbox и vmware в режиме NAT не работают многие техники пакетной магии nfqws. Принудительно заменяется ttl, не проходят фейк пакеты. Необходимо настроить сеть в режиме bridge.&lt;/p&gt; 
&lt;h3&gt;CONNTRACK&lt;/h3&gt; 
&lt;p&gt;nfqws оснащен ограниченной реализацией слежения за состоянием tcp соединений (conntrack). Он включается для реализации некоторых методов противодействия DPI. conntrack способен следить за фазой соединения : SYN,ESTABLISHED,FIN, количеством пакетов в каждую сторону, sequence numbers. conntrack способен &quot;кормиться&quot; пакетами в обе или только в одну сторону. Соединение попадает в таблицу при обнаружении пакетов с выставленными флагами SYN или SYN,ACK. Поэтому если необходим conntrack, в правилах перенаправления iptables соединение должно идти на nfqws с самого первого пакета, хотя затем может обрываться по фильтру connbytes. Для UDP инициатором попадания в таблицу является первый UDP пакет. Он же и определяет направление потока. Считается, что первый UDP пакет исходит от клиента к серверу. Далее все пакеты с совпадающими &lt;code&gt;src_ip,src_port,dst_ip,dst_port&lt;/code&gt; считаются принадлежащими этому потоку до истечения времени неактивности. conntrack - простенький, он не писался с учетом всевозможных атак на соединение, он не проверяет пакеты на валидность sequence numbers или чексумму. Его задача - лишь обслуживание нужд nfqws, он обычно кормится только исходящим трафиком, потому нечувствителен к подменам со стороны внешней сети. Соединение удаляется из таблицы, как только отпадает нужда в слежении за ним или по таймауту неактивности. Существуют отдельные таймауты на каждую фазу соединения. Они могут быть изменены параметром &lt;code&gt;--ctrack-timeouts&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--wssize&lt;/code&gt; позволяет изменить с клиента размер tcp window для сервера, чтобы он послал следующие ответы разбитыми на части. Чтобы это подействовало на все серверные ОС, необходимо менять window size в каждом исходящем с клиента пакете до отсылки сообщения, ответ на которое должен быть разбит (например, TLS ClientHello). Именно поэтому и необходим conntrack, чтобы знать когда надо остановиться. Если не остановиться и все время устанавливать низкий wssize, скорость упадет катастрофически. В linux это может быть купировано через connbytes, но в BSD системах такой возможности нет. В случае http(s) останавливаемся сразу после отсылки первого http запроса или TLS ClientHello. Если вы имеете дело с не http(s), то вам потребуется параметр &lt;code&gt;--wssize-cutoff&lt;/code&gt;. Он устанавливает предел, с которого действие wssize прекращается. Префикс d перед номером означает учитывать только пакеты с data payload, префикс s - relative sequence number, проще говоря количество переданных клиентом байтов + 1. Если проскочит пакет с http request или TLS ClientHello, действие wssize прекращается сразу же, не дожидаясь wssize-cutoff. Если ваш протокол склонен к долгому бездействию, следует увеличить таймаут фазы ESTABLISHED через параметр &lt;code&gt;--ctrack-timeouts&lt;/code&gt;. Таймаут по умолчанию низкий - всего 5 минут. Не забывайте, что nfqws кормится приходящими на него пакетами. Если вы ограничили поступление пакетов через connbytes, то в таблице могут остаться повисшие соединения в фазе ESTABLISHED, которые отвалятся только по таймауту. Для диагностики состояния conntrack пошлите сигнал SIGUSR1 процессу nfqws : &lt;code&gt;killall -SIGUSR1 nfqws&lt;/code&gt;. Текущая таблица будет выведена nfqws в stdout.&lt;/p&gt; 
&lt;p&gt;Обычно в SYN пакете клиент отсылает кроме window size еще и TCP extension &lt;code&gt;scaling factor&lt;/code&gt;. &lt;strong&gt;scaling factor&lt;/strong&gt; представляет из себя степень двойки, на которую умножается window size : 0=&amp;gt;1, 1=&amp;gt;2, 2=&amp;gt;4, ..., 8=&amp;gt;256, ... В параметре wssize scaling factor указывается через двоеточие. Scaling factor может только снижаться, увеличение заблокировано, чтобы не допустить превышение размера окна со стороны сервера. Для принуждения сервера к фрагментации ServerHello, чтобы избежать просекание имени сервера из сертификата сервера на DPI, лучше всего использовать &lt;code&gt;--wssize=1:6&lt;/code&gt;. Основное правило - делать &lt;code&gt;scale_factor&lt;/code&gt; как можно больше, чтобы после восстановления window size итоговый размер окна стал максимально возможным. Если вы сделаете 64:0, будет очень медленно. С другой стороны нельзя допустить, чтобы ответ сервера стал достаточно большим, чтобы DPI нашел там искомое.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--wssize&lt;/code&gt; не работает в профилях с хостлистами, поскольку он действует с самого начала соединения, когда еще нельзя принять решение о попадании в лист. Однако, профиль с auto hostlist может содержать --wssize. &lt;code&gt;--wssize&lt;/code&gt; может замедлять скорость и/или увеличивать время ответа сайтов, поэтому если есть другие работающие способы обхода DPI, лучше применять их.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--dpi-desync-cutoff&lt;/code&gt; позволяет задать предел, при достижении которого прекращается применение dpi-desync. Доступны префиксы n,d,s по аналогии с &lt;code&gt;--wssize-cutoff&lt;/code&gt;. Полезно совместно с &lt;code&gt;--dpi-desync-any-protocol=1&lt;/code&gt;. На склонных к бездействию соединениях следует изменить таймауты conntrack. Если соединение выпало из conntrack и задана опция &lt;code&gt;--dpi-desync-cutoff&lt;/code&gt;, &lt;code&gt;dpi desync&lt;/code&gt; применяться не будет.&lt;/p&gt; 
&lt;h3&gt;РЕАССЕМБЛИНГ&lt;/h3&gt; 
&lt;p&gt;nfqws поддерживает реассемблинг некоторых видов запросов. На текущий момент это TLS и QUIC ClientHello. Они бывают длинными, если в chrome включить пост-квантовую криптографию tls-kyber, и занимают, как правило, 2 или 3 пакета. kyber включен по умолчанию, начиная с chromium 124. chrome рандомизирует фингерпринт TLS. SNI может оказаться как в начале, так и в конце, то есть попасть в любой пакет. stateful DPI обычно реассемблирует запрос целиком, и только потом принимает решение о блокировке. В случае получения TLS или QUIC пакета с частичным ClientHello начинается процесс сборки, а пакеты задерживаются и не отсылаются до ее окончания. По окончании сборки пакеты проходит через десинхронизацию на основании полностью собранного ClientHello. При любой ошибке в процессе сборки задержанные пакеты немедленно отсылаются в сеть, а десинхронизация отменяется.&lt;/p&gt; 
&lt;p&gt;Есть специальная поддержка всех вариантов tcp сплита для многосегментного TLS. Если указать позицию сплита больше длины первого пакета, то разбивка происходит не обязательно первого пакета, а того, на который пришлась итоговая позиция. Если, допустим, клиент послал TLS ClientHello длиной 2000, SNI начинается с 1700, и заданы опции &lt;code&gt;fake,multisplit&lt;/code&gt;, то перед первым пакетом идет fake, затем первый пакет в оригинале, а последний пакет разбивается на 2 сегмента. В итоге имеем фейк в начале и 3 реальных сегмента.&lt;/p&gt; 
&lt;h3&gt;ПОДДЕРЖКА UDP&lt;/h3&gt; 
&lt;p&gt;Атаки на udp более ограничены в возможностях. udp нельзя фрагментировать иначе, чем на уровне ip.&lt;/p&gt; 
&lt;p&gt;Для UDP действуют только режимы десинхронизации &lt;code&gt;fake&lt;/code&gt;, &lt;code&gt;fakeknown&lt;/code&gt;, &lt;code&gt;hopbyhop&lt;/code&gt;, &lt;code&gt;destopt&lt;/code&gt;, &lt;code&gt;ipfrag1&lt;/code&gt;, &lt;code&gt;ipfrag2&lt;/code&gt;, &lt;code&gt;udplen&lt;/code&gt;, &lt;code&gt;tamper&lt;/code&gt;. Режимами первой фазы являются &lt;code&gt;fake&lt;/code&gt;, &lt;code&gt;fakeknown&lt;/code&gt;, &lt;code&gt;hopbyhop&lt;/code&gt;, &lt;code&gt;destopt&lt;/code&gt;, &lt;code&gt;ipfrag1&lt;/code&gt;. Второй фазы - &lt;code&gt;ipfrag2&lt;/code&gt;, &lt;code&gt;udplen&lt;/code&gt;, &lt;code&gt;tamper&lt;/code&gt;. Как обычно, возможно сочетание режимов первой и второй фазы, но не двух режимов одной фазы.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;udplen&lt;/code&gt; увеличивает размер udp пакета на указанное в &lt;code&gt;--dpi-desync-udplen-increment&lt;/code&gt; количество байтов. Паддинг заполняется нулями по умолчанию, но можно задать свой паттерн. Предназначено для обмана DPI, ориентирующегося на размеры пакетов. Может сработать, если пользовательский протокол не привязан жестко к размеру udp пейлоада. Режим tamper означает модификацию пакетов известных протоколов особенным для протокола образом. На текущий момент работает только с DHT. Поддерживается определение пакетов QUIC Initial с расшифровкой содержимого и имени хоста, то есть параметр &lt;code&gt;--hostlist&lt;/code&gt; будет работать. Определяются пакеты wireguard handshake initiation, DHT (начинается с &#39;d1&#39;, кончается &#39;e&#39;), STUN и &lt;a href=&quot;https://discord.com/developers/docs/topics/voice-connections#ip-discovery&quot;&gt;Discord Voice IP Discovery&lt;/a&gt;. Для десинхронизации других протоколов обязательно указывать &lt;code&gt;--dpi-desync-any-protocol&lt;/code&gt;. Реализован conntrack для udp. Можно пользоваться --dpi-desync-cutoff. Таймаут conntrack для udp можно изменить 4-м параметром в &lt;code&gt;--ctrack-timeouts&lt;/code&gt;. Атака fake полезна только для stateful DPI, она бесполезна для анализа на уровне отдельных пакетов. По умолчанию fake наполнение - 64 нуля. Можно указать файл в &lt;code&gt;--dpi-desync-fake-unknown-udp&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;IP ФРАГМЕНТАЦИЯ&lt;/h3&gt; 
&lt;p&gt;Современная сеть практически не пропускает фрагментированные tcp на уровне ip. На udp с этим дело получше, поскольку некоторые udp протоколы могут опираться на этот механизм (IKE старых версий). Однако, кое-где бывает, что режут и фрагментированный udp. Роутеры на базе linux могут самопроизвольно собирать или перефрагментировать пакеты. Позиция фрагментации задается отдельно для tcp и udp. По умолчанию 24 и 8 соответственно, должна быть кратна 8. Смещение считается с транспортного заголовка.&lt;/p&gt; 
&lt;p&gt;Существует ряд моментов вокруг работы с фрагментами на Linux, без понимания которых может ничего не получиться.&lt;/p&gt; 
&lt;p&gt;ipv4 : Linux дает отсылать ipv4 фрагменты, но стандартные настройки iptables в цепочке OUTPUT могут вызывать ошибки отправки.&lt;/p&gt; 
&lt;p&gt;ipv6 : Нет способа для приложения гарантированно отослать фрагменты без дефрагментации в conntrack. На разных системах получается по-разному. Где-то нормально уходят, где-то пакеты дефрагментируются. Для ядер &amp;lt;4.16 похоже, что нет иного способа решить эту проблему, кроме как выгрузить модуль &lt;code&gt;nf_conntrack&lt;/code&gt;, который подтягивает зависимость &lt;code&gt;nf_defrag_ipv6&lt;/code&gt;. Он то как раз и выполняет дефрагментацию. Для ядер 4.16+ ситуация чуть лучше. Из дефрагментации исключаются пакеты в состоянии NOTRACK. Чтобы не загромождать описание, смотрите пример решения этой проблемы в &lt;code&gt;blockcheck.sh&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Иногда требуется подгружать модуль &lt;code&gt;ip6table_raw&lt;/code&gt; с параметром &lt;code&gt;raw_before_defrag=1&lt;/code&gt;. В OpenWrt параметры модулей указываются через пробел после их названий в файлах &lt;code&gt;/etc/modules.d&lt;/code&gt;. В традиционных системах посмотрите используется ли &lt;code&gt;iptables-legacy&lt;/code&gt; или &lt;code&gt;iptables-nft&lt;/code&gt;. Если legacy, то нужно создать файл &lt;code&gt;/etc/modprobe.d/ip6table_raw.conf&lt;/code&gt; с содержимым :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;options ip6table_raw raw_before_defrag=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;В некоторых традиционных дистрибутивах можно изменить текущий ip6tables через : update-alternatives --config ip6tables Если вы хотите оставаться на iptables-nft, вам придется пересобрать патченную версию. Патч совсем небольшой. В &lt;code&gt;nft.c&lt;/code&gt; найдите фрагмент:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;        {
            .name	= &quot;PREROUTING&quot;,
            .type	= &quot;filter&quot;,
            .prio	= -300,	/* NF_IP_PRI_RAW */
            .hook	= NF_INET_PRE_ROUTING,
        },
        {
            .name	= &quot;OUTPUT&quot;,
            .type	= &quot;filter&quot;,
            .prio	= -300,	/* NF_IP_PRI_RAW */
            .hook	= NF_INET_LOCAL_OUT,
        },
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;и замените везде -300 на -450.&lt;/p&gt; 
&lt;p&gt;Это нужно сделать вручную, никакой автоматики в &lt;code&gt;blockcheck.sh&lt;/code&gt; нет.&lt;/p&gt; 
&lt;p&gt;Либо можно раз и навсегда избавиться от этой проблемы, используя &lt;code&gt;nftables&lt;/code&gt;. Там можно создать &lt;code&gt;netfilter hook&lt;/code&gt; с любым приоритетом. Используйте приоритет -401 и ниже.&lt;/p&gt; 
&lt;p&gt;При использовании iptables и NAT, похоже, что нет способа прицепить обработчик очереди после NAT. Пакет попадает в nfqws с source адресом внутренней сети, затем фрагментируется и уже не обрабатывается NAT. Так и уходит во внешнюю сеть с src ip 192.168.x.x. Следовательно, метод не срабатывает. Видимо единственный рабочий метод - отказаться от iptables и использовать nftables. Хук должен быть с приоритетом 101 или выше.&lt;/p&gt; 
&lt;h3&gt;МНОЖЕСТВЕННЫЕ СТРАТЕГИИ&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;nfqws&lt;/strong&gt; способен по-разному реагировать на различные запросы и применять разные стратегии дурения. Это реализовано посредством поддержки множества профилей дурения. Профили разделяются в командной строке параметром &lt;code&gt;--new&lt;/code&gt;. Первый профиль создается автоматически. Для него не нужно &lt;code&gt;--new&lt;/code&gt;. Каждый профиль имеет фильтр. По умолчанию он пуст, то есть профиль удовлетворяет любым условиям. Фильтр может содержать жесткие параметры: версия ip протокола, ipset и порты tcp/udp. Они всегда однозначно идентифицируются даже на нулевой фазе десинхронизации, когда еще хост и L7 неизвестны. В качестве мягкого фильтра могут выступать хост-листы и протокол прикладного уровня (l7). L7 протокол становится известен обычно после первого пакета с данными. При поступлении запроса идет проверка профилей в порядке от первого до последнего до достижения первого совпадения с фильтром. Жесткие параметры фильтра сверяются первыми. При несовпадении идет сразу же переход к следующему профилю. Если какой-то профиль удовлетворяет жесткому фильтру и L7 фильтру и содержит авто-хостлист, он выбирается сразу. Если профиль удовлетворяет жесткому фильтру и L7 фильтру, для него задан хостлист, и у нас еще нет имени хоста, идет переход к следующему профилю. В противном случае идет проверка по хостлистам этого профиля. Если имя хоста удовлетворяет листам, выбирается этот профиль. Иначе идет переход к следующему. Может так случиться, что до получения имени хоста или узнавания L7 протокола соединение идет по одному профилю, а при выяснении этих параметров профиль меняется на лету. Это может произойти даже дважды - при выяснении L7 и имени хоста. Чаще всего это выяснение совмещается в одно действие, поскольку по одному пакету, как правило, узнается и L7, и хост. Поэтому если у вас есть параметры дурения нулевой фазы, тщательно продумывайте что может произойти при переключении стратегии. Смотрите debug log, чтобы лучше понять что делает nfqws. Нумерация профилей идет с 1 до N. Последним в цепочке создается пустой профиль с номером 0. Он используется, когда никакие условия фильтров не совпали.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Множественные стратегии создавались только для случаев, когда невозможно обьединить имеющиеся стратегии для разных ресурсов. Копирование стратегий из blockcheck для разных сайтов во множество профилей без понимания как они работают приведет к нагромождению параметров, которые все равно не покроют все возможные заблокированные ресурсы. Вы только увязните в этой каше.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] user-mode реализация ipset создавалась не как удобная замена *nix версии, реализованной в ядре. Вариант в ядре работает гораздо эффективнее. Это создавалось для систем без подд3ержки ipset в ядре. Конкретно - Windows и ядра Linux, собранные без nftables и ipset модулей ядра. Например, в android нет ipset.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;ФИЛЬТРАЦИЯ ПО WIFI&lt;/h3&gt; 
&lt;p&gt;Имя wifi сети никак не связано с сетевым интерфейсом адаптера wifi. Интерфейс один, подключиться можно к любой сети. Для разных сетей разные стратегии. Стратегия от сети A не работает или ломает сеть B. Что делать ?&lt;/p&gt; 
&lt;p&gt;Можно вручную запускать и снимать инстансы nfqws. Но можно поступить иначе. В windows версии winws есть глобальный фильтр &lt;code&gt;--ssid-filter&lt;/code&gt;. Он включает или отключает инстанс winws в зависимости от подключенности любого адаптера к конкретной wifi сети. При этом не учитывается маршрутизация. Такой подход возможен потому, что к windivert можно прицепить несколько инстансов winws на пересекающихся фильтрах. При смене wifi сети одни будут включаться, другие выключаться.&lt;/p&gt; 
&lt;p&gt;Для linux применяется иное решение. Фильтр &lt;code&gt;--filter-ssid&lt;/code&gt; относится к конкретному профилю. Невозможно повесить несколько инстансов nfqws на одну и ту же очередь или направить один и тот же трафик на несколько очередей. Подключение и отключение от очереди разных инстансов сопряжено со сложностями синхронизации между ними. Поэтому обрабатывать трафик должен один инстанс, и он должен уметь работать с разными wifi сетями. Это и реализовано в параметре &lt;code&gt;--filter-ssid&lt;/code&gt;. Он берет список имен wifi сетей (SSID) через запятую аналогично &lt;code&gt;--ssid-filter&lt;/code&gt; для winws. При выборе профиля имеет значение куда идет конкретный обрабатываемый пакет. На какой интерфейс. Или с какого интерфейса пакет пришел, если он считается входящим. Поэтому даже если у вас часть трафика идет на одну сеть, часть на другую, а часть вообще не идет по wifi, то все это можно настроить.&lt;/p&gt; 
&lt;p&gt;Информация о подключенных сетях берется способом, используемым командой &lt;code&gt;iw dev &amp;lt;ifname&amp;gt; info&lt;/code&gt; (nl80211). К сожалению, на ядрах с 5.19 до самых последних (6.14 не работает) этот способ сломан. В этом случае используется способ iwgetid (wireless extensions). wireless extensions считаются deprecated и на новых ядрах реализованы как прослойка совместимости. Некоторые ядра могут быть собраны без wireless extensions. Перед использованием &lt;code&gt;--filter-ssid&lt;/code&gt; удостоверьтесь, что любая из этих команд возвращает SSID.&lt;/p&gt; 
&lt;p&gt;Сканируются все wifi интерфейсы, составляется список interface-&amp;gt;SSID. Он обновляется по мере поступления пакетов, но не чаще 1 раза в секунду.&lt;/p&gt; 
&lt;h3&gt;IPTABLES ДЛЯ NFQWS&lt;/h3&gt; 
&lt;p&gt;iptables для задействования атаки на первые пакеты данных в tcp соединении :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;iptables -t mangle -I POSTROUTING -o &amp;lt;внешний_интерфейс&amp;gt; -p tcp -m multiport --dports 80,443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:6 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num 200 --queue-bypass
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Этот вариант применяем, когда DPI не следит за всеми запросами http внутри keep-alive сессии. Если следит, направляем только первый пакет от https и все пакеты от http :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;iptables -t mangle -I POSTROUTING -o &amp;lt;внешний_интерфейс&amp;gt; -p tcp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:6 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num 200 --queue-bypass
iptables -t mangle -I POSTROUTING -o &amp;lt;внешний_интерфейс&amp;gt; -p tcp --dport 80 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num 200 --queue-bypass
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;mark нужен, чтобы сгенерированный поддельный пакет не попал опять к нам на обработку. nfqws выставляет fwmark при его отсылке. Хотя nfqws способен самостоятельно различать помеченные пакеты, фильтр в iptables по mark нужен при использовании connbytes, чтобы не допустить изменения порядка следования пакетов. Процессинг очереди - процесс отложенный. Если ядро имеет пакеты на отсылку вне очереди - оно их отправляет незамедлительно. Изменение правильного порядка следования пакетов при десинхронизации ломает всю идею. Так же были замечены дедлоки при достаточно большой отсылке пакетов из nfqws и отсутствии mark фильтра. Процесс может зависнуть. Поэтому наличие фильтра по mark в ip/nf tables можно считать обязательным.&lt;/p&gt; 
&lt;p&gt;Почему &lt;code&gt;--connbytes 1:6&lt;/code&gt; :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1 - для работы методов десинхронизации 0-й фазы и корректной работы conntrack&lt;/li&gt; 
 &lt;li&gt;2 - иногда данные идут в 3-м пакете 3-way handshake&lt;/li&gt; 
 &lt;li&gt;3 - стандартная ситуация приема одного пакета запроса&lt;/li&gt; 
 &lt;li&gt;4-6 - на случай ретрансмиссии или запроса длиной в несколько пакетов (TLSClientHello с kyber, например)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Для режима autottl необходимо перенаправление входящего &lt;code&gt;SYN,ACK&lt;/code&gt; пакета или первого пакета соединения (что обычно есть то же самое). Для режима autohostlist необходимы входящие RST и http redirect. Можно построить фильтр на tcp flags для выделения &lt;code&gt;SYN,ACK&lt;/code&gt; и модуле u32 для поиска характерных паттернов http redirect, но проще использовать connbytes для выделения нескольких начальных входящих пакетов.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;iptables -t mangle -I PREROUTING -i &amp;lt;внешний интерфейс&amp;gt; -p tcp -m multiport --sports 80,443 -m connbytes --connbytes-dir=reply --connbytes-mode=packets --connbytes 1:3 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num 200 --queue-bypass&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Для quic :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;iptables -t mangle -I POSTROUTING -o &amp;lt;внешний_интерфейс&amp;gt; -p udp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:6 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num 200 --queue-bypass
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;6 пакетов берется, чтобы покрыть случаи возможных ретрансмиссий quic initial в случае плохой связи или если сервер плохо себя чувствует, а приложение настаивает именно на quic, не переходя на tcp. А так же для работы autohostlist по quic. Однако, autohostlist для quic не рекомендуется.&lt;/p&gt; 
&lt;h3&gt;NFTABLES ДЛЯ NFQWS&lt;/h3&gt; 
&lt;p&gt;Можно начать с базовой конфигурации.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IFACE_WAN=wan

nft create table inet ztest

nft add chain inet ztest post &quot;{type filter hook postrouting priority mangle;}&quot;
nft add rule inet ztest post oifname $IFACE_WAN meta mark and 0x40000000 == 0 tcp dport &quot;{80,443}&quot; ct original packets 1-6 queue num 200 bypass
nft add rule inet ztest post oifname $IFACE_WAN meta mark and 0x40000000 == 0 udp dport 443 ct original packets 1-6 queue num 200 bypass

# auto hostlist with avoiding wrong ACK numbers in RST,ACK packets sent by russian DPI
sysctl net.netfilter.nf_conntrack_tcp_be_liberal=1 
nft add chain inet ztest pre &quot;{type filter hook prerouting priority filter;}&quot;
nft add rule inet ztest pre iifname $IFACE_WAN tcp sport &quot;{80,443}&quot; ct reply packets 1-3 queue num 200 bypass
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Для задействования IP фрагментации и &lt;code&gt;datanoack&lt;/code&gt; на проходящие пакеты требуется особая конфигурация цепочек, перенаправляющая пакеты после NAT. В скриптах zapret эта схема называется &lt;code&gt;POSTNAT&lt;/code&gt;, и она возможна только на nftables. Сгенерированные nfqws пакеты требуется на раннем этапе помечать как &lt;strong&gt;notrack&lt;/strong&gt;, чтобы они не были испорчены NAT.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IFACE_WAN=wan

nft create table inet ztest

nft add chain inet ztest postnat &quot;{type filter hook postrouting priority srcnat+1;}&quot;
nft add rule inet ztest postnat oifname $IFACE_WAN meta mark and 0x40000000 == 0 tcp dport &quot;{80,443}&quot; ct original packets 1-6 queue num 200 bypass
nft add rule inet ztest postnat oifname $IFACE_WAN meta mark and 0x40000000 == 0 udp dport 443 ct original packets 1-6 queue num 200 bypass

nft add chain inet ztest predefrag &quot;{type filter hook output priority -401;}&quot;
nft add rule inet ztest predefrag &quot;mark &amp;amp; 0x40000000 != 0x00000000 notrack&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Удаление тестовой таблицы :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nft delete table inet ztest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FLOW OFFLOADING&lt;/h3&gt; 
&lt;p&gt;Если ваше устройство поддерживает аппаратное ускорение (flow offloading, hardware nat, hardware acceleration), то iptables могут не работать. При включенном offloading пакет не проходит по обычному пути netfilter. Необходимо или его отключить, или выборочно им управлять.&lt;/p&gt; 
&lt;p&gt;В новых ядрах присутствует software flow offloading (SFO). Пакеты, проходящие через SFO, так же проходят мимо большей части механизмов iptables. При включенном SFO работает DNAT/REDIRECT (tpws). Эти соединения исключаются из offloading. Однако, остальные соединения идут через SFO, потому NFQUEUE будет срабатывать только до помещения соединения в flowtable. Практически это означает, что почти весь функционал nfqws работать не будет. Offload включается через специальный target в iptables &lt;code&gt;FLOWOFFLOAD&lt;/code&gt; или через flowtable в nftables.&lt;/p&gt; 
&lt;p&gt;Не обязательно пропускать весь трафик через offload. tpws и так обходит offload &quot;by design&quot;, а для отработки nfqws достаточно первых нескольких пакетов в tcp соединении или udp сеансе. Пока сеанс не направлен на offload, он процессится обычным образом через полноценный netfilter. Как только срабатывает правило offload по любому входящему или исходящему пакету, весь сеанс окончательно уходит из netfilter в offload. Поэтому скрипты zapret берут правила для NFQUEUE, что они создали, и из них создают exemption правила, которые не дают раньше времени попасть сеансу в offload, а потом его &quot;отпускают&quot;. При этом входящим пакетам не дают начать offload, триггером выступают только исходящие пакеты. Эта схема обеспечивает практически нулевой негативный эффект на скорость, одновременно покрывая нужды nfqws и упрощая правила таблиц.&lt;/p&gt; 
&lt;p&gt;OpenWrt не предусматривает выборочного управления offload, поэтому скрипты zapret поддерживают свою систему выборочного управления.&lt;/p&gt; 
&lt;p&gt;iptables target &lt;code&gt;FLOWOFFLOAD&lt;/code&gt; - это проприетарное изобретение OpenWrt. Управление offload в nftables реализовано в базовом ядре linux без патчей. nftables - единственный способ включения offload на классическом Linux.&lt;/p&gt; 
&lt;h3&gt;ДУРЕНИЕ СО СТОРОНЫ СЕРВЕРА&lt;/h3&gt; 
&lt;p&gt;Это тоже возможно. nfqws рассчитан на атаку со стороны клиента, поэтому он распознает прямой и обратный трафик на основании роли в установлении tcp соединения. Если проходит SYN, то source IP - это клиент. Если проходит SYN,ACK , то source IP - это сервер. Для UDP клиентом считается source IP первого прошедшего пакета по двум связкам ip-port. На сервере трафиком клиента будет считаться принятый трафик, а трафиком сервера - исходящий.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--wsize&lt;/code&gt; работает в любом случае, он может использоваться как на клиенте, так и на сервере. Остальные техники работают только если nfqws считает трафик трафиком клиента. Поэтому для их применения по исходящему с сервера трафику conntrack нужно выключить параметром &lt;code&gt;--ctrack-disable&lt;/code&gt;. Если пакет не найден в conntrack, по нему идет работа как по пакету клиента.&lt;/p&gt; 
&lt;p&gt;Большинство протоколов опознаваться не будет, потому что система их опознавания рассчитана на содержание пакетов от клиента. Чтобы задействовать техники типа &lt;code&gt;fake&lt;/code&gt; или &lt;code&gt;multisplit&lt;/code&gt; нужно использовать &lt;code&gt;--dpi-desync-any-protocol&lt;/code&gt; с ограничителем connbytes или с ограничителем на основании содержания пакета или его заголовков. start/cutoff недоступны, поскольку завязаны на conntrack.&lt;/p&gt; 
&lt;p&gt;Техника &lt;code&gt;synack-split&lt;/code&gt; позволяет разбить tcp сегмент SYN,ACK на отдельные части с SYN и с ACK. В ответ на это клиент шлет SYN,ACK , что обычно характеризует сервер. У некоторых DPI от этого может ломаться алгоритм, и они перестают блокировать запрещенный контент. Здесь &lt;a href=&quot;https://nmap.org/misc/split-handshake.pdf&quot;&gt;подробное описание&lt;/a&gt; что есть split handshake.&lt;/p&gt; 
&lt;p&gt;Перенаправление трафика обычно идет по номеру source портов и направлению original. original - это исходящий с системы трафик, reply - входящий.&lt;/p&gt; 
&lt;h2&gt;tpws&lt;/h2&gt; 
&lt;p&gt;tpws - это transparent proxy.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@&amp;lt;config_file&amp;gt;|$&amp;lt;config_file&amp;gt;                     ; читать конфигурацию из файла. опция должна быть первой. остальные опции игнорируются.

--debug=0|1|2|syslog|@&amp;lt;filename&amp;gt;                  ; 0,1,2 = логирование на косоль : 0=тихо, 1(default)=подробно, 2=отладка.
--debug-level=0|1|2                               ; указать уровень логирования для syslog и @&amp;lt;filename&amp;gt;
--dry-run                                         ; проверить опции командной строки и выйти. код 0 - успешная проверка.
--version                                         ; вывести версию и выйти

--daemon                                          ; демонизировать прогу
--pidfile=&amp;lt;file&amp;gt;                                  ; сохранить PID в файл
--user=&amp;lt;username&amp;gt;                                 ; менять uid процесса
--uid=uid[:gid]                                   ; менять uid процесса
--bind-addr                                       ; на каком адресе слушать. может быть ipv4 или ipv6 адрес
                                                  ; если указан ipv6 link local, то требуется указать с какого он интерфейса : fe80::1%br-lan
--bind-linklocal=no|unwanted|prefer|force         ; no : биндаться только на global ipv6
                                                  ; unwanted (default) : предпочтительно global, если нет - LL
                                                  ; prefer : предпочтительно LL, если нет - global
                                                  ; force : биндаться только на LL
--bind-iface4=&amp;lt;iface&amp;gt;                             ; слушать на первом ipv4 интерфейса iface
--bind-iface6=&amp;lt;iface&amp;gt;                             ; слушать на первом ipv6 интерфейса iface
--bind-wait-ifup=&amp;lt;sec&amp;gt;                            ; ждать до N секунд появления и поднятия интерфейса
--bind-wait-ip=&amp;lt;sec&amp;gt;                              ; ждать до N секунд получения IP адреса (если задан --bind-wait-ifup - время идет после поднятия интерфейса)
--bind-wait-ip-linklocal=&amp;lt;sec&amp;gt;
                                                  ; имеет смысл только при задании --bind-wait-ip
                                                  ; --bind-linklocal=unwanted	: согласиться на LL после N секунд
                                                  ; --bind-linklocal=prefer	: согласиться на global address после N секунд
--bind-wait-only                                  ; подождать все бинды и выйти. результат 0 в случае успеха, иначе не 0.
--connect-bind-addr                               ; с какого адреса подключаться во внешнюю сеть. может быть ipv4 или ipv6 адрес
                                                  ; если указан ipv6 link local, то требуется указать с какого он интерфейса : fe80::1%br-lan
                                                  ; опция может повторяться для v4 и v6 адресов
                                                  ; опция не отменяет правил маршрутизации ! выбор интерфейса определяется лишь правилами маршрутизации, кроме случая v6 link local.
--socks                                           ; вместо прозрачного прокси реализовать socks4/5 proxy
--no-resolve                                      ; запретить ресолвинг имен через socks5
--resolve-threads                                 ; количество потоков ресолвера
--port=&amp;lt;port&amp;gt;                                     ; на каком порту слушать
--maxconn=&amp;lt;max_connections&amp;gt;                       ; максимальное количество соединений от клиентов к прокси
--maxfiles=&amp;lt;max_open_files&amp;gt;                       ; макс количество файловых дескрипторов (setrlimit). мин требование (X*connections+16), где X=6 в tcp proxy mode, X=4 в режиме тамперинга.
                                                  ; стоит сделать запас с коэффициентом как минимум 1.5. по умолчанию maxfiles (X*connections)*1.5+16
--max-orphan-time=&amp;lt;sec&amp;gt;                           ; если вы запускаете через tpws торрент-клиент с множеством раздач, он пытается установить очень много исходящих соединений,
                                                  ; большая часть из которых отваливается по таймауту (юзера сидят за NAT, firewall, ...)
                                                  ; установление соединения в linux может длиться очень долго. локальный конец отвалился, перед этим послав блок данных,
                                                  ; tpws ждет подключения удаленного конца, чтобы отослать ему этот блок, и зависает надолго.
                                                  ; настройка позволяет сбрасывать такие подключения через N секунд, теряя блок данных. по умолчанию 5 сек. 0 означает отключить функцию
                                                  ; эта функция не действует на успешно подключенные ранее соединения

--local-rcvbuf=&amp;lt;bytes&amp;gt;                            ; SO_RCVBUF для соединений client-proxy
--local-sndbuf=&amp;lt;bytes&amp;gt;                            ; SO_SNDBUF для соединений client-proxy
--remote-rcvbuf=&amp;lt;bytes&amp;gt;                           ; SO_RCVBUF для соединений proxy-target
--remote-sndbuf=&amp;lt;bytes&amp;gt;                           ; SO_SNDBUF для соединений proxy-target
--nosplice                                        ; не использовать splice на linux системах
--skip-nodelay                                    ; не устанавливать в исходящих соединения TCP_NODELAY. несовместимо со split.
--local-tcp-user-timeout=&amp;lt;seconds&amp;gt;                ; таймаут соединений client-proxy (по умолчанию : 10 сек, 0 = оставить системное значение)
--remote-tcp-user-timeout=&amp;lt;seconds&amp;gt;               ; таймаут соединений proxy-target (по умолчанию : 20 сек, 0 = оставить системное значение)
--fix-seg=&amp;lt;int&amp;gt;                                   ; исправлять неудачи tcp сегментации ценой задержек для всех клиентов и замедления. ждать до N мс. по умолчанию 30 мс.
--ipcache-lifetime=&amp;lt;int&amp;gt;                          ; время жизни записей кэша IP в секундах. 0 - без ограничений.
--ipcache-hostname=[0|1]                          ; 1 или отсутствие аргумента включают кэширование имен хостов для применения в стратегиях нулевой фазы

--split-pos=N|-N|marker+N|marker-N                ; список через запятую маркеров для tcp сегментации
--split-any-protocol                              ; применять сегментацию к любым пакетам. по умолчанию - только к известным протоколам (http, TLS)
--disorder[=http|tls]                             ; путем манипуляций с сокетом вынуждает отправлять первым второй сегмент разделенного запроса
--oob[=http|tls]                                  ; отправить байт out-of-band data (OOB) в конце первой части сплита
--oob-data=&amp;lt;char&amp;gt;|0xHEX                           ; переопределить байт OOB. по умолчанию 0x00.
--hostcase                                        ; менять регистр заголовка &quot;Host:&quot;. по умолчанию на &quot;host:&quot;.
--hostspell=HoST                                  ; точное написание заголовка Host (можно &quot;HOST&quot; или &quot;HoSt&quot;). автоматом включает --hostcase
--hostdot                                         ; добавление точки после имени хоста : &quot;Host: kinozal.tv.&quot;
--hosttab                                         ; добавление табуляции после имени хоста : &quot;Host: kinozal.tv\t&quot;
--hostnospace                                     ; убрать пробел после &quot;Host:&quot;
--hostpad=&amp;lt;bytes&amp;gt;                                 ; добавить паддинг-хедеров общей длиной &amp;lt;bytes&amp;gt; перед Host:
--domcase                                         ; домен после Host: сделать таким : TeSt.cOm
--methodspace                                     ; добавить пробел после метода : &quot;GET /&quot; =&amp;gt; &quot;GET  /&quot;
--methodeol                                       ; добавить перевод строки перед методом  : &quot;GET /&quot; =&amp;gt; &quot;\r\nGET  /&quot;
--unixeol                                         ; конвертировать 0D0A в 0A и использовать везде 0A
--tlsrec=N|-N|marker+N|marker-N                   ; разбивка TLS ClientHello на 2 TLS records на указанной позиции. Минимальное смещение - 6.
--mss=&amp;lt;int&amp;gt;                                       ; установить MSS для клиента. может заставить сервер разбивать ответы, но существенно снижает скорость
--tamper-start=[n]&amp;lt;pos&amp;gt;                           ; начинать дурение только с указанной байтовой позиции или номера блока исходяшего потока (считается позиция начала принятого блока)
--tamper-cutoff=[n]&amp;lt;pos&amp;gt;                          ; закончить дурение на указанной байтовой позиции или номере блока исходящего потока (считается позиция начала принятого блока)
--hostlist=&amp;lt;filename&amp;gt;                             ; действовать только над доменами, входящими в список из filename. поддомены автоматически учитываются, если хост не начинается с &#39;^&#39;.
                                                  ; в файле должен быть хост на каждой строке.
                                                  ; список читается при старте и хранится в памяти в виде иерархической структуры для быстрого поиска.
                                                  ; при изменении времени модификации файла он перечитывается автоматически по необходимости
                                                  ; список может быть запакован в gzip. формат автоматически распознается и разжимается
                                                  ; списков может быть множество. пустой общий лист = его отсутствие
                                                  ; хосты извлекаются из Host: хедера обычных http запросов и из SNI в TLS ClientHello.
--hostlist-domains=&amp;lt;domain_list&amp;gt;                  ; фиксированный список доменов через зяпятую. можно использовать # в начале для комментирования отдельных доменов.
--hostlist-exclude=&amp;lt;filename&amp;gt;                     ; не применять дурение к доменам из листа. может быть множество листов. схема аналогична include листам.
--hostlist-exclude-domains=&amp;lt;domain_list&amp;gt;          ; фиксированный список доменов через зяпятую. можно использовать # в начале для комментирования отдельных доменов.
--hostlist-auto=&amp;lt;filename&amp;gt;                        ; обнаруживать автоматически блокировки и заполнять автоматический hostlist (требует перенаправления входящего трафика)
--hostlist-auto-fail-threshold=&amp;lt;int&amp;gt;              ; сколько раз нужно обнаружить ситуацию, похожую на блокировку, чтобы добавить хост в лист (по умолчанию: 3)
--hostlist-auto-fail-time=&amp;lt;int&amp;gt;                   ; все эти ситуации должны быть в пределах указанного количества секунд (по умолчанию: 60)
--hostlist-auto-debug=&amp;lt;logfile&amp;gt;                   ; лог положительных решений по autohostlist. позволяет разобраться почему там появляются хосты.
--new                                             ; начало новой стратегии (новый профиль)
--skip                                            ; не использовать этот профиль . полезно для временной деактивации профиля без удаления параметров.
--filter-l3=ipv4|ipv6                             ; фильтр версии ip для текущей стратегии
--filter-tcp=[~]port1[-port2]|*                   ; фильтр портов tcp для текущей стратегии. ~ означает инверсию. поддерживается список через запятую.
--filter-l7=[http|tls|quic|wireguard|dht|unknown] ; фильтр протокола L6-L7. поддерживается несколько значений через запятую.
--ipset=&amp;lt;filename&amp;gt;                                ; включающий ip list. на каждой строчке ip или cidr ipv4 или ipv6. поддерживается множество листов и gzip. перечитка автоматическая.
--ipset-ip=&amp;lt;ip_list&amp;gt;                              ; фиксированный список подсетей через запятую. можно использовать # в начале для комментирования отдельных подсетей.
--ipset-exclude=&amp;lt;filename&amp;gt;                        ; исключающий ip list. на каждой строчке ip или cidr ipv4 или ipv6. поддерживается множество листов и gzip. перечитка автоматическая.
--ipset-exclude-ip=&amp;lt;ip_list&amp;gt;                      ; фиксированный список подсетей через запятую. можно использовать # в начале для комментирования отдельных подсетей.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TCP СЕГМЕНТАЦИЯ В TPWS&lt;/h3&gt; 
&lt;p&gt;tpws, как и nfqws, поддерживает множественную сегментацию запросов. Сплит позиции задаются в &lt;code&gt;--split-pos&lt;/code&gt;. Указываются маркеры через запятую. Описание маркеров см в разделе &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#tcp-%D1%81%D0%B5%D0%B3%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F&quot;&gt;nfqws&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;На прикладном уровне в общем случае нет гарантированного средства заставить ядро выплюнуть блок данных, порезанным в определенном месте. ОС держит буфер отсылки (SNDBUF) у каждого сокета. Если у сокета включена опция TCP_NODELAY и буфер пуст, то каждый send приводит к отсылке отдельного ip пакета или группы пакетов, если блок не вмещается в один ip пакет. Однако, если в момент send уже имеется неотосланный буфер, то ОС присоединит данные к нему, никакой отсылки отдельным пакетом не будет. Но в этом случае и так нет никакой гарантии, что какой-то блок сообщения пойдет в начале пакета, на что собственно и заточены DPI. Разбиение будет производиться согласно MSS, который зависит от MTU исходящего интерфейса. Таким образом DPI, смотрящие в начало поля данных TCP пакета, будут поломаны в любом случае. Протокол http относится к запрос-ответным протоколам. Новое сообщение посылается только тогда, когда сервер получил запрос и полностью вернул ответ. Значит запрос фактически был не только отослан, но и принят другой стороной, а следовательно буфер отсылки пуст, и следующие 2 send приведут к отсылке сегментов данных разными ip пакетами.&lt;/p&gt; 
&lt;p&gt;Таким образом tpws обеспечивает сплит только за счет раздельных вызовов send, и это обычно работает надежно, если разбивать не на слишком много частей и не на слишком мелкие подряд следующие части. В последнем случае Linux все же может обьединить некоторые части, что приведет к несоответствию реальной сегментации указанным сплит позициям. Другие ОС в этом вопросе ведут себя более предсказуемо. Спонтанного обьединения замечено не было. Поэтому не стоит злоупотреблять сплитами и в особенности мелкими соседними пакетами.&lt;/p&gt; 
&lt;p&gt;Как показывается практика, проблемы могут начаться , если количество сплитов более одного. На каких-то системах наблюдался стабильный результат до 8 сплитов, на других проблемы уже начинались после 2 сплитов. Один сплит работает стабильно, если не является частью массивной потоковой передачи. При неудаче сегментации будет выводиться сообщение &lt;code&gt;WARNING ! segmentation failed&lt;/code&gt;. Если вы его видите, это повод снизить количество сплит позиций. Если это не вариант, для ядер Linux &amp;gt;=4.6 есть параметр &lt;code&gt;--fix-seg&lt;/code&gt;. Он позволяет подождать завершение отсылки перед отправкой следующей части. Но этот вариант ломает модель асинхронной обработки событий. Пока идет ожидание, все остальные соединения не обрабатываются и кратковременно подвисают. На практике это может быть совсем небольшое ожидание - менее 10 мс. Выполняется оно только , если происходит split, и в ожидании есть реальная необходимость. В высоконагруженных системах данный вариант не рекомендуется. Но для домашнего использования может подойти, и вы эти задержки даже не заметите.&lt;/p&gt; 
&lt;p&gt;Если вы пытаетесь сплитнуть массивную передачу с &lt;code&gt;--split-any-protocol&lt;/code&gt;, когда информация поступает быстрее отсылки, то без &lt;code&gt;--fix-seg&lt;/code&gt; ошибки сегментации будут сыпаться сплошным потоком. Работа по массивному потоку без ограничителей &lt;code&gt;--tamper-start&lt;/code&gt; и &lt;code&gt;--tamper-cutoff&lt;/code&gt; обычно лишена смысла.&lt;/p&gt; 
&lt;p&gt;tpws работает на уровне сокетов, поэтому длинный запрос, не вмещающийся в 1 пакет (TLS с kyber), он получает целым блоком. На каждую сплит часть он делает отдельный вызов &lt;code&gt;send()&lt;/code&gt;. Но ОС не сможет отослать данные в одном пакете, если размер превысит MTU. В случае слишком большого сегмента ОС дополнительно его порежет на более мелкие. Результат должен быть аналогичен nfqws.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--disorder&lt;/code&gt; заставляет слать каждый 2-й пакет с TTL=1, начиная с первого. К серверу приходят все четные пакеты сразу. На остальные ОС делает ретрансмиссию, и они приходят потом. Это само по себе создает дополнительную задержку (200 мс в linux для первой ретрансмиссии). Иным способом сделать disorder в сокет варианте не представляется возможным. Итоговый порядок для 6 сегментов получается &lt;code&gt;2 4 6 1 3 5&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--oob&lt;/code&gt; высылает 1 байт out-of-band data после первого сплит сегмента. &lt;code&gt;oob&lt;/code&gt; в каждом сегменте сплита показал себя ненадежным. Сервер получает oob в сокет.&lt;/p&gt; 
&lt;p&gt;Сочетание &lt;code&gt;oob&lt;/code&gt; и &lt;code&gt;disorder&lt;/code&gt; возможно только в Linux. Остальные ОС не умеют с таким справляться. Флаг URG теряется при ретрансмиссиях. Сервер получает oob в сокет. Сочетание этих параметров в ос, кроме Linux, вызывает ошибку на этапе запуска.&lt;/p&gt; 
&lt;h3&gt;TLSREC&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;--tlsrec&lt;/code&gt; позволяют внутри одного tcp сегмента разрезать TLS ClientHello на 2 TLS records. Можно использовать стандартный механизм маркеров для задания относительных позиций.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--tlsrec&lt;/code&gt; ломает значительное количество сайтов. Криптобиблиотеки (openssl, ...) на оконечных http серверах без проблем принимают разделенные tls сегменты, но мидлбоксы - не всегда. К мидлбоксам можно отнести CDN или системы ddos-защиты. Поэтому применение &lt;code&gt;--tlsrec&lt;/code&gt; без ограничителей вряд ли целесообразно. В РФ &lt;code&gt;--tlsrec&lt;/code&gt; обычно не работает с TLS 1.2, потому что цензор парсит сертификат сервера из ServerHello. Работает только с TLS 1.3, поскольку там эта информация шифруется. Впрочем, сейчас сайтов, не поддерживающих TLS 1.3, осталось немного.&lt;/p&gt; 
&lt;h3&gt;MSS&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;--mss&lt;/code&gt; устанавливает опцию сокета TCP_MAXSEG. Клиент выдает это значение в tcp опциях SYN пакета. Сервер в ответ в SYN,ACK выдает свой MSS. На практике сервера обычно снижают размеры отсылаемых ими пакетов, но они все равно не вписываются в низкий MSS, указанный клиентом. Обычно чем больше указал клиент, тем больше шлет сервер. На TLS 1.2 если сервер разбил заброс так, чтобы домен из сертификата не попал в первый пакет, это может обмануть DPI, секущий ответ сервера. Схема может значительно снизить скорость и сработать не на всех сайтах.&lt;/p&gt; 
&lt;p&gt;С фильтром по hostlist совместимо только в &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BC%D0%BD%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D1%81%D1%82%D1%80%D0%B0%D1%82%D0%B5%D0%B3%D0%B8%D0%B8-1&quot;&gt;некоторых случаях&lt;/a&gt;, когда возможно узнать имя хоста на момент применения дурения.&lt;/p&gt; 
&lt;p&gt;Применяя данную опцию к сайтам TLS1.3, если броузер тоже поддерживает TLS1.3, то вы делаете только хуже. Но нет способа автоматически узнать когда надо применять, когда нет, поскольку MSS идет только в 3-way handshake еще до обмена данными, а версию TLS можно узнать только по ответу сервера, который может привести к реакции DPI. Использовать только когда нет ничего лучше или для отдельных ресурсов. Для http использовать смысла нет, поэтому заводите отдельный desync profile с фильтром по порту 443. Работает только на Linux, не работает на BSD и MacOS.&lt;/p&gt; 
&lt;h3&gt;ДРУГИЕ ПАРАМЕТРЫ ДУРЕНИЯ&lt;/h3&gt; 
&lt;p&gt;Параметр &lt;code&gt;--hostpad=&amp;lt;bytes&amp;gt;&lt;/code&gt; добавляет паддинг-хедеров перед &lt;code&gt;Host:&lt;/code&gt; на указанное количество байтов. Если размер &lt;code&gt;&amp;lt;bytes&amp;gt;&lt;/code&gt; слишком большой, то идет разбивка на разные хедеры по 2K. Общий буфер приема http запроса - 64K, больший паддинг не поддерживается, да и http сервера такое уже не принимают. Полезно против DPI, выполняющих реассемблинг TCP с ограниченным буфером. Если техника работает, то после некоторого количества bytes http запрос начнет проходить до сайта. Если при этом критический размер padding около MTU, значит скорее всего DPI не выполняет реассемблинг пакетов, и лучше будет использовать обычные опции TCP сегментации. Если все же реассемблинг выполняется, то критический размер будет около размера буфера DPI. Он может быть 4K или 8K, возможны и другие значения.&lt;/p&gt; 
&lt;h3&gt;МНОЖЕСТВЕННЫЕ СТРАТЕГИИ&lt;/h3&gt; 
&lt;p&gt;Работают аналогично &lt;strong&gt;nfqws&lt;/strong&gt;, кроме некоторых моментов. Нет параметра &lt;code&gt;--filter-udp&lt;/code&gt;, поскольку &lt;strong&gt;tpws&lt;/strong&gt; udp не поддерживает. Методы нулевой фазы (&lt;code&gt;--mss&lt;/code&gt;) могут работать по хостлисту только в двух случаях: если используется режим socks и удаленный ресолвинг хостов через прокси, либо используется система &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/#%D0%BA%D1%8D%D1%88-ip&quot;&gt;кэша IP&lt;/a&gt; для запоминания соответствия IP-&amp;gt;hostname. Работоспособность вашей настройки в одном и том же режиме может зависеть от того, применяет ли клиент удаленный ресолвинг. Это может быть неочевидно. В одной программе работает, в другой - нет.&lt;/p&gt; 
&lt;p&gt;Если вы используете профиль с хостлистом , и вам нужен mss всегда, укажите mss в профиле с хостлистом, создайте еще один профиль без хостлиста, если его еще нет, и в нем еще раз укажите mss. Тогда при любом раскладе будет выполняться mss.&lt;/p&gt; 
&lt;p&gt;Если вам нужен mss по хостлисту, указывайте &lt;code&gt;--mss&lt;/code&gt; только в профиле с хостлистом и убедитесь в наличии любого из необходимых условий работы в таком режиме.&lt;/p&gt; 
&lt;p&gt;Используйте &lt;code&gt;curl --socks5&lt;/code&gt; и &lt;code&gt;curl --socks5-hostname&lt;/code&gt; для проверки вашей стратегии. Смотрите вывод &lt;code&gt;--debug&lt;/code&gt;, чтобы убедиться в правильности настроек.&lt;/p&gt; 
&lt;h3&gt;СЛУЖЕБНЫЕ ПАРАМЕТРЫ&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;--debug&lt;/code&gt; позволяет выводить подробный лог действий на консоль, в syslog или в файл. Может быть важен порядок следования опций. &lt;code&gt;--debug&lt;/code&gt; лучше всего указывать в самом начале. Опции анализируются последовательно. Если ошибка будет при проверке опции, а до анализа &lt;code&gt;--debug&lt;/code&gt; еще дело не дошло, то сообщения не будут выведены в файл или syslog. &lt;code&gt;--debug=0|1|2&lt;/code&gt; позволяют сразу в одном параметре включить логирование на консоль и указать уровень. Сохранено для совместимости с более старыми версиями. Для выбора уровня в режиме syslog или file используйте отдельный параметр &lt;code&gt;--debug-level&lt;/code&gt;. Если в этих режимах &lt;code&gt;--debug&lt;/code&gt; не указывать уровень через &lt;code&gt;--debug-level&lt;/code&gt;, то автоматически назначается уровень 1. При логировании в файл процесс не держит файл открытым. Ради каждой записи файл открывается и потом закрывается. Так что файл можно удалить в любой момент, и он будет создан заново при первом же сообщении в лог. Но имейте в виду, что если вы запускаете процесс под root, то будет сменен UID на не-root. В начале на лог файл меняется owner, иначе запись будет невозможна. Если вы потом удалите файл, и у процесса не будет прав на создание файла в его директории, лог больше не будет вестись. Вместо удаления лучше использовать truncate. В шелле это можно сделать через команду &quot;: &amp;gt;filename&quot;&lt;/p&gt; 
&lt;p&gt;tpws может биндаться на множество интерфейсов и IP адресов (до 32 шт). Порт всегда только один. Параметры &lt;code&gt;--bind-iface*&lt;/code&gt; и &lt;code&gt;--bind-addr&lt;/code&gt; создают новый бинд. Остальные параметры &lt;code&gt;--bind-*&lt;/code&gt; относятся к последнему бинду. Для бинда на все ipv4 укажите &lt;code&gt;--bind-addr &quot;0.0.0.0&quot;&lt;/code&gt;, на все ipv6 - &lt;code&gt;&quot;::&quot;&lt;/code&gt;. &lt;code&gt;--bind-addr=&quot;&quot;&lt;/code&gt; - биндаемся на все ipv4 и ipv6. Выбор режима использования link local ipv6 адресов (&lt;code&gt;fe80::/8&lt;/code&gt;) :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--bind-iface6 --bind-linklocal=no : сначала приватный адрес fc00::/7, затем глобальный адрес
--bind-iface6 --bind-linklocal=unwanted : сначала приватный адрес fc00::/7, затем глобальный адрес, затем link local.
--bind-iface6 --bind-linklocal=prefer : сначала link local, затем приватный адрес fc00::/7, затем глобальный адрес.
--bind-iface6 --bind-linklocal=force : только link local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Если не указано ни одного бинда, то создается бинд по умолчанию на все адреса всех интерфейсов. Для бинда на конкретный link-local address делаем так : &lt;code&gt;--bind-iface6=fe80::aaaa:bbbb:cccc:dddd%iface-name&lt;/code&gt; Параметры &lt;code&gt;--bind-wait*&lt;/code&gt; могут помочь в ситуациях, когда нужно взять IP с интерфейса, но его еще нет, он не поднят или не сконфигурирован. В разных системах события ifup ловятся по-разному и не гарантируют, что интерфейс уже получил IP адрес определенного типа. В общем случае не существует единого механизма повеситься на событие типа &quot;на интерфейсе X появился link local address&quot;. Для бинда на известный ip, когда еще интерфейс не сконфигурирован, нужно делать так: &lt;code&gt;--bind-addr=192.168.5.3 --bind-wait-ip=20&lt;/code&gt; В режиме transparent бинд возможен на любой несуществующий адрес, в режиме socks - только на существующий.&lt;/p&gt; 
&lt;p&gt;Параметры rcvbuf и sndbuf позволяют установить setsockopt SO_RCVBUF SO_SNDBUF для локального и удаленного соединения.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--skip-nodelay&lt;/code&gt; может быть полезен, когда tpws используется без дурения, чтобы привести MTU к MTU системы, на которой работает tpws. Это может быть полезно для скрытия факта использования VPN. Пониженный MTU - 1 из способов обнаружения подозрительного подключения. С tcp proxy ваши соединения неотличимы от тех, что сделал бы сам шлюз.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--local-tcp-user-timeout&lt;/code&gt; и &lt;code&gt;--remote-tcp-user-timeout&lt;/code&gt; устанавливают значение таймаута в секундах для соединений клиент-прокси и прокси-сервер. Этот таймаут соответствует опции сокета linux TCP_USER_TIMEOUT. Под таймаутом подразумевается время, в течение которого буферизированные данные не переданы или на переданные данные не получено подтверждение (ACK) от другой стороны. Этот таймаут никак не касается времени отсутствия какой-либо передачи через сокет лишь потому, что данных для передачи нет. Полезно для сокращения время закрытия подвисших соединений. Поддерживается только на Linux и MacOS.&lt;/p&gt; 
&lt;p&gt;Режим &lt;code&gt;--socks&lt;/code&gt; не требует повышенных привилегий (кроме бинда на привилегированные порты 1..1023). Поддерживаются версии socks 4 и 5 без авторизации. Версия протокола распознается автоматически. Подключения к IP того же устройства, на котором работает tpws, включая localhost, запрещены. socks5 позволяет удаленно ресолвить хосты (curl : --socks5-hostname firefox : socks_remote_dns=true). tpws поддерживает эту возможность асинхронно, не блокируя процессинг других соединений, используя многопоточный пул ресолверов. Количество потоков определяется автоматически в зависимости от &lt;code&gt;--maxconn&lt;/code&gt;, но можно задать и вручную через параметр &lt;code&gt;--resolver-threads&lt;/code&gt;. Запрос к socks выставляется на паузу, пока домен не будет преобразован в ip адрес в одном из потоков ресолвера. Ожидание может быть более длинным, если все потоки заняты. Если задан параметр &lt;code&gt;--no-resolve&lt;/code&gt;, то подключения по именам хостов запрещаются, а пул ресолверов не создается. Тем самым экономятся ресурсы.&lt;/p&gt; 
&lt;h3&gt;IPTABLES ДЛЯ TPWS&lt;/h3&gt; 
&lt;p&gt;Для перенаправления tcp соединения на transparent proxy используются команды следующего вида :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;iptables -t nat -I OUTPUT -o &amp;lt;внешний_интерфейс&amp;gt; -p tcp --dport 80 -m owner ! --uid-owner tpws -j DNAT --to 127.0.0.127:988
iptables -t nat -I PREROUTING -i &amp;lt;внутренний_интерфейс&amp;gt; -p tcp --dport 80 -j DNAT --to 127.0.0.127:988
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Первая команда для соединений с самой системы, вторая - для проходящих через роутер соединений.&lt;/p&gt; 
&lt;p&gt;DNAT на localhost работает в цепочке OUTPUT, но не работает в цепочке PREROUTING без включения параметра route_localnet :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sysctl -w net.ipv4.conf.&amp;lt;внутренний_интерфейс&amp;gt;.route_localnet=1&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Можно использовать &lt;code&gt;-j REDIRECT --to-port 988&lt;/code&gt; вместо DNAT, однако в этом случае процесс transparent proxy должен слушать на ip адресе входящего интерфейса или на всех адресах. Слушать на всех - не есть хорошо с точки зрения безопасности. Слушать на одном (локальном) можно, но в случае автоматизированного скрипта придется его узнавать, потом динамически вписывать в команду. В любом случае требуются дополнительные усилия. Использование route_localnet тоже имеет потенциальные проблемы с безопасностью. Вы делаете доступным все, что висит на &lt;code&gt;127.0.0.0/8&lt;/code&gt; для локальной подсети &amp;lt; внутренний_интерфейс&amp;gt;. Службы обычно привязываются к &lt;code&gt;127.0.0.1&lt;/code&gt;, поэтому можно средствами iptables запретить входящие на &lt;code&gt;127.0.0.1&lt;/code&gt; не с интерфейса lo, либо повесить tpws на любой другой IP из &lt;code&gt;127.0.0.0/8&lt;/code&gt;, например на &lt;code&gt;127.0.0.127&lt;/code&gt;, и разрешить входящие не с lo только на этот IP.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;iptables -A INPUT ! -i lo -d 127.0.0.127 -j ACCEPT
iptables -A INPUT ! -i lo -d 127.0.0.0/8 -j DROP
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Фильтр по owner необходим для исключения рекурсивного перенаправления соединений от самого tpws. tpws запускается под пользователем &lt;strong&gt;tpws&lt;/strong&gt;, для него задается исключающее правило.&lt;/p&gt; 
&lt;p&gt;ip6tables работают почти точно так же, как и ipv4, но есть ряд важных нюансов. В DNAT следует брать адрес --to в квадратные скобки. Например :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ip6tables -t nat -I OUTPUT -o &amp;lt;внешний_интерфейс&amp;gt; -p tcp --dport 80 -m owner ! --uid-owner tpws -j DNAT --to [::1]:988&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Параметра route_localnet не существует для ipv6. DNAT на localhost (::1) возможен только в цепочке OUTPUT. В цепочке PREROUTING DNAT возможен на любой global address или на link local address того же интерфейса, откуда пришел пакет. NFQUEUE работает без изменений.&lt;/p&gt; 
&lt;h3&gt;NFTABLES ДЛЯ TPWS&lt;/h3&gt; 
&lt;p&gt;Базовая конфигурация :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IFACE_WAN=wan
IFACE_LAN=br-lan

sysctl -w net.ipv4.conf.$IFACE_LAN.route_localnet=1

nft create table inet ztest

nft create chain inet ztest localnet_protect
nft add rule inet ztest localnet_protect ip daddr 127.0.0.127 return
nft add rule inet ztest localnet_protect ip daddr 127.0.0.0/8 drop
nft create chain inet ztest input &quot;{type filter hook input priority filter - 1;}&quot;
nft add rule inet ztest input iif != &quot;lo&quot; jump localnet_protect

nft create chain inet ztest dnat_output &quot;{type nat hook output priority dstnat;}&quot;
nft add rule inet ztest dnat_output meta skuid != tpws oifname $IFACE_WAN tcp dport { 80, 443 } dnat ip to 127.0.0.127:988
nft create chain inet ztest dnat_pre &quot;{type nat hook prerouting priority dstnat;}&quot;
nft add rule inet ztest dnat_pre meta iifname $IFACE_LAN tcp dport { 80, 443 } dnat ip to 127.0.0.127:988
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Удаление таблицы :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nft delete table inet ztest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ip2net&lt;/h2&gt; 
&lt;p&gt;Утилита ip2net предназначена для преобразования ipv4 или ipv6 списка ip в список подсетей с целью сокращения размера списка. Входные данные берутся из stdin, выходные выдаются в &lt;code&gt;stdout&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-4                             ; лист - ipv4 (по умолчанию)
-6                             ; лист - ipv6
--prefix-length=min[-max]      ; диапазон рассматриваемых длин префиксов. например : 22-30 (ipv4), 56-64 (ipv6)
--v4-threshold=mul/div         ; ipv4 : включать подсети, в которых заполнено по крайней мере mul/div адресов. например : 3/4
--v6-threshold=N               ; ipv6 : минимальное количество ip для создания подсети
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;В списке могут присутствовать записи вида ip/prefix и ip1-ip2. Такие записи выкидываются в stdout без изменений. Они принимаются командой ipset. ipset умеет для листов hash:net из ip1-ip2 делать оптимальное покрытие ip/prefix. ipfw из FreeBSD понимает ip/prefix, но не понимает ip1-ip2. ip2net фильтрует входные данные, выкидывая неправильные IP адреса.&lt;/p&gt; 
&lt;p&gt;Выбирается подсеть, в которой присутствует указанный минимум адресов. Для ipv4 минимум задается как процент от размера подсети (mul/div. например, 3/4), для ipv6 минимум задается напрямую.&lt;/p&gt; 
&lt;p&gt;Размер подсети выбирается следующим алгоритмом: Сначала в указанном диапазоне длин префиксов ищутся подсети, в которых количество адресов - максимально. Если таких сетей найдено несколько, берется наименьшая сеть (префикс больше). Например, заданы параметры v6_threshold=2 prefix_length=32-64, имеются следующие ipv6 :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;1234:5678:aaaa::5
1234:5678:aaaa::6
1234:5678:aaac::5
Результат будет :
1234:5678:aaa8::/45
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Эти адреса так же входят в подсеть /32. Однако, нет смысла проходиться ковровой бомбардировкой, когда те же самые адреса вполне влезают в /45 и их ровно столько же. Если изменить v6_threshold=4, то результат будет:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;1234:5678:aaaa::5
1234:5678:aaaa::6
1234:5678:aaac::5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;То есть ip не объединятся в подсеть, потому что их слишком мало. Если изменить &lt;code&gt;prefix_length=56-64&lt;/code&gt;, результат будет:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;1234:5678:aaaa::/64
1234:5678:aaac::5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Требуемое процессорное время для вычислений сильно зависит от ширины диапазона длин префиксов, размера искомых подсетей и длины листа. Если ip2net думает слишком долго, не используйте слишком большие подсети и уменьшите диапазон длин префиксов. Учтите, что арифметика mul/div - целочисленная. При превышении разрядной сетки 32 bit результат непредсказуем. Не надо делать такое: 5000000/10000000. 1/2 - гораздо лучше.&lt;/p&gt; 
&lt;h2&gt;mdig&lt;/h2&gt; 
&lt;p&gt;Программа предназначена для многопоточного ресолвинга больших листов через системный DNS. Она берет из stdin список доменов и выводит в stdout результат ресолвинга. Ошибки выводятся в stderr.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--threads=&amp;lt;threads_number&amp;gt;	; количество потоков. по умолчанию 1.
--family=&amp;lt;4|6|46&amp;gt;              ; выбор семейства IP адресов : ipv4, ipv6, ipv4+ipv6
--verbose                      ; дебаг-лог на консоль
--stats=N                      ; выводить статистику каждые N доменов
--log-resolved=&amp;lt;file&amp;gt;          ; сохранять успешно отресолвленные домены в файл
--log-failed=&amp;lt;file&amp;gt;            ; сохранять неудачно отресолвленные домены в файл
--dns-make-query=&amp;lt;domain&amp;gt;      ; вывести в stdout бинарный DNS запрос по домену. если --family=6, запрос будет AAAA, иначе A.
--dns-parse-query              ; распарсить бинарный DNS ответ и выдать все ivp4 и ipv6 адреса из него в stdout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Параметры &lt;code&gt;--dns-make-query&lt;/code&gt; и &lt;code&gt;--dns-parse-query&lt;/code&gt; позволяют провести ресолвинг одного домена через произвольный канал. Например, следующим образом можно выполнить DoH запрос, используя лишь mdig и curl :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mdig --family=6 --dns-make-query=rutracker.org | curl --data-binary @- -H &quot;Content-Type: application/dns-message&quot; https://cloudflare-dns.com/dns-query | mdig --dns-parse-query
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Способы получения списка заблокированных IP&lt;/h2&gt; 
&lt;p&gt;!!! nftables не могут работать с ipset-ами. Собственный аналогичный механизм требует огромного количество RAM !!! для загрузки больших листов. Например, для загона 100K записей в nfset не хватает даже 256 Mb. !!! Если вам нужны большие листы на домашних роутерах, откатывайтесь на iptables+ipset.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Внесите заблокированные домены в &lt;code&gt;ipset/zapret-hosts-user.txt&lt;/code&gt; и запустите &lt;code&gt;ipset/get_user.sh&lt;/code&gt; На выходе получите &lt;code&gt;ipset/zapret-ip-user.txt&lt;/code&gt; с IP адресами.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cкрипты с названием get_reestr_* оперируют дампом реестра заблокированных сайтов :&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_reestr_resolve.sh&lt;/code&gt; получает список доменов от rublacklist и дальше их ресолвит в ip адреса в файл ipset/zapret-ip.txt.gz. В этом списке есть готовые IP адреса, но судя во всему они там в точности в том виде, что вносит в реестр РосКомПозор. Адреса могут меняться, позор не успевает их обновлять, а провайдеры редко банят по IP : вместо этого они банят http запросы с &quot;нехорошим&quot; заголовком &quot;Host:&quot; вне зависимости от IP адреса. Поэтому скрипт ресолвит все сам, хотя это и занимает много времени. Используется мультипоточный ресолвер mdig (собственная разработка).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_reestr_preresolved.sh&lt;/code&gt;. то же самое, что и 2), только берется уже заресолвленый список со стороннего ресурса.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_reestr_preresolved_smart.sh&lt;/code&gt;. то же самое, что и 3), с добавлением всего диапазона некоторых автономных систем (прыгающие IP адреса из cloudflare, facebook, ...) и некоторых поддоменов блокируемых сайтов&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cкрипты с названием &lt;code&gt;get_antifilter_*&lt;/code&gt; оперируют списками адресов и масок подсетей с сайтов antifilter.network и antifilter.download :&lt;/p&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_antifilter_ip.sh&lt;/code&gt;. получает лист &lt;a href=&quot;https://antifilter.download/list/ip.lst&quot;&gt;https://antifilter.download/list/ip.lst&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_antifilter_ipsmart.sh&lt;/code&gt;. получает лист &lt;a href=&quot;https://antifilter.network/download/ipsmart.lst&quot;&gt;https://antifilter.network/download/ipsmart.lst&lt;/a&gt;. умная суммаризация отдельных адресов из ip.lst по маскам от /32 до /22&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_antifilter_ipsum.sh&lt;/code&gt;. получает лист &lt;a href=&quot;https://antifilter.download/list/ipsum.lst&quot;&gt;https://antifilter.download/list/ipsum.lst&lt;/a&gt;. суммаризация отдельных адресов из ip.lst по маске /24&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_antifilter_ipresolve.sh&lt;/code&gt;. получает лист &lt;a href=&quot;https://antifilter.download/list/ipresolve.lst&quot;&gt;https://antifilter.download/list/ipresolve.lst&lt;/a&gt;. пре-ресолвленный список, аналогичный получаемый при помощи get_reestr_resolve. только ipv4.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_antifilter_allyouneed.sh&lt;/code&gt;. получает лист &lt;a href=&quot;https://antifilter.download/list/allyouneed.lst&quot;&gt;https://antifilter.download/list/allyouneed.lst&lt;/a&gt;. Суммарный список префиксов, созданный из ipsum.lst и subnet.lst.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ipset/get_refilter_ipsum.sh&lt;/code&gt;. Список берется отсюда : &lt;a href=&quot;https://github.com/1andrevich/Re-filter-lists&quot;&gt;https://github.com/1andrevich/Re-filter-lists&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Все варианты рассмотренных скриптов автоматически создают и заполняют ipset. Варианты 2-10 дополнительно вызывают вариант 1.&lt;/p&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt;&lt;code&gt;ipset/get_config.sh&lt;/code&gt;. этот скрипт вызывает то, что прописано в переменной GETLIST из файла config Если переменная не определена, то ресолвятся лишь листы для ipset nozapret/nozapret6.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Листы РКН все время изменяются. Возникают новые тенденции. Требования к RAM могут меняться. Поэтому необходима нечастая, но все же регулярная ревизия что же вообще у вас происходит на роутере. Или вы можете узнать о проблеме лишь когда у вас начнет постоянно пропадать wifi, и вам придется его перезагружать каждые 2 часа (метод кувалды).&lt;/p&gt; 
&lt;p&gt;Самые щадящие варианты по RAM - &lt;code&gt;get_antifilter_allyouneed.sh&lt;/code&gt;, &lt;code&gt;get_antifilter_ipsum.sh&lt;/code&gt;, &lt;code&gt;get_refilter_*.sh&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Листы &lt;code&gt;zapret-ip.txt&lt;/code&gt; и &lt;code&gt;zapret-ipban.txt&lt;/code&gt; сохраняются в сжатом виде в файлы .gz. Это позволяет снизить их размер во много раз и сэкономить место на роутере. Отключить сжатие листов можно параметром конфига GZIP_LISTS=0.&lt;/p&gt; 
&lt;p&gt;На роутерах не рекомендуется вызывать эти скрипты чаще раза за 2 суток, поскольку сохранение идет либо во внутреннюю флэш память роутера, либо в случае extroot - на флэшку. В обоих случаях слишком частая запись может убить флэшку, но если это произойдет с внутренней флэш памятью, то вы просто убьете роутер.&lt;/p&gt; 
&lt;p&gt;Принудительное обновление &lt;code&gt;ipset&lt;/code&gt; выполняет скрипт &lt;code&gt;ipset/create_ipset.sh&lt;/code&gt;. Если передан параметр &lt;code&gt;no-update&lt;/code&gt;, скрипт не обновляет &lt;code&gt;ipset&lt;/code&gt;, а только создает его при его отсутствии и заполняет. Это полезно, когда могут случиться несколько последовательных вызовов скрипта. Нет смысла несколько раз перезаполнять &lt;code&gt;ipset&lt;/code&gt;, это длительная операция на больших листах. Листы можно обновлять раз в несколько суток, и только тогда вызывать &lt;code&gt;create_ipset&lt;/code&gt; без параметра &lt;code&gt;no-update&lt;/code&gt;. Во всех остальных случаях стоит применять &lt;code&gt;no-update&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Список РКН уже достиг внушительных размеров в сотни тысяч IP адресов. Поэтому для оптимизации &lt;code&gt;ipset&lt;/code&gt; применяется утилита &lt;code&gt;ip2net&lt;/code&gt;. Она берет список отдельных IP адресов и пытается интеллектуально создать из него подсети для сокращения количества адресов. &lt;code&gt;ip2net&lt;/code&gt; отсекает неправильные записи в листах, гарантируя отсутствие ошибок при их загрузке. &lt;code&gt;ip2net&lt;/code&gt; написан на языке C, поскольку операция ресурсоемкая. Иные способы роутер может не потянуть.&lt;/p&gt; 
&lt;p&gt;Можно внести список доменов в &lt;code&gt;ipset/zapret-hosts-user-ipban.txt&lt;/code&gt;. Их ip адреса будут помещены в отдельный ipset &lt;code&gt;ipban&lt;/code&gt;. Он может использоваться для принудительного завертывания всех соединений на прозрачный proxy &lt;code&gt;redsocks&lt;/code&gt; или на VPN.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IPV6&lt;/strong&gt; : если включен ipv6, то дополнительно создаются листы с таким же именем, но с &quot;6&quot; на конце перед расширением. &lt;code&gt;zapret-ip.txt&lt;/code&gt; =&amp;gt; &lt;code&gt;zapret-ip6.txt&lt;/code&gt; Создаются ipset-ы zapret6 и ipban6. Листы с antifilter не содержат список ipv6 адресов.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;СИСТЕМА ИСКЛЮЧЕНИЯ IP&lt;/strong&gt;. Все скрипты ресолвят файл &lt;code&gt;zapret-hosts-user-exclude.txt&lt;/code&gt;, создавая &lt;code&gt;zapret-ip-exclude.txt&lt;/code&gt; и &lt;code&gt;zapret-ip-exclude6.txt&lt;/code&gt;. Они загоняются в ipset-ы nozapret и nozapret6. Все правила, создаваемые init скриптами, создаются с учетом этих ipset. Помещенные в них IP не участвуют в процессе. &lt;code&gt;zapret-hosts-user-exclude.txt&lt;/code&gt; может содержать домены, ipv4 и ipv6 адреса или подсети.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt;. Скрипты ipset/*.sh работают так же на FreeBSD. Вместо ipset они создают lookup таблицы ipfw с аналогичными именами. ipfw таблицы в отличие от ipset могут содержать как ipv4, так и ipv6 адреса и подсети в одной таблице, поэтому разделения нет.&lt;/p&gt; 
&lt;p&gt;Параметр конфига LISTS_RELOAD задает произвольную команду для перезагрузки листов. Это особенно полезно на BSD системах с PF. LISTS_RELOAD=- отключает перезагрузку листов.&lt;/p&gt; 
&lt;h2&gt;Фильтрация по именам доменов&lt;/h2&gt; 
&lt;p&gt;Альтернативой ipset является использование tpws или nfqws со списком доменов. Оба демона принимают неограниченное количество листов include (&lt;code&gt;--hostlist&lt;/code&gt;) и exclude (&lt;code&gt;--hostlist-exclude&lt;/code&gt;). Прежде всего проверяются exclude листы. При вхождении в них происходит отказ от дурения. Далее при наличии include листов проверяется домен на вхождение в них. При невхождении в список отказ от дурения. Если все include листы пустые, это приравнивается к отсутствию include листов. Ограничение перестает работать. В иных случаях происходит дурение. Нет ни одного списка - дурение всегда. Есть только exclude список - дурение всех, кроме. Есть только include список - дурение только их. Есть оба - дурение только include, кроме exclude.&lt;/p&gt; 
&lt;p&gt;В системе запуска это обыграно следующим образом. Присутствуют 2 include списка : &lt;code&gt;ipset/zapret-hosts-users.txt.gz&lt;/code&gt; или &lt;code&gt;ipset/zapret-hosts-users.txt&lt;/code&gt;, &lt;code&gt;ipset/zapret-hosts.txt.gz&lt;/code&gt; или &lt;code&gt;ipset/zapret-hosts.txt&lt;/code&gt; и 1 exclude список &lt;code&gt;ipset/zapret-hosts-user-exclude.txt.gz&lt;/code&gt; или &lt;code&gt;ipset/zapret-hosts-user-exclude.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;При режимах фильтрации &lt;code&gt;MODE_FILTER=hostlist&lt;/code&gt; или &lt;code&gt;MODE_FILTER=autohostlist&lt;/code&gt; система запуска передает &lt;strong&gt;nfqws&lt;/strong&gt; или &lt;strong&gt;tpws&lt;/strong&gt; все листы, файлы которых присутствуют. Передача происходит через замену маркеров &lt;code&gt;&amp;lt;HOSTLIST&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;HOSTLIST_NOAUTO&amp;gt;&lt;/code&gt; на реальные параметры &lt;code&gt;--hostlist&lt;/code&gt;, &lt;code&gt;--hostlist-exclude&lt;/code&gt;, &lt;code&gt;--hostlist-auto&lt;/code&gt;. Если вдруг листы include присутствуют, но все они пустые, то работа аналогична отсутствию include листа. Файл есть, но несмотря на это дурится все, кроме exclude. Если вам нужен именно такой режим - не обязательно удалять &lt;code&gt;zapret-hosts-users.txt&lt;/code&gt;. Достаточно сделать его пустым.&lt;/p&gt; 
&lt;p&gt;Поддомены учитываются автоматически. Например, строчка &quot;ru&quot; вносит в список &quot;&lt;em&gt;.ru&quot;. Строчка &quot;&lt;/em&gt;.ru&quot; в списке не сработает. Можно использовать символ &lt;code&gt;^&lt;/code&gt; в начале хоста, чтобы отказаться от автоматического учета поддоменов.&lt;/p&gt; 
&lt;p&gt;Список доменов РКН может быть получен скриптами&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ipset/get_reestr_hostlist.sh
ipset/get_antizapret_domains.sh
ipset/get_reestr_resolvable_domains.sh
ipset/get_refilter_domains.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Он кладется в &lt;code&gt;ipset/zapret-hosts.txt.gz&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;При изменении времени модификации или размера файлов списки перечитываются автоматически. После неатомарных операций изменения можно послать tpws/nfqws сигнал HUP для принудительной перечитки всех листов.&lt;/p&gt; 
&lt;p&gt;При фильтрации по именам доменов демон должен запускаться без фильтрации по ipset. tpws и nfqws решают нужно ли применять дурение в зависимости от хоста, полученного из протокола прикладного уровня (http, tls, quic). При использовании больших списков, в том числе списка РКН, оцените объем RAM на роутере ! Если после запуска демона RAM под завязку или случаются oom, значит нужно отказаться от таких больших списков.&lt;/p&gt; 
&lt;h2&gt;Режим фильтрации autohostlist&lt;/h2&gt; 
&lt;p&gt;Этот режим позволяет проанализировать как запросы со стороны клиента, так и ответы от сервера. Если хост еще не находится ни в каких листах и обнаруживается ситуация, похожая на блокировку, происходит автоматическое добавление хоста в список &lt;code&gt;autohostlist&lt;/code&gt; как в памяти, так и в файле. &lt;strong&gt;nfqws&lt;/strong&gt; или &lt;strong&gt;tpws&lt;/strong&gt; сами ведут этот файл. Чтобы какой-то хост не смог попась в &lt;code&gt;autohostlist&lt;/code&gt; используйте &lt;code&gt;hostlist-exclude&lt;/code&gt;. Если он все-же туда попал - удалите запись из файла вручную. Процессы автоматически перечитают файл. &lt;strong&gt;tpws&lt;/strong&gt;/&lt;strong&gt;nfqws&lt;/strong&gt; сами назначают владельцем файла юзера, под которым они работают после сброса привилегий, чтобы иметь возможность обновлять лист.&lt;/p&gt; 
&lt;p&gt;В случае &lt;strong&gt;nfqws&lt;/strong&gt; данный режим требует перенаправления в том числе и входящего трафика. Крайне рекомендовано использовать ограничитель &lt;code&gt;connbytes&lt;/code&gt;, чтобы &lt;strong&gt;nfqws&lt;/strong&gt; не обрабатывал гигабайты. По этой же причине не рекомендуется использование режима на BSD системах. Там нет фильтра &lt;code&gt;connbytes&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;На linux системах при использовании nfqws и фильтра connbytes может понадобиться : &lt;code&gt;sysctl net.netfilter.nf_conntrack_tcp_be_liberal=1&lt;/code&gt; Было замечено, что некоторые DPI в России возвращают RST с неверным ACK. Это принимается tcp/ip стеком linux, но через раз приобретает статус INVALID в conntrack. Поэтому правила с &lt;code&gt;connbytes&lt;/code&gt; срабатывают через раз, не пересылая RST пакет &lt;strong&gt;nfqws&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Как вообще могут вести себя DPI, получив &quot;плохой запрос&quot; и приняв решение о блокировке:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Зависание: просто отмораживается, блокируя прохождение пакетов по TCP каналу.&lt;/li&gt; 
 &lt;li&gt;RST: отправляет RST клиенту и/или серверу&lt;/li&gt; 
 &lt;li&gt;Редирект: (только для http) отправляет редирект на сайт-заглушку&lt;/li&gt; 
 &lt;li&gt;Подмена сертификата: (только для https) полный перехват TLS сеанса с попыткой всунуть что-то свое клиенту. Применяется нечасто, поскольку броузеры на такое ругаются.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;nfqws&lt;/strong&gt; и &lt;strong&gt;tpws&lt;/strong&gt; могут сечь варианты 1-3, 4 они не распознают. В силу специфики работы с отдельными пакетами или с TCP каналом tpws и nfqws распознают эти ситуации по-разному. Что считается ситуацией, похожей на блокировку :&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;nfqws&lt;/strong&gt; Несколько ретрансмиссий первого запроса в TCP сеансе, в котором имеется host.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;nfqws,tpws&lt;/strong&gt; RST, пришедший в ответ на первый запрос с хостом.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;nfqws,tpws&lt;/strong&gt; HTTP редирект, пришедший в ответ на первый запрос с хостом, на глобальный адрес с доменом 2 уровня, не совпадающим с доменом 2 уровня оригинального запроса.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;tpws&lt;/strong&gt; закрытие соединения клиентом после отправки первого запроса с хостом, если не было на него ответа со стороны сервера. Это обычно случается по таймауту, когда нет ответа (случай &quot;зависание&quot;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Чтобы снизить вероятность ложных срабатываний, имеется счетчик ситуаций, похожих на блокировку. Если за определенное время произойдет более определенного их количества, хост считается заблокированным и заносится в &lt;code&gt;autohostlist&lt;/code&gt;. По нему сразу же начинает работать стратегия по обходу блокировки. Если в процессе счета вебсайт отвечает без признаков блокировки, счетчик сбрасывается. Вероятно, это был временный сбой сайта.&lt;/p&gt; 
&lt;p&gt;На практике работа с данным режимом выглядит так. Первый раз пользователь заходит на сайт и получает заглушку, сброс соединения или броузер подвисает, вываливаясь по таймауту с сообщением о невозможности загрузить страницу. Надо долбить F5, принуждая броузер повторять попытки. После некоторой попытки сайт начинает работать, и дальше он будет работать всегда.&lt;/p&gt; 
&lt;p&gt;С этим режимом можно использовать техники обхода, ломающие значительное количество сайтов. Если сайт не ведет себя как заблокированный, значит обход применен не будет. В противном случае терять все равно нечего. Однако, могут быть временные сбои сервера, приводящие к ситуации, аналогичной блокировке. Могут происходить ложные срабатывания. Если такое произошло, стратегия может начать ломать незаблокированный сайт. Эту ситуацию, увы, придется вам контролировать вручную. Заносите такие домены в &lt;code&gt;ipset/zapret-hosts-user-exclude.txt&lt;/code&gt;, чтобы избежать повторения. Чтобы впоследствии разобраться почему домен был занесен в лист, можно включить &lt;code&gt;autohostlist debug log&lt;/code&gt;. Он полезен тем, что работает без постоянного просмотра вывода &lt;strong&gt;nfqws&lt;/strong&gt; в режиме debug. В лог заносятся только основные события, ведущие к занесению хоста в лист. По логу можно понять как избежать ложных срабатываний и подходит ли вообще вам этот режим.&lt;/p&gt; 
&lt;p&gt;Можно использовать один &lt;code&gt;autohostlist&lt;/code&gt; с множеством процессов. Все процессы проверяют время модификации файла. Если файл был изменен в другом процессе, происходит его перечитывание. Все процессы должны работать под одним uid, чтобы были права доступа на файл.&lt;/p&gt; 
&lt;p&gt;Скрипты &lt;code&gt;zapret&lt;/code&gt; ведут &lt;code&gt;autohostlist&lt;/code&gt; в &lt;code&gt;ipset/zapret-hosts-auto.txt&lt;/code&gt;. &lt;code&gt;install_easy.sh&lt;/code&gt; при апгрейде &lt;code&gt;zapret&lt;/code&gt; сохраняет этот файл. Режим &lt;code&gt;autohostlist&lt;/code&gt; включает в себя режим &lt;code&gt;hostlist&lt;/code&gt;. Можно вести &lt;code&gt;ipset/zapret-hosts-user.txt&lt;/code&gt;, &lt;code&gt;ipset/zapret-hosts-user-exclude.txt&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Проверка провайдера&lt;/h2&gt; 
&lt;p&gt;Перед настройкой нужно провести исследование какую бяку устроил вам ваш провайдер.&lt;/p&gt; 
&lt;p&gt;Нужно выяснить не подменяет ли он DNS и какой метод обхода DPI работает. В этом вам поможет скрипт &lt;code&gt;blockcheck.sh&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Если DNS подменяется, но провайдер не перехватывает обращения к сторонним DNS, поменяйте DNS на публичный. Например: 8.8.8.8, 8.8.4.4, 1.1.1.1, 1.0.0.1, 9.9.9.9 Если DNS подменяется и провайдер перехватывает обращения к сторонним DNS, настройте &lt;code&gt;dnscrypt&lt;/code&gt;. Еще один эффективный вариант - использовать ресолвер от yandex 77.88.8.88 на нестандартном порту 1253. Многие провайдеры не анализируют обращения к DNS на нестандартных портах. &lt;code&gt;blockcheck&lt;/code&gt; если видит подмену DNS автоматически переключается на DoH сервера.&lt;/p&gt; 
&lt;p&gt;Следует прогнать &lt;code&gt;blockcheck&lt;/code&gt; по нескольким заблокированным сайтам и выявить общий характер блокировок. Разные сайты могут быть заблокированы по-разному, нужно искать такую технику, которая работает на большинстве. Чтобы записать вывод &lt;code&gt;blockcheck.sh&lt;/code&gt; в файл, выполните: &lt;code&gt;./blockcheck.sh | tee /tmp/blockcheck.txt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Проанализируйте какие методы дурения DPI работают, в соответствии с ними настройте &lt;code&gt;/opt/zapret/config&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Имейте в виду, что у провайдеров может быть несколько DPI или запросы могут идти через разные каналы по методу балансировки нагрузки. Балансировка может означать, что на разных ветках разные DPI или они находятся на разных хопах. Такая ситуация может выражаться в нестабильности работы обхода. Дернули несколько раз curl. То работает, то connection reset или редирект. &lt;code&gt;blockcheck.sh&lt;/code&gt; выдает странноватые результаты. То split работает на 2-м. хопе, то на 4-м. Достоверность результата вызывает сомнения. В этом случае задайте несколько повторов одного и того же теста. Тест будет считаться успешным только, если все попытки пройдут успешно.&lt;/p&gt; 
&lt;p&gt;При использовании &lt;code&gt;autottl&lt;/code&gt; следует протестировать как можно больше разных доменов. Эта техника может на одних провайдерах работать стабильно, на других потребуется выяснить при каких параметрах она стабильна, на третьих полный хаос, и проще отказаться.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Blockcheck&lt;/code&gt; имеет 3 уровня сканирования.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;quick&lt;/code&gt; - максимально быстро найти хоть что-то работающее.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;standard&lt;/code&gt; дает возможность провести исследование как и на что реагирует DPI в плане методов обхода.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;force&lt;/code&gt; дает максимум проверок даже в случаях, когда ресурс работает без обхода или с более простыми стратегиями.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Есть ряд других параметров, которые не будут спрашиваться в диалоге, но которые можно переопределить через переменные.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CURL - замена программы curl
CURL_MAX_TIME - время таймаута curl в секундах
CURL_MAX_TIME_QUIC - время таймаута curl для quic. если не задано, используется значение CURL_MAX_TIME
CURL_MAX_TIME_DOH - время таймаута curl для DoH серверов
CURL_CMD=1 - показывать команды curl
CURL_OPT - дополнительные параметры curl. `-k` - игнор сертификатов. `-v` - подробный вывод протокола
DOMAINS - список тестируемых доменов через пробел
IPVS=4|6|46 - тестируемые версии ip протокола
ENABLE_HTTP=0|1 - включить тест plain http
ENABLE_HTTPS_TLS12=0|1 - включить тест https TLS 1.2
ENABLE_HTTPS_TLS13=0|1 - включить тест https TLS 1.3
ENABLE_HTTP3=0|1 - включить тест QUIC
REPEATS - количество попыток тестирования
PARALLEL=0|1 - включить параллельные попытки. может обидеть сайт из-за долбежки и привести к неверному результату
SCANLEVEL=quick|standard|force - уровень сканирования
BATCH=1 - пакетный режим без вопросов и ожидания ввода в консоли
HTTP_PORT, HTTPS_PORT, QUIC_PORT - номера портов для соответствующих протоколов
SKIP_DNSCHECK=1 - отказ от проверки DNS
SKIP_IPBLOCK=1 - отказ от тестов блокировки по порту или IP
SKIP_TPWS=1 - отказ от тестов tpws
SKIP_PKTWS=1 - отказ от тестов nfqws/dvtws/winws
PKTWS_EXTRA, TPWS_EXTRA - дополнительные параметры nfqws/dvtws/winws и tpws, указываемые после основной стратегии
PKTWS_EXTRA_1 .. PKTWS_EXTRA_9, TPWS_EXTRA_1 .. TPWS_EXTRA_9 - отдельно дополнительные параметры, содержащие пробелы
PKTWS_EXTRA_PRE - дополнительные параметры для nfqws/dvtws/winws, указываемые перед основной стратегией
PKTWS_EXTRA_PRE_1 .. PKTWS_EXTRA_PRE_9 - отдельно дополнительные параметры, содержащие пробелы
SECURE_DNS=0|1 - принудительно выключить или включить DoH
DOH_SERVERS - список URL DoH через пробел для автоматического выбора работающего сервера
DOH_SERVER - конкретный DoH URL, отказ от поиска
UNBLOCKED_DOM - незаблокированный домен, который используется для тестов IP block
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Пример запуска с переменными:&lt;br /&gt; &lt;code&gt;SECURE_DNS=1 SKIP_TPWS=1 CURL_MAX_TIME=1 CURL=/tmp/curl ./blockcheck.sh&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;СКАН ПОРТОВ&lt;/strong&gt;&lt;br /&gt; Если в системе присутствует совместимый &lt;code&gt;netcat&lt;/code&gt; (ncat от nmap или openbsd ncat. в OpenWrt по умолчанию нет), то выполняется сканирование портов http или https всех IP адресов домена. Если ни один IP не отвечает, то результат очевиден. Можно останавливать сканирование. Автоматически оно не остановится, потому что netcat-ы недостаточно подробно информируют о причинах ошибки. Если доступна только часть IP, то можно ожидать хаотичных сбоев, т.к. подключение идет к случайному адресу из списка.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ПРОВЕРКА НА ЧАСТИЧНЫЙ IP block&lt;/strong&gt;&lt;br /&gt; Под частичным блоком подразумевается ситуация, когда коннект на порты есть, но по определенному транспортному или прикладному протоколу всегда идет реакция DPI вне зависимости от запрашиваемого домена. Эта проверка так же не выдаст автоматического вердикта/решения, потому что может быть очень много вариаций. Вместо этого анализ происходящего возложен на самого пользователя или тех, кто будет читать лог. Суть этой проверки в попытке дернуть неблокированный IP с блокированным доменом и наоборот, анализируя при этом реакцию DPI. Реакция DPI обычно проявляется в виде таймаута (зависание запроса), connection reset или http redirect на заглушку. Любой другой вариант скорее всего говорит об отсутствии реакции DPI. В частности, любые http коды, кроме редиректа, ведущего именно на заглушку, а не куда-то еще. На TLS - ошибки handshake без задержек. Ошибка сертификата может говорить как о реакции DPI с MiTM атакой (подмена сертификата), так и о том, что принимающий сервер неблокированного домена все равно принимает ваш TLS &lt;code&gt;handshake&lt;/code&gt; с чужим доменом, пытаясь при этом выдать сертификат без запрошенного домена. Требуется дополнительный анализ. Если на заблокированный домен есть реакция на всех IP адресах, значит есть блокировка по домену. Если на неблокированный домен есть реакция на IP адресах блокированного домена, значит имеет место блок по IP. Соответственно, если есть и то, и другое, значит есть и блок по IP, и блок по домену. Неблокированный домен первым делом проверяется на доступность на оригинальном адресе. При недоступности тест отменяется, поскольку он будет неинформативен.&lt;/p&gt; 
&lt;p&gt;Если выяснено, что есть частичный блок по IP на DPI, то скорее всего все остальные тесты будут провалены вне зависимости от стратегий обхода. Но бывают и некоторые исключения. Например, пробитие через &lt;code&gt;ipv6 option headers&lt;/code&gt;. Или сделать так, чтобы он не мог распознать протокол прикладного уровня. Дальнейшие тесты могут быть не лишены смысла.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ПРИМЕРЫ БЛОКИРОВКИ ТОЛЬКО ПО ДОМЕНУ БЕЗ БЛОКА ПО IP&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; testing iana.org on it&#39;s original
!!!!! AVAILABLE !!!!!
&amp;gt; testing rutracker.org on 192.0.43.8 (iana.org)
curl: (28) Operation timed out after 1002 milliseconds with 0 bytes received
&amp;gt; testing iana.org on 172.67.182.196 (rutracker.org)
HTTP/1.1 409 Conflict
&amp;gt; testing iana.org on 104.21.32.39 (rutracker.org)
HTTP/1.1 409 Conflict

&amp;gt; testing iana.org on it&#39;s original ip
!!!!! AVAILABLE !!!!!
&amp;gt; testing rutracker.org on 192.0.43.8 (iana.org)
curl: (28) Connection timed out after 1001 milliseconds
&amp;gt; testing iana.org on 172.67.182.196 (rutracker.org)
curl: (35) OpenSSL/3.2.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
&amp;gt; testing iana.org on 104.21.32.39 (rutracker.org)
curl: (35) OpenSSL/3.2.1: error:0A000410:SSL routines::ssl/tls alert handshake failure

&amp;gt; testing iana.org on it&#39;s original ip
!!!!! AVAILABLE !!!!!
&amp;gt; testing rutracker.org on 192.0.43.8 (iana.org)
HTTP/1.1 307 Temporary Redirect
Location: https://www.gblnet.net/blocked.php
&amp;gt; testing iana.org on 172.67.182.196 (rutracker.org)
HTTP/1.1 409 Conflict
&amp;gt; testing iana.org on 104.21.32.39 (rutracker.org)
HTTP/1.1 409 Conflict

&amp;gt; testing iana.org on it&#39;s original ip
!!!!! AVAILABLE !!!!!
&amp;gt; testing rutracker.org on 192.0.43.8 (iana.org)
curl: (35) Recv failure: Connection reset by peer
&amp;gt; testing iana.org on 172.67.182.196 (rutracker.org)
curl: (35) OpenSSL/3.2.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
&amp;gt; testing iana.org on 104.21.32.39 (rutracker.org)
curl: (35) OpenSSL/3.2.1: error:0A000410:SSL routines::ssl/tls alert handshake failure
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ПРИМЕР ПОЛНОГО IP БЛОКА ИЛИ БЛОКА TCP ПОРТА ПРИ ОТСУТСТВИИ БЛОКА ПО ДОМЕНУ&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;* port block tests ipv4 startmail.com:80
  ncat -z -w 1 145.131.90.136 80
  145.131.90.136 does not connect. netcat code 1
  ncat -z -w 1 145.131.90.152 80
  145.131.90.152 does not connect. netcat code 1

* curl_test_http ipv4 startmail.com
- checking without DPI bypass
  curl: (28) Connection timed out after 2002 milliseconds
  UNAVAILABLE code=28

- IP block tests (requires manual interpretation)

&amp;gt; testing iana.org on it&#39;s original ip
!!!!! AVAILABLE !!!!!
&amp;gt; testing startmail.com on 192.0.43.8 (iana.org)
HTTP/1.1 302 Found
Location: https://www.iana.org/
&amp;gt; testing iana.org on 145.131.90.136 (startmail.com)
curl: (28) Connection timed out after 2002 milliseconds
&amp;gt; testing iana.org on 145.131.90.152 (startmail.com)
curl: (28) Connection timed out after 2002 milliseconds
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Выбор параметров&lt;/h2&gt; 
&lt;p&gt;Файл &lt;code&gt;/opt/zapret/config&lt;/code&gt; используется различными компонентами системы и содержит основные настройки. Его нужно просмотреть и при необходимости отредактировать.&lt;/p&gt; 
&lt;p&gt;На linux системах можно выбрать использовать &lt;code&gt;iptables&lt;/code&gt; или &lt;code&gt;nftables&lt;/code&gt;. По умолчанию на традиционных linux выбирается &lt;code&gt;nftables&lt;/code&gt;, если установлен nft. На OpenWrt по умолчанию выбирается &lt;code&gt;nftables&lt;/code&gt; на новых версиях с firewall4.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;FWTYPE=iptables&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;На &lt;code&gt;nftables&lt;/code&gt; можно отключить стандартную схему перехвата трафика после NAT и перейти на перехват до NAT. Это сделает невозможным применение некоторых методов дурения на проходящем трафике как в случае с &lt;code&gt;iptables&lt;/code&gt;. nfqws начнет получать адреса пакетов из локальной сети и отображать их в логах.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;POSTNAT=0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Существует 3 стандартных опции запуска, настраиваемых раздельно и независимо: &lt;code&gt;tpws-socks&lt;/code&gt;, &lt;strong&gt;tpws&lt;/strong&gt;, &lt;strong&gt;nfqws&lt;/strong&gt;. Их можно использовать как по отдельности, так и вместе. Например, вам надо сделать комбинацию из методов, доступных только в &lt;strong&gt;tpws&lt;/strong&gt; и только в &lt;strong&gt;nfqws&lt;/strong&gt;. Их можно задействовать вместе. &lt;strong&gt;tpws&lt;/strong&gt; будет прозрачно локализовывать трафик на системе и применять свое дурение, &lt;strong&gt;nfqws&lt;/strong&gt; будет дурить трафик, исходящий с самой системы после обработки на &lt;strong&gt;tpws&lt;/strong&gt;. А можно на эту же систему повесить без параметров socks proxy, чтобы получать доступ к обходу блокировок через прокси. Таким образом, все 3 режима вполне могут задействоваться вместе. Так же безусловно и независимо, в добавок к стандартным опциям, применяются все custom скрипты в &lt;code&gt;init.d/{sysv,openwrt,macos}/custom.d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Однако, при комбинировании tpws и nfqws с пересечением по L3/L4 протоколам не все так просто , как может показаться на первый взгляд. Первым всегда работает tpws, за ним - nfqws. На nfqws попадает уже &quot;задуренный&quot; трафик от tpws. Получается, что дурилка дурит дурилку, и дурилка не срабатывает, потому что ее задурили. Вот такой веселый момент. nfqws перестает распознавать протоколы и применять методы. Некоторые методы дурения от tpws nfqws в состоянии распознать и отработать корректно, но большинство - нет. Решение - использование &lt;code&gt;--dpi-desync-any-protocol&lt;/code&gt; в nfqws и работа как с неизвестным протоколом. Комбинирование tpws и nfqws является продвинутым вариантом, требующим глубокого понимания происходящего. Очень желательно проанализировать действия nfqws по &lt;code&gt;--debug&lt;/code&gt; логу. Все ли так, как вы задумали.&lt;/p&gt; 
&lt;p&gt;Одновременное использование tpws и nfqws без пересечения по L3/L4 (то есть nfqws - udp, tpws - tcp или nfqws - port 443, tpws - port 80 или nfqws - ipv4, tpws - ipv6) проблем не представляет.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;tpws-socks&lt;/code&gt; требует настройки параметров &lt;strong&gt;tpws&lt;/strong&gt;, но не требует перехвата трафика. Остальные опции требуют раздельно настройки перехвата трафика и опции самих демонов. Каждая опция предполагает запуск одного инстанса соответствующего демона. Все различия методов дурения для &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;, &lt;code&gt;quic&lt;/code&gt; и т.д. должны быть отражены через схему мультистратегий. В этом смысле настройка похожа на вариант &lt;code&gt;winws&lt;/code&gt; на Windows, а перенос конфигов не должен представлять больших сложностей.&lt;/p&gt; 
&lt;p&gt;Основное правило настройки перехвата - перехватывайте только необходимый минимум. Любой перехват лишнего - это бессмысленная нагрузка на вашу систему. Опции демонов &lt;code&gt;--ipset&lt;/code&gt; использовать нужно с умом. Не стоит перехватывать весь трафик, чтобы потом по параметру --ipset выделить лишь горстку IP. Это будет работать, но очень неэффективно с точки зрения нагрузки на систему. Используйте &lt;code&gt;ipset&lt;/code&gt;-ы режима ядра. При необходимости пишите и задействуйте &lt;code&gt;custom scripts&lt;/code&gt;. Но если у вас и так идет работа по всем IP, и нужно написать небольшую специализацию по IP, то --ipset вполне уместен.&lt;/p&gt; 
&lt;p&gt;Настройки демонов можно для удобства писать на нескольких строках, используя двойные или одинарные кавычки. Чтобы задействовать стандартные обновляемые хост-листы из каталога &lt;code&gt;ipset&lt;/code&gt;, используйте маркер 
 &lt;hostlist&gt;
  . Он будет заменен на параметры, соответствующие режиму MODE_FILTER, и будут подставлены реально существующие файлы. Если MODE_FILTER не предполагает стандартного хостлиста, 
  &lt;hostlist&gt;
    будет заменен на пустую строку. Стандартные хостлисты следует вставлять в финальных стратегиях (стратегиях по умолчанию), закрывающих цепочки по группе параметров фильтра. Таких мест может быть несколько. Не нужно использовать 
   &lt;hostlist&gt;
     в узких специализациях и в тех профилях, по которым точно не будет проходить трафик с известными протоколами, откуда поддерживается извлечение имени хоста (
    &lt;code&gt;http&lt;/code&gt;, 
    &lt;code&gt;tls&lt;/code&gt;, 
    &lt;code&gt;quic&lt;/code&gt;). &amp;lt;HOSTLIST_NOAUTO&amp;gt; - это вариация, при которой стандартный автолист используется как обычный. То есть на этом профиле не происходит автоматическое добавление заблокированных доменов. Но если на другом профиле что-то будет добавлено, то этот профиль примет изменения автоматически.
   &lt;/hostlist&gt;
  &lt;/hostlist&gt;
 &lt;/hostlist&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Изменение бита mark для предотвращения зацикливания&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;DESYNC_MARK=0x40000000&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Изменение бита mark для пометки пакетов, проходящих по POSTNAT схеме (только nftables)&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;DESYNC_MARK_POSTNAT=0x20000000&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Если раскоментировано, пометка пакетов, которые должны быть обработаны zapret.&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;#FILTER_MARK_POSTNAT=0x10000000&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Бит должен быть установлен вашими собственными правилами.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Для iptables - в цепочках mangle PREROUTING и mangle OUTPUT перед правилами zapret (iptables -I &lt;em&gt;после&lt;/em&gt; применения правил zapret).&lt;/li&gt; 
 &lt;li&gt;Для nftables - в хуках output и prerouting с приоритетом -102 или ниже.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Критерии пометки любые. Например, IP адрес или интерфейс источника. Это ответ на вопрос &quot;как мне сделать, чтобы телик не ходил через zapret или чтобы через него ходил только мой комп&quot;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Включение стандартной опции tpws в режиме socks&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;TPWS_SOCKS_ENABLE=0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;На каком порту будет слушать tpws socks. прослушивается только localhost и LAN&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;TPPORT_SOCKS=987&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Параметры tpws для режима socks&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TPWS_SOCKS_OPT=&quot;
--filter-tcp=80 --methodeol &amp;lt;HOSTLIST&amp;gt; --new
--filter-tcp=443 --split-pos=1,midsld --disorder &amp;lt;HOSTLIST&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Включение стандартной опции tpws в прозрачном режиме&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;TPWS_ENABLE=0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Какие tcp порты следует перенаправлять на tpws&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;TPWS_PORTS=80,443&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Параметры tpws для прозрачного режима&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TPWS_OPT=&quot;
--filter-tcp=80 --methodeol &amp;lt;HOSTLIST&amp;gt; --new
--filter-tcp=443 --split-pos=1,midsld --disorder &amp;lt;HOSTLIST&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Включение стандартной опции nfqws&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; &lt;code&gt;NFQWS_ENABLE=0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Какие tcp и udp порты следует перенаправлять на nfqws с использованием connbytes ограничителя&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;connbytes позволяет из каждого соединения перенаправить только заданное количество начальных пакетов по каждому направлению - на вход и на выход. Это более эффективная kernel-mode замена параметра nfqws &lt;code&gt;--dpi-desync-cutoff=nX&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NFQWS_PORTS_TCP=80,443
NFQWS_PORTS_UDP=443
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Сколько начальных входящих и исходящих пакетов нужно перенаправлять на nfqws по каждому направлению&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NFQWS_TCP_PKT_OUT=$((6+$AUTOHOSTLIST_RETRANS_THRESHOLD))
NFQWS_TCP_PKT_IN=3
NFQWS_UDP_PKT_OUT=$((6+$AUTOHOSTLIST_RETRANS_THRESHOLD))
NFQWS_UDP_PKT_IN=0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Задать порты для перенаправления на nfqws без connbytes ограничителя&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt; Есть трафик, исходящий сеанс для которого необходимо перенаправлять весь без ограничителей. Типичное применение - поддержка http keepalives на stateless DPI. Это существенно нагружает процессор. Использовать только если понимаете зачем. Чаще всего это не нужно. Входящий трафик ограничивается по connbytes через параметры PKT_IN. Если указываете здесь какие-то порты, желательно их убрать из версии с connbytes ограничителем&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NFQWS_PORTS_TCP_KEEPALIVE=80
NFQWS_PORTS_UDP_KEEPALIVE=
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Параметры nfqws&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NFQWS_OPT=&quot;
--filter-tcp=80 --dpi-desync=fake,multisplit --dpi-desync-split-pos=method+2 --dpi-desync-fooling=md5sig &amp;lt;HOSTLIST&amp;gt; --new
--filter-tcp=443 --dpi-desync=fake,multidisorder --dpi-desync-split-pos=1,midsld --dpi-desync-fooling=badseq,md5sig &amp;lt;HOSTLIST&amp;gt; --new
--filter-udp=443 --dpi-desync=fake --dpi-desync-repeats=6 &amp;lt;HOSTLIST_NOAUTO&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Режим фильтрации хостов:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;none - применять дурение ко всем хостам
ipset - ограничить дурение ipset-ом zapret/zapret6
hostlist - ограничить дурение списком хостов из файла
autohostlist - режим hostlist + распознавание блокировок и ведение автоматического листа
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;MODE_FILTER=none&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Настройка системы управления выборочным traffic offload (только если поддерживается)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;donttouch: выборочное управление отключено, используется системная настройка, простой инсталлятор выключает системную настройку, если она не совместима с выбранным режимом
none: выборочное управление отключено, простой инсталлятор выключает системную настройку
software: выборочное управление включено в режиме software, простой инсталлятор выключает системную настройку
hardware: выборочное управление включено в режиме hardware, простой инсталлятор выключает системную настройку
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;FLOWOFFLOAD=donttouch&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Параметр &lt;code&gt;GETLIST&lt;/code&gt; указывает инсталлятору &lt;code&gt;install_easy.sh&lt;/code&gt; какой скрипт дергать для обновления списка заблокированных ip или хостов. Он же вызывается через &lt;code&gt;get_config.sh&lt;/code&gt; из запланированных заданий (crontab или systemd timer). Поместите сюда название скрипта, который будете использовать для обновления листов. Если не нужно, то параметр следует закомментировать.&lt;/p&gt; 
&lt;p&gt;Можно индивидуально отключить ipv4 или ipv6. Если параметр закомментирован или не равен &quot;1&quot;, использование протокола разрешено.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DISABLE_IPV4=1
DISABLE_IPV6=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Количество потоков для многопоточного DNS ресолвера mdig (1..100). Чем их больше, тем быстрее, но не обидится ли на долбежку ваш DNS сервер?&lt;br /&gt; &lt;code&gt;MDIG_THREADS=30&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Место для хранения временных файлов. При скачивании огромных реестров в &lt;code&gt;/tmp&lt;/code&gt; места может не хватить. Если файловая система на нормальном носителе (не встроенная память роутера), то можно указать место на флэшке или диске. &lt;code&gt;TMPDIR=/opt/zapret/tmp&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Опции для создания ipset-ов и nfset-ов&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;SET_MAXELEM=262144
IPSET_OPT=&quot;hashsize 262144 maxelem 2097152&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Хук, позволяющий внести ip адреса динамически. $1 = имя таблицы&lt;br /&gt; Адреса выводятся в stdout. В случае nfset автоматически решается проблема возможного пересечения интервалов.&lt;br /&gt; &lt;code&gt;IPSET_HOOK=&quot;/etc/zapret.ipset.hook&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;ПРО РУГАНЬ в dmesg по поводу нехватки памяти.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Может так случиться, что памяти в системе достаточно, но при попытке заполнить огромный &lt;code&gt;ipset&lt;/code&gt; ядро начинает громко ругаться, &lt;code&gt;ipset&lt;/code&gt; заполняется не полностью.&lt;br /&gt; Вероятная причина в том, что превышается &lt;code&gt;hashsize&lt;/code&gt;, заданный при создании &lt;code&gt;ipset&lt;/code&gt; (create_ipset.sh). Происходит переаллокация списка, не находится непрерывных фрагментов памяти нужной длины. Это лечится увеличением &lt;code&gt;hashsize&lt;/code&gt;. Но чем больше &lt;code&gt;hashsize&lt;/code&gt;, тем больше занимает &lt;code&gt;ipset&lt;/code&gt; в памяти. Задавать слишком большой &lt;code&gt;hashsize&lt;/code&gt; для недостаточно больших списков нецелесообразно.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Опции для вызова ip2net. Отдельно для листов ipv4 и ipv6.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IP2NET_OPT4=&quot;--prefix-length=22-30 --v4-threshold=3/4&quot;
IP2NET_OPT6=&quot;--prefix-length=56-64 --v6-threshold=5&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Настройка режима autohostlist.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;При увеличении AUTOHOSTLIST_RETRANS_THRESHOLD и использовании nfqws следует пересмотреть значения параметров NFQWS_TCP_PKT_OUT и NFQWS_UDP_PKT_OUT. Все ретрансмиссии должны быть получены nfqws, иначе триггер &quot;зависание запроса&quot; не сработает.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;AUTOHOSTLIST_RETRANS_THRESHOLD=3
AUTOHOSTLIST_FAIL_THRESHOLD=3
AUTOHOSTLIST_FAIL_TIME=60
AUTOHOSTLIST_DEBUG=0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Включить или выключить сжатие больших листов в скриптах ipset/*.sh.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;GZIP_LISTS=1&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Команда для перезагрузки ip таблиц фаервола.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Если не указано или пустое, выбирается автоматически ipset или ipfw при их наличии. На BSD системах с PF нет автоматической загрузки. Там нужно указать команду явно: &lt;code&gt;pfctl -f /etc/pf.conf&lt;/code&gt; На более новых pfctl (есть в новых FreeBSD, нет в OpenBSD 6.8) можно дать команду загрузки только таблиц: &lt;code&gt;pfctl -Tl -f /etc/pf.conf&lt;/code&gt; &quot;-&quot; означает отключение загрузки листов даже при наличии поддерживаемого backend.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;LISTS_RELOAD=&quot;pfctl -f /etc/pf.conf&quot;
LISTS_RELOAD=-
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;В OpenWrt существует сеть по умолчанию &#39;lan&#39;. Только трафик с этой сети будет перенаправлен на tpws. Но возможно задать другие сети или список сетей:&lt;br /&gt; &lt;code&gt;OPENWRT_LAN=&quot;lan lan2 lan3&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;В OpenWrt в качестве wan берутся интерфейсы, имеющие default route. Отдельно для ipv4 и ipv6. Это можно переопределить:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;OPENWRT_WAN4=&quot;wan4 vpn&quot;
OPENWRT_WAN6=&quot;wan6 vpn6&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Параметр &lt;code&gt;INIT_APPLY_FW=1&lt;/code&gt; разрешает init скрипту самостоятельно применять правила iptables.&lt;br /&gt; При иных значениях или если параметр закомментирован, правила применены не будут.&lt;br /&gt; Это полезно, если у вас есть система управления фаерволом, в настройки которой и следует прикрутить правила.&lt;br /&gt; На OpenWrt неприменимо при использовании firewall3+iptables.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;FILTER_TTL_EXPIRED_ICMP=1&lt;/code&gt; включает механизмы блокировки пакетов icmp time exceeded, высылаемые роутерами по пути следования пакета в ответ на исчерпание TTL/HL. В linux соединение обрывается системой, если в ответ на первый пакет (для tcp - SYN) пришел такой icmp. Аналогичная схема имеется и в datagram сокетах. Блокировка icmp идет исключительно за счет средств iptables/nftables. Чтобы не трогать весь трафик, в режиме PRENAT используется connmark для пометки сеансов, над которыми поработал nfqws. В режиме POSTNAT так сделать нельзя, поэтому помечаются все сеансы, заворачиваемые на nfqws. Настройку лучше отключить, если вы не ожидаете проблем от icmp, тк в этом случае будет меньше ненужных вмешательств в трафик.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Следующие настройки не актуальны для openwrt:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Если ваша система работает как роутер, то нужно вписать названия внутренних и внешних интерфейсов:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IFACE_LAN=eth0
IFACE_WAN=eth1
IFACE_WAN6=&quot;henet ipsec0&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Несколько интерфейсов могут быть вписаны через пробел. Если IFACE_WAN6 не задан, то берется значение IFACE_WAN.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Настройка маршрутизации, маскарада и т.д. не входит в задачу zapret. Включаются только режимы, обеспечивающие перехват транзитного трафика. Возможно определить несколько интерфейсов следующим образом:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;IFACE_LAN=&quot;eth0 eth1 eth2&quot;&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Прикручивание к системе управления фаерволом или своей системе запуска&lt;/h2&gt; 
&lt;p&gt;Если вы используете какую-то систему управления фаерволом, то она может вступать в конфликт с имеющимся скриптом запуска. При повторном применении правил она могла бы поломать настройки iptables от zapret. В этом случае правила для iptables должны быть прикручены к вашему фаерволу отдельно от запуска tpws или nfqws.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Следующие вызовы позволяют применить или убрать правила iptables отдельно:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/opt/zapret/init.d/sysv/zapret start_fw
/opt/zapret/init.d/sysv/zapret stop_fw
/opt/zapret/init.d/sysv/zapret restart_fw
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;А так можно запустить или остановить демоны отдельно от фаервола:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/opt/zapret/init.d/sysv/zapret start_daemons
/opt/zapret/init.d/sysv/zapret stop_daemons
/opt/zapret/init.d/sysv/zapret restart_daemons
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nftables&lt;/code&gt; сводят практически на нет конфликты между разными системами управления, поскольку позволяют использовать независимые таблицы и хуки. Используется отдельная nf-таблица &quot;zapret&quot;. Если ваша система ее не будет трогать, скорее всего все будет нормально.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Для &lt;code&gt;nftables&lt;/code&gt; предусмотрено несколько дополнительных вызовов:&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Посмотреть set-ы интерфейсов, относящихся к lan, wan и wan6. По ним идет завертывание трафика. А так же таблицу flow table с именами интерфейсов ingress hook.&lt;br /&gt; &lt;code&gt;/opt/zapret/init.d/sysv/zapret list_ifsets&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Обновить set-ы интерфейсов, относящихся к lan, wan и wan6. Для традиционных linux список интерфейсов берется из переменных конфига IFACE_LAN, IFACE_WAN. Для OpenWrt определяется автоматически. Множество lanif может быть расширено параметром OPENWRT_LAN. Все интерфейсы lan и wan так же добавляются в ingress hook от flow table.&lt;br /&gt; &lt;code&gt;/opt/zapret/init.d/sysv/zapret reload_ifsets&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Просмотр таблицы без содержимого set-ов. Вызывает &lt;code&gt;nft -t list table inet zapret&lt;/code&gt;&lt;br /&gt; &lt;code&gt;/opt/zapret/init.d/sysv/zapret list_table&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Так же возможно прицепиться своим скриптом к любой стадии применения и снятия фаервола со стороны zapret скриптов:&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;INIT_FW_PRE_UP_HOOK=&quot;/etc/firewall.zapret.hook.pre_up&quot;
INIT_FW_POST_UP_HOOK=&quot;/etc/firewall.zapret.hook.post_up&quot;
INIT_FW_PRE_DOWN_HOOK=&quot;/etc/firewall.zapret.hook.pre_down&quot;
INIT_FW_POST_DOWN_HOOK=&quot;/etc/firewall.zapret.hook.post_down&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Эти настройки доступны в config. Может быть полезно, если вам нужно использовать nftables set-ы, например &lt;code&gt;ipban&lt;/code&gt;/&lt;code&gt;ipban6&lt;/code&gt;. nfset-ы принадлежат только одной таблице, следовательно вам придется писать правила для таблицы zapret, а значит нужно синхронизироваться с применением/снятием правил со стороны zapret скриптов.&lt;/p&gt; 
&lt;h2&gt;Вариант custom&lt;/h2&gt; 
&lt;p&gt;custom скрипты - это маленькие shell программы, управляющие нестандартными режимами применения zapret или частными случаями, которые не могут быть интегрированы в основную часть без загромождения и замусоривания кода. Для применения custom следует помещать файлы в следующие директории в зависимости от вашей системы:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/opt/zapret/init.d/sysv/custom.d
/opt/zapret/init.d/openwrt/custom.d
/opt/zapret/init.d/macos/custom.d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Директория будет просканирована в алфавитном порядке, и каждый скрипт будет применен.&lt;/p&gt; 
&lt;p&gt;В &lt;code&gt;init.d&lt;/code&gt; имеется &lt;code&gt;custom.d.examples.linux&lt;/code&gt;, в &lt;code&gt;init.d/macos&lt;/code&gt; - &lt;code&gt;custom.d.examples&lt;/code&gt;. Это готовые скрипты, которые можно копировать в &lt;code&gt;custom.d&lt;/code&gt;. Их можно взять за основу для написания собственных.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Для linux пишется код в функции&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;zapret_custom_daemons
zapret_custom_firewall
zapret_custom_firewall_nft
zapret_custom_firewall_nft_flush
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Для macos&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;zapret_custom_daemons
zapret_custom_firewall_v4
zapret_custom_firewall_v6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;zapret_custom_daemons поднимает демоны &lt;strong&gt;nfqws&lt;/strong&gt;/&lt;strong&gt;tpws&lt;/strong&gt; в нужном вам количестве и с нужными вам параметрами. В первом параметре передается код операции: 1 = запуск, 0 = останов. Схема запуска демонов в OpenWrt отличается - используется procd. Поэтому логика останова отсутствует за ненадобностью, останов никогда не вызывается.&lt;/p&gt; 
&lt;p&gt;zapret_custom_firewall поднимает и убирает правила &lt;code&gt;iptables&lt;/code&gt;. В первом параметре передается код операции: 1 = запуск, 0 = останов.&lt;/p&gt; 
&lt;p&gt;zapret_custom_firewall_nft поднимает правила nftables. Логика останова отсутствует за ненадобностью. Стандартные цепочки zapret удаляются автоматически. Однако, sets и правила из ваших собственных цепочек не удаляются. Их нужно подчистить в zapret_custom_firewall_nft_flush. Если set-ов и собственных цепочек у вас нет, функцию можно не определять или оставить пустой.&lt;/p&gt; 
&lt;p&gt;Если вам не нужны iptables или nftables - можете не писать соответствующую функцию.&lt;/p&gt; 
&lt;p&gt;В linux можно использовать локальные переменные &lt;code&gt;FW_EXTRA_PRE&lt;/code&gt; и &lt;code&gt;FW_EXTRA_POST&lt;/code&gt;.&lt;br /&gt; &lt;code&gt;FW_EXTRA_PRE&lt;/code&gt; добавляет код к правилам ip/nf tables до кода, генерируемого функциями-хелперами.&lt;br /&gt; &lt;code&gt;FW_EXTRA_POST&lt;/code&gt; добавляет код после.&lt;/p&gt; 
&lt;p&gt;В linux функции-хелперы добавляют правило в начало цепочек, то есть перед уже имеющимися. Поэтому специализации должны идти после более общих вариантов. Для macos правило обратное. Там правила добавляются в конец. По этой же причине фаервол в Linux сначала применяется в стандартном режиме, потом custom, а в MacOS сначала custom, потом стандартный режим.&lt;/p&gt; 
&lt;p&gt;В macos firewall-функции ничего сами никуда не заносят. Их задача - лишь выдать текст в stdout, содержащий правила для pf-якоря. Остальное сделает обертка.&lt;/p&gt; 
&lt;p&gt;Особо обратите внимание на номер демона в функциях &lt;code&gt;run_daemon&lt;/code&gt; , &lt;code&gt;do_daemon&lt;/code&gt;, &lt;code&gt;do_tpws&lt;/code&gt;, &lt;code&gt;do_tpws_socks&lt;/code&gt;, &lt;code&gt;do_nfqws&lt;/code&gt; , номера портов &lt;strong&gt;tpws&lt;/strong&gt; и очередей &lt;strong&gt;nfqueue&lt;/strong&gt;. Они должны быть уникальными во всех скриптах. При накладке будет ошибка. Поэтому используйте функции динамического получения этих значений из пула.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;custom&lt;/code&gt; скрипты могут использовать переменные из &lt;code&gt;config&lt;/code&gt;. Можно помещать в &lt;code&gt;config&lt;/code&gt; свои переменные и задействовать их в скриптах. Можно использовать функции-хелперы. Они являются частью общего пространства функций shell. Полезные функции можно взять из примеров скриптов. Так же смотрите &lt;code&gt;common/*.sh&lt;/code&gt;. Используя хелпер функции, вы избавитесь от необходимости учитывать все возможные случаи типа наличия/отсутствия ipv6, является ли система роутером, имена интерфейсов, ...Хелперы это учитывают. Вам нужно сосредоточиться лишь на фильтрах &lt;code&gt;{ip,nf}tables&lt;/code&gt; и параметрах демонов.&lt;/p&gt; 
&lt;h2&gt;Простая установка&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;install_easy.sh&lt;/code&gt; автоматизирует ручные варианты процедур установки. Он поддерживает OpenWrt, linux системы на базе systemd или openrc и MacOS.&lt;/p&gt; 
&lt;p&gt;Для более гибкой настройки перед запуском инсталлятора следует выполнить раздел &quot;Выбор параметров&quot;.&lt;/p&gt; 
&lt;p&gt;Если система запуска поддерживается, но используется не поддерживаемый инсталлятором менеджер пакетов или названия пакетов не соответствуют прописанным в инсталлятор, пакеты нужно установить вручную. Всегда требуется curl. &lt;code&gt;ipset&lt;/code&gt; - только для режима &lt;code&gt;iptables&lt;/code&gt;, для &lt;code&gt;nftables&lt;/code&gt; - не нужен.&lt;/p&gt; 
&lt;p&gt;Для совсем обрезанных дистрибутивов (alpine) требуется отдельно установить &lt;code&gt;iptables&lt;/code&gt; и &lt;code&gt;ip6tables&lt;/code&gt;, либо &lt;code&gt;nftables&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;В комплекте идут статические бинарники для большинства архитектур. Какой-то из них подойдет с вероятностью 99%. Но если у вас экзотическая система, инсталлятор попробует собрать бинарники сам через make. Для этого нужны gcc, make и необходимые &lt;strong&gt;-dev&lt;/strong&gt; пакеты. Можно форсировать режим компиляции следующим вызовом:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;install_easy.sh make&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Под OpenWrt все уже сразу готово для использования системы в качестве роутера. Имена интерфейсов WAN и LAN известны из настроек системы. Под другими системами роутер вы настраиваете самостоятельно. Инсталлятор в это не вмешивается. Инсталлятор в зависимости от выбранного режима может спросить LAN и WAN интерфейсы. Нужно понимать, что заворот проходящего трафика на &lt;strong&gt;tpws&lt;/strong&gt; в прозрачном режиме происходит до выполнения маршрутизации, следовательно возможна фильтрация по LAN и невозможна по WAN. Решение о завороте на &lt;strong&gt;tpws&lt;/strong&gt; локального исходящего трафика принимается после выполнения маршрутизации, следовательно ситуация обратная: LAN не имеет смысла, фильтрация по WAN возможна. Заворот на &lt;strong&gt;nfqws&lt;/strong&gt; происходит всегда после маршрутизации, поэтому к нему применима только фильтрация по WAN. Возможность прохождения трафика в том или ином направлении настраивается вами в процессе конфигурации роутера.&lt;/p&gt; 
&lt;p&gt;Деинсталляция выполняется через &lt;code&gt;uninstall_easy.sh&lt;/code&gt;. После выполнения деинсталляции можно удалить каталог &lt;code&gt;/opt/zapret&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Установка под systemd&lt;/h2&gt; 
&lt;p&gt;Если вам нравится systemd и хочется максимально под него заточиться, можно отказаться от скриптов запуска zapret и поднимать инстансы &lt;code&gt;tpws&lt;/code&gt; и &lt;code&gt;nfqws&lt;/code&gt; как отдельные юниты systemd. При этом вам придется вручную написать правила iptables/nftables и каким-то образом их поднимать. Например, написать дополнительный systemd unit для этого. Так же требуется собрать бинарники особым образом через &lt;code&gt;make systemd&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;В комплекте zapret есть шаблоны &lt;code&gt;init.d/systemd/{nfqws@.service,tpws@.service}&lt;/code&gt;. Краткий перечень команд для их использования приведен в комментариях в этих файлах.&lt;/p&gt; 
&lt;h2&gt;Простая установка на openwrt&lt;/h2&gt; 
&lt;p&gt;Работает только если у вас на роутере достаточно места.&lt;/p&gt; 
&lt;p&gt;Копируем zapret на роутер в &lt;code&gt;/tmp&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Запускаем установщик:&lt;br /&gt; &lt;code&gt;sh /tmp/zapret/install_easy.sh&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Он скопирует в &lt;code&gt;/opt/zapret&lt;/code&gt; только необходимый минимум файлов.&lt;/p&gt; 
&lt;p&gt;После успешной установки можно удалить zapret из tmp для освобождения RAM:&lt;br /&gt; &lt;code&gt;rm -r /tmp/zapret&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Для более гибкой настройки перед запуском инсталлятора следует выполнить раздел &quot;Выбор параметров&quot;.&lt;/p&gt; 
&lt;p&gt;Система простой инсталяции заточена на любое умышленное или неумышленное изменение прав доступа на файлы. Устойчива к репаку под windows. После копирования в &lt;code&gt;/opt&lt;/code&gt; права будут принудительно восстановлены.&lt;/p&gt; 
&lt;h2&gt;Установка на openwrt в режиме острой нехватки места на диске&lt;/h2&gt; 
&lt;p&gt;Требуется около 120-200 кб на диске. Придется отказаться от всего, кроме &lt;strong&gt;tpws&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Инструкция для openwrt 22 и выше с nftables&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Никаких зависимостей устанавливать не нужно.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Установка:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Скопируйте все из &lt;code&gt;init.d/openwrt-minimal/tpws/*&lt;/code&gt; в корень openwrt.&lt;/li&gt; 
 &lt;li&gt;Скопируйте бинарник &lt;strong&gt;tpws&lt;/strong&gt; подходящей архитектуры в &lt;code&gt;/usr/bin/tpws&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Установите права на файлы: &lt;code&gt;chmod 755 /etc/init.d/tpws /usr/bin/tpws&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Отредактируйте &lt;code&gt;/etc/config/tpws&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Если не нужен ipv6, отредактируйте &lt;code&gt;/etc/nftables.d/90-tpws.nft&lt;/code&gt; и закомментируйте строки с редиректом ipv6.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws enable&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fw4 restart&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Полное удаление:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws disable&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws stop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rm -f /etc/nftables.d/90-tpws.nft /etc/firewall.user /etc/init.d/tpws /usr/bin/tpws&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fw4 restart&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Инструкция для openwrt 21 и ниже с iptables&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Установите зависимости:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;opkg update&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;opkg install iptables-mod-extra&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;только для IPV6: &lt;code&gt;opkg install ip6tables-mod-nat&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Убедитесь, что в &lt;code&gt;/etc/firewall.user&lt;/code&gt; нет ничего значимого. Если есть - не следуйте слепо инструкции. Объедините код или создайте свой &lt;code&gt;firewall include&lt;/code&gt; в &lt;code&gt;/etc/config/firewall&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Установка:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Скопируйте все из &lt;code&gt;init.d/openwrt-minimal/tpws/*&lt;/code&gt; в корень openwrt.&lt;/li&gt; 
 &lt;li&gt;Скопируйте бинарник &lt;strong&gt;tpws&lt;/strong&gt; подходящей архитектуры в &lt;code&gt;/usr/bin/tpws&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Установите права на файлы: &lt;code&gt;chmod 755 /etc/init.d/tpws /usr/bin/tpws&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Отредактируйте &lt;code&gt;/etc/config/tpws&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Если не нужен ipv6, отредактируйте /etc/firewall.user и установите там DISABLE_IPV6=1.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws enable&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fw3 restart&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Полное удаление:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws disable&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/init.d/tpws stop&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rm -f /etc/nftables.d/90-tpws.nft /etc/firewall.user /etc/init.d/tpws&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;touch /etc/firewall.user&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fw3 restart&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Android&lt;/h2&gt; 
&lt;p&gt;Без рута забудьте про nfqws и tpws в режиме transparent proxy. tpws будет работать только в режиме &lt;code&gt;--socks&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Ядра Android имеют поддержку NFQUEUE. nfqws работает.&lt;/p&gt; 
&lt;p&gt;В стоковых ядрах нет поддержки ipset. В общем случае сложность задачи по поднятию ipset варьируется от &quot;не просто&quot; до &quot;почти невозможно&quot;. Если только вы не найдете готовое собранное ядро под ваш девайс.&lt;/p&gt; 
&lt;p&gt;tpws будет работать в любом случае, он не требует чего-либо особенного.&lt;/p&gt; 
&lt;p&gt;Хотя linux варианты под Android работают, рекомендуется использовать специально собранные под bionic бинарники. У них не будет проблем с DNS, с локальным временем и именами юзеров и групп.&lt;br /&gt; Рекомендуется использовать gid 3003 (AID_INET). Иначе можете получить permission denied на создание сокета. Например: &lt;code&gt;--uid 1:3003&lt;/code&gt;&lt;br /&gt; В iptables укажите: &lt;code&gt;! --uid-owner 1&lt;/code&gt; вместо &lt;code&gt;! --uid-owner tpws&lt;/code&gt;.&lt;br /&gt; Напишите шелл скрипт с iptables и tpws, запускайте его средствами вашего рут менеджера. Скрипты автозапуска лежат тут:&lt;br /&gt; magisk : /data/adb/service.d&lt;br /&gt; supersu: /system/su.d&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;nfqws&lt;/strong&gt; может иметь такой глюк. При запуске с uid по умолчанию (0x7FFFFFFF) при условии работы на сотовом интерфейсе и отключенном кабеле внешнего питания система может частично виснуть. Перестает работать тач и кнопки, но анимация на экране может продолжаться. Если экран был погашен, то включить его кнопкой power невозможно. Изменение UID на низкий (--uid 1 подойдет) позволяет решить эту проблему. Глюк был замечен на android 8.1 на девайсе, основанном на платформе mediatek.&lt;/p&gt; 
&lt;p&gt;Ответ на вопрос куда поместить tpws на android без рута, чтобы потом его запускать из приложений. Файл заливаем через adb shell в /data/local/tmp/, лучше всего в субфолдер.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir /data/local/tmp/zapret
adb push tpws /data/local/tmp/zapret
chmod 755 /data/local/tmp/zapret /data/local/tmp/zapret/tpws
chcon u:object_r:system_file:s0 /data/local/tmp/zapret/tpws
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Как найти стратегию обхода сотового оператора: проще всего раздать инет на комп. Для этого подойдет любая поддерживаемая ОС. Подключите android через USB кабель к компу и включите режим модема. Прогоните стандартную процедуру blockcheck. При переносе правил на телефон уменьшить TTL на 1, если правила с TTL присутствуют в стратегии. Если проверялось на windows, убрать параметры &lt;code&gt;--wf-*&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Работа blockcheck в android shell не поддерживается, но имея рута можно развернуть rootfs какого-нибудь дистрибутива linux. Это лучше всего делать с компа через adb shell. Если компа нет, то развертка chroot - единственный вариант, хотя и неудобный. Подойдет что-то легковесное, например, alpine или даже OpenWrt. Если это не эмулятор android, то универсальная архитектура - arm (любой вариант). Если вы точно знаете, что ОС у вас 64-разрядная, то лучше вместо arm - arm64. Выяснить архитектуру можно командой &lt;code&gt;uname -a&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mount --bind /dev /data/linux/dev
mount --bind /proc /data/linux/proc
mount --bind /sys /data/linux/sys
chroot /data/linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Первым делом вам нужно будет один раз настроить DNS. Сам он не заведется.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;echo nameserver 1.1.1.1 &amp;gt;/etc/resolv.conf&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Далее нужно средствами пакетного менеджера установить iptables-legacy. Обязательно &lt;strong&gt;НЕ&lt;/strong&gt; iptables-nft, который, как правило, присутствует по умолчанию. В ядре android нет nftables.&lt;br /&gt; &lt;code&gt;ls -la $(which iptables)&lt;/code&gt;&lt;br /&gt; Линк должен указывать на legacy вариант. Если нет, значит устанавливайте нужные пакеты вашего дистрибутива, и убеждайтесь в правильности ссылок.&lt;br /&gt; &lt;code&gt;iptables -S&lt;/code&gt;&lt;br /&gt; Так можно проверить, что ваш &lt;code&gt;iptables&lt;/code&gt; увидел то, что туда насовал android. &lt;code&gt;iptables-nft&lt;/code&gt; выдаст ошибку. Далее качаем zapret в &lt;code&gt;/opt/zapret&lt;/code&gt;. Обычные действия с &lt;code&gt;install_prereq.sh&lt;/code&gt;, &lt;code&gt;install_bin.sh&lt;/code&gt;, &lt;code&gt;blockcheck.sh&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Учтите, что стратегии обхода сотового оператора и домашнего wifi вероятно будут разные. Выделить сотового оператора легко через параметр iptables &lt;code&gt;-o &amp;lt;имя интерфейса&amp;gt;&lt;/code&gt;. Имя может быть, например, &lt;code&gt;ccmni0&lt;/code&gt;. Его легко увидеть через &lt;code&gt;ifconfig&lt;/code&gt;. Wifi сеть - обычно &lt;code&gt;wlan0&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Переключать blockcheck между оператором и wifi можно вместе со всем инетом - включив или выключив wifi. Если найдете стратегию для wifi и впишите ее в автостарт, то при подключении к другому wifi она может не сработать или вовсе что-то поломать, потому подумайте стоит ли. Может быть лучше сделать скрипты типа &quot;запустить обход домашнего wifi&quot;, &quot;снять обход домашнего wifi&quot;, и пользоваться ими по необходимости из терминала. Но домашний wifi лучше все-же обходить на роутере.&lt;/p&gt; 
&lt;h2&gt;Мобильные модемы и роутеры huawei&lt;/h2&gt; 
&lt;p&gt;Устройства типа E3372, E8372, E5770 разделяют общую идеологию построения системы. Имеются 2 вычислительных ядра. Одно ядро выполняет vxworks, другое - linux. На 4pda имеются модифицированные прошивки с telnet и adb. Их и нужно использовать.&lt;/p&gt; 
&lt;p&gt;Дальнейшие утверждения проверены на E8372. На других может быть аналогично или похоже. Присутствуют дополнительные аппаратные блоки для offload-а сетевых функций. Не весь трафик идет через linux. Исходящий трафик с самого модема проходит цепочку OUTPUT нормально, на FORWARD =&amp;gt;wan часть пакетов выпадает из tcpdump.&lt;/p&gt; 
&lt;p&gt;tpws работает обычным образом.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;nfqueue&lt;/code&gt; поломан, можно собрать фиксящий модуль &lt;a href=&quot;https://github.com/im-0/unfuck-nfqueue-on-e3372h&quot;&gt;https://github.com/im-0/unfuck-nfqueue-on-e3372h&lt;/a&gt;, используя исходники с huawei open source. Исходники содержат тулчейн и полусобирающееся, неактуальное ядро. Конфиг можно взять с рабочего модема из &lt;code&gt;/proc/config.gz&lt;/code&gt;. С помощью этих исходников умельцы могут собрать модуль &lt;code&gt;unfuck_nfqueue.ko&lt;/code&gt;. После его применения NFQUEUE и nfqws для arm работают нормально.&lt;/p&gt; 
&lt;p&gt;Чтобы избежать проблемы с offload-ом при использовании nfqws, следует комбинировать tpws в режиме tcp proxy и nfqws. Правила NFQUEUE пишутся для цепочки OUTPUT. connbytes придется опускать, поскольку модуля в ядре нет. Но это не смертельно.&lt;/p&gt; 
&lt;p&gt;Скрипт автозапуска - &lt;code&gt;/system/etc/autorun.sh&lt;/code&gt;. Создайте свой скрипт настройки zapret, запускайте из конца autorun.sh через &quot;&amp;amp;&quot;. Скрипт должен в начале делать sleep 5, чтобы дождаться поднятия сети и iptables от huawei.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] На этом модеме происходят хаотические сбросы соединений tcp по непонятным причинам. Выглядит это так, если запускать curl с самого модема:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;curl www.ru
curl: (7) Failed to connect to www.ru port 80: Host is unreachable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Возникает ошибка сокета EHOSTUNREACH (errno -113). То же самое видно в tpws. В броузере не подгружаются части веб страниц, картинки, стили. В tcpdump на внешнем интерфейсе eth_x виден только единственный и безответный SYN пакет, без сообщений ICMP. ОС каким-то образом узнает о невозможности установить TCP соединение и выдает ошибку. Если выполнять подключение с клиента, то SYN пропадают, соединение не устанавливается. ОС клиента проводит ретрансмиссию, и с какого-то раза подключение удается. Поэтому без tcp проксирования в этой ситуации сайты тупят, но загружаются, а с проксированием подключение выполняется, но вскоре сбрасывается без каких-либо данных, и броузеры не пытаются установить его заново. Поэтому качество броузинга с tpws может быть хуже, но дело не в tpws. Частота сбросов заметно возрастает, если запущен торент клиент, имеется много tcp соединений. Однако, причина не в переполнении таблицы conntrack. Увеличение лимитов и очистка conntrack не помогают. Предположительно эта особенность связана с обработкой пакетов сброса соединения в hardware offload. Точного ответа на вопрос у меня нет. Если вы знаете - поделитесь, пожалуйста. Чтобы не ухудшать качество броузинга, можно фильтровать заворот на tpws по ip фильтру. Поддержка ipset отсутствует. Значит, все, что можно сделать - создать индивидуальные правила на небольшое количество хостов.&lt;/p&gt; 
&lt;p&gt;Некоторые наброски скриптов присутствуют в &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/files/huawei/&quot;&gt;files/huawei&lt;/a&gt;. &lt;em&gt;Не готовое решение!&lt;/em&gt; Смотрите, изучайте, приспосабливайте.&lt;br /&gt; Здесь можно скачать готовые полезные статические бинарники для arm, включая curl : &lt;a href=&quot;https://github.com/bol-van/bins&quot;&gt;https://github.com/bol-van/bins&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FreeBSD, OpenBSD, MacOS&lt;/h2&gt; 
&lt;p&gt;Описано в &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/bsd.md&quot;&gt;документации BSD&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;p&gt;Описано в &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/windows.md&quot;&gt;документации Windows&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Другие прошивки&lt;/h2&gt; 
&lt;p&gt;Для статических бинарников не имеет значения на чем они запущены: PC, android, приставка, роутер, любой другой девайс. Подойдет любая прошивка, дистрибутив linux. Статические бинарники запустятся на всем. Им нужно только ядро с необходимыми опциями сборки или модулями. Но кроме бинарников в проекте используются еще и скрипты, в которых задействуются некоторые стандартные программы.&lt;/p&gt; 
&lt;p&gt;Основные причины почему нельзя просто так взять и установить эту систему на что угодно:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;отсутствие доступа к девайсу через shell&lt;/li&gt; 
 &lt;li&gt;отсутствие рута&lt;/li&gt; 
 &lt;li&gt;отсутствие раздела r/w для записи и энергонезависимого хранения файлов&lt;/li&gt; 
 &lt;li&gt;отсутствие возможности поставить что-то в автозапуск&lt;/li&gt; 
 &lt;li&gt;отсутствие cron&lt;/li&gt; 
 &lt;li&gt;неотключаемый flow offload или другая проприетарщина в netfilter&lt;/li&gt; 
 &lt;li&gt;недостаток модулей ядра или опций его сборки&lt;/li&gt; 
 &lt;li&gt;недостаток модулей iptables (/usr/lib/iptables/lib*.so)&lt;/li&gt; 
 &lt;li&gt;недостаток стандартных программ (типа ipset, curl) или их кастрированность (облегченная замена)&lt;/li&gt; 
 &lt;li&gt;кастрированный или нестандартный шелл sh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Если в вашей прошивке есть все необходимое, то вы можете адаптировать zapret под ваш девайс в той или иной степени. Может быть у вас не получится поднять все части системы, однако вы можете хотя бы попытаться поднять tpws и завернуть на него через -j REDIRECT весь трафик на порт 80. Если вам есть куда записать tpws, есть возможность выполнять команды при старте, то как минимум это вы сделать сможете. Скорее всего поддержка REDIRECT в ядре есть. Она точно есть на любом роутере, на других устройствах под вопросом. NFQUEUE, ipset на большинстве прошивок отсутствуют из-за ненужности.&lt;/p&gt; 
&lt;p&gt;Пересобрать ядро или модули для него будет скорее всего достаточно трудно. Для этого вам необходимо будет по крайней мере получить исходники вашей прошивки. User mode компоненты могут быть привнесены относительно безболезненно, если есть место куда их записать. Специально для девайсов, имеющих область r/w, существует проект entware. Некоторые прошивки даже имеют возможность его облегченной установки через веб интерфейс. entware содержит репозиторий user-mode компонент, которые устанавливаются в /opt. С их помощью можно компенсировать недостаток ПО основной прошивки, за исключением ядра.&lt;/p&gt; 
&lt;p&gt;Можно попытаться использовать sysv init script таким образом, как это описано в разделе &quot;Прикручивание к системе управления фаерволом или своей системе запуска&quot;. В случае ругани на отсутствие каких-то базовых программ, их следует восполнить посредством entware. Перед запуском скрипта путь к дополнительным программам должен быть помещен в PATH.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Подробное описание настроек для других прошивок выходит за рамки данного проекта.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;OpenWrt является одной из немногих относительно полноценных linux систем для embedded devices. Она характеризуется следующими вещами, которые и послужили основой выбора именно этой прошивки:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;полный root доступ к девайсу через shell. на заводских прошивках чаще всего отсутствует, на многих альтернативных есть&lt;/li&gt; 
 &lt;li&gt;корень r/w. это практически уникальная особенность OpenWrt. заводские и большинство альтернативных прошивок построены на базе squashfs root (r/o), а конфигурация хранится в специально отформатированной области встроенной памяти, называемой nvram. не имеющие r/w корня системы сильно кастрированы. они не имеют возможности доустановки ПО из репозитория без специальных вывертов и заточены в основном на чуть более продвинутого, чем обычно, пользователя и управление имеющимся функционалом через веб интерфейс, но функционал фиксированно ограничен. альтернативные прошивки, как правило, могут монтировать r/w раздел в какую-то область файловой системы, заводские обычно могут монтировать лишь флэшки, подключенные к USB, и не факт, что есть поддержка unix файловых системы. может быть поддержка только fat и ntfs.&lt;/li&gt; 
 &lt;li&gt;возможность выноса корневой файловой системы на внешний носитель (extroot) или создания на нем оверлея (overlay)&lt;/li&gt; 
 &lt;li&gt;наличие менеджера пакетов opkg и репозитория софта&lt;/li&gt; 
 &lt;li&gt;flow offload предсказуемо, стандартно и выборочно управляем, а так же отключаем&lt;/li&gt; 
 &lt;li&gt;в репозитории есть все модули ядра, их можно доустановить через opkg. ядро пересобирать не нужно.&lt;/li&gt; 
 &lt;li&gt;в репозитории есть все модули iptables, их можно доустановить через opkg&lt;/li&gt; 
 &lt;li&gt;в репозитории есть огромное количество стандартных программ и дополнительного софта&lt;/li&gt; 
 &lt;li&gt;наличие SDK, позволяющего собрать недостающее&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Обход блокировки через сторонний хост&lt;/h2&gt; 
&lt;p&gt;Если не работает автономный обход, приходится перенаправлять трафик через сторонний хост. Предлагается использовать прозрачный редирект через socks5 посредством &lt;code&gt;iptables+redsocks&lt;/code&gt;, либо &lt;code&gt;iptables+iproute+vpn&lt;/code&gt;. Настройка варианта с redsocks на OpenWrt описана в &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/redsocks.txt&quot;&gt;redsocks.txt&lt;/a&gt;. Настройка варианта с &lt;code&gt;iproute+wireguard&lt;/code&gt; - в &lt;a href=&quot;https://raw.githubusercontent.com/bol-van/zapret/master/wireguard_iproute_openwrt.txt&quot;&gt;wireguard_iproute_openwrt.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Почему стоит вложиться в покупку VPS&lt;/h2&gt; 
&lt;p&gt;VPS — это виртуальный сервер. Существует огромное множество датацентров, предлагающих данную услугу. На VPS могут выполняться какие угодно задачи. От простого веб-сайта до навороченной системы собственной разработки. Можно использовать VPS и для поднятия собственного VPN или прокси. Сама широта возможных способов применения и распространенность услуги сводят к минимуму возможности регуляторов по бану сервисов такого типа. Да, если введут белые списки, то решение загнется, но это будет уже другая реальность, в которой придется изобретать иные решения. Пока этого не сделали, никто не будет банить хостинги просто потому, что они предоставляют хостинг услуги. Вы, как индивидуум, скорее всего, никому не нужны. Подумайте чем вы отличаетесь от известного VPN провайдера. VPN-провайдер предоставляет &lt;em&gt;простую&lt;/em&gt; и &lt;em&gt;доступную&lt;/em&gt; услугу по обходу блокировок для масс. Этот факт делает его первоочередной целью блокировки. РКН направит уведомление, после отказа сотрудничать заблокирует VPN. Предоплаченная сумма пропадет. У регуляторов нет и никогда не будет ресурсов для тотальной проверки каждого сервера в сети. Возможен китайский расклад, при котором DPI выявляет VPN-протоколы и динамически банит IP серверов, предоставляющих нелицензированный VPN. Но имея знания, голову, вы всегда можете обфусцировать VPN трафик или применить другие типы VPN, более устойчивые к анализу на DPI, или просто менее широкоизвестные, а следовательно с меньшей вероятностью обнаруживаемые регулятором. У вас есть свобода делать на вашем VPS все что вы захотите, адаптируясь к новым условиям. Да, это потребует знаний. Вам выбирать учиться и держать ситуацию под контролем, когда вам ничего запретить не могут, или покориться системе.&lt;/p&gt; 
&lt;p&gt;VPS можно приобрести в множестве мест. Существуют специализированные на поиске предложений VPS порталы.&lt;br /&gt; Например, &lt;a href=&quot;https://vps.today&quot;&gt;вот этот&lt;/a&gt;. Для персонального VPN сервера обычно достаточно самой минимальной конфигурации, но с безлимитным трафиком или с большим лимитом по трафику (терабайты). Важен и тип VPS. OpenVZ подойдёт для OpenVPN, но вы не поднимете на нем WireGuard, IPsec, то есть все, что требует kernel mode. Для kernel mode требуется тип виртуализации, предполагающий запуск полноценного экземпляра ОС linux вместе с ядром. Подойдут KVM, Xen, Hyper-V, VMware.&lt;/p&gt; 
&lt;p&gt;По цене можно найти предложения, которые будут дешевле готовой VPN услуги, но при этом вы сам хозяин в своей лавке и не рискуете попасть под бан регулятора, разве что «заодно» — под ковровую бомбардировку с баном миллионов IP. Кроме того, если вам совсем все кажется сложным, прочитанное вызывает ступор и вы точно знаете, что ничего из описанного сделать не сможете, то вы сможете хотя бы использовать динамическое перенаправление портов SSH для получения шифрованного SOCKS-прокси и прописать его в браузер. Знания linux не нужны совсем. Это вариант наименее напряжный для чайников, хотя и не самый удобный в использовании.&lt;/p&gt; 
&lt;h2&gt;Поддержать разработчика&lt;/h2&gt; 
&lt;p&gt;USDT &lt;code&gt;0x3d52Ce15B7Be734c53fc9526ECbAB8267b63d66E&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;BTC &lt;code&gt;bc1qhqew3mrvp47uk2vevt5sctp7p2x9m7m5kkchve&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;ETH &lt;code&gt;0x3d52Ce15B7Be734c53fc9526ECbAB8267b63d66E&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
