<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C Monthly Trending</title>
    <description>Monthly Trending of C in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:51:21 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>libuv/libuv</title>
      <link>https://github.com/libuv/libuv</link>
      <description>&lt;p&gt;Cross-platform asynchronous I/O&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png&quot; alt=&quot;libuv&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;libuv is a multi-platform support library with a focus on asynchronous I/O. It was primarily developed for use by &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;, but it&#39;s also used by &lt;a href=&quot;http://luvit.io/&quot;&gt;Luvit&lt;/a&gt;, &lt;a href=&quot;http://julialang.org/&quot;&gt;Julia&lt;/a&gt;, &lt;a href=&quot;https://github.com/MagicStack/uvloop&quot;&gt;uvloop&lt;/a&gt;, and &lt;a href=&quot;https://github.com/libuv/libuv/raw/v1.x/LINKS.md&quot;&gt;others&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Full-featured event loop backed by epoll, kqueue, IOCP, event ports.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Asynchronous TCP and UDP sockets&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Asynchronous DNS resolution&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Asynchronous file and file system operations&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;File system events&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ANSI escape code controlled TTY&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IPC with socket sharing, using Unix domain sockets or named pipes (Windows)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Child processes&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Thread pool&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Signal handling&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;High resolution clock&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Threading and synchronization primitives&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Starting with version 1.0.0 libuv follows the &lt;a href=&quot;http://semver.org/&quot;&gt;semantic versioning&lt;/a&gt; scheme. The API change and backwards compatibility rules are those indicated by SemVer. libuv will keep a stable ABI across major releases.&lt;/p&gt; 
&lt;p&gt;The ABI/API changes can be tracked &lt;a href=&quot;http://abi-laboratory.pro/tracker/timeline/libuv/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;libuv is licensed under the MIT license. Check the &lt;a href=&quot;https://raw.githubusercontent.com/libuv/libuv/v1.x/LICENSE&quot;&gt;LICENSE&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/libuv/libuv/v1.x/LICENSE-extra&quot;&gt;LICENSE-extra&lt;/a&gt; files.&lt;/p&gt; 
&lt;p&gt;The documentation is licensed under the CC BY 4.0 license. Check the &lt;a href=&quot;https://raw.githubusercontent.com/libuv/libuv/v1.x/LICENSE-docs&quot;&gt;LICENSE-docs file&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/libuv/libuv/discussions&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/libuv&quot;&gt;Mailing list&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;h3&gt;Official documentation&lt;/h3&gt; 
&lt;p&gt;Located in the docs/ subdirectory. It uses the &lt;a href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; framework, which makes it possible to build the documentation in multiple formats.&lt;/p&gt; 
&lt;p&gt;Show different supported building options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build documentation as HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build documentation as HTML and live reload it when it changes (this requires sphinx-autobuild to be installed and is only supported on Unix):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make livehtml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build documentation as man pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make man
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build documentation as ePub:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ make epub
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: Windows users need to use make.bat instead of plain &#39;make&#39;.&lt;/p&gt; 
&lt;p&gt;Documentation can be browsed online &lt;a href=&quot;http://docs.libuv.org&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/libuv/libuv/tree/master/test&quot;&gt;tests and benchmarks&lt;/a&gt; also serve as API specification and usage examples.&lt;/p&gt; 
&lt;h3&gt;Other resources&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=nGn60vDSxQ4&quot;&gt;LXJS 2012 talk&lt;/a&gt; — High-level introductory talk about libuv.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thlorenz/libuv-dox&quot;&gt;libuv-dox&lt;/a&gt; — Documenting types and methods of libuv, mostly by reading uv.h.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thlorenz/learnuv&quot;&gt;learnuv&lt;/a&gt; — Learn uv for fun and profit, a self guided workshop to libuv.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These resources are not handled by libuv maintainers and might be out of date. Please verify it before opening new issues.&lt;/p&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;libuv can be downloaded either from the &lt;a href=&quot;https://github.com/libuv/libuv&quot;&gt;GitHub repository&lt;/a&gt; or from the &lt;a href=&quot;http://dist.libuv.org/dist/&quot;&gt;downloads site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before verifying the git tags or signature files, importing the relevant keys is necessary. Key IDs are listed in the &lt;a href=&quot;https://github.com/libuv/libuv/raw/master/MAINTAINERS.md&quot;&gt;MAINTAINERS&lt;/a&gt; file, but are also available as git blob objects for easier use.&lt;/p&gt; 
&lt;p&gt;Importing a key the usual way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys AE9BC059
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Importing a key from a git blob object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git show pubkey-saghul | gpg --import
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verifying releases&lt;/h3&gt; 
&lt;p&gt;Git tags are signed with the developer&#39;s key, they can be verified as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git verify-tag v1.6.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Starting with libuv 1.7.0, the tarballs stored in the &lt;a href=&quot;http://dist.libuv.org/dist/&quot;&gt;downloads site&lt;/a&gt; are signed and an accompanying signature file sit alongside each. Once both the release tarball and the signature file are downloaded, the file can be verified as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gpg --verify libuv-1.7.0.tar.gz.sign
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;p&gt;For UNIX-like platforms, including macOS, there are two build methods: autotools or &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For Windows, &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt; is the only supported build method and has the following prerequisites:&lt;/p&gt; 
&lt;details&gt; 
 &lt;ul&gt; 
  &lt;li&gt;One of: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/visual-cpp-build-tools/&quot;&gt;Visual C++ Build Tools&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.visualstudio.com/vs/older-downloads/&quot;&gt;Visual Studio 2015 Update 3&lt;/a&gt;, all editions including the Community edition (remember to select &quot;Common Tools for Visual C++ 2015&quot; feature during installation).&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.visualstudio.com/downloads/&quot;&gt;Visual Studio 2017&lt;/a&gt;, any edition (including the Build Tools SKU). &lt;strong&gt;Required Components:&lt;/strong&gt; &quot;MSbuild&quot;, &quot;VC++ 2017 v141 toolset&quot; and one of the Windows SDKs (10 or 8.1).&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Basic Unix tools required for some tests, &lt;a href=&quot;http://git-scm.com/download/win&quot;&gt;Git for Windows&lt;/a&gt; includes Git Bash and tools which can be included in the global &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;p&gt;To build with autotools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sh autogen.sh
$ ./configure
$ make
$ make check
$ make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build with &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cmake -B build -DBUILD_TESTING=ON         # generate project with tests
$ cmake --build build                       # add `-j &amp;lt;n&amp;gt;` with cmake &amp;gt;= 3.12

# Run tests:
$ (cd build &amp;amp;&amp;amp; ctest -C Debug --output-on-failure)

# Or manually run tests:
$ build/uv_run_tests                        # shared library build
$ build/uv_run_tests_a                      # static library build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To cross-compile with &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt; (unsupported but generally works):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cmake ../..                 \
  -DCMAKE_SYSTEM_NAME=Windows \
  -DCMAKE_SYSTEM_VERSION=6.1  \
  -DCMAKE_C_COMPILER=i686-w64-mingw32-gcc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install with Homebrew&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ brew install --HEAD libuv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note to OS X users:&lt;/p&gt; 
&lt;p&gt;Make sure that you specify the architecture you wish to build for in the &quot;ARCHS&quot; flag. You can specify more than one by delimiting with a space (e.g. &quot;x86_64 i386&quot;).&lt;/p&gt; 
&lt;h3&gt;Install with vcpkg&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git clone https://github.com/microsoft/vcpkg.git
$ ./bootstrap-vcpkg.bat # for powershell
$ ./bootstrap-vcpkg.sh # for bash
$ ./vcpkg install libuv
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install with Conan&lt;/h3&gt; 
&lt;p&gt;You can install pre-built binaries for libuv or build it from source using &lt;a href=&quot;https://conan.io/&quot;&gt;Conan&lt;/a&gt;. Use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;conan install --requires=&quot;libuv/[*]&quot; --build=missing
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The libuv Conan recipe is kept up to date by Conan maintainers and community contributors. If the version is out of date, please &lt;a href=&quot;https://github.com/conan-io/conan-center-index&quot;&gt;create an issue or pull request&lt;/a&gt; on the ConanCenterIndex repository.&lt;/p&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;p&gt;Some tests are timing sensitive. Relaxing test timeouts may be necessary on slow or overloaded machines:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ env UV_TEST_TIMEOUT_MULTIPLIER=2 build/uv_run_tests # 10s instead of 5s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run one test&lt;/h4&gt; 
&lt;p&gt;The list of all tests is in &lt;code&gt;test/test-list.h&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This invocation will cause the test driver to fork and execute &lt;code&gt;TEST_NAME&lt;/code&gt; in a child process:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ build/uv_run_tests_a TEST_NAME
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This invocation will cause the test driver to execute the test in the same process:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ build/uv_run_tests_a TEST_NAME TEST_NAME
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Debugging tools&lt;/h4&gt; 
&lt;p&gt;When running the test from within the test driver process (&lt;code&gt;build/uv_run_tests_a TEST_NAME TEST_NAME&lt;/code&gt;), tools like gdb and valgrind work normally.&lt;/p&gt; 
&lt;p&gt;When running the test from a child of the test driver process (&lt;code&gt;build/uv_run_tests_a TEST_NAME&lt;/code&gt;), use these tools in a fork-aware manner.&lt;/p&gt; 
&lt;h5&gt;Fork-aware gdb&lt;/h5&gt; 
&lt;p&gt;Use the &lt;a href=&quot;https://sourceware.org/gdb/onlinedocs/gdb/Forks.html&quot;&gt;follow-fork-mode&lt;/a&gt; setting:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gdb --args build/uv_run_tests_a TEST_NAME

(gdb) set follow-fork-mode child
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Fork-aware valgrind&lt;/h5&gt; 
&lt;p&gt;Use the &lt;code&gt;--trace-children=yes&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ valgrind --trace-children=yes -v --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memcheck-%p.log build/uv_run_tests_a TEST_NAME
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running benchmarks&lt;/h3&gt; 
&lt;p&gt;See the section on running tests. The benchmark driver is &lt;code&gt;./uv_run_benchmarks_a&lt;/code&gt; and the benchmarks are listed in &lt;code&gt;test/benchmark-list.h&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://raw.githubusercontent.com/libuv/libuv/v1.x/SUPPORTED_PLATFORMS.md&quot;&gt;SUPPORTED_PLATFORMS file&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;-fno-strict-aliasing&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;It is recommended to turn on the &lt;code&gt;-fno-strict-aliasing&lt;/code&gt; compiler flag in projects that use libuv. The use of ad hoc &quot;inheritance&quot; in the libuv API may not be safe in the presence of compiler optimizations that depend on strict aliasing.&lt;/p&gt; 
&lt;p&gt;MSVC does not have an equivalent flag but it also does not appear to need it at the time of writing (December 2019.)&lt;/p&gt; 
&lt;h3&gt;AIX Notes&lt;/h3&gt; 
&lt;p&gt;AIX compilation using IBM XL C/C++ requires version 12.1 or greater.&lt;/p&gt; 
&lt;p&gt;AIX support for filesystem events requires the non-default IBM &lt;code&gt;bos.ahafs&lt;/code&gt; package to be installed. This package provides the AIX Event Infrastructure that is detected by &lt;code&gt;autoconf&lt;/code&gt;. &lt;a href=&quot;http://www.ibm.com/developerworks/aix/library/au-aix_event_infrastructure/&quot;&gt;IBM documentation&lt;/a&gt; describes the package in more detail.&lt;/p&gt; 
&lt;h3&gt;z/OS Notes&lt;/h3&gt; 
&lt;p&gt;z/OS compilation requires &lt;a href=&quot;https://github.com/ibmruntimes/zoslib&quot;&gt;ZOSLIB&lt;/a&gt; to be installed. When building with &lt;a href=&quot;https://cmake.org/&quot;&gt;CMake&lt;/a&gt;, use the flag &lt;code&gt;-DZOSLIB_DIR&lt;/code&gt; to specify the path to &lt;a href=&quot;https://github.com/ibmruntimes/zoslib&quot;&gt;ZOSLIB&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ (cd build &amp;amp;&amp;amp; cmake .. -DBUILD_TESTING=ON -DZOSLIB_DIR=/path/to/zoslib)
$ cmake --build build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;z/OS creates System V semaphores and message queues. These persist on the system after the process terminates unless the event loop is closed.&lt;/p&gt; 
&lt;p&gt;Use the &lt;code&gt;ipcrm&lt;/code&gt; command to manually clear up System V resources.&lt;/p&gt; 
&lt;h2&gt;Patches&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/libuv/libuv/raw/master/CONTRIBUTING.md&quot;&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hathach/tinyusb</title>
      <link>https://github.com/hathach/tinyusb</link>
      <description>&lt;p&gt;An open source cross-platform USB stack for embedded system&lt;/p&gt;&lt;hr&gt;&lt;p&gt;|Build Status| |CircleCI Status| |Documentation Status| |Fuzzing Status| |License|&lt;/p&gt; 
&lt;h1&gt;Sponsors&lt;/h1&gt; 
&lt;p&gt;TinyUSB is funded by: Adafruit. Purchasing products from them helps to support this project.&lt;/p&gt; 
&lt;p&gt;.. figure:: docs/assets/adafruit_logo.svg :alt: Adafruit Logo :target: &lt;a href=&quot;https://www.adafruit.com&quot;&gt;https://www.adafruit.com&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;TinyUSB Project&lt;/h1&gt; 
&lt;p&gt;.. figure:: docs/assets/logo.svg :alt: TinyUSB&lt;/p&gt; 
&lt;p&gt;TinyUSB is an open-source cross-platform USB Host/Device stack for embedded system, designed to be memory-safe with no dynamic allocation and thread-safe with all interrupt events are deferred then handled in the non-ISR task function. Check out the online &lt;code&gt;documentation &amp;lt;https://docs.tinyusb.org/&amp;gt;&lt;/code&gt;__ for more details.&lt;/p&gt; 
&lt;p&gt;.. figure:: docs/assets/stack.svg :width: 500px :alt: stackup&lt;/p&gt; 
&lt;p&gt;::&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;.
├── docs            # Documentation
├── examples        # Examples with make and cmake build system
├── hw
│   ├── bsp         # Supported boards source files
│   └── mcu         # Low level mcu core &amp;amp; peripheral drivers
├── lib             # Sources from 3rd party such as FreeRTOS, FatFs ...
├── src             # All sources files for TinyUSB stack itself.
├── test            # Tests: unit test, fuzzing, hardware test
└── tools           # Files used internally
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Getting started&lt;/h1&gt; 
&lt;p&gt;See the &lt;code&gt;online documentation &amp;lt;https://docs.tinyusb.org&amp;gt;&lt;/code&gt;_ for information about using TinyUSB and how it is implemented.&lt;/p&gt; 
&lt;p&gt;Check out &lt;code&gt;Getting Started&lt;/code&gt;_ guide for adding TinyUSB to your project or building the examples. If you are new to TinyUSB, we recommend starting with the &lt;code&gt;cdc_msc&lt;/code&gt; example. There is a handful of &lt;code&gt;Supported Boards&lt;/code&gt;_ that should work out of the box.&lt;/p&gt; 
&lt;p&gt;We use &lt;code&gt;GitHub Discussions &amp;lt;https://github.com/hathach/tinyusb/discussions&amp;gt;&lt;/code&gt;_ as our forum. It is a great place to ask questions and advice from the community or to discuss your TinyUSB-based projects.&lt;/p&gt; 
&lt;p&gt;For bugs and feature requests, please &lt;code&gt;raise an issue &amp;lt;https://github.com/hathach/tinyusb/issues&amp;gt;&lt;/code&gt;_ and follow the templates there.&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;Porting&lt;/code&gt;_ guide for adding support for new MCUs and boards.&lt;/p&gt; 
&lt;h1&gt;Device Stack&lt;/h1&gt; 
&lt;p&gt;Supports multiple device configurations by dynamically changing USB descriptors, low power functions such like suspend, resume, and remote wakeup. The following device classes are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Audio Class 2.0 (UAC2)&lt;/li&gt; 
 &lt;li&gt;Bluetooth Host Controller Interface (BTH HCI)&lt;/li&gt; 
 &lt;li&gt;Communication Device Class (CDC)&lt;/li&gt; 
 &lt;li&gt;Device Firmware Update (DFU): DFU mode (WIP) and Runtime&lt;/li&gt; 
 &lt;li&gt;Human Interface Device (HID): Generic (In &amp;amp; Out), Keyboard, Mouse, Gamepad etc ...&lt;/li&gt; 
 &lt;li&gt;Mass Storage Class (MSC): with multiple LUNs&lt;/li&gt; 
 &lt;li&gt;Musical Instrument Digital Interface (MIDI)&lt;/li&gt; 
 &lt;li&gt;Network with RNDIS, Ethernet Control Model (ECM), Network Control Model (NCM)&lt;/li&gt; 
 &lt;li&gt;Test and Measurement Class (USBTMC)&lt;/li&gt; 
 &lt;li&gt;Video class 1.5 (UVC): work in progress&lt;/li&gt; 
 &lt;li&gt;Vendor-specific class support with generic In &amp;amp; Out endpoints. Can be used with MS OS 2.0 compatible descriptor to load winUSB driver without INF file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WebUSB &amp;lt;https://github.com/WICG/webusb&amp;gt;&lt;/code&gt;__ with vendor-specific class&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have a special requirement, &lt;code&gt;usbd_app_driver_get_cb()&lt;/code&gt; can be used to write your own class driver without modifying the stack. Here is how the RPi team added their reset interface &lt;code&gt;raspberrypi/pico-sdk#197 &amp;lt;https://github.com/raspberrypi/pico-sdk/pull/197&amp;gt;&lt;/code&gt;_&lt;/p&gt; 
&lt;h1&gt;Host Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Human Interface Device (HID): Keyboard, Mouse, Generic&lt;/li&gt; 
 &lt;li&gt;Mass Storage Class (MSC)&lt;/li&gt; 
 &lt;li&gt;Communication Device Class: CDC-ACM&lt;/li&gt; 
 &lt;li&gt;Vendor serial over USB: FTDI, CP210x, CH34x, PL2303&lt;/li&gt; 
 &lt;li&gt;Hub with multiple-level support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Similar to the Device Stack, if you have a special requirement, &lt;code&gt;usbh_app_driver_get_cb()&lt;/code&gt; can be used to write your own class driver without modifying the stack.&lt;/p&gt; 
&lt;h1&gt;Power Delivery Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Power Delivery 3.0 (PD3.0) with USB Type-C support (WIP)&lt;/li&gt; 
 &lt;li&gt;Super early stage, only for testing purpose&lt;/li&gt; 
 &lt;li&gt;Only support STM32 G4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;OS Abstraction layer&lt;/h1&gt; 
&lt;p&gt;TinyUSB is completely thread-safe by pushing all Interrupt Service Request (ISR) events into a central queue, then processing them later in the non-ISR context task function. It also uses semaphore/mutex to access shared resources such as Communication Device Class (CDC) FIFO. Therefore the stack needs to use some of the OS&#39;s basic APIs. Following OSes are already supported out of the box.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;No OS&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRTOS&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RT-Thread &amp;lt;https://github.com/RT-Thread/rt-thread&amp;gt;&lt;/code&gt;&lt;em&gt;: &lt;code&gt;repo &amp;lt;https://github.com/RT-Thread-packages/tinyusb&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mynewt&lt;/strong&gt; Due to the newt package build system, Mynewt examples are better to be on its &lt;code&gt;own repo &amp;lt;https://github.com/hathach/mynewt-tinyusb-example&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported CPUs&lt;/h1&gt; 
&lt;p&gt;+--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Manufacturer | Family | Device | Host | Highspeed | Driver | Note | +==============+=============================+========+======+===========+========================+===================+ | Allwinner | F1C100s/F1C200s | ✔ | | ✔ | sunxi | musb variant | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Analog | MAX3421E | | ✔ | ✖ | max3421 | via SPI | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | MAX32 650, 666, 690, | ✔ | | ✔ | musb | 1-dir ep | | | MAX78002 | | | | | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Artery AT32 | F403a_407, F413 | ✔ | | | fsdev | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | F415, F435_437, F423, F425 | ✔ | ✔ | | dwc2 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | F402_F405 | ✔ | ✔ | ✔ | dwc2 | F405 is HS | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Brigetek | FT90x | ✔ | | ✔ | ft9xx | 1-dir ep | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Broadcom | BCM2711, BCM2837 | ✔ | | ✔ | dwc2 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Dialog | DA1469x | ✔ | ✖ | ✖ | da146xx | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Espressif | S2, S3 | ✔ | ✔ | ✖ | dwc2 or esp32sx | | | ESP32 +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | P4 | ✔ | ✔ | ✔ | dwc2 | | +--------------+----+------------------------+--------+------+-----------+------------------------+-------------------+ | GigaDevice | GD32VF103 | ✔ | | ✖ | dwc2 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Infineon | XMC4500 | ✔ | ✔ | ✖ | dwc2 | | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | MicroChip | SAM | D11, D21, L21, L22 | ✔ | | ✖ | samd | | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | D51, E5x | ✔ | | ✖ | samd | | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | G55 | ✔ | | ✖ | samg | 1-dir ep | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | E70,S70,V70,V71 | ✔ | | ✔ | samx7x | 1-dir ep | | +-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | | PIC | 24 | ✔ | | | pic | ci_fs variant | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | 32 mm, mk, mx | ✔ | | | pic | ci_fs variant | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | dsPIC33 | ✔ | | | pic | ci_fs variant | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | 32mz | ✔ | | | pic32mz | musb variant | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | Mind Montion | mm32 | ✔ | | ✖ | mm32f327x_otg | ci_fs variant | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | NordicSemi | nRF 52833, 52840, 5340 | ✔ | ✖ | ✖ | nrf5x | only ep8 is ISO | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Nuvoton | NUC120 | ✔ | ✖ | ✖ | nuc120 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | NUC121/NUC125 | ✔ | ✖ | ✖ | nuc121 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | NUC126 | ✔ | ✖ | ✖ | nuc121 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | NUC505 | ✔ | | ✔ | nuc505 | | +--------------+---------+-------------------+--------+------+-----------+------------------------+-------------------+ | NXP | iMXRT | RT 10xx, 11xx | ✔ | ✔ | ✔ | ci_hs | | | +---------+-------------------+--------+------+-----------+------------------------+-------------------+ | | Kinetis | KL | ✔ | ⚠ | ✖ | ci_fs, khci | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | K32L2 | ✔ | | ✖ | khci | ci_fs variant | | +---------+-------------------+--------+------+-----------+------------------------+-------------------+ | | LPC | 11u, 13, 15 | ✔ | ✖ | ✖ | lpc_ip3511 | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 17, 40 | ✔ | ⚠ | ✖ | lpc17_40 | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 18, 43 | ✔ | ✔ | ✔ | ci_hs | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 51u | ✔ | ✖ | ✖ | lpc_ip3511 | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | 54, 55 | ✔ | | ✔ | lpc_ip3511 | | | +---------+-------------------+--------+------+-----------+------------------------+-------------------+ | | MCX | N9 | ✔ | | ✔ | ci_fs, ci_hs | | | | +-------------------+--------+------+-----------+------------------------+-------------------+ | | | A15 | ✔ | | | ci_fs | | +--------------+---------+-------------------+--------+------+-----------+------------------------+-------------------+ | Raspberry Pi | RP2040, RP2350 | ✔ | ✔ | ✖ | rp2040, pio_usb | | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | Renesas | RX | 63N, 65N, 72N | ✔ | ✔ | ✖ | rusb2 | | | +-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | | RA | 4M1, 4M3, 6M1 | ✔ | ✔ | ✖ | rusb2 | | | | +-----------------------+--------+------+-----------+------------------------+-------------------+ | | | 6M5 | ✔ | ✔ | ✔ | rusb2 | | +--------------+-----+-----------------------+--------+------+-----------+------------------------+-------------------+ | Silabs | EFM32GG12 | ✔ | | ✖ | dwc2 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | Sony | CXD56 | ✔ | ✖ | ✔ | cxd56 | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | ST STM32 | F0, F3, L0, L1, L5, WBx5 | ✔ | ✖ | ✖ | stm32_fsdev | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | F1 | 102, 103 | ✔ | ✖ | ✖ | stm32_fsdev | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 105, 107 | ✔ | ✔ | ✖ | dwc2 | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | F2, F4, F7, H7, H7RS | ✔ | ✔ | ✔ | dwc2 | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | C0, G0, H5 | ✔ | | ✖ | stm32_fsdev | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | G4 | ✔ | ✖ | ✖ | stm32_fsdev | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | L0, L1 | ✔ | ✖ | ✖ | stm32_fsdev | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | L4 | 4x2, 4x3 | ✔ | ✖ | ✖ | stm32_fsdev | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 4x5, 4x6, 4+ | ✔ | ✔ | ✖ | dwc2 | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | N6 | ✔ | ✔ | ✔ | dwc2 | | | +----+------------------------+--------+------+-----------+------------------------+-------------------+ | | U5 | 535, 545 | ✔ | | ✖ | stm32_fsdev | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 575, 585 | ✔ | ✔ | ✖ | dwc2 | | | | +------------------------+--------+------+-----------+------------------------+-------------------+ | | | 59x,5Ax,5Fx,5Gx | ✔ | ✔ | ✔ | dwc2 | | +--------------+----+------------------------+--------+------+-----------+------------------------+-------------------+ | TI | MSP430 | ✔ | ✖ | ✖ | msp430x5xx | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | MSP432E4, TM4C123 | ✔ | | ✖ | musb | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | ValentyUSB | eptri | ✔ | ✖ | ✖ | eptri | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+ | WCH | CH32F20x | ✔ | | ✔ | ch32_usbhs | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | CH32V20x | ✔ | | ✖ | stm32_fsdev/ch32_usbfs | | | +-----------------------------+--------+------+-----------+------------------------+-------------------+ | | CH32V305, CH32V307 | ✔ | | ✔ | ch32_usbfs/hs | | +--------------+-----------------------------+--------+------+-----------+------------------------+-------------------+&lt;/p&gt; 
&lt;h2&gt;Table Legend&lt;/h2&gt; 
&lt;p&gt;========= ========================= ✔ Supported ⚠ Partial support ✖ Not supported by hardware [empty] Unknown ========= =========================&lt;/p&gt; 
&lt;p&gt;.. |Build Status| image:: &lt;a href=&quot;https://github.com/hathach/tinyusb/actions/workflows/build.yml/badge.svg&quot;&gt;https://github.com/hathach/tinyusb/actions/workflows/build.yml/badge.svg&lt;/a&gt; :target: &lt;a href=&quot;https://github.com/hathach/tinyusb/actions&quot;&gt;https://github.com/hathach/tinyusb/actions&lt;/a&gt; .. |CircleCI Status| image:: &lt;a href=&quot;https://dl.circleci.com/status-badge/img/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master.svg?style=svg&quot;&gt;https://dl.circleci.com/status-badge/img/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master.svg?style=svg&lt;/a&gt; :target: &lt;a href=&quot;https://dl.circleci.com/status-badge/redirect/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master&quot;&gt;https://dl.circleci.com/status-badge/redirect/circleci/4AYHvUhFxdnY4rA7LEsdqW/QmrpoL2AjGqetvFQNqtWyq/tree/master&lt;/a&gt; .. |Documentation Status| image:: &lt;a href=&quot;https://readthedocs.org/projects/tinyusb/badge/?version=latest&quot;&gt;https://readthedocs.org/projects/tinyusb/badge/?version=latest&lt;/a&gt; :target: &lt;a href=&quot;https://docs.tinyusb.org/en/latest/?badge=latest&quot;&gt;https://docs.tinyusb.org/en/latest/?badge=latest&lt;/a&gt; .. |Fuzzing Status| image:: &lt;a href=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/badges/tinyusb.svg&quot;&gt;https://oss-fuzz-build-logs.storage.googleapis.com/badges/tinyusb.svg&lt;/a&gt; :target: &lt;a href=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/index.html#tinyusb&quot;&gt;https://oss-fuzz-build-logs.storage.googleapis.com/index.html#tinyusb&lt;/a&gt; .. |License| image:: &lt;a href=&quot;https://img.shields.io/badge/license-MIT-brightgreen.svg&quot;&gt;https://img.shields.io/badge/license-MIT-brightgreen.svg&lt;/a&gt; :target: &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. _Changelog: docs/info/changelog.rst .. _Contributors: CONTRIBUTORS.rst .. _Getting Started: docs/reference/getting_started.rst .. _Supported Boards: docs/reference/boards.rst .. _Dependencies: docs/reference/dependencies.rst .. _Concurrency: docs/reference/concurrency.rst .. _Contributing: docs/contributing/index.rst .. _Code of Conduct: CODE_OF_CONDUCT.rst .. _Porting: docs/contributing/porting.rst&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lizongying/my-tv</title>
      <link>https://github.com/lizongying/my-tv</link>
      <description>&lt;p&gt;我的电视 电视直播软件，安装即可使用&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;我的电视&lt;/h1&gt; 
&lt;p&gt;电视直播软件，安装即可使用&lt;/p&gt; 
&lt;h2&gt;使用&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;下载 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lizongying/my-tv/releases/&quot;&gt;github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://gitee.com/lizongying/my-tv/releases/&quot;&gt;gitee&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;安裝 
  &lt;ul&gt; 
   &lt;li&gt;U盘安装&lt;/li&gt; 
   &lt;li&gt;小米电视可以使用小米电视助手进行安装&lt;/li&gt; 
   &lt;li&gt;如电视可以启用ADB，也可以通过ADB进行安装 &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;adb install my-tv.apk
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lizongying/my-tv/main/screenshots/img_3.png&quot; alt=&quot;image&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/lizongying/my-tv/main/screenshots/img_2.png&quot; alt=&quot;image&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/lizongying/my-tv/main/screenshots/img_1.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lizongying/my-tv/main/HISTORY.md&quot;&gt;更新日志&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;TODO&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;音量不同&lt;/li&gt; 
 &lt;li&gt;大湾区卫视、广东4k超高清、广东珠江、三沙卫视&lt;/li&gt; 
 &lt;li&gt;CHC高清三个电影频道&lt;/li&gt; 
 &lt;li&gt;地方频道&lt;/li&gt; 
 &lt;li&gt;收藏夹&lt;/li&gt; 
 &lt;li&gt;海外&lt;/li&gt; 
 &lt;li&gt;隐藏频道&lt;/li&gt; 
 &lt;li&gt;亮度调节&lt;/li&gt; 
 &lt;li&gt;音量调节&lt;/li&gt; 
 &lt;li&gt;軟解&lt;/li&gt; 
 &lt;li&gt;自動更新&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;無法自啟的設備： 斐讯N1盒子，[Phicomm] Phicomm p230 (Android 7.1.2)&lt;/p&gt; 
&lt;p&gt;閃退： 中国移动盒子(新魔百和M302A) 4.4.2&lt;/p&gt; 
&lt;h2&gt;版权说明&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/lizongying/my-tv/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;本项目仅供学习研究，禁止用于商业用途，请于下载二十四小时内删除。&lt;/p&gt; 
&lt;p&gt;本项目可能随时终止，请大家谨慎使用，建议使用官方渠道进行观看。&lt;/p&gt; 
&lt;p&gt;本项目使用的部分代码、图片、文字等资源来源于网络，如有侵权，请联系删除。&lt;/p&gt; 
&lt;h2&gt;赞赏&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lizongying/my-tv/main/screenshots/appreciate.jpeg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>timescale/timescaledb</title>
      <link>https://github.com/timescale/timescaledb</link>
      <description>&lt;p&gt;A time-series database for high-performance real-time analytics packaged as a Postgres extension&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;picture align=&quot;center&quot;&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://assets.tigerdata.com/timescale-web/brand/horizontal/yellow/logo-yellow.svg&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://assets.tigerdata.com/timescale-web/brand/horizontal/black/logo-black.svg&quot; /&gt; 
  &lt;img alt=&quot;TigerData logo&quot; /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h3&gt;TimescaleDB is a PostgreSQL extension for high-performance real-time analytics on time-series and event data&lt;/h3&gt; 
 &lt;p&gt;&lt;a href=&quot;https://docs.tigerdata.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Read_the_TigerData_docs-black?style=for-the-badge&amp;amp;logo=readthedocs&amp;amp;logoColor=white&quot; alt=&quot;Docs&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://timescaledb.slack.com/archives/C4GT3N90X&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Ask_the_TigerData_community-black?style=for-the-badge&amp;amp;logo=slack&amp;amp;logoColor=white&quot; alt=&quot;SLACK&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://console.cloud.timescale.com/signup&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Try_Tiger_Cloud_for_free-black?style=for-the-badge&amp;amp;logo=timescale&amp;amp;logoColor=white&quot; alt=&quot;Try TimescaleDB for free&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Install TimescaleDB&lt;/h2&gt; 
&lt;p&gt;Install from a Docker container:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Run the TimescaleDB container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d --name timescaledb -p 5432:5432 -e POSTGRES_PASSWORD=password timescale/timescaledb-ha:pg17
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Connect to a database:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker exec -it timescaledb psql -d &quot;postgres://postgres:password@localhost/postgres&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.tigerdata.com/self-hosted/latest/install/&quot;&gt;other installation options&lt;/a&gt; or try &lt;a href=&quot;https://docs.tigerdata.com/getting-started/latest/&quot;&gt;Tiger Cloud&lt;/a&gt; for free.&lt;/p&gt; 
&lt;h2&gt;Create a hypertable&lt;/h2&gt; 
&lt;p&gt;TimescaleDB&#39;s hypercore is a hybrid row-columnar store that boosts analytical query performance on your time-series and event data, while reducing data size by more than 90%. This keeps your analytics operating at lightning speed and ensures low storage costs as you scale. Data is inserted in row format in the rowstore and converted to columnar format in the columnstore based on your configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;-- Create a hypertable, with the columnstore from the hypercore engine
-- &quot;time&quot; as partitioning column and a segment by on location
CREATE TABLE conditions (
  time        TIMESTAMPTZ       NOT NULL,
  location    TEXT              NOT NULL,
  temperature DOUBLE PRECISION  NULL,
  humidity    DOUBLE PRECISION  NULL
)
WITH (
  timescaledb.hypertable,
  timescaledb.partition_column=&#39;time&#39;,
  timescaledb.segmentby=&#39;location&#39;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/hypertables/&quot;&gt;About hypertables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/api/latest/hypertable/&quot;&gt;API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/compression/about-compression/&quot;&gt;About columnstore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/compression/manual-compression/&quot;&gt;Enable columnstore manually&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/api/latest/compression/&quot;&gt;API reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Insert and query data&lt;/h2&gt; 
&lt;p&gt;Insert and query data in a hypertable via regular SQL commands. For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Insert data into a hypertable named &lt;code&gt;conditions&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;INSERT INTO conditions
  VALUES
    (NOW(), &#39;office&#39;,   70.0, 50.0),
    (NOW(), &#39;basement&#39;, 66.5, 60.0),
    (NOW(), &#39;garage&#39;,   77.0, 65.2);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Return the number of entries written to the table conditions in the last 12 hours:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT
  COUNT(*)
FROM
  conditions
WHERE
  time &amp;gt; NOW() - INTERVAL &#39;12 hours&#39;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/query-data/&quot;&gt;Query data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/write-data/&quot;&gt;Write data&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create time buckets&lt;/h2&gt; 
&lt;p&gt;Time buckets enable you to aggregate data in hypertables by time interval and calculate summary values.&lt;/p&gt; 
&lt;p&gt;For example, calculate the average daily temperature in a table named &lt;code&gt;conditions&lt;/code&gt;. The table has a &lt;code&gt;time&lt;/code&gt; and &lt;code&gt;temperature&lt;/code&gt; columns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT
  time_bucket(&#39;1 day&#39;, time) AS bucket,
  AVG(temperature) AS avg_temp
FROM
  conditions
GROUP BY
  bucket
ORDER BY
  bucket ASC;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/time-buckets/about-time-buckets/&quot;&gt;About time buckets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/api/latest/hyperfunctions/time_bucket/&quot;&gt;API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/&quot;&gt;All TimescaleDB features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/tutorials/latest/&quot;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Create continuous aggregates&lt;/h2&gt; 
&lt;p&gt;Continuous aggregates make real-time analytics run faster on very large datasets. They continuously and incrementally refresh a query in the background, so that when you run such query, only the data that has changed needs to be computed, not the entire dataset. This is what makes them different from regular PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/current/rules-materializedviews.html&quot;&gt;materialized views&lt;/a&gt;, which cannot be incrementally materialized and have to be rebuilt from scratch every time you want to refresh it.&lt;/p&gt; 
&lt;p&gt;For example, create a continuous aggregate view for daily weather data in two simple steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a materialized view:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE MATERIALIZED VIEW conditions_summary_daily
WITH (timescaledb.continuous) AS
SELECT
  location,
  time_bucket(INTERVAL &#39;1 day&#39;, time) AS bucket,
  AVG(temperature),
  MAX(temperature),
  MIN(temperature)
FROM
  conditions
GROUP BY
  location,
  bucket;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a policy to refresh the view every hour:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;SELECT
  add_continuous_aggregate_policy(
    &#39;conditions_summary_daily&#39;,
    start_offset =&amp;gt; INTERVAL &#39;1 month&#39;,
    end_offset =&amp;gt; INTERVAL &#39;1 day&#39;,
    schedule_interval =&amp;gt; INTERVAL &#39;1 hour&#39;
);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;See more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/continuous-aggregates/&quot;&gt;About continuous aggregates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.tigerdata.com/api/latest/continuous-aggregates/create_materialized_view/&quot;&gt;API reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Want TimescaleDB hosted and managed for you? Try Tiger Cloud&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.tigerdata.com/getting-started/latest/&quot;&gt;Tiger Cloud&lt;/a&gt; is the modern PostgreSQL data platform for all your applications. It enhances PostgreSQL to handle time series, events, real-time analytics, and vector search—all in a single database alongside transactional workloads. You get one system that handles live data ingestion, late and out-of-order updates, and low latency queries, with the performance, reliability, and scalability your app needs. Ideal for IoT, crypto, finance, SaaS, and a myriad other domains, Tiger Cloud allows you to build data-heavy, mission-critical apps while retaining the familiarity and reliability of PostgreSQL. See &lt;a href=&quot;https://docs.tigerdata.com/about/latest/whitepaper/&quot;&gt;our whitepaper&lt;/a&gt; for a deep dive into Tiger Cloud&#39;s architecture and how it meets the needs of even the most demanding applications.&lt;/p&gt; 
&lt;p&gt;A Tiger Cloud service is a single optimized 100% PostgreSQL database instance that you use as is, or extend with capabilities specific to your business needs. The available capabilities are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Time-series and analytics&lt;/strong&gt;: PostgreSQL with TimescaleDB. The PostgreSQL you know and love, supercharged with functionality for storing and querying time-series data at scale for real-time analytics and other use cases. Get faster time-based queries with hypertables, continuous aggregates, and columnar storage. Save on storage with native compression, data retention policies, and bottomless data tiering to Amazon S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI and vector&lt;/strong&gt;: PostgreSQL with vector extensions. Use PostgreSQL as a vector database with purpose built extensions for building AI applications from start to scale. Get fast and accurate similarity search with the pgvector and pgvectorscale extensions. Create vector embeddings and perform LLM reasoning on your data with the pgai extension.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;: the trusted industry-standard RDBMS. Ideal for applications requiring strong data consistency, complex relationships, and advanced querying capabilities. Get ACID compliance, extensive SQL support, JSON handling, and extensibility through custom functions, data types, and extensions. All services include all the cloud tooling you&#39;d expect for production use: &lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/backup-restore/backup-restore-cloud/&quot;&gt;automatic backups&lt;/a&gt;, &lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/ha-replicas/&quot;&gt;high availability&lt;/a&gt;, &lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/ha-replicas/read-scaling/&quot;&gt;read replicas&lt;/a&gt;, &lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/services/service-management/#fork-a-service&quot;&gt;data forking&lt;/a&gt;, &lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/services/connection-pooling/&quot;&gt;connection pooling&lt;/a&gt;, &lt;a href=&quot;https://docs.tigerdata.com/use-timescale/latest/data-tiering/&quot;&gt;tiered storage&lt;/a&gt;, &lt;a href=&quot;https://docs.tigerdata.com/about/latest/pricing-and-account-management/&quot;&gt;usage-based storage&lt;/a&gt;, and much more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Check build status&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux/macOS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux i386&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Coverity&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Code Coverage&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;OpenSSF&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/timescale/timescaledb/actions/workflows/linux-build-and-test.yaml?query=workflow%3ARegression+branch%3Amain+event%3Aschedule&quot;&gt;&lt;img src=&quot;https://github.com/timescale/timescaledb/actions/workflows/linux-build-and-test.yaml/badge.svg?branch=main&amp;amp;event=schedule&quot; alt=&quot;Build Status Linux/macOS&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/timescale/timescaledb/actions/workflows/linux-32bit-build-and-test.yaml?query=workflow%3ARegression+branch%3Amain+event%3Aschedule&quot;&gt;&lt;img src=&quot;https://github.com/timescale/timescaledb/actions/workflows/linux-32bit-build-and-test.yaml/badge.svg?branch=main&amp;amp;event=schedule&quot; alt=&quot;Build Status Linux i386&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/timescale/timescaledb/actions/workflows/windows-build-and-test.yaml?query=workflow%3ARegression+branch%3Amain+event%3Aschedule&quot;&gt;&lt;img src=&quot;https://github.com/timescale/timescaledb/actions/workflows/windows-build-and-test.yaml/badge.svg?branch=main&amp;amp;event=schedule&quot; alt=&quot;Windows build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://scan.coverity.com/projects/timescale-timescaledb&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/timescale-timescaledb/badge.svg?sanitize=true&quot; alt=&quot;Coverity Scan Build Status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://codecov.io/gh/timescale/timescaledb&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/timescale/timescaledb/branch/main/graphs/badge.svg?branch=main&quot; alt=&quot;Code Coverage&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.bestpractices.dev/projects/8012&quot;&gt;&lt;img src=&quot;https://www.bestpractices.dev/projects/8012/badge&quot; alt=&quot;OpenSSF Best Practices&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to TimescaleDB! See &lt;a href=&quot;https://github.com/timescale/timescaledb/raw/main/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; and &lt;a href=&quot;https://github.com/timescale/timescaledb/raw/main/docs/StyleGuide.md&quot;&gt;Code style guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Learn about TigerData&lt;/h2&gt; 
&lt;p&gt;TigerData is the fastest PostgreSQL for transactional, analytical and agentic workloads. To learn more about the company and its products, visit &lt;a href=&quot;https://www.tigerdata.com&quot;&gt;tigerdata.com&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>libsdl-org/SDL</title>
      <link>https://github.com/libsdl-org/SDL</link>
      <description>&lt;p&gt;Simple Directmedia Layer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Simple DirectMedia Layer (SDL for short) is a cross-platform library designed to make it easy to write multi-media software, such as games and emulators.&lt;/p&gt; 
&lt;p&gt;You can find the latest release and additional information at: &lt;a href=&quot;https://www.libsdl.org/&quot;&gt;https://www.libsdl.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Installation instructions and a quick introduction is available in &lt;a href=&quot;https://raw.githubusercontent.com/libsdl-org/SDL/main/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library is distributed under the terms of the zlib license, available in &lt;a href=&quot;https://raw.githubusercontent.com/libsdl-org/SDL/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Enjoy!&lt;/p&gt; 
&lt;p&gt;Sam Lantinga (&lt;a href=&quot;mailto:slouken@libsdl.org&quot;&gt;slouken@libsdl.org&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lz4/lz4</title>
      <link>https://github.com/lz4/lz4</link>
      <description>&lt;p&gt;Extremely Fast Compression algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LZ4 - Extremely fast compression&lt;/h1&gt; 
&lt;p&gt;LZ4 is lossless compression algorithm, providing compression speed &amp;gt; 500 MB/s per core, scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on multi-core systems.&lt;/p&gt; 
&lt;p&gt;Speed can be tuned dynamically, selecting an &quot;acceleration&quot; factor which trades compression ratio for faster speed. On the other end, a high compression derivative, LZ4_HC, is also provided, trading CPU time for improved compression ratio. All versions feature the same decompression speed.&lt;/p&gt; 
&lt;p&gt;LZ4 is also compatible with &lt;a href=&quot;https://github.com/facebook/zstd#the-case-for-small-data-compression&quot;&gt;dictionary compression&lt;/a&gt;, both at &lt;a href=&quot;https://github.com/lz4/lz4/raw/v1.8.3/lib/lz4frame.h#L481&quot;&gt;API&lt;/a&gt; and &lt;a href=&quot;https://github.com/lz4/lz4/raw/v1.8.3/programs/lz4.1.md#operation-modifiers&quot;&gt;CLI&lt;/a&gt; levels. It can ingest any input file as dictionary, though only the final 64KB are used. This capability can be combined with the &lt;a href=&quot;https://github.com/facebook/zstd/raw/v1.3.5/programs/zstd.1.md#dictionary-builder&quot;&gt;Zstandard Dictionary Builder&lt;/a&gt;, in order to drastically improve compression performance on small files.&lt;/p&gt; 
&lt;p&gt;LZ4 library is provided as open-source software using BSD 2-Clause license.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Branch&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dev&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ci.appveyor.com/project/YannCollet/lz4-1lndh&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/github/lz4/lz4?branch=dev&amp;amp;svg=true&quot; alt=&quot;Build status&quot; title=&quot;Windows test suite&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;The benchmark uses &lt;a href=&quot;https://github.com/inikep/lzbench&quot;&gt;lzbench&lt;/a&gt;, from @inikep compiled with GCC v8.2.0 on Linux 64-bits (Ubuntu 4.18.0-17). The reference system uses a Core i7-9700K CPU @ 4.9GHz (w/ turbo boost). Benchmark evaluates the compression of reference &lt;a href=&quot;http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia&quot;&gt;Silesia Corpus&lt;/a&gt; in single-thread mode.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Compressor&lt;/th&gt; 
   &lt;th&gt;Factor&lt;/th&gt; 
   &lt;th&gt;Compression&lt;/th&gt; 
   &lt;th&gt;Decompression&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;memcpy&lt;/td&gt; 
   &lt;td&gt;1.000&lt;/td&gt; 
   &lt;td&gt;13700 MB/s&lt;/td&gt; 
   &lt;td&gt;13700 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LZ4 default (v1.9.0)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;2.101&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;780 MB/s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4970 MB/s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LZO 2.09&lt;/td&gt; 
   &lt;td&gt;2.108&lt;/td&gt; 
   &lt;td&gt;670 MB/s&lt;/td&gt; 
   &lt;td&gt;860 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QuickLZ 1.5.0&lt;/td&gt; 
   &lt;td&gt;2.238&lt;/td&gt; 
   &lt;td&gt;575 MB/s&lt;/td&gt; 
   &lt;td&gt;780 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Snappy 1.1.4&lt;/td&gt; 
   &lt;td&gt;2.091&lt;/td&gt; 
   &lt;td&gt;565 MB/s&lt;/td&gt; 
   &lt;td&gt;1950 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.zstd.net/&quot;&gt;Zstandard&lt;/a&gt; 1.4.0 -1&lt;/td&gt; 
   &lt;td&gt;2.883&lt;/td&gt; 
   &lt;td&gt;515 MB/s&lt;/td&gt; 
   &lt;td&gt;1380 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LZF v3.6&lt;/td&gt; 
   &lt;td&gt;2.073&lt;/td&gt; 
   &lt;td&gt;415 MB/s&lt;/td&gt; 
   &lt;td&gt;910 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.zlib.net/&quot;&gt;zlib&lt;/a&gt; deflate 1.2.11 -1&lt;/td&gt; 
   &lt;td&gt;2.730&lt;/td&gt; 
   &lt;td&gt;100 MB/s&lt;/td&gt; 
   &lt;td&gt;415 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LZ4 HC -9 (v1.9.0)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;2.721&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;41 MB/s&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4900 MB/s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.zlib.net/&quot;&gt;zlib&lt;/a&gt; deflate 1.2.11 -6&lt;/td&gt; 
   &lt;td&gt;3.099&lt;/td&gt; 
   &lt;td&gt;36 MB/s&lt;/td&gt; 
   &lt;td&gt;445 MB/s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;make
make install     # this command may require root permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;LZ4&#39;s &lt;code&gt;Makefile&lt;/code&gt; supports standard &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html&quot;&gt;Makefile conventions&lt;/a&gt;, including &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/DESTDIR.html&quot;&gt;staged installs&lt;/a&gt;, &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;redirection&lt;/a&gt;, or &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Utilities-in-Makefiles.html&quot;&gt;command redefinition&lt;/a&gt;. It is compatible with parallel builds (&lt;code&gt;-j#&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Building LZ4 - Using vcpkg&lt;/h3&gt; 
&lt;p&gt;You can download and install LZ4 using the &lt;a href=&quot;https://github.com/Microsoft/vcpkg&quot;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git
cd vcpkg
./bootstrap-vcpkg.sh
./vcpkg integrate install
./vcpkg.exe install lz4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The LZ4 port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&quot;https://github.com/Microsoft/vcpkg&quot;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The raw LZ4 block compression format is detailed within &lt;a href=&quot;https://raw.githubusercontent.com/lz4/lz4/dev/doc/lz4_Block_format.md&quot;&gt;lz4_Block_format&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Arbitrarily long files or data streams are compressed using multiple blocks, for streaming requirements. These blocks are organized into a frame, defined into &lt;a href=&quot;https://raw.githubusercontent.com/lz4/lz4/dev/doc/lz4_Frame_format.md&quot;&gt;lz4_Frame_format&lt;/a&gt;. Interoperable versions of LZ4 must also respect the frame format.&lt;/p&gt; 
&lt;h2&gt;Other source versions&lt;/h2&gt; 
&lt;p&gt;Beyond the C reference source, many contributors have created versions of lz4 in multiple languages (Java, C#, Python, Perl, Ruby, etc.). A list of known source ports is maintained on the &lt;a href=&quot;http://www.lz4.org&quot;&gt;LZ4 Homepage&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Packaging status&lt;/h3&gt; 
&lt;p&gt;Most distributions are bundled with a package manager which allows easy installation of both the &lt;code&gt;liblz4&lt;/code&gt; library and the &lt;code&gt;lz4&lt;/code&gt; command line interface.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/project/lz4/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/vertical-allrepos/lz4.svg?columns=4&amp;amp;exclude_unsupported=1&quot; alt=&quot;Packaging status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Special Thanks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Takayuki Matsuoka, aka @t-mat, for exceptional first-class support throughout the lifetime of this project&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Genymobile/scrcpy</title>
      <link>https://github.com/Genymobile/scrcpy</link>
      <description>&lt;p&gt;Display and control your Android device&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;This GitHub repo (&lt;a href=&quot;https://github.com/Genymobile/scrcpy&quot;&gt;https://github.com/Genymobile/scrcpy&lt;/a&gt;) is the only official source for the project. Do not download releases from random websites, even if their name contains &lt;code&gt;scrcpy&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;scrcpy (v3.3.1)&lt;/h1&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/app/data/icon.svg?sanitize=true&quot; width=&quot;128&quot; height=&quot;128&quot; alt=&quot;scrcpy&quot; align=&quot;right&quot; /&gt; 
&lt;p&gt;&lt;em&gt;pronounced &quot;&lt;strong&gt;scr&lt;/strong&gt;een &lt;strong&gt;c&lt;/strong&gt;o&lt;strong&gt;py&lt;/strong&gt;&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This application mirrors Android devices (video and audio) connected via USB or &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md#tcpip-wireless&quot;&gt;TCP/IP&lt;/a&gt; and allows control using the computer&#39;s keyboard and mouse. It does not require &lt;em&gt;root&lt;/em&gt; access or an app installed on the device. It works on &lt;em&gt;Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt;, and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/assets/screenshot-debian-600.jpg&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;It focuses on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Genymobile/scrcpy/pull/646&quot;&gt;35~70ms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Its features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;audio forwarding&lt;/a&gt; (Android 11+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mirroring with &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md#turn-screen-off&quot;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md#copy-paste&quot;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;configurable quality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;camera mirroring&lt;/a&gt; (Android 12+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;mirroring as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt; 
 &lt;li&gt;physical &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md#physical-keyboard-simulation&quot;&gt;keyboard&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#physical-mouse-simulation&quot;&gt;mouse&lt;/a&gt; simulation (HID)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;gamepad&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;and more…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio forwarding&lt;/a&gt; is supported for API &amp;gt;= 30 (Android 11+).&lt;/p&gt; 
&lt;p&gt;Make sure you &lt;a href=&quot;https://developer.android.com/studio/debug/dev-options#enable&quot;&gt;enabled USB debugging&lt;/a&gt; on your device(s).&lt;/p&gt; 
&lt;p&gt;On some devices (especially Xiaomi), you might get the following error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Injecting input events requires the caller (or the source of the instrumentation, if any) to have the INJECT_EVENTS permission.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In that case, you need to enable &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323&quot;&gt;an additional option&lt;/a&gt; &lt;code&gt;USB debugging (Security Settings)&lt;/code&gt; (this is an item different from &lt;code&gt;USB debugging&lt;/code&gt;) to control it using a keyboard and mouse. Rebooting the device is necessary once this option is set.&lt;/p&gt; 
&lt;p&gt;Note that USB debugging is not required to run scrcpy in &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get the app&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/linux.md&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md&quot;&gt;Windows&lt;/a&gt; (read &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md#run&quot;&gt;how to run&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/macos.md&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Must-know tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md#size&quot;&gt;Reducing resolution&lt;/a&gt; may greatly improve performance (&lt;code&gt;scrcpy -m1024&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Right-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;BACK&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Middle-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;HOME&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;f&lt;/kbd&gt; toggles &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md#fullscreen&quot;&gt;fullscreen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;There are many other &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage examples&lt;/h2&gt; 
&lt;p&gt;There are a lot of options, &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#user-documentation&quot;&gt;documented&lt;/a&gt; in separate pages. Here are just some common examples.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Capture the screen in H.265 (better quality), limit the size to 1920, limit the frame rate to 60fps, disable audio, and control the device by simulating a physical keyboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-codec=h265 --max-size=1920 --max-fps=60 --no-audio --keyboard=uhid
scrcpy --video-codec=h265 -m1920 --max-fps=60 --no-audio -K  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start VLC in a new virtual display (separate from the device display):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --new-display=1920x1080 --start-app=org.videolan.vlc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Record the device camera in H.265 at 1920x1080 (and microphone) to an MP4 file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --video-codec=h265 --camera-size=1920x1080 --record=file.mp4
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Capture the device front camera and expose it as a webcam on the computer (on Linux):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --camera-size=1920x1080 --camera-facing=front --v4l2-sink=/dev/video2 --no-playback
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device without mirroring by simulating a physical keyboard and mouse (USB debugging not required):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --otg
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device using gamepad controllers plugged into the computer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --gamepad=uhid
scrcpy -G  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;User documentation&lt;/h2&gt; 
&lt;p&gt;The application provides a lot of features and configuration options. They are documented in the following pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md&quot;&gt;Connection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md&quot;&gt;Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md&quot;&gt;Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md&quot;&gt;Mouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;Gamepad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md&quot;&gt;Device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md&quot;&gt;Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;Recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;Virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/tunnels.md&quot;&gt;Tunnels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;Camera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;Video4Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Genymobile/scrcpy/wiki&quot;&gt;Translations&lt;/a&gt; (not necessarily up to date)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/build.md&quot;&gt;Build instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/develop.md&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2018/03/introducing-scrcpy/&quot;&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/&quot;&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2023/03/scrcpy-2-0-with-audio/&quot;&gt;Scrcpy 2.0, with audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;You can open an &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues&quot;&gt;issue&lt;/a&gt; for bug reports, feature requests or general questions.&lt;/p&gt; 
&lt;p&gt;For bug reports, please read the &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt; first, you might find a solution to your problem immediately.&lt;/p&gt; 
&lt;p&gt;You can also use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/scrcpy&quot;&gt;&lt;code&gt;r/scrcpy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;BlueSky: &lt;a href=&quot;https://bsky.app/profile/scrcpy.bsky.social&quot;&gt;&lt;code&gt;@scrcpy.bsky.social&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/scrcpy_app&quot;&gt;&lt;code&gt;@scrcpy_app&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;I&#39;m &lt;a href=&quot;https://github.com/rom1v&quot;&gt;@rom1v&lt;/a&gt;, the author and maintainer of &lt;em&gt;scrcpy&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;If you appreciate this application, you can &lt;a href=&quot;https://blog.rom1v.com/about/#support-my-open-source-work&quot;&gt;support my open source work&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/rom1v&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://liberapay.com/rom1v/&quot;&gt;Liberapay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paypal.me/rom2v&quot;&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile
Copyright (C) 2018-2025 Romain Vimont

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>EpicGamesExt/raddebugger</title>
      <link>https://github.com/EpicGamesExt/raddebugger</link>
      <description>&lt;p&gt;A native, user-mode, multi-process, graphical debugger.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The RAD Debugger Project&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; This README does not document usage instructions and tips for the debugger itself, and is intended as a technical overview of the project. The debugger&#39;s README, which includes usage instructions and tips, can be found packaged along with debugger releases, or within the &lt;code&gt;build&lt;/code&gt; folder after a local copy has been built.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The RAD Debugger is a native, user-mode, multi-process, graphical debugger. It currently only supports local-machine Windows x64 debugging with PDBs, with plans to expand and port in the future. In the future we&#39;ll expand to also support native Linux debugging and DWARF debug info.&lt;/p&gt; 
&lt;p&gt;The RAD Debugger is currently in &lt;em&gt;ALPHA&lt;/em&gt;. In order to get the debugger bullet- proof, it&#39;d greatly help out if you submitted the issues you find here, along with any information you can gather, like dump files (along with the build you used), instructions to reproduce, test executables, and so on.&lt;/p&gt; 
&lt;p&gt;You can download pre-built binaries for the debugger &lt;a href=&quot;https://github.com/EpicGamesExt/raddebugger/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The RAD Debugger project aims to simplify the debugger by simplifying and unifying the underlying debug info format. In that pursuit we&#39;ve built the RAD Debug Info (RDI) format, which is what the debugger parses and uses. To work with existing toolchains, we convert PDB (and eventually PE/ELF files with embedded DWARF) into the RDI format on-demand.&lt;/p&gt; 
&lt;p&gt;The RDI format is currently specified in code, in the files within the &lt;code&gt;src/lib_rdi_format&lt;/code&gt; folder. The other relevant folders for working with the format are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lib_rdi_make&lt;/code&gt;: The &quot;RAD Debug Info Make&quot; library, for making RDI debug info.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_from_pdb&lt;/code&gt;: Our PDB-to-RDI converter. Can be used as a helper codebase layer, or built as an executable with a command line interface frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_from_dwarf&lt;/code&gt;: Our in-progress DWARF-to-RDI converter.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_dump&lt;/code&gt;: Our RDI textual dumping utility.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development Setup Instructions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Note: Currently, only x64 Windows development is supported.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;1. Installing the Required Tools (MSVC &amp;amp; Windows SDK)&lt;/h3&gt; 
&lt;p&gt;In order to work with the codebase, you&#39;ll need the &lt;a href=&quot;https://aka.ms/vs/17/release/vs_BuildTools.exe&quot;&gt;Microsoft C/C++ Build Tools v15 (2017) or later&lt;/a&gt;, for both the Windows SDK and the MSVC compiler and linker.&lt;/p&gt; 
&lt;p&gt;If the Windows SDK is installed (e.g. via installation of the Microsoft C/C++ Build Tools), you may also build with &lt;a href=&quot;https://releases.llvm.org/&quot;&gt;Clang&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;2. Build Environment Setup&lt;/h3&gt; 
&lt;p&gt;Building the codebase can be done in a terminal which is equipped with the ability to call either MSVC or Clang from command line.&lt;/p&gt; 
&lt;p&gt;This is generally done by calling &lt;code&gt;vcvarsall.bat x64&lt;/code&gt;, which is included in the Microsoft C/C++ Build Tools. This script is automatically called by the &lt;code&gt;x64 Native Tools Command Prompt for VS &amp;lt;year&amp;gt;&lt;/code&gt; variant of the vanilla &lt;code&gt;cmd.exe&lt;/code&gt;. If you&#39;ve installed the build tools, this command prompt may be easily located by searching for &lt;code&gt;Native&lt;/code&gt; from the Windows Start Menu search.&lt;/p&gt; 
&lt;p&gt;You can ensure that the MSVC compiler is accessible from your command line by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything is set up correctly, you should have output very similar to the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Microsoft (R) C/C++ Optimizing Compiler Version 19.29.30151 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

usage: cl [ option... ] filename... [ /link linkoption... ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Building&lt;/h3&gt; 
&lt;p&gt;Within this terminal, &lt;code&gt;cd&lt;/code&gt; to the root directory of the codebase, and just run the &lt;code&gt;build.bat&lt;/code&gt; script:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should see the following output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[debug mode]
[msvc compile]
[default mode, assuming `raddbg` build]
metagen_main.c
searching C:\devel\raddebugger/src... 447 files found
parsing metadesk... 14 metadesk files parsed
gathering tables... 93 tables found
generating layer code...
raddbg_main.c
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything worked correctly, there will be a &lt;code&gt;build&lt;/code&gt; folder in the root level of the codebase, and it will contain a freshly-built &lt;code&gt;raddbg.exe&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This &lt;code&gt;raddbg.exe&lt;/code&gt; will have been built in &lt;strong&gt;debug mode&lt;/strong&gt;, which is not built with optimizations, and may perform worse. To produce a &lt;strong&gt;release mode executable&lt;/strong&gt;, run &lt;code&gt;build.bat&lt;/code&gt; with a &lt;code&gt;release&lt;/code&gt; argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;build release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This build will take significantly longer.&lt;/p&gt; 
&lt;h2&gt;Short-To-Medium-Term Roadmap&lt;/h2&gt; 
&lt;h3&gt;The Initial Alpha Battle-Testing Phase&lt;/h3&gt; 
&lt;p&gt;The first priority for the project is to ensure that the most crucial debugger components are functioning extremely reliably for local, x64, Windows debugging. This would include parts like debug info conversion, debug info loading, process control, stepping, evaluation (correct usage of both location info and type info), and a robust frontend which ensures the lower level parts are usable.&lt;/p&gt; 
&lt;p&gt;We feel that the debugger has already come a long way in all of these respects, but given the massive set of possible combinations of languages, build settings, toolchains, used language features, and patterns of generated code, there are still cases where the debugger has not been tested, and so there are still issues. So, we feel that the top priority is eliminating these issues, such that the debugging experience is rock solid.&lt;/p&gt; 
&lt;h3&gt;Local x64 Linux Debugging Phase&lt;/h3&gt; 
&lt;p&gt;The next priority for the project is to take the rock solid x64 Windows debugging experience, and port all of the relevant pieces to support local x64 Linux debugging also.&lt;/p&gt; 
&lt;p&gt;The debugger has been written to abstract over the parts that need to differ on either Linux or Windows, and this is mainly going to be a task in building out different backends for those abstraction layers.&lt;/p&gt; 
&lt;p&gt;The major parts of this phase are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Porting the &lt;code&gt;src/demon&lt;/code&gt; layer to implement the Demon local process control abstraction API.&lt;/li&gt; 
 &lt;li&gt;Implementing an x64 ELF Linux unwinder in the &lt;code&gt;src/ctrl&lt;/code&gt; layer.&lt;/li&gt; 
 &lt;li&gt;Creating a DWARF-to-RDI converter (in the same way that we&#39;ve built a PDB-to-RDI converter). A partial implementation of this is in &lt;code&gt;src/rdi_from_dwarf&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Porting the &lt;code&gt;src/render&lt;/code&gt; layer to implement all of the rendering features the frontend needs on a Linux-compatible API (the backend used on Windows is D3D11).&lt;/li&gt; 
 &lt;li&gt;Porting the &lt;code&gt;src/font_provider&lt;/code&gt; layer to a Linux-compatible font rasterization backend, like FreeType (the backend used on Windows is DirectWrite).&lt;/li&gt; 
 &lt;li&gt;Porting the &lt;code&gt;src/os&lt;/code&gt; layers to Linux. This includes core operating system abstraction (virtual memory allocation, threading and synchronization primitives, and so on), and graphical operating system abstraction (windows, input events, and so on).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once the above list is complete, and once every part is rock solid, the Windows debugging experience we&#39;ll have worked diligently to create will also be available natively on Linux machines.&lt;/p&gt; 
&lt;h3&gt;And Beyond!&lt;/h3&gt; 
&lt;p&gt;There are several directions we might take after these two major phases, like remote debugging, porting to different architectures, further improving the debugger&#39;s features (like improving the visualization engine), and so on. But for now, we&#39;re mostly focused on those first two phases.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;The RAD Linker&lt;/h1&gt; 
&lt;p&gt;The RAD Linker is a new performance linker for generating x64 PE/COFF binaries. It is designed to be very fast when creating gigantic executables. It generates standard PDB files for debugging, but it can also optionally create RAD Debugger debug info too (useful for huge executables that otherwise create broken PDBs that overflow internal 32-bit tables).&lt;/p&gt; 
&lt;p&gt;The RAD Linker is primarily optimized to handle huge linking projects - in our test cases (where debug info is multiple gigabytes), we see 50% faster link times.&lt;/p&gt; 
&lt;p&gt;The command line syntax is fully compatible with MSVC and you can get a full list of implemented switches from &lt;code&gt;/help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Our current designed-for use case for the linker is to help with the compile-debug cycle of huge projects. We don&#39;t yet have support for dead-code-elimination or link-time-optimizations, but these features are on the road map.&lt;/p&gt; 
&lt;p&gt;By default, the RAD linker spawns as many threads as there are cores, so if you plan to run multiple linkers in parallel, you can limit the number of thread workers via &lt;code&gt;/rad_workers&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We also have support for large memory pages, which, when enabled, reduce link time by another 25%. To link with large pages, you need to explicitly request them via &lt;code&gt;/rad_large_pages&lt;/code&gt;. Large pages are off by default, since Windows support for large pages is a bit buggy - we recommend they only be used in Docker or VM images where the environment is reset after each link. In a standard Windows environment, using large pages otherwise will fragment memory quickly forcing a reboot. We are working on a Linux port of the linker that will be able to build with large pages robustly.&lt;/p&gt; 
&lt;h2&gt;Short Term Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Porting linker to Linux (for Windows executables, just running on Linux).&lt;/li&gt; 
 &lt;li&gt;Debug info features 
  &lt;ul&gt; 
   &lt;li&gt;Get DWARF debug info converter up-and-running.&lt;/li&gt; 
   &lt;li&gt;Smooth out rough edges in RADDBGI builder.&lt;/li&gt; 
   &lt;li&gt;Improve build speed further (especially for tiny and mid sizes projects).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Other features to come 
  &lt;ul&gt; 
   &lt;li&gt;Dead-code-elimination via &lt;code&gt;/opt:ref&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Link Time Optimizations with the help of clang (we won&#39;t support LTCG from MSVC compiler since it is undocumented).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;To build the RAD Linker&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setup development environment, &lt;a href=&quot;https://raw.githubusercontent.com/EpicGamesExt/raddebugger/master/#Development-Setup-Instructions&quot;&gt;see&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;build radlink release&lt;/code&gt; or if you have clang installed &lt;code&gt;build radlink release clang&lt;/code&gt;. We favor latter option for better code generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If build was successful linker executable is placed in &lt;code&gt;build&lt;/code&gt; folder under &lt;code&gt;radlink.exe&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a95b382a-76b4-4a4c-b809-b61fe25e667a&quot; alt=&quot;AMD Ryzen Threadripper PRO 3995WX 64-Cores, 256 GiB RAM (Windows x64)&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Top-Level Directory Descriptions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;data&lt;/code&gt;: Small binary files which are used when building, either to embed within build artifacts, or to package with them.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;src&lt;/code&gt;: All source code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After setting up the codebase and building, the following directories will also exist:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;build&lt;/code&gt;: All build artifacts. Not checked in to version control.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;local&lt;/code&gt;: Local files, used for local build configuration input files. Not checked in to version control.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Codebase Introduction&lt;/h2&gt; 
&lt;p&gt;The codebase is organized into &lt;em&gt;layers&lt;/em&gt;. Layers are separated either to isolate certain problems, and to allow inclusion into various builds without needing to pull everything in the codebase into a build. Layers correspond with folders inside of the &lt;code&gt;src&lt;/code&gt; directory. Sometimes, one folder inside of the &lt;code&gt;src&lt;/code&gt; directory will include multiple sub-layers, but the structure is intended to be fairly flat.&lt;/p&gt; 
&lt;p&gt;Layers correspond roughly 1-to-1 with &lt;em&gt;namespaces&lt;/em&gt;. The term &quot;namespaces&quot; in this context does not refer to specific namespace language features, but rather a naming convention for C-style namespaces, which are written in the codebase as a short prefix, usually 1-3 characters, followed by an underscore. These namespaces are used such that the layer to which certain code belongs may be quickly understood by glancing at code. The namespaces are generally quite short to ensure that they aren&#39;t much of a hassle to write. Sometimes, multiple sub- layers will share a namespace. A few layers do not have a namespace, but most do. Namespaces are either all-caps or lowercase depending on the context in which they&#39;re used. For types, enum values, and some macros, they are capitalized. For functions and global variables, they are lowercase.&lt;/p&gt; 
&lt;p&gt;Layers depend on other layers, but circular dependencies would break the separability and isolation utility of layers (in effect, forming one big layer), so in other words, layers are arranged into a directed acyclic graph.&lt;/p&gt; 
&lt;p&gt;A few layers are built to be used completely independently from the rest of the codebase, as libraries in other codebases and projects. As such, these layers do not depend on any other layers in the codebase. The folders which contain these layers are prefixed with &lt;code&gt;lib_&lt;/code&gt;, like &lt;code&gt;lib_rdi_format&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A list of the layers in the codebase and their associated namespaces is below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;async&lt;/code&gt; (&lt;code&gt;ASYNC_&lt;/code&gt;): Implements a system for asynchronous work to be queued and executed on a thread pool.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;base&lt;/code&gt; (no namespace): Universal, codebase-wide constructs. Strings, math, memory allocators, helper macros, command-line parsing, and so on. Depends on no other codebase layers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;codeview&lt;/code&gt; (&lt;code&gt;CV_&lt;/code&gt;): Code for parsing and/or writing the CodeView format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;coff&lt;/code&gt; (&lt;code&gt;COFF_&lt;/code&gt;): Code for parsing and/or writing the COFF (Common Object File Format) file format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl&lt;/code&gt; (&lt;code&gt;CTRL_&lt;/code&gt;): The debugger&#39;s &quot;control system&quot; layer. Implements asynchronous process control, stepping, and breakpoints for all attached processes. Runs in lockstep with attached processes. When it runs, attached processes are halted. When attached processes are running, it is halted. Driven by a debugger frontend on another thread.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dasm_cache&lt;/code&gt; (&lt;code&gt;DASM_&lt;/code&gt;): An asynchronous disassembly decoder and cache. Users ask for disassembly for some data, with a particular architecture, and other various parameters, and threads implemented in this layer decode and cache the disassembly for that data with those parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dbgi&lt;/code&gt; (&lt;code&gt;DI_&lt;/code&gt;): An asynchronous debug info loader and cache. Loads debug info stored in the RDI format. Users ask for debug info for a particular path, and on separate threads, this layer loads the associated debug info file. If necessary, it will launch a separate conversion process to convert original debug info into the RDI format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dbg_engine&lt;/code&gt; (&lt;code&gt;D_&lt;/code&gt;): Implements the core debugger system, without any graphical components. This contains top-level logic for things like stepping, launching, freezing threads, mid-run breakpoint addition, some caching layers, and so on.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;demon&lt;/code&gt; (&lt;code&gt;DMN_&lt;/code&gt;): An abstraction layer for local-machine, low-level process control. The abstraction is used to provide a common interface for process control on target platforms. Used to implement part of &lt;code&gt;ctrl&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;draw&lt;/code&gt; (&lt;code&gt;DR_&lt;/code&gt;): Implements a high-level graphics drawing API for the debugger&#39;s purposes, using the underlying &lt;code&gt;render&lt;/code&gt; abstraction layer. Provides high-level APIs for various draw commands, but takes care of batching them, and so on.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;eval&lt;/code&gt; (&lt;code&gt;E_&lt;/code&gt;): Implements a compiler for an expression language built for evaluation of variables, registers, types, and more, from debugger-attached processes, debug info, debugger state, and files. Broken into several phases mostly corresponding to traditional compiler phases - lexer, parser, type-checker, IR generation, and IR evaluation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;eval_visualization&lt;/code&gt; (&lt;code&gt;EV_&lt;/code&gt;): Implements the core non-graphical evaluation visualization engine, which can be used to visualize evaluations (provided by the &lt;code&gt;eval&lt;/code&gt; layer) in a number of ways. Implements core data structures and transforms for the &lt;code&gt;Watch&lt;/code&gt; view.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;file_stream&lt;/code&gt; (&lt;code&gt;FS_&lt;/code&gt;): Provides asynchronous file loading, storing the artifacts inside of the cache implemented by the &lt;code&gt;hash_store&lt;/code&gt; layer, and hot-reloading the contents of files when they change. Allows callers to map file paths to data hashes, which can then be used to obtain the file&#39;s data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;font_cache&lt;/code&gt; (&lt;code&gt;FNT_&lt;/code&gt;): Implements a cache of rasterized font data, both in CPU-side data for text shaping, and in GPU texture atlases for rasterized glyphs. All cache information is sourced from the &lt;code&gt;font_provider&lt;/code&gt; abstraction layer.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;font_provider&lt;/code&gt; (&lt;code&gt;FP_&lt;/code&gt;): An abstraction layer for various font file decoding and font rasterization backends.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fuzzy_search&lt;/code&gt; (&lt;code&gt;FZY_&lt;/code&gt;): Provides a fuzzy searching engine for doing large, asynchronous fuzzy searches. Used by the debugger for implementing things like the symbol lister or the &lt;code&gt;Procedures&lt;/code&gt; view, which search across all loaded debug info records, using fuzzy matching rules.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;geo_cache&lt;/code&gt; (&lt;code&gt;GEO_&lt;/code&gt;): Implements an asynchronously-filled cache for GPU geometry data, filled by data sourced in the &lt;code&gt;hash_store&lt;/code&gt; layer&#39;s cache. Used for asynchronously preparing data for visualization.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hash_store&lt;/code&gt; (&lt;code&gt;HS_&lt;/code&gt;): Implements a cache for general data blobs, keyed by a 128-bit hash of the data. Also implements a 128-bit key cache on top, where the keys refer to a unique identity, associated with a 128-bit hash, where the hash may change across time. Used as a general data store by other layers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lib_raddbg_markup&lt;/code&gt; (&lt;code&gt;RADDBG_&lt;/code&gt;): Standalone library for marking up user programs to work with various features in the debugger. Does not depend on &lt;code&gt;base&lt;/code&gt;, and can be independently relocated to other codebases.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lib_rdi_format&lt;/code&gt; (&lt;code&gt;RDI_&lt;/code&gt;): Standalone library which defines the core RDI types and helper functions for reading and writing the RDI debug info file format. Does not depend on &lt;code&gt;base&lt;/code&gt;, and can be independently relocated to other codebases.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lib_rdi_make&lt;/code&gt; (&lt;code&gt;RDIM_&lt;/code&gt;): Standalone library for constructing RDI debug info data. Does not depend on &lt;code&gt;base&lt;/code&gt;, and can be independently relocated to other codebases.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mdesk&lt;/code&gt; (&lt;code&gt;MD_&lt;/code&gt;): Code for parsing Metadesk files (stored as &lt;code&gt;.mdesk&lt;/code&gt;), which is the JSON-like (technically a JSON superset) text format used for the debugger&#39;s user and project configuration files, view rules, and metacode, which is parsed and used to generate code with the &lt;code&gt;metagen&lt;/code&gt; layer.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;metagen&lt;/code&gt; (&lt;code&gt;MG_&lt;/code&gt;): A metaprogram which is used to generate primarily code and data tables. Consumes Metadesk files, stored with the extension &lt;code&gt;.mdesk&lt;/code&gt;, and generates C code which is then included by hand-written C code. Currently, it does not analyze the codebase&#39;s hand-written C code, but in principle this is possible. This allows easier &amp;amp; less-error-prone management of large data tables, which are then used to produce e.g. C &lt;code&gt;enum&lt;/code&gt;s and a number of associated data tables. There are also a number of other generation features, like embedding binary files or complex multi-line strings into source code. This layer cannot depend on any other layer in the codebase directly, including &lt;code&gt;base&lt;/code&gt;, because it may be used to generate code for those layers. To still use &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;os&lt;/code&gt; layer features in the &lt;code&gt;metagen&lt;/code&gt; program, a separate, duplicate version of &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;os&lt;/code&gt; are included in this layer. They are updated manually, as needed. This is to ensure the stability of the metaprogram.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;msf&lt;/code&gt; (&lt;code&gt;MSF_&lt;/code&gt;): Code for parsing and/or writing the MSF file format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mule&lt;/code&gt; (no namespace): Test executables for battle testing debugger functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mutable_text&lt;/code&gt; (&lt;code&gt;MTX_&lt;/code&gt;): Implements an asynchronously-filled-and-mutated cache for text buffers which are mutated across time. In the debugger, this is used to implement the &lt;code&gt;Output&lt;/code&gt; view.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;natvis&lt;/code&gt; (no namespace): NatVis files for type visualization of the codebase&#39;s types in other debuggers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;os/core&lt;/code&gt; (&lt;code&gt;OS_&lt;/code&gt;): An abstraction layer providing core, non-graphical functionality from the operating system under an abstract API, which is implemented per-target-operating-system.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;os/gfx&lt;/code&gt; (&lt;code&gt;OS_&lt;/code&gt;): An abstraction layer, building on &lt;code&gt;os/core&lt;/code&gt;, providing graphical operating system features under an abstract API, which is implemented per-target-operating-system.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;path&lt;/code&gt; (&lt;code&gt;PATH_&lt;/code&gt;): Small helpers for manipulating file path strings.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pdb&lt;/code&gt; (&lt;code&gt;PDB_&lt;/code&gt;): Code for parsing and/or writing the PDB file format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pe&lt;/code&gt; (&lt;code&gt;PE_&lt;/code&gt;): Code for parsing and/or writing the PE (Portable Executable) file format.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;raddbg&lt;/code&gt; (&lt;code&gt;RD_&lt;/code&gt;): The layer which ties everything together for the main graphical debugger. Implements the debugger&#39;s graphical frontend, all of the debugger-specific UI, the debugger executable&#39;s command line interface, and all of the built-in visualizers.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_breakpad_from_pdb&lt;/code&gt; (&lt;code&gt;P2B_&lt;/code&gt;): Our implementation, using the codebase&#39;s RDI technology, for extracting information from PDBs and generating Breakpad text dumps.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_dump&lt;/code&gt; (no namespace): A dumper utility program for dumping textualizations of RDI debug info files.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_format&lt;/code&gt; (no namespace): A layer which includes the &lt;code&gt;lib_rdi_format&lt;/code&gt; layer and bundles it with codebase-specific helpers, to easily include the library in codebase programs, and have it be integrated with codebase constructs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_from_dwarf&lt;/code&gt; (&lt;code&gt;D2R_&lt;/code&gt;): Our in-progress implementation of DWARF-to-RDI conversion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_from_pdb&lt;/code&gt; (&lt;code&gt;P2R_&lt;/code&gt;): Our implementation of PDB-to-RDI conversion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;rdi_make&lt;/code&gt; (no namespace): A layer which includes the &lt;code&gt;lib_rdi_make&lt;/code&gt; layer and bundles it with codebase-specific helpers, to easily include the library in codebase programs, and have it be integrated with codebase constructs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;regs&lt;/code&gt; (&lt;code&gt;REGS_&lt;/code&gt;): Types, helper functions, and metadata for registers on supported architectures. Used in reading/writing registers in &lt;code&gt;demon&lt;/code&gt;, or in looking up register metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;render&lt;/code&gt; (&lt;code&gt;R_&lt;/code&gt;): An abstraction layer providing an abstract API for rendering using various GPU APIs under a common interface. Does not implement a high level drawing API - this layer is strictly for minimally abstracting on an as-needed basis. Higher level drawing features are implemented in the &lt;code&gt;draw&lt;/code&gt; layer.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scratch&lt;/code&gt; (no namespace): Scratch space for small and transient test programs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;texture_cache&lt;/code&gt; (&lt;code&gt;TEX_&lt;/code&gt;): Implements an asynchronously-filled cache for GPU texture data, filled by data sourced in the &lt;code&gt;hash_store&lt;/code&gt; layer&#39;s cache. Used for asynchronously preparing data for visualization.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;text_cache&lt;/code&gt; (&lt;code&gt;TXT_&lt;/code&gt;): Implements an asynchronously-filled cache for textual analysis data (tokens, line ranges, and so on), filled by data sourced in the &lt;code&gt;hash_store&lt;/code&gt; layer&#39;s cache. Used for asynchronously preparing data for visualization (like for the source code viewer).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;third_party&lt;/code&gt; (no namespace): External code from other projects, which some layers in the codebase depend on. All external code is included and built directly within the codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt; (&lt;code&gt;UI_&lt;/code&gt;): Machinery for building graphical user interfaces. Provides a core immediate mode hierarchical user interface data structure building API, and has helper layers for building some higher-level widgets.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoft/msquic</title>
      <link>https://github.com/microsoft/msquic</link>
      <description>&lt;p&gt;Cross-platform, C implementation of the IETF QUIC protocol, exposed to C, C++, C# and Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/images/readme_logo.png&quot; width=&quot;500&quot; alt=&quot;MsQuic logo&quot; /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/YGAtCwTSsc&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/827744285595271168?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://microsoft.github.io/msquic/msquicdocs/docs/API.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Documentation&amp;amp;message=API&amp;amp;color=yellow&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://microsoft.github.io/netperf/dist/&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Performance&amp;amp;message=Dashboard&amp;amp;color=blue&quot; alt=&quot;Perf Dashboard&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/github/microsoft/msquic&quot;&gt;&lt;img src=&quot;https://codecov.io/github/microsoft/msquic/branch/main/graph/badge.svg?token=xAjIMDn7wy&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crates.io/crates/msquic&quot;&gt;&lt;img src=&quot;https://img.shields.io/crates/v/msquic&quot; alt=&quot;crates.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/profiles/msquic&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.Native.Quic.MsQuic.Schannel?style=plastic&quot; alt=&quot;nuget&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/4846&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/4846/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MsQuic is a Microsoft implementation of the &lt;a href=&quot;https://datatracker.ietf.org/wg/quic/about/&quot;&gt;IETF QUIC&lt;/a&gt; protocol. It is cross-platform, written in C and designed to be a general purpose QUIC library. MsQuic also has C++ API wrapper classes and exposes interop layers for both &lt;a href=&quot;https://docs.rs/msquic/latest/msquic/&quot;&gt;Rust&lt;/a&gt; and C#.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You are using MsQuic? Let us know! Knowing our users lets us prioritize work and keep improving MsQuic in the best possible direction. Post in the &lt;a href=&quot;https://github.com/microsoft/msquic/discussions/4963&quot;&gt;Discussion&lt;/a&gt; to say hello and give us a wave on &lt;a href=&quot;https://discord.gg/YGAtCwTSsc&quot;&gt;Discord&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Protocol Features&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc9000&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9000&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc9001&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9001&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc9002&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9002&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc9221&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9221&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc9287&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9287&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc9368&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9368&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc9369&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9369&amp;amp;color=brightgreen&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-quic-load-balancers&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Load%20Balancers&amp;amp;color=blue&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-quic-ack-frequency&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=ACK%20Frequency&amp;amp;color=blue&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/draft-banks-quic-disable-encryption&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Disable%20Encryption&amp;amp;color=blueviolet&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/draft-banks-quic-performance&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Performance&amp;amp;color=blueviolet&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/draft-banks-quic-cibir&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=CIBIR&amp;amp;color=blueviolet&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://tools.ietf.org/html/draft-huitema-quic-ts&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Timestamps&amp;amp;color=blueviolet&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://datatracker.ietf.org/doc/draft-ietf-quic-reliable-stream-reset/&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?label=Draft&amp;amp;message=ReliableReset&amp;amp;color=blueviolet&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;QUIC has many benefits when compared to existing &quot;TLS over TCP&quot; scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All packets are encrypted and handshake is authenticated with TLS 1.3.&lt;/li&gt; 
 &lt;li&gt;Parallel streams of (reliable and unreliable) application data.&lt;/li&gt; 
 &lt;li&gt;Exchange application data in the first round trip (0-RTT).&lt;/li&gt; 
 &lt;li&gt;Improved congestion control and loss recovery.&lt;/li&gt; 
 &lt;li&gt;Survives a change in the clients IP address or port.&lt;/li&gt; 
 &lt;li&gt;Stateless load balancing.&lt;/li&gt; 
 &lt;li&gt;Easily extendable for new features and extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Library Features&lt;/h2&gt; 
&lt;p&gt;MsQuic has several features that differentiates it from other QUIC implementations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optimized for client and server.&lt;/li&gt; 
 &lt;li&gt;Optimized for maximal throughput and minimal latency.&lt;/li&gt; 
 &lt;li&gt;Asynchronous IO.&lt;/li&gt; 
 &lt;li&gt;Receive side scaling (&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/network/introduction-to-receive-side-scaling&quot;&gt;RSS&lt;/a&gt;) support.&lt;/li&gt; 
 &lt;li&gt;UDP send and receive coalescing support.&lt;/li&gt; 
 &lt;li&gt;Kernel stack bypass via &lt;a href=&quot;https://github.com/microsoft/xdp-for-windows?tab=readme-ov-file#xdp-for-windows&quot;&gt;XDP&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;For platform support details, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Platforms.md&quot;&gt;Platforms docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For release details, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Release.md&quot;&gt;Release docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For performance data, see the &lt;a href=&quot;https://aka.ms/msquicperformance&quot;&gt;Performance dashboard&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For building the library, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/BUILD.md&quot;&gt;Build docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For testing the library, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/TEST.md&quot;&gt;Testing docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For using the API, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/API.md&quot;&gt;API docs&lt;/a&gt; or the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/src/tools/sample/sample.c&quot;&gt;Sample&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For running a sample server and client app, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Sample.md&quot;&gt;Quick Start Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For deploying QUIC, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Deployment.md&quot;&gt;Deployment docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For diagnosing issues, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Diagnostics.md&quot;&gt;Diagnostics docs&lt;/a&gt; and the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/TSG.md&quot;&gt;Trouble Shooting Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For other frequently asked questions, see the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/docs/FAQ.md&quot;&gt;FAQs&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;For information on contributing, please see our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/msquic/main/.github/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt;. Feel free to take a look at our &lt;a href=&quot;https://github.com/microsoft/msquic/labels/good%20first%20issue&quot;&gt;Good First Issues&lt;/a&gt; list if you&#39;re looking for somewhere to start. If you&#39;d just like to talk, come chat with us &lt;a href=&quot;https://discord.gg/YGAtCwTSsc&quot;&gt;on Discord&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DaveGamble/cJSON</title>
      <link>https://github.com/DaveGamble/cJSON</link>
      <description>&lt;p&gt;Ultralightweight JSON parser in ANSI C&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cJSON&lt;/h1&gt; 
&lt;p&gt;Ultralightweight JSON parser in ANSI C.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#welcome-to-cjson&quot;&gt;Welcome to cJSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#building&quot;&gt;Building&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#copying-the-source&quot;&gt;Copying the source&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#cmake&quot;&gt;CMake&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#makefile&quot;&gt;Makefile&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#meson&quot;&gt;Meson&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#Vcpkg&quot;&gt;Vcpkg&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#including-cjson&quot;&gt;Including cJSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#data-structure&quot;&gt;Data Structure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#working-with-the-data-structure&quot;&gt;Working with the data structure&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#basic-types&quot;&gt;Basic types&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#objects&quot;&gt;Objects&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#parsing-json&quot;&gt;Parsing JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#printing-json&quot;&gt;Printing JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#example&quot;&gt;Example&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#printing&quot;&gt;Printing&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#parsing&quot;&gt;Parsing&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#caveats&quot;&gt;Caveats&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#zero-character&quot;&gt;Zero Character&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#character-encoding&quot;&gt;Character Encoding&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#c-standard&quot;&gt;C Standard&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#floating-point-numbers&quot;&gt;Floating Point Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#deep-nesting-of-arrays-and-objects&quot;&gt;Deep Nesting Of Arrays And Objects&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#thread-safety&quot;&gt;Thread Safety&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#case-sensitivity&quot;&gt;Case Sensitivity&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#duplicate-object-members&quot;&gt;Duplicate Object Members&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/#enjoy-cjson&quot;&gt;Enjoy cJSON!&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Copyright (c) 2009-2017 Dave Gamble and cJSON contributors&lt;/p&gt; 
 &lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; 
 &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; 
 &lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Welcome to cJSON.&lt;/h3&gt; 
&lt;p&gt;cJSON aims to be the dumbest possible parser that you can get your job done with. It&#39;s a single file of C, and a single header file.&lt;/p&gt; 
&lt;p&gt;JSON is described best here: &lt;a href=&quot;http://www.json.org/&quot;&gt;http://www.json.org/&lt;/a&gt; It&#39;s like XML, but fat-free. You use it to move data around, store things, or just generally represent your program&#39;s state.&lt;/p&gt; 
&lt;p&gt;As a library, cJSON exists to take away as much legwork as it can, but not get in your way. As a point of pragmatism (i.e. ignoring the truth), I&#39;m going to say that you can use it in one of two modes: Auto and Manual. Let&#39;s have a quick run-through.&lt;/p&gt; 
&lt;p&gt;I lifted some JSON from this page: &lt;a href=&quot;http://www.json.org/fatfree.html&quot;&gt;http://www.json.org/fatfree.html&lt;/a&gt; That page inspired me to write cJSON, which is a parser that tries to share the same philosophy as JSON itself. Simple, dumb, out of the way.&lt;/p&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;p&gt;There are several ways to incorporate cJSON into your project.&lt;/p&gt; 
&lt;h4&gt;copying the source&lt;/h4&gt; 
&lt;p&gt;Because the entire library is only one C file and one header file, you can just copy &lt;code&gt;cJSON.h&lt;/code&gt; and &lt;code&gt;cJSON.c&lt;/code&gt; to your projects source and start using it.&lt;/p&gt; 
&lt;p&gt;cJSON is written in ANSI C (C89) in order to support as many platforms and compilers as possible.&lt;/p&gt; 
&lt;h4&gt;CMake&lt;/h4&gt; 
&lt;p&gt;With CMake, cJSON supports a full blown build system. This way you get the most features. CMake with an equal or higher version than 2.8.5 is supported. With CMake it is recommended to do an out of tree build, meaning the compiled files are put in a directory separate from the source files. So in order to build cJSON with CMake on a Unix platform, make a &lt;code&gt;build&lt;/code&gt; directory and run CMake inside it.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake ..
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a Makefile and a bunch of other files. You can then compile it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And install it with &lt;code&gt;make install&lt;/code&gt; if you want. By default it installs the headers &lt;code&gt;/usr/local/include/cjson&lt;/code&gt; and the libraries to &lt;code&gt;/usr/local/lib&lt;/code&gt;. It also installs files for pkg-config to make it easier to detect and use an existing installation of CMake. And it installs CMake config files, that can be used by other CMake based projects to discover the library.&lt;/p&gt; 
&lt;p&gt;You can change the build process with a list of different options that you can pass to CMake. Turn them on with &lt;code&gt;On&lt;/code&gt; and off with &lt;code&gt;Off&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_CJSON_TEST=On&lt;/code&gt;: Enable building the tests. (on by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_CJSON_UTILS=On&lt;/code&gt;: Enable building cJSON_Utils. (off by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_TARGET_EXPORT=On&lt;/code&gt;: Enable the export of CMake targets. Turn off if it makes problems. (on by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_CUSTOM_COMPILER_FLAGS=On&lt;/code&gt;: Enable custom compiler flags (currently for Clang, GCC and MSVC). Turn off if it makes problems. (on by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_VALGRIND=On&lt;/code&gt;: Run tests with &lt;a href=&quot;http://valgrind.org&quot;&gt;valgrind&lt;/a&gt;. (off by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_SANITIZERS=On&lt;/code&gt;: Compile cJSON with &lt;a href=&quot;https://github.com/google/sanitizers/wiki/AddressSanitizer&quot;&gt;AddressSanitizer&lt;/a&gt; and &lt;a href=&quot;https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html&quot;&gt;UndefinedBehaviorSanitizer&lt;/a&gt; enabled (if possible). (off by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_SAFE_STACK&lt;/code&gt;: Enable the &lt;a href=&quot;https://clang.llvm.org/docs/SafeStack.html&quot;&gt;SafeStack&lt;/a&gt; instrumentation pass. Currently only works with the Clang compiler. (off by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_SHARED_LIBS=On&lt;/code&gt;: Build the shared libraries. (on by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DBUILD_SHARED_AND_STATIC_LIBS=On&lt;/code&gt;: Build both shared and static libraries. (off by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DCMAKE_INSTALL_PREFIX=/usr&lt;/code&gt;: Set a prefix for the installation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_LOCALES=On&lt;/code&gt;: Enable the usage of localeconv method. ( on by default )&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DCJSON_OVERRIDE_BUILD_SHARED_LIBS=On&lt;/code&gt;: Enable overriding the value of &lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt; with &lt;code&gt;-DCJSON_BUILD_SHARED_LIBS&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-DENABLE_CJSON_VERSION_SO&lt;/code&gt;: Enable cJSON so version. ( on by default )&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are packaging cJSON for a distribution of Linux, you would probably take these steps for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake .. -DENABLE_CJSON_UTILS=On -DENABLE_CJSON_TEST=Off -DCMAKE_INSTALL_PREFIX=/usr
make
make DESTDIR=$pkgdir install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Windows CMake is usually used to create a Visual Studio solution file by running it inside the Developer Command Prompt for Visual Studio, for exact steps follow the official documentation from CMake and Microsoft and use the online search engine of your choice. The descriptions of the the options above still generally apply, although not all of them work on Windows.&lt;/p&gt; 
&lt;h4&gt;Makefile&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This Method is deprecated. Use CMake if at all possible. Makefile support is limited to fixing bugs.&lt;/p&gt; 
&lt;p&gt;If you don&#39;t have CMake available, but still have GNU make. You can use the makefile to build cJSON:&lt;/p&gt; 
&lt;p&gt;Run this command in the directory with the source code and it will automatically compile static and shared libraries and a little test program (not the full test suite).&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make all
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want, you can install the compiled library to your system using &lt;code&gt;make install&lt;/code&gt;. By default it will install the headers in &lt;code&gt;/usr/local/include/cjson&lt;/code&gt; and the libraries in &lt;code&gt;/usr/local/lib&lt;/code&gt;. But you can change this behavior by setting the &lt;code&gt;PREFIX&lt;/code&gt; and &lt;code&gt;DESTDIR&lt;/code&gt; variables: &lt;code&gt;make PREFIX=/usr DESTDIR=temp install&lt;/code&gt;. And uninstall them with: &lt;code&gt;make PREFIX=/usr DESTDIR=temp uninstall&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Meson&lt;/h4&gt; 
&lt;p&gt;To make cjson work in a project using meson, the libcjson dependency has to be included:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-meson&quot;&gt;project(&#39;c-json-example&#39;, &#39;c&#39;)

cjson = dependency(&#39;libcjson&#39;)

example = executable(
    &#39;example&#39;,
    &#39;example.c&#39;,
    dependencies: [cjson],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Vcpkg&lt;/h4&gt; 
&lt;p&gt;You can download and install cJSON using the &lt;a href=&quot;https://github.com/Microsoft/vcpkg&quot;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git
cd vcpkg
./bootstrap-vcpkg.sh
./vcpkg integrate install
vcpkg install cjson
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The cJSON port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&quot;https://github.com/Microsoft/vcpkg&quot;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; 
&lt;h3&gt;Including cJSON&lt;/h3&gt; 
&lt;p&gt;If you installed it via CMake or the Makefile, you can include cJSON like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &amp;lt;cjson/cJSON.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Data Structure&lt;/h3&gt; 
&lt;p&gt;cJSON represents JSON data using the &lt;code&gt;cJSON&lt;/code&gt; struct data type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;/* The cJSON structure: */
typedef struct cJSON
{
    struct cJSON *next;
    struct cJSON *prev;
    struct cJSON *child;
    int type;
    char *valuestring;
    /* writing to valueint is DEPRECATED, use cJSON_SetNumberValue instead */
    int valueint;
    double valuedouble;
    char *string;
} cJSON;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An item of this type represents a JSON value. The type is stored in &lt;code&gt;type&lt;/code&gt; as a bit-flag (&lt;strong&gt;this means that you cannot find out the type by just comparing the value of &lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;To check the type of an item, use the corresponding &lt;code&gt;cJSON_Is...&lt;/code&gt; function. It does a &lt;code&gt;NULL&lt;/code&gt; check followed by a type check and returns a boolean value if the item is of this type.&lt;/p&gt; 
&lt;p&gt;The type can be one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_Invalid&lt;/code&gt; (check with &lt;code&gt;cJSON_IsInvalid&lt;/code&gt;): Represents an invalid item that doesn&#39;t contain any value. You automatically have this type if you set the item to all zero bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_False&lt;/code&gt; (check with &lt;code&gt;cJSON_IsFalse&lt;/code&gt;): Represents a &lt;code&gt;false&lt;/code&gt; boolean value. You can also check for boolean values in general with &lt;code&gt;cJSON_IsBool&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_True&lt;/code&gt; (check with &lt;code&gt;cJSON_IsTrue&lt;/code&gt;): Represents a &lt;code&gt;true&lt;/code&gt; boolean value. You can also check for boolean values in general with &lt;code&gt;cJSON_IsBool&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_NULL&lt;/code&gt; (check with &lt;code&gt;cJSON_IsNull&lt;/code&gt;): Represents a &lt;code&gt;null&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_Number&lt;/code&gt; (check with &lt;code&gt;cJSON_IsNumber&lt;/code&gt;): Represents a number value. The value is stored as a double in &lt;code&gt;valuedouble&lt;/code&gt; and also in &lt;code&gt;valueint&lt;/code&gt;. If the number is outside of the range of an integer, &lt;code&gt;INT_MAX&lt;/code&gt; or &lt;code&gt;INT_MIN&lt;/code&gt; are used for &lt;code&gt;valueint&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_String&lt;/code&gt; (check with &lt;code&gt;cJSON_IsString&lt;/code&gt;): Represents a string value. It is stored in the form of a zero terminated string in &lt;code&gt;valuestring&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_Array&lt;/code&gt; (check with &lt;code&gt;cJSON_IsArray&lt;/code&gt;): Represent an array value. This is implemented by pointing &lt;code&gt;child&lt;/code&gt; to a linked list of &lt;code&gt;cJSON&lt;/code&gt; items that represent the values in the array. The elements are linked together using &lt;code&gt;next&lt;/code&gt; and &lt;code&gt;prev&lt;/code&gt;, where the first element has &lt;code&gt;prev.next == NULL&lt;/code&gt; and the last element &lt;code&gt;next == NULL&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_Object&lt;/code&gt; (check with &lt;code&gt;cJSON_IsObject&lt;/code&gt;): Represents an object value. Objects are stored same way as an array, the only difference is that the items in the object store their keys in &lt;code&gt;string&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_Raw&lt;/code&gt; (check with &lt;code&gt;cJSON_IsRaw&lt;/code&gt;): Represents any kind of JSON that is stored as a zero terminated array of characters in &lt;code&gt;valuestring&lt;/code&gt;. This can be used, for example, to avoid printing the same static JSON over and over again to save performance. cJSON will never create this type when parsing. Also note that cJSON doesn&#39;t check if it is valid JSON.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally there are the following two flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_IsReference&lt;/code&gt;: Specifies that the item that &lt;code&gt;child&lt;/code&gt; points to and/or &lt;code&gt;valuestring&lt;/code&gt; is not owned by this item, it is only a reference. So &lt;code&gt;cJSON_Delete&lt;/code&gt; and other functions will only deallocate this item, not its &lt;code&gt;child&lt;/code&gt;/&lt;code&gt;valuestring&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_StringIsConst&lt;/code&gt;: This means that &lt;code&gt;string&lt;/code&gt; points to a constant string. This means that &lt;code&gt;cJSON_Delete&lt;/code&gt; and other functions will not try to deallocate &lt;code&gt;string&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Working with the data structure&lt;/h3&gt; 
&lt;p&gt;For every value type there is a &lt;code&gt;cJSON_Create...&lt;/code&gt; function that can be used to create an item of that type. All of these will allocate a &lt;code&gt;cJSON&lt;/code&gt; struct that can later be deleted with &lt;code&gt;cJSON_Delete&lt;/code&gt;. Note that you have to delete them at some point, otherwise you will get a memory leak.&lt;br /&gt; &lt;strong&gt;Important&lt;/strong&gt;: If you have added an item to an array or an object already, you &lt;strong&gt;mustn&#39;t&lt;/strong&gt; delete it with &lt;code&gt;cJSON_Delete&lt;/code&gt;. Adding it to an array or object transfers its ownership so that when that array or object is deleted, it gets deleted as well. You also could use &lt;code&gt;cJSON_SetValuestring&lt;/code&gt; to change a &lt;code&gt;cJSON_String&lt;/code&gt;&#39;s &lt;code&gt;valuestring&lt;/code&gt;, and you needn&#39;t to free the previous &lt;code&gt;valuestring&lt;/code&gt; manually.&lt;/p&gt; 
&lt;h4&gt;Basic types&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;null&lt;/strong&gt; is created with &lt;code&gt;cJSON_CreateNull&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;booleans&lt;/strong&gt; are created with &lt;code&gt;cJSON_CreateTrue&lt;/code&gt;, &lt;code&gt;cJSON_CreateFalse&lt;/code&gt; or &lt;code&gt;cJSON_CreateBool&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;numbers&lt;/strong&gt; are created with &lt;code&gt;cJSON_CreateNumber&lt;/code&gt;. This will set both &lt;code&gt;valuedouble&lt;/code&gt; and &lt;code&gt;valueint&lt;/code&gt;. If the number is outside of the range of an integer, &lt;code&gt;INT_MAX&lt;/code&gt; or &lt;code&gt;INT_MIN&lt;/code&gt; are used for &lt;code&gt;valueint&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;strings&lt;/strong&gt; are created with &lt;code&gt;cJSON_CreateString&lt;/code&gt; (copies the string) or with &lt;code&gt;cJSON_CreateStringReference&lt;/code&gt; (directly points to the string. This means that &lt;code&gt;valuestring&lt;/code&gt; won&#39;t be deleted by &lt;code&gt;cJSON_Delete&lt;/code&gt; and you are responsible for its lifetime, useful for constants)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Arrays&lt;/h4&gt; 
&lt;p&gt;You can create an empty array with &lt;code&gt;cJSON_CreateArray&lt;/code&gt;. &lt;code&gt;cJSON_CreateArrayReference&lt;/code&gt; can be used to create an array that doesn&#39;t &quot;own&quot; its content, so its content doesn&#39;t get deleted by &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To add items to an array, use &lt;code&gt;cJSON_AddItemToArray&lt;/code&gt; to append items to the end. Using &lt;code&gt;cJSON_AddItemReferenceToArray&lt;/code&gt; an element can be added as a reference to another item, array or string. This means that &lt;code&gt;cJSON_Delete&lt;/code&gt; will not delete that items &lt;code&gt;child&lt;/code&gt; or &lt;code&gt;valuestring&lt;/code&gt; properties, so no double frees are occurring if they are already used elsewhere. To insert items in the middle, use &lt;code&gt;cJSON_InsertItemInArray&lt;/code&gt;. It will insert an item at the given 0 based index and shift all the existing items to the right.&lt;/p&gt; 
&lt;p&gt;If you want to take an item out of an array at a given index and continue using it, use &lt;code&gt;cJSON_DetachItemFromArray&lt;/code&gt;, it will return the detached item, so be sure to assign it to a pointer, otherwise you will have a memory leak.&lt;/p&gt; 
&lt;p&gt;Deleting items is done with &lt;code&gt;cJSON_DeleteItemFromArray&lt;/code&gt;. It works like &lt;code&gt;cJSON_DetachItemFromArray&lt;/code&gt;, but deletes the detached item via &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also replace an item in an array in place. Either with &lt;code&gt;cJSON_ReplaceItemInArray&lt;/code&gt; using an index or with &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; given a pointer to an element. &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt; if it fails. What this does internally is to detach the old item, delete it and insert the new item in its place.&lt;/p&gt; 
&lt;p&gt;To get the size of an array, use &lt;code&gt;cJSON_GetArraySize&lt;/code&gt;. Use &lt;code&gt;cJSON_GetArrayItem&lt;/code&gt; to get an element at a given index.&lt;/p&gt; 
&lt;p&gt;Because an array is stored as a linked list, iterating it via index is inefficient (&lt;code&gt;O(n²)&lt;/code&gt;), so you can iterate over an array using the &lt;code&gt;cJSON_ArrayForEach&lt;/code&gt; macro in &lt;code&gt;O(n)&lt;/code&gt; time complexity.&lt;/p&gt; 
&lt;h4&gt;Objects&lt;/h4&gt; 
&lt;p&gt;You can create an empty object with &lt;code&gt;cJSON_CreateObject&lt;/code&gt;. &lt;code&gt;cJSON_CreateObjectReference&lt;/code&gt; can be used to create an object that doesn&#39;t &quot;own&quot; its content, so its content doesn&#39;t get deleted by &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To add items to an object, use &lt;code&gt;cJSON_AddItemToObject&lt;/code&gt;. Use &lt;code&gt;cJSON_AddItemToObjectCS&lt;/code&gt; to add an item to an object with a name that is a constant or reference (key of the item, &lt;code&gt;string&lt;/code&gt; in the &lt;code&gt;cJSON&lt;/code&gt; struct), so that it doesn&#39;t get freed by &lt;code&gt;cJSON_Delete&lt;/code&gt;. Using &lt;code&gt;cJSON_AddItemReferenceToArray&lt;/code&gt; an element can be added as a reference to another object, array or string. This means that &lt;code&gt;cJSON_Delete&lt;/code&gt; will not delete that items &lt;code&gt;child&lt;/code&gt; or &lt;code&gt;valuestring&lt;/code&gt; properties, so no double frees are occurring if they are already used elsewhere.&lt;/p&gt; 
&lt;p&gt;If you want to take an item out of an object, use &lt;code&gt;cJSON_DetachItemFromObjectCaseSensitive&lt;/code&gt;, it will return the detached item, so be sure to assign it to a pointer, otherwise you will have a memory leak.&lt;/p&gt; 
&lt;p&gt;Deleting items is done with &lt;code&gt;cJSON_DeleteItemFromObjectCaseSensitive&lt;/code&gt;. It works like &lt;code&gt;cJSON_DetachItemFromObjectCaseSensitive&lt;/code&gt; followed by &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also replace an item in an object in place. Either with &lt;code&gt;cJSON_ReplaceItemInObjectCaseSensitive&lt;/code&gt; using a key or with &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; given a pointer to an element. &lt;code&gt;cJSON_ReplaceItemViaPointer&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt; if it fails. What this does internally is to detach the old item, delete it and insert the new item in its place.&lt;/p&gt; 
&lt;p&gt;To get the size of an object, you can use &lt;code&gt;cJSON_GetArraySize&lt;/code&gt;, this works because internally objects are stored as arrays.&lt;/p&gt; 
&lt;p&gt;If you want to access an item in an object, use &lt;code&gt;cJSON_GetObjectItemCaseSensitive&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To iterate over an object, you can use the &lt;code&gt;cJSON_ArrayForEach&lt;/code&gt; macro the same way as for arrays.&lt;/p&gt; 
&lt;p&gt;cJSON also provides convenient helper functions for quickly creating a new item and adding it to an object, like &lt;code&gt;cJSON_AddNullToObject&lt;/code&gt;. They return a pointer to the new item or &lt;code&gt;NULL&lt;/code&gt; if they failed.&lt;/p&gt; 
&lt;h3&gt;Parsing JSON&lt;/h3&gt; 
&lt;p&gt;Given some JSON in a zero terminated string, you can parse it with &lt;code&gt;cJSON_Parse&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;cJSON *json = cJSON_Parse(string);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Given some JSON in a string (whether zero terminated or not), you can parse it with &lt;code&gt;cJSON_ParseWithLength&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;cJSON *json = cJSON_ParseWithLength(string, buffer_length);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will parse the JSON and allocate a tree of &lt;code&gt;cJSON&lt;/code&gt; items that represents it. Once it returns, you are fully responsible for deallocating it after use with &lt;code&gt;cJSON_Delete&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The allocator used by &lt;code&gt;cJSON_Parse&lt;/code&gt; is &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; by default but can be changed (globally) with &lt;code&gt;cJSON_InitHooks&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If an error occurs a pointer to the position of the error in the input string can be accessed using &lt;code&gt;cJSON_GetErrorPtr&lt;/code&gt;. Note though that this can produce race conditions in multithreading scenarios, in that case it is better to use &lt;code&gt;cJSON_ParseWithOpts&lt;/code&gt; with &lt;code&gt;return_parse_end&lt;/code&gt;. By default, characters in the input string that follow the parsed JSON will not be considered as an error.&lt;/p&gt; 
&lt;p&gt;If you want more options, use &lt;code&gt;cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)&lt;/code&gt;. &lt;code&gt;return_parse_end&lt;/code&gt; returns a pointer to the end of the JSON in the input string or the position that an error occurs at (thereby replacing &lt;code&gt;cJSON_GetErrorPtr&lt;/code&gt; in a thread safe way). &lt;code&gt;require_null_terminated&lt;/code&gt;, if set to &lt;code&gt;1&lt;/code&gt; will make it an error if the input string contains data after the JSON.&lt;/p&gt; 
&lt;p&gt;If you want more options giving buffer length, use &lt;code&gt;cJSON_ParseWithLengthOpts(const char *value, size_t buffer_length, const char **return_parse_end, cJSON_bool require_null_terminated)&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Printing JSON&lt;/h3&gt; 
&lt;p&gt;Given a tree of &lt;code&gt;cJSON&lt;/code&gt; items, you can print them as a string using &lt;code&gt;cJSON_Print&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;char *string = cJSON_Print(json);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will allocate a string and print a JSON representation of the tree into it. Once it returns, you are fully responsible for deallocating it after use with your allocator. (usually &lt;code&gt;free&lt;/code&gt;, depends on what has been set with &lt;code&gt;cJSON_InitHooks&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cJSON_Print&lt;/code&gt; will print with whitespace for formatting. If you want to print without formatting, use &lt;code&gt;cJSON_PrintUnformatted&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you have a rough idea of how big your resulting string will be, you can use &lt;code&gt;cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)&lt;/code&gt;. &lt;code&gt;fmt&lt;/code&gt; is a boolean to turn formatting with whitespace on and off. &lt;code&gt;prebuffer&lt;/code&gt; specifies the first buffer size to use for printing. &lt;code&gt;cJSON_Print&lt;/code&gt; currently uses 256 bytes for its first buffer size. Once printing runs out of space, a new buffer is allocated and the old gets copied over before printing is continued.&lt;/p&gt; 
&lt;p&gt;These dynamic buffer allocations can be completely avoided by using &lt;code&gt;cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format)&lt;/code&gt;. It takes a buffer to a pointer to print to and its length. If the length is reached, printing will fail and it returns &lt;code&gt;0&lt;/code&gt;. In case of success, &lt;code&gt;1&lt;/code&gt; is returned. Note that you should provide 5 bytes more than is actually needed, because cJSON is not 100% accurate in estimating if the provided memory is enough.&lt;/p&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;p&gt;In this example we want to build and parse the following JSON:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;name&quot;: &quot;Awesome 4K&quot;,
    &quot;resolutions&quot;: [
        {
            &quot;width&quot;: 1280,
            &quot;height&quot;: 720
        },
        {
            &quot;width&quot;: 1920,
            &quot;height&quot;: 1080
        },
        {
            &quot;width&quot;: 3840,
            &quot;height&quot;: 2160
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Printing&lt;/h4&gt; 
&lt;p&gt;Let&#39;s build the above JSON and print it to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;//create a monitor with a list of supported resolutions
//NOTE: Returns a heap allocated string, you are required to free it after use.
char *create_monitor(void)
{
    const unsigned int resolution_numbers[3][2] = {
        {1280, 720},
        {1920, 1080},
        {3840, 2160}
    };
    char *string = NULL;
    cJSON *name = NULL;
    cJSON *resolutions = NULL;
    cJSON *resolution = NULL;
    cJSON *width = NULL;
    cJSON *height = NULL;
    size_t index = 0;

    cJSON *monitor = cJSON_CreateObject();
    if (monitor == NULL)
    {
        goto end;
    }

    name = cJSON_CreateString(&quot;Awesome 4K&quot;);
    if (name == NULL)
    {
        goto end;
    }
    /* after creation was successful, immediately add it to the monitor,
     * thereby transferring ownership of the pointer to it */
    cJSON_AddItemToObject(monitor, &quot;name&quot;, name);

    resolutions = cJSON_CreateArray();
    if (resolutions == NULL)
    {
        goto end;
    }
    cJSON_AddItemToObject(monitor, &quot;resolutions&quot;, resolutions);

    for (index = 0; index &amp;lt; (sizeof(resolution_numbers) / (2 * sizeof(int))); ++index)
    {
        resolution = cJSON_CreateObject();
        if (resolution == NULL)
        {
            goto end;
        }
        cJSON_AddItemToArray(resolutions, resolution);

        width = cJSON_CreateNumber(resolution_numbers[index][0]);
        if (width == NULL)
        {
            goto end;
        }
        cJSON_AddItemToObject(resolution, &quot;width&quot;, width);

        height = cJSON_CreateNumber(resolution_numbers[index][1]);
        if (height == NULL)
        {
            goto end;
        }
        cJSON_AddItemToObject(resolution, &quot;height&quot;, height);
    }

    string = cJSON_Print(monitor);
    if (string == NULL)
    {
        fprintf(stderr, &quot;Failed to print monitor.\n&quot;);
    }

end:
    cJSON_Delete(monitor);
    return string;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively we can use the &lt;code&gt;cJSON_Add...ToObject&lt;/code&gt; helper functions to make our lives a little easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;//NOTE: Returns a heap allocated string, you are required to free it after use.
char *create_monitor_with_helpers(void)
{
    const unsigned int resolution_numbers[3][2] = {
        {1280, 720},
        {1920, 1080},
        {3840, 2160}
    };
    char *string = NULL;
    cJSON *resolutions = NULL;
    size_t index = 0;

    cJSON *monitor = cJSON_CreateObject();

    if (cJSON_AddStringToObject(monitor, &quot;name&quot;, &quot;Awesome 4K&quot;) == NULL)
    {
        goto end;
    }

    resolutions = cJSON_AddArrayToObject(monitor, &quot;resolutions&quot;);
    if (resolutions == NULL)
    {
        goto end;
    }

    for (index = 0; index &amp;lt; (sizeof(resolution_numbers) / (2 * sizeof(int))); ++index)
    {
        cJSON *resolution = cJSON_CreateObject();

        if (cJSON_AddNumberToObject(resolution, &quot;width&quot;, resolution_numbers[index][0]) == NULL)
        {
            goto end;
        }

        if (cJSON_AddNumberToObject(resolution, &quot;height&quot;, resolution_numbers[index][1]) == NULL)
        {
            goto end;
        }

        cJSON_AddItemToArray(resolutions, resolution);
    }

    string = cJSON_Print(monitor);
    if (string == NULL)
    {
        fprintf(stderr, &quot;Failed to print monitor.\n&quot;);
    }

end:
    cJSON_Delete(monitor);
    return string;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Parsing&lt;/h4&gt; 
&lt;p&gt;In this example we will parse a JSON in the above format and check if the monitor supports a Full HD resolution while printing some diagnostic output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;/* return 1 if the monitor supports full hd, 0 otherwise */
int supports_full_hd(const char * const monitor)
{
    const cJSON *resolution = NULL;
    const cJSON *resolutions = NULL;
    const cJSON *name = NULL;
    int status = 0;
    cJSON *monitor_json = cJSON_Parse(monitor);
    if (monitor_json == NULL)
    {
        const char *error_ptr = cJSON_GetErrorPtr();
        if (error_ptr != NULL)
        {
            fprintf(stderr, &quot;Error before: %s\n&quot;, error_ptr);
        }
        status = 0;
        goto end;
    }

    name = cJSON_GetObjectItemCaseSensitive(monitor_json, &quot;name&quot;);
    if (cJSON_IsString(name) &amp;amp;&amp;amp; (name-&amp;gt;valuestring != NULL))
    {
        printf(&quot;Checking monitor \&quot;%s\&quot;\n&quot;, name-&amp;gt;valuestring);
    }

    resolutions = cJSON_GetObjectItemCaseSensitive(monitor_json, &quot;resolutions&quot;);
    cJSON_ArrayForEach(resolution, resolutions)
    {
        cJSON *width = cJSON_GetObjectItemCaseSensitive(resolution, &quot;width&quot;);
        cJSON *height = cJSON_GetObjectItemCaseSensitive(resolution, &quot;height&quot;);

        if (!cJSON_IsNumber(width) || !cJSON_IsNumber(height))
        {
            status = 0;
            goto end;
        }

        if ((width-&amp;gt;valuedouble == 1920) &amp;amp;&amp;amp; (height-&amp;gt;valuedouble == 1080))
        {
            status = 1;
            goto end;
        }
    }

end:
    cJSON_Delete(monitor_json);
    return status;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that there are no NULL checks except for the result of &lt;code&gt;cJSON_Parse&lt;/code&gt; because &lt;code&gt;cJSON_GetObjectItemCaseSensitive&lt;/code&gt; checks for &lt;code&gt;NULL&lt;/code&gt; inputs already, so a &lt;code&gt;NULL&lt;/code&gt; value is just propagated and &lt;code&gt;cJSON_IsNumber&lt;/code&gt; and &lt;code&gt;cJSON_IsString&lt;/code&gt; return &lt;code&gt;0&lt;/code&gt; if the input is &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Caveats&lt;/h3&gt; 
&lt;h4&gt;Zero Character&lt;/h4&gt; 
&lt;p&gt;cJSON doesn&#39;t support strings that contain the zero character &lt;code&gt;&#39;\0&#39;&lt;/code&gt; or &lt;code&gt;\u0000&lt;/code&gt;. This is impossible with the current API because strings are zero terminated.&lt;/p&gt; 
&lt;h4&gt;Character Encoding&lt;/h4&gt; 
&lt;p&gt;cJSON only supports UTF-8 encoded input. In most cases it doesn&#39;t reject invalid UTF-8 as input though, it just propagates it through as is. As long as the input doesn&#39;t contain invalid UTF-8, the output will always be valid UTF-8.&lt;/p&gt; 
&lt;h4&gt;C Standard&lt;/h4&gt; 
&lt;p&gt;cJSON is written in ANSI C (or C89, C90). If your compiler or C library doesn&#39;t follow this standard, correct behavior is not guaranteed.&lt;/p&gt; 
&lt;p&gt;NOTE: ANSI C is not C++ therefore it shouldn&#39;t be compiled with a C++ compiler. You can compile it with a C compiler and link it with your C++ code however. Although compiling with a C++ compiler might work, correct behavior is not guaranteed.&lt;/p&gt; 
&lt;h4&gt;Floating Point Numbers&lt;/h4&gt; 
&lt;p&gt;cJSON does not officially support any &lt;code&gt;double&lt;/code&gt; implementations other than IEEE754 double precision floating point numbers. It might still work with other implementations but bugs with these will be considered invalid.&lt;/p&gt; 
&lt;p&gt;The maximum length of a floating point literal that cJSON supports is currently 63 characters.&lt;/p&gt; 
&lt;h4&gt;Deep Nesting Of Arrays And Objects&lt;/h4&gt; 
&lt;p&gt;cJSON doesn&#39;t support arrays and objects that are nested too deeply because this would result in a stack overflow. To prevent this cJSON limits the depth to &lt;code&gt;CJSON_NESTING_LIMIT&lt;/code&gt; which is 1000 by default but can be changed at compile time.&lt;/p&gt; 
&lt;h4&gt;Thread Safety&lt;/h4&gt; 
&lt;p&gt;In general cJSON is &lt;strong&gt;not thread safe&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;However it is thread safe under the following conditions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_GetErrorPtr&lt;/code&gt; is never used (the &lt;code&gt;return_parse_end&lt;/code&gt; parameter of &lt;code&gt;cJSON_ParseWithOpts&lt;/code&gt; can be used instead)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cJSON_InitHooks&lt;/code&gt; is only ever called before using cJSON in any threads.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;setlocale&lt;/code&gt; is never called before all calls to cJSON functions have returned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Case Sensitivity&lt;/h4&gt; 
&lt;p&gt;When cJSON was originally created, it didn&#39;t follow the JSON standard and didn&#39;t make a distinction between uppercase and lowercase letters. If you want the correct, standard compliant, behavior, you need to use the &lt;code&gt;CaseSensitive&lt;/code&gt; functions where available.&lt;/p&gt; 
&lt;h4&gt;Duplicate Object Members&lt;/h4&gt; 
&lt;p&gt;cJSON supports parsing and printing JSON that contains objects that have multiple members with the same name. &lt;code&gt;cJSON_GetObjectItemCaseSensitive&lt;/code&gt; however will always only return the first one.&lt;/p&gt; 
&lt;h1&gt;Enjoy cJSON!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Dave Gamble (original author)&lt;/li&gt; 
 &lt;li&gt;Max Bruckner and Alan Wang (current maintainer)&lt;/li&gt; 
 &lt;li&gt;and the other &lt;a href=&quot;https://raw.githubusercontent.com/DaveGamble/cJSON/master/CONTRIBUTORS.md&quot;&gt;cJSON contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sandboxie-plus/Sandboxie</title>
      <link>https://github.com/sandboxie-plus/Sandboxie</link>
      <description>&lt;p&gt;Sandboxie Plus &amp; Classic&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sandboxie Plus / Classic&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; EN | &lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/README_zh_CN.md&quot;&gt;中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/LICENSE.Plus&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Plus%20license-Custom%20-blue.svg?sanitize=true&quot; alt=&quot;Plus license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/LICENSE.Classic&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/Sandboxie-Plus/Sandboxie?label=Classic%20license&amp;amp;color=blue&quot; alt=&quot;Classic license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/sandboxie-plus/Sandboxie.svg?sanitize=true&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/sandboxie-plus/Sandboxie/all.svg?label=pre-release&quot; alt=&quot;GitHub Pre-Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/actions&quot;&gt;&lt;img src=&quot;https://github.com/sandboxie-plus/Sandboxie/actions/workflows/main.yml/badge.svg?sanitize=true&quot; alt=&quot;GitHub Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/actions/workflows/codespell.yml&quot;&gt;&lt;img src=&quot;https://github.com/sandboxie-plus/Sandboxie/actions/workflows/codespell.yml/badge.svg?sanitize=true&quot; alt=&quot;GitHub Codespell Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/actions/workflows/winget.yml&quot;&gt;&lt;img src=&quot;https://github.com/sandboxie-plus/Sandboxie/actions/workflows/winget.yml/badge.svg?sanitize=true&quot; alt=&quot;WinGet Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gurubase.io/g/sandboxie&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Sandboxie%20Guru-006BFF&quot; alt=&quot;Gurubase&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.wilderssecurity.com/threads/updated-sandboxie-plus-roadmap.456886/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Roadmap-Link%20-blue?style=for-the-badge&quot; alt=&quot;Roadmap&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/S4tFu6Enne&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Join-Our%20Discord%20Server%20for%20bugs,%20feedback%20and%20more!-blue?style=for-the-badge&amp;amp;logo=discord&quot; alt=&quot;Join our Discord Server&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;System requirements&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Release notes&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Contribution guidelines&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Security policy&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Code of Conduct&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;Windows 7 or higher, 32-bit or 64-bit.&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/CODE_OF_CONDUCT.md&quot;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Sandboxie is a sandbox-based isolation software for 32-bit and 64-bit Windows NT-based operating systems. It creates a sandbox-like isolated operating environment in which applications can be run or installed without permanently modifying local &amp;amp; mapped drives or the Windows registry. An isolated virtual environment allows controlled testing of untrusted programs and web surfing.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Sandboxie allows you to create virtually unlimited sandboxes and run them alone or simultaneously to isolate programs from the host and each other, while also allowing you to run as many programs simultaneously in a single box as you wish.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: This is a community fork that took place after the release of the Sandboxie source code and not the official continuation of the previous development (see the &lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/README.md#-project-history&quot;&gt;project history&lt;/a&gt; and &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/issues/2926&quot;&gt;#2926&lt;/a&gt;).&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;⏬ Download&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/releases/latest&quot;&gt;Latest Release&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/CHANGELOG.md&quot;&gt;EN&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Features&lt;/h2&gt; 
&lt;p&gt;Sandboxie is available in two editions, Plus and Classic. They both share the same core components, this means they have the same level of security and compatibility. What&#39;s different is the availability of features in the user interface.&lt;/p&gt; 
&lt;p&gt;Sandboxie Plus has a modern Qt-based UI, which supports all new features that have been added since the project went open source:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Snapshot Manager - takes a copy of any box in order to be restored when needed&lt;/li&gt; 
 &lt;li&gt;Maintenance menu - allows to uninstall/install/start/stop Sandboxie driver and service when needed&lt;/li&gt; 
 &lt;li&gt;Portable mode - you can run the installer and choose to extract all files to a directory&lt;/li&gt; 
 &lt;li&gt;Additional UI options to block access to Windows components like printer spooler and clipboard&lt;/li&gt; 
 &lt;li&gt;More customization options for Start/Run and Internet access restrictions&lt;/li&gt; 
 &lt;li&gt;Privacy mode sandboxes that protect user data from illegitimate access&lt;/li&gt; 
 &lt;li&gt;Security enhanced sandboxes that restrict the availability of syscalls and endpoints&lt;/li&gt; 
 &lt;li&gt;Global hotkeys to suspend or terminate all boxed processes&lt;/li&gt; 
 &lt;li&gt;A network firewall per sandbox which supports Windows Filtering Platform (WFP)&lt;/li&gt; 
 &lt;li&gt;The list of sandboxes can be searched with the shortcut key Ctrl+F&lt;/li&gt; 
 &lt;li&gt;A search function for Global Settings and Sandbox Options&lt;/li&gt; 
 &lt;li&gt;Ability to import/export sandboxes to and from 7z files&lt;/li&gt; 
 &lt;li&gt;Integration of sandboxes into the Windows Start menu&lt;/li&gt; 
 &lt;li&gt;A browser compatibility wizard to create templates for unsupported browsers&lt;/li&gt; 
 &lt;li&gt;Vintage View mode to reproduce the graphical appearance of Sandboxie Control&lt;/li&gt; 
 &lt;li&gt;A troubleshooting wizard to assist users with their problems&lt;/li&gt; 
 &lt;li&gt;An Add-on manager to extend or add functionality via additional components&lt;/li&gt; 
 &lt;li&gt;Protections of sandboxes against the host, including the prevention of taking screenshots&lt;/li&gt; 
 &lt;li&gt;A trigger system to perform actions, when a sandbox goes through different stages, like initialization, box start, termination or file recovery&lt;/li&gt; 
 &lt;li&gt;Make a process not sandboxed, but its child processes sandboxed&lt;/li&gt; 
 &lt;li&gt;Sandboxing as a unit of control to force programs to automatically use the SOCKS5 proxy&lt;/li&gt; 
 &lt;li&gt;DNS resolution control with sandboxing as control granularity&lt;/li&gt; 
 &lt;li&gt;Limit the number of processes in the sandbox and the total amount of memory space they can occupy, and You can limit the total number of sandboxed processes per box&lt;/li&gt; 
 &lt;li&gt;A completely different token creation mechanism from Sandboxie&#39;s pre-open-source version makes sandboxes more independent in the system&lt;/li&gt; 
 &lt;li&gt;Encrypted Sandbox - an AES-based reliable data storage solution&lt;/li&gt; 
 &lt;li&gt;Prevent sandboxed programs from generating unnecessary unique identifier in the normal way&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More features can be spotted by finding the sign &lt;code&gt;=&lt;/code&gt; through the shortcut key Ctrl+F in the &lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/CHANGELOG.md&quot;&gt;CHANGELOG.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;Sandboxie Classic has the old no longer developed MFC-based UI, hence it lacks native interface support for Plus features. Although some of the missing features can be configured manually in the Sandboxie.ini configuration file or even replaced with &lt;a href=&quot;https://sandboxie-website-archive.github.io/www.sandboxie.com/old-forums/viewforum1a2d1a2d.html?f=22&quot;&gt;custom scripts&lt;/a&gt;, the Classic edition is not recommended for users who want to explore the latest security options.&lt;/p&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;A GitHub copy of the &lt;a href=&quot;https://sandboxie-plus.github.io/sandboxie-docs&quot;&gt;Sandboxie documentation&lt;/a&gt; is currently maintained, although more volunteers are needed to keep it updated with the new changes. It is recommended to also check the following labels to track current issues: &lt;a href=&quot;https://github.com/sandboxie-plus/Sandboxie/labels&quot;&gt;Labels · sandboxie-plus/Sandboxie&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A partial archive of the &lt;a href=&quot;https://sandboxie-website-archive.github.io/www.sandboxie.com/old-forums&quot;&gt;old Sandboxie forum&lt;/a&gt; that was previously maintained by Invincea is still available. If you need to find something specific, it is possible to use the following search query: &lt;code&gt;site:https://sandboxie-website-archive.github.io/www.sandboxie.com/old-forums/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Useful tools for Sandboxie&lt;/h2&gt; 
&lt;p&gt;Sandboxie&#39;s functionality can be enhanced with specialized tools like the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sandboxie-plus/LogApiDll&quot;&gt;LogApiDll&lt;/a&gt; - adds a verbose output to Sandboxie&#39;s trace log, listing invocations of relevant Windows API functions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VeroFess/SbieHide&quot;&gt;SbieHide&lt;/a&gt; - attempts to hide the presence of SbieDll.dll from the application being sandboxed&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/blap/SandboxToys2&quot;&gt;SandboxToys2&lt;/a&gt; - allows to monitor files and registry changes in a sandbox&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sandboxie-plus/sbiextra&quot;&gt;Sbiextra&lt;/a&gt; - adds additional user mode restrictions to sandboxed processes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UserUnknownFactor/WrapLocale&quot;&gt;WrapLocale&lt;/a&gt; - provide more flexible locale pretending options than native LangId feature&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📌 Project history&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Timeline&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Maintainer&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;2004 - 2013&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Ronen Tzur&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;2013 - 2017&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Invincea Inc.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;2017 - 2020&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Sophos Group plc&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;8 April 2020 - &lt;a href=&quot;https://community.sophos.com/sandboxie/f/forum/119641/important-sandboxie-open-source-code-is-available-for-download&quot;&gt;open-source code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Sophos Ltd.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;9 April 2020 onwards - project fork&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;David Xanatos&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Looking for older Sandboxie versions? Check the &lt;a href=&quot;https://github.com/sandboxie-plus/sandboxie-old&quot;&gt;version history&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the current &lt;a href=&quot;https://www.wilderssecurity.com/threads/updated-sandboxie-plus-roadmap.456886/&quot;&gt;roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📌 Project support / sponsorship&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://binary.ninja/&quot;&gt;&lt;img align=&quot;left&quot; height=&quot;64&quot; width=&quot;64&quot; src=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/.github/images/binja-love.png&quot; /&gt;&lt;/a&gt; Thank you &lt;a href=&quot;https://vector35.com/&quot;&gt;Vector 35&lt;/a&gt; for providing a &lt;a href=&quot;https://binary.ninja/&quot;&gt;Binary Ninja&lt;/a&gt; license to help with reverse engineering. &lt;br /&gt; Binary Ninja is a multi-platform interactive disassembler, decompiler, and binary analysis tool for reverse engineers, malware analysts, vulnerability researchers, and software developers.&lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://icons8.de/&quot;&gt;&lt;img align=&quot;left&quot; height=&quot;64&quot; width=&quot;64&quot; src=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/.github/images/Icons8_logo.png&quot; /&gt;&lt;/a&gt;Thank you &lt;a href=&quot;https://icons8.de/&quot;&gt;Icons8&lt;/a&gt; for providing icons for the project. &lt;br /&gt; &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Support the project&lt;/h2&gt; 
&lt;p&gt;If you find Sandboxie useful, then feel free to contribute through our &lt;a href=&quot;https://raw.githubusercontent.com/sandboxie-plus/Sandboxie/master/CONTRIBUTING.md&quot;&gt;Contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📑 Helpful Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DavidBerdik - Maintainer of &lt;a href=&quot;https://github.com/Sandboxie-Website-Archive/sandboxie-website-archive.github.io&quot;&gt;Sandboxie Website Archive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jackenmen - Maintainer of Chocolatey packages for Sandboxie (&lt;a href=&quot;https://github.com/Jackenmen/choco-auto/issues?q=is%3Aissue+Sandboxie&quot;&gt;support&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;vedantmgoyal9 - Maintainer of Winget Releaser for Sandboxie (&lt;a href=&quot;https://github.com/vedantmgoyal9/winget-releaser/issues?q=is%3Aissue+Sandboxie&quot;&gt;support&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;blap - Maintainer of &lt;a href=&quot;https://github.com/blap/SandboxToys2&quot;&gt;SandboxToys2&lt;/a&gt; addon&lt;/li&gt; 
 &lt;li&gt;diversenok - Security analysis &amp;amp; PoCs / Security fixes&lt;/li&gt; 
 &lt;li&gt;TechLord - Team-IRA / Reversing&lt;/li&gt; 
 &lt;li&gt;hg421 - Security analysis &amp;amp; PoCs / Code reviews&lt;/li&gt; 
 &lt;li&gt;hx1997 - Security analysis &amp;amp; PoC&lt;/li&gt; 
 &lt;li&gt;mpheath - Author of Plus installer / Code fixes / Collaborator&lt;/li&gt; 
 &lt;li&gt;offhub - Documentation additions / Code fixes / Qt5 patch and build script / Collaborator&lt;/li&gt; 
 &lt;li&gt;LumitoLuma - Qt5 patch and build script&lt;/li&gt; 
 &lt;li&gt;QZLin - Author of &lt;a href=&quot;https://sandboxie-plus.github.io/sandboxie-docs/&quot;&gt;sandboxie-docs&lt;/a&gt; theme&lt;/li&gt; 
 &lt;li&gt;isaak654 - Templates / Documentation / Code fixes / Collaborator&lt;/li&gt; 
 &lt;li&gt;typpos - UI additions / Documentation / Code fixes&lt;/li&gt; 
 &lt;li&gt;Yeyixiao - Feature additions&lt;/li&gt; 
 &lt;li&gt;Deezzir - Feature additions&lt;/li&gt; 
 &lt;li&gt;wzxjohn - Code fixes, Documentation additions&lt;/li&gt; 
 &lt;li&gt;okrc - Code fixes&lt;/li&gt; 
 &lt;li&gt;Sapour - Code fixes&lt;/li&gt; 
 &lt;li&gt;lmou523 - Code fixes&lt;/li&gt; 
 &lt;li&gt;sredna - Code fixes for Classic installer&lt;/li&gt; 
 &lt;li&gt;weihongx9315 - Code fix&lt;/li&gt; 
 &lt;li&gt;marti4d - Code fix&lt;/li&gt; 
 &lt;li&gt;jorgectf - CodeQL workflow&lt;/li&gt; 
 &lt;li&gt;stephtr - CI / Certification&lt;/li&gt; 
 &lt;li&gt;yfdyh000 - Localization support for Plus installer&lt;/li&gt; 
 &lt;li&gt;Dyras - Templates additions&lt;/li&gt; 
 &lt;li&gt;cricri-pingouin - UI fixes&lt;/li&gt; 
 &lt;li&gt;Valinwolf - UI / Icons&lt;/li&gt; 
 &lt;li&gt;daveout - UI / Icons&lt;/li&gt; 
 &lt;li&gt;kokofixcomputers - Support member of the &lt;a href=&quot;https://discord.gg/S4tFu6Enne&quot;&gt;Discord&lt;/a&gt; channel&lt;/li&gt; 
 &lt;li&gt;NewKidOnTheBlock - Changelog fixes&lt;/li&gt; 
 &lt;li&gt;Naeemh1 - Documentation additions&lt;/li&gt; 
 &lt;li&gt;APMichael - Templates additions&lt;/li&gt; 
 &lt;li&gt;1mm0rt41PC - Documentation additions&lt;/li&gt; 
 &lt;li&gt;Luro223 - Documentation additions&lt;/li&gt; 
 &lt;li&gt;lwcorp - Documentation additions&lt;/li&gt; 
 &lt;li&gt;wilders-soccerfan - Documentation additions&lt;/li&gt; 
 &lt;li&gt;LepordCat - Documentation additions&lt;/li&gt; 
 &lt;li&gt;stdedos - Documentation additions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌏 Translators&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;czoins - Arabic&lt;/li&gt; 
 &lt;li&gt;yuhao2348732, 0x391F, nkh0472, yfdyh000, gexgd0419, Zerorigin, UnnamedOrange, DevSplash, Becods, okrc, 4rt3mi5, sepcnt, fzxx, Vstory, GT-Stardust - Simplified Chinese&lt;/li&gt; 
 &lt;li&gt;TragicLifeHu, Hulen, xiongsp - Traditional Chinese&lt;/li&gt; 
 &lt;li&gt;RockyTDR - Dutch&lt;/li&gt; 
 &lt;li&gt;clexanis, Mmoi-Fr, hippalectryon-0, Monsieur Pissou - French (provided by email)&lt;/li&gt; 
 &lt;li&gt;bastik-1001, APMichael - German&lt;/li&gt; 
 &lt;li&gt;timinoun - Hungarian (provided by email)&lt;/li&gt; 
 &lt;li&gt;isaak654, DerivativeOfLog7 - Italian&lt;/li&gt; 
 &lt;li&gt;takahiro-itou, lllIIIlll - Japanese&lt;/li&gt; 
 &lt;li&gt;VenusGirl - Korean&lt;/li&gt; 
 &lt;li&gt;7zip, AndrzejRafalowski - Polish (&lt;a href=&quot;https://forum.xanasoft.com/threads/polish-translation.4/page-2&quot;&gt;provided separately&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;JNylson - Portuguese and Brazilian Portuguese&lt;/li&gt; 
 &lt;li&gt;lufog, marat2509 - Russian&lt;/li&gt; 
 &lt;li&gt;LumitoLuma, sebadamus - Spanish&lt;/li&gt; 
 &lt;li&gt;1FF, Thatagata - Swedish (provided by email or pull request)&lt;/li&gt; 
 &lt;li&gt;xorcan, fmbxnary, offhub - Turkish&lt;/li&gt; 
 &lt;li&gt;SuperMaxusa, lufog - Ukrainian&lt;/li&gt; 
 &lt;li&gt;GunGunGun - Vietnamese&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All translators are encouraged to look at the &lt;a href=&quot;https://git.io/J9G19&quot;&gt;Localization notes and tips&lt;/a&gt; before sending a translation.&lt;/p&gt; 
&lt;h2&gt;📚 Documentation Translators&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vstory, GT-Stardust, wzxjohn - Simplified Chinese&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All documentation translators are encouraged to look at the &lt;a href=&quot;https://github.com/sandboxie-plus/sandboxie-docs/issues/175#issuecomment-2840258519&quot;&gt;Multilingual Translation Contribution Guide&lt;/a&gt; before sending a translation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DarkFlippers/unleashed-firmware</title>
      <link>https://github.com/DarkFlippers/unleashed-firmware</link>
      <description>&lt;p&gt;Flipper Zero Unleashed Firmware&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/466c40d5-f6a1-444d-a235-d9026f7cd0ff&quot; align=&quot;center&quot; alt=&quot;Unleashed Firmware Logo&quot; border=&quot;0&quot; /&gt; &lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/flipperzero_unofficial&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?color=neon&amp;amp;style=flat&amp;amp;url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fflipperzero_unofficial&quot; alt=&quot;English Telegram Chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/flipperzero_unofficial_ru&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?color=neon&amp;amp;style=flat&amp;amp;url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fflipperzero_unofficial_ru&quot; alt=&quot;Russian Telegram Chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/flipperzero_unofficial_ua&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?color=neon&amp;amp;style=flat&amp;amp;url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fflipperzero_unofficial_ua&quot; alt=&quot;Ukraine Telegram Chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.unleashedflip.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/937479784148115456?style=flat&amp;amp;logo=discord&amp;amp;label=Discord&amp;amp;color=%237289DA&amp;amp;link=https%3A%2F%2Fdiscord.unleashedflip.com%2F&quot; alt=&quot;Discord Server&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Flipper Zero Unleashed Firmware&lt;/h1&gt; 
&lt;p&gt;This firmware is a fork of the original (OFW) version of &lt;a href=&quot;https://github.com/flipperdevices/flipperzero-firmware&quot;&gt;flipperdevices/flipperzero-firmware&lt;/a&gt; and represents the &lt;strong&gt;most stable&lt;/strong&gt; custom build, incorporating &lt;strong&gt;new features&lt;/strong&gt; and &lt;strong&gt;improvements&lt;/strong&gt; to the original components while remaining &lt;strong&gt;fully compatible&lt;/strong&gt; with the API and applications of the original firmware.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This software is intended solely for experimental purposes and is not meant for any illegal activities. We do not condone unlawful behavior and strongly encourage you to use it only within the bounds of the law.&lt;/p&gt; 
 &lt;p&gt;This project is developed independently and is not affiliated with Flipper Devices.&lt;/p&gt; 
 &lt;p&gt;Also be aware, DarkFlippers/unleashed-firmware is the only official page of the project, there is no paid, premium or closed source versions and if someone contacts you and say they are from our team and try to offer something like that - they are scammers, block that users ASAP&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;🚀 Usage&lt;/h2&gt; 
&lt;p&gt;Before getting started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Review the Official Documentation:&lt;/strong&gt; &lt;a href=&quot;https://docs.flipper.net&quot;&gt;docs.flipper.net&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Installation Guide &amp;amp; Version Info:&lt;/strong&gt;&lt;br /&gt; How to install the firmware by following the &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/HowToInstall.md&quot;&gt;Installation Guide&lt;/a&gt; and check the &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/CHANGELOG.md#recommended-update-option---web-updater&quot;&gt;version information&lt;/a&gt; (&lt;code&gt;e&lt;/code&gt;, &lt;code&gt; &lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FAQ:&lt;/strong&gt;&lt;br /&gt; Find answers to common questions in the &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/FAQ.md&quot;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Releases&lt;/h2&gt; 
&lt;h3&gt;Release builds (stable)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src=&quot;https://github.com/badges/shields/assets/10694593/c5c5acc3-f434-4a8d-a834-6d94a7ffb45a&quot; alt=&quot;Telegram&quot; title=&quot;Telegram&quot; width=&quot;14&quot; height=&quot;14&quot; /&gt; Telegram: &lt;a href=&quot;https://t.me/unleashed_fw&quot;&gt;t.me/unleashed_fw&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/releases&quot;&gt; &lt;img src=&quot;https://cdn.simpleicons.org/github/black/white&quot; alt=&quot;GitHub&quot; title=&quot;&quot; width=&quot;14&quot; height=&quot;14&quot; /&gt; GitHub Releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dev builds (unstable)&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Built automatically from dev branch&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web site: &lt;a href=&quot;https://dev.unleashedflip.com&quot;&gt;dev.unleashedflip.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src=&quot;https://github.com/badges/shields/assets/10694593/c5c5acc3-f434-4a8d-a834-6d94a7ffb45a&quot; alt=&quot;Telegram&quot; title=&quot;Telegram&quot; width=&quot;14&quot; height=&quot;14&quot; /&gt; Telegram: &lt;a href=&quot;https://t.me/kotnehleb&quot;&gt;t.me/kotnehleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🆕 What&#39;s New&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;Sub‑GHz Library &amp;amp; HAL&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Regional TX restrictions removed&lt;/li&gt; 
   &lt;li&gt;Extra Sub-GHz frequencies added&lt;/li&gt; 
   &lt;li&gt;Frequency range can be extended in settings file &lt;em&gt;(warning: It can damage Flipper&#39;s hardware)&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Many rolling code &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/#current-modified-and-new-sub-ghz-protocols-list&quot;&gt;protocols&lt;/a&gt; now have the ability to save &amp;amp; send captured signals&lt;/li&gt; 
   &lt;li&gt;FAAC SLH (Spa) &amp;amp; BFT Mitto (keeloq secure with seed) manual creation&lt;/li&gt; 
   &lt;li&gt;External CC1101 module support &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/pull/307&quot;&gt;(by quen0n)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;Sub‑GHz Main App&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Save last used settings &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/pull/77&quot;&gt;(by derskythe)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;New frequency analyzer &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/pull/43&quot;&gt;(by ClusterM)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Press OK in frequency analyzer to use detected frequency in Read modes &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/pull/77&quot;&gt;(by derskythe)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Long press OK button in Sub-GHz Frequency analyzer to switch to Read menu &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/pull/79&quot;&gt;(by derskythe)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;New option to use timestamps + protocol name when you saving file, instead of random name or timestamp only - Enable in &lt;code&gt;Radio Settings -&amp;gt; Protocol Names = ON&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Read mode UI improvements (shows time when signal was received) (by @wosk)&lt;/li&gt; 
   &lt;li&gt;External CC1101 module support (Hardware SPI used)&lt;/li&gt; 
   &lt;li&gt;External CC1101 module amplifier control (or LED control) support (enabled by default)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Hold right in received signal list to delete selected signal&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom buttons for Keeloq / Alutech AT4N / Nice Flor S / Somfy Telis / Security+ 2.0 / CAME Atomo&lt;/strong&gt; - now you can use arrow buttons to send signal with different button code&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Add manually&lt;/code&gt; menu extended with new protocols&lt;/li&gt; 
   &lt;li&gt;FAAC SLH, BFT Mitto / Somfy Telis / Nice Flor S / CAME Atomo, etc. manual creation with programming new remote into receiver (use button 0xF for BFT Mitto, 0x8 (Prog) on Somfy Telis, (right arrow button for other protocols))&lt;/li&gt; 
   &lt;li&gt;Debug mode counter increase settings (+1 → +5, +10, default: +1)&lt;/li&gt; 
   &lt;li&gt;Debug PIN output settings for protocol development&lt;/li&gt; 
   &lt;li&gt;Ignore options - Alarms: Hollarm, GangQi | Cars: Kia, Starline, ScherKhan | Sensors: Magellan, Honeywell, Honeywell WDB (doorbells), Legrand (doorbells), Feron (RGB lights)&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;Sub‑GHz Apps (by Unleashed Team)&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Sub-GHz Bruteforce - static code brute-force plugin&lt;/li&gt; 
   &lt;li&gt;Time delay (between signals) setting (hold Up in main screen (says Up to Save)) + configure repeats in protocols list by pressing right button on selected protocol&lt;/li&gt; 
   &lt;li&gt;Load your own file and select bytes you want to bruteforce or use preconfigured options in protocols list&lt;/li&gt; 
   &lt;li&gt;Sub-GHz Remote - remote control for 5 sub-ghz files | bind one file for each button&lt;/li&gt; 
   &lt;li&gt;use the built-in constructor or make config file by following this &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemotePlugin.md&quot;&gt;instruction&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;Infrared (IR)&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Recompiled IR TV Universal Remote for ALL buttons&lt;/li&gt; 
   &lt;li&gt;Universal remotes for Projectors, Fans, A/Cs and Audio(soundbars, etc.) → Also always updated and verified by our team&lt;/li&gt; 
   &lt;li&gt;Infrared → &lt;code&gt;RCA&lt;/code&gt; Protocol&lt;/li&gt; 
   &lt;li&gt;Infrared → External IR modules support (with autodetect by OFW)&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;NFC/RFID/iButton&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;ul&gt; 
   &lt;li&gt;LFRFID and iButton Fuzzer plugins&lt;/li&gt; 
   &lt;li&gt;Add DEZ 8 display form for EM4100 (by @korden32)&lt;/li&gt; 
   &lt;li&gt;Extra Mifare Classic keys in system dict&lt;/li&gt; 
   &lt;li&gt;EMV Protocol + Public data parser (by @Leptopt1los and @wosk)&lt;/li&gt; 
   &lt;li&gt;NFC &lt;code&gt;Add manually&lt;/code&gt; → Mifare Classic with custom UID&lt;/li&gt; 
   &lt;li&gt;NFC parsers: Umarsh, Zolotaya Korona, Kazan, Metromoney, Moscow Social Card, Troika (reworked) and &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/tree/dev/applications/main/nfc/plugins/supported_cards&quot;&gt;many others&lt;/a&gt; (by @Leptopt1los and @assasinfil)&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;Quality of Life &amp;amp; Other Features&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Customizable Flipper name &lt;strong&gt;Update! Now can be changed in Settings → Desktop&lt;/strong&gt; (by @xMasterX and @Willy-JL)&lt;/li&gt; 
   &lt;li&gt;Text Input UI element → Cursor feature (by @Willy-JL)&lt;/li&gt; 
   &lt;li&gt;Byte Input Mini editor → &lt;strong&gt;Press UP&lt;/strong&gt; multiple times until the nibble editor appears (by @gid9798)&lt;/li&gt; 
   &lt;li&gt;Clock on Desktop &lt;code&gt;Settings -&amp;gt; Desktop -&amp;gt; Show Clock&lt;/code&gt; (by @gid9798)&lt;/li&gt; 
   &lt;li&gt;Battery percentage display with different styles &lt;code&gt;Settings -&amp;gt; Desktop -&amp;gt; Battery View&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;More games in Dummy Mode → click or hold any of arrow buttons&lt;/li&gt; 
   &lt;li&gt;Lock device with pin (or regular lock if pin not set) by holding UP button on main screen &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/pull/107&quot;&gt;(by an4tur0r)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;BadKB&lt;/strong&gt; (BadUSB) &lt;a href=&quot;https://github.com/Flipper-XFW/Xtreme-Firmware/tree/dev/applications/main/bad_kb&quot;&gt;(by Willy-JL, ClaraCrazy, XFW contributors)&lt;/a&gt; - (Integrated into BadUSB app now!) - (aka BadUSB via Bluetooth)&lt;/li&gt; 
   &lt;li&gt;BadUSB → Keyboard layouts &lt;a href=&quot;https://github.com/dummy-decoy/flipperzero-firmware/tree/dummy_decoy/bad_usb_keyboard_layout&quot;&gt;(by rien &amp;gt; dummy-decoy)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Custom community plugins and games added + all known working apps can be downloaded in extra pack in every release&lt;/li&gt; 
   &lt;li&gt;Other small fixes and changes throughout&lt;/li&gt; 
   &lt;li&gt;See other changes in readme below&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Also check the &lt;a href=&quot;https://github.com/DarkFlippers/unleashed-firmware/releases&quot;&gt;changelog in releases&lt;/a&gt; for latest updates!&lt;/p&gt; 
&lt;h3&gt;Current modified and new Sub-GHz protocols list:&lt;/h3&gt; 
&lt;p&gt;Thanks to Official team (to their SubGHz Developer, Skorp) for implementing support (decoder + encoder / or decode only) for these protocols in OFW.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Not all Keeloq systems are supported for decoding or emulation!&lt;/p&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;strong&gt;Supported Keeloq manufacturers include&lt;/strong&gt;&lt;/summary&gt; 
  &lt;br /&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Column 1&lt;/th&gt; 
     &lt;th&gt;Column 2&lt;/th&gt; 
     &lt;th&gt;Column 3&lt;/th&gt; 
     &lt;th&gt;Column 4&lt;/th&gt; 
     &lt;th&gt;Column 5&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Alligator&lt;/td&gt; 
     &lt;td&gt;Comunello&lt;/td&gt; 
     &lt;td&gt;GSN&lt;/td&gt; 
     &lt;td&gt;Magic_4&lt;/td&gt; 
     &lt;td&gt;SL_A2-A4&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Alligator_S-275&lt;/td&gt; 
     &lt;td&gt;Dea_Mio&lt;/td&gt; 
     &lt;td&gt;Guard_RF-311A&lt;/td&gt; 
     &lt;td&gt;Mongoose&lt;/td&gt; 
     &lt;td&gt;SL_A6-A9/Tomahawk_9010&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;APS-1100_APS-2550&lt;/td&gt; 
     &lt;td&gt;DTM_Neo&lt;/td&gt; 
     &lt;td&gt;Harpoon&lt;/td&gt; 
     &lt;td&gt;Mutanco_Mutancode&lt;/td&gt; 
     &lt;td&gt;SL_B6,B9_dop&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Aprimatic&lt;/td&gt; 
     &lt;td&gt;DoorHan&lt;/td&gt; 
     &lt;td&gt;IronLogic&lt;/td&gt; 
     &lt;td&gt;NICE_MHOUSE&lt;/td&gt; 
     &lt;td&gt;Sommer(fsk476)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Beninca&lt;/td&gt; 
     &lt;td&gt;EcoStar&lt;/td&gt; 
     &lt;td&gt;JCM_Tech&lt;/td&gt; 
     &lt;td&gt;NICE_Smilo&lt;/td&gt; 
     &lt;td&gt;Stilmatic&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;BFT&lt;/td&gt; 
     &lt;td&gt;Elmes_Poland&lt;/td&gt; 
     &lt;td&gt;KEY&lt;/td&gt; 
     &lt;td&gt;Normstahl&lt;/td&gt; 
     &lt;td&gt;Teco&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Came_Space&lt;/td&gt; 
     &lt;td&gt;FAAC_RC,XT&lt;/td&gt; 
     &lt;td&gt;Kingates_Stylo4k&lt;/td&gt; 
     &lt;td&gt;Pantera&lt;/td&gt; 
     &lt;td&gt;Tomahawk_TZ-9030&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Cenmax&lt;/td&gt; 
     &lt;td&gt;FAAC_SLH&lt;/td&gt; 
     &lt;td&gt;KGB/Subaru&lt;/td&gt; 
     &lt;td&gt;Pantera_CLK&lt;/td&gt; 
     &lt;td&gt;Tomahawk_Z,X_3-5&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Cenmax_St-5&lt;/td&gt; 
     &lt;td&gt;Faraon&lt;/td&gt; 
     &lt;td&gt;Leopard&lt;/td&gt; 
     &lt;td&gt;Pantera_XS/Jaguar&lt;/td&gt; 
     &lt;td&gt;ZX-730-750-1055&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Cenmax_St-7&lt;/td&gt; 
     &lt;td&gt;Genius_Bravo&lt;/td&gt; 
     &lt;td&gt;Magic_1&lt;/td&gt; 
     &lt;td&gt;Partisan_RX&lt;/td&gt; 
     &lt;td&gt;IL-100(Smart)&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Centurion&lt;/td&gt; 
     &lt;td&gt;Gibidi&lt;/td&gt; 
     &lt;td&gt;Magic_2&lt;/td&gt; 
     &lt;td&gt;Reff&lt;/td&gt; 
     &lt;td&gt;Merlin&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Monarch&lt;/td&gt; 
     &lt;td&gt;Jolly Motors&lt;/td&gt; 
     &lt;td&gt;Magic_3&lt;/td&gt; 
     &lt;td&gt;Sheriff&lt;/td&gt; 
     &lt;td&gt;Steelmate&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;Motorline&lt;/td&gt; 
     &lt;td&gt;Rosh&lt;/td&gt; 
     &lt;td&gt;Pecinin&lt;/td&gt; 
     &lt;td&gt;Rossi&lt;/td&gt; 
     &lt;td&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/details&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;Decoders/Encoders or emulation (+ programming mode) support made by @xMasterX&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Roger (static 28 bit) with add manually support (by @xMasterX &amp;amp; @mishamyte)&lt;/li&gt; 
  &lt;li&gt;V2 Phoenix (Phox) (dynamic 52 bit) (by @xMasterX &amp;amp; @RocketGod-git)&lt;/li&gt; 
  &lt;li&gt;Marantec (static 49 bit) (add manually support and CRC verify) (by @xMasterX &amp;amp; @li0ard)&lt;/li&gt; 
  &lt;li&gt;Feron (static 32 bit)&lt;/li&gt; 
  &lt;li&gt;ReversRB2 / RB2M (static 64 bit) with add manually support&lt;/li&gt; 
  &lt;li&gt;Marantec24 (static 24 bit) with add manually support&lt;/li&gt; 
  &lt;li&gt;GangQi (static 34 bit) with button parsing and add manually support (thanks to @mishamyte for captures and testing, thanks @Skorpionm for help)&lt;/li&gt; 
  &lt;li&gt;Hollarm (static 42 bit) with button parsing and add manually support (thanks to @mishamyte for captures, thanks @Skorpionm for help)&lt;/li&gt; 
  &lt;li&gt;Hay21 (dynamic 21 bit) with button parsing&lt;/li&gt; 
  &lt;li&gt;Nero Radio 57bit (+ 56bit support)&lt;/li&gt; 
  &lt;li&gt;CAME 12bit/24bit encoder fixes (Fixes are now merged in OFW)&lt;/li&gt; 
  &lt;li&gt;Keeloq: Dea Mio, Genius Bravo, GSN, HCS101, AN-Motors, JCM Tech, MHouse, Nice Smilo, DTM Neo, FAAC RC,XT, Mutancode, Normstahl, Beninca + Allmatic, Stilmatic, CAME Space, Aprimatic (model TR and similar), Centurion Nova (thanks Carlos !), Hormann EcoStar, Novoferm, Sommer, Monarch (thanks @ashphx !), Jolly Motors (thanks @pkooiman !), IL-100(Smart) (thx Vitaly for RAWs), Motorline (with add manually support), Rosh, Pecinin, Rossi, Merlin, Steelmate (thanks @RocketGod-git)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;Protocols support made by Skorp (original implementation) and @xMasterX (current version)&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;CAME Atomo → Update! check out new &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Nice Flor S → How to create new remote - &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;FAAC SLH (Spa) → Update!!! (Programming mode!) Check out new &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Keeloq: BFT Mitto → Update! Check out new &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Star Line&lt;/li&gt; 
  &lt;li&gt;Security+ v1 &amp;amp; v2&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;code&gt;&lt;strong&gt;Encoders made by @assasinfil and @xMasterX&lt;/strong&gt;&lt;/code&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Somfy Telis → How to create new remote - &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Somfy Keytis&lt;/li&gt; 
  &lt;li&gt;KingGates Stylo 4k&lt;/li&gt; 
  &lt;li&gt;Alutech AT-4N → How to create new remote - &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Nice ON2E (Nice One) → How to create new remote - &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;❤️ Please support development of the project&lt;/h2&gt; 
&lt;p&gt;The majority of this project is developed and maintained by me, @xMasterX. Our team is small and the guys are working on this project as much as they can solely based on the enthusiasm they have for this project and the community.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;@Leptopt1los&lt;/code&gt; - NFC, RFID, Plugins, and many other things&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@gid9798&lt;/code&gt; - SubGHz, Plugins, many other things - currently offline :(&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@assasinfil&lt;/code&gt; - SubGHz protocols, NFC parsers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@Svaarich&lt;/code&gt; - UI design and animations&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;@amec0e&lt;/code&gt; - Infrared assets&lt;/li&gt; 
 &lt;li&gt;Community moderators in Telegram, Discord, and Reddit&lt;/li&gt; 
 &lt;li&gt;And of course our GitHub community. Your PRs are a very important part of this firmware and open-source development.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The amount of work done on this project is huge and we need your support, no matter how large or small. Even if you just say, &quot;Thank you Unleashed firmware developers!&quot; somewhere. Doing so will help us continue our work and will help drive us to make the firmware better every time. Also, regarding our releases, every build has and always will be free and open-source. There will be no paywall releases or closed-source apps within the firmware. As long as I am working on this project it will never happen.&lt;br /&gt; You can support us by using links or addresses below:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Remark&lt;/th&gt; 
   &lt;th&gt;QR Code&lt;/th&gt; 
   &lt;th&gt;Link/Wallet&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/patreon/dark/white&quot; alt=&quot;Patreon&quot; width=&quot;14&quot; /&gt; &lt;strong&gt;Patreon&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/a88a90a5-28c3-40b4-864a-0c0b79494a42&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://patreon.com/mmxdev&quot;&gt;patreon.com/mmxdev&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/boosty&quot; alt=&quot;Boosty&quot; width=&quot;14&quot; /&gt; &lt;strong&gt;Boosty&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;patreon alternative&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/893c0760-f738-42c1-acaa-916019a7bdf8&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://boosty.to/mmxdev&quot;&gt;boosty.to/mmxdev&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://gist.githubusercontent.com/m-xim/255a3ef36c886dec144a58864608084c/raw/71da807b4abbd1582e511c9ea30fad27f78d642a/cloudtips_icon.svg?sanitize=true&quot; alt=&quot;Cloudtips&quot; width=&quot;14&quot; /&gt; CloudTips&lt;/td&gt; 
   &lt;td&gt;only RU payments accepted&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/5de31d6a-ef24-4d30-bd8e-c06af815332a&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pay.cloudtips.ru/p/7b3e9d65&quot;&gt;pay.cloudtips.ru/p/7b3e9d65&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gist/PonomareVlad/55c8708f11702b4df629ae61129a9895/raw/1657350724dab66f2ad68ea034c480a2df2a1dfd/YooMoney.svg?sanitize=true&quot; alt=&quot;YooMoney&quot; width=&quot;14&quot; /&gt; YooMoney&lt;/td&gt; 
   &lt;td&gt;only RU payments accepted&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/33454f79-074b-4349-b453-f94fdadc3c68&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://yoomoney.ru/fundraise/XA49mgQLPA0.221209&quot;&gt;yoomoney.ru/fundraise/XA49mgQLPA0.221209&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/tether&quot; alt=&quot;USDT&quot; width=&quot;14&quot; /&gt; USDT&lt;/td&gt; 
   &lt;td&gt;TRC20&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/0500498d-18ed-412d-a1a4-8a66d0b6f057&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;TSXcitMSnWXUFqiUfEXrTVpVewXy2cYhrs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/ethereum&quot; alt=&quot;ETH&quot; width=&quot;14&quot; /&gt; ETH&lt;/td&gt; 
   &lt;td&gt;BSC/ERC20-Tokens&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/0f323e98-c524-4f41-abb2-f4f1cec83ab6&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0xFebF1bBc8229418FF2408C07AF6Afa49152fEc6a&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/bitcoin&quot; alt=&quot;BTC&quot; width=&quot;14&quot; /&gt; BTC&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/5a904d45-947e-4b92-9f0f-7fbaaa7b37f8&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;bc1q0np836jk9jwr4dd7p6qv66d04vamtqkxrecck9&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/solana&quot; alt=&quot;SOL&quot; width=&quot;13&quot; /&gt; SOL&lt;/td&gt; 
   &lt;td&gt;Solana/Tokens&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/ab33c5e0-dd59-497b-9c91-ceb89c36b34d&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;DSgwouAEgu8iP5yr7EHHDqMNYWZxAqXWsTEeqCAXGLj8&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/dogecoin&quot; alt=&quot;DOGE&quot; width=&quot;14&quot; /&gt; DOGE&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/2937edd0-5c85-4465-a444-14d4edb481c0&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;D6R6gYgBn5LwTNmPyvAQR6bZ9EtGgFCpvv&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/litecoin&quot; alt=&quot;LTC&quot; width=&quot;14&quot; /&gt; LTC&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/441985fe-f028-4400-83c1-c215760c1e74&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ltc1q3ex4ejkl0xpx3znwrmth4lyuadr5qgv8tmq8z9&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://bitcoincash.org/img/green/bitcoin-cash-circle.svg?sanitize=true&quot; alt=&quot;BCH&quot; width=&quot;14&quot; /&gt; BCH&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/7f365976-19a3-4777-b17e-4bfba5f69eff&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;qquxfyzntuqufy2dx0hrfr4sndp0tucvky4sw8qyu3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/monero&quot; alt=&quot;XMR&quot; width=&quot;14&quot; /&gt; XMR&lt;/td&gt; 
   &lt;td&gt;Monero&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/96186c06-61e7-4b4d-b716-6eaf1779bfd8&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;41xUz92suUu1u5Mu4qkrcs52gtfpu9rnZRdBpCJ244KRHf6xXSvVFevdf2cnjS7RAeYr5hn9MsEfxKoFDRSctFjG5fv1Mhn&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cdn.simpleicons.org/ton&quot; alt=&quot;TON&quot; width=&quot;14&quot; /&gt; TON&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;div align=&quot;center&quot;&gt;
     &lt;a href=&quot;https://github.com/user-attachments/assets/92a57e57-7462-42b7-a342-6f22c6e600c1&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/da3a864d-d1c7-42cc-8a86-6fcaf26663ec&quot; alt=&quot;QR image&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UQCOqcnYkvzOZUV_9bPE_8oTbOrOF03MnF-VcJyjisTZmsxa&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📱 Community Apps&lt;/h2&gt; 
&lt;p&gt;Enhance your Flipper Zero with apps and plugins created by the community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extra Plugins &amp;amp; Packs:&lt;/strong&gt;&lt;br /&gt; Check out the latest extra plugins and plugin packs (Extra Pack and Base Pack) on &lt;a href=&quot;https://github.com/xMasterX/all-the-plugins/releases/latest&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Source Code &amp;amp; Full List:&lt;/strong&gt;&lt;br /&gt; Find the complete list and source code at &lt;a href=&quot;https://github.com/xMasterX/all-the-plugins/tree/dev&quot;&gt;xMasterX/all-the-plugins&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Official Apps Catalog:&lt;/strong&gt;&lt;br /&gt; Browse the official Flipper Zero Apps Catalog on the &lt;a href=&quot;https://lab.flipper.net/apps&quot;&gt;web&lt;/a&gt; or via the &lt;a href=&quot;https://flipperzero.one/downloads&quot;&gt;mobile app&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📁 Where I can find IR, Sub-GHz, ... files, DBs, and other stuff?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/UberGuidoZ/Flipper&quot;&gt;UberGuidoZ Playground - Large collection of files - Github&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/djsime1/awesome-flipperzero&quot;&gt;Awesome Flipper Zero - Github&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📘 Instructions&lt;/h2&gt; 
&lt;h3&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/-rgb(223,241,89)?style=flat&amp;amp;logo=fz-tools&amp;amp;logoColor=black&quot; alt=&quot;Tools Icon Badge&quot; /&gt; Firmware &amp;amp; main Apps feature&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;System: &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/CustomFlipperName.md&quot;&gt;How to change Flipper name&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;BadUSB: &lt;a href=&quot;https://github.com/dummy-decoy/flipperzero_badusb_kl&quot;&gt;How to add new keyboard layouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Infrared: &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/InfraredCaptures.md&quot;&gt;How to make captures to add them into Universal IR remotes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/-rgb(165,244,190)?style=flat&amp;amp;logo=fz-subghz&amp;amp;logoColor=black&quot; alt=&quot;SubGhz Icon Badge&quot; /&gt; Sub-GHz&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemoteProg.md&quot;&gt;How to use Flipper as new remote (Nice FlorS, BFT Mitto, Somfy Telis, Aprimatic, AN-Motors, etc..)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;External Radio: &lt;a href=&quot;https://github.com/quen0n/flipperzero-ext-cc1101&quot;&gt;How to connect CC1101 module&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Transmission is blocked? &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/DangerousSettings.md&quot;&gt;How to extend Sub-GHz frequency range&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzSettings.md&quot;&gt;How to add extra Sub-GHz frequencies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SubGHzRemotePlugin.md&quot;&gt;&lt;del&gt;Configure Sub-GHz Remote App&lt;/del&gt;&lt;/a&gt; ⚠️ Not recommended, please use embedded configurator&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/-rgb(226,78,178)?style=flat&amp;amp;logo=fz-plugins&amp;amp;logoColor=black&quot; alt=&quot;Plugins Icon Badge&quot; /&gt; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;TOTP (Authenticator): &lt;a href=&quot;https://github.com/akopachov/flipper-zero_authenticator/raw/master/docs/conf-file_description.md&quot;&gt;config description&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Barcode Generator: &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/BarcodeGenerator.md&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multi Converter: &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/MultiConverter.md&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WAV Player: &lt;a href=&quot;https://github.com/UberGuidoZ/Flipper/tree/main/Wav_Player#readme&quot;&gt;sample files &amp;amp; how to convert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Sub-GHz playlist: &lt;a href=&quot;https://github.com/darmiel/flipper-scripts/raw/main/playlist/playlist_creator_by_chunk.py&quot;&gt;generator script&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/-rgb(167,242,234)?style=flat&amp;amp;logo=fz-gpio&amp;amp;logoColor=black&quot; alt=&quot;GPIO Icon Badge&quot; /&gt; GPIO - Plugins that works with external hardware&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unitemp - Temperature sensors reader: &lt;a href=&quot;https://github.com/quen0n/unitemp-flipperzero#readme&quot;&gt;How to use &amp;amp; supported sensors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[NMEA] GPS: &lt;a href=&quot;https://github.com/xMasterX/all-the-plugins/raw/dev/base_pack/gps_nmea_uart/README.md&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;i2c Tools &lt;a href=&quot;https://github.com/xMasterX/all-the-plugins/raw/dev/base_pack/flipper_i2ctools/README.md&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[NRF24] plugins: &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/NRF24.md&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[WiFi] Scanner: &lt;a href=&quot;https://github.com/SequoiaSan/FlipperZero-WiFi-Scanner_Module#readme&quot;&gt;How to use&lt;/a&gt; | &lt;a href=&quot;https://sequoiasan.github.io/FlipperZero-WiFi-Scanner_Module/&quot;&gt;Web Flasher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ESP8266] Deauther: &lt;a href=&quot;https://github.com/SequoiaSan/FlipperZero-Wifi-ESP8266-Deauther-Module#readme&quot;&gt;How to use&lt;/a&gt; | &lt;a href=&quot;https://sequoiasan.github.io/FlipperZero-Wifi-ESP8266-Deauther-Module/&quot;&gt;Web Flasher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ESP32] WiFi Marauder: &lt;a href=&quot;https://github.com/UberGuidoZ/Flipper/tree/main/Wifi_DevBoard&quot;&gt;How to use&lt;/a&gt;&lt;sub&gt; docs by UberGuidoZ&lt;/sub&gt; | &lt;a href=&quot;https://github.com/justcallmekoko/ESP32Marauder&quot;&gt;Marauder repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[ESP32-CAM] Camera Suite: &lt;a href=&quot;https://github.com/CodyTolene/Flipper-Zero-Camera-Suite&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;How to Upload &lt;code&gt;.bin&lt;/code&gt; to ESP32/ESP8266: &lt;a href=&quot;https://github.com/SequoiaSan/Guide-How-To-Upload-bin-to-ESP8266-ESP32&quot;&gt;Windows&lt;/a&gt; | &lt;a href=&quot;https://github.com/0xchocolate/flipperzero-esp-flasher&quot;&gt;FAP &quot;ESP flasher&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[GPIO] SentrySafe plugin: &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/SentrySafe.md&quot;&gt;How to use&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;👨‍💻 Firmware &amp;amp; Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Documentation&lt;/strong&gt; - &lt;a href=&quot;https://developer.flipper.net/flipperzero/doxygen&quot;&gt;developer.flipper.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/documentation/HowToBuild.md#how-to-build-by-yourself&quot;&gt;How to build&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/DarkFlippers/unleashed-firmware/dev/#project-structure&quot;&gt;Project-structure&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLion IDE&lt;/strong&gt; - How to setup workspace for flipper firmware development &lt;a href=&quot;https://krasovs.ky/2022/11/01/flipper-zero-clion.html&quot;&gt;by Savely Krasovsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&quot;Hello world!&quot;&lt;/strong&gt; - plugin tutorial &lt;a href=&quot;https://github.com/DroomOne/Flipper-Plugin-Tutorial&quot;&gt;English&lt;sub&gt; by DroomOne&lt;/sub&gt; &lt;/a&gt; | &lt;a href=&quot;https://yakovlev.me/hello-flipper-zero&quot;&gt;Russian&lt;sub&gt; by Pavel Yakovlev&lt;/sub&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flipper.atmanos.com/docs/overview/intro&quot;&gt;How to write your own app&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project structure&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;applications&lt;/code&gt; - Applications and services used in firmware&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; - Assets used by applications and services&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;furi&lt;/code&gt; - Furi Core: OS-level primitives and helpers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - Debug tool: GDB-plugins, SVD-file and etc&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;documentation&lt;/code&gt; - Documentation generation system configs and input files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;firmware&lt;/code&gt; - Firmware source code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lib&lt;/code&gt; - Our and 3rd party libraries, drivers and etc...&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;site_scons&lt;/code&gt; - Build helpers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scripts&lt;/code&gt; - Supplementary scripts and python libraries home&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also, pay attention to the &lt;code&gt;ReadMe.md&lt;/code&gt; files inside those directories.&lt;/p&gt; 
&lt;h2&gt;🔗 Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unleashed web page:&lt;/strong&gt; &lt;a href=&quot;https://flipperunleashed.com&quot;&gt;flipperunleashed.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unleashed update server, direct .tgz update links for web updater or direct download:&lt;/strong&gt; &lt;a href=&quot;https://unleashedflip.com&quot;&gt;unleashedflip.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Official Docs: &lt;a href=&quot;https://docs.flipper.net&quot;&gt;docs.flipper.net&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Official Forum: &lt;a href=&quot;https://forum.flipperzero.one&quot;&gt;forum.flipperzero.one&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update! Developer Documentation &lt;a href=&quot;https://developer.flipper.net/flipperzero/doxygen&quot;&gt;developer.flipper.net&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>screetsec/TheFatRat</title>
      <link>https://github.com/screetsec/TheFatRat</link>
      <description>&lt;p&gt;Thefatrat a massive exploiting tool : Easy tool to generate backdoor and easy tool to post exploitation attack like browser attack and etc . This tool compiles a malware with popular payload and then the compiled malware can be execute on windows, android, mac . The malware that created with this tool also have an ability to bypass most AV softw…&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TheFatRat&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TheFatRat-1.9.8-brightgreen.svg?maxAge=259200&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Codename-Target-red.svg?maxAge=259200&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Release-Testing-brightgreen.svg?sanitize=true&quot; alt=&quot;Stage&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Supported_OS-Linux-orange.svg?sanitize=true&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Available-BlackArch-red.svg?maxAge=259200&quot; alt=&quot;Available&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ManhNho/CEHv10/tree/master/Slides&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/CEHv10-eccouncil-blue.svg?maxAge=259200&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-blue.svg?style=flat&quot; alt=&quot;Contributions Welcome&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;A Massive Exploiting Tool&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17976841/65820028-6ae17e00-e24e-11e9-894f-35836481cc2c.png&quot; alt=&quot;Banner&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TheFatRat&lt;/strong&gt; is an exploiting tool which compiles a malware with famous payload, and then the compiled maware can be executed on Linux , Windows , Mac and Android. &lt;strong&gt;TheFatRat&lt;/strong&gt; Provides An Easy way to create Backdoors and Payload which can bypass most anti-virus.&lt;/p&gt; 
&lt;h2&gt;Information&lt;/h2&gt; 
&lt;p&gt;This tool is for educational purpose only, usage of TheFatRat for attacking targets without prior mutual consent is illegal. Developers assume no liability and are not responsible for any misuse or damage cause by this program.&lt;/p&gt; 
&lt;h2&gt;Features !&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully Automating MSFvenom &amp;amp; Metasploit.&lt;/li&gt; 
 &lt;li&gt;Local or remote listener Generation.&lt;/li&gt; 
 &lt;li&gt;Easily Make Backdoor by category Operating System.&lt;/li&gt; 
 &lt;li&gt;Generate payloads in Various formats.&lt;/li&gt; 
 &lt;li&gt;Bypass anti-virus backdoors.&lt;/li&gt; 
 &lt;li&gt;File pumper that you can use for increasing the size of your files.&lt;/li&gt; 
 &lt;li&gt;The ability to detect external IP &amp;amp; Interface address .&lt;/li&gt; 
 &lt;li&gt;Automatically creates AutoRun files for USB / CDROM exploitation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;But it&#39;s shit! And your implementation sucks!&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Yes, you&#39;re probably correct. Feel free to &quot;Not use it&quot; and there is a pull button to &quot;Make it better&quot;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Instructions on how to install &lt;em&gt;TheFatRat&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/Screetsec/TheFatRat.git
cd TheFatRat
chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd TheFatRat
./update &amp;amp;&amp;amp; chmod +x setup.sh &amp;amp;&amp;amp; ./setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Troubleshoot on TheFatRat&lt;/h3&gt; 
&lt;p&gt;chk_tools script to use in case of problems in setup.sh of fatrat this script will check if everything is in the right version to run fatrat and will also provide you a solution for the problem&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd TheFatRat
chmod +x chk_tools 
./chk_tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tools Overview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Front View&lt;/th&gt; 
   &lt;th&gt;Sample Feature&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17976841/25420100/9ee12cf6-2a80-11e7-8dfa-c2e3cfe71366.png&quot; alt=&quot;Index&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17976841/65820886-91a4b200-e258-11e9-9a00-1e5905f6be16.jpg&quot; alt=&quot;f&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation Available in Modules CEH v9 and V10 , Download source here 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/khanhnnvn/CEHv10/raw/master/Labs/CEHv10%20Module%2006%20System%20Hacking.pdf&quot;&gt;CEHv10 Module 06 System Hacking.pdf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/khanhnnvn/CEHv10/raw/master/Labs/CEHv10%20Module%2017%20Hacking%20Mobile%20Platforms.pdf&quot;&gt;CEHv10 Module 17 Hacking Mobile Platforms.pdf&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Published in International Journal of Cyber-Security and Digital Forensics 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/publication/323574673_MALWARE_ANALYSIS_OF_BACKDOOR_CREATOR_FATRAT&quot;&gt;Malware Analysis Of Backdoor Creator : TheFatRat&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Youtube Videos 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FsSgJFxyzFQ&quot;&gt;How To Download &amp;amp; Install TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NCsrcqhUBCc&amp;amp;feature=youtu.be&amp;amp;list=PLbyfDadg3caj6nc3KBk375lKWDOjiCmb8&quot;&gt;TheFatRat 1.9.6 - Trodebi ( Embed Trojan into Debian Package )&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bFXVAXRXE9Q&quot;&gt;hacking windows 10 with TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FlXMslSjnGw&quot;&gt;Hacking Windows using TheFatRat + Apache2 Server + Ettercap + Metasploit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lglOXojT84M&quot;&gt;Hacking with a Microsoft Office Word Document from TheFatRat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=pbvg7pgxVjo&quot;&gt;XSS to powershell attack and bypass Antivirus using BeEF + TheFatRat + Metasploit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XLNigYZ5-fM&quot;&gt;TheFatRat - Hacking Over WAN - Embedding Payload in Original Android APK - Without Port Forwarding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=C_Og6LnEZSg&quot;&gt;How To Automatically Embed Payloads In APK&#39;s - Evil-Droid, Thefatrat &amp;amp; Apkinjector&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VPl1TMCAIy8&quot;&gt;Bind FUD Payload with JPG and Hack over WAN with TheFatRat&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;All notable changes to this project will be documented in this &lt;a href=&quot;https://github.com/Screetsec/thefatrat/raw/master/CHANGELOG.md&quot;&gt;file&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;About issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://github.com/Screetsec/TheFatRat/raw/master/issues.md&quot;&gt;document&lt;/a&gt; before making an issue&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternative Best Tool - Generating Backdoor &amp;amp; Bypass&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Veil-Framework/Veil&quot;&gt;Veil-Framework /Veil&lt;/a&gt; - Veil Framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.shellterproject.com/download/&quot;&gt;Shellter&lt;/a&gt; - Shellter AV Evasion Artware&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trustedsec/unicorn&quot;&gt;Unicorn&lt;/a&gt; - Trustedsec&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/g0tmi1k/msfpc&quot;&gt;MSFvenom Payload Creator (MSFPC)&lt;/a&gt; - g0tmi1k&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/r00t-3xp10it/venom&quot;&gt;Venom&lt;/a&gt; - Pedro Ubuntu&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oddcod3/Phantom-Evasion&quot;&gt;Phantom-Evasion&lt;/a&gt; - Diego Cornacchini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits &amp;amp; Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.offensive-security.com/&quot;&gt;Offensive Security&lt;/a&gt; - Offensive Security&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dracos-linux.org/&quot;&gt;dracOs Linux&lt;/a&gt; - Penetration Testing OS From Indonesia&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/peterpt&quot;&gt;peterpt&lt;/a&gt; - Maintainer &amp;amp; Contributor&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dana-at-cp/backdoor-apk&quot;&gt;Dana James Traversie&lt;/a&gt; - backdoor_apk&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/z0noxz/powerstager&quot;&gt;z0noxz&lt;/a&gt; - Powerstager&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/trustedsec/unicorn&quot;&gt;TrustedSec&lt;/a&gt; - Unicorn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rsmudge&quot;&gt;Raphael Mudge&lt;/a&gt; - External Source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://astr0baby.wordpress.com&quot;&gt;astr0baby&lt;/a&gt; - Reference Source&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ngesec.id/&quot;&gt;NgeSEC&lt;/a&gt; Community&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gauli.net/&quot;&gt;Gauli(dot)Net&lt;/a&gt; - Lab Penetration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;TheFatRat is made with 🖤 by Edo Maland &amp;amp; All &lt;a href=&quot;https://github.com/Screetsec/TheFatRat/graphs/contributors&quot;&gt;Contributors&lt;/a&gt;. See the &lt;strong&gt;License&lt;/strong&gt; file for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zephyrproject-rtos/zephyr</title>
      <link>https://github.com/zephyrproject-rtos/zephyr</link>
      <description>&lt;p&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; 
&lt;a href=&quot;https://www.zephyrproject.org&quot;&gt; &lt;p align=&quot;center&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;doc/_static/images/logo-readme-dark.svg&quot; /&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;doc/_static/images/logo-readme-light.svg&quot; /&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/main/doc/_static/images/logo-readme-light.svg?sanitize=true&quot; /&gt; 
  &lt;/picture&gt; &lt;/p&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/74&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/74/badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/zephyrproject-rtos/zephyr&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/zephyrproject-rtos/zephyr/badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml/badge.svg?event=push&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting multiple hardware architectures, optimized for resource constrained devices, and built with security in mind.&lt;/p&gt; 
&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on resource-constrained systems: from simple embedded environmental sensors and LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt; 
&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM (Cortex-A, Cortex-R, Cortex-M), Intel x86, ARC, Tensilica Xtensa, and RISC-V, SPARC, MIPS, and a large number of &lt;code&gt;supported boards&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;.. below included in doc/introduction/introduction.rst&lt;/p&gt; 
&lt;p&gt;Getting Started&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Welcome to Zephyr! See the &lt;code&gt;Introduction to Zephyr&lt;/code&gt;_ for a high-level overview, and the documentation&#39;s &lt;code&gt;Getting Started Guide&lt;/code&gt;_ to start developing.&lt;/p&gt; 
&lt;p&gt;.. start_include_here&lt;/p&gt; 
&lt;p&gt;Community Support&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Community support is provided via mailing lists and Discord; see the Resources below for details.&lt;/p&gt; 
&lt;p&gt;.. _project-resources:&lt;/p&gt; 
&lt;p&gt;Resources&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Here&#39;s a quick summary of resources to help you find your way around:&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;| 📖 &lt;code&gt;Zephyr Documentation&lt;/code&gt;_ | 🚀 &lt;code&gt;Getting Started Guide&lt;/code&gt;_ | 🙋🏽 &lt;code&gt;Tips when asking for help&lt;/code&gt;_ | 💻 &lt;code&gt;Code samples&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Code and Development&lt;/h2&gt; 
&lt;p&gt;| 🌐 &lt;code&gt;Source Code Repository&lt;/code&gt;_ | 📦 &lt;code&gt;Releases&lt;/code&gt;_ | 🤝 &lt;code&gt;Contribution Guide&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Community and Support&lt;/h2&gt; 
&lt;p&gt;| 💬 &lt;code&gt;Discord Server&lt;/code&gt;_ for real-time community discussions | 📧 &lt;code&gt;User mailing list (users@lists.zephyrproject.org)&lt;/code&gt;_ | 📧 &lt;code&gt;Developer mailing list (devel@lists.zephyrproject.org)&lt;/code&gt;_ | 📬 &lt;code&gt;Other project mailing lists&lt;/code&gt;_ | 📚 &lt;code&gt;Project Wiki&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Issue Tracking and Security&lt;/h2&gt; 
&lt;p&gt;| 🐛 &lt;code&gt;GitHub Issues&lt;/code&gt;_ | 🔒 &lt;code&gt;Security documentation&lt;/code&gt;_ | 🛡️ &lt;code&gt;Security Advisories Repository&lt;/code&gt;_ | ⚠️ Report security vulnerabilities at &lt;a href=&quot;mailto:vulnerabilities@zephyrproject.org&quot;&gt;vulnerabilities@zephyrproject.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;| 🌐 &lt;code&gt;Zephyr Project Website&lt;/code&gt;_ | 📺 &lt;code&gt;Zephyr Tech Talks&lt;/code&gt;_&lt;/p&gt; 
&lt;p&gt;.. _Zephyr Project Website: &lt;a href=&quot;https://www.zephyrproject.org&quot;&gt;https://www.zephyrproject.org&lt;/a&gt; .. _Discord Server: &lt;a href=&quot;https://chat.zephyrproject.org&quot;&gt;https://chat.zephyrproject.org&lt;/a&gt; .. _supported boards: &lt;a href=&quot;https://docs.zephyrproject.org/latest/boards/index.html&quot;&gt;https://docs.zephyrproject.org/latest/boards/index.html&lt;/a&gt; .. _Zephyr Documentation: &lt;a href=&quot;https://docs.zephyrproject.org&quot;&gt;https://docs.zephyrproject.org&lt;/a&gt; .. _Introduction to Zephyr: &lt;a href=&quot;https://docs.zephyrproject.org/latest/introduction/index.html&quot;&gt;https://docs.zephyrproject.org/latest/introduction/index.html&lt;/a&gt; .. _Getting Started Guide: &lt;a href=&quot;https://docs.zephyrproject.org/latest/develop/getting_started/index.html&quot;&gt;https://docs.zephyrproject.org/latest/develop/getting_started/index.html&lt;/a&gt; .. _Contribution Guide: &lt;a href=&quot;https://docs.zephyrproject.org/latest/contribute/index.html&quot;&gt;https://docs.zephyrproject.org/latest/contribute/index.html&lt;/a&gt; .. _Source Code Repository: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr&quot;&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; .. _GitHub Issues: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/issues&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt; .. _Releases: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/releases&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/releases&lt;/a&gt; .. _Project Wiki: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/wiki&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/wiki&lt;/a&gt; .. _User mailing list (&lt;a href=&quot;mailto:users@lists.zephyrproject.org&quot;&gt;users@lists.zephyrproject.org&lt;/a&gt;): &lt;a href=&quot;https://lists.zephyrproject.org/g/users&quot;&gt;https://lists.zephyrproject.org/g/users&lt;/a&gt; .. _Developer mailing list (&lt;a href=&quot;mailto:devel@lists.zephyrproject.org&quot;&gt;devel@lists.zephyrproject.org&lt;/a&gt;): &lt;a href=&quot;https://lists.zephyrproject.org/g/devel&quot;&gt;https://lists.zephyrproject.org/g/devel&lt;/a&gt; .. _Other project mailing lists: &lt;a href=&quot;https://lists.zephyrproject.org/g/main/subgroups&quot;&gt;https://lists.zephyrproject.org/g/main/subgroups&lt;/a&gt; .. _Code samples: &lt;a href=&quot;https://docs.zephyrproject.org/latest/samples/index.html&quot;&gt;https://docs.zephyrproject.org/latest/samples/index.html&lt;/a&gt; .. _Security documentation: &lt;a href=&quot;https://docs.zephyrproject.org/latest/security/index.html&quot;&gt;https://docs.zephyrproject.org/latest/security/index.html&lt;/a&gt; .. _Security Advisories Repository: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/security&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/security&lt;/a&gt; .. _Tips when asking for help: &lt;a href=&quot;https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help&quot;&gt;https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help&lt;/a&gt; .. _Zephyr Tech Talks: &lt;a href=&quot;https://www.zephyrproject.org/tech-talks&quot;&gt;https://www.zephyrproject.org/tech-talks&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashcat/hashcat</title>
      <link>https://github.com/hashcat/hashcat</link>
      <description>&lt;p&gt;World&#39;s fastest and most advanced password recovery utility&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;em&gt;hashcat&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;hashcat&lt;/strong&gt; is the world&#39;s fastest and most advanced password recovery utility, supporting five unique modes of attack for over 300 highly-optimized hashing algorithms. hashcat currently supports CPUs, GPUs, and other hardware accelerators on Linux, Windows, and macOS, and has facilities to help enable distributed password cracking.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;hashcat&lt;/strong&gt; is licensed under the MIT license. Refer to &lt;a href=&quot;https://raw.githubusercontent.com/hashcat/hashcat/master/docs/license.txt&quot;&gt;docs/license.txt&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href=&quot;https://hashcat.net/hashcat/&quot;&gt;latest release&lt;/a&gt; and unpack it in the desired location. Please remember to use &lt;code&gt;7z x&lt;/code&gt; when unpacking the archive from the command line to ensure full file paths remain intact.&lt;/p&gt; 
&lt;h3&gt;Usage/Help&lt;/h3&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://hashcat.net/wiki/&quot;&gt;Hashcat Wiki&lt;/a&gt; and the output of &lt;code&gt;--help&lt;/code&gt; for usage information and general help. A list of frequently asked questions may also be found &lt;a href=&quot;https://hashcat.net/wiki/doku.php?id=frequently_asked_questions&quot;&gt;here&lt;/a&gt;. The &lt;a href=&quot;https://hashcat.net/forum/&quot;&gt;Hashcat Forum&lt;/a&gt; also contains a plethora of information. If you still think you need help by a real human come to &lt;a href=&quot;https://discord.gg/HFS523HGBT&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;p&gt;Refer to &lt;a href=&quot;https://raw.githubusercontent.com/hashcat/hashcat/master/BUILD.md&quot;&gt;BUILD.md&lt;/a&gt; for instructions on how to build &lt;strong&gt;hashcat&lt;/strong&gt; from source.&lt;/p&gt; 
&lt;p&gt;Tests:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Travis&lt;/th&gt; 
   &lt;th&gt;Coverity&lt;/th&gt; 
   &lt;th&gt;GitHub Actions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://travis-ci.org/hashcat/hashcat&quot;&gt;&lt;img src=&quot;https://travis-ci.org/hashcat/hashcat.svg?branch=master&quot; alt=&quot;Hashcat Travis Build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://scan.coverity.com/projects/hashcat&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/11753/badge.svg?sanitize=true&quot; alt=&quot;Coverity Scan Build Status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hashcat/hashcat/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/hashcat/hashcat/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Hashcat GitHub Actions Build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome and encouraged, provided your code is of sufficient quality. Before submitting a pull request, please ensure your code adheres to the following requirements:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Licensed under MIT license, or dedicated to the public domain (BSD, GPL, etc. code is incompatible)&lt;/li&gt; 
 &lt;li&gt;Adheres to gnu99 standard&lt;/li&gt; 
 &lt;li&gt;Compiles cleanly with no warnings when compiled with &lt;code&gt;-W -Wall -std=gnu99&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style#Allman_style&quot;&gt;Allman-style&lt;/a&gt; code blocks &amp;amp; indentation&lt;/li&gt; 
 &lt;li&gt;Uses 2-spaces as the indentation or a tab if it&#39;s required (for example: Makefiles)&lt;/li&gt; 
 &lt;li&gt;Uses lower-case function and variable names&lt;/li&gt; 
 &lt;li&gt;Avoids the use of &lt;code&gt;!&lt;/code&gt; and uses positive conditionals wherever possible (e.g., &lt;code&gt;if (foo == 0)&lt;/code&gt; instead of &lt;code&gt;if (!foo)&lt;/code&gt;, and &lt;code&gt;if (foo)&lt;/code&gt; instead of &lt;code&gt;if (foo != 0)&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Use code like array[index + 0] if you also need to do array[index + 1], to keep it aligned&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can use GNU Indent to help assist you with the style requirements:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;indent -st -bad -bap -sc -bl -bli0 -ncdw -nce -cli0 -cbi0 -pcs -cs -npsl -bs -nbc -bls -blf -lp -i2 -ts2 -nut -l1024 -nbbo -fca -lc1024 -fc1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your pull request should fully describe the functionality you are adding/removing or the problem you are solving. Regardless of whether your patch modifies one line or one thousand lines, you must describe what has prompted and/or motivated the change.&lt;/p&gt; 
&lt;p&gt;Solve only one problem in each pull request. If you&#39;re fixing a bug and adding a new feature, you need to make two separate pull requests. If you&#39;re fixing three bugs, you need to make three separate pull requests. If you&#39;re adding four new features, you need to make four separate pull requests. So on, and so forth.&lt;/p&gt; 
&lt;p&gt;If your patch fixes a bug, please be sure there is an &lt;a href=&quot;https://github.com/hashcat/hashcat/issues&quot;&gt;issue&lt;/a&gt; open for the bug before submitting a pull request. If your patch aims to improve performance or optimize an algorithm, be sure to quantify your optimizations and document the trade-offs, and back up your claims with benchmarks and metrics.&lt;/p&gt; 
&lt;p&gt;In order to maintain the quality and integrity of the &lt;strong&gt;hashcat&lt;/strong&gt; source tree, all pull requests must be reviewed and signed off by at least two &lt;a href=&quot;https://github.com/orgs/hashcat/people&quot;&gt;board members&lt;/a&gt; before being merged. The &lt;a href=&quot;https://github.com/jsteube&quot;&gt;project lead&lt;/a&gt; has the ultimate authority in deciding whether to accept or reject a pull request. Do not be discouraged if your pull request is rejected!&lt;/p&gt; 
&lt;h3&gt;Happy Cracking!&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>brunodev85/winlator</title>
      <link>https://github.com/brunodev85/winlator</link>
      <description>&lt;p&gt;Android application for running Windows applications with Wine and Box86/Box64&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/brunodev85/winlator/main/logo.png&quot; width=&quot;376&quot; height=&quot;128&quot; alt=&quot;Winlator Logo&quot; /&gt; &lt;/p&gt; 
&lt;h1&gt;Winlator&lt;/h1&gt; 
&lt;p&gt;Winlator is an Android application that lets you to run Windows (x86_64) applications with Wine and Box86/Box64.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download and install the APK (Winlator_10.1.apk) from &lt;a href=&quot;https://github.com/brunodev85/winlator/releases&quot;&gt;GitHub Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Launch the app and wait for the installation process to finish&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ETYDgKz4jBQ&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/ETYDgKz4jBQ/3.jpg&quot; alt=&quot;Play on Youtube&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=9E4wnKf2OsI&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/9E4wnKf2OsI/2.jpg&quot; alt=&quot;Play on Youtube&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=czEn4uT3Ja8&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/czEn4uT3Ja8/2.jpg&quot; alt=&quot;Play on Youtube&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=eD36nxfT_Z0&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/eD36nxfT_Z0/2.jpg&quot; alt=&quot;Play on Youtube&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Useful Tips&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are experiencing performance issues, try changing the Box64 preset to &lt;code&gt;Performance&lt;/code&gt; in Container Settings -&amp;gt; Advanced Tab.&lt;/li&gt; 
 &lt;li&gt;For applications that use .NET Framework, try installing &lt;code&gt;Wine Mono&lt;/code&gt; found in Start Menu -&amp;gt; System Tools -&amp;gt; Installers.&lt;/li&gt; 
 &lt;li&gt;If some older games don&#39;t open, try adding the environment variable &lt;code&gt;MESA_EXTENSION_MAX_YEAR=2003&lt;/code&gt; in Container Settings -&amp;gt; Environment Variables.&lt;/li&gt; 
 &lt;li&gt;Try running the games using the shortcut on the Winlator home screen, there you can define individual settings for each game.&lt;/li&gt; 
 &lt;li&gt;To display low resolution games correctly, try to enabling the &lt;code&gt;Force Fullscreen&lt;/code&gt; option in the shortcut settings.&lt;/li&gt; 
 &lt;li&gt;To improve stability in games that uses Unity Engine, try changing the Box64 preset to &lt;code&gt;Stability&lt;/code&gt; or in the shortcut settings add the exec argument &lt;code&gt;-force-gfx-direct&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Information&lt;/h1&gt; 
&lt;p&gt;This project has been in constant development since version 1.0, the current app source code is up to version 7.1, I do not update this repository frequently precisely to avoid unofficial releases before the official releases of Winlator.&lt;/p&gt; 
&lt;h1&gt;Credits and Third-party apps&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;GLIBC Patches by &lt;a href=&quot;https://github.com/termux-pacman/glibc-packages&quot;&gt;Termux Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wine (&lt;a href=&quot;https://www.winehq.org/&quot;&gt;winehq.org&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Box86/Box64 by &lt;a href=&quot;https://github.com/ptitSeb&quot;&gt;ptitseb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mesa (Turnip/Zink/VirGL) (&lt;a href=&quot;https://www.mesa3d.org&quot;&gt;mesa3d.org&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;DXVK (&lt;a href=&quot;https://github.com/doitsujin/dxvk&quot;&gt;github.com/doitsujin/dxvk&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;VKD3D (&lt;a href=&quot;https://gitlab.winehq.org/wine/vkd3d&quot;&gt;gitlab.winehq.org/wine/vkd3d&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;CNC DDraw (&lt;a href=&quot;https://github.com/FunkyFr3sh/cnc-ddraw&quot;&gt;github.com/FunkyFr3sh/cnc-ddraw&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Special thanks to all the developers involved in these projects.&lt;br /&gt; Thank you to all the people who believe in this project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openwrt/openwrt</title>
      <link>https://github.com/openwrt/openwrt</link>
      <description>&lt;p&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins. We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openwrt/openwrt/main/include/logo.png&quot; alt=&quot;OpenWrt logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;OpenWrt Project is a Linux operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.&lt;/p&gt; 
&lt;p&gt;Sunshine!&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Built firmware images are available for many architectures and come with a package selection to be used as WiFi home router. To quickly find a factory image usable to migrate from a vendor stock firmware to OpenWrt, try the &lt;em&gt;Firmware Selector&lt;/em&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firmware-selector.openwrt.org/&quot;&gt;OpenWrt Firmware Selector&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If your device is supported, please follow the &lt;strong&gt;Info&lt;/strong&gt; link to see install instructions or consult the support resources listed below.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;p&gt;An advanced user may require additional or specific package. (Toolchain, SDK, ...) For everything else than simple firmware download, try the wiki download page:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/downloads&quot;&gt;OpenWrt Wiki Download&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;To build your own firmware you need a GNU/Linux, BSD or macOS system (case sensitive filesystem required). Cygwin is unsupported because of the lack of a case sensitive file system.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;You need the following tools to compile OpenWrt, the package names vary between distributions. A complete list with distribution specific packages is found in the &lt;a href=&quot;https://openwrt.org/docs/guide-developer/build-system/install-buildsystem&quot;&gt;Build System Setup&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev
make4.1+ perl python3.7+ rsync subversion unzip which
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds update -a&lt;/code&gt; to obtain all the latest package definitions defined in feeds.conf / feeds.conf.default&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds install -a&lt;/code&gt; to install symlinks for all obtained packages into package/feeds/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make menuconfig&lt;/code&gt; to select your preferred configuration for the toolchain, target system &amp;amp; firmware packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build your firmware. This will download all sources, build the cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp;amp; all chosen applications for your target system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Related Repositories&lt;/h3&gt; 
&lt;p&gt;The main repository uses multiple sub-repositories to manage packages of different categories. All packages are installed via the OpenWrt package manager called &lt;code&gt;opkg&lt;/code&gt;. If you&#39;re looking to develop the web interface or port packages to OpenWrt, please find the fitting repository below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/luci&quot;&gt;LuCI Web Interface&lt;/a&gt;: Modern and modular interface to control the device via a web browser.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/packages&quot;&gt;OpenWrt Packages&lt;/a&gt;: Community repository of ported packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/routing&quot;&gt;OpenWrt Routing&lt;/a&gt;: Packages specifically focused on (mesh) routing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/video&quot;&gt;OpenWrt Video&lt;/a&gt;: Packages specifically focused on display servers and clients (Xorg and Wayland).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Information&lt;/h2&gt; 
&lt;p&gt;For a list of supported devices see the &lt;a href=&quot;https://openwrt.org/supported_devices&quot;&gt;OpenWrt Hardware Database&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-quick-start/start&quot;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-user/start&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-developer/start&quot;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/techref/start&quot;&gt;Technical Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Support Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org&quot;&gt;Forum&lt;/a&gt;: For usage, projects, discussions and hardware advise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.oftc.net/#openwrt&quot;&gt;Support Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developer Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bugs.openwrt.org&quot;&gt;Bug Reports&lt;/a&gt;: Report bugs in OpenWrt&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lists.openwrt.org/mailman/listinfo/openwrt-devel&quot;&gt;Dev Mailing List&lt;/a&gt;: Send patches&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.oftc.net/#openwrt-devel&quot;&gt;Dev Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt-devel&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenWrt is licensed under GPL-2.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tencent/puerts</title>
      <link>https://github.com/Tencent/puerts</link>
      <description>&lt;p&gt;PUER(普洱) Typescript. Let&#39;s write your game in UE or Unity with TypeScript.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Tencent/puerts/refs/heads/master/doc/pic/puerts_logo.png&quot; alt=&quot;Logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tencent/puerts/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-BSD_3_Clause-blue.svg?sanitize=true&quot; alt=&quot;license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Tencent/puerts/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-blue.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tencent/puerts/releases/tag/Unreal_v1.0.8&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/unreal-v1.0.8-blue.svg?sanitize=true&quot; alt=&quot;unreal&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/zhcn/install.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/unity(stable)-v2.2.2-blue.svg?sanitize=true&quot; alt=&quot;unity&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/Tencent/puerts/workflows/unity%20unittest/badge.svg?sanitize=true&quot; alt=&quot;Unity_Test&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/#what---%E6%99%AE%E6%B4%B1ts%E6%98%AF%E4%BB%80%E4%B9%88&quot;&gt;跳转中文&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;WHAT is PuerTS (PUER Typescript)?&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;PuerTS&lt;/code&gt; is a TypeScript programming solution in Unity/Unreal/DotNet.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;provides a JavaScript Runtime.&lt;/li&gt; 
 &lt;li&gt;allows TypeScript to access the host engine with the help of TypeScript declarations generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;WHY should I use PuerTS?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facilitates game-building processes by combining JavaScript/Node.js ecosystem and professional game engines&lt;/li&gt; 
 &lt;li&gt;In contrast to Lua script, TypeScript supports static type checking, which significantly improves code robustness and maintainability.&lt;/li&gt; 
 &lt;li&gt;High efficiency: supports reflection call throughout the host - no extra steps needed for interop with C++/C#.&lt;/li&gt; 
 &lt;li&gt;High performance: supports static wrapper generation - handles complex scenes with high-performance demands.&lt;/li&gt; 
 &lt;li&gt;Talented WebGL Support: massive advantage in performance and dev efficiency compared to Lua, even faster than pure C# in some cases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HOW can I start to use PuerTS&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://puerts.github.io/en&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/faq.md&quot;&gt;general faq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/en/faq.md&quot;&gt;unreal faq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/en/faq.md&quot;&gt;unity faq&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Install&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/en/install.md&quot;&gt;unreal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/en/install.md&quot;&gt;unity&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Changelog&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/en/changelog.md&quot;&gt;unreal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/unity/Assets/core/upm/changelog.md&quot;&gt;unity&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Known issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/en/bugs.md&quot;&gt;unreal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/en/bugs.md&quot;&gt;unity&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Select Script Engine&lt;/h2&gt; 
&lt;p&gt;Currently puerts supports three script engines: v8, quickjs, nodejs, choose the one that suits you.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;V8 (default): Generally excellent performance, moderate code size, only includes the implementation of the ECMAScript specification, does not include Node.js API or browser API.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;QuickJS: Performance is not as good as V8, does not support debugging, but has a small code size, suitable for scenarios where code size is critical.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Node.js: Supports Node.js API (OpenSSL-related APIs are not supported on Unreal Engine&#39;s mobile platform), but has a larger code size.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Script Engine&lt;/th&gt; 
   &lt;th&gt;Node api&lt;/th&gt; 
   &lt;th&gt;Performance&lt;/th&gt; 
   &lt;th&gt;Code Size&lt;/th&gt; 
   &lt;th&gt;Debugging&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;V8&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*****&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;***&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QuickJS&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;**&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*****&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*****&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;OpenSSL may be disabled&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Avaliable on these Engine&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;unreal engine 4.22 ~ latest&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;unity 5 ~ latest&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Any .net project&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Available on these Platform&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS&lt;/li&gt; 
 &lt;li&gt;Android&lt;/li&gt; 
 &lt;li&gt;OpenHarmony&lt;/li&gt; 
 &lt;li&gt;Windows&lt;/li&gt; 
 &lt;li&gt;Macos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ask for help&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tencent/puerts/discussions&quot;&gt;Github Discussion&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;WHAT - 普洱TS是什么?&lt;/h2&gt; 
&lt;p&gt;PuerTS是 Unity/Unreal/Dotnet 下的TypeScript编程解决方案&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;提供了一个JavaScript运行时&lt;/li&gt; 
 &lt;li&gt;提供TypeScript声明文件生成能力，易于通过TypeScript访问宿主引擎，&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;WHY - 为什么我该用普洱TS?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;JavaScript生态有众多的库和工具链，结合专业商业引擎的渲染能力，快速打造游戏&lt;/li&gt; 
 &lt;li&gt;相比游戏领域常用的lua脚本，TypeScript的静态类型检查有助于编写更健壮，可维护性更好的程序&lt;/li&gt; 
 &lt;li&gt;高效：全引擎，全平台支持反射调用，无需额外步骤即可与宿主C++/C#通信。&lt;/li&gt; 
 &lt;li&gt;高性能：全引擎，全平台支持生成静态调用桥梁，兼顾了高性能的场景。&lt;/li&gt; 
 &lt;li&gt;WebGL平台下的天生优势：相比Lua脚本在WebGL版本的表现，PuerTS在性能和效率上都有极大提升，目前极限情况甚至比C#更快。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HOW - 我该怎么开始&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://puerts.github.io&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/faq.md&quot;&gt;通用 faq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/zhcn/faq.md&quot;&gt;unreal faq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/zhcn/faq.md&quot;&gt;unity faq&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;最新版本安装&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/zhcn/install.md&quot;&gt;unreal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/zhcn/install.md&quot;&gt;unity&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;改动日志&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/zhcn/changelog.md&quot;&gt;unreal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/unity/Assets/core/upm/changelog-hans.md&quot;&gt;unity&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;已知问题与解决办法&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unreal/zhcn/bugs.md&quot;&gt;unreal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Tencent/puerts/master/doc/unity/zhcn/bugs.md&quot;&gt;unity&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;脚本引擎选择&lt;/h2&gt; 
&lt;p&gt;目前puerts支持三种脚本引擎：v8、quickjs、nodejs，选择合适你的那个。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;v8（默认）：综合比较优秀，高性能，代码体积适中，仅包含ecmascript规范的实现，不包含nodejs api、浏览器 api&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;quickjs： 性能不如v8，不支持调试，但代码体积小，适用于代码段大小敏感型业务&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;nodejs：支持nodejs api（unreal engine的移动平台下不支持openssl相关api），代码体积较大&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;脚本引擎&lt;/th&gt; 
   &lt;th&gt;Node api&lt;/th&gt; 
   &lt;th&gt;性能&lt;/th&gt; 
   &lt;th&gt;代码体积&lt;/th&gt; 
   &lt;th&gt;调试&lt;/th&gt; 
   &lt;th&gt;补充&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;V8&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*****&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;***&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QuickJS&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;**&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*****&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;*****&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;OpenSSL 可能被禁用&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;可用引擎&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;unreal engine 4.22 ~ latest&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;unity 5 ~ latest&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任意.net环境&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;可用平台&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS&lt;/li&gt; 
 &lt;li&gt;Android&lt;/li&gt; 
 &lt;li&gt;鸿蒙（OpenHarmony）&lt;/li&gt; 
 &lt;li&gt;Windows&lt;/li&gt; 
 &lt;li&gt;Macos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;技术支持&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Tencent/puerts/discussions&quot;&gt;Github Discussion&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;QQ群：942696334&lt;/p&gt; 
&lt;p&gt;UE4专属群：689643903&lt;/p&gt; 
&lt;h2&gt;开发博客&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/column/c_1355534112468402176&quot;&gt;知乎专栏&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TEN-framework/ten-framework</title>
      <link>https://github.com/TEN-framework/ten-framework</link>
      <description>&lt;p&gt;Open-source framework for conversational voice AI agents.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;TEN banner&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ten-framework/ten-framework?color=369eff&amp;amp;labelColor=gray&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;TEN Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/ten-framework/ten-framework?labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/discussions/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/discussions/TEN-framework/ten_framework?labelColor=gray&amp;amp;color=%20%23f79009&quot; alt=&quot;Discussion posts&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/graphs/commit-activity&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/TEN-framework/ten_framework?labelColor=gray&amp;amp;color=pink&quot; alt=&quot;Commits&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-search?query=repo%3ATEN-framework%2Ften-framework%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=gray&amp;amp;color=green&quot; alt=&quot;Issues closed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/ten-framework/ten-framework?color=c4f042&amp;amp;labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome!-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten_framework/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0_with_certain_conditions-blue.svg?labelColor=%20%23155EEF&amp;amp;color=%20%23528bff&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-framework&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://readmex.com/TEN-framework/ten-framework&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/watchers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/TEN-framework/ten_framework?style=social&amp;amp;label=Watch&quot; alt=&quot;GitHub watchers&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/network/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/TEN-framework/ten_framework?style=social&amp;amp;label=Fork&quot; alt=&quot;GitHub forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/stargazers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/TEN-framework/ten_framework?style=social&amp;amp;label=Star&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-CN.md&quot;&gt;&lt;img alt=&quot;简体中文操作指南&quot; src=&quot;https://img.shields.io/badge/简体中文-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-JP.md&quot;&gt;&lt;img alt=&quot;日本語のREADME&quot; src=&quot;https://img.shields.io/badge/日本語-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-KR.md&quot;&gt;&lt;img alt=&quot;README in 한국어&quot; src=&quot;https://img.shields.io/badge/한국어-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-ES.md&quot;&gt;&lt;img alt=&quot;README en Español&quot; src=&quot;https://img.shields.io/badge/Español-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-FR.md&quot;&gt;&lt;img alt=&quot;README en Français&quot; src=&quot;https://img.shields.io/badge/Français-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-IT.md&quot;&gt;&lt;img alt=&quot;README in Italiano&quot; src=&quot;https://img.shields.io/badge/Italiano-lightgrey&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://theten.ai&quot;&gt;Official Site&lt;/a&gt; • &lt;a href=&quot;https://theten.ai/docs/ten_agent/overview&quot;&gt;Documentation&lt;/a&gt; • &lt;a href=&quot;https://theten.ai/blog&quot;&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/11978&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/11978&quot; alt=&quot;TEN-framework%2Ften_framework | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;kbd&gt;Table of Contents&lt;/kbd&gt;&lt;/summary&gt; 
 &lt;h4&gt;Table of Contents&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-welcome-to-ten&quot;&gt;👋 Welcome to TEN&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-tman-designer&quot;&gt;🎨 TMAN Designer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-features&quot;&gt;✨ Features&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#1%EF%B8%8F%E2%83%A3-real-time-avatar&quot;&gt;1️⃣ Real-time Avatar&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#2%EF%B8%8F%E2%83%A3-real-time-voice-with-mcp-servers&quot;&gt;2️⃣ Real-time voice with MCP servers&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#3%EF%B8%8F%E2%83%A3-real-time-communication-with-hardware&quot;&gt;3️⃣ Real-time communication with hardware&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#4%EF%B8%8F%E2%83%A3-real-time-vision-and-real-time-screenshare-detection&quot;&gt;4️⃣ Real-time vision and real-time screenshare detection&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#5%EF%B8%8F%E2%83%A3-ten-with-other-llm-platforms&quot;&gt;5️⃣ TEN with other LLM platforms&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#6%EF%B8%8F%E2%83%A3-storyteller---ten-image-generation&quot;&gt;6️⃣ StoryTeller - TEN image generation&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-get-ten-agent-up-and-running&quot;&gt;👩‍💻 Get TEN Agent up and running&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B0%EF%B8%8F-run-ten-agent-in-localhost&quot;&gt;🅰️ Run TEN Agent in &lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B1%EF%B8%8F-run-ten-agent-in-codespaceno-docker&quot;&gt;🅱️ Run TEN Agent in Codespace(no docker)&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%EF%B8%8F-ten-agent-self-hosting&quot;&gt;🛳️ TEN Agent Self Hosting&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B0%EF%B8%8F-deploying-with-docker&quot;&gt;🅰️ Deploying with Docker&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B1%EF%B8%8F-deploying-with-other-cloud-services&quot;&gt;🅱️ Deploying with other cloud services&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ten-ecosystem&quot;&gt;🌍 TEN Ecosystem&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ask-questions&quot;&gt;❓ Ask Questions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-contributing&quot;&gt;🥰 Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#code-contributors&quot;&gt;Code Contributors&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#contribution-guidelines&quot;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;br /&gt; 
&lt;/details&gt; 
&lt;h2&gt;👋 Welcome to TEN&lt;/h2&gt; 
&lt;p&gt;TEN is a comprehensive open-source ecosystem for creating, customizing, and deploying real-time conversational AI agents with multimodal capabilities including voice, vision, and avatar interactions.&lt;/p&gt; 
&lt;p&gt;TEN includes &lt;a href=&quot;https://github.com/ten-framework/ten-framework&quot;&gt;TEN Framework&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;TEN Turn Detection&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;TEN VAD&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/demo&quot;&gt;TEN Agent&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;TMAN Designer&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;TEN Portal&lt;/a&gt;. Check out &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ten-ecosystem&quot;&gt;🌍 TEN Ecosystem&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Community Channel&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=TenFramework&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/TenFramework?logo=X&amp;amp;color=%20%23f5f5f5&quot; alt=&quot;Follow on X&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on X for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/company/ten-framework&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-TEN_Framework-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on LinkedIn for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://discord.gg/VnPftUzAMJ&quot;&gt;&lt;img src=&quot;https://dcbadge.vercel.app/api/server/VnPftUzAMJ?&amp;amp;style=flat&amp;amp;theme=light&amp;amp;color=lightgray&quot; alt=&quot;Discord TEN Community&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Discord community to connect with developers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://huggingface.co/TEN-framework&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Hugging%20Face-TEN%20Framework-yellow?style=flat&amp;amp;logo=huggingface&quot; alt=&quot;Hugging Face Space&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Hugging Face community to explore our spaces and models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/discussions/170&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TEN_Framework-WeChat_Group-%2307C160?logo=wechat&amp;amp;labelColor=darkgreen&amp;amp;color=gray&quot; alt=&quot;WeChat&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our WeChat group for Chinese community discussions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star TEN Repositories&lt;/strong&gt; ⭐️&lt;/p&gt; 
 &lt;p&gt;Get instant notifications for new releases and updates. Your support helps us grow and improve TEN!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/eeebe996-8c14-4bf7-82ae-f1a1f7e30705&quot; alt=&quot;TEN star us gif&quot; /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=ten-framework/ten-framework&amp;amp;type=Date&quot; /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🎨 TMAN Designer&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/44c6a087-ec7a-45b0-a084-dab5dac5e36b&quot;&gt;https://github.com/user-attachments/assets/44c6a087-ec7a-45b0-a084-dab5dac5e36b&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TMAN Designer&lt;/h3&gt; 
&lt;p&gt;TMAN Designer is a low/no-code option to create voice agents with an easy-to-use workflow UI. It can load apps and graphs, and includes an online editor, log viewer, and much more.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://theten.ai/blog/tman-designer-of-ten-framework&quot;&gt;this blog&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;!-- ## 🧩 Extensions

![Ready-to-use Extensions](https://ten-framework-assets.s3.us-east-1.amazonaws.com/extensions.jpg)

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt; --&gt; 
&lt;br /&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c6702995-de94-4d3e-8cae-af097f087ac1&quot; alt=&quot;TEN Agent with Trulience&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;1️⃣ Real-time Avatar&lt;/h3&gt; 
&lt;p&gt;Build engaging AI avatars with TEN Agent using &lt;a href=&quot;https://trulience.com&quot;&gt;Trulience&lt;/a&gt;&#39;s diverse collection of free avatar options. To get it up and running, you only need 2 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the README to finish setting up and running the Playground&lt;/li&gt; 
 &lt;li&gt;Enter the avatar ID and &lt;a href=&quot;https://trulience.com/docs#/authentication/jwt-tokens/jwt-tokens?id=use-your-custom-userid&quot;&gt;token&lt;/a&gt; you get from &lt;a href=&quot;https://trulience.com&quot;&gt;Trulience&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/afb77ad3-9c23-452f-b870-216687779017&quot; alt=&quot;TEN with MCP servers&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;2️⃣ Real-time voice with MCP servers&lt;/h3&gt; 
&lt;p&gt;TEN Agent now integrates seamlessly with MCP servers, expanding its LLM capabilities. To get started:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the Module Picker in Playground&lt;/li&gt; 
 &lt;li&gt;Add the MCP server tool for LLM integration&lt;/li&gt; 
 &lt;li&gt;Paste a URL from your MCP server in the extension&lt;/li&gt; 
 &lt;li&gt;Start a realtime conversation with TEN Agent&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This integration allows you to leverage MCP&#39;s diverse servers offerings while maintaining TEN Agent&#39;s powerful conversational abilities.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/78647eef-2d66-44e6-99a8-1918a940fb9f&quot;&gt;https://github.com/user-attachments/assets/78647eef-2d66-44e6-99a8-1918a940fb9f&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3️⃣ Real-time communication with hardware&lt;/h3&gt; 
&lt;p&gt;TEN Agent is now running on the Espressif ESP32-S3 Korvo V3 development board, an excellent way to integrate realtime communication with LLM on hardware.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/esp32-client&quot;&gt;integration guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a1addb02-a450-47be-8cb2-d25e3b574f53&quot; alt=&quot;Real-time Vision&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;4️⃣ Real-time vision and real-time screenshare detection&lt;/h3&gt; 
&lt;p&gt;Try Google Gemini Multimodal Live API with realtime vision and realtime screenshare detection capabilities, it is a ready-to-use extension, along with powerful tools like Weather Check and Web Search integrated perfectly into TEN Agent.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/234ff443-bef8-4cc4-9a10-09d6ec3f5bc1&quot; alt=&quot;TEN with Dify&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;5️⃣ TEN with other LLM platforms&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://theten.ai/docs/ten_agent/playground/use-cases/voice-assistant/run_dify#steps&quot;&gt;TEN Agent + Dify&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;TEN offers a great support to make the realtime interactive experience even better on other LLM platform as well, check out docs for more.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/fe28a549-ddb9-431e-9282-57539fb87371&quot; alt=&quot;TEN StoryTeller&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;6️⃣ StoryTeller - TEN image generation&lt;/h3&gt; 
&lt;p&gt;Experience the real-time image generation with StoryTeller, it is a ready-to-use extension, along with powerful tools like Weather Check and Web Search integrated perfectly into TEN.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;👩‍💻 Get TEN Agent up and running&lt;/h2&gt; 
&lt;h4&gt;🅰️ Run TEN Agent in localhost&lt;/h4&gt; 
&lt;h4&gt;Step ⓵ - Prerequisites&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Requirements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Keys&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Agora &lt;a href=&quot;https://docs.agora.io/en/video-calling/get-started/manage-agora-account?platform=web#create-an-agora-project&quot;&gt;App ID&lt;/a&gt; and &lt;a href=&quot;https://docs.agora.io/en/video-calling/get-started/manage-agora-account?platform=web#create-an-agora-project&quot;&gt;App Certificate&lt;/a&gt; (free minutes every month) &lt;br /&gt;• &lt;a href=&quot;https://openai.com/index/openai-api/&quot;&gt;OpenAI&lt;/a&gt; API key (any LLM that is compatible with OpenAI)&lt;br /&gt;• &lt;a href=&quot;https://deepgram.com/&quot;&gt;Deepgram&lt;/a&gt; ASR (free credits available with signup)&lt;br /&gt;• &lt;a href=&quot;https://elevenlabs.io/&quot;&gt;Elevenlabs&lt;/a&gt; TTS (free credits available with signup)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; / &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt;&lt;br /&gt;• &lt;a href=&quot;https://nodejs.org/en&quot;&gt;Node.js(LTS) v18&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Minimum System Requirements&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• CPU &amp;gt;= 2 Core&lt;br /&gt;• RAM &amp;gt;= 4 GB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;macOS: Docker setting on Apple Silicon&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Uncheck &quot;Use Rosetta for x86/amd64 emulation&quot; in Docker settings, it may result in slower build times on ARM, but performance will be normal when deployed to x64 servers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h4&gt;Step ⓶ - Build agent in VM&lt;/h4&gt; 
&lt;h5&gt;1. Clone down the repo,&lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;ai-agents&lt;/code&gt; and create &lt;code&gt;.env&lt;/code&gt; file from &lt;code&gt;.env.example&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ai_agents
cp ./.env.example ./.env
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;2. Setup Agora App ID and App Certificate in &lt;code&gt;.env&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;AGORA_APP_ID=
AGORA_APP_CERTIFICATE=
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;3. Start agent development containers&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;4. Enter container&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker exec -it ten_agent_dev bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;5. Build agent with the default &lt;code&gt;graph&lt;/code&gt; ( ~5min - ~8min)&lt;/h5&gt; 
&lt;p&gt;check the &lt;code&gt;/examples&lt;/code&gt; folder for more examples&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# use the default agent
task use

# or use the demo agent
task use AGENT=agents/examples/demo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;6. Start the web server&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;task run
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;Step ⓷ - Customize your agent with TMAN Designer&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open &lt;a href=&quot;http://localhost:49483&quot;&gt;localhost:49483&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Right click to load the corresponding graph (e.g., Voice Assistant).&lt;/li&gt; 
 &lt;li&gt;Enter API keys and set preferences for each extension.&lt;/li&gt; 
 &lt;li&gt;Right click and Select &#39;Manage Apps&#39; to open the Apps Manager.&lt;/li&gt; 
 &lt;li&gt;Click the ▶ to run App.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h3&gt;🅱️ Run TEN Agent in Codespace(no docker)&lt;/h3&gt; 
&lt;p&gt;GitHub offers free Codespace for each repository, you can run the playground in Codespace without using Docker.Also, the speed of Codespace is much faster than localhost.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codespaces.new/ten-framework/ten-agent&quot;&gt;&lt;img src=&quot;https://github.com/codespaces/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://theten.ai/docs/ten_agent/setup_development_env/setting_up_development_inside_codespace&quot;&gt;this guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;!-- ## 👀 TEN Agent Demo

Playground and Demo server different purposes, in a nut shell, think it as Playground is for you to customize you agent, and Demo is for you to deploy your agent.

Check out [this guide](https://theten.ai/docs/ten_agent/demo) for more details.
&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;

&lt;br&gt; --&gt; 
&lt;h2&gt;🛳️ TEN Agent Self Hosting&lt;/h2&gt; 
&lt;h4&gt;🅰️ Deploying with Docker&lt;/h4&gt; 
&lt;p&gt;Once you have customized your agent (either by using the TMAN Manager, Playground, or editing &lt;code&gt;property.json&lt;/code&gt; directly), you can deploy it by creating a release Docker image for your service.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://theten.ai/docs/ten_agent/deploy_ten_agent/deploy_agent_service&quot;&gt;Deployment Guide&lt;/a&gt; for detailed information about deployment.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h4&gt;🅱️ Deploying with other cloud services&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;!--
## 🏗️ TEN Agent Architecture

1️⃣ **TEN Agent App**: Core application that manages extensions and data flow based on graph configuration

2️⃣ **Dev Server**: `port:49480`- local server for development purposes.

3️⃣ **Web Server**: `port:8080`- Golang server handling HTTP requests and agent process management

4️⃣ **Front-end UI**:

- `port:3000` Playground - To customize and test your agent configurations.
- `port:3002` Demo - To deploy your agent without module picker.

![Components Diagram](https://ten-framework-assets.s3.us-east-1.amazonaws.com/diagram.jpg)

&lt;div align=&quot;right&quot;&gt;

[![][back-to-top]](#readme-top)

&lt;/div&gt;

&lt;br&gt; --&gt; 
&lt;h2&gt;🌍 TEN Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Preview&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten_framework&quot;&gt;&lt;strong&gt;🏚️ TEN Framework&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is an open-source framework for real-time, multimodal conversational AI.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten_framework?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;&lt;strong>️🔂 TEN Turn Detection&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is for full-duplex dialogue communication.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-turn-detection?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/8d0ec716-5d0e-43e4-ad9a-d97b17305658&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;&lt;strong&gt;🔉 TEN VAD&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN VAD is a low-latency, lightweight and high-performance streaming voice activity detector (VAD).&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-vad?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents&quot;&gt;&lt;strong&gt;🎙️ TEN Agent&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN Agent is a showcase of TEN Framewrok.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/38de2207-939b-4702-a0aa-04491f5b5275&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;&lt;strong&gt;🎨 TMAN Designer&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TMAN Designer is low/no code option to make a voice agent with easy to use workflow UI.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/804c3543-0a47-42b7-b40b-ef32b742fb8f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;&lt;strong&gt;📒 TEN Portal&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;The official site of TEN framework, it has documentation and blog.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/portal?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e17d8aaa-5928-45dd-ac71-814928e26a89&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;❓ Ask Questions&lt;/h2&gt; 
&lt;p&gt;TEN Framework is available on these AI-powered Q&amp;amp;A platforms. They can help you find answers quickly and accurately in multiple languages, covering everything from basic setup to advanced implementation details.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepWiki&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-framework&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ReadmeX&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://readmex.com/TEN-framework/ten-framework&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🥰 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome all forms of open-source collaboration! Whether you&#39;re fixing bugs, adding features, improving documentation, or sharing ideas - your contributions help advance personalized AI tools. Check out our GitHub Issues and Projects to find ways to contribute and show your skills. Together, we can build something amazing!&lt;/p&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Welcome all kinds of contributions&lt;/strong&gt; 🙏&lt;/p&gt; 
 &lt;p&gt;Join us in building TEN better! Every contribution makes a difference, from code to documentation. Share your TEN Agent projects on social media with to inspire others!&lt;/p&gt; 
 &lt;p&gt;Connect with one of the TEN maintainers &lt;a href=&quot;https://x.com/elliotchen100&quot;&gt;@elliotchen100&lt;/a&gt; on 𝕏 or &lt;a href=&quot;https://github.com/cyfyifanchen&quot;&gt;@cyfyifanchen&lt;/a&gt; on GitHub for project updates, discussions and collaboration opportunities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=TEN-framework/ten-agent&quot; alt=&quot;TEN&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contribution Guidelines&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/docs/code-of-conduct/contributing.md&quot;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The entire TEN framework (except for the folders explicitly listed below) is released under the Apache License, Version 2.0, with additional restrictions. For details, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file located in the root directory of the TEN framework.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The components within the &lt;code&gt;packages&lt;/code&gt; directory are released under the Apache License, Version 2.0. For details, please refer to the &lt;code&gt;LICENSE&lt;/code&gt; file located in each package&#39;s root directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The third-party libraries used by the TEN framework are listed and described in detail. For more information, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/third_party/&quot;&gt;third_party&lt;/a&gt; folder.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>mpv-player/mpv</title>
      <link>https://github.com/mpv-player/mpv</link>
      <description>&lt;p&gt;🎥 Command line media player&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mpv-player/mpv.io/master/source/images/mpv-logo-128.png&quot; alt=&quot;mpv logo&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;mpv&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#external-links&quot;&gt;External links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#overview&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#system-requirements&quot;&gt;System requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#downloads&quot;&gt;Downloads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#compilation&quot;&gt;Compilation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#release-cycle&quot;&gt;Release cycle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#bug-reports&quot;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;External links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mpv-player/mpv/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mpv-player/mpv/wiki/User-Scripts&quot;&gt;User Scripts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mpv-player/mpv/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mpv.io/manual/master/&quot;&gt;Manual&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;mpv&lt;/strong&gt; is a free (as in freedom) media player for the command line. It supports a wide variety of media file formats, audio and video codecs, and subtitle types.&lt;/p&gt; 
&lt;p&gt;There is a &lt;a href=&quot;https://github.com/mpv-player/mpv/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Releases can be found on the &lt;a href=&quot;https://github.com/mpv-player/mpv/releases&quot;&gt;release list&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;System requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A not too ancient Linux (usually, only the latest releases of distributions are actively supported), Windows 10 1607 or later, or macOS 10.15 or later.&lt;/li&gt; 
 &lt;li&gt;A somewhat capable CPU. Hardware decoding might help if the CPU is too slow to decode video in realtime, but must be explicitly enabled with the &lt;code&gt;--hwdec&lt;/code&gt; option.&lt;/li&gt; 
 &lt;li&gt;A not too crappy GPU. mpv&#39;s focus is not on power-efficient playback on embedded or integrated GPUs (for example, hardware decoding is not even enabled by default). Low power GPUs may cause issues like tearing, stutter, etc. On such GPUs, it&#39;s recommended to use &lt;code&gt;--profile=fast&lt;/code&gt; for smooth playback. The main video output uses shaders for video rendering and scaling, rather than GPU fixed function hardware. On Windows, you might want to make sure the graphics drivers are current. In some cases, ancient fallback video output methods can help (such as &lt;code&gt;--vo=xv&lt;/code&gt; on Linux), but this use is not recommended or supported.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;mpv does not go out of its way to break on older hardware or old, unsupported operating systems, but development is not done with them in mind. Keeping compatibility with such setups is not guaranteed. If things work, consider it a happy accident.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;For semi-official builds and third-party packages please see &lt;a href=&quot;https://mpv.io/installation/&quot;&gt;mpv.io/installation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;There is no complete changelog; however, changes to the player core interface are listed in the &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/DOCS/interface-changes.rst&quot;&gt;interface changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Changes to the C API are documented in the &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/DOCS/client-api-changes.rst&quot;&gt;client API changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/mpv-player/mpv/releases&quot;&gt;release list&lt;/a&gt; has a summary of most of the important changes on every release.&lt;/p&gt; 
&lt;p&gt;Changes to the default key bindings are indicated in &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/etc/restore-old-bindings.conf&quot;&gt;restore-old-bindings.conf&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Changes to the default OSC bindings are indicated in &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/etc/restore-osc-bindings.conf&quot;&gt;restore-osc-bindings.conf&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Compilation&lt;/h2&gt; 
&lt;p&gt;Compiling with full features requires development files for several external libraries. Mpv requires &lt;a href=&quot;https://mesonbuild.com/index.html&quot;&gt;meson&lt;/a&gt; to build. Meson can be obtained from your distro or PyPI.&lt;/p&gt; 
&lt;p&gt;After creating your build directory (e.g. &lt;code&gt;meson setup build&lt;/code&gt;), you can view a list of all the build options via &lt;code&gt;meson configure build&lt;/code&gt;. You could also just simply look at the &lt;code&gt;meson_options.txt&lt;/code&gt; file. Logs are stored in &lt;code&gt;meson-logs&lt;/code&gt; within your build directory.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;meson setup build
meson compile -C build
meson install -C build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For libplacebo, meson can use a git check out as a subproject for a convenient way to compile mpv if a sufficient libplacebo version is not easily available in the build environment. It will be statically linked with mpv. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mkdir -p subprojects
git clone https://code.videolan.org/videolan/libplacebo.git --depth=1 --recursive subprojects/libplacebo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Essential dependencies (incomplete list):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;gcc or clang&lt;/li&gt; 
 &lt;li&gt;X development headers (xlib, xrandr, xext, xscrnsaver, xpresent, libvdpau, libGL, GLX, EGL, xv, ...)&lt;/li&gt; 
 &lt;li&gt;Audio output development headers (libasound/ALSA, pulseaudio)&lt;/li&gt; 
 &lt;li&gt;FFmpeg libraries (libavutil libavcodec libavformat libswscale libavfilter and either libswresample or libavresample)&lt;/li&gt; 
 &lt;li&gt;libplacebo&lt;/li&gt; 
 &lt;li&gt;zlib&lt;/li&gt; 
 &lt;li&gt;iconv (normally provided by the system libc)&lt;/li&gt; 
 &lt;li&gt;libass (OSD, OSC, text subtitles)&lt;/li&gt; 
 &lt;li&gt;Lua (optional, required for the OSC pseudo-GUI and youtube-dl integration)&lt;/li&gt; 
 &lt;li&gt;libjpeg (optional, used for screenshots only)&lt;/li&gt; 
 &lt;li&gt;uchardet (optional, for subtitle charset detection)&lt;/li&gt; 
 &lt;li&gt;nvdec and vaapi libraries for hardware decoding on Linux (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Libass dependencies (when building libass):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;gcc or clang, nasm on x86 and x86_64&lt;/li&gt; 
 &lt;li&gt;fribidi, freetype, fontconfig development headers (for libass)&lt;/li&gt; 
 &lt;li&gt;harfbuzz (required for correct rendering of combining characters, particularly for correct rendering of non-English text on macOS, and Arabic/Indic scripts on any platform)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FFmpeg dependencies (when building FFmpeg):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;gcc or clang, nasm on x86 and x86_64&lt;/li&gt; 
 &lt;li&gt;OpenSSL or GnuTLS (have to be explicitly enabled when compiling FFmpeg)&lt;/li&gt; 
 &lt;li&gt;libx264/libmp3lame/libfdk-aac if you want to use encoding (have to be explicitly enabled when compiling FFmpeg)&lt;/li&gt; 
 &lt;li&gt;For native DASH playback, FFmpeg needs to be built with --enable-libxml2 (although there are security implications, and DASH support has lots of bugs).&lt;/li&gt; 
 &lt;li&gt;AV1 decoding support requires dav1d.&lt;/li&gt; 
 &lt;li&gt;For good nvidia support on Linux, make sure nv-codec-headers is installed and can be found by configure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most of the above libraries are available in suitable versions on normal Linux distributions. For ease of compiling the latest git master of everything, you may wish to use the separately available build wrapper (&lt;a href=&quot;https://github.com/mpv-player/mpv-build&quot;&gt;mpv-build&lt;/a&gt;) which first compiles FFmpeg libraries and libass, and then compiles the player statically linked against those.&lt;/p&gt; 
&lt;p&gt;If you want to build a Windows binary, see &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/DOCS/compile-windows.md&quot;&gt;Windows compilation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release cycle&lt;/h2&gt; 
&lt;p&gt;Once or twice a year, a release is cut off from the current development state and is assigned a 0.X.0 version number. No further maintenance is done, except in the event of security issues.&lt;/p&gt; 
&lt;p&gt;The goal of releases is to make Linux distributions happy. Linux distributions are also expected to apply their own patches in case of bugs.&lt;/p&gt; 
&lt;p&gt;Releases other than the latest release are unsupported and unmaintained.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/DOCS/release-policy.md&quot;&gt;release policy document&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Bug reports&lt;/h2&gt; 
&lt;p&gt;Please use the &lt;a href=&quot;https://github.com/mpv-player/mpv/issues&quot;&gt;issue tracker&lt;/a&gt; provided by GitHub to send us bug reports or feature requests. Follow the template&#39;s instructions or the issue will likely be ignored or closed as invalid.&lt;/p&gt; 
&lt;p&gt;Questions can be asked in the &lt;a href=&quot;https://github.com/mpv-player/mpv/discussions&quot;&gt;discussions&lt;/a&gt; or on IRC (see &lt;a href=&quot;https://raw.githubusercontent.com/mpv-player/mpv/master/#Contact&quot;&gt;Contact&lt;/a&gt; below).&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/DOCS/contribute.md&quot;&gt;contribute.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For small changes you can just send us pull requests through GitHub. For bigger changes come and talk to us on IRC before you start working on them. It will make code review easier for both parties later on.&lt;/p&gt; 
&lt;p&gt;You can check &lt;a href=&quot;https://github.com/mpv-player/mpv/wiki/Stuff-to-do&quot;&gt;the wiki&lt;/a&gt; or the &lt;a href=&quot;https://github.com/mpv-player/mpv/issues?q=is%3Aopen+is%3Aissue+label%3Ameta%3Afeature-request&quot;&gt;issue tracker&lt;/a&gt; for ideas on what you could contribute with.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;GPLv2 &quot;or later&quot; by default, LGPLv2.1 &quot;or later&quot; with &lt;code&gt;-Dgpl=false&lt;/code&gt;. See &lt;a href=&quot;https://github.com/mpv-player/mpv/raw/master/Copyright&quot;&gt;details.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;This software is based on the MPlayer project. Before mpv existed as a project, the code base was briefly developed under the mplayer2 project. For details, see the &lt;a href=&quot;https://github.com/mpv-player/mpv/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Most activity happens on the IRC channel and the GitHub issue tracker.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub issue tracker&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mpv-player/mpv/issues&quot;&gt;issue tracker&lt;/a&gt; (report bugs here)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discussions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mpv-player/mpv/discussions&quot;&gt;discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User IRC Channel&lt;/strong&gt;: &lt;code&gt;#mpv&lt;/code&gt; on &lt;code&gt;irc.libera.chat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer IRC Channel&lt;/strong&gt;: &lt;code&gt;#mpv-devel&lt;/code&gt; on &lt;code&gt;irc.libera.chat&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>OpenVPN/openvpn</title>
      <link>https://github.com/OpenVPN/openvpn</link>
      <description>&lt;p&gt;OpenVPN is an open source VPN daemon&lt;/p&gt;&lt;hr&gt;&lt;p&gt;OpenVPN -- A Secure tunneling daemon&lt;/p&gt; 
&lt;p&gt;Copyright (C) 2002-2022 OpenVPN Inc. This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 as published by the Free Software Foundation.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;To get the latest release of OpenVPN, go to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://openvpn.net/community-downloads/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To Build and Install,&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tar -zxf openvpn-&amp;lt;version&amp;gt;.tar.gz
cd openvpn-&amp;lt;version&amp;gt;
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or see the file INSTALL for more info.&lt;/p&gt; 
&lt;p&gt;For information on how to build OpenVPN on/for Windows with MinGW or MSVC see README.cmake.md.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;For detailed information on OpenVPN, including examples, see the man page &lt;a href=&quot;http://openvpn.net/man.html&quot;&gt;http://openvpn.net/man.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For a sample VPN configuration, see &lt;a href=&quot;http://openvpn.net/howto.html&quot;&gt;http://openvpn.net/howto.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To report an issue, see &lt;a href=&quot;https://github.com/OpenVPN/openvpn/issues/new&quot;&gt;https://github.com/OpenVPN/openvpn/issues/new&lt;/a&gt; (Note: We recently switched to GitHub for reporting new issues, old issues can be found at: &lt;a href=&quot;https://community.openvpn.net/openvpn/report&quot;&gt;https://community.openvpn.net/openvpn/report&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;For a description of OpenVPN&#39;s underlying protocol, see the file ssl.h included in the source distribution.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Other Files &amp;amp; Directories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;configure.ac -- script to rebuild our configure script and makefile.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;sample/sample-scripts/verify-cn&lt;/p&gt; &lt;p&gt;A sample perl script which can be used with OpenVPN&#39;s --tls-verify option to provide a customized authentication test on embedded X509 certificate fields.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;sample/sample-keys/&lt;/p&gt; &lt;p&gt;Sample RSA keys and certificates. DON&#39;T USE THESE FILES FOR ANYTHING OTHER THAN TESTING BECAUSE THEY ARE TOTALLY INSECURE.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;sample/sample-config-files/&lt;/p&gt; &lt;p&gt;A collection of OpenVPN config files and scripts from the HOWTO at &lt;a href=&quot;http://openvpn.net/howto.html&quot;&gt;http://openvpn.net/howto.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;Note that easy-rsa and tap-windows are now maintained in their own subprojects. Their source code is available here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OpenVPN/easy-rsa&quot;&gt;https://github.com/OpenVPN/easy-rsa&lt;/a&gt; &lt;a href=&quot;https://github.com/OpenVPN/tap-windows6&quot;&gt;https://github.com/OpenVPN/tap-windows6&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Community-provided Windows installers (MSI) and Debian packages are built from&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OpenVPN/openvpn-build&quot;&gt;https://github.com/OpenVPN/openvpn-build&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See the INSTALL file for usage information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lvgl/lvgl</title>
      <link>https://github.com/lvgl/lvgl</link>
      <description>&lt;p&gt;Embedded graphics library to create beautiful UIs for any MCU, MPU and display type.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/lvgl&quot; target=&quot;_blank&quot;&gt;&lt;img align=&quot;left&quot; src=&quot;https://lvgl.io/github-assets/sponsor.png&quot; height=&quot;32px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;right&quot;&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_zh.md&quot;&gt;中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_pt_BR.md&quot;&gt;Português do Brasil&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_jp.md&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/lvgl/lvgl/master/docs/README_he.md&quot;&gt;עברית&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &amp;nbsp; &lt;img src=&quot;https://lvgl.io/github-assets/logo-colored.png&quot; width=&quot;300px&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;&amp;nbsp; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;Light and Versatile Graphics Library&lt;/h1&gt; &amp;nbsp; 
&lt;br /&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://lvgl.io/github-assets/smartwatch-demo.gif&quot; /&gt; &amp;nbsp; &amp;nbsp; 
 &lt;img border=&quot;1px&quot; src=&quot;https://lvgl.io/github-assets/widgets-demo.gif&quot; /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://lvgl.io&quot; title=&quot;Homepage of LVGL&quot;&gt;Website &lt;/a&gt; | &lt;a href=&quot;https://docs.lvgl.io/&quot; title=&quot;Detailed documentation with 100+ examples&quot;&gt;Docs&lt;/a&gt; | &lt;a href=&quot;https://forum.lvgl.io&quot; title=&quot;Get help and help others&quot;&gt;Forum&lt;/a&gt; | &lt;a href=&quot;https://lvgl.io/demos&quot; title=&quot;Demos running in your browser&quot;&gt;Demos&lt;/a&gt; | &lt;a href=&quot;https://lvgl.io/services&quot; title=&quot;Graphics design, UI implementation and consulting&quot;&gt;Services&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;span&gt;📒&lt;/span&gt; Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Mature and Well-known&lt;/strong&gt;&lt;br /&gt; LVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It&#39;s supported by industry leading vendors and projects like &amp;nbsp;Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Feature Rich&lt;/strong&gt;&lt;br /&gt; It has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;br /&gt; Our team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🚀&lt;/span&gt; Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Free and Portable&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A fully portable C (C++ compatible) library with no external dependencies.&lt;/li&gt; 
 &lt;li&gt;Can be compiled to any MCU or MPU, with any (RT)OS.&lt;/li&gt; 
 &lt;li&gt;Supports monochrome, ePaper, OLED or TFT displays, or even monitors. &lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/display/index.html&quot;&gt;Displays&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Distributed under the MIT license, so you can easily use it in commercial projects too.&lt;/li&gt; 
 &lt;li&gt;Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering.&lt;/li&gt; 
 &lt;li&gt;OS, External memory and GPU are supported but not required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Widgets, Styles, Layouts and more&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;30+ built-in &lt;a href=&quot;https://docs.lvgl.io/master/details/widgets/index.html&quot;&gt;Widgets&lt;/a&gt;: &amp;nbsp;Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more.&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;a href=&quot;https://docs.lvgl.io/master/details/common-widget-features/styles/index.html&quot;&gt;Style system&lt;/a&gt; with &amp;nbsp;~100 style properties to customize any part of the widgets in any state.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/common-widget-features/layouts/flex.html&quot;&gt;Flexbox&lt;/a&gt; and &lt;a href=&quot;https://docs.lvgl.io/master/details/common-widget-features/layouts/grid.html&quot;&gt;Grid&lt;/a&gt;-like layouts engines to automatically size and position the widgets in a responsive way.&lt;/li&gt; 
 &lt;li&gt;Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems.&lt;/li&gt; 
 &lt;li&gt;Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts.&lt;/li&gt; 
 &lt;li&gt;Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc &amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder &lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/indev.html&quot;&gt;Input devices&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/display/overview.html#how-many-displays-can-lvgl-use&quot;&gt;Multiple display&lt;/a&gt; support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Binding and Build Support&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.lvgl.io/2019-02-20/micropython-bindings&quot;&gt;MicroPython Binding&lt;/a&gt; exposes LVGL API&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.lvgl.io/2022-08-24/pikascript-and-lvgl&quot;&gt;PikaScript Binding&lt;/a&gt; python on MCU lighter and easier.&lt;/li&gt; 
 &lt;li&gt;No custom build system is used. You can build LVGL as you build the other files of your project.&lt;/li&gt; 
 &lt;li&gt;Support for Make and &lt;a href=&quot;https://docs.lvgl.io/master/details/integration/building/cmake.html&quot;&gt;CMake&lt;/a&gt; is included out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html&quot;&gt;Develop on PC&lt;/a&gt; and use the same UI code on embedded hardware.&lt;/li&gt; 
 &lt;li&gt;Convert the C UI code to HTML file with our &lt;a href=&quot;https://github.com/lvgl/lv_web_emscripten&quot;&gt;Emscripten port&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Docs, Tools, and Services&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detailed &lt;a href=&quot;https://docs.lvgl.io/&quot;&gt;Documentation&lt;/a&gt; with &lt;a href=&quot;https://docs.lvgl.io/master/examples.html&quot;&gt;100+ simple examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lvgl.io/services&quot;&gt;Services&lt;/a&gt; such as User interface design, Implementation and Consulting to make UI development simpler and faster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;❤️&lt;/span&gt; Sponsor&lt;/h2&gt; 
&lt;p&gt;If LVGL saved you a lot of time and money or you just had fun using it, consider &lt;a href=&quot;https://github.com/sponsors/lvgl&quot;&gt;Supporting its Development&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How do we spend the donations?&lt;/strong&gt;&lt;br /&gt; Our goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How to donate?&lt;/strong&gt;&lt;br /&gt; We use &lt;a href=&quot;https://github.com/sponsors/lvgl&quot;&gt;GitHub Sponsors&lt;/a&gt; where you can easily send one time or recurring donations. You can also see all of our expenses in a transparent way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;How to get paid for your contribution?&lt;/strong&gt;&lt;br /&gt; If someone implements or fixes an issue labeled as &lt;a href=&quot;https://github.com/lvgl/lvgl/labels/Sponsored&quot;&gt;Sponsored&lt;/a&gt; he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a &lt;a href=&quot;https://github.com/lvgl/lvgl/labels/Sponsored&quot;&gt;Sponsored&lt;/a&gt; issue saying &quot;Hi, I&#39;d like to deal with it. This is how I&#39;m planning to fix/implement it...&quot;. A work is considered ready when it&#39;s approved and merged by a maintainer. After that you can submit and expense at &lt;a href=&quot;https://opencollective.com/lvgl&quot;&gt;opencollective.com&lt;/a&gt; and you will receive the payment in a few days.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Organizations supporting LVGL&lt;/strong&gt;&lt;br /&gt; &lt;a href=&quot;https://opencollective.com/lvgl&quot;&gt;&lt;img src=&quot;https://opencollective.com/lvgl/organizations.svg?width=600&quot; alt=&quot;Sponsors of LVGL&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Individuals supporting LVGL&lt;/strong&gt;&lt;br /&gt; &lt;a href=&quot;https://opencollective.com/lvgl&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&quot; alt=&quot;Backers of LVGL&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📦&lt;/span&gt; Packages&lt;/h2&gt; 
&lt;p&gt;LVGL is available as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/framework/arduino.html&quot;&gt;Arduino library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://registry.platformio.org/libraries/lvgl/lvgl&quot;&gt;PlatformIO package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/os/zephyr.html&quot;&gt;Zephyr library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://components.espressif.com/components/lvgl/lvgl&quot;&gt;ESP-IDF(ESP32) component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nxp.com/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY&quot;&gt;NXP MCUXpresso component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/os/nuttx.html&quot;&gt;NuttX library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.lvgl.io/master/details/integration/os/rt-thread.html&quot;&gt;RT-Thread RTOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CMSIS-Pack&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://doc.riot-os.org/group__pkg__lvgl.html#details&quot;&gt;RIOT OS package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;🤖&lt;/span&gt; Examples&lt;/h2&gt; 
&lt;p&gt;See some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor.&lt;/p&gt; 
&lt;p&gt;For more examples check out the &lt;a href=&quot;https://github.com/lvgl/lvgl/tree/master/examples&quot;&gt;Examples&lt;/a&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Hello world label&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_1.png&quot; alt=&quot;Simple Hello world label example in LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;/*Change the active screen&#39;s background color*/
lv_obj_set_style_bg_color(lv_screen_active(), lv_color_hex(0x003a57), LV_PART_MAIN);

/*Create a white label, set its text and align it to the center*/
lv_obj_t * label = lv_label_create(lv_screen_active());
lv_label_set_text(label, &quot;Hello world&quot;);
lv_obj_set_style_text_color(label, lv_color_hex(0xffffff), LV_PART_MAIN);
lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_direct=4ab7c40c35b0dc349aa2f0c3b00938d7d8e8ac9f&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Change the active screen&#39;s background color
scr = lv.screen_active()
scr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN)

# Create a white label, set its text and align it to the center
label = lv.label(lv.screen_active())
label.set_text(&quot;Hello world&quot;)
label.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN)
label.align(lv.ALIGN.CENTER, 0, 0)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Button with Click Event&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_2.gif&quot; alt=&quot;LVGL button with label example&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;lv_obj_t * button = lv_button_create(lv_screen_active()); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Add a button to the current screen*/
lv_obj_center(button); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;         /*Set its position*/
lv_obj_set_size(button, 100, 50); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Set its size*/
lv_obj_add_event_cb(button, button_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/

lv_obj_t * label = lv_label_create(button); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*Add a label to the button*/
lv_label_set_text(label, &quot;Button&quot;); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Set the labels text*/
lv_obj_center(label); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /*Align the label to the center*/
...

void button_event_cb(lv_event_t * e)
{
&amp;nbsp; printf(&quot;Clicked\n&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=926bde43ec7af0146c486de470c53f11f167491e&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def button_event_cb(e):
&amp;nbsp; print(&quot;Clicked&quot;)

# Create a Button and a Label
button = lv.button(lv.screen_active())
button.center()
button.set_size(100, 50)
button.add_event_cb(button_event_cb, lv.EVENT.CLICKED, None)

label = lv.label(button)
label.set_text(&quot;Button&quot;)
label.center()
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Checkboxes with Layout&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_3.gif&quot; alt=&quot;Checkboxes with layout in LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;
lv_obj_set_flex_flow(lv_screen_active(), LV_FLEX_FLOW_COLUMN);
lv_obj_set_flex_align(lv_screen_active(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER);

lv_obj_t * cb;
cb = lv_checkbox_create(lv_screen_active());
lv_checkbox_set_text(cb, &quot;Apple&quot;);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);

cb = lv_checkbox_create(lv_screen_active());
lv_checkbox_set_text(cb, &quot;Banana&quot;);
lv_obj_add_state(cb, LV_STATE_CHECKED);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);

cb = lv_checkbox_create(lv_screen_active());
lv_checkbox_set_text(cb, &quot;Lemon&quot;);
lv_obj_add_state(cb, LV_STATE_DISABLED);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);

cb = lv_checkbox_create(lv_screen_active());
lv_obj_add_state(cb, LV_STATE_CHECKED);
lv_obj_add_state(cb, LV_STATE_DISABLED);
lv_checkbox_set_text(cb, &quot;Melon\nand a new line&quot;);
lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=311d37e5f70daf1cb0d2cad24c7f72751b5f1792&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def event_handler(e):
    code = e.get_code()
    obj = e.get_target_obj()
    if code == lv.EVENT.VALUE_CHANGED:
        txt = obj.get_text()
        if obj.get_state() &amp;amp; lv.STATE.CHECKED:
            state = &quot;Checked&quot;
        else:
            state = &quot;Unchecked&quot;
        print(txt + &quot;:&quot; + state)


lv.screen_active().set_flex_flow(lv.FLEX_FLOW.COLUMN)
lv.screen_active().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER)

cb = lv.checkbox(lv.screen_active())
cb.set_text(&quot;Apple&quot;)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)

cb = lv.checkbox(lv.screen_active())
cb.set_text(&quot;Banana&quot;)
cb.add_state(lv.STATE.CHECKED)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)

cb = lv.checkbox(lv.screen_active())
cb.set_text(&quot;Lemon&quot;)
cb.add_state(lv.STATE.DISABLED)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)

cb = lv.checkbox(lv.screen_active())
cb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED)
cb.set_text(&quot;Melon&quot;)
cb.add_event_cb(event_handler, lv.EVENT.ALL, None)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;Styling a Slider&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_4.gif&quot; alt=&quot;Styling a slider with LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;lv_obj_t * slider = lv_slider_create(lv_screen_active());
lv_slider_set_value(slider, 70, LV_ANIM_OFF);
lv_obj_set_size(slider, 300, 20);
lv_obj_center(slider);

/*Add local styles to MAIN part (background rectangle)*/
lv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN);
lv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN);
lv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN);
lv_obj_set_style_border_width(slider, 5, LV_PART_MAIN);
lv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN);

/*Create a reusable style sheet for the INDICATOR part*/
static lv_style_t style_indicator;
lv_style_init(&amp;amp;style_indicator);
lv_style_set_bg_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));
lv_style_set_bg_grad_color(&amp;amp;style_indicator, lv_color_hex(0x1464F0));
lv_style_set_bg_grad_dir(&amp;amp;style_indicator, LV_GRAD_DIR_HOR);
lv_style_set_shadow_color(&amp;amp;style_indicator, lv_color_hex(0x37B9F5));
lv_style_set_shadow_width(&amp;amp;style_indicator, 15);
lv_style_set_shadow_spread(&amp;amp;style_indicator, 5);
4
/*Add the style sheet to the slider&#39;s INDICATOR part*/
lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_INDICATOR);

/*Add the same style to the KNOB part too and locally overwrite some properties*/
lv_obj_add_style(slider, &amp;amp;style_indicator, LV_PART_KNOB);

lv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB);
lv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB);
lv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB);
lv_obj_set_style_shadow_spread(slider, 2, LV_PART_KNOB);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=c431c7b4dfd2cc0dd9c392b74365d5af6ea986f0&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt; &lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;# Create a slider and add the style
slider = lv.slider(lv.screen_active())
slider.set_value(70, lv.ANIM.OFF)
slider.set_size(300, 20)
slider.center()

# Add local styles to MAIN part (background rectangle)
slider.set_style_bg_color(lv.color_hex(0x0F1215), lv.PART.MAIN)
slider.set_style_bg_opa(255, lv.PART.MAIN)
slider.set_style_border_color(lv.color_hex(0x333943), lv.PART.MAIN)
slider.set_style_border_width(5, lv.PART.MAIN)
slider.set_style_pad_all(5, lv.PART.MAIN)

# Create a reusable style sheet for the INDICATOR part
style_indicator = lv.style_t()
style_indicator.init()
style_indicator.set_bg_color(lv.color_hex(0x37B9F5))
style_indicator.set_bg_grad_color(lv.color_hex(0x1464F0))
style_indicator.set_bg_grad_dir(lv.GRAD_DIR.HOR)
style_indicator.set_shadow_color(lv.color_hex(0x37B9F5))
style_indicator.set_shadow_width(15)
style_indicator.set_shadow_spread(5)

# Add the style sheet to the slider&#39;s INDICATOR part
slider.add_style(style_indicator, lv.PART.INDICATOR)
slider.add_style(style_indicator, lv.PART.KNOB)

# Add the same style to the KNOB part too and locally overwrite some properties
slider.set_style_outline_color(lv.color_hex(0x0096FF), lv.PART.KNOB)
slider.set_style_outline_width(3, lv.PART.KNOB)
slider.set_style_outline_pad(-5, lv.PART.KNOB)
slider.set_style_shadow_spread(2, lv.PART.KNOB)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h3&gt;English, Hebrew (mixed LTR-RTL) and Chinese texts&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kisvegabor/test/raw/master/readme_example_5.png&quot; alt=&quot;English, Hebrew and Chinese texts with LVGL&quot; /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;C code&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;lv_obj_t * ltr_label = lv_label_create(lv_screen_active());
lv_label_set_text(ltr_label, &quot;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&quot;);
lv_obj_set_style_text_font(ltr_label, &amp;amp;lv_font_montserrat_16, 0);
lv_obj_set_width(ltr_label, 310);
lv_obj_align(ltr_label, LV_ALIGN_TOP_LEFT, 5, 5);

lv_obj_t * rtl_label = lv_label_create(lv_screen_active());
lv_label_set_text(rtl_label,&quot;מעבד, או בשמו המלא יחידת עיבוד מרכזית (באנגלית: CPU - Central Processing Unit).&quot;);
lv_obj_set_style_base_dir(rtl_label, LV_BASE_DIR_RTL, 0);
lv_obj_set_style_text_font(rtl_label, &amp;amp;lv_font_dejavu_16_persian_hebrew, 0);
lv_obj_set_width(rtl_label, 310);
lv_obj_align(rtl_label, LV_ALIGN_LEFT_MID, 5, 0);

lv_obj_t * cz_label = lv_label_create(lv_screen_active());
lv_label_set_text(cz_label,
                  &quot;嵌入式系统（Embedded System），\n是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机系统。&quot;);
lv_obj_set_style_text_font(cz_label, &amp;amp;lv_font_source_han_sans_sc_16_cjk, 0);
lv_obj_set_width(cz_label, 310);
lv_obj_align(cz_label, LV_ALIGN_BOTTOM_LEFT, 5, -5);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;MicroPython code | &lt;a href=&quot;https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&amp;amp;script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&amp;amp;script_direct=18bb38200a64e10ead1aa17a65c977fc18131842&quot; target=&quot;_blank&quot;&gt;Online Simulator&lt;/a&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;ltr_label = lv.label(lv.screen_active())
ltr_label.set_text(&quot;In modern terminology, a microcontroller is similar to a system on a chip (SoC).&quot;)
ltr_label.set_style_text_font(lv.font_montserrat_16, 0);

ltr_label.set_width(310)
ltr_label.align(lv.ALIGN.TOP_LEFT, 5, 5)

rtl_label = lv.label(lv.screen_active())
rtl_label.set_text(&quot;מעבד, או בשמו המלא יחידת עיבוד מרכזית (באנגלית: CPU - Central Processing Unit).&quot;)
rtl_label.set_style_base_dir(lv.BASE_DIR.RTL, 0)
rtl_label.set_style_text_font(lv.font_dejavu_16_persian_hebrew, 0)
rtl_label.set_width(310)
rtl_label.align(lv.ALIGN.LEFT_MID, 5, 0)

font_hans_sans_16_cjk = lv.font_load(&quot;S:../../assets/font/lv_font_source_han_sans_sc_16_cjk.fnt&quot;)

cz_label = lv.label(lv.screen_active())
cz_label.set_style_text_font(font_hans_sans_16_cjk, 0)
cz_label.set_text(&quot;嵌入式系统（Embedded System），\n是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机系统。&quot;)
cz_label.set_width(310)
cz_label.align(lv.ALIGN.BOTTOM_LEFT, 5, -5)

&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;span&gt;▶&lt;/span&gt; Get started&lt;/h2&gt; 
&lt;p&gt;This list will guide you to get started with LVGL step-by-step.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Get Familiar with LVGL&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check the &lt;a href=&quot;https://lvgl.io/demos&quot;&gt;Online demos&lt;/a&gt; to see LVGL in action (3 minutes).&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://docs.lvgl.io/master/intro/introduction/index.html&quot;&gt;Introduction&lt;/a&gt; page of the documentation (5 minutes).&lt;/li&gt; 
 &lt;li&gt;Get familiar with the basics on the &lt;a href=&quot;https://docs.lvgl.io/master/intro/getting_started/learn_the_basics.html&quot;&gt;Quick overview&lt;/a&gt; page (15 minutes).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Start to Use LVGL&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Set up a &lt;a href=&quot;https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html#simulator&quot;&gt;Simulator&lt;/a&gt; (10 minutes).&lt;/li&gt; 
 &lt;li&gt;Try out some &lt;a href=&quot;https://github.com/lvgl/lvgl/tree/master/examples&quot;&gt;Examples&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Port LVGL to a board. See the &lt;a href=&quot;https://docs.lvgl.io/master/details/integration/adding-lvgl-to-your-project/index.html&quot;&gt;Porting&lt;/a&gt; guide or check out the ready-to-use &lt;a href=&quot;https://github.com/lvgl?q=lv_port_&quot;&gt;Projects&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Become a Pro&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;7&quot;&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://docs.lvgl.io/master/details/main-modules/index.html&quot;&gt;Main-Modules&lt;/a&gt; page to get a better understanding of the library (2-3 hours)&lt;/li&gt; 
 &lt;li&gt;Check the documentation of the &lt;a href=&quot;https://docs.lvgl.io/master/details/widgets/index.html&quot;&gt;Widgets&lt;/a&gt; to see their features and usage&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Get Help and Help Others&lt;/strong&gt;&lt;/p&gt; 
&lt;ol start=&quot;9&quot;&gt; 
 &lt;li&gt;If you have questions go to the &lt;a href=&quot;http://forum.lvgl.io/&quot;&gt;Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://docs.lvgl.io/master/contributing/index.html&quot;&gt;Contributing&lt;/a&gt; guide to see how you can help to improve LVGL (15 minutes)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;span&gt;🤝&lt;/span&gt; Services&lt;/h2&gt; 
&lt;p&gt;LVGL LLC was established to provide a solid background for LVGL library and to offer several type of services to help you in UI development. With 15+ years of experience in the user interface and graphics industry we can help you the bring your UI to the next level.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Graphics design&lt;/strong&gt; Our in-house graphics designers are experts in creating beautiful modern designs which fit to your product and the resources of your hardware.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI implementation&lt;/strong&gt; We can also implement your UI based on the design you or we have created. You can be sure that we will make the most out of your hardware and LVGL. If a feature or widget is missing from LVGL, don&#39;t worry, we will implement it for you.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consulting and Support&lt;/strong&gt; We can support you with consulting as well to avoid pricey and time consuming mistakes during the UI development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Board certification&lt;/strong&gt; For companies who are offering development boards, or production ready kits we do board certification which shows how board can run LVGL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://lvgl.io/demos&quot;&gt;Demos&lt;/a&gt; as reference. For more information take look at the &lt;a href=&quot;https://lvgl.io/services&quot;&gt;Services page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://lvgl.io/#contact&quot;&gt;Contact us&lt;/a&gt; and tell how we can help.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🌟&lt;/span&gt; Contributing&lt;/h2&gt; 
&lt;p&gt;LVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs or even hosting your own project under the LVGL organization.&lt;/p&gt; 
&lt;p&gt;For a detailed description of contribution opportunities visit the &lt;a href=&quot;https://docs.lvgl.io/master/contributing/index.html&quot;&gt;Contributing&lt;/a&gt; section of the documentation.&lt;/p&gt; 
&lt;p&gt;More than 300 people already left their fingerprint in LVGL. Be one them! See you here! &lt;span&gt;🙂&lt;/span&gt;&lt;/p&gt; 
&lt;a href=&quot;https://github.com/lvgl/lvgl/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=lvgl/lvgl&amp;amp;max=48&quot; /&gt; &lt;/a&gt; 
&lt;p&gt;... and many other.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
