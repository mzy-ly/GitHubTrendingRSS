<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Kotlin Monthly Trending</title>
    <description>Monthly Trending of Kotlin in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:54:13 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>mostafaalagamy/Metrolist</title>
      <link>https://github.com/mostafaalagamy/Metrolist</link>
      <description>&lt;p&gt;YouTube Music client for Android&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/icon.png&quot; width=&quot;160&quot; height=&quot;160&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt; 
 &lt;h1&gt;Metrolist&lt;/h1&gt; 
 &lt;p&gt;YouTube Music client for Android&lt;/p&gt; 
 &lt;div style=&quot;padding: 16px; margin: 16px 0; background-color: #FFFBE5; border-left: 6px solid #FFC107; border-radius: 4px;&quot;&gt; 
  &lt;h2 style=&quot;margin: 0;&quot;&gt;&lt;strong&gt;⚠Warning&lt;/strong&gt;&lt;/h2&gt; If you&#39;re in a region where YouTube Music is not supported, you won&#39;t be able to use this app 
  &lt;strong&gt;unless&lt;/strong&gt; you have a proxy or VPN to connect to a YTM-supported region. 
 &lt;/div&gt; 
 &lt;h1&gt;Screenshots&lt;/h1&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/screenshots/screenshot_1.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/screenshots/screenshot_2.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/screenshots/screenshot_3.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/screenshots/screenshot_4.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/screenshots/screenshot_5.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/screenshots/screenshot_6.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;p&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/featureGraphic.png&quot; width=&quot;91%&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mostafaalagamy/Metrolist/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/mostafaalagamy/Metrolist?style=for-the-badge&quot; alt=&quot;Latest release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/mostafaalagamy/metrolist?style=for-the-badge&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mostafaalagamy/Metrolist/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/mostafaalagamy/Metrolist/total?style=for-the-badge&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;Features&lt;/h1&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Play any song or video from YT Music&lt;/li&gt; 
 &lt;li&gt;Background playback&lt;/li&gt; 
 &lt;li&gt;Personalized quick picks&lt;/li&gt; 
 &lt;li&gt;Library management&lt;/li&gt; 
 &lt;li&gt;Download and cache songs for offline playback&lt;/li&gt; 
 &lt;li&gt;Search for songs, albums, artists, videos and playlists&lt;/li&gt; 
 &lt;li&gt;Live lyrics&lt;/li&gt; 
 &lt;li&gt;YouTube Music account login support&lt;/li&gt; 
 &lt;li&gt;Syncing of songs, artists, albums and playlists, from and to your account&lt;/li&gt; 
 &lt;li&gt;Skip silence&lt;/li&gt; 
 &lt;li&gt;Import playlists&lt;/li&gt; 
 &lt;li&gt;Audio normalization&lt;/li&gt; 
 &lt;li&gt;Adjust tempo/pitch&lt;/li&gt; 
 &lt;li&gt;Local playlist management&lt;/li&gt; 
 &lt;li&gt;Reorder songs in playlist or queue&lt;/li&gt; 
 &lt;li&gt;Light - Dark - black - Dynamic theme&lt;/li&gt; 
 &lt;li&gt;Sleep timer&lt;/li&gt; 
 &lt;li&gt;Material 3&lt;/li&gt; 
 &lt;li&gt;etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;Download Now&lt;/h1&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mostafaalagamy/Metrolist/releases/latest/download/Metrolist.apk&quot;&gt;&lt;img src=&quot;https://github.com/machiav3lli/oandbackupx/raw/034b226cea5c1b30eb4f6a6f313e4dadcbb0ece4/badge_github.png&quot; alt=&quot;Get it on GitHub&quot; height=&quot;82&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://apt.izzysoft.de/fdroid/index/apk/com.metrolist.music&quot;&gt;&lt;img src=&quot;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&quot; alt=&quot;Get it on IzzyOnDroid&quot; height=&quot;80&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://f-droid.org/packages/com.metrolist.music&quot;&gt;&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; height=&quot;80&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.openapk.net/metrolist/com.metrolist.music/&quot;&gt;&lt;img src=&quot;https://www.openapk.net/images/openapk-badge.png&quot; alt=&quot;Get it on OpenAPK&quot; height=&quot;80&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://apps.obtainium.imranr.dev/redirect?r=obtainium://add/https://github.com/mostafaalagamy/Metrolist/&quot;&gt;&lt;img src=&quot;https://github.com/ImranR98/Obtainium/raw/main/assets/graphics/badge_obtainium.png&quot; alt=&quot;Get it on Obtainium&quot; height=&quot;55&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://belberi.com/metrolist/?fbclid=PAY2xjawJP5dlleHRuA2FlbQIxMAABpjSk1oBp4e8aSV4nfX2dfunQObTlMWIkN-aVA9CSq36pnmkHsvfoYTjhHg_aem_9o9OGbQuZ2PjJTArq21UDA&quot;&gt;&lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/fastlane/metadata/android/en-US/images/belberi_github.png&quot; alt=&quot;Get it on Belberi&quot; height=&quot;82&quot; align=&quot;center&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;Translations&lt;/h1&gt; 
 &lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/engage/metrolist/&quot;&gt;&lt;img src=&quot;https://img.shields.io/weblate/progress/metrolist?style=for-the-badge&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;We use Weblate to translate Metrolist. For more details or to get started, visit our &lt;a href=&quot;https://hosted.weblate.org/projects/Metrolist/&quot;&gt;Weblate page&lt;/a&gt;.&lt;/p&gt; 
 &lt;a href=&quot;https://hosted.weblate.org/projects/Metrolist/&quot;&gt; &lt;img src=&quot;https://hosted.weblate.org/widget/Metrolist/multi-auto.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt; &lt;/a&gt; 
 &lt;p&gt;Thank you very much for helping to make Metrolist accessible to many people worldwide.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;FAQ&lt;/h1&gt; 
&lt;/div&gt; 
&lt;h3&gt; Q: Why Metrolist isn&#39;t showing in Android Auto? &lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to Android Auto&#39;s settings and tap multiple times on the version in the bottom to enable developer settings&lt;/li&gt; 
 &lt;li&gt;In the three dots menu at the top-right of the screen, click &quot;Developer settings&quot;&lt;/li&gt; 
 &lt;li&gt;Enable &quot;Unknown sources&quot;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt; Q: How to scrobble music to LastFM, LibreFM, ListenBrainz or GNU FM? &lt;/h3&gt; 
&lt;p&gt;Use other music scrobbler apps, I recommend &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.arn.scrobble&quot;&gt;Pano Scrobbler&lt;/a&gt;.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;Support Me&lt;/h1&gt; 
 &lt;p&gt;If you&#39;d like to support my work, send a Monero (XMR) donation to this address:&lt;/p&gt; 
 &lt;p&gt;44XjSELSWcgJTZiCKzjpCQWyXhokrH9RqH3rpp35FkSKi57T25hniHWHQNhLeXyFn3DDYqufmfRB1iEtENerZpJc7xJCcqt&lt;/p&gt; 
 &lt;p&gt;Or scan this QR code:&lt;/p&gt; 
 &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/assets/XMR.png&quot; alt=&quot;QR Code&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Or other&lt;/p&gt; 
 &lt;a href=&quot;https://www.buymeacoffee.com/mostafaalagamy&quot;&gt; &lt;img src=&quot;https://github.com/mostafaalagamy/Metrolist/raw/main/assets/buymeacoffee.png?raw=true&quot; alt=&quot;Buy Me a Coffee&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://liberapay.com/mostafaalagamy/donate&quot;&gt; &lt;img src=&quot;https://liberapay.com/assets/widgets/donate.svg?sanitize=true&quot; alt=&quot;Donate&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt; &lt;/a&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;h1&gt;Special thanks&lt;/h1&gt; 
  &lt;p&gt;InnerTune: &lt;a href=&quot;https://github.com/z-huang&quot;&gt;Zion Huang&lt;/a&gt;, &lt;a href=&quot;https://github.com/Malopieds&quot;&gt;Malopieds&lt;/a&gt;, OuterTune: &lt;a href=&quot;https://github.com/DD3Boh&quot;&gt;Davide Garberi&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikooomich&quot;&gt;Michael Zh&lt;/a&gt;, Muzza: &lt;a href=&quot;https://github.com/Maloy-Android&quot;&gt;Maloy Android&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;h1&gt;Disclaimer&lt;/h1&gt; 
 &lt;/div&gt; 
 &lt;p&gt;This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with YouTube, Google LLC, Metrolist Group LLC or any of its affiliates and subsidiaries.&lt;/p&gt; 
 &lt;p&gt;Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>gotson/komga</title>
      <link>https://github.com/gotson/komga</link>
      <description>&lt;p&gt;Media server for comics/mangas/BDs/magazines/eBooks with API, OPDS, Kobo Sync and KOReader Sync support&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://opencollective.com/komga&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/all/komga?label=OpenCollective%20Sponsors&amp;amp;color=success&quot; alt=&quot;Open Collective backers and sponsors&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/gotson&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/gotson?label=Github%20Sponsors&amp;amp;color=success&quot; alt=&quot;GitHub Sponsors&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/TdRpkDu&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/678794935368941569?label=Discord&amp;amp;color=blue&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/gotson/komga/actions?query=workflow%3ATests+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/gotson/komga/tests.yml?branch=master&quot; alt=&quot;GitHub Workflow Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/gotson/komga/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/gotson/komga?color=blue&amp;amp;label=download&amp;amp;sort=semver&quot; alt=&quot;GitHub release (latest SemVer)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/gotson/komga/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/gotson/komga/total?color=blue&amp;amp;label=github%20downloads&quot; alt=&quot;GitHub all releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/gotson/komga&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/gotson/komga&quot; alt=&quot;Docker Pulls&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/engage/komga/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/komga/-/webui/svg-badge.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gotson/komga/master/.github/readme-images/app-icon.png&quot; alt=&quot;app icon&quot; /&gt; Komga&lt;/h1&gt; 
&lt;p&gt;Komga is a media server for your comics, mangas, BDs, magazines and eBooks.&lt;/p&gt; 
&lt;h4&gt;Chat on &lt;a href=&quot;https://discord.gg/TdRpkDu&quot;&gt;Discord&lt;/a&gt;&lt;/h4&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Browse libraries, series and books via a responsive web UI that works on desktop, tablets and phones&lt;/li&gt; 
 &lt;li&gt;Organize your library with collections and read lists&lt;/li&gt; 
 &lt;li&gt;Edit metadata for your series and books&lt;/li&gt; 
 &lt;li&gt;Import embedded metadata automatically&lt;/li&gt; 
 &lt;li&gt;Webreader with multiple reading modes&lt;/li&gt; 
 &lt;li&gt;Manage multiple users, with per-library access control, age restrictions, and labels restrictions&lt;/li&gt; 
 &lt;li&gt;Offers a REST API, many community tools and scripts can interact with Komga&lt;/li&gt; 
 &lt;li&gt;OPDS v1 and v2 support&lt;/li&gt; 
 &lt;li&gt;Kobo Sync with your Kobo eReader&lt;/li&gt; 
 &lt;li&gt;KOReader Sync&lt;/li&gt; 
 &lt;li&gt;Download book files, whole series, or read lists&lt;/li&gt; 
 &lt;li&gt;Duplicate files detection&lt;/li&gt; 
 &lt;li&gt;Duplicate pages detection and removal&lt;/li&gt; 
 &lt;li&gt;Import books from outside your libraries directly into your series folder&lt;/li&gt; 
 &lt;li&gt;Import ComicRack &lt;code&gt;cbl&lt;/code&gt; read lists&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Refer to the &lt;a href=&quot;https://komga.org/docs/category/installation&quot;&gt;website&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Head over to our &lt;a href=&quot;https://komga.org&quot;&gt;website&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Develop in Komga&lt;/h2&gt; 
&lt;p&gt;Check the &lt;a href=&quot;https://raw.githubusercontent.com/gotson/komga/master/DEVELOPING.md&quot;&gt;development guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/engage/komga/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/komga/-/webui/horizontal-auto.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/?from=Komga&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/gotson/komga/master/.github/readme-images/jetbrains.svg?sanitize=true&quot; alt=&quot;Jetbrains_logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;The Komga icon is based on an icon made by &lt;a href=&quot;https://www.freepik.com/home&quot;&gt;Freepik&lt;/a&gt; from &lt;a href=&quot;http://www.flaticon.com&quot;&gt;www.flaticon.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mihonapp/mihon</title>
      <link>https://github.com/mihonapp/mihon</link>
      <description>&lt;p&gt;Free and open source manga reader for Android&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://mihon.app&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mihonapp/mihon/main/.github/assets/logo.png&quot; alt=&quot;Mihon logo&quot; title=&quot;Mihon logo&quot; width=&quot;80&quot; /&gt; &lt;/a&gt; 
 &lt;h1&gt;Mihon &lt;a href=&quot;https://raw.githubusercontent.com/mihonapp/mihon/main/#&quot;&gt;App&lt;/a&gt;&lt;/h1&gt; 
 &lt;h3&gt;Full-featured reader&lt;/h3&gt; 
 &lt;p&gt;Discover and read manga, webtoons, comics, and more – easier than ever on your Android device.&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://discord.gg/mihon&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1195734228319617024.svg?label=&amp;amp;labelColor=6A7EC2&amp;amp;color=7389D8&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&quot; alt=&quot;Discord server&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://mihon.app/download&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/mihonapp/mihon/total?label=downloads&amp;amp;labelColor=27303D&amp;amp;color=0D1117&amp;amp;logo=github&amp;amp;logoColor=FFFFFF&amp;amp;style=flat&quot; alt=&quot;GitHub downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mihonapp/mihon/actions/workflows/build_push.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/mihonapp/mihon/build.yml?labelColor=27303D&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/mihonapp/mihon/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/mihonapp/mihon?labelColor=27303D&amp;amp;color=0877d2&quot; alt=&quot;License: Apache-2.0&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/mihon/&quot;&gt;&lt;img src=&quot;https://img.shields.io/weblate/progress/mihon?labelColor=27303D&amp;amp;color=946300&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h2&gt;Download&lt;/h2&gt; 
 &lt;p&gt;&lt;a href=&quot;https://mihon.app/download&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/mihonapp/mihon.svg?maxAge=3600&amp;amp;label=Stable&amp;amp;labelColor=06599d&amp;amp;color=043b69&quot; alt=&quot;Mihon Stable&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://mihon.app/download&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/mihonapp/mihon-preview.svg?maxAge=3600&amp;amp;label=Beta&amp;amp;labelColor=2c2c47&amp;amp;color=1c1c39&quot; alt=&quot;Mihon Beta&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;Requires Android 8.0 or higher.&lt;/em&gt;&lt;/p&gt; 
 &lt;h2&gt;Features&lt;/h2&gt; 
 &lt;div align=&quot;left&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Local reading of content.&lt;/li&gt; 
   &lt;li&gt;A configurable reader with multiple viewers, reading directions and other settings.&lt;/li&gt; 
   &lt;li&gt;Tracker support: &lt;a href=&quot;https://myanimelist.net/&quot;&gt;MyAnimeList&lt;/a&gt;, &lt;a href=&quot;https://anilist.co/&quot;&gt;AniList&lt;/a&gt;, &lt;a href=&quot;https://kitsu.app/&quot;&gt;Kitsu&lt;/a&gt;, &lt;a href=&quot;https://mangaupdates.com&quot;&gt;MangaUpdates&lt;/a&gt;, &lt;a href=&quot;https://shikimori.one&quot;&gt;Shikimori&lt;/a&gt;, and &lt;a href=&quot;https://bgm.tv/&quot;&gt;Bangumi&lt;/a&gt; support.&lt;/li&gt; 
   &lt;li&gt;Categories to organize your library.&lt;/li&gt; 
   &lt;li&gt;Light and dark themes.&lt;/li&gt; 
   &lt;li&gt;Schedule updating your library for new chapters.&lt;/li&gt; 
   &lt;li&gt;Create backups locally to read offline or to your desired cloud service.&lt;/li&gt; 
   &lt;li&gt;Plus much more...&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;h2&gt;Contributing&lt;/h2&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/mihonapp/mihon/main/CODE_OF_CONDUCT.md&quot;&gt;Code of conduct&lt;/a&gt; · &lt;a href=&quot;https://raw.githubusercontent.com/mihonapp/mihon/main/CONTRIBUTING.md&quot;&gt;Contributing guide&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; 
 &lt;p&gt;Before reporting a new issue, take a look at the &lt;a href=&quot;https://mihon.app/docs/faq/general&quot;&gt;FAQ&lt;/a&gt;, the &lt;a href=&quot;https://mihon.app/changelogs/&quot;&gt;changelog&lt;/a&gt; and the already opened &lt;a href=&quot;https://github.com/mihonapp/mihon/issues&quot;&gt;issues&lt;/a&gt;; if you got any questions, join our &lt;a href=&quot;https://discord.gg/mihon&quot;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; 
 &lt;h3&gt;Repositories&lt;/h3&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/mihonapp/website/&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=mihonapp&amp;amp;repo=website&amp;amp;bg_color=161B22&amp;amp;text_color=c9d1d9&amp;amp;title_color=0877d2&amp;amp;icon_color=0877d2&amp;amp;border_radius=8&amp;amp;hide_border=true&amp;amp;description_lines_count=2&quot; alt=&quot;mihonapp/website - GitHub&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/mihonapp/bitmap.kt/&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=mihonapp&amp;amp;repo=bitmap.kt&amp;amp;bg_color=161B22&amp;amp;text_color=c9d1d9&amp;amp;title_color=0877d2&amp;amp;icon_color=0877d2&amp;amp;border_radius=8&amp;amp;hide_border=true&amp;amp;description_lines_count=2&quot; alt=&quot;mihonapp/bitmap.kt - GitHub&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt;Credits&lt;/h3&gt; 
 &lt;p&gt;Thank you to all the people who have contributed!&lt;/p&gt; 
 &lt;a href=&quot;https://github.com/mihonapp/mihon/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=mihonapp/mihon&quot; alt=&quot;Mihon app contributors&quot; title=&quot;Mihon app contributors&quot; width=&quot;800&quot; /&gt; &lt;/a&gt; 
 &lt;h3&gt;Disclaimer&lt;/h3&gt; 
 &lt;p&gt;The developer(s) of this application does not have any affiliation with the content providers available, and this application hosts zero content.&lt;/p&gt; 
 &lt;h3&gt;License&lt;/h3&gt; 
 &lt;pre&gt;
Copyright © 2015 Javier Tomás
Copyright © 2024 Mihon Open Source Project

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/pre&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>thunderbird/thunderbird-android</title>
      <link>https://github.com/thunderbird/thunderbird-android</link>
      <description>&lt;p&gt;Thunderbird for Android – Open Source Email App for Android (fka K-9 Mail)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Thunderbird for Android&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=net.thunderbird.android&amp;amp;referrer=utm_campaign%3Dandroid_metadata%26utm_medium%3Dweb%26utm_source%3Dgithub.com%26utm_content%3Dbadge&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/docs/assets/get-it-on-play.png&quot; alt=&quot;Get it on Google Play&quot; height=&quot;28&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://f-droid.org/packages/net.thunderbird.android&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/docs/assets/get-it-on-fdroid.png&quot; alt=&quot;Get it on F-Droid&quot; height=&quot;28&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/thunderbird/thunderbird-android/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/thunderbird/thunderbird-android.svg?style=for-the-badge&amp;amp;filter=THUNDERBIRD_*&amp;amp;logo=thunderbird&quot; alt=&quot;Latest release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/thunderbird/thunderbird-android/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/thunderbird/thunderbird-android.svg?include_prereleases&amp;amp;style=for-the-badge&amp;amp;label=beta&amp;amp;filter=THUNDERBIRD_*b*&amp;amp;logo=thunderbird&quot; alt=&quot;Latest beta release&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thunderbird for Android is a powerful, privacy-focused email app. Effortlessly manage multiple email accounts from one app, with a Unified Inbox option for maximum productivity. Built on open-source technology and supported by a dedicated team of developers alongside a global community of volunteers, Thunderbird never treats your private data as a product.&lt;/p&gt; 
&lt;p&gt;Thunderbird for Android is based on K-9 Mail, which comes with a rich history of success and functionality in open source email.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Thunderbird for Android can be downloaded from a couple of sources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Thunderbird on &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.thunderbird.android&amp;amp;referrer=utm_campaign%3Dandroid_metadata%26utm_medium%3Dweb%26utm_source%3Dgithub.com%26utm_content%3Dlink&quot;&gt;Google Play&lt;/a&gt; or &lt;a href=&quot;https://f-droid.org/packages/net.thunderbird.android&quot;&gt;F-Droid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Thunderbird Beta on &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.thunderbird.android.beta&amp;amp;referrer=utm_campaign%3Dandroid_metadata%26utm_medium%3Dweb%26utm_source%3Dgithub.com%26utm_content%3Dlink&quot;&gt;Google Play&lt;/a&gt; or &lt;a href=&quot;https://f-droid.org/packages/net.thunderbird.android.beta&quot;&gt;F-Droid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/thunderbird/thunderbird-android/releases&quot;&gt;Github Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://f-droid.org/packages/de.marmaro.krt.ffupdater/&quot;&gt;FFUpdater&lt;/a&gt; allows installing the latest versions from ftp.mozilla.org&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By using Thunderbird for Android Beta, you have early access to current development and are able to try new features earlier.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/thunderbird/thunderbird-android/releases&quot;&gt;Release Notes&lt;/a&gt; to find out what changed in each version of Thunderbird for Android.&lt;/p&gt; 
&lt;p&gt;The SHA-256 fingerprints for our signing certificates are available in &lt;a href=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/SECURITY.md#verifying-fingerprints&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Need Help? Found a bug? Have an idea? Want to chat?&lt;/h2&gt; 
&lt;p&gt;If the app is not behaving like it should, or you are not sure if you&#39;ve encountered a bug:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://support.mozilla.org/products/thunderbird-android&quot;&gt;knowledge base&lt;/a&gt; and &lt;a href=&quot;https://support.mozilla.org/kb/thunderbird-android-8-faq&quot;&gt;frequently asked questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ask a question on our &lt;a href=&quot;https://support.mozilla.org/en-US/questions/new/thunderbird-android&quot;&gt;support forum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are certain you&#39;ve identified a bug in Thunderbird for Android and would like to help fix it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;File an issue on &lt;a href=&quot;https://github.com/thunderbird/thunderbird-android/issues&quot;&gt;our GitHub issue tracker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have an idea how to improve Thunderbird for Android:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tell us about and vote on your feature ideas on &lt;a href=&quot;https://connect.mozilla.org/t5/ideas/idb-p/ideas/label-name/thunderbird%20android&quot;&gt;connect.mozilla.org&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join the discussion about the latest changes in the &lt;a href=&quot;https://thunderbird.topicbox.com/groups/android-beta&quot;&gt;Thunderbird Android Beta Topicbox&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Thunderbird Community uses Matrix to communicate:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;General chat about Thunderbird for Android and K-9 Mail: &lt;a href=&quot;https://matrix.to/#/#tb-android:mozilla.org&quot;&gt;#tb-android:mozilla.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Development and other ways to contribute: &lt;a href=&quot;https://matrix.to/#/#tb-android-dev:mozilla.org&quot;&gt;#tb-android-dev:mozilla.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reach the broader Thunderbird Community in the &lt;a href=&quot;https://matrix.to/#/#thunderbird-community:mozilla.org&quot;&gt;community space&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from everyone.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Development: Have you done a little bit of Kotlin? The &lt;a href=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/docs/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guide will help you get started&lt;/li&gt; 
 &lt;li&gt;Translations: Do you speak a language aside from English? &lt;a href=&quot;https://hosted.weblate.org/projects/tb-android/&quot;&gt;Translating is easy&lt;/a&gt; and just takes a few minutes for your first success.&lt;/li&gt; 
 &lt;li&gt;We have &lt;a href=&quot;https://blog.thunderbird.net/2024/09/contribute-to-thunderbird-for-android/&quot;&gt;a number of other contribution opportunities&lt;/a&gt; available.&lt;/li&gt; 
 &lt;li&gt;Thunderbird is supported solely by financial contributions from users like you. &lt;a href=&quot;https://www.thunderbird.net/donate/mobile/?form=tfa&quot;&gt;Make a financial contribution today&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Make sure to check out the &lt;a href=&quot;https://www.mozilla.org/about/governance/policies/participation/&quot;&gt;Mozilla Community Participation Guidelines&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Architecture Decision Records (ADR)&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href=&quot;https://adr.github.io/&quot;&gt;Architecture Decision Records&lt;/a&gt; to document the architectural decisions made in the development of Thunderbird for Android. You can find them in the &lt;a href=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/docs/architecture/adr&quot;&gt;&lt;code&gt;docs/architecture/adr&lt;/code&gt;&lt;/a&gt; directory.&lt;/p&gt; 
&lt;p&gt;For more information about our ADRs, please see the &lt;a href=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/docs/architecture/adr/README.md&quot;&gt;ADRs README&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We encourage team members and contributors to read through our ADRs to understand the architectural decisions that have shaped this project so far. Feel free to propose new ADRs or suggest modifications to existing ones as needed.&lt;/p&gt; 
&lt;h2&gt;K-9 Mail&lt;/h2&gt; 
&lt;p&gt;In June 2022, &lt;a href=&quot;https://k9mail.app/2022/06/13/K-9-Mail-and-Thunderbird.html&quot;&gt;K-9 Mail joined the Thunderbird family&lt;/a&gt; as the foundation for Thunderbird on Android. Since then, we’ve been updating both apps to give users the same solid experience, so it’s normal to notice that K-9 Mail and Thunderbird look and feel nearly identical. They’re built on the same code, and that’s intentional. You&#39;ll notice some features are selectively enabled for Thunderbird as opposed to K-9 Mail, usually when they are simply a better fit for Thunderbird (like the import from K-9 functionality).&lt;/p&gt; 
&lt;p&gt;If you prefer the robot dog and would like to keep K-9 Mail around, you can find it here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.fsck.k9&amp;amp;utm_source=thunderbird-android-github&amp;amp;utm_campaign=download-section&quot;&gt;K-9 Mail on Google Play&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://f-droid.org/packages/com.fsck.k9/&quot;&gt;K-9 Mail on F-Droid&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Forking&lt;/h2&gt; 
&lt;p&gt;If you want to use a fork of this project please ensure that you replace the OAuth client setup in the &lt;code&gt;app-k9mail/src/{debug,release}/kotlin/app/k9mail/auth/K9OAuthConfigurationFactory.kt&lt;/code&gt; and &lt;code&gt;app-thunderbird/src/{debug,daily,beta,release}/kotlin/net/thunderbird/android/auth/TbOAuthConfigurationFactory.kt&lt;/code&gt; with your own OAuth client setup and ensure that the &lt;code&gt;redirectUri&lt;/code&gt; is different to the one used in the main project. This is to prevent conflicts with the main app when both are installed on the same device.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Thunderbird for Android is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/thunderbird/thunderbird-android/main/LICENSE&quot;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>duckduckgo/Android</title>
      <link>https://github.com/duckduckgo/Android</link>
      <description>&lt;p&gt;DuckDuckGo Android App&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DuckDuckGo Android&lt;/h1&gt; 
&lt;p&gt;Welcome to our android application. We are excited to engage the community in development, see &lt;a href=&quot;https://raw.githubusercontent.com/duckduckgo/Android/develop/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;We are hiring!&lt;/h2&gt; 
&lt;p&gt;DuckDuckGo is growing fast and we continue to expand our fully distributed team. We embrace diverse perspectives, and seek out passionate, self-motivated people, committed to our shared vision of raising the standard of trust online. If you are a senior software engineer capable in either iOS or Android, visit our &lt;a href=&quot;https://duckduckgo.com/hiring/#open&quot;&gt;careers&lt;/a&gt; page to find out more about our openings!&lt;/p&gt; 
&lt;h2&gt;Building the Project&lt;/h2&gt; 
&lt;p&gt;We use git submodules and so when you are checking out the app, you&#39;ll need to ensure the submodules are initialized properly. You can use the &lt;code&gt;--recursive&lt;/code&gt; flag when cloning the project to do this.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/duckduckgo/android.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, if you already have the project checked out, you can initialize the submodules manually.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git submodule update --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Terminology&lt;/h2&gt; 
&lt;p&gt;We have taken steps to update our terminology and remove words with problematic racial connotations, most notably the change to &lt;code&gt;main&lt;/code&gt; branches, &lt;code&gt;allow lists&lt;/code&gt;, and &lt;code&gt;blocklists&lt;/code&gt;. Closed issues or PRs may contain deprecated terminology that should not be used going forward.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href=&quot;https://raw.githubusercontent.com/duckduckgo/Android/develop/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discuss&lt;/h2&gt; 
&lt;p&gt;Contact us at &lt;a href=&quot;https://duckduckgo.com/feedback&quot;&gt;https://duckduckgo.com/feedback&lt;/a&gt; if you have feedback, questions or want to chat. You can also use the feedback form embedded within our Mobile App - to do so please navigate to Settings and select &quot;Leave Feedback&quot;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;DuckDuckGo android is distributed under the Apache 2.0 &lt;a href=&quot;https://raw.githubusercontent.com/duckduckgo/Android/develop/LICENSE&quot;&gt;license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-java</title>
      <link>https://github.com/openai/openai-java</link>
      <description>&lt;p&gt;The official Java library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Java API Library&lt;/h1&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;p&gt;&lt;a href=&quot;https://central.sonatype.com/artifact/com.openai/openai-java/3.0.2&quot;&gt;&lt;img src=&quot;https://img.shields.io/maven-central/v/com.openai/openai-java&quot; alt=&quot;Maven Central&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://javadoc.io/doc/com.openai/openai-java/3.0.2&quot;&gt;&lt;img src=&quot;https://javadoc.io/badge2/com.openai/openai-java/3.0.2/javadoc.svg?sanitize=true&quot; alt=&quot;javadoc&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;p&gt;The OpenAI Java SDK provides convenient access to the &lt;a href=&quot;https://platform.openai.com/docs&quot;&gt;OpenAI REST API&lt;/a&gt; from applications written in Java.&lt;/p&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;p&gt;The REST API documentation can be found on &lt;a href=&quot;https://platform.openai.com/docs&quot;&gt;platform.openai.com&lt;/a&gt;. Javadocs are available on &lt;a href=&quot;https://javadoc.io/doc/com.openai/openai-java/3.0.2&quot;&gt;javadoc.io&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#spring-boot&quot;&gt;&lt;em&gt;Try &lt;code&gt;openai-java-spring-boot-starter&lt;/code&gt; if you&#39;re using Spring Boot!&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Gradle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;implementation(&quot;com.openai:openai-java:3.0.2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Maven&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.openai&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;openai-java&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;3.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;This library requires Java 8 or later.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] See the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example&quot;&gt;&lt;code&gt;openai-java-example&lt;/code&gt;&lt;/a&gt; directory for complete and runnable examples!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The primary API for interacting with OpenAI models is the &lt;a href=&quot;https://platform.openai.com/docs/api-reference/responses&quot;&gt;Responses API&lt;/a&gt;. You can generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.models.ChatModel;
import com.openai.models.responses.Response;
import com.openai.models.responses.ResponseCreateParams;

// Configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID` and `OPENAI_PROJECT_ID` environment variables
OpenAIClient client = OpenAIOkHttpClient.fromEnv();

ResponseCreateParams params = ResponseCreateParams.builder()
        .input(&quot;Say this is a test&quot;)
        .model(ChatModel.GPT_4_1)
        .build();
Response response = client.responses().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The previous standard (supported indefinitely) for generating text is the &lt;a href=&quot;https://platform.openai.com/docs/api-reference/chat&quot;&gt;Chat Completions API&lt;/a&gt;. You can use that API to generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletion;
import com.openai.models.chat.completions.ChatCompletionCreateParams;

// Configures using the `openai.apiKey`, `openai.orgId`, `openai.projectId`, `openai.webhookSecret` and `openai.baseUrl` system properties
// Or configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID`, `OPENAI_PROJECT_ID`, `OPENAI_WEBHOOK_SECRET` and `OPENAI_BASE_URL` environment variables
OpenAIClient client = OpenAIOkHttpClient.fromEnv();

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .addUserMessage(&quot;Say this is a test&quot;)
    .model(ChatModel.GPT_5)
    .build();
ChatCompletion chatCompletion = client.chat().completions().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Client configuration&lt;/h2&gt; 
&lt;p&gt;Configure the client using system properties or environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;

// Configures using the `openai.apiKey`, `openai.orgId`, `openai.projectId`, `openai.webhookSecret` and `openai.baseUrl` system properties
// Or configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID`, `OPENAI_PROJECT_ID`, `OPENAI_WEBHOOK_SECRET` and `OPENAI_BASE_URL` environment variables
OpenAIClient client = OpenAIOkHttpClient.fromEnv();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .apiKey(&quot;My API Key&quot;)
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or using a combination of the two approaches:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;

OpenAIClient client = OpenAIOkHttpClient.builder()
    // Configures using the `openai.apiKey`, `openai.orgId`, `openai.projectId`, `openai.webhookSecret` and `openai.baseUrl` system properties
    // Or configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID`, `OPENAI_PROJECT_ID`, `OPENAI_WEBHOOK_SECRET` and `OPENAI_BASE_URL` environment variables
    .fromEnv()
    .apiKey(&quot;My API Key&quot;)
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See this table for the available options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setter&lt;/th&gt; 
   &lt;th&gt;System property&lt;/th&gt; 
   &lt;th&gt;Environment variable&lt;/th&gt; 
   &lt;th&gt;Required&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;apiKey&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;openai.apiKey&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;organization&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;openai.orgId&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_ORG_ID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;project&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;openai.projectId&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_PROJECT_ID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;webhookSecret&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;openai.webhookSecret&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_WEBHOOK_SECRET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;openai.baseUrl&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_BASE_URL&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&quot;https://api.openai.com/v1&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;System properties take precedence over environment variables.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Don&#39;t create more than one client in the same application. Each client has a connection pool and thread pools, which are more efficient to share between requests.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Modifying configuration&lt;/h3&gt; 
&lt;p&gt;To temporarily use a modified client configuration, while reusing the same connection and thread pools, call &lt;code&gt;withOptions()&lt;/code&gt; on any client or service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;

OpenAIClient clientWithOptions = client.withOptions(optionsBuilder -&amp;gt; {
    optionsBuilder.baseUrl(&quot;https://example.com&quot;);
    optionsBuilder.maxRetries(42);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;withOptions()&lt;/code&gt; method does not affect the original client or service.&lt;/p&gt; 
&lt;h2&gt;Requests and responses&lt;/h2&gt; 
&lt;p&gt;To send a request to the OpenAI API, build an instance of some &lt;code&gt;Params&lt;/code&gt; class and pass it to the corresponding client method. When the response is received, it will be deserialized into an instance of a Java class.&lt;/p&gt; 
&lt;p&gt;For example, &lt;code&gt;client.chat().completions().create(...)&lt;/code&gt; should be called with an instance of &lt;code&gt;ChatCompletionCreateParams&lt;/code&gt;, and it will return an instance of &lt;code&gt;ChatCompletion&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Immutability&lt;/h2&gt; 
&lt;p&gt;Each class in the SDK has an associated &lt;a href=&quot;https://blogs.oracle.com/javamagazine/post/exploring-joshua-blochs-builder-design-pattern-in-java&quot;&gt;builder&lt;/a&gt; or factory method for constructing it.&lt;/p&gt; 
&lt;p&gt;Each class is &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html&quot;&gt;immutable&lt;/a&gt; once constructed. If the class has an associated builder, then it has a &lt;code&gt;toBuilder()&lt;/code&gt; method, which can be used to convert it back to a builder for making a modified copy.&lt;/p&gt; 
&lt;p&gt;Because each class is immutable, builder modification will &lt;em&gt;never&lt;/em&gt; affect already built class instances.&lt;/p&gt; 
&lt;h2&gt;Asynchronous execution&lt;/h2&gt; 
&lt;p&gt;The default client is synchronous. To switch to asynchronous execution, call the &lt;code&gt;async()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletion;
import com.openai.models.chat.completions.ChatCompletionCreateParams;
import java.util.concurrent.CompletableFuture;

// Configures using the `openai.apiKey`, `openai.orgId`, `openai.projectId`, `openai.webhookSecret` and `openai.baseUrl` system properties
// Or configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID`, `OPENAI_PROJECT_ID`, `OPENAI_WEBHOOK_SECRET` and `OPENAI_BASE_URL` environment variables
OpenAIClient client = OpenAIOkHttpClient.fromEnv();

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .addUserMessage(&quot;Say this is a test&quot;)
    .model(ChatModel.GPT_5)
    .build();
CompletableFuture&amp;lt;ChatCompletion&amp;gt; chatCompletion = client.async().chat().completions().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or create an asynchronous client from the beginning:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClientAsync;
import com.openai.client.okhttp.OpenAIOkHttpClientAsync;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletion;
import com.openai.models.chat.completions.ChatCompletionCreateParams;
import java.util.concurrent.CompletableFuture;

// Configures using the `openai.apiKey`, `openai.orgId`, `openai.projectId`, `openai.webhookSecret` and `openai.baseUrl` system properties
// Or configures using the `OPENAI_API_KEY`, `OPENAI_ORG_ID`, `OPENAI_PROJECT_ID`, `OPENAI_WEBHOOK_SECRET` and `OPENAI_BASE_URL` environment variables
OpenAIClientAsync client = OpenAIOkHttpClientAsync.fromEnv();

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .addUserMessage(&quot;Say this is a test&quot;)
    .model(ChatModel.GPT_5)
    .build();
CompletableFuture&amp;lt;ChatCompletion&amp;gt; chatCompletion = client.chat().completions().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The asynchronous client supports the same options as the synchronous one, except most methods return &lt;code&gt;CompletableFuture&lt;/code&gt;s.&lt;/p&gt; 
&lt;h2&gt;Streaming&lt;/h2&gt; 
&lt;p&gt;The SDK defines methods that return response &quot;chunk&quot; streams, where each chunk can be individually processed as soon as it arrives instead of waiting on the full response. Streaming methods generally correspond to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;SSE&lt;/a&gt; or &lt;a href=&quot;https://jsonlines.org&quot;&gt;JSONL&lt;/a&gt; responses.&lt;/p&gt; 
&lt;p&gt;Some of these methods may have streaming and non-streaming variants, but a streaming method will always have a &lt;code&gt;Streaming&lt;/code&gt; suffix in its name, even if it doesn&#39;t have a non-streaming variant.&lt;/p&gt; 
&lt;p&gt;These streaming methods return &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/http/StreamResponse.kt&quot;&gt;&lt;code&gt;StreamResponse&lt;/code&gt;&lt;/a&gt; for synchronous clients:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.StreamResponse;
import com.openai.models.chat.completions.ChatCompletionChunk;

try (StreamResponse&amp;lt;ChatCompletionChunk&amp;gt; streamResponse = client.chat().completions().createStreaming(params)) {
    streamResponse.stream().forEach(chunk -&amp;gt; {
        System.out.println(chunk);
    });
    System.out.println(&quot;No more chunks!&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/http/AsyncStreamResponse.kt&quot;&gt;&lt;code&gt;AsyncStreamResponse&lt;/code&gt;&lt;/a&gt; for asynchronous clients:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.AsyncStreamResponse;
import com.openai.models.chat.completions.ChatCompletionChunk;
import java.util.Optional;

client.async().chat().completions().createStreaming(params).subscribe(chunk -&amp;gt; {
    System.out.println(chunk);
});

// If you need to handle errors or completion of the stream
client.async().chat().completions().createStreaming(params).subscribe(new AsyncStreamResponse.Handler&amp;lt;&amp;gt;() {
    @Override
    public void onNext(ChatCompletionChunk chunk) {
        System.out.println(chunk);
    }

    @Override
    public void onComplete(Optional&amp;lt;Throwable&amp;gt; error) {
        if (error.isPresent()) {
            System.out.println(&quot;Something went wrong!&quot;);
            throw new RuntimeException(error.get());
        } else {
            System.out.println(&quot;No more chunks!&quot;);
        }
    }
});

// Or use futures
client.async().chat().completions().createStreaming(params)
    .subscribe(chunk -&amp;gt; {
        System.out.println(chunk);
    })
    .onCompleteFuture();
    .whenComplete((unused, error) -&amp;gt; {
        if (error != null) {
            System.out.println(&quot;Something went wrong!&quot;);
            throw new RuntimeException(error);
        } else {
            System.out.println(&quot;No more chunks!&quot;);
        }
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Async streaming uses a dedicated per-client cached thread pool &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; to stream without blocking the current thread. This default is suitable for most purposes.&lt;/p&gt; 
&lt;p&gt;To use a different &lt;code&gt;Executor&lt;/code&gt;, configure the subscription using the &lt;code&gt;executor&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import java.util.concurrent.Executor;
import java.util.concurrent.Executors;

Executor executor = Executors.newFixedThreadPool(4);
client.async().chat().completions().createStreaming(params).subscribe(
    chunk -&amp;gt; System.out.println(chunk), executor
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or configure the client globally using the &lt;code&gt;streamHandlerExecutor&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import java.util.concurrent.Executors;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .fromEnv()
    .streamHandlerExecutor(Executors.newFixedThreadPool(4))
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Streaming helpers&lt;/h3&gt; 
&lt;p&gt;The SDK provides conveniences for streamed chat completions. A &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/helpers/ChatCompletionAccumulator.kt&quot;&gt;&lt;code&gt;ChatCompletionAccumulator&lt;/code&gt;&lt;/a&gt; can record the stream of chat completion chunks in the response as they are processed and accumulate a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/chat/completions/ChatCompletion.kt&quot;&gt;&lt;code&gt;ChatCompletion&lt;/code&gt;&lt;/a&gt; object similar to that which would have been returned by the non-streaming API.&lt;/p&gt; 
&lt;p&gt;For a synchronous response add a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#peek-java.util.function.Consumer-&quot;&gt;&lt;code&gt;Stream.peek()&lt;/code&gt;&lt;/a&gt; call to the stream pipeline to accumulate each chunk:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.StreamResponse;
import com.openai.helpers.ChatCompletionAccumulator;
import com.openai.models.chat.completions.ChatCompletion;
import com.openai.models.chat.completions.ChatCompletionChunk;

ChatCompletionAccumulator chatCompletionAccumulator = ChatCompletionAccumulator.create();

try (StreamResponse&amp;lt;ChatCompletionChunk&amp;gt; streamResponse =
        client.chat().completions().createStreaming(createParams)) {
    streamResponse.stream()
            .peek(chatCompletionAccumulator::accumulate)
            .flatMap(completion -&amp;gt; completion.choices().stream())
            .flatMap(choice -&amp;gt; choice.delta().content().stream())
            .forEach(System.out::print);
}

ChatCompletion chatCompletion = chatCompletionAccumulator.chatCompletion();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For an asynchronous response, add the &lt;code&gt;ChatCompletionAccumulator&lt;/code&gt; to the &lt;code&gt;subscribe()&lt;/code&gt; call:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.helpers.ChatCompletionAccumulator;
import com.openai.models.chat.completions.ChatCompletion;

ChatCompletionAccumulator chatCompletionAccumulator = ChatCompletionAccumulator.create();

client.chat()
        .completions()
        .createStreaming(createParams)
        .subscribe(chunk -&amp;gt; chatCompletionAccumulator.accumulate(chunk).choices().stream()
                .flatMap(choice -&amp;gt; choice.delta().content().stream())
                .forEach(System.out::print))
        .onCompleteFuture()
        .join();

ChatCompletion chatCompletion = chatCompletionAccumulator.chatCompletion();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The SDK provides conveniences for streamed responses. A &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/helpers/ResponseAccumulator.kt&quot;&gt;&lt;code&gt;ResponseAccumulator&lt;/code&gt;&lt;/a&gt; can record the stream of response events as they are processed and accumulate a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/responses/Response.kt&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object similar to that which would have been returned by the non-streaming API.&lt;/p&gt; 
&lt;p&gt;For a synchronous response add a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#peek-java.util.function.Consumer-&quot;&gt;&lt;code&gt;Stream.peek()&lt;/code&gt;&lt;/a&gt; call to the stream pipeline to accumulate each event:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.StreamResponse;
import com.openai.helpers.ResponseAccumulator;
import com.openai.models.responses.Response;
import com.openai.models.responses.ResponseStreamEvent;

ResponseAccumulator responseAccumulator = ResponseAccumulator.create();

try (StreamResponse&amp;lt;ResponseStreamEvent&amp;gt; streamResponse =
        client.responses().createStreaming(createParams)) {
    streamResponse.stream()
            .peek(responseAccumulator::accumulate)
            .flatMap(event -&amp;gt; event.outputTextDelta().stream())
            .forEach(textEvent -&amp;gt; System.out.print(textEvent.delta()));
}

Response response = responseAccumulator.response();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For an asynchronous response, add the &lt;code&gt;ResponseAccumulator&lt;/code&gt; to the &lt;code&gt;subscribe()&lt;/code&gt; call:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.helpers.ResponseAccumulator;
import com.openai.models.responses.Response;

ResponseAccumulator responseAccumulator = ResponseAccumulator.create();

client.responses()
        .createStreaming(createParams)
        .subscribe(event -&amp;gt; responseAccumulator.accumulate(event)
                .outputTextDelta().ifPresent(textEvent -&amp;gt; System.out.print(textEvent.delta())))
        .onCompleteFuture()
        .join();

Response response = responseAccumulator.response();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Structured outputs with JSON schemas&lt;/h2&gt; 
&lt;p&gt;Open AI &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs?api-mode=chat&quot;&gt;Structured Outputs&lt;/a&gt; is a feature that ensures that the model will always generate responses that adhere to a supplied &lt;a href=&quot;https://json-schema.org/overview/what-is-jsonschema&quot;&gt;JSON schema&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A JSON schema can be defined by creating a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/ResponseFormatJsonSchema.kt&quot;&gt;&lt;code&gt;ResponseFormatJsonSchema&lt;/code&gt;&lt;/a&gt; and setting it on the input parameters. However, for greater convenience, a JSON schema can instead be derived automatically from the structure of an arbitrary Java class. The JSON content from the response will then be converted automatically to an instance of that Java class. A full, working example of the use of Structured Outputs with arbitrary Java classes can be seen in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/StructuredOutputsExample.java&quot;&gt;&lt;code&gt;StructuredOutputsExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Java classes can contain fields declared to be instances of other classes and can use collections (see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#defining-json-schema-properties&quot;&gt;Defining JSON schema properties&lt;/a&gt; for more details):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;class Person {
    public String name;
    public int birthYear;
}

class Book {
    public String title;
    public Person author;
    public int publicationYear;
}

class BookList {
    public List&amp;lt;Book&amp;gt; books;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pass the top-level class—&lt;code&gt;BookList&lt;/code&gt; in this example—to &lt;code&gt;responseFormat(Class&amp;lt;T&amp;gt;)&lt;/code&gt; when building the parameters and then access an instance of &lt;code&gt;BookList&lt;/code&gt; from the generated message content in the response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletionCreateParams;
import com.openai.models.chat.completions.StructuredChatCompletionCreateParams;

StructuredChatCompletionCreateParams&amp;lt;BookList&amp;gt; params = ChatCompletionCreateParams.builder()
        .addUserMessage(&quot;List some famous late twentieth century novels.&quot;)
        .model(ChatModel.GPT_4_1)
        .responseFormat(BookList.class)
        .build();

client.chat().completions().create(params).choices().stream()
        .flatMap(choice -&amp;gt; choice.message().content().stream())
        .flatMap(bookList -&amp;gt; bookList.books.stream())
        .forEach(book -&amp;gt; System.out.println(book.title + &quot; by &quot; + book.author.name));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can start building the parameters with an instance of &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/chat/completions/ChatCompletionCreateParams.kt&quot;&gt;&lt;code&gt;ChatCompletionCreateParams.Builder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/chat/completions/StructuredChatCompletionCreateParams.kt&quot;&gt;&lt;code&gt;StructuredChatCompletionCreateParams.Builder&lt;/code&gt;&lt;/a&gt;. If you start with the former (which allows for more compact code) the builder type will change to the latter when &lt;code&gt;ChatCompletionCreateParams.Builder.responseFormat(Class&amp;lt;T&amp;gt;)&lt;/code&gt; is called.&lt;/p&gt; 
&lt;p&gt;If a field in a class is optional and does not require a defined value, you can represent this using the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html&quot;&gt;&lt;code&gt;java.util.Optional&lt;/code&gt;&lt;/a&gt; class. It is up to the AI model to decide whether to provide a value for that field or leave it empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import java.util.Optional;

class Book {
    public String title;
    public Person author;
    public int publicationYear;
    public Optional&amp;lt;String&amp;gt; isbn;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generic type information for fields is retained in the class&#39;s metadata, but &lt;em&gt;generic type erasure&lt;/em&gt; applies in other scopes. While, for example, a JSON schema defining an array of books can be derived from the &lt;code&gt;BookList.books&lt;/code&gt; field with type &lt;code&gt;List&amp;lt;Book&amp;gt;&lt;/code&gt;, a valid JSON schema cannot be derived from a local variable of that same type, so the following will &lt;em&gt;not&lt;/em&gt; work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List&amp;lt;Book&amp;gt; books = new ArrayList&amp;lt;&amp;gt;();

StructuredChatCompletionCreateParams&amp;lt;List&amp;lt;Book&amp;gt;&amp;gt; params = ChatCompletionCreateParams.builder()
        .responseFormat(books.getClass())
        // ...
        .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If an error occurs while converting a JSON response to an instance of a Java class, the error message will include the JSON response to assist in diagnosis. For instance, if the response is truncated, the JSON data will be incomplete and cannot be converted to a class instance. If your JSON response may contain sensitive information, avoid logging it directly, or ensure that you redact any sensitive details from the error message.&lt;/p&gt; 
&lt;h3&gt;Local JSON schema validation&lt;/h3&gt; 
&lt;p&gt;Structured Outputs supports a &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs#supported-schemas&quot;&gt;subset&lt;/a&gt; of the JSON Schema language. Schemas are generated automatically from classes to align with this subset. However, due to the inherent structure of the classes, the generated schema may still violate certain OpenAI schema restrictions, such as exceeding the maximum nesting depth or utilizing unsupported data types.&lt;/p&gt; 
&lt;p&gt;To facilitate compliance, the method &lt;code&gt;responseFormat(Class&amp;lt;T&amp;gt;)&lt;/code&gt; performs a validation check on the schema derived from the specified class. This validation ensures that all restrictions are adhered to. If any issues are detected, an exception will be thrown, providing a detailed message outlining the reasons for the validation failure.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local Validation&lt;/strong&gt;: The validation process occurs locally, meaning no requests are sent to the remote AI model. If the schema passes local validation, it is likely to pass remote validation as well.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remote Validation&lt;/strong&gt;: The remote AI model will conduct its own validation upon receiving the JSON schema in the request.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Version Compatibility&lt;/strong&gt;: There may be instances where local validation fails while remote validation succeeds. This can occur if the SDK version is outdated compared to the restrictions enforced by the remote AI model.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disabling Local Validation&lt;/strong&gt;: If you encounter compatibility issues and wish to bypass local validation, you can disable it by passing &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/JsonSchemaLocalValidation.kt&quot;&gt;&lt;code&gt;JsonSchemaLocalValidation.NO&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;responseFormat(Class&amp;lt;T&amp;gt;, JsonSchemaLocalValidation)&lt;/code&gt; method when building the parameters. (The default value for this parameter is &lt;code&gt;JsonSchemaLocalValidation.YES&lt;/code&gt;.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonSchemaLocalValidation;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletionCreateParams;
import com.openai.models.chat.completions.StructuredChatCompletionCreateParams;

StructuredChatCompletionCreateParams&amp;lt;BookList&amp;gt; params = ChatCompletionCreateParams.builder()
        .addUserMessage(&quot;List some famous late twentieth century novels.&quot;)
        .model(ChatModel.GPT_4_1)
        .responseFormat(BookList.class, JsonSchemaLocalValidation.NO)
        .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By following these guidelines, you can ensure that your structured outputs conform to the necessary schema requirements and minimize the risk of remote validation errors.&lt;/p&gt; 
&lt;h3&gt;Usage with the Responses API&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Structured Outputs&lt;/em&gt; are also supported for the Responses API. The usage is the same as described except where the Responses API differs slightly from the Chat Completions API. Pass the top-level class to &lt;code&gt;text(Class&amp;lt;T&amp;gt;)&lt;/code&gt; when building the parameters and then access an instance of the class from the generated message content in the response.&lt;/p&gt; 
&lt;p&gt;You can start building the parameters with an instance of &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/responses/ResponseCreateParams.kt&quot;&gt;&lt;code&gt;ResponseCreateParams.Builder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/responses/StructuredResponseCreateParams.kt&quot;&gt;&lt;code&gt;StructuredResponseCreateParams.Builder&lt;/code&gt;&lt;/a&gt;. If you start with the former (which allows for more compact code) the builder type will change to the latter when &lt;code&gt;ResponseCreateParams.Builder.text(Class&amp;lt;T&amp;gt;)&lt;/code&gt; is called.&lt;/p&gt; 
&lt;p&gt;For a full example of the usage of &lt;em&gt;Structured Outputs&lt;/em&gt; with the Responses API, see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/ResponsesStructuredOutputsExample.java&quot;&gt;&lt;code&gt;ResponsesStructuredOutputsExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Usage with streaming&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Structured Outputs&lt;/em&gt; can also be used with &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#streaming&quot;&gt;Streaming&lt;/a&gt; and the Chat Completions API. As responses are returned in &quot;chunks&quot;, the full response must first be accumulated to concatenate the JSON strings that can then be converted into instances of the arbitrary Java class. Normal streaming operations can be performed while accumulating the JSON strings.&lt;/p&gt; 
&lt;p&gt;Use the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/helpers/ChatCompletionAccumulator.kt&quot;&gt;&lt;code&gt;ChatCompletionAccumulator&lt;/code&gt;&lt;/a&gt; as described in the section on &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#streaming-helpers&quot;&gt;Streaming helpers&lt;/a&gt; to accumulate the JSON strings. Once accumulated, use &lt;code&gt;ChatCompletionAccumulator.chatCompletion(Class&amp;lt;T&amp;gt;)&lt;/code&gt; to convert the accumulated &lt;code&gt;ChatCompletion&lt;/code&gt; into a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/chat/completions/StructuredChatCompletion.kt&quot;&gt;&lt;code&gt;StructuredChatCompletion&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;StructuredChatCompletion&lt;/code&gt; can then automatically deserialize the JSON strings into instances of your Java class.&lt;/p&gt; 
&lt;p&gt;For a full example of the usage of &lt;em&gt;Structured Outputs&lt;/em&gt; with Streaming and the Chat Completions API, see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/StructuredOutputsStreamingExample.java&quot;&gt;&lt;code&gt;StructuredOutputsStreamingExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;With the Responses API, accumulate events while streaming using the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/helpers/ResponseAccumulator.kt&quot;&gt;&lt;code&gt;ResponseAccumulator&lt;/code&gt;&lt;/a&gt;. Once accumulated, use &lt;code&gt;ResponseAccumulator.response(Class&amp;lt;T&amp;gt;)&lt;/code&gt; to convert the accumulated &lt;code&gt;Response&lt;/code&gt; into a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/responses/StructuredResponse.kt&quot;&gt;&lt;code&gt;StructuredResponse&lt;/code&gt;&lt;/a&gt;. The [&lt;code&gt;StructuredResponse&lt;/code&gt;] can then automatically deserialize the JSON strings into instances of your Java class.&lt;/p&gt; 
&lt;p&gt;For a full example of the usage of &lt;em&gt;Structured Outputs&lt;/em&gt; with Streaming and the Responses API, see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/ResponsesStructuredOutputsStreamingExample.java&quot;&gt;&lt;code&gt;ResponsesStructuredOutputsStreamingExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Defining JSON schema properties&lt;/h3&gt; 
&lt;p&gt;When a JSON schema is derived from your Java classes, all properties represented by &lt;code&gt;public&lt;/code&gt; fields or &lt;code&gt;public&lt;/code&gt; getter methods are included in the schema by default. Non-&lt;code&gt;public&lt;/code&gt; fields and getter methods are &lt;em&gt;not&lt;/em&gt; included by default. You can exclude &lt;code&gt;public&lt;/code&gt;, or include non-&lt;code&gt;public&lt;/code&gt; fields or getter methods, by using the &lt;code&gt;@JsonIgnore&lt;/code&gt; or &lt;code&gt;@JsonProperty&lt;/code&gt; annotations respectively (see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#annotating-classes-and-json-schemas&quot;&gt;Annotating classes and JSON schemas&lt;/a&gt; for details).&lt;/p&gt; 
&lt;p&gt;If you do not want to define &lt;code&gt;public&lt;/code&gt; fields, you can define &lt;code&gt;private&lt;/code&gt; fields and corresponding &lt;code&gt;public&lt;/code&gt; getter methods. For example, a &lt;code&gt;private&lt;/code&gt; field &lt;code&gt;myValue&lt;/code&gt; with a &lt;code&gt;public&lt;/code&gt; getter method &lt;code&gt;getMyValue()&lt;/code&gt; will result in a &lt;code&gt;&quot;myValue&quot;&lt;/code&gt; property being included in the JSON schema. If you prefer not to use the conventional Java &quot;get&quot; prefix for the name of the getter method, then you &lt;em&gt;must&lt;/em&gt; annotate the getter method with the &lt;code&gt;@JsonProperty&lt;/code&gt; annotation and the full method name will be used as the property name. You do not have to define any corresponding setter methods if you do not need them.&lt;/p&gt; 
&lt;p&gt;Each of your classes &lt;em&gt;must&lt;/em&gt; define at least one property to be included in the JSON schema. A validation error will occur if any class contains no fields or getter methods from which schema properties can be derived. This may occur if, for example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;There are no fields or getter methods in the class.&lt;/li&gt; 
 &lt;li&gt;All fields and getter methods are &lt;code&gt;public&lt;/code&gt;, but all are annotated with &lt;code&gt;@JsonIgnore&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;All fields and getter methods are non-&lt;code&gt;public&lt;/code&gt;, but none are annotated with &lt;code&gt;@JsonProperty&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;A field or getter method is declared with a &lt;code&gt;Map&lt;/code&gt; type. A &lt;code&gt;Map&lt;/code&gt; is treated like a separate class with no named properties, so it will result in an empty &lt;code&gt;&quot;properties&quot;&lt;/code&gt; field in the JSON schema.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Annotating classes and JSON schemas&lt;/h3&gt; 
&lt;p&gt;You can use annotations to add further information to the JSON schema derived from your Java classes, or to control which fields or getter methods will be included in the schema. Details from annotations captured in the JSON schema may be used by the AI model to improve its response. The SDK supports the use of &lt;a href=&quot;https://github.com/FasterXML/jackson-databind&quot;&gt;Jackson Databind&lt;/a&gt; annotations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.fasterxml.jackson.annotation.JsonClassDescription;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;

class Person {
    @JsonPropertyDescription(&quot;The first name and surname of the person&quot;)
    public String name;
    public int birthYear;
    @JsonPropertyDescription(&quot;The year the person died, or &#39;present&#39; if the person is living.&quot;)
    public String deathYear;
}

@JsonClassDescription(&quot;The details of one published book&quot;)
class Book {
    public String title;
    public Person author;
    @JsonPropertyDescription(&quot;The year in which the book was first published.&quot;)
    public int publicationYear;
    @JsonIgnore public String genre;
}

class BookList {
    public List&amp;lt;Book&amp;gt; books;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonClassDescription&lt;/code&gt; to add a detailed description to a class.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonPropertyDescription&lt;/code&gt; to add a detailed description to a field or getter method of a class.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonIgnore&lt;/code&gt; to exclude a &lt;code&gt;public&lt;/code&gt; field or getter method of a class from the generated JSON schema.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonProperty&lt;/code&gt; to include a non-&lt;code&gt;public&lt;/code&gt; field or getter method of a class in the generated JSON schema.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you use &lt;code&gt;@JsonProperty(required = false)&lt;/code&gt;, the &lt;code&gt;false&lt;/code&gt; value will be ignored. OpenAI JSON schemas must mark all properties as &lt;em&gt;required&lt;/em&gt;, so the schema generated from your Java classes will respect that restriction and ignore any annotation that would violate it.&lt;/p&gt; 
&lt;p&gt;You can also use &lt;a href=&quot;https://swagger.io/specification/v2/&quot;&gt;OpenAPI Swagger 2&lt;/a&gt; &lt;a href=&quot;https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Annotations#schema&quot;&gt;&lt;code&gt;@Schema&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Annotations#arrayschema&quot;&gt;&lt;code&gt;@ArraySchema&lt;/code&gt;&lt;/a&gt; annotations. These allow type-specific constraints to be added to your schema properties. You can learn more about the supported constraints in the OpenAI documentation on &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs#supported-properties&quot;&gt;Supported properties&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.ArraySchema;

class Article {
    @ArraySchema(minItems = 1, maxItems = 10)
    public List&amp;lt;String&amp;gt; authors;

    @Schema(pattern = &quot;^[A-Za-z ]+$&quot;)
    public String title;

    @Schema(format = &quot;date&quot;)
    public String publicationDate;

    @Schema(minimum = &quot;1&quot;)
    public int pageCount;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Local validation will check that you have not used any unsupported constraint keywords. However, the values of the constraints are &lt;em&gt;not&lt;/em&gt; validated locally. For example, if you use a value for the &lt;code&gt;&quot;format&quot;&lt;/code&gt; constraint of a string property that is not in the list of &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs#supported-properties&quot;&gt;supported format names&lt;/a&gt;, then local validation will pass, but the AI model may report an error.&lt;/p&gt; 
&lt;p&gt;If you use both Jackson and Swagger annotations to set the same schema field, the Jackson annotation will take precedence. In the following example, the description of &lt;code&gt;myProperty&lt;/code&gt; will be set to &quot;Jackson description&quot;; &quot;Swagger description&quot; will be ignored:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import io.swagger.v3.oas.annotations.media.Schema;

class MyObject {
    @Schema(description = &quot;Swagger description&quot;)
    @JsonPropertyDescription(&quot;Jackson description&quot;)
    public String myProperty;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Function calling with JSON schemas&lt;/h2&gt; 
&lt;p&gt;OpenAI &lt;a href=&quot;https://platform.openai.com/docs/guides/function-calling?api-mode=chat&quot;&gt;Function Calling&lt;/a&gt; lets you integrate external functions directly into the language model&#39;s responses. Instead of producing plain text, the model can output instructions (with parameters) for calling a function when appropriate. You define a &lt;a href=&quot;https://json-schema.org/overview/what-is-jsonschema&quot;&gt;JSON schema&lt;/a&gt; for functions, and the model uses it to decide when and how to trigger these calls, enabling more interactive, data-driven applications.&lt;/p&gt; 
&lt;p&gt;A JSON schema describing a function&#39;s parameters can be defined via the API by building a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/chat/completions/ChatCompletionTool.kt&quot;&gt;&lt;code&gt;ChatCompletionTool&lt;/code&gt;&lt;/a&gt; containing a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/FunctionDefinition.kt&quot;&gt;&lt;code&gt;FunctionDefinition&lt;/code&gt;&lt;/a&gt; and then using &lt;code&gt;addTool&lt;/code&gt; to set it on the input parameters. The response from the AI model may then contain requests to call your functions, detailing the functions&#39; names and their parameter values as JSON data that conforms to the JSON schema from the function definition. You can then parse the parameter values from this JSON, invoke your functions, and pass your functions&#39; results back to the AI model. A full, working example of &lt;em&gt;Function Calling&lt;/em&gt; using the low-level API can be seen in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/FunctionCallingRawExample.java&quot;&gt;&lt;code&gt;FunctionCallingRawExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;However, for greater convenience, the SDK can derive a function and its parameters automatically from the structure of an arbitrary Java class: the class&#39;s name provides the function name, and the class&#39;s fields define the function&#39;s parameters. When the AI model responds with the parameter values in JSON form, you can then easily convert that JSON to an instance of your Java class and use the parameter values to invoke your custom function. A full, working example of the use of &lt;em&gt;Function Calling&lt;/em&gt; with Java classes to define function parameters can be seen in &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/FunctionCallingExample.java&quot;&gt;&lt;code&gt;FunctionCallingExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Like for &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#structured-outputs-with-json-schemas&quot;&gt;Structured Outputs&lt;/a&gt;, Java classes can contain fields declared to be instances of other classes and can use collections (see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#defining-json-schema-properties&quot;&gt;Defining JSON schema properties&lt;/a&gt; for more details). Optionally, annotations can be used to set the descriptions of the function (class) and its parameters (fields) to assist the AI model in understanding the purpose of the function and the possible values of its parameters.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.fasterxml.jackson.annotation.JsonClassDescription;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;

@JsonClassDescription(&quot;Gets the quality of the given SDK.&quot;)
static class GetSdkQuality {
    @JsonPropertyDescription(&quot;The name of the SDK.&quot;)
    public String name;

    public SdkQuality execute() {
        return new SdkQuality(
                name, name.contains(&quot;OpenAI&quot;) ? &quot;It&#39;s robust and polished!&quot; : &quot;*shrug*&quot;);
    }
}

static class SdkQuality {
    public String quality;

    public SdkQuality(String name, String evaluation) {
        quality = name + &quot;: &quot; + evaluation;
    }
}

@JsonClassDescription(&quot;Gets the review score (out of 10) for the named SDK.&quot;)
static class GetSdkScore {
  public String name;

  public int execute() {
    return name.contains(&quot;OpenAI&quot;) ? 10 : 3;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When your functions are defined, add them to the input parameters using &lt;code&gt;addTool(Class&amp;lt;T&amp;gt;)&lt;/code&gt; and then call them if requested to do so in the AI model&#39;s response. &lt;code&gt;Function.argments(Class&amp;lt;T&amp;gt;)&lt;/code&gt; can be used to parse a function&#39;s parameters in JSON form to an instance of your function-defining class. The fields of that instance will be set to the values of the parameters to the function call.&lt;/p&gt; 
&lt;p&gt;After calling the function, use &lt;code&gt;ChatCompletionToolMessageParam.Builder.contentAsJson(Object)&lt;/code&gt; to pass the function&#39;s result back to the AI model. The method will convert the result to JSON form for consumption by the model. The &lt;code&gt;Object&lt;/code&gt; can be any object, including simple &lt;code&gt;String&lt;/code&gt; instances and boxed primitive types.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.*;
import java.util.Collection;

OpenAIClient client = OpenAIOkHttpClient.fromEnv();

ChatCompletionCreateParams.Builder createParamsBuilder = ChatCompletionCreateParams.builder()
        .model(ChatModel.GPT_3_5_TURBO)
        .maxCompletionTokens(2048)
        .addTool(GetSdkQuality.class)
        .addTool(GetSdkScore.class)
        .addUserMessage(&quot;How good are the following SDKs and what do reviewers say: &quot;
                + &quot;OpenAI Java SDK, Unknown Company SDK.&quot;);

client.chat().completions().create(createParamsBuilder.build()).choices().stream()
        .map(ChatCompletion.Choice::message)
        // Add each assistant message onto the builder so that we keep track of the
        // conversation for asking a follow-up question later.
        .peek(createParamsBuilder::addMessage)
        .flatMap(message -&amp;gt; {
            message.content().ifPresent(System.out::println);
            return message.toolCalls().stream().flatMap(Collection::stream);
        })
        .forEach(toolCall -&amp;gt; {
            Object result = callFunction(toolCall.function());
            // Add the tool call result to the conversation.
            createParamsBuilder.addMessage(ChatCompletionToolMessageParam.builder()
                    .toolCallId(toolCall.id())
                    .contentAsJson(result)
                    .build());
        });

// Ask a follow-up question about the function call result.
createParamsBuilder.addUserMessage(&quot;Why do you say that?&quot;);
client.chat().completions().create(createParamsBuilder.build()).choices().stream()
        .flatMap(choice -&amp;gt; choice.message().content().stream())
        .forEach(System.out::println);

static Object callFunction(ChatCompletionMessageToolCall.Function function) {
  switch (function.name()) {
    case &quot;GetSdkQuality&quot;:
      return function.arguments(GetSdkQuality.class).execute();
    case &quot;GetSdkScore&quot;:
      return function.arguments(GetSdkScore.class).execute();
    default:
      throw new IllegalArgumentException(&quot;Unknown function: &quot; + function.name());
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the code above, an &lt;code&gt;execute()&lt;/code&gt; method encapsulates each function&#39;s logic. However, there is no requirement to follow that pattern. You are free to implement your function&#39;s logic in any way that best suits your use case. The pattern above is only intended to &lt;em&gt;suggest&lt;/em&gt; that a suitable pattern may make the process of function calling simpler to understand and implement.&lt;/p&gt; 
&lt;h3&gt;Usage with the Responses API&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Function Calling&lt;/em&gt; is also supported for the Responses API. The usage is the same as described except where the Responses API differs slightly from the Chat Completions API. Pass the top-level class to &lt;code&gt;addTool(Class&amp;lt;T&amp;gt;)&lt;/code&gt; when building the parameters. In the response, look for &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/responses/ResponseOutputItem.kt&quot;&gt;&lt;code&gt;RepoonseOutputItem&lt;/code&gt;&lt;/a&gt; instances that are function calls. Parse the parameters to each function call to an instance of the class using &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/models/responses/ResponseFunctionToolCall.kt&quot;&gt;&lt;code&gt;ResponseFunctionToolCall.arguments(Class&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt;. Finally, pass the result of each call back to the model.&lt;/p&gt; 
&lt;p&gt;For a full example of the usage of &lt;em&gt;Function Calling&lt;/em&gt; with the Responses API using the low-level API to define and parse function parameters, see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/ResponsesFunctionCallingRawExample.java&quot;&gt;&lt;code&gt;ResponsesFunctionCallingRawExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a full example of the usage of &lt;em&gt;Function Calling&lt;/em&gt; with the Responses API using Java classes to define and parse function parameters, see &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/ResponsesFunctionCallingExample.java&quot;&gt;&lt;code&gt;ResponsesFunctionCallingExample&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Local function JSON schema validation&lt;/h3&gt; 
&lt;p&gt;Like for &lt;em&gt;Structured Outputs&lt;/em&gt;, you can perform local validation to check that the JSON schema derived from your function class respects the restrictions imposed by OpenAI on such schemas. Local validation is enabled by default, but it can be disabled by adding &lt;code&gt;JsonSchemaLocalValidation.NO&lt;/code&gt; to the call to &lt;code&gt;addTool&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;ChatCompletionCreateParams.Builder createParamsBuilder = ChatCompletionCreateParams.builder()
        .model(ChatModel.GPT_3_5_TURBO)
        .maxCompletionTokens(2048)
        .addTool(GetSdkQuality.class, JsonSchemaLocalValidation.NO)
        .addTool(GetSdkScore.class, JsonSchemaLocalValidation.NO)
        .addUserMessage(&quot;How good are the following SDKs and what do reviewers say: &quot;
                + &quot;OpenAI Java SDK, Unknown Company SDK.&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#local-json-schema-validation&quot;&gt;Local JSON schema validation&lt;/a&gt; for more details on local schema validation and under what circumstances you might want to disable it.&lt;/p&gt; 
&lt;h3&gt;Annotating function classes&lt;/h3&gt; 
&lt;p&gt;You can use annotations to add further information about functions to the JSON schemas that are derived from your function classes, or to control which fields or getter methods will be used as parameters to the function. Details from annotations captured in the JSON schema may be used by the AI model to improve its response. The SDK supports the use of &lt;a href=&quot;https://github.com/FasterXML/jackson-databind&quot;&gt;Jackson Databind&lt;/a&gt; annotations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonClassDescription&lt;/code&gt; to add a description to a function class detailing when and how to use that function.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonTypeName&lt;/code&gt; to set the function name to something other than the simple name of the class, which is used by default.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonPropertyDescription&lt;/code&gt; to add a detailed description to function parameter (a field or getter method of a function class).&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonIgnore&lt;/code&gt; to exclude a &lt;code&gt;public&lt;/code&gt; field or getter method of a class from the generated JSON schema for a function&#39;s parameters.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;@JsonProperty&lt;/code&gt; to include a non-&lt;code&gt;public&lt;/code&gt; field or getter method of a class in the generated JSON schema for a function&#39;s parameters.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;OpenAI provides some &lt;a href=&quot;https://platform.openai.com/docs/guides/function-calling#best-practices-for-defining-functions&quot;&gt;Best practices for defining functions&lt;/a&gt; that may help you to understand how to use the above annotations effectively for your functions.&lt;/p&gt; 
&lt;p&gt;See also &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#defining-json-schema-properties&quot;&gt;Defining JSON schema properties&lt;/a&gt; for more details on how to use fields and getter methods and combine access modifiers and annotations to define the parameters of your functions. The same rules apply to function classes and to the structured output classes described in that section.&lt;/p&gt; 
&lt;h2&gt;File uploads&lt;/h2&gt; 
&lt;p&gt;The SDK defines methods that accept files.&lt;/p&gt; 
&lt;p&gt;To upload a file, pass a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.files.FileCreateParams;
import com.openai.models.files.FileObject;
import com.openai.models.files.FilePurpose;
import java.nio.file.Paths;

FileCreateParams params = FileCreateParams.builder()
    .purpose(FilePurpose.FINE_TUNE)
    .file(Paths.get(&quot;input.jsonl&quot;))
    .build();
FileObject fileObject = client.files().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or an arbitrary &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.files.FileCreateParams;
import com.openai.models.files.FileObject;
import com.openai.models.files.FilePurpose;
import java.net.URL;

FileCreateParams params = FileCreateParams.builder()
    .purpose(FilePurpose.FINE_TUNE)
    .file(new URL(&quot;https://example.com/input.jsonl&quot;).openStream())
    .build();
FileObject fileObject = client.files().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or a &lt;code&gt;byte[]&lt;/code&gt; array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.files.FileCreateParams;
import com.openai.models.files.FileObject;
import com.openai.models.files.FilePurpose;

FileCreateParams params = FileCreateParams.builder()
    .purpose(FilePurpose.FINE_TUNE)
    .file(&quot;content&quot;.getBytes())
    .build();
FileObject fileObject = client.files().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that when passing a non-&lt;code&gt;Path&lt;/code&gt; its filename is unknown so it will not be included in the request. To manually set a filename, pass a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/Values.kt&quot;&gt;&lt;code&gt;MultipartField&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.MultipartField;
import com.openai.models.files.FileCreateParams;
import com.openai.models.files.FileObject;
import com.openai.models.files.FilePurpose;
import java.io.InputStream;
import java.net.URL;

FileCreateParams params = FileCreateParams.builder()
    .purpose(FilePurpose.FINE_TUNE)
    .file(MultipartField.&amp;lt;InputStream&amp;gt;builder()
        .value(new URL(&quot;https://example.com/input.jsonl&quot;).openStream())
        .filename(&quot;input.jsonl&quot;)
        .build())
    .build();
FileObject fileObject = client.files().create(params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Webhook Verification&lt;/h2&gt; 
&lt;p&gt;Verifying webhook signatures is &lt;em&gt;optional but encouraged&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For more information about webhooks, see &lt;a href=&quot;https://platform.openai.com/docs/guides/webhooks&quot;&gt;the API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Parsing webhook payloads&lt;/h3&gt; 
&lt;p&gt;For most use cases, you will likely want to verify the webhook and parse the payload at the same time. To achieve this, we provide the method &lt;code&gt;client.webhooks().unwrap()&lt;/code&gt;, which parses a webhook request and verifies that it was sent by OpenAI. This method will throw an exception if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). The &lt;code&gt;.unwrap()&lt;/code&gt; method will parse this JSON for you into an event object after verifying the webhook was sent from OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.core.http.Headers;
import com.openai.models.webhooks.UnwrapWebhookEvent;
import java.util.Optional;

OpenAIClient client = OpenAIOkHttpClient.fromEnv(); // OPENAI_WEBHOOK_SECRET env var used by default

public void handleWebhook(String body, Map&amp;lt;String, String&amp;gt; headers) {
    try {
        Headers headersList = Headers.builder()
                .putAll(headers)
                .build();

        UnwrapWebhookEvent event = client.webhooks().unwrap(body, headersList, Optional.empty());

        if (event.isResponseCompletedWebhookEvent()) {
            System.out.println(&quot;Response completed: &quot; + event.asResponseCompletedWebhookEvent().data());
        } else if (event.isResponseFailed()) {
            System.out.println(&quot;Response failed: &quot; + event.asResponseFailed().data());
        } else {
            System.out.println(&quot;Unhandled event type: &quot; + event.getClass().getSimpleName());
        }
    } catch (Exception e) {
        System.err.println(&quot;Invalid webhook signature: &quot; + e.getMessage());
        // Handle invalid signature
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verifying webhook payloads directly&lt;/h3&gt; 
&lt;p&gt;In some cases, you may want to verify the webhook separately from parsing the payload. If you prefer to handle these steps separately, we provide the method &lt;code&gt;client.webhooks().verifySignature()&lt;/code&gt; to &lt;em&gt;only verify&lt;/em&gt; the signature of a webhook request. Like &lt;code&gt;.unwrap()&lt;/code&gt;, this method will throw an exception if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). You will then need to parse the body after verifying the signature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.fasterxml.jackson.databind.ObjectMapper;
import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import com.openai.core.http.Headers;
import com.openai.models.webhooks.WebhookVerificationParams;
import java.util.Optional;

OpenAIClient client = OpenAIOkHttpClient.fromEnv(); // OPENAI_WEBHOOK_SECRET env var used by default
ObjectMapper objectMapper = new ObjectMapper();

public void handleWebhook(String body, Map&amp;lt;String, String&amp;gt; headers) {
    try {
        Headers headersList = Headers.builder()
                .putAll(headers)
                .build();

        client.webhooks().verifySignature(
            WebhookVerificationParams.builder()
                .payload(body)
                .headers(headersList)
                .build()
        );

        // Parse the body after verification
        Map&amp;lt;String, Object&amp;gt; event = objectMapper.readValue(body, Map.class);
        System.out.println(&quot;Verified event: &quot; + event);
    } catch (Exception e) {
        System.err.println(&quot;Invalid webhook signature: &quot; + e.getMessage());
        // Handle invalid signature
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Binary responses&lt;/h2&gt; 
&lt;p&gt;The SDK defines methods that return binary responses, which are used for API responses that shouldn&#39;t necessarily be parsed, like non-JSON data.&lt;/p&gt; 
&lt;p&gt;These methods return &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/http/HttpResponse.kt&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.HttpResponse;
import com.openai.models.files.FileContentParams;

HttpResponse response = client.files().content(&quot;file_id&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To save the response content to a file, use the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#copy-java.io.InputStream-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;Files.copy(...)&lt;/code&gt;&lt;/a&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.HttpResponse;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

try (HttpResponse response = client.files().content(params)) {
    Files.copy(
        response.body(),
        Paths.get(path),
        StandardCopyOption.REPLACE_EXISTING
    );
} catch (Exception e) {
    System.out.println(&quot;Something went wrong!&quot;);
    throw new RuntimeException(e);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or transfer the response content to any &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.HttpResponse;
import java.nio.file.Files;
import java.nio.file.Paths;

try (HttpResponse response = client.files().content(params)) {
    response.body().transferTo(Files.newOutputStream(Paths.get(path)));
} catch (Exception e) {
    System.out.println(&quot;Something went wrong!&quot;);
    throw new RuntimeException(e);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Raw responses&lt;/h2&gt; 
&lt;p&gt;The SDK defines methods that deserialize responses into instances of Java classes. However, these methods don&#39;t provide access to the response headers, status code, or the raw response body.&lt;/p&gt; 
&lt;p&gt;To access this data, prefix any HTTP method call on a client or service with &lt;code&gt;withRawResponse()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.Headers;
import com.openai.core.http.HttpResponseFor;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletion;
import com.openai.models.chat.completions.ChatCompletionCreateParams;

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .addUserMessage(&quot;Say this is a test&quot;)
    .model(ChatModel.GPT_5)
    .build();
HttpResponseFor&amp;lt;ChatCompletion&amp;gt; chatCompletion = client.chat().completions().withRawResponse().create(params);

int statusCode = chatCompletion.statusCode();
Headers headers = chatCompletion.headers();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can still deserialize the response into an instance of a Java class if needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.chat.completions.ChatCompletion;

ChatCompletion parsedChatCompletion = chatCompletion.parse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Request IDs&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href=&quot;https://platform.openai.com/docs/api-reference/debugging-requests&quot;&gt;the API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;When using raw responses, you can access the &lt;code&gt;x-request-id&lt;/code&gt; response header using the &lt;code&gt;requestId()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.HttpResponseFor;
import com.openai.models.chat.completions.ChatCompletion;
import java.util.Optional;

HttpResponseFor&amp;lt;ChatCompletion&amp;gt; chatCompletion = client.chat().completions().withRawResponse().create(params);
Optional&amp;lt;String&amp;gt; requestId = chatCompletion.requestId();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can be used to quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;h2&gt;Error handling&lt;/h2&gt; 
&lt;p&gt;The SDK throws custom unchecked exception types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/OpenAIServiceException.kt&quot;&gt;&lt;code&gt;OpenAIServiceException&lt;/code&gt;&lt;/a&gt;: Base class for HTTP errors. See this table for which exception subclass is thrown for each HTTP status code:&lt;/p&gt; 
  &lt;table&gt; 
   &lt;thead&gt; 
    &lt;tr&gt; 
     &lt;th&gt;Status&lt;/th&gt; 
     &lt;th&gt;Exception&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/thead&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td&gt;400&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/BadRequestException.kt&quot;&gt;&lt;code&gt;BadRequestException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;401&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/UnauthorizedException.kt&quot;&gt;&lt;code&gt;UnauthorizedException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;403&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/PermissionDeniedException.kt&quot;&gt;&lt;code&gt;PermissionDeniedException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;404&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/NotFoundException.kt&quot;&gt;&lt;code&gt;NotFoundException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;422&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/UnprocessableEntityException.kt&quot;&gt;&lt;code&gt;UnprocessableEntityException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;429&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/RateLimitException.kt&quot;&gt;&lt;code&gt;RateLimitException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;5xx&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/InternalServerException.kt&quot;&gt;&lt;code&gt;InternalServerException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td&gt;others&lt;/td&gt; 
     &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/UnexpectedStatusCodeException.kt&quot;&gt;&lt;code&gt;UnexpectedStatusCodeException&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/SseException.kt&quot;&gt;&lt;code&gt;SseException&lt;/code&gt;&lt;/a&gt; is thrown for errors encountered during &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;SSE streaming&lt;/a&gt; after a successful initial HTTP response.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/OpenAIIoException.kt&quot;&gt;&lt;code&gt;OpenAIIoException&lt;/code&gt;&lt;/a&gt;: I/O networking errors.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/OpenAIRetryableException.kt&quot;&gt;&lt;code&gt;OpenAIRetryableException&lt;/code&gt;&lt;/a&gt;: Generic error indicating a failure that could be retried by the client.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/OpenAIInvalidDataException.kt&quot;&gt;&lt;code&gt;OpenAIInvalidDataException&lt;/code&gt;&lt;/a&gt;: Failure to interpret successfully parsed data. For example, when accessing a property that&#39;s supposed to be required, but the API unexpectedly omitted it from the response.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/OpenAIException.kt&quot;&gt;&lt;code&gt;OpenAIException&lt;/code&gt;&lt;/a&gt;: Base class for all exceptions. Most errors will result in one of the previously mentioned ones, but completely generic errors may be thrown using the base class.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pagination&lt;/h2&gt; 
&lt;p&gt;The SDK defines methods that return a paginated lists of results. It provides convenient ways to access the results either one page at a time or item-by-item across all pages.&lt;/p&gt; 
&lt;h3&gt;Auto-pagination&lt;/h3&gt; 
&lt;p&gt;To iterate through all results across all pages, use the &lt;code&gt;autoPager()&lt;/code&gt; method, which automatically fetches more pages as needed.&lt;/p&gt; 
&lt;p&gt;When using the synchronous client, the method returns an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.finetuning.jobs.FineTuningJob;
import com.openai.models.finetuning.jobs.JobListPage;

JobListPage page = client.fineTuning().jobs().list();

// Process as an Iterable
for (FineTuningJob job : page.autoPager()) {
    System.out.println(job);
}

// Process as a Stream
page.autoPager()
    .stream()
    .limit(50)
    .forEach(job -&amp;gt; System.out.println(job));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using the asynchronous client, the method returns an &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/http/AsyncStreamResponse.kt&quot;&gt;&lt;code&gt;AsyncStreamResponse&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.http.AsyncStreamResponse;
import com.openai.models.finetuning.jobs.FineTuningJob;
import com.openai.models.finetuning.jobs.JobListPageAsync;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

CompletableFuture&amp;lt;JobListPageAsync&amp;gt; pageFuture = client.async().fineTuning().jobs().list();

pageFuture.thenRun(page -&amp;gt; page.autoPager().subscribe(job -&amp;gt; {
    System.out.println(job);
}));

// If you need to handle errors or completion of the stream
pageFuture.thenRun(page -&amp;gt; page.autoPager().subscribe(new AsyncStreamResponse.Handler&amp;lt;&amp;gt;() {
    @Override
    public void onNext(FineTuningJob job) {
        System.out.println(job);
    }

    @Override
    public void onComplete(Optional&amp;lt;Throwable&amp;gt; error) {
        if (error.isPresent()) {
            System.out.println(&quot;Something went wrong!&quot;);
            throw new RuntimeException(error.get());
        } else {
            System.out.println(&quot;No more!&quot;);
        }
    }
}));

// Or use futures
pageFuture.thenRun(page -&amp;gt; page.autoPager()
    .subscribe(job -&amp;gt; {
        System.out.println(job);
    })
    .onCompleteFuture()
    .whenComplete((unused, error) -&amp;gt; {
        if (error != null) {
            System.out.println(&quot;Something went wrong!&quot;);
            throw new RuntimeException(error);
        } else {
            System.out.println(&quot;No more!&quot;);
        }
    }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual pagination&lt;/h3&gt; 
&lt;p&gt;To access individual page items and manually request the next page, use the &lt;code&gt;items()&lt;/code&gt;, &lt;code&gt;hasNextPage()&lt;/code&gt;, and &lt;code&gt;nextPage()&lt;/code&gt; methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.finetuning.jobs.FineTuningJob;
import com.openai.models.finetuning.jobs.JobListPage;

JobListPage page = client.fineTuning().jobs().list();
while (true) {
    for (FineTuningJob job : page.items()) {
        System.out.println(job);
    }

    if (!page.hasNextPage()) {
        break;
    }

    page = page.nextPage();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;The SDK uses the standard &lt;a href=&quot;https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor&quot;&gt;OkHttp logging interceptor&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Enable logging by setting the &lt;code&gt;OPENAI_LOG&lt;/code&gt; environment variable to &lt;code&gt;info&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ export OPENAI_LOG=info
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or to &lt;code&gt;debug&lt;/code&gt; for more verbose logging:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ export OPENAI_LOG=debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ProGuard and R8&lt;/h2&gt; 
&lt;p&gt;Although the SDK uses reflection, it is still usable with &lt;a href=&quot;https://github.com/Guardsquare/proguard&quot;&gt;ProGuard&lt;/a&gt; and &lt;a href=&quot;https://developer.android.com/topic/performance/app-optimization/enable-app-optimization&quot;&gt;R8&lt;/a&gt; because &lt;code&gt;openai-java-core&lt;/code&gt; is published with a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/resources/META-INF/proguard/openai-java-core.pro&quot;&gt;configuration file&lt;/a&gt; containing &lt;a href=&quot;https://www.guardsquare.com/manual/configuration/usage&quot;&gt;keep rules&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;ProGuard and R8 should automatically detect and use the published rules, but you can also manually copy the keep rules if necessary.&lt;/p&gt; 
&lt;h2&gt;GraalVM&lt;/h2&gt; 
&lt;p&gt;Although the SDK uses reflection, it is still usable in &lt;a href=&quot;https://www.graalvm.org&quot;&gt;GraalVM&lt;/a&gt; because &lt;code&gt;openai-java-core&lt;/code&gt; is published with &lt;a href=&quot;https://www.graalvm.org/latest/reference-manual/native-image/metadata/&quot;&gt;reachability metadata&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GraalVM should automatically detect and use the published metadata, but &lt;a href=&quot;https://www.graalvm.org/jdk24/reference-manual/native-image/overview/BuildConfiguration/&quot;&gt;manual configuration&lt;/a&gt; is also available.&lt;/p&gt; 
&lt;h2&gt;Spring Boot&lt;/h2&gt; 
&lt;p&gt;If you&#39;re using Spring Boot, then you can use the SDK&#39;s &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.7.18/reference/htmlsingle/#using.build-systems.starters&quot;&gt;Spring Boot starter&lt;/a&gt; to simplify configuration and get set up quickly.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;!-- x-release-please-start-version --&gt; 
&lt;h4&gt;Gradle&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;implementation(&quot;com.openai:openai-java-spring-boot-starter:3.0.2&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Maven&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.openai&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;openai-java-spring-boot-starter&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;3.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- x-release-please-end --&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#client-configuration&quot;&gt;client&#39;s environment variable options&lt;/a&gt; can be configured in &lt;a href=&quot;https://docs.spring.io/spring-boot/how-to/properties-and-configuration.html&quot;&gt;&lt;code&gt;application.properties&lt;/code&gt; or &lt;code&gt;application.yml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;application.properties&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-properties&quot;&gt;openai.base-url=https://api.openai.com/v1
openai.api-key=My API Key
openai.org-id=My Organization
openai.project-id=My Project
openai.webhook-secret=My Webhook Secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;application.yml&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;openai:
  base-url: https://api.openai.com/v1
  api-key: My API Key
  org-id: My Organization
  project-id: My Project
  webhook-secret: My Webhook Secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Other configuration&lt;/h4&gt; 
&lt;p&gt;Configure any other client option by providing one or more instances of &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-spring-boot-starter/src/main/kotlin/com/openai/springboot/OpenAIClientCustomizer.kt&quot;&gt;&lt;code&gt;OpenAIClientCustomizer&lt;/code&gt;&lt;/a&gt;. For example, here&#39;s how you&#39;d set &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#retries&quot;&gt;&lt;code&gt;maxRetries&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.springboot.OpenAIClientCustomizer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class OpenAIConfig {
    @Bean
    public OpenAIClientCustomizer customizer() {
        return builder -&amp;gt; builder.maxRetries(3);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/reference/core/beans/dependencies/factory-collaborators.html&quot;&gt;Inject&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClient.kt&quot;&gt;&lt;code&gt;OpenAIClient&lt;/code&gt;&lt;/a&gt; anywhere and start using it!&lt;/p&gt; 
&lt;h2&gt;Jackson&lt;/h2&gt; 
&lt;p&gt;The SDK depends on &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;Jackson&lt;/a&gt; for JSON serialization/deserialization. It is compatible with version 2.13.4 or higher, but depends on version 2.18.2 by default.&lt;/p&gt; 
&lt;p&gt;The SDK throws an exception if it detects an incompatible Jackson version at runtime (e.g. if the default version was overridden in your Maven or Gradle config).&lt;/p&gt; 
&lt;p&gt;If the SDK threw an exception, but you&#39;re &lt;em&gt;certain&lt;/em&gt; the version is compatible, then disable the version check using the &lt;code&gt;checkJacksonVersionCompatibility&lt;/code&gt; on &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClient.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClient&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClientAsync.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClientAsync&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] We make no guarantee that the SDK works correctly when the Jackson version check is disabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Microsoft Azure&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href=&quot;https://learn.microsoft.com/azure/ai-services/openai/overview&quot;&gt;Azure OpenAI&lt;/a&gt;, use the same OpenAI client builder but with the Azure-specific configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;OpenAIClient client = OpenAIOkHttpClient.builder()
        // Gets the API key and endpoint from the `AZURE_OPENAI_KEY` and `OPENAI_BASE_URL` environment variables, respectively
        .fromEnv()
        // Set the Azure Entra ID
        .credential(BearerTokenCredential.create(AuthenticationUtil.getBearerTokenSupplier(
                new DefaultAzureCredentialBuilder().build(), &quot;https://cognitiveservices.azure.com/.default&quot;)))
        .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the complete Azure OpenAI example in the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-example/src/main/java/com/openai/example/AzureEntraIdExample.java&quot;&gt;&lt;code&gt;openai-java-example&lt;/code&gt;&lt;/a&gt; directory. The other examples in the directory also work with Azure as long as the client is configured to use it.&lt;/p&gt; 
&lt;h2&gt;Network options&lt;/h2&gt; 
&lt;h3&gt;Retries&lt;/h3&gt; 
&lt;p&gt;The SDK automatically retries 2 times by default, with a short exponential backoff between requests.&lt;/p&gt; 
&lt;p&gt;Only the following error types are retried:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Connection errors (for example, due to a network connectivity problem)&lt;/li&gt; 
 &lt;li&gt;408 Request Timeout&lt;/li&gt; 
 &lt;li&gt;409 Conflict&lt;/li&gt; 
 &lt;li&gt;429 Rate Limit&lt;/li&gt; 
 &lt;li&gt;5xx Internal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The API may also explicitly instruct the SDK to retry or not retry a request.&lt;/p&gt; 
&lt;p&gt;To set a custom number of retries, configure the client using the &lt;code&gt;maxRetries&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .fromEnv()
    .maxRetries(4)
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Timeouts&lt;/h3&gt; 
&lt;p&gt;Requests time out after 10 minutes by default.&lt;/p&gt; 
&lt;p&gt;To set a custom timeout, configure the method call using the &lt;code&gt;timeout&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.chat.completions.ChatCompletion;

ChatCompletion chatCompletion = client.chat().completions().create(
  params, RequestOptions.builder().timeout(Duration.ofSeconds(30)).build()
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or configure the default for all method calls at the client level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import java.time.Duration;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .fromEnv()
    .timeout(Duration.ofSeconds(30))
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Proxies&lt;/h3&gt; 
&lt;p&gt;To route requests through a proxy, configure the client using the &lt;code&gt;proxy&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;
import java.net.InetSocketAddress;
import java.net.Proxy;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .fromEnv()
    .proxy(new Proxy(
      Proxy.Type.HTTP, new InetSocketAddress(
        &quot;https://example.com&quot;, 8080
      )
    ))
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTPS&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Most applications should not call these methods, and instead use the system defaults. The defaults include special optimizations that can be lost if the implementations are modified.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To configure how HTTPS connections are secured, configure the client using the &lt;code&gt;sslSocketFactory&lt;/code&gt;, &lt;code&gt;trustManager&lt;/code&gt;, and &lt;code&gt;hostnameVerifier&lt;/code&gt; methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .fromEnv()
    // If `sslSocketFactory` is set, then `trustManager` must be set, and vice versa.
    .sslSocketFactory(yourSSLSocketFactory)
    .trustManager(yourTrustManager)
    .hostnameVerifier(yourHostnameVerifier)
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom HTTP client&lt;/h3&gt; 
&lt;p&gt;The SDK consists of three artifacts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;openai-java-core&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Contains core SDK logic&lt;/li&gt; 
   &lt;li&gt;Does not depend on &lt;a href=&quot;https://square.github.io/okhttp&quot;&gt;OkHttp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Exposes &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClient.kt&quot;&gt;&lt;code&gt;OpenAIClient&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientAsync.kt&quot;&gt;&lt;code&gt;OpenAIClientAsync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientImpl&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientAsyncImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientAsyncImpl&lt;/code&gt;&lt;/a&gt;, all of which can work with any HTTP client&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;openai-java-client-okhttp&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Depends on &lt;a href=&quot;https://square.github.io/okhttp&quot;&gt;OkHttp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Exposes &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClient.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClient&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClientAsync.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClientAsync&lt;/code&gt;&lt;/a&gt;, which provide a way to construct &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientImpl&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientAsyncImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientAsyncImpl&lt;/code&gt;&lt;/a&gt;, respectively, using OkHttp&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;openai-java&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Depends on and exposes the APIs of both &lt;code&gt;openai-java-core&lt;/code&gt; and &lt;code&gt;openai-java-client-okhttp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Does not have its own logic&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This structure allows replacing the SDK&#39;s default HTTP client without pulling in unnecessary dependencies.&lt;/p&gt; 
&lt;h4&gt;Customized &lt;a href=&quot;https://square.github.io/okhttp/3.x/okhttp/okhttp3/OkHttpClient.html&quot;&gt;&lt;code&gt;OkHttpClient&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Try the available &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#network-options&quot;&gt;network options&lt;/a&gt; before replacing the default client.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To use a customized &lt;code&gt;OkHttpClient&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Replace your &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#installation&quot;&gt;&lt;code&gt;openai-java&lt;/code&gt; dependency&lt;/a&gt; with &lt;code&gt;openai-java-core&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;openai-java-client-okhttp&lt;/code&gt;&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OkHttpClient.kt&quot;&gt;&lt;code&gt;OkHttpClient&lt;/code&gt;&lt;/a&gt; class into your code and customize it&lt;/li&gt; 
 &lt;li&gt;Construct &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientImpl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientAsyncImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientAsyncImpl&lt;/code&gt;&lt;/a&gt;, similarly to &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClient.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClient&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClientAsync.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClientAsync&lt;/code&gt;&lt;/a&gt;, using your customized client&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Completely custom HTTP client&lt;/h3&gt; 
&lt;p&gt;To use a completely custom HTTP client:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Replace your &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#installation&quot;&gt;&lt;code&gt;openai-java&lt;/code&gt; dependency&lt;/a&gt; with &lt;code&gt;openai-java-core&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Write a class that implements the &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/http/HttpClient.kt&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt; interface&lt;/li&gt; 
 &lt;li&gt;Construct &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientImpl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/client/OpenAIClientAsyncImpl.kt&quot;&gt;&lt;code&gt;OpenAIClientAsyncImpl&lt;/code&gt;&lt;/a&gt;, similarly to &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClient.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClient&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-client-okhttp/src/main/kotlin/com/openai/client/okhttp/OpenAIOkHttpClientAsync.kt&quot;&gt;&lt;code&gt;OpenAIOkHttpClientAsync&lt;/code&gt;&lt;/a&gt;, using your new client class&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Undocumented API functionality&lt;/h2&gt; 
&lt;p&gt;The SDK is typed for convenient usage of the documented API. However, it also supports working with undocumented or not yet supported parts of the API.&lt;/p&gt; 
&lt;h3&gt;Parameters&lt;/h3&gt; 
&lt;p&gt;To set undocumented parameters, call the &lt;code&gt;putAdditionalHeader&lt;/code&gt;, &lt;code&gt;putAdditionalQueryParam&lt;/code&gt;, or &lt;code&gt;putAdditionalBodyProperty&lt;/code&gt; methods on any &lt;code&gt;Params&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonValue;
import com.openai.models.chat.completions.ChatCompletionCreateParams;

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .putAdditionalHeader(&quot;Secret-Header&quot;, &quot;42&quot;)
    .putAdditionalQueryParam(&quot;secret_query_param&quot;, &quot;42&quot;)
    .putAdditionalBodyProperty(&quot;secretProperty&quot;, JsonValue.from(&quot;42&quot;))
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These can be accessed on the built object later using the &lt;code&gt;_additionalHeaders()&lt;/code&gt;, &lt;code&gt;_additionalQueryParams()&lt;/code&gt;, and &lt;code&gt;_additionalBodyProperties()&lt;/code&gt; methods.&lt;/p&gt; 
&lt;p&gt;To set undocumented parameters on &lt;em&gt;nested&lt;/em&gt; headers, query params, or body classes, call the &lt;code&gt;putAdditionalProperty&lt;/code&gt; method on the nested class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonValue;
import com.openai.models.chat.completions.ChatCompletionCreateParams;

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .responseFormat(ChatCompletionCreateParams.ResponseFormat.builder()
        .putAdditionalProperty(&quot;secretProperty&quot;, JsonValue.from(&quot;42&quot;))
        .build())
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These properties can be accessed on the nested built object later using the &lt;code&gt;_additionalProperties()&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;To set a documented parameter or property to an undocumented or not yet supported &lt;em&gt;value&lt;/em&gt;, pass a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/Values.kt&quot;&gt;&lt;code&gt;JsonValue&lt;/code&gt;&lt;/a&gt; object to its setter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonValue;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletionCreateParams;

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .messages(JsonValue.from(42))
    .model(ChatModel.GPT_5)
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The most straightforward way to create a &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/Values.kt&quot;&gt;&lt;code&gt;JsonValue&lt;/code&gt;&lt;/a&gt; is using its &lt;code&gt;from(...)&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonValue;
import java.util.List;
import java.util.Map;

// Create primitive JSON values
JsonValue nullValue = JsonValue.from(null);
JsonValue booleanValue = JsonValue.from(true);
JsonValue numberValue = JsonValue.from(42);
JsonValue stringValue = JsonValue.from(&quot;Hello World!&quot;);

// Create a JSON array value equivalent to `[&quot;Hello&quot;, &quot;World&quot;]`
JsonValue arrayValue = JsonValue.from(List.of(
  &quot;Hello&quot;, &quot;World&quot;
));

// Create a JSON object value equivalent to `{ &quot;a&quot;: 1, &quot;b&quot;: 2 }`
JsonValue objectValue = JsonValue.from(Map.of(
  &quot;a&quot;, 1,
  &quot;b&quot;, 2
));

// Create an arbitrarily nested JSON equivalent to:
// {
//   &quot;a&quot;: [1, 2],
//   &quot;b&quot;: [3, 4]
// }
JsonValue complexValue = JsonValue.from(Map.of(
  &quot;a&quot;, List.of(
    1, 2
  ),
  &quot;b&quot;, List.of(
    3, 4
  )
));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Normally a &lt;code&gt;Builder&lt;/code&gt; class&#39;s &lt;code&gt;build&lt;/code&gt; method will throw &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; if any required parameter or property is unset.&lt;/p&gt; 
&lt;p&gt;To forcibly omit a required parameter or property, pass &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/core/Values.kt&quot;&gt;&lt;code&gt;JsonMissing&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonMissing;
import com.openai.models.ChatModel;
import com.openai.models.chat.completions.ChatCompletionCreateParams;

ChatCompletionCreateParams params = ChatCompletionCreateParams.builder()
    .model(ChatModel.GPT_5)
    .messages(JsonMissing.of())
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Response properties&lt;/h3&gt; 
&lt;p&gt;To access undocumented response properties, call the &lt;code&gt;_additionalProperties()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonValue;
import java.util.Map;

Map&amp;lt;String, JsonValue&amp;gt; additionalProperties = client.chat().completions().create(params)._additionalProperties();
JsonValue secretPropertyValue = additionalProperties.get(&quot;secretProperty&quot;);

String result = secretPropertyValue.accept(new JsonValue.Visitor&amp;lt;&amp;gt;() {
    @Override
    public String visitNull() {
        return &quot;It&#39;s null!&quot;;
    }

    @Override
    public String visitBoolean(boolean value) {
        return &quot;It&#39;s a boolean!&quot;;
    }

    @Override
    public String visitNumber(Number value) {
        return &quot;It&#39;s a number!&quot;;
    }

    // Other methods include `visitMissing`, `visitString`, `visitArray`, and `visitObject`
    // The default implementation of each unimplemented method delegates to `visitDefault`, which throws by default, but can also be overridden
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To access a property&#39;s raw JSON value, which may be undocumented, call its &lt;code&gt;_&lt;/code&gt; prefixed method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.core.JsonField;
import com.openai.models.chat.completions.ChatCompletionMessageParam;
import java.util.Optional;

JsonField&amp;lt;List&amp;lt;ChatCompletionMessageParam&amp;gt;&amp;gt; messages = client.chat().completions().create(params)._messages();

if (messages.isMissing()) {
  // The property is absent from the JSON response
} else if (messages.isNull()) {
  // The property was set to literal null
} else {
  // Check if value was provided as a string
  // Other methods include `asNumber()`, `asBoolean()`, etc.
  Optional&amp;lt;String&amp;gt; jsonString = messages.asString();

  // Try to deserialize into a custom type
  MyClass myObject = messages.asUnknown().orElseThrow().convert(MyClass.class);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Response validation&lt;/h3&gt; 
&lt;p&gt;In rare cases, the API may return a response that doesn&#39;t match the expected type. For example, the SDK may expect a property to contain a &lt;code&gt;String&lt;/code&gt;, but the API could return something else.&lt;/p&gt; 
&lt;p&gt;By default, the SDK will not throw an exception in this case. It will throw &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/openai-java-core/src/main/kotlin/com/openai/errors/OpenAIInvalidDataException.kt&quot;&gt;&lt;code&gt;OpenAIInvalidDataException&lt;/code&gt;&lt;/a&gt; only if you directly access the property.&lt;/p&gt; 
&lt;p&gt;If you would prefer to check that the response is completely well-typed upfront, then either call &lt;code&gt;validate()&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.chat.completions.ChatCompletion;

ChatCompletion chatCompletion = client.chat().completions().create(params).validate();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or configure the method call to validate the response using the &lt;code&gt;responseValidation&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.models.chat.completions.ChatCompletion;

ChatCompletion chatCompletion = client.chat().completions().create(
  params, RequestOptions.builder().responseValidation(true).build()
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or configure the default for all method calls at the client level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;import com.openai.client.OpenAIClient;
import com.openai.client.okhttp.OpenAIOkHttpClient;

OpenAIClient client = OpenAIOkHttpClient.builder()
    .fromEnv()
    .responseValidation(true)
    .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Why don&#39;t you use plain &lt;code&gt;enum&lt;/code&gt; classes?&lt;/h3&gt; 
&lt;p&gt;Java &lt;code&gt;enum&lt;/code&gt; classes are not trivially &lt;a href=&quot;https://www.stainless.com/blog/making-java-enums-forwards-compatible&quot;&gt;forwards compatible&lt;/a&gt;. Using them in the SDK could cause runtime exceptions if the API is updated to respond with a new enum value.&lt;/p&gt; 
&lt;h3&gt;Why do you represent fields using &lt;code&gt;JsonField&amp;lt;T&amp;gt;&lt;/code&gt; instead of just plain &lt;code&gt;T&lt;/code&gt;?&lt;/h3&gt; 
&lt;p&gt;Using &lt;code&gt;JsonField&amp;lt;T&amp;gt;&lt;/code&gt; enables a few features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Allowing usage of &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#undocumented-api-functionality&quot;&gt;undocumented API functionality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lazily &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-java/main/#response-validation&quot;&gt;validating the API response against the expected shape&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Representing absent vs explicitly null values&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Why don&#39;t you use &lt;a href=&quot;https://kotlinlang.org/docs/data-classes.html&quot;&gt;&lt;code&gt;data&lt;/code&gt; classes&lt;/a&gt;?&lt;/h3&gt; 
&lt;p&gt;It is not &lt;a href=&quot;https://kotlinlang.org/docs/api-guidelines-backward-compatibility.html#avoid-using-data-classes-in-your-api&quot;&gt;backwards compatible to add new fields to a data class&lt;/a&gt; and we don&#39;t want to introduce a breaking change every time we add a field to a class.&lt;/p&gt; 
&lt;h3&gt;Why don&#39;t you use checked exceptions?&lt;/h3&gt; 
&lt;p&gt;Checked exceptions are widely considered a mistake in the Java programming language. In fact, they were omitted from Kotlin for this reason.&lt;/p&gt; 
&lt;p&gt;Checked exceptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Are verbose to handle&lt;/li&gt; 
 &lt;li&gt;Encourage error handling at the wrong level of abstraction, where nothing can be done about the error&lt;/li&gt; 
 &lt;li&gt;Are tedious to propagate due to the &lt;a href=&quot;https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function&quot;&gt;function coloring problem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Don&#39;t play well with lambdas (also due to the function coloring problem)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href=&quot;https://www.github.com/openai/openai-java/issues&quot;&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mobile-dev-inc/Maestro</title>
      <link>https://github.com/mobile-dev-inc/Maestro</link>
      <description>&lt;p&gt;Painless E2E Automation for Mobile and Web&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Ready to wire into CI or scale up your testing? &lt;a href=&quot;https://docs.maestro.dev/cloud/run-maestro-tests-in-the-cloud&quot;&gt;Run Maestro in the cloud&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;a href=&quot;https://www.maestro.dev&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Logo&quot; src=&quot;https://github.com/user-attachments/assets/91c4f440-288e-4a9e-93a3-3c89a19d2f04&quot; /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.maestro.dev&quot;&gt;maestro.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Maestro is the simplest and most effective UI testing framework for Mobile and Web.&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/847683/187275009-ddbdf963-ce1d-4e07-ac08-b10f145e8894.gif&quot; /&gt; 
&lt;h2&gt;Why Maestro?&lt;/h2&gt; 
&lt;p&gt;Maestro is built on learnings from its predecessors (Appium, Espresso, UIAutomator, XCTest)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built-in tolerance to flakiness. UI elements will not always be where you expect them, screen tap will not always go through, etc. Maestro embraces the instability of mobile applications and devices and tries to counter it.&lt;/li&gt; 
 &lt;li&gt;Built-in tolerance to delays. No need to pepper your tests with &lt;code&gt;sleep()&lt;/code&gt; calls. Maestro knows that it might take time to load the content (i.e. over the network) and automatically waits for it (but no longer than required).&lt;/li&gt; 
 &lt;li&gt;Blazingly fast iteration. Tests are interpreted, no need to compile anything. Maestro is able to continuously monitor your test files and rerun them as they change.&lt;/li&gt; 
 &lt;li&gt;Declarative yet powerful syntax. Define your tests in a &lt;code&gt;yaml&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;Simple setup. Maestro is a single binary that works anywhere.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Available at &lt;a href=&quot;https://docs.maestro.dev&quot;&gt;docs.maestro.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To get more background on why we built Maestro, read &lt;a href=&quot;https://maestro.dev/blog/introducing-maestro-painless-mobile-ui-automation&quot;&gt;the Maestro announcement blogpost&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;We invite everyone to &lt;a href=&quot;https://docsend.com/view/3r2sf8fvvcjxvbtk&quot;&gt;join our public Slack channel&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Maestro is an open-source project and we love getting contributions.&lt;/p&gt; 
&lt;p&gt;To get started, take a look at &lt;a href=&quot;https://github.com/mobile-dev-inc/maestro/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&quot;&gt;issues with the &lt;code&gt;good first issue&lt;/code&gt; label&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/mobile-dev-inc/Maestro/main/CONTRIBUTING.md&quot;&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;pre&gt;&lt;code&gt;Built with ❤️ by Maestro.dev
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>topjohnwu/Magisk</title>
      <link>https://github.com/topjohnwu/Magisk</link>
      <description>&lt;p&gt;The Magic Mask for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/topjohnwu/Magisk/master/docs/images/logo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/topjohnwu/magisk-files/count/count.json&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?color=green&amp;amp;label=Downloads&amp;amp;query=totalString&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Ftopjohnwu%2Fmagisk-files%2Fcount%2Fcount.json&amp;amp;cacheSeconds=1800&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;This is not an officially supported Google product&lt;/h4&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Magisk is a suite of open source software for customizing Android, supporting devices higher than Android 6.0.&lt;br /&gt; Some highlight features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MagiskSU&lt;/strong&gt;: Provide root access for applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Magisk Modules&lt;/strong&gt;: Modify read-only partitions by installing modules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MagiskBoot&lt;/strong&gt;: The most complete tool for unpacking and repacking Android boot images&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zygisk&lt;/strong&gt;: Run code in every Android applications&#39; processes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/topjohnwu/Magisk/releases&quot;&gt;Github&lt;/a&gt; is the only source where you can get official Magisk information and downloads.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://topjohnwu.github.io/Magisk/install.html&quot;&gt;Installation Instruction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://topjohnwu.github.io/Magisk/build.html&quot;&gt;Building and Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://topjohnwu.github.io/Magisk/&quot;&gt;Magisk Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/topjohnwu/zygisk-module-sample&quot;&gt;Zygisk module sample&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bug Reports&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Only bug reports from Debug builds will be accepted.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For installation issues, upload both boot image and install logs.&lt;br /&gt; For Magisk issues, upload boot logcat or dmesg.&lt;br /&gt; For Magisk app crashes, record and upload the logcat when the crash occurs.&lt;/p&gt; 
&lt;h2&gt;Translation Contributions&lt;/h2&gt; 
&lt;p&gt;Default string resources for the Magisk app and its stub APK are located here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;app/core/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;app/stub/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Translate each and place them in the respective locations (&lt;code&gt;[module]/src/main/res/values-[lang]/strings.xml&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Magisk, including all git submodules are free software:
you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>gedoor/legado</title>
      <link>https://github.com/gedoor/legado</link>
      <description>&lt;p&gt;Legado 3.0 Book Reader with powerful controls &amp; full functions❤️阅读3.0, 阅读是一款可以自定义来源阅读网络内容的工具，为广大网络文学爱好者提供一种方便、快捷舒适的试读体验。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/English.md&quot;&gt;English&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/README.md&quot;&gt;中文&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=io.legado.play.release&quot;&gt;&lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/icon_android.png&quot; alt=&quot;icon_android&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://jb.gg/OpenSourceSupport&quot; target=&quot;_blank&quot;&gt; &lt;img width=&quot;24&quot; height=&quot;24&quot; src=&quot;https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg?_gl=1*135yekd*_ga*OTY4Mjg4NDYzLjE2Mzk0NTE3MzQ.*_ga_9J976DJZ68*MTY2OTE2MzM5Ny4xMy4wLjE2NjkxNjMzOTcuNjAuMC4w&amp;amp;_ga=2.257292110.451256242.1669085120-968288463.1639451734&quot; alt=&quot;idea&quot; /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img width=&quot;125&quot; height=&quot;125&quot; src=&quot;https://github.com/gedoor/legado/raw/master/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png&quot; alt=&quot;legado&quot; /&gt; 
 &lt;p&gt;Legado / 开源阅读 &lt;br /&gt; &lt;a href=&quot;https://gedoor.github.io&quot; target=&quot;_blank&quot;&gt;gedoor.github.io&lt;/a&gt; / &lt;a href=&quot;https://www.legado.top/&quot; target=&quot;_blank&quot;&gt;legado.top&lt;/a&gt; &lt;br /&gt; Legado is a free and open source novel reader for Android.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#contents&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Contents:-696969.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Function-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Function-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Community-%E4%BA%A4%E6%B5%81%E7%A4%BE%E5%8C%BA-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Community-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#API-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-API-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Other-%E5%85%B6%E4%BB%96-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Other-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Grateful-%E6%84%9F%E8%B0%A2-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Grateful-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Interface-%E7%95%8C%E9%9D%A2-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Interface-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;新用户？&lt;/p&gt; 
 &lt;p&gt;软件不提供内容，需要您自己手动添加，例如导入书源等。 看看 &lt;a href=&quot;https://www.yuque.com/legado/wiki&quot;&gt;官方帮助文档&lt;/a&gt;，也许里面就有你要的答案。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Function-主要功能 &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Function-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Function-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/English.md&quot;&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;中文&lt;/summary&gt; 1.自定义书源，自己设置规则，抓取网页数据，规则简单易懂，软件内有规则说明。
 &lt;br /&gt; 2.列表书架，网格书架自由切换。
 &lt;br /&gt; 3.书源规则支持搜索及发现，所有找书看书功能全部自定义，找书更方便。
 &lt;br /&gt; 4.订阅内容,可以订阅想看的任何内容,看你想看
 &lt;br /&gt; 5.支持替换净化，去除广告替换内容很方便。
 &lt;br /&gt; 6.支持本地TXT、EPUB阅读，手动浏览，智能扫描。
 &lt;br /&gt; 7.支持高度自定义阅读界面，切换字体、颜色、背景、行距、段距、加粗、简繁转换等。
 &lt;br /&gt; 8.支持多种翻页模式，覆盖、仿真、滑动、滚动等。
 &lt;br /&gt; 9.软件开源，持续优化，无广告。 
&lt;/details&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#readme&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-返回顶部-orange.svg&quot; alt=&quot;#&quot; align=&quot;right&quot; /&gt; &lt;/a&gt; 
&lt;h1&gt;Community-交流社区 &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Community-%E4%BA%A4%E6%B5%81%E7%A4%BE%E5%8C%BA-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Community-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;h4&gt;Telegram&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/yueduguanfang&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-%E7%BE%A4%E7%BB%84-blue&quot; alt=&quot;Telegram-group&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/legado_channels&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-%E9%A2%91%E9%81%93-blue&quot; alt=&quot;Telegram-channel&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Discord&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/VtUfRyzRXn&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/560731361414086666?color=%235865f2&amp;amp;label=Discord&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Other&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/legado/wiki/community&quot;&gt;https://www.yuque.com/legado/wiki/community&lt;/a&gt;&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#readme&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-返回顶部-orange.svg&quot; alt=&quot;#&quot; align=&quot;right&quot; /&gt; &lt;/a&gt; 
&lt;h1&gt;API &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#API-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-API-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;阅读3.0 提供了2种方式的API：&lt;code&gt;Web方式&lt;/code&gt;和&lt;code&gt;Content Provider方式&lt;/code&gt;。您可以在&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/api.md&quot;&gt;这里&lt;/a&gt;根据需要自行调用。&lt;/li&gt; 
 &lt;li&gt;可通过url唤起阅读进行一键导入,url格式: legado://import/{path}?src={url}&lt;/li&gt; 
 &lt;li&gt;path类型: bookSource,rssSource,replaceRule,textTocRule,httpTTS,theme,readConfig,dictRule,&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/app/src/main/java/io/legado/app/ui/association/AddToBookshelfDialog.kt&quot;&gt;addToBookshelf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;path类型解释: 书源,订阅源,替换规则,本地txt小说目录规则,在线朗读引擎,主题,阅读排版,添加到书架&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#readme&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-返回顶部-orange.svg&quot; alt=&quot;#&quot; align=&quot;right&quot; /&gt; &lt;/a&gt; 
&lt;h1&gt;Other-其他 &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Other-%E5%85%B6%E4%BB%96-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Other-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;h5&gt;免责声明&lt;/h5&gt; 
&lt;p&gt;&lt;a href=&quot;https://gedoor.github.io/Disclaimer&quot;&gt;https://gedoor.github.io/Disclaimer&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;阅读3.0&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://mgz0227.github.io/The-tutorial-of-Legado/&quot;&gt;书源规则&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/app/src/main/assets/updateLog.md&quot;&gt;更新日志&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/app/src/main/assets/web/help/md/appHelp.md&quot;&gt;帮助文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gedoor/legado_web_bookshelf&quot;&gt;web端书架&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/gedoor/legado_web_source_editor&quot;&gt;web端源编辑&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#readme&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-返回顶部-orange.svg&quot; alt=&quot;#&quot; align=&quot;right&quot; /&gt; &lt;/a&gt; 
&lt;h1&gt;Grateful-感谢 &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Grateful-%E6%84%9F%E8%B0%A2-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Grateful-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;org.jsoup:jsoup&lt;/li&gt; 
  &lt;li&gt;cn.wanghaomiao:JsoupXpath&lt;/li&gt; 
  &lt;li&gt;com.jayway.jsonpath:json-path&lt;/li&gt; 
  &lt;li&gt;com.github.gedoor:rhino-android&lt;/li&gt; 
  &lt;li&gt;com.squareup.okhttp3:okhttp&lt;/li&gt; 
  &lt;li&gt;com.github.bumptech.glide:glide&lt;/li&gt; 
  &lt;li&gt;org.nanohttpd:nanohttpd&lt;/li&gt; 
  &lt;li&gt;org.nanohttpd:nanohttpd-websocket&lt;/li&gt; 
  &lt;li&gt;cn.bingoogolapple:bga-qrcode-zxing&lt;/li&gt; 
  &lt;li&gt;com.jaredrummler:colorpicker&lt;/li&gt; 
  &lt;li&gt;org.apache.commons:commons-text&lt;/li&gt; 
  &lt;li&gt;io.noties.markwon:core&lt;/li&gt; 
  &lt;li&gt;io.noties.markwon:image-glide&lt;/li&gt; 
  &lt;li&gt;com.hankcs:hanlp&lt;/li&gt; 
  &lt;li&gt;com.positiondev.epublib:epublib-core&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#readme&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-返回顶部-orange.svg&quot; alt=&quot;#&quot; align=&quot;right&quot; /&gt; &lt;/a&gt; 
&lt;h1&gt;Interface-界面 &lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#Interface-%E7%95%8C%E9%9D%A2-&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Interface-F5F5F5.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B1.jpg&quot; width=&quot;270&quot; /&gt;&lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B2.jpg&quot; width=&quot;270&quot; /&gt;&lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B3.jpg&quot; width=&quot;270&quot; /&gt; &lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B4.jpg&quot; width=&quot;270&quot; /&gt;&lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B5.jpg&quot; width=&quot;270&quot; /&gt;&lt;img src=&quot;https://github.com/gedoor/gedoor.github.io/raw/master/static/img/legado/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B6.jpg&quot; width=&quot;270&quot; /&gt;&lt;/p&gt; 
&lt;a href=&quot;https://raw.githubusercontent.com/gedoor/legado/master/#readme&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/-返回顶部-orange.svg&quot; alt=&quot;#&quot; align=&quot;right&quot; /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>maxrave-dev/SimpMusic</title>
      <link>https://github.com/maxrave-dev/SimpMusic</link>
      <description>&lt;p&gt;A simple music app using YouTube Music for backend&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/maxrave-dev/SimpMusic/jetpack_compose/fastlane/metadata/android/en-US/images/featureGraphic.png&quot; /&gt; 
 &lt;h1&gt;SimpMusic&lt;/h1&gt; A FOSS YouTube Music client for Android with many features from
 &lt;br /&gt;Spotify, SponsorBlock, ReturnYouTubeDislike 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://github.com/maxrave-dev/SimpMusic/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/maxrave-dev/SimpMusic&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/maxrave-dev/SimpMusic/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/maxrave-dev/SimpMusic/total&quot; /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://trendshift.io/repositories/13482&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13482&quot; alt=&quot;maxrave-dev%2FSimpMusic | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://www.producthunt.com/products/simpmusic/reviews?utm_source=badge-product_rating&amp;amp;utm_medium=badge&amp;amp;utm_source=badge-simpmusic&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/product_rating.svg?product_id=903836&amp;amp;theme=dark&quot; alt=&quot;SimpMusic - A FOSS YouTube Music client for Android with many features | Product Hunt&quot; style=&quot;width: 242px; height: 108px;&quot; width=&quot;242&quot; height=&quot;108&quot; /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;h4&gt;Download&lt;/h4&gt; 
 &lt;a href=&quot;https://apt.izzysoft.de/packages/com.maxrave.simpmusic/&quot;&gt;&lt;img src=&quot;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://f-droid.org/en/packages/com.maxrave.simpmusic/&quot;&gt;&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.openapk.net/simpmusic/com.maxrave.simpmusic/&quot;&gt;&lt;img src=&quot;https://www.openapk.net/images/openapk-badge.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://github.com/maxrave-dev/SimpMusic/releases&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NeoApplications/Neo-Backup/034b226cea5c1b30eb4f6a6f313e4dadcbb0ece4/badge_github.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt; 
 &lt;h4&gt;Nightly Build&lt;/h4&gt; 
 &lt;a href=&quot;https://nightly.link/maxrave-dev/SimpMusic/workflows/android/dev/app.zip&quot;&gt;&lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/actions/workflows/android.yml/badge.svg?sanitize=true&quot; /&gt;&lt;/a&gt;
 &lt;br /&gt; 
 &lt;a href=&quot;https://nightly.link/maxrave-dev/SimpMusic/workflows/android/dev/app.zip&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/NeoApplications/Neo-Backup/034b226cea5c1b30eb4f6a6f313e4dadcbb0ece4/badge_github.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features ✨️&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Play music from YouTube Music or YouTube for free, without ads and in the background&lt;/li&gt; 
 &lt;li&gt;Browsing Home, Charts, Podcast, Moods &amp;amp; Genre with YouTube Music data at high speed&lt;/li&gt; 
 &lt;li&gt;Search everything on YouTube&lt;/li&gt; 
 &lt;li&gt;Analyze your playing data, create custom playlists, and sync with YouTube Music...&lt;/li&gt; 
 &lt;li&gt;Spotify Canvas supported&lt;/li&gt; 
 &lt;li&gt;Play 1080p video option with subtitle&lt;/li&gt; 
 &lt;li&gt;AI song suggestions&lt;/li&gt; 
 &lt;li&gt;Notifications from followed artists&lt;/li&gt; 
 &lt;li&gt;Caching and offline playback support&lt;/li&gt; 
 &lt;li&gt;Synced lyrics from SimpMusic Lyrics, LRCLIB, Spotify (require login) and YouTube Transcript - AI lyrics translation (BETA) (*)&lt;/li&gt; 
 &lt;li&gt;Personalize data (**) and multi-YouTube-account support&lt;/li&gt; 
 &lt;li&gt;Supports SponsorBlock and Return YouTube Dislike&lt;/li&gt; 
 &lt;li&gt;Sleep Timer&lt;/li&gt; 
 &lt;li&gt;Android Auto with online content&lt;/li&gt; 
 &lt;li&gt;And many more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;(*) Use your OpenAI or Gemini API key&lt;br /&gt; (**) For users who chose &quot;Send back to Google&quot; feature&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;br /&gt; This app is in the beta stage, so it may have many bugs and make it crash. If you find any bugs,&lt;br /&gt; please create an issue or contact me via email or Discord server.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/2.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/3.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/4.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/5.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/6.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/7.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/8.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/9.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/10.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/11.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/asset/screenshot/12.png?raw=true&quot; width=&quot;200&quot; /&gt; &lt;/p&gt; 
&lt;h4&gt;More &lt;a href=&quot;https://photos.app.goo.gl/AbieoXG5ctDrpwzp7&quot;&gt;screenshots&lt;/a&gt; here.&lt;/h4&gt; 
&lt;h2&gt;Data&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This app uses hidden API from YouTube Music with some tricks to get data from YouTube Music.&lt;/li&gt; 
 &lt;li&gt;Use Spotify Web API and some tricks to get Spotify Canvas and Lyrics&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;a href=&quot;https://github.com/z-huang/InnerTune/&quot;&gt;InnerTune&lt;/a&gt; for the idea to get data from YouTube Music. This repo is my inspiration to create this app.&lt;/li&gt; 
 &lt;li&gt;Special thanks to &lt;a href=&quot;https://github.com/yuliskov/SmartTube&quot;&gt;SmartTube&lt;/a&gt;. This repo help me to extract the streaming URL of YouTube Music.&lt;/li&gt; 
 &lt;li&gt;My app is using &lt;a href=&quot;https://sponsor.ajay.app/&quot;&gt;SponsorBlock&lt;/a&gt; to skip sponsor in YouTube videos.&lt;/li&gt; 
 &lt;li&gt;ReturnYouTubeDislike for getting information on votes&lt;/li&gt; 
 &lt;li&gt;Lyrics data from LRCLIB. More information &lt;a href=&quot;https://lrclib.net/&quot;&gt;LRCLIB&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;SimpMusic doesn&#39;t have any tracker or third-party server for collecting user data in FOSS version. If YouTube&lt;br /&gt; logged-in users enable &quot;Send back to Google&quot; feature, SimpMusic only uses YouTube Music Tracking API to send listening history and listening record of video to Google for better recommendations and&lt;br /&gt; supporting artist or YouTube Creator (For API reference,&lt;br /&gt; see &lt;a href=&quot;https://github.com/maxrave-dev/SimpMusic/raw/13f7ab6e5fa521b62a9fd31a1cefdc2787a1a8af/kotlinYtmusicScraper/src/main/java/com/maxrave/kotlinytmusicscraper/Ytmusic.kt#L639C4-L666C1&quot;&gt;this&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;We collect crash data in the Full version to improve the app.&lt;/p&gt; 
&lt;h2&gt;Full or FOSS version&lt;/h2&gt; 
&lt;p&gt;I use &lt;a href=&quot;http://sentry.io&quot;&gt;Sentry&lt;/a&gt; crashlytics to catch all crashes in the Full version. &lt;a href=&quot;https://github.com/getsentry/sentry&quot;&gt;Sentry&lt;/a&gt; is the open-source project. If you don&#39;t want to be collected crash data, you must use FOSS version.&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://crowdin.com/project/simpmusic&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/simpmusic/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt; &lt;br /&gt; You can help me translate this app into your language by using Crowdin &lt;a href=&quot;https://crowdin.com/project/simpmusic&quot;&gt;SimpMusic on Crowdin&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Special thanks to all translators on Crowdin ❤️&lt;/h4&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;1. Wrong Lyrics?&lt;/h4&gt; 
&lt;p&gt;Lyrics are provided by LRCLIB and other sources. Sometimes lyrics may not match perfectly with YouTube&quot;&lt;br /&gt; videoId&quot; parameter. So I need to use some &quot;String Matcher&quot; and &quot;Duration&quot; for search lyrics. So&lt;br /&gt; sometimes, some songs or videos get the wrong lyrics&lt;/p&gt; 
&lt;h4&gt;2. Why the name or brand is &quot;SimpMusic&quot;?&lt;/h4&gt; 
&lt;p&gt;Simply, because I love the name. It&#39;s a combination of &#39;Simple&#39; and &#39;Music&#39;. But SimpMusic is not a simple app, it&#39;s all you need for a powerful music streaming app.&lt;/p&gt; 
&lt;h4&gt;More FAQ, join &lt;a href=&quot;https://discord.com/channels/1136988323819298856/1349800418745778196&quot;&gt;my Discord channel&lt;/a&gt;&lt;/h4&gt; 
&lt;h2&gt;Developer/Team&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/maxrave-dev/SimpMusic&quot;&gt;maxrave-dev&lt;/a&gt;: Founder/Developer/Designer&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/owencz1998&quot;&gt;Owen Connor&lt;/a&gt;: Discord Server Admin.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ilianoKokoro&quot;&gt;ilianoKokoro&lt;/a&gt;: Discord Server Admin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We&#39;re looking for more contributors, all contributions are welcome! See our &lt;a href=&quot;https://github.com/maxrave-dev/SimpMusic/raw/jetpack_compose/CODE_OF_CONDUCT.md&quot;&gt;CODE OF CONDUCT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support &amp;amp; Donations&lt;/h2&gt; 
&lt;h4&gt;Special thanks to all supporter ❤️&lt;/h4&gt; 
&lt;div align=&quot;left&quot;&gt; 
 &lt;a href=&quot;https://simpmusic.org/&quot;&gt;&lt;img alt=&quot;Visit the website&quot; height=&quot;50&quot; src=&quot;https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/documentation/website_vector.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; 
 &lt;a href=&quot;https://discord.gg/Rq5tWVM9Hg&quot;&gt;&lt;img alt=&quot;Discord Server&quot; height=&quot;50&quot; src=&quot;https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/social/discord-plural_vector.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://www.buymeacoffee.com/maxrave&quot;&gt;&lt;img alt=&quot;Buy me a Coffee&quot; height=&quot;50&quot; src=&quot;https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/donate/buymeacoffee-singular_vector.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &amp;nbsp; 
 &lt;a href=&quot;https://liberapay.com/maxrave/&quot;&gt;&lt;img alt=&quot;liberapay&quot; height=&quot;50&quot; src=&quot;https://raw.githubusercontent.com/liberapay/liberapay.com/master/www/assets/liberapay/logo-v2_black-on-yellow.svg?sanitize=true&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;MOMO or Vietnamese banking&lt;/h3&gt; 
&lt;p float=&quot;left&quot;&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/dev/asset/52770992.jpg?raw=true&quot; width=&quot;300&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;SimpMusic is sponsored by:&lt;/h2&gt; 
&lt;br /&gt; 
&lt;a href=&quot;https://vercel.com/oss&quot;&gt; &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg?sanitize=true&quot; /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href=&quot;https://www.digitalocean.com/?refcode=d7f6eedfb9a9&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge&quot;&gt;&lt;img src=&quot;https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true&quot; width=&quot;300&quot; alt=&quot;DigitalOcean Referral Badge&quot; /&gt;&lt;/a&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href=&quot;https://crowdin.com&quot;&gt; &lt;img src=&quot;https://support.crowdin.com/assets/logos/plate/png/crowdin-logo-with-plate.png&quot; width=&quot;300&quot; /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;a href=&quot;https://sentry.io&quot;&gt; &lt;img src=&quot;https://github.com/maxrave-dev/SimpMusic/raw/dev/asset/sentry.svg?raw=true&quot; width=&quot;300&quot; /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;Get a free $200 credit over 60 days on DigitalOcean: &lt;a href=&quot;https://www.digitalocean.com/?refcode=d7f6eedfb9a9&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge&quot;&gt;GET NOW&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Crowdin and Sentry both have a free enterprise plan for Open-source projects. Follow the URLs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdin.com/page/open-source-project-setup-request&quot;&gt;Open Source License Request Form | Crowdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://sentry.io/for/open-source/&quot;&gt;Sentry for Open Source | Sentry&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out the Vercel open-source program:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://vercel.com/open-source-program&quot;&gt;https://vercel.com/open-source-program&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;This project is a part of SimpMusic.org Open-source project by me &lt;a href=&quot;https://github.com/maxrave-dev&quot;&gt;maxrave-dev&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>brahmkshatriya/echo</title>
      <link>https://github.com/brahmkshatriya/echo</link>
      <description>&lt;p&gt;Just a music player.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Echo: Music Player&lt;/h1&gt; 
&lt;p&gt; An Extension-based Music Player for Android, designed with a clean and intuitive UI. &lt;/p&gt; 
&lt;p&gt; 
 &lt;!--&lt;a href=&quot;https://github.com/brahmkshatriya/echo/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/brahmkshatriya/echo?label=Downloads&amp;style=for-the-badge&quot; alt=&quot;GitHub Downloads&quot;&gt;&lt;/a&gt;--&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/brahmkshatriya/echo&quot;&gt;&lt;img src=&quot;https://img.shields.io/codefactor/grade/github/brahmkshatriya/echo?label=Codefactor&amp;amp;style=for-the-badge&quot; alt=&quot;CodeFactor&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/echo&quot;&gt;&lt;img alt=&quot;Weblate project translated&quot; src=&quot;https://img.shields.io/weblate/progress/echo?label=Translated&amp;amp;style=for-the-badge&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The developer of this application is not liable for any misuse or legal issues arising from its use and is not affiliated with any content providers. This application hosts zero content.&lt;/p&gt; 
 &lt;p&gt;Echo is intended for offline use only by default; the user manages any external sources. Echo does not condone or supports piracy.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;!--&lt;a href=&quot;https://github.com/brahmkshatriya/echo/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Stable-2EB9FF?label=Recommended&amp;style=for-the-badge&quot;  alt=&quot;Latest Stable Release&quot;/&gt;&lt;/a&gt;--&gt; 
&lt;p&gt;&lt;a href=&quot;https://nightly.link/brahmkshatriya/echo/workflows/nightly/main/artifact.zip&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Nigthly-9999FF?label=Experimental&amp;amp;style=for-the-badge&quot; alt=&quot;Latest Nightly Release&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://ko-fi.com/I2I5C3UUV&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;36&quot; style=&quot;border:0px;height:36px;&quot; src=&quot;https://storage.ko-fi.com/cdn/kofi1.png?v=3&quot; border=&quot;0&quot; alt=&quot;Buy Me a Coffee at ko-fi.com&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://intradeus.github.io/http-protocol-redirector/?r=upi://pay?pa=brahmkshatriya@apl&amp;amp;tn=Thanks%20for%20this%20amazing%20app!%20Much%20love%20to%20Echo.&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;36&quot; src=&quot;https://files.catbox.moe/q8yq5o.png&quot; border=&quot;0&quot; alt=&quot;UPI&quot; /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] ⭐ &lt;strong&gt;Star this repository to support the developer &amp;amp; encourage the development of the app!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;Star History&lt;/summary&gt; 
 &lt;a href=&quot;https://github.com/brahmkshatriya/echo/stargazers&quot;&gt; &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://starchart.cc/brahmkshatriya/echo.svg?variant=adaptive&quot; width=&quot;370&quot; height=&quot;235&quot; /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h2&gt;Official Communities&lt;/h2&gt; 
&lt;p&gt;Join our communities to stay updated and contribute to the discussion:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/J3WvbBUU8Z&quot; style=&quot;margin-right: 10px; display: inline-block;&quot;&gt;&lt;img src=&quot;https://uxwing.com/wp-content/themes/uxwing/download/brands-and-social-media/discord-round-color-icon.png&quot; alt=&quot;Discord&quot; height=&quot;40&quot; style=&quot;vertical-align: middle;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/echo_app&quot; style=&quot;display: inline-block;&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg?sanitize=true&quot; alt=&quot;Telegram&quot; height=&quot;40&quot; style=&quot;vertical-align: middle;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome contributions, from translations to new features. For inquiries, join our &lt;a href=&quot;https://discord.gg/J3WvbBUU8Z&quot;&gt;Discord server&lt;/a&gt; or &lt;a href=&quot;https://t.me/echo_extension&quot;&gt;Telegram group&lt;/a&gt;. Pull requests are welcome; check the &lt;a href=&quot;https://github.com/brahmkshatriya/echo/issues?q=is%3Aissue%20&quot;&gt;issues&lt;/a&gt; for guidance on major changes.&lt;/p&gt; 
&lt;h3&gt;Translation [Currently turned off]&lt;/h3&gt; 
&lt;p&gt;You can help us by translating the app into your language here&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/projects/echo/#languages&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Weblate-90EE90?label=Translate%20On&amp;amp;style=for-the-badge&quot; alt=&quot;Latest Nightly Release&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Weblate Translation Graph&lt;/summary&gt; 
 &lt;a href=&quot;https://hosted.weblate.org/projects/echo/#languages&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widget/echo/app/multi-auto.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt; 
&lt;/details&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;A heartfelt thank you to everyone who has contributed to the development of Echo. Your efforts are invaluable.&lt;/p&gt; 
&lt;a href=&quot;https://github.com/brahmkshatriya/echo/graphs/contributors&quot;&gt; &lt;img alt=&quot;GitHub contributors&quot; src=&quot;https://img.shields.io/github/contributors/brahmkshatriya/echo?style=flat-square&amp;amp;label=Contributors%20%3A&amp;amp;labelColor=%230f1318&amp;amp;color=%230f1318&quot; /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;a href=&quot;https://github.com/brahmkshatriya/echo/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=brahmkshatriya/echo&quot; alt=&quot;Contributors&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Echo is licensed under the Unabandon Public License (UPL). More info can be found &lt;a href=&quot;https://raw.githubusercontent.com/brahmkshatriya/echo/main/LICENSE.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>deniscerri/ytdlnis</title>
      <link>https://github.com/deniscerri/ytdlnis</link>
      <description>&lt;p&gt;Full-featured audio/video downloader for Android using yt-dlp&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/icon.png&quot; width=&quot;25%&quot; /&gt; &lt;br /&gt; YTDLnis &lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt;
  English &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-sq.md&quot;&gt;Shqip&lt;/a&gt; &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-az.md&quot;&gt;Azərbaycanca&lt;/a&gt; &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-id.md&quot;&gt;Indonesia&lt;/a&gt; &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-pt.md&quot;&gt;Português&lt;/a&gt; &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-es.md&quot;&gt;Español&lt;/a&gt; &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-ja.md&quot;&gt;Japanese&lt;/a&gt; &amp;nbsp;&amp;nbsp;| &amp;nbsp;&amp;nbsp; 
 &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/README-ro.md&quot;&gt;Română&lt;/a&gt; 
&lt;/div&gt; 
&lt;h3 align=&quot;center&quot;&gt; YTDLnis is a free and open source video/audio downloader using yt-dlp for Android 7.0 and above. &lt;/h3&gt; 
&lt;h4 align=&quot;center&quot;&gt; Created by Denis Çerri &lt;/h4&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://ytdlnis.org&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/Official%20Website-violet?style=for-the-badge&amp;amp;logo=download&amp;amp;logoColor=white&quot; alt=&quot;Official website&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/releases/latest&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/Download-blue?style=for-the-badge&amp;amp;logo=download&amp;amp;logoColor=white&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://android.izzysoft.de/repo/apk/com.deniscerri.ytdl&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/IzzyOnDroid%20Repo-red?style=for-the-badge&amp;amp;logo=download&amp;amp;logoColor=white&quot; alt=&quot;IzzyOnDroid repository&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://ytdlnis.en.uptodown.com/android/download&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.herokuapp.com/badge/UpToDown-green?style=for-the-badge&amp;amp;logo=download&amp;amp;logoColor=white&quot; alt=&quot;Uptodown&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/deniscerri/ytdlnis/actions/workflows/android.yml/badge.svg?branch=main&amp;amp;event=pull&quot; alt=&quot;CI&quot; /&gt; &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/deniscerri/ytdlnis.svg?maxAge=3600&amp;amp;include_prereleases&amp;amp;label=preview&quot; alt=&quot;Preview release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/deniscerri/ytdlnis/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/deniscerri/ytdlnis/total?style=flat-square&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/ytdlnis/?utm_source=widget&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/ytdlnis/-/svg-badge.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/WW3KYWxAPm&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-YTDLnis-blueviolet?style=flat-square&amp;amp;logo=discord&quot; alt=&quot;community&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/ytdlnis&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-YTDLnis-blue?style=flat-square&amp;amp;logo=telegram&quot; alt=&quot;community&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/ytdlnisupdates&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Telegram-Updates-red?style=flat-square&amp;amp;logo=telegram&quot; alt=&quot;community&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt;Only the links above are the only trusted sources of YTDLnis. Everything else is not related to me.&lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;💡 Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download audio/video files from more than &lt;a href=&quot;https://github.com/yt-dlp/yt-dlp/raw/master/supportedsites.md&quot;&gt;1000 websites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Process playlists 
  &lt;ul&gt; 
   &lt;li&gt;Edit every playlist item separately just like in a normal download item&lt;/li&gt; 
   &lt;li&gt;Select a common format for all items and/or select multiple audio formats in case you are downloading them as a video&lt;/li&gt; 
   &lt;li&gt;Select a download path for all items&lt;/li&gt; 
   &lt;li&gt;Select a filename template for all items&lt;/li&gt; 
   &lt;li&gt;Batch update download type to audio/video/custom command in one click&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Queue downloads and schedule them by date and time 
  &lt;ul&gt; 
   &lt;li&gt;You can also schedule multiple items at the same time&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download multiple items at the same time&lt;/li&gt; 
 &lt;li&gt;Use custom commands and templates or use yt-dlp with the built-in terminal 
  &lt;ul&gt; 
   &lt;li&gt;You can backup and restore templates so you can share them with your buddies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Supports cookies. Log in with your accounts and download private/unavailable videos, unlock premium formats etc.&lt;/li&gt; 
 &lt;li&gt;Cut videos based on timestamps and video chapters (experimental yt-dlp feature) 
  &lt;ul&gt; 
   &lt;li&gt;You can make unlimited cuts&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Remove SponsorBlock elements from downloaded items 
  &lt;ul&gt; 
   &lt;li&gt;Embed them as a chapters in your video&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Embed subtitles/metadata/chapters etc&lt;/li&gt; 
 &lt;li&gt;Modify metadata such as title and author&lt;/li&gt; 
 &lt;li&gt;Split item into separate files depending on its chapters&lt;/li&gt; 
 &lt;li&gt;Select different download formats&lt;/li&gt; 
 &lt;li&gt;Bottom card right from the share menu, no need to open the app 
  &lt;ul&gt; 
   &lt;li&gt;You can create a txt file and fill it with links/playlists/search queries separate by a new line and the app will process them&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Search or insert a link from the app 
  &lt;ul&gt; 
   &lt;li&gt;You can stack searches so you can process them at the same time&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Log downloads in case of problems&lt;/li&gt; 
 &lt;li&gt;Re-download cancelled or failed downloads 
  &lt;ul&gt; 
   &lt;li&gt;You can use gestures to swipe left to redownload and right to delete&lt;/li&gt; 
   &lt;li&gt;You can long click the redownload button in the details sheet to show the download card for more functionality&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Incognito mode when you don&#39;t want to save a download history or logs&lt;/li&gt; 
 &lt;li&gt;Quick download mode 
  &lt;ul&gt; 
   &lt;li&gt;Download immediately without having to wait for data to process. Turn off the bottom card and it will instantly start&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Open / share downloaded files right from the finished notification&lt;/li&gt; 
 &lt;li&gt;Most yt-dlp features are implemented, suggestions are welcome&lt;/li&gt; 
 &lt;li&gt;Material You interface&lt;/li&gt; 
 &lt;li&gt;Theming options&lt;/li&gt; 
 &lt;li&gt;Backup and restore features&lt;/li&gt; 
 &lt;li&gt;MVVM architecture with WorkManager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📲 Screenshots&lt;/h2&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/01.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/02.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/03.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/04.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/05.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/06.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/07.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/08.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/09.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/10.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/11.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/12.png&quot; width=&quot;30%&quot; /&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/fastlane/metadata/android/en-US/images/phoneScreenshots/13.png&quot; width=&quot;90%&quot; /&gt; 
&lt;/div&gt; 
&lt;h2&gt;💬 Contact&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href=&quot;https://discord.gg/WW3KYWxAPm&quot;&gt;Discord&lt;/a&gt; or &lt;a href=&quot;https://t.me/ytdlnis&quot;&gt;Telegram channel&lt;/a&gt; for announcements, discussion and releases.&lt;/p&gt; 
&lt;h2&gt;😇 Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/deniscerri/ytdlnis/main/CONTRIBUTING.MD&quot;&gt;contributing&lt;/a&gt; section if you would like to contribute.&lt;/p&gt; 
&lt;h2&gt;📝 Help translate on Weblate&lt;/h2&gt; 
&lt;a href=&quot;https://hosted.weblate.org/engage/ytdlnis/&quot;&gt; &lt;img src=&quot;https://hosted.weblate.org/widgets/ytdlnis/-/strings/open-graph.png&quot; alt=&quot;Translation status&quot; /&gt; &lt;/a&gt; 
&lt;a href=&quot;https://hosted.weblate.org/engage/ytdlnis/&quot;&gt; &lt;img src=&quot;https://hosted.weblate.org/widgets/ytdlnis/-/multi-auto.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;🔑 Connect with third-party apps using the package name&lt;/h2&gt; 
&lt;p&gt;The app&#39;s package name is &quot;com.deniscerri.ytdl&quot;.&lt;/p&gt; 
&lt;h2&gt;🤖 Connect with third-party apps using intents&lt;/h2&gt; 
&lt;p&gt;You can use intents to push commands to the app to run downloads without user interaction. Accepted variables:&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;TYPE&lt;/b&gt; -&amp;gt; it can be: audio,video,command &lt;br /&gt; &lt;b&gt;BACKGROUND&lt;/b&gt; -&amp;gt; it can be: true,false. If its true the app won&#39;t show the download card no matter what and run the download in the background &lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;An example of downloading an audio item in the background with Tasker&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create Send Intent task&lt;/li&gt; 
 &lt;li&gt;Action: android.intent.action.SEND&lt;/li&gt; 
 &lt;li&gt;Cat: Default&lt;/li&gt; 
 &lt;li&gt;Mime Type: text/*&lt;/li&gt; 
 &lt;li&gt;Extra: android.intent.extra.TEXT:url (instead of &quot;url&quot; write the URL of the video you want to download)&lt;/li&gt; 
 &lt;li&gt;Extra: TYPE:audio&lt;/li&gt; 
 &lt;li&gt;Extra: BACKGROUND:true&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/deniscerri/ytdlnis/raw/main/LICENSE&quot;&gt;GNU GPL v3.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Except for the source code licensed under the GPLv3 license, all other parties are prohibited from using the &quot;YTDLnis&quot; name as a downloader app, and the same is true for its derivatives. Derivatives include but are not limited to forks and unofficial builds.&lt;/p&gt; 
&lt;h2&gt;🙏 Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/decipher3114&quot;&gt;decipher3114&lt;/a&gt; for the app&#39;s icon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yausername/dvd&quot;&gt;dvd&lt;/a&gt; for being an example youtubedl-android implementation&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JunkFood02/Seal&quot;&gt;seal&lt;/a&gt; for certain design elements and features I wanted to have in this app when I started developing it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yausername/youtubedl-android&quot;&gt;youtubedl-android&lt;/a&gt; for porting yt-dlp to Android&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yt-dlp/yt-dlp&quot;&gt;yt-dlp&lt;/a&gt; and its contributors for making this tool possible. Without it this app wouldn&#39;t exist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;and to a lot of other people, such as contributors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>butzist/ActivityLauncher</title>
      <link>https://github.com/butzist/ActivityLauncher</link>
      <description>&lt;p&gt;Activity launcher creates shortcuts for any installed app and hidden activities to launch them with ease&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/butzist/ActivityLauncher/actions/workflows/android-master.yml&quot;&gt;&lt;img src=&quot;https://github.com/butzist/ActivityLauncher/actions/workflows/android-master.yml/badge.svg?sanitize=true&quot; alt=&quot;Debug Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/activitylauncher&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/activitylauncher/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Activity Launcher&lt;/h1&gt; 
&lt;p&gt;Launches hidden activities and creates shortcuts for installed apps&lt;/p&gt; 
&lt;a href=&quot;https://f-droid.org/packages/de.szalkowski.activitylauncher/&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://f-droid.org/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; height=&quot;80&quot; /&gt;&lt;/a&gt; 
&lt;a href=&quot;https://play.google.com/store/apps/details?id=de.szalkowski.activitylauncher.pro&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&quot; alt=&quot;Get it on Google Play&quot; height=&quot;80&quot; /&gt;&lt;/a&gt; 
&lt;h2&gt;Shortcuts not created&lt;/h2&gt; 
&lt;p&gt;In case the shortcuts are not created in your home screen, make sure Activity Launcher has the &quot;Home screen shortcuts&quot; permission.&lt;/p&gt; 
&lt;p&gt;Click on Settings -&amp;gt; Apps -&amp;gt; Manage apps -&amp;gt; Activity Launcher -&amp;gt; Other permissions -&amp;gt; Home screen shortcuts.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/butzist/ActivityLauncher/issues/267&quot;&gt;#267&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://crowdin.com/project/ActivityLauncher&quot;&gt;Crowdin project&lt;/a&gt; contains detailed credits for the translations and allows anyone to contribute by translating the app.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yuzono/aniyomi-extensions</title>
      <link>https://github.com/yuzono/aniyomi-extensions</link>
      <description>&lt;p&gt;Source code of extensions for Anikku / Aniyomi &amp; forks.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;center&quot;&gt;Install on Aniyomi&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;Install on Anikku&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;Build&lt;/th&gt; 
    &lt;th align=&quot;center&quot;&gt;Discord&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://intradeus.github.io/http-protocol-redirector/?r=aniyomi://add-repo?url=https://raw.githubusercontent.com/yuzono/anime-repo/repo/index.min.json&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Click%20here%20to%20install%20repo-gray?style=flat&amp;amp;labelColor=red&quot; alt=&quot;Install&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://intradeus.github.io/http-protocol-redirector/?r=anikku://add-repo?url=https://raw.githubusercontent.com/yuzono/anime-repo/repo/index.min.json&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Click%20here%20to%20install%20repo-gray?style=flat&amp;amp;labelColor=red&quot; alt=&quot;Install&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://github.com/yuzono/aniyomi-extensions/actions/workflows/build_push.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/td&gt; 
    &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://discord.gg/85MZhUX688&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1377136877491982366.svg?label=&amp;amp;labelColor=6A7EC2&amp;amp;color=7389D8&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/cuong-tran&quot; title=&quot;Sponsor me on GitHub&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/-Sponsor-ea4aaa?style=for-the-badge&amp;amp;logo=heart&amp;amp;logoColor=white&quot; alt=&quot;Sponsor me on GitHub&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://count.getloli.com/get/@yuzono?theme=capoo-2&quot; alt=&quot;Visitor Count&quot; /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/yuzono/aniyomi-extensions/master/.github/readme-images/app-icon.png&quot; alt=&quot;app icon&quot; /&gt;Anikku/Aniyomi Extensions&lt;/h1&gt; 
&lt;p&gt;Anikku/Aniyomi is a free and open source manga reader for Android 6.0 and above.&lt;/p&gt; 
&lt;p&gt;This repository contains the available extension catalogues for the &lt;a href=&quot;https://github.com/komikku-app/anikku&quot;&gt;Anikku&lt;/a&gt; or &lt;a href=&quot;https://github.com/aniyomiorg/aniyomi&quot;&gt;Aniyomi&lt;/a&gt; forks.&lt;/p&gt; 
&lt;h1&gt;Manual install&lt;/h1&gt; 
&lt;p&gt;just paste this into your anime repo&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://raw.githubusercontent.com/yuzono/anime-repo/repo/index.min.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;Extension sources can be downloaded, installed, and uninstalled via the main Anikku app. They are installed and uninstalled like regular apps, in &lt;code&gt;.apk&lt;/code&gt; format.&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;If you prefer to directly download the APK files, they are available via &lt;a href=&quot;https://yuzono.github.io/extensions-aniyomi/&quot;&gt;website&lt;/a&gt; or directly in this GitHub repository in the &lt;a href=&quot;https://github.com/yuzono/anime-repo/tree/repo/apk&quot;&gt;&lt;code&gt;repo&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Requests&lt;/h1&gt; 
&lt;p&gt;Source requests here are meant as up-for-grabs for any developer, thus it&#39;s impossible to provide a time estimation for any of them. Furthermore, some sites are impossible to do, usually because of various technical reasons.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome!&lt;/p&gt; 
&lt;p&gt;Check out the repo&#39;s &lt;a href=&quot;https://github.com/yuzono/aniyomi-extensions/issues&quot;&gt;issue backlog&lt;/a&gt; for source requests and bug reports.&lt;/p&gt; 
&lt;p&gt;To get started with development, see &lt;a href=&quot;https://raw.githubusercontent.com/yuzono/aniyomi-extensions/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It might also be good to read our &lt;a href=&quot;https://raw.githubusercontent.com/yuzono/aniyomi-extensions/master/CODE_OF_CONDUCT.md&quot;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project does not have any affiliation with the content providers available. This project is not affiliated with Anikku or Aniyomi. Don&#39;t ask for help about these extensions at the official support means of Anikku or Aniyomi.&lt;/p&gt; 
&lt;p&gt;All credits to the codebase goes to the original contributors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2dust/v2rayNG</title>
      <link>https://github.com/2dust/v2rayNG</link>
      <description>&lt;p&gt;A V2Ray client for Android, support Xray core and v2fly core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayNG&lt;/h1&gt; 
&lt;p&gt;A V2Ray client for Android, support &lt;a href=&quot;https://github.com/XTLS/Xray-core&quot;&gt;Xray core&lt;/a&gt; and &lt;a href=&quot;https://github.com/v2fly/v2ray-core&quot;&gt;v2fly core&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://developer.android.com/about/versions/lollipop&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/API-21%2B-yellow.svg?style=flat&quot; alt=&quot;API&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://kotlinlang.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Kotlin-2.2.0-blue.svg?sanitize=true&quot; alt=&quot;Kotlin Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/2dust/v2rayNG/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/2dust/v2rayNG&quot; alt=&quot;GitHub commit activity&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/2dust/v2rayng&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/2dust/v2rayng/badge&quot; alt=&quot;CodeFactor&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/2dust/v2rayNG/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/2dust/v2rayNG/latest/total?logo=github&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/v2rayn&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&quot; alt=&quot;Chat on Telegram&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Telegram Channel&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/github_2dust&quot;&gt;github_2dust&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;h4&gt;Geoip and Geosite&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;geoip.dat and geosite.dat files are in &lt;code&gt;Android/data/com.v2ray.ang/files/assets&lt;/code&gt; (path may differ on some Android device)&lt;/li&gt; 
 &lt;li&gt;download feature will get enhanced version in this &lt;a href=&quot;https://github.com/Loyalsoldier/v2ray-rules-dat&quot;&gt;repo&lt;/a&gt; (Note it need a working proxy)&lt;/li&gt; 
 &lt;li&gt;latest official &lt;a href=&quot;https://github.com/Loyalsoldier/v2ray-rules-dat&quot;&gt;domain list&lt;/a&gt; and &lt;a href=&quot;https://github.com/Loyalsoldier/geoip&quot;&gt;ip list&lt;/a&gt; can be imported manually&lt;/li&gt; 
 &lt;li&gt;possible to use third party dat file in the same folder, like &lt;a href=&quot;https://guide.v2fly.org/routing/sitedata.html#%E5%A4%96%E7%BD%AE%E7%9A%84%E5%9F%9F%E5%90%8D%E6%96%87%E4%BB%B6&quot;&gt;h2y&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;More in our &lt;a href=&quot;https://github.com/2dust/v2rayNG/wiki&quot;&gt;wiki&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Development guide&lt;/h3&gt; 
&lt;p&gt;Android project under V2rayNG folder can be compiled directly in Android Studio, or using Gradle wrapper. But the v2ray core inside the aar is (probably) outdated.&lt;br /&gt; The aar can be compiled from the Golang project &lt;a href=&quot;https://github.com/2dust/AndroidLibV2rayLite&quot;&gt;AndroidLibV2rayLite&lt;/a&gt; or &lt;a href=&quot;https://github.com/2dust/AndroidLibXrayLite&quot;&gt;AndroidLibXrayLite&lt;/a&gt;. For a quick start, read guide for &lt;a href=&quot;https://github.com/golang/go/wiki/Mobile&quot;&gt;Go Mobile&lt;/a&gt; and &lt;a href=&quot;https://tutorialedge.net/golang/makefiles-for-go-developers/&quot;&gt;Makefiles for Go Developers&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;v2rayNG can run on Android Emulators. For WSA, VPN permission need to be granted via &lt;code&gt;appops set [package name] ACTIVATE_VPN allow&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KotatsuApp/Kotatsu</title>
      <link>https://github.com/KotatsuApp/Kotatsu</link>
      <description>&lt;p&gt;Manga reader for Android&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://kotatsu.app&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/.github/assets/vtuber.png&quot; alt=&quot;Kotatsu Logo&quot; title=&quot;Kotatsu&quot; width=&quot;600&quot; /&gt; &lt;/a&gt; 
 &lt;h1&gt;&lt;a href=&quot;https://kotatsu.app&quot;&gt;Kotatsu&lt;/a&gt;&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu&quot;&gt;Kotatsu&lt;/a&gt; is a free and open-source manga reader for Android with built-in online content sources.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/KotatsuApp/Kotatsu/total?color=1976d2&quot; alt=&quot;Downloads count&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/KotatsuApp/Kotatsu?color=2596be&amp;amp;label=latest&quot; alt=&quot;Latest Stable version&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/android-5.0+-brightgreen&quot; alt=&quot;Android 5.0&quot; /&gt; &lt;a href=&quot;https://github.com/KotatsuApp/kotatsu-parsers&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/yaml?url=https%3A%2F%2Fraw.githubusercontent.com%2FKotatsuApp%2Fkotatsu-parsers%2Frefs%2Fheads%2Fmaster%2F.github%2Fsummary.yaml&amp;amp;query=total&amp;amp;label=manga%20sources&amp;amp;color=%23E9321C&quot; alt=&quot;Sources count&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/kotatsu/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/kotatsu/-/strings/svg-badge.svg?sanitize=true&quot; alt=&quot;weblate&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/NNJ5RgVBC5&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/898363402467045416?color=5865f2&amp;amp;label=discord&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/kotatsuapp&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-telegram-60ACFF?&quot; alt=&quot;Telegram&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu/raw/devel/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/KotatsuApp/Kotatsu&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt;Download&lt;/h3&gt; 
 &lt;div align=&quot;left&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Recommended:&lt;/strong&gt; Download and install APK from &lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu/releases/latest&quot;&gt;GitHub Releases&lt;/a&gt;. Application has a built-in self-updating feature.&lt;/li&gt; 
   &lt;li&gt;Get it on &lt;a href=&quot;https://f-droid.org/packages/org.koitharu.kotatsu&quot;&gt;F-Droid&lt;/a&gt;. The F-Droid build may be a bit outdated and some fixes might be missing.&lt;/li&gt; 
   &lt;li&gt;Also &lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu-nightly/releases&quot;&gt;nightly builds&lt;/a&gt; are available (Unstable, use at your own risk). Application has a built-in self-updating feature.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;Main Features&lt;/h3&gt; 
 &lt;div align=&quot;left&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Online &lt;a href=&quot;https://github.com/KotatsuApp/kotatsu-parsers&quot;&gt;manga catalogues&lt;/a&gt; (with 1200+ manga sources)&lt;/li&gt; 
   &lt;li&gt;Search manga by name, genres and more filters&lt;/li&gt; 
   &lt;li&gt;Favorites organized by user-defined categories&lt;/li&gt; 
   &lt;li&gt;Reading history, bookmarks and incognito mode support&lt;/li&gt; 
   &lt;li&gt;Download manga and read it offline. Third-party CBZ archives are also supported&lt;/li&gt; 
   &lt;li&gt;Clean and convenient Material You UI, optimized for phones, tablets and desktop&lt;/li&gt; 
   &lt;li&gt;Standard and Webtoon-optimized customizable reader, gesture support on reading interface&lt;/li&gt; 
   &lt;li&gt;Notifications about new chapters with updates feed, manga recommendations (with filters)&lt;/li&gt; 
   &lt;li&gt;Integration with manga tracking services: Shikimori, AniList, MyAnimeList, Kitsu&lt;/li&gt; 
   &lt;li&gt;Password / fingerprint-protected access to the app&lt;/li&gt; 
   &lt;li&gt;Automatically sync app data with other devices on the same account&lt;/li&gt; 
   &lt;li&gt;Support for older devices running Android 5.0+&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;In-App Screenshots&lt;/h3&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/phoneScreenshots/1.png&quot; alt=&quot;Mobile view&quot; width=&quot;250&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/phoneScreenshots/2.png&quot; alt=&quot;Mobile view&quot; width=&quot;250&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/phoneScreenshots/3.png&quot; alt=&quot;Mobile view&quot; width=&quot;250&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/phoneScreenshots/4.png&quot; alt=&quot;Mobile view&quot; width=&quot;250&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/phoneScreenshots/5.png&quot; alt=&quot;Mobile view&quot; width=&quot;250&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/phoneScreenshots/6.png&quot; alt=&quot;Mobile view&quot; width=&quot;250&quot; /&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;div align=&quot;center&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/tenInchScreenshots/1.png&quot; alt=&quot;Tablet view&quot; width=&quot;400&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/KotatsuApp/Kotatsu/devel/metadata/en-US/images/tenInchScreenshots/2.png&quot; alt=&quot;Tablet view&quot; width=&quot;400&quot; /&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;Localization&lt;/h3&gt; 
 &lt;a href=&quot;https://hosted.weblate.org/engage/kotatsu/&quot;&gt; &lt;img src=&quot;https://hosted.weblate.org/widget/kotatsu/horizontal-auto.png&quot; alt=&quot;Translation status&quot; /&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu&quot;&gt;Kotatsu&lt;/a&gt; is localized in a number of different languages.&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;📌 If you would like to help improve these or add new languages, please head over to the &lt;a href=&quot;https://hosted.weblate.org/engage/kotatsu/&quot;&gt;Weblate project page&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h3&gt;Contributing&lt;/h3&gt; 
 &lt;br /&gt; 
 &lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu&quot;&gt; 
  &lt;picture&gt; 
   &lt;source srcset=&quot;https://github-readme-stats.vercel.app/api/pin/?username=KotatsuApp&amp;amp;repo=Kotatsu&amp;amp;bg_color=0d1117&amp;amp;text_color=1976d2&amp;amp;title_color=1976d2&amp;amp;icon_color=0877d2&amp;amp;border_radius=10&amp;amp;description_lines_count=2&amp;amp;show_owner=true&quot; media=&quot;(prefers-color-scheme: dark)&quot; /&gt; 
   &lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=KotatsuApp&amp;amp;repo=Kotatsu&amp;amp;text_color=1976d2&amp;amp;title_color=1976d2&amp;amp;icon_color=0877d2&amp;amp;border_radius=10&amp;amp;description_lines_count=2&amp;amp;show_owner=true&quot; alt=&quot;Kotatsu GitHub Repository&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu-parsers&quot;&gt; 
  &lt;picture&gt; 
   &lt;source srcset=&quot;https://github-readme-stats.vercel.app/api/pin/?username=KotatsuApp&amp;amp;repo=Kotatsu-parsers&amp;amp;bg_color=0d1117&amp;amp;text_color=1976d2&amp;amp;title_color=1976d2&amp;amp;icon_color=0877d2&amp;amp;border_radius=10&amp;amp;description_lines_count=2&amp;amp;show_owner=true&quot; media=&quot;(prefers-color-scheme: dark)&quot; /&gt; 
   &lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=KotatsuApp&amp;amp;repo=Kotatsu-parsers&amp;amp;text_color=1976d2&amp;amp;title_color=1976d2&amp;amp;icon_color=0877d2&amp;amp;border_radius=10&amp;amp;description_lines_count=2&amp;amp;show_owner=true&quot; alt=&quot;Kotatsu-parsers GitHub Repository&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt;
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;strong&gt;📌 Pull requests are welcome, if you want: See &lt;a href=&quot;https://github.com/KotatsuApp/Kotatsu/raw/devel/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for the guidelines&lt;/strong&gt;&lt;/p&gt; 
 &lt;h3&gt;Certificate fingerprints&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;2C:19:C7:E8:07:61:2B:8E:94:51:1B:FD:72:67:07:64:5D:C2:58:AE
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;67:E1:51:00:BB:80:93:01:78:3E:DC:B6:34:8F:A3:BB:F8:30:34:D9:1E:62:86:8A:91:05:3D:BD:70:DB:3F:18
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;License&lt;/h3&gt; 
 &lt;p&gt;&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;&lt;img src=&quot;https://www.gnu.org/graphics/gplv3-127x51.png&quot; alt=&quot;GNU GPLv3 Image&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;div align=&quot;left&quot;&gt; 
  &lt;p&gt;You may copy, distribute and modify the software as long as you track changes/dates in source files. Any modifications to or software including (via compiler) GPL-licensed code must also be made available under the GPL along with build &amp;amp; install instructions.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;DMCA disclaimer&lt;/h3&gt; 
 &lt;div align=&quot;left&quot;&gt; 
  &lt;p&gt;The developers of this application do not have any affiliation with the content available in the app. It collects content from sources that are freely available through any web browser.&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>florisboard/florisboard</title>
      <link>https://github.com/florisboard/florisboard</link>
      <description>&lt;p&gt;An open-source keyboard for Android which respects your privacy. Currently in beta.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img align=&quot;left&quot; width=&quot;80&quot; height=&quot;80&quot; src=&quot;https://raw.githubusercontent.com/florisboard/florisboard/main/.github/repo_icon.png&quot; alt=&quot;App icon&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;FlorisBoard &lt;a href=&quot;https://crowdin.florisboard.org&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/florisboard/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#florisboard:matrix.org&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/chat-%23florisboard%3amatrix.org-blue&quot; alt=&quot;Matrix badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/florisboard/florisboard/main/CODE_OF_CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&quot; alt=&quot;Contributor Covenant&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/florisboard/florisboard/actions/workflows/android.yml&quot;&gt;&lt;img src=&quot;https://github.com/florisboard/florisboard/actions/workflows/android.yml/badge.svg?event=push&quot; alt=&quot;FlorisBoard CI&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;FlorisBoard&lt;/strong&gt; is a free and open-source keyboard for Android 7.0+ devices. It aims at being modern, user-friendly and customizable while fully respecting your privacy. Currently in early-beta state.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot; width=&quot;50%&quot;&gt; &lt;h3&gt;Stable &lt;a href=&quot;https://github.com/florisboard/florisboard/releases/latest&quot;&gt;&lt;img alt=&quot;Latest stable release&quot; src=&quot;https://img.shields.io/github/v/release/florisboard/florisboard?sort=semver&amp;amp;display_name=tag&amp;amp;color=28a745&quot; /&gt;&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; 
   &lt;th align=&quot;center&quot; width=&quot;50%&quot;&gt; &lt;h3&gt;Preview &lt;a href=&quot;https://github.com/florisboard/florisboard/releases&quot;&gt;&lt;img alt=&quot;Latest preview release&quot; src=&quot;https://img.shields.io/github/v/release/florisboard/florisboard?include_prereleases&amp;amp;sort=semver&amp;amp;display_name=tag&amp;amp;color=fd7e14&quot; /&gt;&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;i&gt;Major versions only&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Updates are more polished, new features are matured and tested through to ensure a stable experience.&lt;/p&gt; &lt;/td&gt; 
   &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;i&gt;Major + Alpha/Beta/Rc versions&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Updates contain new features that may not be fully matured yet and bugs are more likely to occur. Allows you to give early feedback.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://f-droid.org/packages/dev.patrickgold.florisboard&quot;&gt;&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; height=&quot;64&quot; alt=&quot;F-Droid badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google Play&lt;/strong&gt;: Join the &lt;a href=&quot;https://groups.google.com/g/florisboard-closed-beta-test&quot;&gt;FlorisBoard Test Group&lt;/a&gt;, then visit the &lt;a href=&quot;https://play.google.com/apps/testing/dev.patrickgold.florisboard&quot;&gt;testing page&lt;/a&gt;. Once joined and installed, updates will be delivered like for any other app. (&lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.patrickgold.florisboard&quot;&gt;Store entry&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Obtainium&lt;/strong&gt;: &lt;a href=&quot;https://apps.obtainium.imranr.dev/redirect.html?r=obtainium://app/%7B%22id%22%3A%22dev.patrickgold.florisboard%22%2C%22url%22%3A%22https%3A%2F%2Fgithub.com%2Fflorisboard%2Fflorisboard%22%2C%22author%22%3A%22florisboard%22%2C%22name%22%3A%22FlorisBoard%20Stable%22%2C%22additionalSettings%22%3A%22%7B%5C%22includePrereleases%5C%22%3Afalse%2C%5C%22fallbackToOlderReleases%5C%22%3Atrue%2C%5C%22apkFilterRegEx%5C%22%3A%5C%22stable%5C%22%7D%22%7D%0A&quot;&gt;Auto-import stable config&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Manual&lt;/strong&gt;: Download and install the APK from the release page.&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td valign=&quot;top&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://apt.izzysoft.de/fdroid/index/apk/dev.patrickgold.florisboard.beta&quot;&gt;&lt;img src=&quot;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&quot; height=&quot;64&quot; alt=&quot;IzzySoft repo badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google Play&lt;/strong&gt;: Join the &lt;a href=&quot;https://groups.google.com/g/florisboard-closed-beta-test&quot;&gt;FlorisBoard Test Group&lt;/a&gt;, then visit the &lt;a href=&quot;https://play.google.com/apps/testing/dev.patrickgold.florisboard.beta&quot;&gt;preview testing page&lt;/a&gt;. Once joined and installed, updates will be delivered like for any other app. (&lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.patrickgold.florisboard.beta&quot;&gt;Store entry&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Obtainium&lt;/strong&gt;: &lt;a href=&quot;https://apps.obtainium.imranr.dev/redirect.html?r=obtainium://app/%7B%22id%22%3A%22dev.patrickgold.florisboard.beta%22%2C%22url%22%3A%22https%3A%2F%2Fgithub.com%2Fflorisboard%2Fflorisboard%22%2C%22author%22%3A%22florisboard%22%2C%22name%22%3A%22FlorisBoard%20Preview%22%2C%22additionalSettings%22%3A%22%7B%5C%22includePrereleases%5C%22%3Atrue%2C%5C%22fallbackToOlderReleases%5C%22%3Atrue%2C%5C%22apkFilterRegEx%5C%22%3A%5C%22preview%5C%22%7D%22%7D%0A&quot;&gt;Auto-import preview config&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Manual&lt;/strong&gt;: Download and install the APK from the release page.&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Beginning with v0.7 FlorisBoard will enter the public beta on Google Play.&lt;/p&gt; 
&lt;h2&gt;Highlighted features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integrated clipboard manager / history&lt;/li&gt; 
 &lt;li&gt;Advanced theming support and customization&lt;/li&gt; 
 &lt;li&gt;Integrated extension support (still evolving)&lt;/li&gt; 
 &lt;li&gt;Emoji keyboard / history / suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Word suggestions/spell checking are not included in the current releases and are a major goal for the v0.6 milestone.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Feature roadmap: See &lt;a href=&quot;https://raw.githubusercontent.com/florisboard/florisboard/main/ROADMAP.md&quot;&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute to FlorisBoard? That&#39;s great to hear! There are lots of different ways to help out, please see the &lt;a href=&quot;https://raw.githubusercontent.com/florisboard/florisboard/main/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Addons Store&lt;/h2&gt; 
&lt;p&gt;The official &lt;a href=&quot;https://beta.addons.florisboard.org&quot;&gt;Addons Store&lt;/a&gt; offers the possibility for the community to share and download FlorisBoard extensions. Instructions on how to publish addons can be found &lt;a href=&quot;https://github.com/florisboard/florisboard/wiki/How-to-publish-on-FlorisBoard-Addons&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Many thanks to Ali (&lt;a href=&quot;https://github.com/4H1R&quot;&gt;@4H1R&lt;/a&gt;) for implementing the store!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] During the initial beta release phase, the Addons Store &lt;em&gt;will&lt;/em&gt; only accept theme extensions. Later on we plan to add support for language packs and keyboard extensions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;List of permissions FlorisBoard requests&lt;/h2&gt; 
&lt;p&gt;Please refer to this &lt;a href=&quot;https://github.com/florisboard/florisboard/wiki/List-of-permissions-FlorisBoard-requests&quot;&gt;page&lt;/a&gt; to get more information on this topic.&lt;/p&gt; 
&lt;h2&gt;APK signing certificate hashes&lt;/h2&gt; 
&lt;p&gt;The package names and SHA-256 hashes of the signature certificate are listed below, so you can verify both FlorisBoard variants with apksigner by using &lt;code&gt;apksigner verify --print-certs florisboard-&amp;lt;version&amp;gt;-&amp;lt;track&amp;gt;.apk&lt;/code&gt; when you download the APK. If you have &lt;a href=&quot;https://github.com/soupslurpr/AppVerifier&quot;&gt;AppVerifier&lt;/a&gt; installed, you can alternatively copy both the package name and the hash of the corresponding track and share them to AppVerifier.&lt;/p&gt; 
&lt;h5&gt;Stable track:&lt;/h5&gt; 
&lt;p&gt;dev.patrickgold.florisboard&lt;br /&gt; 0B:80:71:64:50:8E:AF:EB:1F:BB:81:5B:E7:A2:3C:77:FE:68:9D:94:B1:43:75:C9:9B:DA:A9:B6:57:7F:D6:D6&lt;/p&gt; 
&lt;h5&gt;Preview track:&lt;/h5&gt; 
&lt;p&gt;dev.patrickgold.florisboard.beta&lt;br /&gt; 0B:80:71:64:50:8E:AF:EB:1F:BB:81:5B:E7:A2:3C:77:FE:68:9D:94:B1:43:75:C9:9B:DA:A9:B6:57:7F:D6:D6&lt;/p&gt; 
&lt;h2&gt;Used libraries, components and icons&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/androidx/androidx&quot;&gt;AndroidX libraries&lt;/a&gt; by &lt;a href=&quot;https://github.com/androidx&quot;&gt;Android Jetpack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mikepenz/AboutLibraries&quot;&gt;AboutLibraries&lt;/a&gt; by &lt;a href=&quot;https://github.com/mikepenz&quot;&gt;mikepenz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/google/material-design-icons&quot;&gt;Google Material icons&lt;/a&gt; by &lt;a href=&quot;https://github.com/google&quot;&gt;Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/patrickgold/jetpref&quot;&gt;JetPref preference library&lt;/a&gt; by &lt;a href=&quot;https://github.com/patrickgold&quot;&gt;patrickgold&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kotlin/kotlinx.coroutines&quot;&gt;KotlinX coroutines library&lt;/a&gt; by &lt;a href=&quot;https://github.com/Kotlin&quot;&gt;Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Kotlin/kotlinx.serialization&quot;&gt;KotlinX serialization library&lt;/a&gt; by &lt;a href=&quot;https://github.com/Kotlin&quot;&gt;Kotlin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Many thanks to &lt;a href=&quot;https://www.behance.net/nikolayanzarov&quot;&gt;Nikolay Anzarov&lt;/a&gt; (&lt;a href=&quot;https://github.com/BloodRaven0&quot;&gt;@BloodRaven0&lt;/a&gt;) for designing and providing the main app icons to this project!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2020-2025 The FlorisBoard Contributors

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/florisboard/florisboard/graphs/contributors&quot;&gt;The FlorisBoard Contributors&lt;/a&gt; for making this project possible!&lt;/p&gt; 
&lt;!-- BEGIN SECTION: obtainium_links --&gt; 
&lt;!-- auto-generated link templates, do NOT edit by hand --&gt; 
&lt;!-- see fastlane/update-readme.sh --&gt; 
&lt;!-- END SECTION: obtainium_links --&gt;</description>
    </item>
    
    <item>
      <title>tiann/KernelSU</title>
      <link>https://github.com/tiann/KernelSU</link>
      <description>&lt;p&gt;A Kernel based root solution for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_ES.md&quot;&gt;Español&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_CN.md&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_TW.md&quot;&gt;繁體中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_JP.md&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_KR.md&quot;&gt;한국어&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_PL.md&quot;&gt;Polski&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_PT-BR.md&quot;&gt;Português (Brasil)&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_TR.md&quot;&gt;Türkçe&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_RU.md&quot;&gt;Русский&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_VI.md&quot;&gt;Tiếng Việt&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_ID.md&quot;&gt;Indonesia&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_IW.md&quot;&gt;עברית&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_IN.md&quot;&gt;हिंदी&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/README_IT.md&quot;&gt;Italiano&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;KernelSU&lt;/h1&gt; 
&lt;img src=&quot;https://kernelsu.org/logo.png&quot; style=&quot;width: 96px;&quot; alt=&quot;logo&quot; /&gt; 
&lt;p&gt;A kernel-based root solution for Android devices.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/tiann/KernelSU/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/tiann/KernelSU?label=Release&amp;amp;logo=github&quot; alt=&quot;Latest release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/kernelsu&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Localization-Weblate-teal?logo=weblate&quot; alt=&quot;Weblate&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/KernelSU&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Follow-Telegram-blue.svg?logo=telegram&quot; alt=&quot;Channel&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPL%20v2-orange.svg?logo=gnu&quot; alt=&quot;License: GPL v2&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/tiann/KernelSU?logo=gnu&quot; alt=&quot;GitHub License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Kernel-based &lt;code&gt;su&lt;/code&gt; and root access management.&lt;/li&gt; 
 &lt;li&gt;Module system based on &lt;a href=&quot;https://en.wikipedia.org/wiki/OverlayFS&quot;&gt;OverlayFS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kernelsu.org/guide/app-profile.html&quot;&gt;App Profile&lt;/a&gt;: Lock up the root power in a cage.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Compatibility state&lt;/h2&gt; 
&lt;p&gt;KernelSU officially supports Android GKI 2.0 devices (kernel 5.10+). Older kernels (4.14+) are also supported, but the kernel will need to be built manually.&lt;/p&gt; 
&lt;p&gt;With this, WSA, ChromeOS, and container-based Android are all supported.&lt;/p&gt; 
&lt;p&gt;Currently, only the &lt;code&gt;arm64-v8a&lt;/code&gt; and &lt;code&gt;x86_64&lt;/code&gt; architectures are supported.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kernelsu.org/guide/installation.html&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kernelsu.org/guide/how-to-build.html&quot;&gt;How to build&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kernelsu.org/&quot;&gt;Official website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;To help translate KernelSU or improve existing translations, please use &lt;a href=&quot;https://hosted.weblate.org/engage/kernelsu/&quot;&gt;Weblate&lt;/a&gt;. PR of Manager&#39;s translation is no longer accepted, because it will conflict with Weblate.&lt;/p&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Telegram: &lt;a href=&quot;https://t.me/KernelSU&quot;&gt;@KernelSU&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in KernelSU, see &lt;a href=&quot;https://raw.githubusercontent.com/tiann/KernelSU/main/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Files under the &lt;code&gt;kernel&lt;/code&gt; directory are &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&quot;&gt;GPL-2.0-only&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;All other parts except the &lt;code&gt;kernel&lt;/code&gt; directory are &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GPL-3.0-or-later&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://git.zx2c4.com/kernel-assisted-superuser/about/&quot;&gt;Kernel-Assisted Superuser&lt;/a&gt;: The KernelSU idea.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/topjohnwu/Magisk&quot;&gt;Magisk&lt;/a&gt;: The powerful root tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brevent/genuine/&quot;&gt;genuine&lt;/a&gt;: APK v2 signature validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/m0nad/Diamorphine&quot;&gt;Diamorphine&lt;/a&gt;: Some rootkit skills.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>anilbeesetti/nextplayer</title>
      <link>https://github.com/anilbeesetti/nextplayer</link>
      <description>&lt;p&gt;An Android native video player&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/featureGraphic.png&quot; alt=&quot;Next player banner&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Next Player&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/anilbeesetti/nextplayer/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/anilbeesetti/nextplayer.svg?logo=github&amp;amp;label=GitHub&amp;amp;cacheSeconds=3600&quot; alt=&quot;GitHub release (latest SemVer)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.anilbeesetti.nextplayer&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?color=green&amp;amp;logo=google-play&amp;amp;url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Ddev.anilbeesetti.nextplayer%26l%3DGoogle%2520Play%26m%3Dv%24version&quot; alt=&quot;Google Play&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apt.izzysoft.de/fdroid/index/apk/dev.anilbeesetti.nextplayer&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://apt.izzysoft.de/fdroid/api/v1/shield/dev.anilbeesetti.nextplayer&quot; alt=&quot;IzzyOnDroid&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://f-droid.org/packages/dev.anilbeesetti.nextplayer&quot;&gt;&lt;img src=&quot;https://img.shields.io/f-droid/v/dev.anilbeesetti.nextplayer?logo=f-droid&amp;amp;label=F-Droid&amp;amp;cacheSeconds=3600&quot; alt=&quot;F-Droid&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/anilbeesetti/nextplayer/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/anilbeesetti/nextplayer/total?logo=github&amp;amp;cacheSeconds=3600&quot; alt=&quot;GitHub all releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.anilbeesetti.nextplayer&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?color=green&amp;amp;logo=google-play&amp;amp;url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Ddev.anilbeesetti.nextplayer%26l%3Ddownloads%26m%3D%24totalinstalls&quot; alt=&quot;Google Play&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/next-player/&quot;&gt;&lt;img src=&quot;https://img.shields.io/weblate/progress/next-player?logo=weblate&amp;amp;logoColor=white&amp;amp;cacheSeconds=36000&quot; alt=&quot;Weblate project translated&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Next Player is an Android native video player written in Kotlin. It provides a simple and easy-to-use interface for users to play videos on their Android devices&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project is still in development and is expected to have bugs. Please report any bugs you find in the &lt;a href=&quot;https://github.com/anilbeesetti/nextplayer/issues&quot;&gt;Issues&lt;/a&gt; section.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=dev.anilbeesetti.nextplayer&quot;&gt;&lt;img src=&quot;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&quot; alt=&quot;Get it on Google Play&quot; height=&quot;80&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apt.izzysoft.de/fdroid/index/apk/dev.anilbeesetti.nextplayer&quot;&gt;&lt;img src=&quot;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&quot; alt=&quot;Get it on IzzyOnDroid&quot; height=&quot;80&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://f-droid.org/packages/dev.anilbeesetti.nextplayer/&quot;&gt;&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; height=&quot;80&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Media Picker&lt;/h3&gt; 
&lt;div style=&quot;width:100%; display:flex; justify-content:space-between;&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png&quot; width=&quot;19%&quot; alt=&quot;Home Light&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/2.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/2.png&quot; width=&quot;19%&quot; alt=&quot;Home Dark&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/3.png&quot; width=&quot;19%&quot; alt=&quot;Sub Folder Light&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/4.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/4.png&quot; width=&quot;19%&quot; alt=&quot;Sub Folder Dark&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/5.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/5.png&quot; width=&quot;19%&quot; alt=&quot;Quick Settings&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Player Ui&lt;/h3&gt; 
&lt;div style=&quot;width:100%; display:flex; justify-content:space-between;&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/6.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/6.png&quot; width=&quot;49%&quot; alt=&quot;Player&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/7.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/fastlane/metadata/android/en-US/images/phoneScreenshots/7.png&quot; width=&quot;49%&quot; alt=&quot;Player&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Supported formats&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Video&lt;/strong&gt;: H.263, H.264 AVC (Baseline Profile; Main Profile on Android 6+), H.265 HEVC, MPEG-4 SP, VP8, VP9, AV1 
  &lt;ul&gt; 
   &lt;li&gt;Support depends on Android device&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio&lt;/strong&gt;: Vorbis, Opus, FLAC, ALAC, PCM/WAVE (μ-law, A-law), MP1, MP2, MP3, AMR (NB, WB), AAC (LC, ELD, HE; xHE on Android 9+), AC-3, E-AC-3, DTS, DTS-HD, TrueHD 
  &lt;ul&gt; 
   &lt;li&gt;Support provided by ExoPlayer FFmpeg extension&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subtitles&lt;/strong&gt;: SRT, SSA, ASS, TTML, VTT, DVB 
  &lt;ul&gt; 
   &lt;li&gt;SSA/ASS has limited styling support see &lt;a href=&quot;https://github.com/google/ExoPlayer/issues/8435&quot;&gt;this issue&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Native Android app with simple and easy-to-use interface&lt;/li&gt; 
 &lt;li&gt;Completely free and open source and without any ads or excessive permissions&lt;/li&gt; 
 &lt;li&gt;Software decoders for h264 and hevc&lt;/li&gt; 
 &lt;li&gt;Audio/Subtitle track selection&lt;/li&gt; 
 &lt;li&gt;Vertical swipe to change brightness (left) / volume (right)&lt;/li&gt; 
 &lt;li&gt;Horizontal swipe to seek through video&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://m3.material.io/&quot;&gt;Material 3 (You)&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;Media picker with tree, folder and file view modes&lt;/li&gt; 
 &lt;li&gt;Play videos from url&lt;/li&gt; 
 &lt;li&gt;Play videos from storage access framework (Android Document picker)&lt;/li&gt; 
 &lt;li&gt;Control playback speed&lt;/li&gt; 
 &lt;li&gt;External Subtitle support&lt;/li&gt; 
 &lt;li&gt;Zoom gesture&lt;/li&gt; 
 &lt;li&gt;Picture-in-picture mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Planned Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;External Audio support&lt;/li&gt; 
 &lt;li&gt;Background playback&lt;/li&gt; 
 &lt;li&gt;Android TV version&lt;/li&gt; 
 &lt;li&gt;Search Functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome!&lt;/p&gt; 
&lt;h3&gt;Translating&lt;/h3&gt; 
&lt;p&gt;You can help translate Next Player on &lt;a href=&quot;https://hosted.weblate.org/engage/next-player/&quot;&gt;Hosted Weblate&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/engage/next-player/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/next-player/-/multi-auto.svg?sanitize=true&quot; alt=&quot;Translate status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Open Source Projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jarnedemeulemeester/findroid&quot;&gt;Findroid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/moneytoo/Player&quot;&gt;Just (Video) Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/libre-tube/LibreTube&quot;&gt;LibreTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Ashinch/ReadYou&quot;&gt;ReadYou&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/JunkFood02/Seal&quot;&gt;Seal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Special Thanks&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://hosted.weblate.org/engage/next-player/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widgets/next-player/-/287x66-white.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;strong&gt;Weblate&lt;/strong&gt; for providing free hosting for the project.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Next Player is licensed under the GNU General Public License v3.0. See the &lt;a href=&quot;https://raw.githubusercontent.com/anilbeesetti/nextplayer/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bannedbook/fanqiang</title>
      <link>https://github.com/bannedbook/fanqiang</link>
      <description>&lt;p&gt;翻墙-科学上网&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;翻墙-科学上网、翻墙工具、翻墙教程项目库&lt;/h1&gt; 
&lt;p&gt;本库大陆直连网址: &lt;a href=&quot;https://fq.88888004.xyz/&quot;&gt;https://fq.88888004.xyz/&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jsvpn/jsproxy/tree/dev#tt&quot;&gt;热点禁闻&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/fqnews2&quot;&gt;翻墙新闻-FQNews-安卓APP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/%E5%AE%89%E5%8D%93%E7%BF%BB%E5%A2%99%E8%BD%AF%E4%BB%B6&quot;&gt;安卓翻墙软件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android&quot;&gt;安卓翻墙APP教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/Chrome%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&quot;&gt;Chrome一键翻墙包&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ChromeGoMac#chromegomacchrome%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85-mac%E7%89%88&quot;&gt;Chrome一键翻墙包 Mac版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/EdgeGo&quot;&gt;EdgeGo-Edge一键翻墙包&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/%E7%81%AB%E7%8B%90firefox%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&quot;&gt;火狐firefox一键翻墙包&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/FirefoxFqLinux&quot;&gt;Firefox一键翻墙包Linux版&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/v2ss/%E8%87%AA%E5%BB%BAV2ray%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B.md&quot;&gt;自建V2ray服务器翻墙简明教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/v2ss/%E8%87%AA%E5%BB%BAShadowsocks%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B.md&quot;&gt;自建Shadowsocks服务器翻墙简明教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/%E5%85%8D%E8%B4%B9ss%E8%B4%A6%E5%8F%B7&quot;&gt;免费ss账号&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/v2ray%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7&quot;&gt;v2ray免费账号&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91MAC%E7%BF%BB%E5%A2%99&quot;&gt;苹果电脑MAC翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/iphone%E7%BF%BB%E5%A2%99&quot;&gt;iphone翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/TorBrowser%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&quot;&gt;TorBrowser一键翻墙包&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/signup-chatgpt.md#%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E6%B3%A8%E5%86%8Cchatgpt%E6%95%99%E7%A8%8B&quot;&gt;中国大陆注册ChatGPT教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/windows&quot;&gt;Windows V2ray/SS/SSR 翻墙教程&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/windows/ClashDotNetFramework.md&quot;&gt;Clash for Windows 翻墙教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/windows/V2RayN.md&quot;&gt;V2rayN 教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/windows/SSTap.md&quot;&gt;SSTap教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/windows/ShadowsocksR.md&quot;&gt;Windows翻墙之SSR教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/windows/tor-v2ray.md&quot;&gt;TorBrowser+V2rayN配置使用教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios&quot;&gt;iPhone/iPad/iOS V2ray/SS 翻墙APP教程&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/iphone%E7%BF%BB%E5%A2%99&quot;&gt;iphone翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios/AppleID.md&quot;&gt;注册苹果美区 Apple ID 帐号并购买APP指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios/fqByLan.md&quot;&gt;Iphone/iPad通过电脑局域网共享翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios/PotatsoLite.md&quot;&gt;Potatso教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios/Shadowrocket.md&quot;&gt;Shadowrocket小火箭配置使用教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios/QuantumultX.md&quot;&gt;Quantumult X 配置使用简易教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/ios/Surge.md&quot;&gt;iOS翻墙之Surge教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android&quot;&gt;Android 安卓翻墙APP教程&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/v2free.md&quot;&gt;V2free安卓翻墙教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/clash.md&quot;&gt;Clash for android 教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/BifrostV.md&quot;&gt;BifrostV 教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/Shadowsocks.md&quot;&gt;Shadowsocks for android 教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/ShadowsocksR.md&quot;&gt;SSR 安卓翻墙教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/Surfboard.md&quot;&gt;Surfboard 教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/android/V2RayNG.md&quot;&gt;V2RayNG 教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/macos&quot;&gt;Mac翻墙软件教程&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91MAC%E7%BF%BB%E5%A2%99&quot;&gt;苹果电脑MAC翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/macos/ClashX.md&quot;&gt;macOS翻墙之ClashX翻墙教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/macos/V2RayU.md&quot;&gt;macOS翻墙之V2rayU教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/macos/Surge.md&quot;&gt;macOS翻墙之Surge教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/macos/V2rayX.md&quot;&gt;macOS翻墙之V2rayX教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/router&quot;&gt;路由器翻墙教程&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/router/Merlin.md&quot;&gt;梅林路由器翻墙教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/router/OpenWRT.md&quot;&gt;OpenWRT路由器翻墙教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/linux&quot;&gt;Linux翻墙教程&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/tree/master/game&quot;&gt;游戏机翻墙教程&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/PS4-PS5%E6%B8%B8%E6%88%8F%E6%9C%BA%E9%80%9A%E8%BF%87%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BF%BB%E5%A2%99%E6%95%99%E7%A8%8B.md&quot;&gt;PS4-PS5游戏机通过局域网翻墙，加速游戏，以及下载游戏教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/SStap%E5%92%8CNetch%E5%85%8D%E8%B4%B9%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E5%99%A8%E6%95%99%E7%A8%8B.md&quot;&gt;SStap和Netch免费游戏加速器教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/Switch%E3%80%81%20PlayStation%E3%80%81Xbox%E7%AD%89%E6%B8%B8%E6%88%8F%E6%9C%BA%E7%BF%BB%E5%A2%99%E6%95%99%E7%A8%8B%EF%BC%8C%E5%88%A9%E7%94%A8MAC%E7%94%B5%E8%84%91%E5%81%9A%E6%97%81%E8%B7%AF%E7%94%B1%E5%8A%A0%E9%80%9F.md&quot;&gt;Switch、 PlayStation、Xbox等游戏机翻墙教程，利用MAC电脑做旁路由加速&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/Windows%E5%A6%82%E4%BD%95%E5%85%B1%E4%BA%ABWifi%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E7%BF%BB%E5%A2%99%E7%83%AD%E7%82%B9%E7%BB%99%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87%E7%BF%BB%E5%A2%99.md&quot;&gt;Windows如何共享Wifi无线网卡翻墙热点给其它设备翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/Mac%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8ClashX%20Pro%E4%BD%9C%E4%B8%BA%E7%BD%91%E5%85%B3%E6%97%81%E8%B7%AF%E7%94%B1%E7%BB%99%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87%E7%BF%BB%E5%A2%99.md&quot;&gt;Mac电脑使用ClashX Pro作为网关旁路由给其它设备翻墙&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/%E5%9C%A8Mac%E4%B8%8A%E4%BD%BF%E7%94%A8clashx%20pro%E7%BB%99switch%E5%BC%80%E5%90%AF%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F.md&quot;&gt;在Mac上使用clashx pro给switch开启游戏加速&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/raw/master/game/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%A7%86Apple%20Tv%E7%BF%BB%E5%A2%99%E6%8C%87%E5%8D%97.md&quot;&gt;苹果电视Apple Tv翻墙指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ChromeGo - Chrome一键翻墙包&lt;/h2&gt; 
&lt;p&gt;一个集成Goflyway、v2ray、Daze、SSR、Brook、Lightsocks、trojan、蓝灯、psiphon等N多翻墙工具的电脑翻墙包（推荐按前面所列顺序依次尝试），所有工具全部内置免费服务器，长期更新。由于国内网络环境复杂、地区不同，网络运营商不同，封锁情况都不同，所以使用效果会有差别，有的地区几乎所有的软件都能使用，有的只能用几款，因此具体哪款软件适合你的网络环境，需要你自己来尝试。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;推荐：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/V2ray%E6%9C%BA%E5%9C%BA&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bannedbook/fanqiang/master/v2ss/images/v2free.jpg&quot; height=&quot;300&quot; alt=&quot;V2free翻墙-不限流量、高速稳定、性价比超强&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;下载Chrome一键翻墙包&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/bannedbook/fanqiang/wiki/Chrome%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&quot;&gt;Chrome一键翻墙包&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;使用Chrome一键翻墙包&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;请首先自行安装Google Chrome 浏览器，然后下载Chrome一键翻墙包，本软件会自动调用Google Chrome 浏览器翻墙。 下载后，解压出来，请不要解压到含有中文或空格的目录路径，请不要不解压就直接从压缩包里运行！不解压会出错！ 下载后，请认真阅读里面的使用帮助说明，然后 0.xx-10.xx翻墙 可依次尝试。 自动回复最新翻墙信息网址：&lt;a href=&quot;mailto:freeman105@gmail.com&quot;&gt;freeman105@gmail.com&lt;/a&gt;，邮箱不解答问题,如需反馈交流，请&lt;a href=&quot;https://github.com/bannedbook/fanqiang/issues&quot;&gt;点我&lt;/a&gt;或加入翻墙电报群: &lt;a href=&quot;https://t.me/fqchat&quot;&gt;https://t.me/fqchat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;版权声明&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;请随意分发，勿做商业使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>keiyoushi/extensions-source</title>
      <link>https://github.com/keiyoushi/extensions-source</link>
      <description>&lt;p&gt;Source code of extensions in https://github.com/keiyoushi/extensions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Keiyoushi Extensions&lt;/h1&gt; 
&lt;h3&gt;Please give the repo a &lt;span&gt;⭐&lt;/span&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Build&lt;/th&gt; 
   &lt;th&gt;Need Help?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/keiyoushi/extensions-source/actions/workflows/build_push.yml&quot;&gt;&lt;img src=&quot;https://github.com/keiyoushi/extensions-source/actions/workflows/build_push.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://discord.gg/3FbCpdKbdY&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1193460528052453448.svg?label=discord&amp;amp;labelColor=7289da&amp;amp;color=2c2f33&amp;amp;style=flat&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you are new to repository/extensions, please read the &lt;a href=&quot;https://keiyoushi.github.io/docs/guides/getting-started#adding-the-extension-repo&quot;&gt;Keiyoushi Getting Started guide&lt;/a&gt; first.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can add our repo by visiting the &lt;a href=&quot;https://keiyoushi.github.io/add-repo&quot;&gt;Keiyoushi Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Otherwise, copy &amp;amp; paste the following URL: &lt;a href=&quot;https://raw.githubusercontent.com/keiyoushi/extensions/repo/index.min.json&quot;&gt;https://raw.githubusercontent.com/keiyoushi/extensions/repo/index.min.json&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requests&lt;/h2&gt; 
&lt;p&gt;To request a new source or bug fix, &lt;a href=&quot;https://github.com/keiyoushi/extensions-source/issues/new/choose&quot;&gt;create an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that creating an issue does not mean that the source will be added or fixed in a timely fashion, because the work is volunteer-based. Some sources may also be impossible to do or prohibitively difficult to maintain.&lt;/p&gt; 
&lt;p&gt;If you would like to see a request fulfilled and have the necessary skills to do so, consider contributing! Issues are up-for-grabs for any developer if there is no assigned user already.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome!&lt;/p&gt; 
&lt;p&gt;Check out the repo&#39;s &lt;a href=&quot;https://github.com/keiyoushi/extensions-source/issues&quot;&gt;issue backlog&lt;/a&gt; for source requests and bug reports.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2015 Javier Tomás

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project does not have any affiliation with the content providers available.&lt;/p&gt; 
&lt;p&gt;This project is not affiliated with Mihon/Tachiyomi. Don&#39;t ask for help about these extensions at the official support means of Mihon/Tachiyomi. All credits to the codebase goes to the original contributors.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
