<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Monthly Trending</title>
    <description>Monthly Trending of TypeScript in GitHub</description>
    <pubDate>Wed, 13 Aug 2025 01:59:50 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>browserbase/stagehand</title>
      <link>https://github.com/browserbase/stagehand</link>
      <description>&lt;p&gt;The AI Browser Automation Framework&lt;/p&gt;&lt;hr&gt;&lt;div id=&quot;toc&quot; align=&quot;center&quot; style=&quot;margin-bottom: 0;&quot;&gt; 
 &lt;ul style=&quot;list-style: none; margin: 0; padding: 0;&quot;&gt; 
  &lt;a href=&quot;https://stagehand.dev&quot;&gt; 
   &lt;picture&gt; 
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;media/dark_logo.png&quot; /&gt; 
    &lt;img alt=&quot;Stagehand&quot; src=&quot;https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_logo.png&quot; width=&quot;200&quot; style=&quot;margin-right: 30px;&quot; /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt;The AI Browser Automation Framework&lt;/strong&gt;&lt;br /&gt; &lt;a href=&quot;https://docs.stagehand.dev&quot;&gt;Read the Docs&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;media/dark_license.svg&quot; /&gt; 
   &lt;img alt=&quot;MIT License&quot; src=&quot;https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_license.svg?sanitize=true&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&quot;https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;media/dark_slack.svg&quot; /&gt; 
   &lt;img alt=&quot;Slack Community&quot; src=&quot;https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_slack.svg?sanitize=true&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://trendshift.io/repositories/12122&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/12122&quot; alt=&quot;browserbase%2Fstagehand | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; If you&#39;re looking for the Python implementation, you can find it &lt;a href=&quot;https://github.com/browserbase/stagehand-python&quot;&gt; here&lt;/a&gt; &lt;/p&gt; 
&lt;div align=&quot;center&quot; style=&quot;display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;&quot;&gt; 
 &lt;b&gt;Vibe code&lt;/b&gt; 
 &lt;span style=&quot;font-size: 1.05em;&quot;&gt; Stagehand with &lt;/span&gt; 
 &lt;a href=&quot;https://director.ai&quot; style=&quot;display: flex; align-items: center;&quot;&gt; &lt;span&gt;Director&lt;/span&gt; &lt;/a&gt; 
 &lt;span&gt; &lt;/span&gt; 
 &lt;picture&gt; 
  &lt;img alt=&quot;Director&quot; src=&quot;https://raw.githubusercontent.com/browserbase/stagehand/main/media/director_icon.svg?sanitize=true&quot; width=&quot;25&quot; /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h2&gt;Why Stagehand?&lt;/h2&gt; 
&lt;p&gt;Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Choose when to write code vs. natural language&lt;/strong&gt;: use AI when you want to navigate unfamiliar pages, and use code (&lt;a href=&quot;https://playwright.dev/&quot;&gt;Playwright&lt;/a&gt;) when you know exactly what you want to do.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Preview and cache actions&lt;/strong&gt;: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer use models with one line of code&lt;/strong&gt;: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Here&#39;s how to build a sample browser automation with Stagehand:&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;div style=&quot;max-width:300px;&quot;&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/browserbase/stagehand/main/media/github_demo.gif&quot; alt=&quot;See Stagehand in Action&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto(&quot;https://github.com/browserbase&quot;);

// Use act() to execute individual actions
await page.act(&quot;click on the stagehand repo&quot;);

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: &quot;openai&quot;,
    model: &quot;computer-use-preview&quot;,
});
await agent.execute(&quot;Get to the latest PR&quot;);

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: &quot;extract the author and title of the PR&quot;,
  schema: z.object({
    author: z.string().describe(&quot;The username of the PR author&quot;),
    title: z.string().describe(&quot;The title of the PR&quot;),
  }),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://docs.stagehand.dev&quot;&gt;docs.stagehand.dev&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Start with Stagehand with one line of code, or check out our &lt;a href=&quot;https://docs.stagehand.dev/get_started/quickstart&quot;&gt;Quickstart Guide&lt;/a&gt; for more information:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx create-browser-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt; &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt; &lt;/a&gt; 
 &lt;a href=&quot;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&quot;&gt; &lt;img style=&quot;max-width:300px;&quot; src=&quot;https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build and Run from Source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/browserbase/stagehand.git
cd stagehand
pnpm install
pnpm playwright install
pnpm run build
pnpm run example # run the blank script at ./examples/example.ts
pnpm run example 2048 # run the 2048 example at ./examples/2048.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cp .env.example .env
nano .env # Edit the .env file to add API keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; We highly value contributions to Stagehand! For questions or support, please join our &lt;a href=&quot;https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;At a high level, we&#39;re focused on improving reliability, speed, and cost in that order of priority. If you&#39;re interested in contributing, we strongly recommend reaching out to &lt;a href=&quot;https://x.com/miguel_gonzf&quot;&gt;Miguel Gonzalez&lt;/a&gt; or &lt;a href=&quot;https://x.com/pk_iv&quot;&gt;Paul Klein&lt;/a&gt; in our &lt;a href=&quot;https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg&quot;&gt;Slack community&lt;/a&gt; before starting to ensure that your contribution aligns with our goals.&lt;/p&gt; 
&lt;p&gt;For more information, please see our &lt;a href=&quot;https://docs.stagehand.dev/examples/contributing&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project heavily relies on &lt;a href=&quot;https://playwright.dev/&quot;&gt;Playwright&lt;/a&gt; as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by &lt;a href=&quot;https://github.com/reworkd/tarsier&quot;&gt;tarsier&lt;/a&gt;, &lt;a href=&quot;https://github.com/jbeoris/gemini-zod&quot;&gt;gemini-zod&lt;/a&gt;, and &lt;a href=&quot;https://github.com/normal-computing/fuji-web&quot;&gt;fuji-web&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We&#39;d like to thank the following people for their major contributions to Stagehand:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pkiv&quot;&gt;Paul Klein&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kamath&quot;&gt;Anirudh Kamath&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/seanmcguire12&quot;&gt;Sean McGuire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/miguelg719&quot;&gt;Miguel Gonzalez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sameelarif&quot;&gt;Sameel Arif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/filip-michalsky&quot;&gt;Filip Michalsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/jeremypress&quot;&gt;Jeremy Press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/navidpour&quot;&gt;Navid Pour&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT License.&lt;/p&gt; 
&lt;p&gt;Copyright 2025 Browserbase, Inc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>musistudio/claude-code-router</title>
      <link>https://github.com/musistudio/claude-code-router</link>
      <description>&lt;p&gt;Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code Router&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/README_zh.md&quot;&gt;中文版&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A powerful tool to route Claude Code requests to different models and customize any request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/claude-code.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Model Routing&lt;/strong&gt;: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Request/Response Transformation&lt;/strong&gt;: Customize requests and responses for different providers using transformers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Model Switching&lt;/strong&gt;: Switch models on-the-fly within Claude Code using the &lt;code&gt;/model&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Actions Integration&lt;/strong&gt;: Trigger Claude Code tasks in your GitHub workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt;: Extend functionality with custom transformers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;1. Installation&lt;/h3&gt; 
&lt;p&gt;First, ensure you have &lt;a href=&quot;https://docs.anthropic.com/en/docs/claude-code/quickstart&quot;&gt;Claude Code&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, install Claude Code Router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g @musistudio/claude-code-router
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Configuration&lt;/h3&gt; 
&lt;p&gt;Create and configure your &lt;code&gt;~/.claude-code-router/config.json&lt;/code&gt; file. For more details, you can refer to &lt;code&gt;config.example.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;config.json&lt;/code&gt; file has several key sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;PROXY_URL&lt;/code&gt;&lt;/strong&gt; (optional): You can set a proxy for API requests, for example: &lt;code&gt;&quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;LOG&lt;/code&gt;&lt;/strong&gt; (optional): You can enable logging by setting it to &lt;code&gt;true&lt;/code&gt;. The log file will be located at &lt;code&gt;$HOME/.claude-code-router.log&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;APIKEY&lt;/code&gt;&lt;/strong&gt; (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the &lt;code&gt;Authorization&lt;/code&gt; header (e.g., &lt;code&gt;Bearer your-secret-key&lt;/code&gt;) or the &lt;code&gt;x-api-key&lt;/code&gt; header. Example: &lt;code&gt;&quot;APIKEY&quot;: &quot;your-secret-key&quot;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/strong&gt; (optional): You can set the host address for the server. If &lt;code&gt;APIKEY&lt;/code&gt; is not set, the host will be forced to &lt;code&gt;127.0.0.1&lt;/code&gt; for security reasons to prevent unauthorized access. Example: &lt;code&gt;&quot;HOST&quot;: &quot;0.0.0.0&quot;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;NON_INTERACTIVE_MODE&lt;/code&gt;&lt;/strong&gt; (optional): When set to &lt;code&gt;true&lt;/code&gt;, enables compatibility with non-interactive environments like GitHub Actions, Docker containers, or other CI/CD systems. This sets appropriate environment variables (&lt;code&gt;CI=true&lt;/code&gt;, &lt;code&gt;FORCE_COLOR=0&lt;/code&gt;, etc.) and configures stdin handling to prevent the process from hanging in automated environments. Example: &lt;code&gt;&quot;NON_INTERACTIVE_MODE&quot;: true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Providers&lt;/code&gt;&lt;/strong&gt;: Used to configure different model providers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/strong&gt;: Used to set up routing rules. &lt;code&gt;default&lt;/code&gt; specifies the default model, which will be used for all requests if no other route is configured.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;API_TIMEOUT_MS&lt;/code&gt;&lt;/strong&gt;: Specifies the timeout for API calls in milliseconds.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Environment Variable Interpolation&lt;/h4&gt; 
&lt;p&gt;Claude Code Router supports environment variable interpolation for secure API key management. You can reference environment variables in your &lt;code&gt;config.json&lt;/code&gt; using either &lt;code&gt;$VAR_NAME&lt;/code&gt; or &lt;code&gt;${VAR_NAME}&lt;/code&gt; syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;OPENAI_API_KEY&quot;: &quot;$OPENAI_API_KEY&quot;,
  &quot;GEMINI_API_KEY&quot;: &quot;${GEMINI_API_KEY}&quot;,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openai&quot;,
      &quot;api_base_url&quot;: &quot;https://api.openai.com/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;$OPENAI_API_KEY&quot;,
      &quot;models&quot;: [&quot;gpt-5&quot;, &quot;gpt-5-mini&quot;]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This allows you to keep sensitive API keys in environment variables instead of hardcoding them in configuration files. The interpolation works recursively through nested objects and arrays.&lt;/p&gt; 
&lt;p&gt;Here is a comprehensive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;APIKEY&quot;: &quot;your-secret-key&quot;,
  &quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;,
  &quot;LOG&quot;: true,
  &quot;API_TIMEOUT_MS&quot;: 600000,
  &quot;NON_INTERACTIVE_MODE&quot;: false,
  &quot;Providers&quot;: [
    {
      &quot;name&quot;: &quot;openrouter&quot;,
      &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [
        &quot;google/gemini-2.5-pro-preview&quot;,
        &quot;anthropic/claude-sonnet-4&quot;,
        &quot;anthropic/claude-3.5-sonnet&quot;,
        &quot;anthropic/claude-3.7-sonnet:thinking&quot;
      ],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;openrouter&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;deepseek&quot;,
      &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;],
        &quot;deepseek-chat&quot;: {
          &quot;use&quot;: [&quot;tooluse&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;ollama&quot;,
      &quot;api_base_url&quot;: &quot;http://localhost:11434/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;ollama&quot;,
      &quot;models&quot;: [&quot;qwen2.5-coder:latest&quot;]
    },
    {
      &quot;name&quot;: &quot;gemini&quot;,
      &quot;api_base_url&quot;: &quot;https://generativelanguage.googleapis.com/v1beta/models/&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;gemini-2.5-flash&quot;, &quot;gemini-2.5-pro&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;gemini&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;volcengine&quot;,
      &quot;api_base_url&quot;: &quot;https://ark.cn-beijing.volces.com/api/v3/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-xxx&quot;,
      &quot;models&quot;: [&quot;deepseek-v3-250324&quot;, &quot;deepseek-r1-250528&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [&quot;deepseek&quot;]
      }
    },
    {
      &quot;name&quot;: &quot;modelscope&quot;,
      &quot;api_base_url&quot;: &quot;https://api-inference.modelscope.cn/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;&quot;,
      &quot;models&quot;: [&quot;Qwen/Qwen3-Coder-480B-A35B-Instruct&quot;, &quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 65536
            }
          ],
          &quot;enhancetool&quot;
        ],
        &quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;: {
          &quot;use&quot;: [&quot;reasoning&quot;]
        }
      }
    },
    {
      &quot;name&quot;: &quot;dashscope&quot;,
      &quot;api_base_url&quot;: &quot;https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;&quot;,
      &quot;models&quot;: [&quot;qwen3-coder-plus&quot;],
      &quot;transformer&quot;: {
        &quot;use&quot;: [
          [
            &quot;maxtoken&quot;,
            {
              &quot;max_tokens&quot;: 65536
            }
          ],
          &quot;enhancetool&quot;
        ]
      }
    },
    {
      &quot;name&quot;: &quot;aihubmix&quot;,
      &quot;api_base_url&quot;: &quot;https://aihubmix.com/v1/chat/completions&quot;,
      &quot;api_key&quot;: &quot;sk-&quot;,
      &quot;models&quot;: [
        &quot;Z/glm-4.5&quot;,
        &quot;claude-opus-4-20250514&quot;,
        &quot;gemini-2.5-pro&quot;
      ]
    }
  ],
  &quot;Router&quot;: {
    &quot;default&quot;: &quot;deepseek,deepseek-chat&quot;,
    &quot;background&quot;: &quot;ollama,qwen2.5-coder:latest&quot;,
    &quot;think&quot;: &quot;deepseek,deepseek-reasoner&quot;,
    &quot;longContext&quot;: &quot;openrouter,google/gemini-2.5-pro-preview&quot;,
    &quot;longContextThreshold&quot;: 60000,
    &quot;webSearch&quot;: &quot;gemini,gemini-2.5-flash&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Running Claude Code with the Router&lt;/h3&gt; 
&lt;p&gt;Start Claude Code using the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ccr code
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After modifying the configuration file, you need to restart the service for the changes to take effect:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ccr restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;4. UI Mode (Beta)&lt;/h3&gt; 
&lt;p&gt;For a more intuitive experience, you can use the UI mode to manage your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;ccr ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will open a web-based interface where you can easily view and edit your &lt;code&gt;config.json&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/ui.png&quot; alt=&quot;UI&quot; /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The UI mode is currently in beta. 100% vibe coding: including project initialization, I just created a folder and a project.md document, and all code was generated by ccr + qwen3-coder + gemini(webSearch). If you encounter any issues, please submit an issue on GitHub.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Providers&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Providers&lt;/code&gt; array is where you define the different model providers you want to use. Each provider object requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: A unique name for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_base_url&lt;/code&gt;: The full API endpoint for chat completions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_key&lt;/code&gt;: Your API key for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;models&lt;/code&gt;: A list of model names available from this provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;transformer&lt;/code&gt; (optional): Specifies transformers to process requests and responses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;p&gt;Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Global Transformer&lt;/strong&gt;: Apply a transformer to all models from a provider. In this example, the &lt;code&gt;openrouter&lt;/code&gt; transformer is applied to all models under the &lt;code&gt;openrouter&lt;/code&gt; provider.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;openrouter&quot;,
  &quot;api_base_url&quot;: &quot;https://openrouter.ai/api/v1/chat/completions&quot;,
  &quot;api_key&quot;: &quot;sk-xxx&quot;,
  &quot;models&quot;: [
    &quot;google/gemini-2.5-pro-preview&quot;,
    &quot;anthropic/claude-sonnet-4&quot;,
    &quot;anthropic/claude-3.5-sonnet&quot;
  ],
  &quot;transformer&quot;: { &quot;use&quot;: [&quot;openrouter&quot;] }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Model-Specific Transformer&lt;/strong&gt;: Apply a transformer to a specific model. In this example, the &lt;code&gt;deepseek&lt;/code&gt; transformer is applied to all models, and an additional &lt;code&gt;tooluse&lt;/code&gt; transformer is applied only to the &lt;code&gt;deepseek-chat&lt;/code&gt; model.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;deepseek&quot;,
  &quot;api_base_url&quot;: &quot;https://api.deepseek.com/chat/completions&quot;,
  &quot;api_key&quot;: &quot;sk-xxx&quot;,
  &quot;models&quot;: [&quot;deepseek-chat&quot;, &quot;deepseek-reasoner&quot;],
  &quot;transformer&quot;: {
    &quot;use&quot;: [&quot;deepseek&quot;],
    &quot;deepseek-chat&quot;: { &quot;use&quot;: [&quot;tooluse&quot;] }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Passing Options to a Transformer&lt;/strong&gt;: Some transformers, like &lt;code&gt;maxtoken&lt;/code&gt;, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;name&quot;: &quot;siliconflow&quot;,
  &quot;api_base_url&quot;: &quot;https://api.siliconflow.cn/v1/chat/completions&quot;,
  &quot;api_key&quot;: &quot;sk-xxx&quot;,
  &quot;models&quot;: [&quot;moonshotai/Kimi-K2-Instruct&quot;],
  &quot;transformer&quot;: {
    &quot;use&quot;: [
      [
        &quot;maxtoken&quot;,
        {
          &quot;max_tokens&quot;: 16384
        }
      ]
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Available Built-in Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Anthropic&lt;/code&gt;:If you use only the &lt;code&gt;Anthropic&lt;/code&gt; transformer, it will preserve the original request and response parameters(you can use it to connect directly to an Anthropic endpoint).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;deepseek&lt;/code&gt;: Adapts requests/responses for DeepSeek API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini&lt;/code&gt;: Adapts requests/responses for Gemini API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;openrouter&lt;/code&gt;: Adapts requests/responses for OpenRouter API. It can also accept a &lt;code&gt;provider&lt;/code&gt; routing parameter to specify which underlying providers OpenRouter should use. For more details, refer to the &lt;a href=&quot;https://openrouter.ai/docs/features/provider-routing&quot;&gt;OpenRouter documentation&lt;/a&gt;. See an example below: &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;transformer&quot;: {
    &quot;use&quot;: [&quot;openrouter&quot;],
    &quot;moonshotai/kimi-k2&quot;: {
      &quot;use&quot;: [
        [
          &quot;openrouter&quot;,
          {
            &quot;provider&quot;: {
              &quot;only&quot;: [&quot;moonshotai/fp8&quot;]
            }
          }
        ]
      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;groq&lt;/code&gt;: Adapts requests/responses for groq API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxtoken&lt;/code&gt;: Sets a specific &lt;code&gt;max_tokens&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tooluse&lt;/code&gt;: Optimizes tool usage for certain models via &lt;code&gt;tool_choice&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini-cli&lt;/code&gt; (experimental): Unofficial support for Gemini via Gemini CLI &lt;a href=&quot;https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd&quot;&gt;gemini-cli.js&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reasoning&lt;/code&gt;: Used to process the &lt;code&gt;reasoning_content&lt;/code&gt; field.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sampling&lt;/code&gt;: Used to process sampling information fields such as &lt;code&gt;temperature&lt;/code&gt;, &lt;code&gt;top_p&lt;/code&gt;, &lt;code&gt;top_k&lt;/code&gt;, and &lt;code&gt;repetition_penalty&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;enhancetool&lt;/code&gt;: Adds a layer of error tolerance to the tool call parameters returned by the LLM (this will cause the tool call information to no longer be streamed).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cleancache&lt;/code&gt;: Clears the &lt;code&gt;cache_control&lt;/code&gt; field from requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vertex-gemini&lt;/code&gt;: Handles the Gemini API using Vertex authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;qwen-cli&lt;/code&gt; (experimental): Unofficial support for qwen3-coder-plus model via Qwen CLI &lt;a href=&quot;https://gist.github.com/musistudio/f5a67841ced39912fd99e42200d5ca8b&quot;&gt;qwen-cli.js&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Custom Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can also create your own transformers and load them via the &lt;code&gt;transformers&lt;/code&gt; field in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;transformers&quot;: [
    {
      &quot;path&quot;: &quot;$HOME/.claude-code-router/plugins/gemini-cli.js&quot;,
      &quot;options&quot;: {
        &quot;project&quot;: &quot;xxx&quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Router&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Router&lt;/code&gt; object defines which model to use for different scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;default&lt;/code&gt;: The default model for general tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;background&lt;/code&gt;: A model for background tasks. This can be a smaller, local model to save costs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think&lt;/code&gt;: A model for reasoning-heavy tasks, like Plan Mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContext&lt;/code&gt;: A model for handling long contexts (e.g., &amp;gt; 60K tokens).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContextThreshold&lt;/code&gt; (optional): The token count threshold for triggering the long context model. Defaults to 60000 if not specified.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webSearch&lt;/code&gt;: Used for handling web search tasks and this requires the model itself to support the feature. If you&#39;re using openrouter, you need to add the &lt;code&gt;:online&lt;/code&gt; suffix after the model name.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also switch models dynamically in Claude Code with the &lt;code&gt;/model&lt;/code&gt; command: &lt;code&gt;/model provider_name,model_name&lt;/code&gt; Example: &lt;code&gt;/model openrouter,anthropic/claude-3.5-sonnet&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Custom Router&lt;/h4&gt; 
&lt;p&gt;For more advanced routing logic, you can specify a custom router script via the &lt;code&gt;CUSTOM_ROUTER_PATH&lt;/code&gt; in your &lt;code&gt;config.json&lt;/code&gt;. This allows you to implement complex routing rules beyond the default scenarios.&lt;/p&gt; 
&lt;p&gt;In your &lt;code&gt;config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;CUSTOM_ROUTER_PATH&quot;: &quot;$HOME/.claude-code-router/custom-router.js&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The custom router file must be a JavaScript module that exports an &lt;code&gt;async&lt;/code&gt; function. This function receives the request object and the config object as arguments and should return the provider and model name as a string (e.g., &lt;code&gt;&quot;provider_name,model_name&quot;&lt;/code&gt;), or &lt;code&gt;null&lt;/code&gt; to fall back to the default router.&lt;/p&gt; 
&lt;p&gt;Here is an example of a &lt;code&gt;custom-router.js&lt;/code&gt; based on &lt;code&gt;custom-router.example.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// $HOME/.claude-code-router/custom-router.js

/**
 * A custom router function to determine which model to use based on the request.
 *
 * @param {object} req - The request object from Claude Code, containing the request body.
 * @param {object} config - The application&#39;s config object.
 * @returns {Promise&amp;lt;string|null&amp;gt;} - A promise that resolves to the &quot;provider,model_name&quot; string, or null to use the default router.
 */
module.exports = async function router(req, config) {
  const userMessage = req.body.messages.find((m) =&amp;gt; m.role === &quot;user&quot;)?.content;

  if (userMessage &amp;amp;&amp;amp; userMessage.includes(&quot;explain this code&quot;)) {
    // Use a powerful model for code explanation
    return &quot;openrouter,anthropic/claude-3.5-sonnet&quot;;
  }

  // Fallback to the default router configuration
  return null;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Subagent Routing&lt;/h5&gt; 
&lt;p&gt;For routing within subagents, you must specify a particular provider and model by including &lt;code&gt;&amp;lt;CCR-SUBAGENT-MODEL&amp;gt;provider,model&amp;lt;/CCR-SUBAGENT-MODEL&amp;gt;&lt;/code&gt; at the &lt;strong&gt;beginning&lt;/strong&gt; of the subagent&#39;s prompt. This allows you to direct specific subagent tasks to designated models.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;CCR-SUBAGENT-MODEL&amp;gt;openrouter,anthropic/claude-3.5-sonnet&amp;lt;/CCR-SUBAGENT-MODEL&amp;gt;
Please help me analyze this code snippet for potential optimizations...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🤖 GitHub Actions&lt;/h2&gt; 
&lt;p&gt;Integrate Claude Code Router into your CI/CD pipeline. After setting up &lt;a href=&quot;https://docs.anthropic.com/en/docs/claude-code/github-actions&quot;&gt;Claude Code Actions&lt;/a&gt;, modify your &lt;code&gt;.github/workflows/claude.yaml&lt;/code&gt; to use the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == &#39;issue_comment&#39; &amp;amp;&amp;amp; contains(github.event.comment.body, &#39;@claude&#39;)) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; $HOME/.claude-code-router/config.json
          {
            &quot;log&quot;: true,
            &quot;NON_INTERACTIVE_MODE&quot;: true,
            &quot;OPENAI_API_KEY&quot;: &quot;${{ secrets.OPENAI_API_KEY }}&quot;,
            &quot;OPENAI_BASE_URL&quot;: &quot;https://api.deepseek.com&quot;,
            &quot;OPENAI_MODEL&quot;: &quot;deepseek-chat&quot;
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: &quot;any-string-is-ok&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When running in GitHub Actions or other automation environments, make sure to set &lt;code&gt;&quot;NON_INTERACTIVE_MODE&quot;: true&lt;/code&gt; in your configuration to prevent the process from hanging due to stdin handling issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.&lt;/p&gt; 
&lt;h2&gt;📝 Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/project-motivation-and-how-it-works.md&quot;&gt;Project Motivation and How It Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/maybe-we-can-do-more-with-the-route.md&quot;&gt;Maybe We Can Do More with the Router&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❤️ Support &amp;amp; Sponsoring&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ko-fi.com/F1F31GN2GM&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://paypal.me/musistudio1999&quot;&gt;Paypal&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/alipay.jpg&quot; width=&quot;200&quot; alt=&quot;Alipay&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/wechat.jpg&quot; width=&quot;200&quot; alt=&quot;WeChat Pay&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Our Sponsors&lt;/h3&gt; 
&lt;p&gt;A huge thank you to all our sponsors for their generous support!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aihubmix.com/&quot;&gt;AIHubmix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@Simon Leischnig&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/duanshuaimin&quot;&gt;@duanshuaimin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/vrgitadmin&quot;&gt;@vrgitadmin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*o&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ceilwoo&quot;&gt;@ceilwoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*说&lt;/li&gt; 
 &lt;li&gt;@*更&lt;/li&gt; 
 &lt;li&gt;@K*g&lt;/li&gt; 
 &lt;li&gt;@R*R&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bobleer&quot;&gt;@bobleer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*苗&lt;/li&gt; 
 &lt;li&gt;@*划&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Clarence-pan&quot;&gt;@Clarence-pan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/carter003&quot;&gt;@carter003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@S*r&lt;/li&gt; 
 &lt;li&gt;@*晖&lt;/li&gt; 
 &lt;li&gt;@*敏&lt;/li&gt; 
 &lt;li&gt;@Z*z&lt;/li&gt; 
 &lt;li&gt;@*然&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/cluic&quot;&gt;@cluic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*苗&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PromptExpert&quot;&gt;@PromptExpert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*应&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/yusnake&quot;&gt;@yusnake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*飞&lt;/li&gt; 
 &lt;li&gt;@董*&lt;/li&gt; 
 &lt;li&gt;@*汀&lt;/li&gt; 
 &lt;li&gt;@*涯&lt;/li&gt; 
 &lt;li&gt;@*:-）&lt;/li&gt; 
 &lt;li&gt;@**磊&lt;/li&gt; 
 &lt;li&gt;@*琢&lt;/li&gt; 
 &lt;li&gt;@*成&lt;/li&gt; 
 &lt;li&gt;@Z*o&lt;/li&gt; 
 &lt;li&gt;@*琨&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/congzhangzh&quot;&gt;@congzhangzh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*_&lt;/li&gt; 
 &lt;li&gt;@Z*m&lt;/li&gt; 
 &lt;li&gt;@*鑫&lt;/li&gt; 
 &lt;li&gt;@c*y&lt;/li&gt; 
 &lt;li&gt;@*昕&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/witsice&quot;&gt;@witsice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@b*g&lt;/li&gt; 
 &lt;li&gt;@*亿&lt;/li&gt; 
 &lt;li&gt;@*辉&lt;/li&gt; 
 &lt;li&gt;@JACK&lt;/li&gt; 
 &lt;li&gt;@*光&lt;/li&gt; 
 &lt;li&gt;@W*l&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/kesku&quot;&gt;@kesku&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@水*丫&lt;/li&gt; 
 &lt;li&gt;@二吉吉&lt;/li&gt; 
 &lt;li&gt;@a*g&lt;/li&gt; 
 &lt;li&gt;@*林&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(If your name is masked, please contact me via my homepage email to update it with your GitHub username.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/12-factor-agents</title>
      <link>https://github.com/humanlayer/12-factor-agents</link>
      <description>&lt;p&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;12-Factor Agents - Principles for building reliable LLM applications&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Code-Apache%202.0-blue.svg?sanitize=true&quot; alt=&quot;Code License: Apache 2.0&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg?sanitize=true&quot; alt=&quot;Content License: CC BY-SA 4.0&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://humanlayer.dev/discord&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/chat-discord-5865F2&quot; alt=&quot;Discord Server&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.youtube.com/watch?v=8kMaTybvDUw&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white&quot; alt=&quot;YouTube
Deep Dive&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.youtube.com/watch?v=yxJDyQ8v6P0&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/youtube-deep_dive-crimson&quot; alt=&quot;YouTube
Deep Dive&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;In the spirit of &lt;a href=&quot;https://12factor.net/&quot;&gt;12 Factor Apps&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;The source for this project is public at &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents&quot;&gt;https://github.com/humanlayer/12-factor-agents&lt;/a&gt;, and I welcome your feedback and contributions. Let&#39;s figure this out together!&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Missed the AI Engineer World&#39;s Fair? &lt;a href=&quot;https://www.youtube.com/watch?v=8kMaTybvDUw&quot;&gt;Catch the talk here&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking for Context Engineering? &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md&quot;&gt;Jump straight to factor 3&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Want to contribute to &lt;code&gt;npx/uvx create-12-factor-agent&lt;/code&gt; - check out &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/discussions/61&quot;&gt;the discussion thread&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img referrerpolicy=&quot;no-referrer-when-downgrade&quot; src=&quot;https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9&quot; /&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/humanlayer/12-factor-agents/main/#visual-nav&quot;&gt;&lt;img width=&quot;907&quot; alt=&quot;Screenshot 2025-04-03 at 2 49 07 PM&quot; src=&quot;https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi, I&#39;m Dex. I&#39;ve been &lt;a href=&quot;https://youtu.be/8bIHcttkOTE&quot;&gt;hacking&lt;/a&gt; on &lt;a href=&quot;https://theouterloop.substack.com&quot;&gt;AI agents&lt;/a&gt; for &lt;a href=&quot;https://humanlayer.dev&quot;&gt;a while&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I&#39;ve tried every agent framework out there&lt;/strong&gt;, from the plug-and-play crew/langchains to the &quot;minimalist&quot; smolagents of the world to the &quot;production grade&quot; langraph, griptape, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I&#39;ve talked to a lot of really strong founders&lt;/strong&gt;, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don&#39;t see a lot of frameworks in production customer-facing agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I&#39;ve been surprised to find&lt;/strong&gt; that most of the products out there billing themselves as &quot;AI Agents&quot; are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.&lt;/p&gt; 
&lt;p&gt;Agents, at least the good ones, don&#39;t follow the &lt;a href=&quot;https://www.anthropic.com/engineering/building-effective-agents#agents&quot;&gt;&quot;here&#39;s your prompt, here&#39;s a bag of tools, loop until you hit the goal&quot;&lt;/a&gt; pattern. Rather, they are comprised of mostly just software.&lt;/p&gt; 
&lt;p&gt;So, I set out to answer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city&#39;s major airports, we&#39;re glad you&#39;re here.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href=&quot;https://github.com/iantbutler01&quot;&gt;@iantbutler01&lt;/a&gt;, &lt;a href=&quot;https://github.com/tnm&quot;&gt;@tnm&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/hellovai&quot;&gt;@hellovai&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/stantonk&quot;&gt;@stantonk&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/balanceiskey&quot;&gt;@balanceiskey&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/AdjectiveAllison&quot;&gt;@AdjectiveAllison&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/pfbyjy&quot;&gt;@pfbyjy&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/a-churchill&quot;&gt;@a-churchill&lt;/a&gt;, and the SF MLOps community for early feedback on this guide.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;The Short Version: The 12 Factors&lt;/h2&gt; 
&lt;p&gt;Even if LLMs &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter&quot;&gt;continue to get exponentially more powerful&lt;/a&gt;, there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md&quot;&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md&quot;&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md&quot;&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md&quot;&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md&quot;&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md&quot;&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md&quot;&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md&quot;&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md&quot;&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md&quot;&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md&quot;&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md&quot;&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md&quot;&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Nav&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/110-natural-language-tool-calls.png&quot; alt=&quot;factor 1&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/120-own-your-prompts.png&quot; alt=&quot;factor 2&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/130-own-your-context-building.png&quot; alt=&quot;factor 3&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/140-tools-are-just-structured-outputs.png&quot; alt=&quot;factor 4&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/150-unify-state.png&quot; alt=&quot;factor 5&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/160-pause-resume-with-simple-apis.png&quot; alt=&quot;factor 6&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/170-contact-humans-with-tools.png&quot; alt=&quot;factor 7&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/180-control-flow.png&quot; alt=&quot;factor 8&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/190-factor-9-errors-static.png&quot; alt=&quot;factor 9&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/1a0-small-focused-agents.png&quot; alt=&quot;factor 10&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/1b0-trigger-from-anywhere.png&quot; alt=&quot;factor 11&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/1c0-stateless-reducer.png&quot; alt=&quot;factor 12&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How we got here&lt;/h2&gt; 
&lt;p&gt;For a deeper dive on my agent journey and what led us here, check out &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md&quot;&gt;A Brief History of Software&lt;/a&gt; - a quick summary here:&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;We&#39;re gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I&#39;ll start by pointing out that...well...software is a directed graph. There&#39;s a reason we used to represent programs as flow charts.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/010-software-dag.png&quot; alt=&quot;010-software-dag&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;From code to DAGs&lt;/h3&gt; 
&lt;p&gt;Around 20 years ago, we started to see DAG orchestrators become popular. We&#39;re talking classics like &lt;a href=&quot;https://airflow.apache.org/&quot;&gt;Airflow&lt;/a&gt;, &lt;a href=&quot;https://www.prefect.io/&quot;&gt;Prefect&lt;/a&gt;, some predecessors, and some newer ones like (&lt;a href=&quot;https://dagster.io/&quot;&gt;dagster&lt;/a&gt;, &lt;a href=&quot;https://www.inngest.com/&quot;&gt;inggest&lt;/a&gt;, &lt;a href=&quot;https://www.windmill.dev/&quot;&gt;windmill&lt;/a&gt;). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/015-dag-orchestrators.png&quot; alt=&quot;015-dag-orchestrators&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;I&#39;m not the first &lt;a href=&quot;https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;amp;t=73&quot;&gt;person to say this&lt;/a&gt;, but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/025-agent-dag.png&quot; alt=&quot;025-agent-dag&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;And let the LLM make decisions in real time to figure out the path&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/026-agent-dag-lines.png&quot; alt=&quot;026-agent-dag-lines&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;The promise here is that you write less software, you just give the LLM the &quot;edges&quot; of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.&lt;/p&gt; 
&lt;h3&gt;Agents as loops&lt;/h3&gt; 
&lt;p&gt;As we&#39;ll see later, it turns out this doesn&#39;t quite work.&lt;/p&gt; 
&lt;p&gt;Let&#39;s dive one step deeper - with agents you&#39;ve got this loop consisting of 3 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LLM determines the next step in the workflow, outputting structured json (&quot;tool calling&quot;)&lt;/li&gt; 
 &lt;li&gt;Deterministic code executes the tool call&lt;/li&gt; 
 &lt;li&gt;The result is appended to the context window&lt;/li&gt; 
 &lt;li&gt;Repeat until the next step is determined to be &quot;done&quot;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;initial_event = {&quot;message&quot;: &quot;...&quot;}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === &quot;done&quot;):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we&#39;re done.&lt;/p&gt; 
&lt;p&gt;Here&#39;s a multi-step example:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd&quot;&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif&quot; alt=&quot;027-agent-loop-animation&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif&quot;&gt;GIF Version&lt;/a&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif&quot; alt=&quot;027-agent-loop-animation&quot; /&gt;]&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Why 12-factor agents?&lt;/h2&gt; 
&lt;p&gt;At the end of the day, this approach just doesn&#39;t work as well as we want it to.&lt;/p&gt; 
&lt;p&gt;In building HumanLayer, I&#39;ve talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Decide you want to build an agent&lt;/li&gt; 
 &lt;li&gt;Product design, UX mapping, what problems to solve&lt;/li&gt; 
 &lt;li&gt;Want to move fast, so grab $FRAMEWORK and &lt;em&gt;get to building&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Get to 70-80% quality bar&lt;/li&gt; 
 &lt;li&gt;Realize that 80% isn&#39;t good enough for most customer-facing features&lt;/li&gt; 
 &lt;li&gt;Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.&lt;/li&gt; 
 &lt;li&gt;Start over from scratch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;Random Disclaimers&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I&#39;m not sure the exact right place to say this, but here seems as good as any: &lt;strong&gt;this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them&lt;/strong&gt;. They enable incredible things and have accelerated the AI ecosystem.&lt;/p&gt; 
 &lt;p&gt;I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better.&lt;/p&gt; 
 &lt;p&gt;Especially for builders who want to move fast but need deep control.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 2&lt;/strong&gt;: I&#39;m not going to talk about MCP. I&#39;m sure you can see where it fits in.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 3&lt;/strong&gt;: I&#39;m using mostly typescript, for &lt;a href=&quot;https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30&quot;&gt;reasons&lt;/a&gt; but all this stuff works in python or any other language you prefer.&lt;/p&gt; 
 &lt;p&gt;Anyways back to the thing...&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Design Patterns for great LLM applications&lt;/h3&gt; 
&lt;p&gt;After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;There are some core things that make agents great&lt;/li&gt; 
 &lt;li&gt;Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive&lt;/li&gt; 
 &lt;li&gt;There are some core principles that make agents great, and you will get most/all of them if you pull in a framework&lt;/li&gt; 
 &lt;li&gt;BUT, the fastest way I&#39;ve seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/li&gt; 
 &lt;li&gt;These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don&#39;t have an AI background&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;The fastest way I&#39;ve seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;The 12 Factors (again)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md&quot;&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md&quot;&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md&quot;&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md&quot;&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md&quot;&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md&quot;&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md&quot;&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md&quot;&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md&quot;&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md&quot;&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md&quot;&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md&quot;&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md&quot;&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Honorable Mentions / other advice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/raw/main/content/appendix-13-pre-fetch.md&quot;&gt;Factor 13: Pre-fetch all the context you might need&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute to this guide &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://youtu.be/8bIHcttkOTE&quot;&gt;I talked about a lot of this on an episode of the Tool Use podcast&lt;/a&gt; in March 2025&lt;/li&gt; 
 &lt;li&gt;I write about some of this stuff at &lt;a href=&quot;https://theouterloop.substack.com&quot;&gt;The Outer Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;I do &lt;a href=&quot;https://github.com/hellovai/ai-that-works/tree/main&quot;&gt;webinars about Maximizing LLM Performance&lt;/a&gt; with &lt;a href=&quot;https://github.com/hellovai&quot;&gt;@hellovai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We build OSS agents with this methodology under &lt;a href=&quot;https://github.com/got-agents/agents&quot;&gt;got-agents/agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We ignored all our own advice and built a &lt;a href=&quot;https://github.com/humanlayer/kubechain&quot;&gt;framework for running distributed agents in kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Other links from this guide: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://12factor.net&quot;&gt;12 Factor Apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.anthropic.com/engineering/building-effective-agents#agents&quot;&gt;Building Effective Agents (Anthropic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://thedataexchange.media/baml-revolution-in-ai-engineering/&quot;&gt;Prompts are Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://tomasp.net/blog/2015/library-frameworks/&quot;&gt;Library patterns: Why frameworks are evil&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction&quot;&gt;The Wrong Abstraction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/dexhorthy/mailcrew&quot;&gt;Mailcrew Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=f_cKnoPC_Oo&quot;&gt;Mailcrew Demo Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://x.com/chainlit_io/status/1858613325921480922&quot;&gt;Chainlit Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e&quot;&gt;TypeScript for LLMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.boundaryml.com/blog/schema-aligned-parsing&quot;&gt;Schema Aligned Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode&quot;&gt;Function Calling vs Structured Outputs vs JSON Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/boundaryml/baml&quot;&gt;BAML on GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/&quot;&gt;OpenAI JSON vs Function Calling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards&quot;&gt;Outer Loop Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://airflow.apache.org/&quot;&gt;Airflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.prefect.io/&quot;&gt;Prefect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://dagster.io/&quot;&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.inngest.com/&quot;&gt;Inngest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.windmill.dev/&quot;&gt;Windmill&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://aiagentindex.mit.edu/&quot;&gt;The AI Agent Index (MIT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8&quot;&gt;NotebookLM on Finding Model Capability Boundaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to 12-factor agents!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dexhorthy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/3730605?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;dexhorthy&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Sypherd&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/50557586?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Sypherd&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/tofaramususa&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/66259401?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;tofaramususa&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/a-churchill&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/18105223?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;a-churchill&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Elijas&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/4084885?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;Elijas&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/hugolmn&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/39267118?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;hugolmn&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jeremypeters&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/1882972?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;jeremypeters&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/kndl&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/380402?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;kndl&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/maciejkos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16674643?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;maciejkos&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pfbyjy&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/85041180?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;pfbyjy&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/0xRaduan&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/36044389?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;0xRaduan&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zyuanlim&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/7169731?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;zyuanlim&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/lombardo-chcg&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/15862501?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;lombardo-chcg&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sahanatvessel&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/160066852?v=4&amp;amp;s=80&quot; width=&quot;80px&quot; alt=&quot;sahanatvessel&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;This is the current version of 12-factor agents, version 1.0. There is a draft of version 1.1 on the &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/tree/v1.1&quot;&gt;v1.1 branch&lt;/a&gt;. There are a few &lt;a href=&quot;https://github.com/humanlayer/12-factor-agents/issues?q=is%3Aissue%20state%3Aopen%20label%3Aversion%3A%3A1.1&quot;&gt;Issues to track work on v1.1&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content and images are licensed under a &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;CC BY-SA 4.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Code is licensed under the &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kilo-Org/kilocode</title>
      <link>https://github.com/Kilo-Org/kilocode</link>
      <description>&lt;p&gt;Open Source AI coding assistant for planning, building, and fixing code. We&#39;re a superset of Roo, Cline, and our own features. Follow us: kilocode.ai/social&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code&quot;&gt;&lt;img src=&quot;https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace&quot; alt=&quot;VS Code Marketplace&quot; /&gt;&lt;/a&gt; 
 &lt;!--&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Get%20$20%20of%20free%20tokens-green?logo=claude&amp;logoColor=white&quot; alt=&quot;Get $20 of tokens for free&quot;&gt;&lt;/a&gt;--&gt; &lt;a href=&quot;https://x.com/kilo_code&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;amp;logo=x&amp;amp;color=555&quot; alt=&quot;X (Twitter)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://blog.kilocode.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Blog-555?style=flat&amp;amp;logo=substack&amp;amp;logoColor=white&quot; alt=&quot;Substack Blog&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://kilocode.ai/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1349288496988160052?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.reddit.com/r/kilocode/&quot;&gt;&lt;img src=&quot;https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;amp;logo=reddit&amp;amp;logoColor=white&quot; alt=&quot;Reddit&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;🚀 Kilo Code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open-source VS Code AI agent. Merged features from &lt;a href=&quot;https://github.com/RooVetGit/Roo-Code&quot;&gt;Roo Code&lt;/a&gt; and &lt;a href=&quot;https://github.com/cline/cline&quot;&gt;Cline&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;✨ Generate code from natural language&lt;/li&gt; 
 &lt;li&gt;✅ Checks its own work&lt;/li&gt; 
 &lt;li&gt;🧪 Run terminal commands&lt;/li&gt; 
 &lt;li&gt;🌐 Automate the browser&lt;/li&gt; 
 &lt;li&gt;🤖 Latest AI models&lt;/li&gt; 
 &lt;li&gt;🎁 API keys optional&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;$20 free credits for Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-4.1&lt;/strong&gt;&lt;br /&gt;Share feedback and earn more credits!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif&quot; width=&quot;100%&quot; /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kilocode.ai/vscode-marketplace?utm_source=Readme&quot;&gt;VS Code Marketplace&lt;/a&gt; (download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://kilocode.ai&quot;&gt;Official KiloCode.ai Home page&lt;/a&gt; (learn more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation:&lt;/strong&gt; Generate code using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation:&lt;/strong&gt; Automate repetitive coding tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Refactoring:&lt;/strong&gt; Refactor and improve existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Marketplace&lt;/strong&gt;: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Mode&lt;/strong&gt;: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get started with Kilo Code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Kilo Code extension from the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code&quot;&gt;VS Code Marketplace&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in with your Google Account to get $20 in free Claude 4 Sonnet &amp;amp; Opus credits.&lt;/li&gt; 
 &lt;li&gt;Start using the extension. Here&#39;s a video to help you get started (just click on the image below and you&#39;ll be redirected to YouTube):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/pqGfYXgrhig&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg&quot; alt=&quot;Watch the video&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Difference between Roo Code and Cline&lt;/h2&gt; 
&lt;p&gt;We&#39;re doing our best to combine the best of both worlds. Kilo Code combines all features of Cline, Roo, and adds a few of our own additions. It has the best features of both, and we&#39;re working on making it even better!&lt;/p&gt; 
&lt;p&gt;No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Claude 4 Sonnet and Opus and Gemini 2.5 Pro.&lt;/p&gt; 
&lt;p&gt;Kilo Code is a direct fork from Roo Code, but also includes the following features from Cline (and more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;System notifications: Get notified when the agent is done with a task.&lt;/li&gt; 
 &lt;li&gt;Easy model connection: with bigger free tier.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extension Development&lt;/h2&gt; 
&lt;p&gt;For details on building and developing the extension, see &lt;a href=&quot;https://raw.githubusercontent.com/Kilo-Org/kilocode/main/DEVELOPMENT.md&quot;&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDC-AI/ComfyUI-Copilot</title>
      <link>https://github.com/AIDC-AI/ComfyUI-Copilot</link>
      <description>&lt;p&gt;An AI-powered custom node for ComfyUI designed to enhance workflow automation and provide intelligent assistance&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/README_CN.md&quot;&gt;中文&lt;/a&gt; ｜ English&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;🎯 ComfyUI-Copilot: Your Intelligent Assistant for Comfy-UI&lt;/h1&gt; 
 &lt;!-- Enhancing Image Generation Development with Smart Assistance --&gt; 
 &lt;h4 align=&quot;center&quot;&gt; 
  &lt;div align=&quot;center&quot;&gt; 
   &lt;img src=&quot;https://img.shields.io/badge/Version-1.0.0-blue.svg?sanitize=true&quot; alt=&quot;Version&quot; /&gt; 
   &lt;img src=&quot;https://img.shields.io/badge/License-MIT-green.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt; 
   &lt;img src=&quot;https://img.shields.io/github/stars/AIDC-AI/ComfyUI-Copilot?color=yellow&quot; alt=&quot;Stars&quot; /&gt; 
   &lt;img src=&quot;https://img.shields.io/github/issues/AIDC-AI/ComfyUI-Copilot?color=red&quot; alt=&quot;Issues&quot; /&gt; 
   &lt;img src=&quot;https://img.shields.io/badge/python-3.10%2B-purple.svg?sanitize=true&quot; alt=&quot;Python&quot; /&gt; 
  &lt;/div&gt;&lt;/h4&gt; 
 &lt;p&gt;👾 &lt;em&gt;&lt;strong&gt;Alibaba International Digital Commerce&lt;/strong&gt;&lt;/em&gt; 👾&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;octocat&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&quot; /&gt;) &lt;a href=&quot;https://github.com/AIDC-AI/ComfyUI-Copilot&quot;&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/0372faf4-eb64-4aad-82e6-5fd69f349c2c&quot;&gt;https://github.com/user-attachments/assets/0372faf4-eb64-4aad-82e6-5fd69f349c2c&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Introduction&lt;/h2&gt; 
&lt;p&gt;Welcome to &lt;strong&gt;ComfyUI-Copilot&lt;/strong&gt;, an intelligent assistant built on the Comfy-UI framework that simplifies and enhances the AI algorithm debugging and deployment process through natural language interactions.&lt;/p&gt; 
&lt;p&gt;Whether it&#39;s generating text, images, or audio, ComfyUI-Copilot offers intuitive node recommendations, workflow building aids, and model querying services to streamline your development process.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/Framework.png&quot; /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤔 Why Choose ComfyUI-Copilot?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🍀 &lt;strong&gt;Ease of Use&lt;/strong&gt;: Lower the barriers to entry with natural language interaction, making Comfy-UI accessible even for beginners.&lt;/li&gt; 
 &lt;li&gt;🍀 &lt;strong&gt;Smart Recommendations&lt;/strong&gt;: Leverage AI-driven node suggestions and workflow implementations to boost development efficiency.&lt;/li&gt; 
 &lt;li&gt;🍀 &lt;strong&gt;Real-Time Assistance&lt;/strong&gt;: Benefit from round-the-clock interactive support to address any issues encountered during development.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Updates&lt;/h2&gt; 
&lt;h3&gt;2025.05.16 Release&lt;/h3&gt; 
&lt;h4&gt;✨ New Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;GenLab History: Support querying historical results after parameter exploration.&lt;/li&gt; 
 &lt;li&gt;Personalized workflow generation: Users can input their own requirements, and a large language model generates a tailored workflow for them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/GenLabHistory.png&quot; width=&quot;50%&quot; /&gt; 
&lt;/div&gt; 
&lt;h3&gt;2025.04.28 Release&lt;/h3&gt; 
&lt;h4&gt;✨ New Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our frontend UI is embedded within the ComfyUI interface. Simply click on the ComfyUI-Copilot icon in the left sidebar to launch our service.&lt;/li&gt; 
 &lt;li&gt;The UI automatically adapts to ComfyUI&#39;s black/light theme, switching background colors accordingly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_ui_icon.png&quot; /&gt; 
&lt;h3&gt;2025.04.08 Release&lt;/h3&gt; 
&lt;h4&gt;✨ New Features&lt;/h4&gt; 
&lt;h5&gt;1. 🎉 GenLab Launch&lt;/h5&gt; 
&lt;p&gt;We are excited to announce that GenLab is now officially live, bringing two powerful new features:&lt;/p&gt; 
&lt;h6&gt;a. 🔍 Parameter Exploration&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;Now you can optimize parameters for executable workflows&lt;/li&gt; 
 &lt;li&gt;How to use: 
  &lt;ul&gt; 
   &lt;li&gt;Click on the node you wish to explore&lt;/li&gt; 
   &lt;li&gt;Select the parameters to explore&lt;/li&gt; 
   &lt;li&gt;Set the parameter value ranges&lt;/li&gt; 
   &lt;li&gt;The system will automatically batch execute different parameter combinations&lt;/li&gt; 
   &lt;li&gt;Generated results support visual comparison, helping you quickly find the optimal parameter configuration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/8069744a-411e-4a25-b1a5-4503a303bc6c&quot;&gt;https://github.com/user-attachments/assets/8069744a-411e-4a25-b1a5-4503a303bc6c&lt;/a&gt;&lt;/p&gt; 
&lt;h6&gt;b. ✏️ Prompt Rewriting Assistant&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;New feature helps users generate rich, high-quality &quot;spells&quot;&lt;/li&gt; 
 &lt;li&gt;Optimize your prompts to enhance the quality and diversity of generated content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/85decdbf-9ae5-4c78-818b-8db444ed4e7b&quot;&gt;https://github.com/user-attachments/assets/85decdbf-9ae5-4c78-818b-8db444ed4e7b&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;🛠️ Bug Fixes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 Fixed multiple known issues, improving system stability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2025.02.27 Release&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Model Support&lt;/strong&gt;: Added DeepSeek AI and Qwen-plus models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node Installation Guide&lt;/strong&gt;: Smart redirection to GitHub repos or Google search results for uninstalled nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt Generation&lt;/strong&gt;: Enhanced SD prompt generation and error log analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Fixed lag issues reported in GitHub Issues when using Copilot&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;: Implemented multilingual responses for node queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subgraph Recommendation&lt;/strong&gt;: Redesigned downstream subgraph generation with improved filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Database&lt;/strong&gt;: Added coverage for 60,000+ LoRA and Checkpoint models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔥 Core Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Interactive Q&amp;amp;A Bot&lt;/strong&gt;: Access a robust Q&amp;amp;A platform where users can inquire about model intricacies, node details, and parameter utilization with ease.&lt;/li&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Natural Language Node Suggestions&lt;/strong&gt;: Employ our advanced search mechanism to swiftly identify desired nodes and enhance workflow construction efficacy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfycopilot_nodes_recommend.gif&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;💎 &lt;strong&gt;Node Query System&lt;/strong&gt;: Dive deeper into nodes by exploring their explanations, parameter definitions, usage tips, and downstream workflow recommendations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfycopilot_nodes_search.gif&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;💎 &lt;strong&gt;Smart Workflow Assistance&lt;/strong&gt;: Automatically discern developer needs to recommend and build fitting workflow frameworks, minimizing manual setup time.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💎 &lt;strong&gt;Model Querying&lt;/strong&gt;: Prompt Copilot to seek foundational models and &#39;lora&#39; based on requirements.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💎 &lt;strong&gt;Up-and-Coming Features&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Automated Parameter Tuning&lt;/strong&gt;: Exploit machine learning algorithms for seamless analysis and optimization of critical workflow parameters.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Error Diagnosis and Fix Suggestions&lt;/strong&gt;: Receive comprehensive error insights and corrective advice to swiftly pinpoint and resolve issues.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Repository Overview&lt;/strong&gt;: Visit the &lt;a href=&quot;https://github.com/AIDC-AI/ComfyUI-Copilot&quot;&gt;GitHub Repository&lt;/a&gt; to access the complete codebase.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ComfyUI/custom_nodes
git clone git@github.com:AIDC-AI/ComfyUI-Copilot.git
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ComfyUI/custom_nodes
git clone https://github.com/AIDC-AI/ComfyUI-Copilot
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ComfyUI Manager&lt;/strong&gt;: Open ComfyUI Manager, click on Custom Nodes Manager, search for ComfyUI-Copilot, and click the install button. &lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager.png&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager_install.png&quot; /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Activation&lt;/strong&gt;: After running the ComfyUI project, find the Copilot activation button at the top-right corner of the board to launch its service.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/start.png&quot; /&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;KeyGeneration&lt;/strong&gt;：Enter&amp;nbsp;your&amp;nbsp;email&amp;nbsp;address&amp;nbsp;on&amp;nbsp;the&amp;nbsp;link,&amp;nbsp;the&amp;nbsp;api-key&amp;nbsp;will&amp;nbsp;automatically&amp;nbsp;be&amp;nbsp;sent&amp;nbsp;to&amp;nbsp;your&amp;nbsp;email&amp;nbsp;address&amp;nbsp;later.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/keygen.png&quot; /&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; This project is in its early stages. Please regularly update to the latest code to access new features. You can either use &lt;code&gt;git pull&lt;/code&gt; to fetch the latest code or click &quot;Update&quot; in the ComfyUI Manager.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributions&lt;/h2&gt; 
&lt;p&gt;We welcome any form of contribution! Feel free to make issues, pull requests, or suggest new features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📞 Contact Us&lt;/h2&gt; 
&lt;p&gt;For any queries or suggestions, please feel free to contact: &lt;a href=&quot;mailto:ComfyUI-Copilot@service.alibaba.com&quot;&gt;ComfyUI-Copilot@service.alibaba.com&lt;/a&gt;.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/qrcode.png&quot; width=&quot;20%&quot; /&gt; 
 &lt;p&gt;WeChat&lt;/p&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/discordqrcode.png&quot; width=&quot;20%&quot; /&gt; 
 &lt;p&gt;Discord&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📚 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#AIDC-AI/ComfyUI-Copilot&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=AIDC-AI/ComfyUI-Copilot&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dyad-sh/dyad</title>
      <link>https://github.com/dyad-sh/dyad</link>
      <description>&lt;p&gt;Free, local, open-source AI app builder ✨ v0 / lovable / Bolt alternative 🌟 Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dyad&lt;/h1&gt; 
&lt;p&gt;Dyad is a local, open-source AI app builder. It&#39;s fast, private, and fully under your control — like Lovable, v0, or Bolt, but running right on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://dyad.sh/&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790&quot; alt=&quot;Image&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More info at: &lt;a href=&quot;http://dyad.sh/&quot;&gt;http://dyad.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡️ &lt;strong&gt;Local&lt;/strong&gt;: Fast, private and no lock-in.&lt;/li&gt; 
 &lt;li&gt;🛠 &lt;strong&gt;Bring your own keys&lt;/strong&gt;: Use your own AI API keys — no vendor lock-in.&lt;/li&gt; 
 &lt;li&gt;🖥️ &lt;strong&gt;Cross-platform&lt;/strong&gt;: Easy to run on Mac or Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Download&lt;/h2&gt; 
&lt;p&gt;No sign-up required. Just download and go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.dyad.sh/#download&quot;&gt;👉 Download for your platform&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;🤝 Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community of AI app builders on &lt;strong&gt;Reddit&lt;/strong&gt;: &lt;a href=&quot;https://www.reddit.com/r/dyadbuilders/&quot;&gt;r/dyadbuilders&lt;/a&gt; - share your projects and get help from the community!&lt;/p&gt; 
&lt;h2&gt;🛠️ Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dyad&lt;/strong&gt; is open-source (Apache 2.0 licensed).&lt;/p&gt; 
&lt;p&gt;If you&#39;re interested in contributing to dyad, please read our &lt;a href=&quot;https://raw.githubusercontent.com/dyad-sh/dyad/main/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linshenkx/prompt-optimizer</title>
      <link>https://github.com/linshenkx/prompt-optimizer</link>
      <description>&lt;p&gt;一款提示词优化器，助力于编写高质量的提示词&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prompt Optimizer (提示词优化器) 🚀&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/README_EN.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/README.md&quot;&gt;中文&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/linshenkx/prompt-optimizer/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/linshenkx/prompt-optimizer&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/chrome-web-store/users/cakkkhboolfnadechdlgdcnjammejlna?style=flat&amp;amp;label=Chrome%20Users&amp;amp;link=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2F%25E6%258F%2590%25E7%25A4%25BA%25E8%25AF%258D%25E4%25BC%2598%25E5%258C%2596%25E5%2599%25A8%2Fcakkkhboolfnadechdlgdcnjammejlna&quot; alt=&quot;Chrome Web Store Users&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/13813&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13813&quot; alt=&quot;linshenkx%2Fprompt-optimizer | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/linshen/prompt-optimizer&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/linshen/prompt-optimizer&quot; alt=&quot;Docker Pulls&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/forks/linshenkx/prompt-optimizer?style=flat&quot; alt=&quot;GitHub forks&quot; /&gt; &lt;a href=&quot;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Vercel-indigo?style=flat&amp;amp;logo=vercel&quot; alt=&quot;Deploy with Vercel&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://prompt.always200.com&quot;&gt;在线体验&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B&quot;&gt;快速开始&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&quot;&gt;常见问题&lt;/a&gt; | &lt;a href=&quot;https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna&quot;&gt;Chrome插件&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/dev.md&quot;&gt;开发文档&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md&quot;&gt;Vercel部署指南&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/mcp-server.md&quot;&gt;MCP部署使用说明&lt;/a&gt; | &lt;a href=&quot;https://deepwiki.com/linshenkx/prompt-optimizer&quot;&gt;DeepWiki文档&lt;/a&gt; | &lt;a href=&quot;https://zread.ai/linshenkx/prompt-optimizer&quot;&gt;ZRead文档&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📖 项目简介&lt;/h2&gt; 
&lt;p&gt;Prompt Optimizer是一个强大的AI提示词优化工具，帮助你编写更好的AI提示词，提升AI输出质量。支持Web应用、桌面应用、Chrome插件和Docker部署四种使用方式。&lt;/p&gt; 
&lt;h3&gt;🎥 功能演示&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;b&gt;1. 角色扮演对话：激发小模型潜力&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;在追求成本效益的生产或注重隐私的本地化场景中，结构化的提示词能让小模型稳定地进入角色，提供沉浸式、高一致性的角色扮演体验，有效激发其潜力。&lt;/p&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/cat-maid-roleplay.png&quot; alt=&quot;猫女仆角色扮演演示&quot; width=&quot;85%&quot; /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;b&gt;2. 知识图谱提取：保障生产环境的稳定性&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;在需要程序化处理的生产环境中，高质量的提示词能显著降低对模型智能程度的要求，使得更经济的小模型也能稳定输出可靠的指定格式。本工具旨在辅助开发者快速达到此目的，从而加速开发、保障稳定，实现降本增效。&lt;/p&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/knowledge-graph-extractor.png&quot; alt=&quot;知识图谱提取演示&quot; width=&quot;85%&quot; /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;b&gt;3. 诗歌写作：辅助创意探索与需求定制&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;当面对一个强大的AI，我们的目标不只是得到一个“好”答案，而是得到一个“我们想要的”独特答案。本工具能帮助用户将一个模糊的灵感（如“写首诗”）细化为具体的需求（关于什么主题、何种意象、何种情感），辅助您探索、发掘并精确表达自己的创意，与AI共创独一无二的作品。&lt;/p&gt; 
 &lt;img src=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/images/demo/poetry-writing.png&quot; alt=&quot;诗歌创作演示&quot; width=&quot;85%&quot; /&gt; 
&lt;/div&gt; 
&lt;h2&gt;✨ 核心特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;智能优化&lt;/strong&gt;：一键优化提示词，支持多轮迭代改进，提升AI回复准确度&lt;/li&gt; 
 &lt;li&gt;📝 &lt;strong&gt;双模式优化&lt;/strong&gt;：支持系统提示词优化和用户提示词优化，满足不同使用场景&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;对比测试&lt;/strong&gt;：支持原始提示词和优化后提示词的实时对比，直观展示优化效果&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;多模型集成&lt;/strong&gt;：支持OpenAI、Gemini、DeepSeek、智谱AI、SiliconFlow等主流AI模型&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;安全架构&lt;/strong&gt;：纯客户端处理，数据直接与AI服务商交互，不经过中间服务器&lt;/li&gt; 
 &lt;li&gt;📱 &lt;strong&gt;多端支持&lt;/strong&gt;：同时提供Web应用、桌面应用、Chrome插件和Docker部署四种使用方式&lt;/li&gt; 
 &lt;li&gt;🔐 &lt;strong&gt;访问控制&lt;/strong&gt;：支持密码保护功能，保障部署安全&lt;/li&gt; 
 &lt;li&gt;🧩 &lt;strong&gt;MCP协议支持&lt;/strong&gt;：支持Model Context Protocol (MCP) 协议，可与Claude Desktop等MCP兼容应用集成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;h3&gt;1. 使用在线版本（推荐）&lt;/h3&gt; 
&lt;p&gt;直接访问：&lt;a href=&quot;https://prompt.always200.com&quot;&gt;https://prompt.always200.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;项目是纯前端项目，所有数据只存储在浏览器本地，不会上传至任何服务器，因此直接使用在线版本也是安全可靠的&lt;/p&gt; 
&lt;h3&gt;2. Vercel部署&lt;/h3&gt; 
&lt;p&gt;方式1：一键部署到自己的Vercel(方便，但后续无法自动更新)： &lt;a href=&quot;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Flinshenkx%2Fprompt-optimizer&quot;&gt;&lt;img src=&quot;https://vercel.com/button&quot; alt=&quot;部署到 Vercel&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;方式2: Fork项目后在Vercel中导入（推荐，但需参考部署文档进行手动设置）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;先Fork项目到自己的GitHub&lt;/li&gt; 
 &lt;li&gt;然后在Vercel中导入该项目&lt;/li&gt; 
 &lt;li&gt;可跟踪源项目更新，便于同步最新功能和修复&lt;/li&gt; 
 &lt;li&gt;配置环境变量： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ACCESS_PASSWORD&lt;/code&gt;：设置访问密码，启用访问限制&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;VITE_OPENAI_API_KEY&lt;/code&gt;等：配置各AI服务商的API密钥&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详细的部署步骤和注意事项，请查看：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md&quot;&gt;Vercel部署指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. 下载桌面应用&lt;/h3&gt; 
&lt;p&gt;从 &lt;a href=&quot;https://github.com/linshenkx/prompt-optimizer/releases&quot;&gt;GitHub Releases&lt;/a&gt; 下载最新版本。我们为各平台提供&lt;strong&gt;安装程序&lt;/strong&gt;和&lt;strong&gt;压缩包&lt;/strong&gt;两种格式。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;安装程序 (推荐)&lt;/strong&gt;: 如 &lt;code&gt;*.exe&lt;/code&gt;, &lt;code&gt;*.dmg&lt;/code&gt;, &lt;code&gt;*.AppImage&lt;/code&gt; 等。&lt;strong&gt;强烈推荐使用此方式，因为它支持自动更新&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;压缩包&lt;/strong&gt;: 如 &lt;code&gt;*.zip&lt;/code&gt;。解压即用，但无法自动更新。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;桌面应用核心优势&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;无跨域限制&lt;/strong&gt;：作为原生桌面应用，它能彻底摆脱浏览器跨域（CORS）问题的困扰。这意味着您可以直接连接任何AI服务提供商的API，包括本地部署的Ollama或有严格安全策略的商业API，获得最完整、最稳定的功能体验。&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;自动更新&lt;/strong&gt;：通过安装程序（如 &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dmg&lt;/code&gt;）安装的版本，能够自动检查并更新到最新版。&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;独立运行&lt;/strong&gt;：无需依赖浏览器，提供更快的响应和更佳的性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. 安装Chrome插件&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;从Chrome商店安装（由于审批较慢，可能不是最新的）：&lt;a href=&quot;https://chromewebstore.google.com/detail/prompt-optimizer/cakkkhboolfnadechdlgdcnjammejlna&quot;&gt;Chrome商店地址&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;点击图标即可打开提示词优化器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;5. Docker部署&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 Docker 部署命令&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 运行容器（默认配置）
docker run -d -p 8081:80 --restart unless-stopped --name prompt-optimizer linshen/prompt-optimizer

# 运行容器（配置API密钥和访问密码）
docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your_key \
  -e ACCESS_USERNAME=your_username \  # 可选，默认为&quot;admin&quot;
  -e ACCESS_PASSWORD=your_password \  # 设置访问密码
  --restart unless-stopped \
  --name prompt-optimizer \
  linshen/prompt-optimizer
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;国内镜像&lt;/strong&gt;: 如果Docker Hub访问较慢，可以将上述命令中的 &lt;code&gt;linshen/prompt-optimizer&lt;/code&gt; 替换为 &lt;code&gt;registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;6. Docker Compose部署&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 Docker Compose 部署步骤&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. 克隆仓库
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. 可选：创建.env文件配置API密钥和访问认证
cp env.local.example .env
# 编辑 .env 文件，填入实际的 API 密钥和配置

# 3. 启动服务
docker compose up -d

# 4. 查看日志
docker compose logs -f

# 5. 访问服务
Web 界面：http://localhost:8081
MCP 服务器：http://localhost:8081/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;你还可以直接编辑docker-compose.yml文件，自定义配置：&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 docker-compose.yml 示例&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;services:
  prompt-optimizer:
    # 使用Docker Hub镜像
    image: linshen/prompt-optimizer:latest
    # 或使用阿里云镜像（国内用户推荐）
    # image: registry.cn-guangzhou.aliyuncs.com/prompt-optimizer/prompt-optimizer:latest
    container_name: prompt-optimizer
    restart: unless-stopped
    ports:
      - &quot;8081:80&quot;  # Web应用端口（包含MCP服务器，通过/mcp路径访问）
    environment:
      # API密钥配置
      - VITE_OPENAI_API_KEY=your_openai_key
      - VITE_GEMINI_API_KEY=your_gemini_key
      # 访问控制（可选）
      - ACCESS_USERNAME=admin
      - ACCESS_PASSWORD=your_password
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;7. MCP Server 使用说明&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看 MCP Server 使用说明&lt;/summary&gt; 
 &lt;p&gt;Prompt Optimizer 现在支持 Model Context Protocol (MCP) 协议，可以与 Claude Desktop 等支持 MCP 的 AI 应用集成。&lt;/p&gt; 
 &lt;p&gt;当通过 Docker 运行时，MCP Server 会自动启动，并可通过 &lt;code&gt;http://ip:port/mcp&lt;/code&gt; 访问。&lt;/p&gt; 
 &lt;h4&gt;环境变量配置&lt;/h4&gt; 
 &lt;p&gt;MCP Server 需要配置 API 密钥才能正常工作。主要的 MCP 专属配置：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# MCP 服务器配置
MCP_DEFAULT_MODEL_PROVIDER=openai  # 可选值：openai, gemini, deepseek, siliconflow, zhipu, custom
MCP_LOG_LEVEL=info                 # 日志级别
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Docker 环境下使用 MCP&lt;/h4&gt; 
 &lt;p&gt;在 Docker 环境中，MCP Server 会与 Web 应用一起运行，您可以通过 Web 应用的相同端口访问 MCP 服务，路径为 &lt;code&gt;/mcp&lt;/code&gt;。&lt;/p&gt; 
 &lt;p&gt;例如，如果您将容器的 80 端口映射到主机的 8081 端口：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d -p 8081:80 \
  -e VITE_OPENAI_API_KEY=your-openai-key \
  -e MCP_DEFAULT_MODEL_PROVIDER=openai \
  --name prompt-optimizer \
  linshen/prompt-optimizer
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;那么 MCP Server 将可以通过 &lt;code&gt;http://localhost:8081/mcp&lt;/code&gt; 访问。&lt;/p&gt; 
 &lt;h4&gt;Claude Desktop 集成示例&lt;/h4&gt; 
 &lt;p&gt;要在 Claude Desktop 中使用 Prompt Optimizer，您需要在 Claude Desktop 的配置文件中添加服务配置。&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;找到 Claude Desktop 的配置目录：&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Windows: &lt;code&gt;%APPDATA%\Claude\services&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;macOS: &lt;code&gt;~/Library/Application Support/Claude/services&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;Linux: &lt;code&gt;~/.config/Claude/services&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;编辑或创建 &lt;code&gt;services.json&lt;/code&gt; 文件，添加以下内容：&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;services&quot;: [
    {
      &quot;name&quot;: &quot;Prompt Optimizer&quot;,
      &quot;url&quot;: &quot;http://localhost:8081/mcp&quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;请确保将 &lt;code&gt;localhost:8081&lt;/code&gt; 替换为您实际部署 Prompt Optimizer 的地址和端口。&lt;/p&gt; 
 &lt;h4&gt;可用工具&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;optimize-user-prompt&lt;/strong&gt;: 优化用户提示词以提高 LLM 性能&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;optimize-system-prompt&lt;/strong&gt;: 优化系统提示词以提高 LLM 性能&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;iterate-prompt&lt;/strong&gt;: 对已经成熟/完善的提示词进行定向迭代优化&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;更多详细信息，请查看 &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/mcp-server.md&quot;&gt;MCP 服务器用户指南&lt;/a&gt;。&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;⚙️ API密钥配置&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看API密钥配置方法&lt;/summary&gt; 
 &lt;h3&gt;方式一：通过界面配置（推荐）&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt;点击界面右上角的&quot;⚙️设置&quot;按钮&lt;/li&gt; 
  &lt;li&gt;选择&quot;模型管理&quot;选项卡&lt;/li&gt; 
  &lt;li&gt;点击需要配置的模型（如OpenAI、Gemini、DeepSeek等）&lt;/li&gt; 
  &lt;li&gt;在弹出的配置框中输入对应的API密钥&lt;/li&gt; 
  &lt;li&gt;点击&quot;保存&quot;即可&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;支持的模型：OpenAI、Gemini、DeepSeek、Zhipu智谱、SiliconFlow、自定义API（OpenAI兼容接口）&lt;/p&gt; 
 &lt;p&gt;除了API密钥，您还可以在模型配置界面为每个模型单独设置高级LLM参数。这些参数通过一个名为 &lt;code&gt;llmParams&lt;/code&gt; 的字段进行配置，它允许您以键值对的形式指定LLM SDK支持的任何参数，从而更精细地控制模型行为。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;高级LLM参数配置示例：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;OpenAI/兼容API&lt;/strong&gt;: &lt;code&gt;{&quot;temperature&quot;: 0.7, &quot;max_tokens&quot;: 4096, &quot;timeout&quot;: 60000}&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini&lt;/strong&gt;: &lt;code&gt;{&quot;temperature&quot;: 0.8, &quot;maxOutputTokens&quot;: 2048, &quot;topP&quot;: 0.95}&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;DeepSeek&lt;/strong&gt;: &lt;code&gt;{&quot;temperature&quot;: 0.5, &quot;top_p&quot;: 0.9, &quot;frequency_penalty&quot;: 0.1}&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;有关 &lt;code&gt;llmParams&lt;/code&gt; 的更详细说明和配置指南，请参阅 &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/llm-params-guide.md&quot;&gt;LLM参数配置指南&lt;/a&gt;。&lt;/p&gt; 
 &lt;h3&gt;方式二：通过环境变量配置&lt;/h3&gt; 
 &lt;p&gt;Docker部署时通过 &lt;code&gt;-e&lt;/code&gt; 参数配置环境变量：&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;-e VITE_OPENAI_API_KEY=your_key
-e VITE_GEMINI_API_KEY=your_key
-e VITE_DEEPSEEK_API_KEY=your_key
-e VITE_ZHIPU_API_KEY=your_key
-e VITE_SILICONFLOW_API_KEY=your_key
-e VITE_CUSTOM_API_KEY=your_custom_api_key
-e VITE_CUSTOM_API_BASE_URL=your_custom_api_base_url
-e VITE_CUSTOM_API_MODEL=your_custom_model_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;本地开发&lt;/h2&gt; 
&lt;p&gt;详细文档可查看 &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/dev.md&quot;&gt;开发文档&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看本地开发命令&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 1. 克隆项目
git clone https://github.com/linshenkx/prompt-optimizer.git
cd prompt-optimizer

# 2. 安装依赖
pnpm install

# 3. 启动开发服务
pnpm dev               # 主开发命令：构建core/ui并运行web应用
pnpm dev:web          # 仅运行web应用
pnpm dev:fresh        # 完整重置并重新启动开发环境
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🗺️ 开发路线&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; 基础功能开发&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Web应用发布&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Chrome插件发布&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; 国际化支持&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; 支持系统提示词优化和用户提示词优化&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; 桌面应用发布&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; mcp服务发布&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详细的项目状态可查看 &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project-status.md&quot;&gt;项目状态文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📖 相关文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/README.md&quot;&gt;文档索引&lt;/a&gt; - 所有文档的索引&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/technical-development-guide.md&quot;&gt;技术开发指南&lt;/a&gt; - 技术栈和开发规范&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/llm-params-guide.md&quot;&gt;LLM参数配置指南&lt;/a&gt; - 高级LLM参数配置详细说明&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/developer/project-structure.md&quot;&gt;项目结构&lt;/a&gt; - 详细的项目结构说明&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project/project-status.md&quot;&gt;项目状态&lt;/a&gt; - 当前进度和计划&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/project/prd.md&quot;&gt;产品需求&lt;/a&gt; - 产品需求文档&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md&quot;&gt;Vercel部署指南&lt;/a&gt; - Vercel部署详细说明&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href=&quot;https://star-history.com/#linshenkx/prompt-optimizer&amp;amp;Date&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date&amp;amp;theme=dark&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date&quot; /&gt; 
  &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=linshenkx/prompt-optimizer&amp;amp;type=Date&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看常见问题解答&lt;/summary&gt; 
 &lt;h3&gt;API连接问题&lt;/h3&gt; 
 &lt;h4&gt;Q1: 为什么配置好API密钥后仍然无法连接到模型服务？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 大多数连接失败是由&lt;strong&gt;跨域问题&lt;/strong&gt;（CORS）导致的。由于本项目是纯前端应用，浏览器出于安全考虑会阻止直接访问不同源的API服务。模型服务如未正确配置CORS策略，会拒绝来自浏览器的直接请求。&lt;/p&gt; 
 &lt;h4&gt;Q2: 如何解决本地Ollama的连接问题？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: Ollama完全支持OpenAI标准接口，只需配置正确的跨域策略：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;设置环境变量 &lt;code&gt;OLLAMA_ORIGINS=*&lt;/code&gt; 允许任意来源的请求&lt;/li&gt; 
  &lt;li&gt;如仍有问题，设置 &lt;code&gt;OLLAMA_HOST=0.0.0.0:11434&lt;/code&gt; 监听任意IP地址&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Q3: 如何解决商业API（如Nvidia的DS API、字节跳动的火山API）的跨域问题？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 这些平台通常有严格的跨域限制，推荐以下解决方案：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;使用Vercel代理&lt;/strong&gt;（便捷方案）&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;使用在线版本：&lt;a href=&quot;https://prompt.always200.com&quot;&gt;prompt.always200.com&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;或自行部署到Vercel平台&lt;/li&gt; 
    &lt;li&gt;在模型设置中勾选&quot;使用Vercel代理&quot;选项&lt;/li&gt; 
    &lt;li&gt;请求流向：浏览器→Vercel→模型服务提供商&lt;/li&gt; 
    &lt;li&gt;详细步骤请参考 &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/docs/user/deployment/vercel.md&quot;&gt;Vercel部署指南&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;使用自部署的API中转服务&lt;/strong&gt;（可靠方案）&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;部署如OneAPI等开源API聚合/代理工具&lt;/li&gt; 
    &lt;li&gt;在设置中配置为自定义API端点&lt;/li&gt; 
    &lt;li&gt;请求流向：浏览器→中转服务→模型服务提供商&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Q4: Vercel代理有什么缺点或风险？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 使用Vercel代理可能会触发某些模型服务提供商的风控机制。部分厂商可能会将来自Vercel的请求判定为代理行为，从而限制或拒绝服务。如遇此问题，建议使用自部署的中转服务。&lt;/p&gt; 
 &lt;h4&gt;Q5: 我已正确配置本地模型（如Ollama）的跨域策略，为什么使用在线版依然无法连接？&lt;/h4&gt; 
 &lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: 这是由浏览器的&lt;strong&gt;混合内容（Mixed Content）安全策略&lt;/strong&gt;导致的。出于安全考虑，浏览器会阻止安全的HTTPS页面（如在线版）向不安全的HTTP地址（如您的本地Ollama服务）发送请求。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;： 为了绕过此限制，您需要让应用和API处于同一种协议下（例如，都是HTTP）。推荐以下几种方式：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;使用桌面版&lt;/strong&gt;：桌面应用没有浏览器限制，是连接本地模型最稳定可靠的方式。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;docker部署&lt;/strong&gt;：docker部署也是http&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;使用Chrome插件&lt;/strong&gt;：插件在某些情况下也可以绕过部分安全限制。&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;🤝 参与贡献&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击查看贡献指南&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork 本仓库&lt;/li&gt; 
  &lt;li&gt;创建特性分支 (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;提交更改 (&lt;code&gt;git commit -m &#39;添加某个特性&#39;&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;推送到分支 (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;提交 Pull Request&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;提示：使用cursor工具开发时，建议在提交前:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;使用&quot;code_review&quot;规则进行代码审查&lt;/li&gt; 
  &lt;li&gt;按照审查报告格式检查: 
   &lt;ul&gt; 
    &lt;li&gt;变更的整体一致性&lt;/li&gt; 
    &lt;li&gt;代码质量和实现方式&lt;/li&gt; 
    &lt;li&gt;测试覆盖情况&lt;/li&gt; 
    &lt;li&gt;文档完善程度&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;根据审查结果进行优化后再提交&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;👏 贡献者名单&lt;/h2&gt; 
&lt;p&gt;感谢所有为项目做出贡献的开发者！&lt;/p&gt; 
&lt;a href=&quot;https://github.com/linshenkx/prompt-optimizer/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=linshenkx/prompt-optimizer&quot; alt=&quot;贡献者&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;📄 开源协议&lt;/h2&gt; 
&lt;p&gt;本项目采用 &lt;a href=&quot;https://raw.githubusercontent.com/linshenkx/prompt-optimizer/develop/LICENSE&quot;&gt;MIT&lt;/a&gt; 协议开源。&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;如果这个项目对你有帮助，请考虑给它一个 Star ⭐️&lt;/p&gt; 
&lt;h2&gt;👥 联系我们&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;提交 Issue&lt;/li&gt; 
 &lt;li&gt;发起 Pull Request&lt;/li&gt; 
 &lt;li&gt;加入讨论组&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>outline/outline</title>
      <link>https://github.com/outline/outline</link>
      <description>&lt;p&gt;The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/31465/34380645-bd67f474-eb0b-11e7-8d03-0151c1730654.png&quot; height=&quot;29&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;i&gt;A fast, collaborative, knowledge base for your team built using React and Node.js.&lt;br /&gt;Try out Outline using our hosted version at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;www.getoutline.com&lt;/a&gt;.&lt;/i&gt; &lt;br /&gt; &lt;img width=&quot;1640&quot; alt=&quot;screenshot&quot; src=&quot;https://user-images.githubusercontent.com/380914/110356468-26374600-7fef-11eb-9f6a-f2cc2c8c6590.png&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://circleci.com/gh/outline/outline&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/outline/outline.svg?style=shield&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://www.typescriptlang.org&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/%3C%2F%3E-TypeScript-%230074c1.svg?sanitize=true&quot; alt=&quot;TypeScript&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/prettier/prettier&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&quot; alt=&quot;Prettier&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg?sanitize=true&quot; alt=&quot;Styled Components&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://translate.getoutline.com/project/outline&quot; alt=&quot;Localized&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/outline/localized.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the source code that runs &lt;a href=&quot;https://www.getoutline.com&quot;&gt;&lt;strong&gt;Outline&lt;/strong&gt;&lt;/a&gt; and all the associated services. If you want to use Outline then you don&#39;t need to run this code, we offer a hosted version of the app at &lt;a href=&quot;https://www.getoutline.com&quot;&gt;getoutline.com&lt;/a&gt;. You can also find documentation on using Outline in &lt;a href=&quot;https://docs.getoutline.com/s/guide&quot;&gt;our guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to run your own copy of Outline or contribute to development then this is the place for you.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://docs.getoutline.com/s/hosting/&quot;&gt;documentation&lt;/a&gt; for running your own copy of Outline in a production configuration.&lt;/p&gt; 
&lt;p&gt;If you have questions or improvements for the docs please create a thread in &lt;a href=&quot;https://github.com/outline/outline/discussions&quot;&gt;GitHub discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;There is a short guide for &lt;a href=&quot;https://docs.getoutline.com/s/hosting/doc/local-development-5hEhFRXow7&quot;&gt;setting up a development environment&lt;/a&gt; if you wish to contribute changes, fixes, and improvements to Outline.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Outline is built and maintained by a small team – we&#39;d love your help to fix bugs and add features!&lt;/p&gt; 
&lt;p&gt;Before submitting a pull request &lt;em&gt;please&lt;/em&gt; discuss with the core team by creating or commenting in an issue on &lt;a href=&quot;https://www.github.com/outline/outline/issues&quot;&gt;GitHub&lt;/a&gt; – we&#39;d also love to hear from you in the &lt;a href=&quot;https://www.github.com/outline/outline/discussions&quot;&gt;discussions&lt;/a&gt;. This way we can ensure that an approach is agreed on before code is written. This will result in a much higher likelihood of your code being accepted.&lt;/p&gt; 
&lt;p&gt;If you’re looking for ways to get started, here&#39;s a list of ways to help us improve Outline:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/docs/TRANSLATION.md&quot;&gt;Translation&lt;/a&gt; into other languages&lt;/li&gt; 
 &lt;li&gt;Issues with &lt;a href=&quot;https://github.com/outline/outline/labels/good%20first%20issue&quot;&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt; label&lt;/li&gt; 
 &lt;li&gt;Performance improvements, both on server and frontend&lt;/li&gt; 
 &lt;li&gt;Developer happiness and documentation&lt;/li&gt; 
 &lt;li&gt;Bugs and other issues listed on GitHub&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in contributing or learning more about the Outline codebase please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/docs/ARCHITECTURE.md&quot;&gt;architecture document&lt;/a&gt; first for a high level overview of how the application is put together.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;In development Outline outputs simple logging to the console, prefixed by categories. In production it outputs JSON logs, these can be easily parsed by your preferred log ingestion pipeline.&lt;/p&gt; 
&lt;p&gt;HTTP logging is disabled by default, but can be enabled by setting the &lt;code&gt;DEBUG=http&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;We aim to have sufficient test coverage for critical parts of the application and aren&#39;t aiming for 100% unit test coverage. All API endpoints and anything authentication related should be thoroughly tested.&lt;/p&gt; 
&lt;p&gt;To add new tests, write your tests with &lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest&lt;/a&gt; and add a file with &lt;code&gt;.test.js&lt;/code&gt; extension next to the tested code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# To run all tests
make test

# To run backend tests in watch mode
make watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the test database is created with &lt;code&gt;make test&lt;/code&gt; you may individually run frontend and backend tests directly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# To run backend tests
yarn test:server

# To run a specific backend test
yarn test:server myTestFile

# To run frontend tests
yarn test:app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Migrations&lt;/h2&gt; 
&lt;p&gt;Sequelize is used to create and run migrations, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn sequelize migration:generate --name my-migration
yarn sequelize db:migrate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or to run migrations on test database:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;yarn sequelize db:migrate --env test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Activity&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/ff2e4e6918afff1acf9deb72d1ba6b071d586178.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Outline is &lt;a href=&quot;https://raw.githubusercontent.com/outline/outline/main/LICENSE&quot;&gt;BSL 1.1 licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MotiaDev/motia</title>
      <link>https://github.com/MotiaDev/motia</link>
      <description>&lt;p&gt;Modern Backend Framework that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system with built-in observability and state management.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://trendshift.io/repositories/14032&quot; style=&quot;margin-right:8px;&quot;&gt; &lt;img src=&quot;https://trendshift.io/api/badge/repositories/14032&quot; alt=&quot;Motia&quot; style=&quot;width: 250px; height: 55px; margin-right:8px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://vercel.com/blog/summer-2025-oss-program#motia&quot; target=&quot;_blank&quot; style=&quot;margin-left:8px;&quot;&gt; &lt;img alt=&quot;Vercel OSS Program&quot; src=&quot;https://vercel.com/oss/program-badge.svg?sanitize=true&quot; style=&quot;width: 250px; height: 55px; margin-left:8px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;a href=&quot;https://motia.dev&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/packages/docs/public/github-readme-banner.png&quot; alt=&quot;Motia Banner&quot; width=&quot;100%&quot; /&gt; &lt;/a&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt;🔥 A Modern Unified Backend Framework for APIs, background jobs, workflows, and Agents 🔥&lt;/strong&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.npmjs.com/package/motia&quot;&gt; &lt;img src=&quot;https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000&quot; alt=&quot;npm version&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/MotiaDev/motia/raw/main/LICENSE&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000&quot; alt=&quot;license&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/MotiaDev/motia&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000&quot; alt=&quot;GitHub stars&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://twitter.com/motiadev&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000&quot; alt=&quot;Twitter Follow&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://discord.gg/motia&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000&quot; alt=&quot;Discord&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.motia.dev/manifesto&quot;&gt;💡 Motia Manifesto&lt;/a&gt; • &lt;a href=&quot;https://www.motia.dev/docs/getting-started/quick-start&quot;&gt;🚀 Quick Start&lt;/a&gt; • &lt;a href=&quot;https://www.motia.dev/docs/concepts/steps/defining-steps&quot;&gt;📋 Defining Steps&lt;/a&gt; • &lt;a href=&quot;https://www.motia.dev/docs&quot;&gt;📚 Docs&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 What is Motia?&lt;/h2&gt; 
&lt;p&gt;Motia is a &lt;strong&gt;modern backend framework&lt;/strong&gt; that unifies APIs, background jobs, workflows, and AI agents into a single cohesive system. Eliminate runtime complexity and build unified backends where &lt;strong&gt;JavaScript, TypeScript, Python, etc&lt;/strong&gt;, work together in event-driven workflows, with built-in state management, observability, and one-click deployments.&lt;/p&gt; 
&lt;p&gt;Motia brings cohesion to the fragmented backend world with our core primitive: the &lt;strong&gt;Step&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://motia.dev&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/Motia_Github_Repository_GIF.gif&quot; alt=&quot;Motia combines APIs, background queues, and AI agents into one system&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;npx motia@latest create -i&lt;/code&gt; # runs the interactive terminal&lt;/p&gt; 
&lt;p&gt;Follow the prompts to pick a template, project name, and language.&lt;/p&gt; 
&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; 
&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npx motia dev&lt;/code&gt; # ➜ &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This spins up the Motia Workbench – a local UI for building, testing &amp;amp; observing your backend in real-time.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif&quot; alt=&quot;motia-terminal&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3. Hit Your First Endpoint&lt;/h3&gt; 
&lt;p&gt;Open a new terminal tab and run:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;curl http://localhost:3000/default&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You should see the JSON response:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;{ &quot;message&quot;: &quot;Hello World from Motia!&quot; }&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;4. Explore the Workbench UI&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/new-workbench.png&quot; alt=&quot;new-workbench&quot; /&gt; The Workbench is your command centre:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌊 Flows&lt;/strong&gt; – Visualise how your Steps connect.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔌 Endpoints&lt;/strong&gt; – Test APIs with one click and stream results live.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👁️ Traces&lt;/strong&gt; – Inspect end-to-end traces of every execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Logs&lt;/strong&gt; – View structured logs grouped by trace.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏪 State&lt;/strong&gt; – Inspect the key-value store across Steps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;🎉 &lt;strong&gt;That&#39;s it!&lt;/strong&gt; You now have a fully-featured Motia project with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;code&gt;/default&lt;/code&gt; API endpoint&lt;/li&gt; 
 &lt;li&gt;✅ Visual debugger &amp;amp; flow inspector&lt;/li&gt; 
 &lt;li&gt;✅ Built-in observability&lt;/li&gt; 
 &lt;li&gt;✅ Hot-reload for instant feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧱 The Step Philosophy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Your Logic, Your Step&lt;/strong&gt;: A Step holds your business logic. It can be a simple function, a call to a database, or a complex AI agent. This is where your application&#39;s real work gets done.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌍 Any Language, One Workflow&lt;/strong&gt;: Write Steps in TypeScript, Python, and other languages to come. all in the same project. Use Python for your AI agents and TypeScript for your API, and Motia makes them work together effortlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Full Power, No Boilerplate&lt;/strong&gt;: Inside a Step&#39;s &lt;code&gt;handler&lt;/code&gt;, you have the full power of the Node.js or Python ecosystem. Install any package, call any API, connect to any database. No restrictions, just your code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👁️ Zero-Config Observability&lt;/strong&gt;: Get full end-to-end tracing and logging for every Step execution, automatically. No setup required. See exactly what happened, when, and why.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌊 Simple &amp;amp; Powerful Workflows&lt;/strong&gt;: Connect Steps together by emitting and subscribing to events. Build complex, multi-stage processes with simple, declarative code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏪 Unified State&lt;/strong&gt;: Share data between Steps effortlessly. Motia provides built-in state management that is automatically traced, giving you a complete picture of your data&#39;s lifecycle through a workflow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚧 The Problem&lt;/h2&gt; 
&lt;p&gt;Backend teams juggle &lt;strong&gt;fragmented runtimes&lt;/strong&gt; across APIs, background queues, and AI agents. This creates deployment complexity, debugging gaps, and cognitive overhead from context-switching between frameworks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This fragmentation demands a unified system.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;✅ The Unified System&lt;/h2&gt; 
&lt;p&gt;Motia unifies your entire backend into a &lt;strong&gt;unified state&lt;/strong&gt;. APIs, background jobs, and AI agents become interconnected Steps with shared state and integrated observability.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;After (Motia)&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple deployment targets&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Single unified deployment&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fragmented observability&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;End-to-end tracing&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language dependent&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript, TypeScript, Python, etc&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Context-switching overhead&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Single intuitive model&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Complex error handling&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Automatic retries &amp;amp; fault tolerance&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Supported Step Types&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Trigger&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP Request&lt;/td&gt; 
   &lt;td&gt;Expose REST endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Emitted Topics&lt;/td&gt; 
   &lt;td&gt;React to internal or external events&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Scheduled Time (cron)&lt;/td&gt; 
   &lt;td&gt;Automate recurring jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Placeholder for manual/external tasks&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🤔 How it Works&lt;/h3&gt; 
&lt;p&gt;Motia&#39;s architecture is built around a single, powerful primitive: the &lt;strong&gt;Step&lt;/strong&gt;. A Step is not just a trigger; it&#39;s a powerful container for your business logic. You can write anything from a simple database query to a complex AI agent interaction inside a single step. Instead of managing separate services for APIs, background workers, and scheduled tasks, you simply define how your steps are triggered.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Need a public API?&lt;/strong&gt; Create an &lt;code&gt;api&lt;/code&gt; step. This defines a route and handler for HTTP requests. You can build a complete REST or GraphQL API just with these steps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need a background job or queue?&lt;/strong&gt; Have your &lt;code&gt;api&lt;/code&gt; step &lt;code&gt;emit&lt;/code&gt; an event. An &lt;code&gt;event&lt;/code&gt; step subscribed to that event&#39;s topic will pick up the job and process it asynchronously. This is how you handle anything that shouldn&#39;t block the main request thread, from sending emails to complex data processing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need to run a task on a schedule?&lt;/strong&gt; Use a &lt;code&gt;cron&lt;/code&gt; step. It will trigger automatically based on the schedule you define.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This model means you no longer need to glue together separate frameworks and tools. A single Motia application can replace a stack that might otherwise include &lt;strong&gt;Nest.js&lt;/strong&gt; (for APIs), &lt;strong&gt;Temporal&lt;/strong&gt; (for workflows), and &lt;strong&gt;Celery/BullMQ&lt;/strong&gt; (for background jobs). It&#39;s all just steps and events.&lt;/p&gt; 
&lt;h2&gt;⚡ Core Concepts&lt;/h2&gt; 
&lt;p&gt;The &lt;strong&gt;Step&lt;/strong&gt; is Motia&#39;s core primitive. The following concepts are deeply integrated with Steps to help you build powerful, complex, and scalable backends:&lt;/p&gt; 
&lt;h3&gt;🔑 Steps &amp;amp; Step Types&lt;/h3&gt; 
&lt;p&gt;Understand the three ways Steps are triggered:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP (&lt;code&gt;api&lt;/code&gt;)&lt;/strong&gt; – Build REST/GraphQL endpoints with zero boilerplate.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Events (&lt;code&gt;event&lt;/code&gt;)&lt;/strong&gt; – React to internal or external events emitted by other steps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cron (&lt;code&gt;cron&lt;/code&gt;)&lt;/strong&gt; – Schedule recurring jobs with a familiar cron syntax.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📣 Emit &amp;amp; Subscribe (Event-Driven Workflows)&lt;/h3&gt; 
&lt;p&gt;Steps talk to each other by &lt;strong&gt;emitting&lt;/strong&gt; and &lt;strong&gt;subscribing&lt;/strong&gt; to topics. This decouples producers from consumers and lets you compose complex workflows with simple, declarative code.&lt;/p&gt; 
&lt;h3&gt;🏪 State Management&lt;/h3&gt; 
&lt;p&gt;All steps share a unified key-value state store. Every &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; is automatically traced so you always know when and where your data changed.&lt;/p&gt; 
&lt;h3&gt;📊 Structured Logging&lt;/h3&gt; 
&lt;p&gt;Motia provides structured, JSON logs correlated with trace IDs and step names. Search and filter your logs without regex hassle.&lt;/p&gt; 
&lt;h3&gt;📡 Streams: Real-time Messaging&lt;/h3&gt; 
&lt;p&gt;Push live updates from long-running or asynchronous workflows to clients without polling. Perfect for dashboards, progress indicators, and interactive AI agents.&lt;/p&gt; 
&lt;h3&gt;👁️ End-to-End Observability with Traces&lt;/h3&gt; 
&lt;p&gt;Every execution generates a full trace, capturing step timelines, state operations, emits, stream calls, and logs. Visualise everything in the Workbench&#39;s Traces UI and debug faster.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🗂 Examples&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent&quot;&gt;Finance Agent&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow&quot;&gt;GitHub Agent&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow&quot;&gt;Gmail Manager&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/finance-agent.png&quot; alt=&quot;Finance&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/github-pr-management.png&quot; alt=&quot;GitHub&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/gmail-flow.png&quot; alt=&quot;Gmail&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia-examples/tree/main/examples/trello-flow&quot;&gt;Trello Automation&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia-examples/tree/main/examples/rag_example&quot;&gt;RAG Agent&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia-examples/tree/main/examples/vision-example&quot;&gt;AI Image Gen&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/trello-manager.png&quot; alt=&quot;Trello&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/parse-embed-rag.png&quot; alt=&quot;RAG&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MotiaDev/motia/main/assets/examples/generate-image.png&quot; alt=&quot;AI Image&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Language Support&lt;/h2&gt; 
&lt;p&gt;Write steps in your preferred language:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.js&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.ts&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.py&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🚧 Beta&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.rb&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.go&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;handler.step.rs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;💬 &lt;strong&gt;Get Help&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📋 Questions&lt;/strong&gt;: Use our &lt;a href=&quot;https://discord.gg/motia&quot;&gt;Discord community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🐛 Bug Reports&lt;/strong&gt;: &lt;a href=&quot;https://github.com/MotiaDev/motia/issues&quot;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📖 Documentation&lt;/strong&gt;: &lt;a href=&quot;https://motia.dev/docs&quot;&gt;Official Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎥 Blog&lt;/strong&gt;: &lt;a href=&quot;https://blog.motia.dev&quot;&gt;Motia Blog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🤝 &lt;strong&gt;Contributing&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;We welcome contributions! Whether it&#39;s:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 Bug fixes and improvements&lt;/li&gt; 
 &lt;li&gt;✨ New features and step types&lt;/li&gt; 
 &lt;li&gt;📚 Documentation and examples&lt;/li&gt; 
 &lt;li&gt;🌍 Language support additions&lt;/li&gt; 
 &lt;li&gt;🎨 Workbench UI enhancements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href=&quot;https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;strong&gt;🌟 Ready to unify your backend?&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://motia.dev&quot;&gt;🚀 &lt;strong&gt;Get Started Now&lt;/strong&gt;&lt;/a&gt; • &lt;a href=&quot;https://motia.dev/docs&quot;&gt;📖 &lt;strong&gt;Read the Docs&lt;/strong&gt;&lt;/a&gt; • &lt;a href=&quot;https://discord.com/invite/nJFfsH5d6v&quot;&gt;💬 &lt;strong&gt;Join Discord&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.star-history.com/#motiadev/motia&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;Built with ❤️ by the Motia team • &lt;strong&gt;Star us if you find &lt;a href=&quot;https://github.com/orgs/MotiaDev/motia&quot;&gt;Motia&lt;/a&gt; useful!&lt;/strong&gt; ⭐&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;🚧 Roadmap&lt;/h3&gt; 
&lt;p&gt;We have a public roadmap for Motia, you can view it &lt;a href=&quot;https://github.com/orgs/MotiaDev/projects/2/views/4&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to add comments to the issues, or create a new issue if you have a feature request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python Types&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/485&quot;&gt;#485&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Python types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: RBAC&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/495&quot;&gt;#495&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for RBAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: Workbench UI&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/497&quot;&gt;#497&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Queue Strategies&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/476&quot;&gt;#476&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Queue Strategies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactive Steps&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/477&quot;&gt;#477&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Reactive Steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Allow cloud configuration&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/478&quot;&gt;#478&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for cloud configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Bring your own Cloud: AWS&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/479&quot;&gt;#479&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for AWS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Point in time triggers&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/480&quot;&gt;#480&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Point in time triggers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Workbench plugins&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/481&quot;&gt;#481&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/482&quot;&gt;#482&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/483&quot;&gt;#483&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in database support&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/484&quot;&gt;#484&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for built-in database&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Google Cloud Platform&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/486&quot;&gt;#486&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Google Cloud Platform&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Microsoft Azure&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/487&quot;&gt;#487&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Microsoft Azure&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Vercel&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/488&quot;&gt;#488&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Vercel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Cloudflare&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/489&quot;&gt;#489&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Cloudflare&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Go&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/490&quot;&gt;#490&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Go&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/491&quot;&gt;#491&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Java&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/492&quot;&gt;#492&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Java&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: Ruby&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/493&quot;&gt;#493&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Ruby&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;New languages: C#&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/494&quot;&gt;#494&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for C#&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BYOC: Kubernetes&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MotiaDev/motia/issues/496&quot;&gt;#496&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Kubernetes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Dokploy/dokploy</title>
      <link>https://github.com/Dokploy/dokploy</link>
      <description>&lt;p&gt;Open Source Alternative to Vercel, Netlify and Heroku.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a href=&quot;https://dokploy.com&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/logo.png&quot; alt=&quot;Dokploy - Open Source Alternative to Vercel, Heroku and Netlify.&quot; width=&quot;100%&quot; /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Join us on Discord for help, feedback, and discussions!&lt;/p&gt; 
 &lt;a href=&quot;https://discord.gg/2tBnJ3jDJc&quot;&gt; &lt;img src=&quot;https://discordapp.com/api/guilds/1234073262418563112/widget.png?style=banner2&quot; alt=&quot;Discord Shield&quot; /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;Dokploy is a free, self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases.&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;p&gt;Dokploy includes multiple features to make your life easier.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Applications&lt;/strong&gt;: Deploy any type of application (Node.js, PHP, Python, Go, Ruby, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: Create and manage databases with support for MySQL, PostgreSQL, MongoDB, MariaDB, and Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backups&lt;/strong&gt;: Automate backups for databases to an external storage destination.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;: Native support for Docker Compose to manage complex applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Node&lt;/strong&gt;: Scale applications to multiple nodes using Docker Swarm to manage the cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Templates&lt;/strong&gt;: Deploy open-source templates (Plausible, Pocketbase, Calcom, etc.) with a single click.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Traefik Integration&lt;/strong&gt;: Automatically integrates with Traefik for routing and load balancing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Monitoring&lt;/strong&gt;: Monitor CPU, memory, storage, and network usage for every resource.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Management&lt;/strong&gt;: Easily deploy and manage Docker containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLI/API&lt;/strong&gt;: Manage your applications and databases using the command line or through the API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notifications&lt;/strong&gt;: Get notified when your deployments succeed or fail (via Slack, Discord, Telegram, Email, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Server&lt;/strong&gt;: Deploy and manage your applications remotely to external servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hosted&lt;/strong&gt;: Self-host Dokploy on your VPS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started, run the following command on a VPS:&lt;/p&gt; 
&lt;p&gt;Want to skip the installation process? &lt;a href=&quot;https://app.dokploy.com&quot;&gt;Try the Dokploy Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sSL https://dokploy.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For detailed documentation, visit &lt;a href=&quot;https://docs.dokploy.com&quot;&gt;docs.dokploy.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;♥️ Sponsors&lt;/h2&gt; 
&lt;p&gt;🙏 We&#39;re deeply grateful to all our sponsors who make Dokploy possible! Your support helps cover the costs of hosting, testing, and developing new features.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dokploy&quot;&gt;Dokploy Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/Siumauricio&quot;&gt;Github Sponsors&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Hero Sponsors 🎖 --&gt; 
&lt;!-- Add Hero Sponsors here --&gt; 
&lt;h3&gt;Hero Sponsors 🎖&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href=&quot;https://www.hostinger.com/vps-hosting?ref=dokploy&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/hostinger.jpg&quot; alt=&quot;Hostinger&quot; width=&quot;300&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.lxaer.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/lxaer.png&quot; alt=&quot;LX Aer&quot; width=&quot;100&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;!-- Premium Supporters 🥇 --&gt; 
&lt;!-- Add Premium Supporters here --&gt; 
&lt;h3&gt;Premium Supporters 🥇&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href=&quot;https://supafort.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://supafort.com/build/q-4Ht4rBZR.webp&quot; alt=&quot;Supafort.com&quot; width=&quot;300&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://agentdock.ai/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/agentdock.png&quot; alt=&quot;agentdock.ai&quot; width=&quot;100&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;!-- Elite Contributors 🥈 --&gt; 
&lt;!-- Add Elite Contributors here --&gt; 
&lt;h3&gt;Elite Contributors 🥈&lt;/h3&gt; 
&lt;div&gt; 
 &lt;a href=&quot;https://americancloud.com/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/american-cloud.png&quot; alt=&quot;AmericanCloud&quot; width=&quot;300&quot; /&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://tolgee.io/?utm_source=github_dokploy&amp;amp;utm_medium=banner&amp;amp;utm_campaign=dokploy&quot;&gt;&lt;img src=&quot;https://dokploy.com/tolgee-logo.png&quot; alt=&quot;Tolgee&quot; width=&quot;100&quot; /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Supporting Members 🥉&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;a href=&quot;https://cloudblast.io/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://cloudblast.io/img/logo-icon.193cf13e.svg?sanitize=true&quot; width=&quot;250px&quot; alt=&quot;Cloudblast.io&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://synexa.ai/?ref=dokploy&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/.github/sponsors/synexa.png&quot; width=&quot;65px&quot; alt=&quot;Synexa&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Community Backers 🤝&lt;/h3&gt; 
&lt;h4&gt;Organizations:&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dokploy&quot;&gt;Sponsors on Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Individuals:&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/dokploy&quot;&gt;&lt;img src=&quot;https://opencollective.com/dokploy/individuals.svg?width=890&quot; alt=&quot;Individual Contributors on Open Collective&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors 🤝&lt;/h3&gt; 
&lt;a href=&quot;https://github.com/dokploy/dokploy/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=dokploy/dokploy&quot; alt=&quot;Contributors&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;📺 Video Tutorial&lt;/h2&gt; 
&lt;a href=&quot;https://youtu.be/mznYKPvhcfw&quot;&gt; &lt;img src=&quot;https://dokploy.com/banner.png&quot; alt=&quot;Watch the video&quot; width=&quot;400&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/Dokploy/dokploy/canary/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dream-num/univer</title>
      <link>https://github.com/dream-num/univer</link>
      <description>&lt;p&gt;Univer is a full-stack framework for creating and editing spreadsheets, documents, and slides on both web and server.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;./docs/img/banner-light.png&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/banner-dark.png&quot; alt=&quot;Univer&quot; width=&quot;400&quot; /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;An Isomorphic Full-Stack Framework for Creating and Editing Spreadsheets, Docs, and Slides Across Web and Server&lt;br /&gt; &lt;strong&gt;Extensible. High-performance. Embedded to your application.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/README-zh.md&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/README-ja.md&quot;&gt;日本語&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/README-es.md&quot;&gt;Español&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://univer.ai&quot;&gt;Official Site&lt;/a&gt; | &lt;a href=&quot;https://docs.univer.ai/en-US&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://docs.univer.ai/en-US/showcase&quot;&gt;Online Playground&lt;/a&gt; | &lt;a href=&quot;https://docs.univer.ai/en-US/blog&quot;&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dream-num/univer?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dream-num/univer/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/dream-num/univer/build.yml?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dream-num/univer/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/dream-num/univer?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dream-num/univer/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/dream-num/univer?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/dream-num/univer/network/members&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/dream-num/univer?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dream-num/univer/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dream-num/univer?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/dream-num/univer&quot;&gt;&lt;img src=&quot;https://img.shields.io/codecov/c/gh/dream-num/univer?token=aPfyW2pIMN&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/dream-num/univer/overview/dev&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/dream-num/univer/badge/dev?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/z3NKNT6D2f&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1136129819961217077?logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=discord&amp;amp;color=5865F2&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/4376&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/4376&quot; alt=&quot;Trendshift&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;details open&gt; 
 &lt;summary&gt; &lt;strong&gt;Table of contents&lt;/strong&gt; &lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-highlights&quot;&gt;🌈 Highlights&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-features&quot;&gt;✨ Features&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-univer-sheet&quot;&gt;📊 Univer Sheet&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-univer-doc-under-development&quot;&gt;📝 Univer Doc&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#%EF%B8%8F-univer-slide-under-development&quot;&gt;📽️ Univer Slide&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-internationalization&quot;&gt;🌐 Internationalization&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-showcase&quot;&gt;👾 Showcase&lt;/a&gt;
   &lt;!-- - [📦 Ecosystem](#-ecosystem) --&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-community&quot;&gt;💬 Community&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-contribution&quot;&gt;🤝 Contribution&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#%EF%B8%8F-sponsors&quot;&gt;❤️ Sponsor&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/#-license&quot;&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;🌈 Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📈 Univer is designed to support &lt;strong&gt;spreadsheets&lt;/strong&gt;, &lt;strong&gt;documents&lt;/strong&gt; and &lt;strong&gt;presentation&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;🧙‍♀️ Univer is &lt;strong&gt;isomorphic&lt;/strong&gt;. It can run both on browsers and Node.js (in the future, mobile devices as well), with the same API.&lt;/li&gt; 
 &lt;li&gt;⚙️ Univer is easily &lt;strong&gt;embeddable&lt;/strong&gt;, allowing seamless integration into your applications.&lt;/li&gt; 
 &lt;li&gt;🎇 Univer is &lt;strong&gt;powerful&lt;/strong&gt;, offering a wide range of features including &lt;strong&gt;formulas&lt;/strong&gt;, &lt;strong&gt;conditional formatting&lt;/strong&gt;, &lt;strong&gt;data validation&lt;/strong&gt;, &lt;strong&gt;filtering&lt;/strong&gt;, &lt;strong&gt;collaborative editing&lt;/strong&gt;, &lt;strong&gt;printing&lt;/strong&gt;, &lt;strong&gt;import &amp;amp; export&lt;/strong&gt; and more features on the horizon.&lt;/li&gt; 
 &lt;li&gt;🔌 Univer is &lt;strong&gt;highly extensible&lt;/strong&gt;, thanks to its &lt;em&gt;plug-in architecture&lt;/em&gt; that makes it a delight for developers to implement their unique requirements on the top of Univer.&lt;/li&gt; 
 &lt;li&gt;💄 Univer is &lt;strong&gt;highly customizable&lt;/strong&gt;, allowing you to personalize its appearance using &lt;em&gt;themes&lt;/em&gt;. It also provides support for internationalization (i18n).&lt;/li&gt; 
 &lt;li&gt;🥤 Univer is &lt;strong&gt;easy to work with&lt;/strong&gt;. The &lt;em&gt;Presets&lt;/em&gt; &amp;amp; &lt;em&gt;Facade API&lt;/em&gt; make it easy to hands on.&lt;/li&gt; 
 &lt;li&gt;⚡ Univer in &lt;strong&gt;performant&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;✏️ Univer boasts an efficient &lt;em&gt;rendering engine&lt;/em&gt; based on canvas, capable of rendering various document types flawlessly. The rendering engines supports advanced typesetting features such as &lt;em&gt;punctuation squeezing&lt;/em&gt;, &lt;em&gt;text and image layout&lt;/em&gt; and &lt;em&gt;scroll buffering&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;🧮 Univer incorporates a lightning-fast &lt;em&gt;formula engine&lt;/em&gt; that can operate in Web Workers or even on the server side.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🌌 Univer is a &lt;strong&gt;highly integrated&lt;/strong&gt; system. Documents, spreadsheets and slides can interoperate with each others and even rendered on the same canvas, allowing information and data flow within Univer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;p&gt;Univer provides a wide range of features for spreadsheets, documents and presentations. Here are some of the key features:&lt;/p&gt; 
&lt;h3&gt;📊 Univer Sheets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core Features&lt;/strong&gt;: Univer supports core spreadsheet functionality, including cells, rows, columns, worksheets, and workbooks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Formulas&lt;/strong&gt;: Extensive support for various formulas, including mathematical, statistical, logical, text, date and time, lookup and reference, engineering, financial, and information formulas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Permissions&lt;/strong&gt;: Allows restricting access to specific elements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Number Formatting&lt;/strong&gt;: Supports formatting numbers based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyperlinks&lt;/strong&gt;: Enables linking to external websites, email addresses, and other locations within a spreadsheet.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Floating Images&lt;/strong&gt;: Allows inserting images into a spreadsheet and positioning them anywhere on the sheet.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Find &amp;amp; Replace&lt;/strong&gt;: Provides the ability to search for specific text within a spreadsheet and replace it with other text.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Filtering&lt;/strong&gt;: Allows filtering data based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt;: Allows sorting data based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Validation&lt;/strong&gt;: Supports restricting the type of data that can be entered into a cell.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conditional Formatting&lt;/strong&gt;: Supports applying formatting to cells based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comments&lt;/strong&gt;: Enables adding comments to cells to provide additional information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-highlighting&lt;/strong&gt;: Supports displaying cross-highlighting in spreadsheets to help users quickly locate selected cells.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zen Editor&lt;/strong&gt;: Provides a distraction-free editing experience with a clean interface and minimal distractions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pivot Tables&lt;/strong&gt;[^1]: Supports pivot tables, allowing users to summarize and analyze data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sparklines&lt;/strong&gt;[^1]: Supports sparklines, which are small charts that fit within a cell to provide a visual representation of data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Printing&lt;/strong&gt;[^1]: Allows printing a spreadsheet or exporting it to PDF.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Import &amp;amp; Export&lt;/strong&gt;[^1]: Support for importing and exporting data in XLSX.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Charts&lt;/strong&gt;[^1]: Supports various types of charts, including bar charts, line charts, pie charts, scatter plots, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative Editing&lt;/strong&gt;[^1]: Supports multiple users editing a spreadsheet simultaneously. File history and recovering are also provided.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Editing History&lt;/strong&gt;[^1]: Allows users to view and restore previous versions of a spreadsheet.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📝 Univer Docs (rc)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core Features&lt;/strong&gt;: Univer supports core document features, including paragraphs, headings, lists, superscript, subscript, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lists&lt;/strong&gt;: Supports ordered lists, unordered lists, and task lists.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyperlinks&lt;/strong&gt;: Supports inserting links to external websites, email addresses, and other locations within a document.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Floating Images&lt;/strong&gt;: Allows inserting images into a document and supporting text and image layout.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Headers &amp;amp; Footers&lt;/strong&gt;: Allows adding headers and footers to a document.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comments&lt;/strong&gt;: Enables adding comments to a document to provide additional information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Printing&lt;/strong&gt;[^1]: Allows printing a document or exporting it to PDF.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Import &amp;amp; Export&lt;/strong&gt;[^1]: Supports importing and exporting data in DOCX format.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative Editing&lt;/strong&gt;[^1]: Supports multiple users editing a document simultaneously.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📽️ Univer Slides (Under Development)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core Features&lt;/strong&gt;: Univer will support core presentation features, including slides, shapes, text, images, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌐 Internationalization&lt;/h2&gt; 
&lt;p&gt;Univer supports multiple languages, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;zh-CN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;zh-TW&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ru-RU&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vi-VN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fa-IR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ko-KR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;es-ES&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ca-ES&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;zh-CN&lt;/code&gt; and &lt;code&gt;en-US&lt;/code&gt; are officially supported, while the others are contributed and maintained by the community.&lt;/p&gt; 
&lt;p&gt;You can add the language you want by &lt;a href=&quot;https://univer.ai/guides/sheet/getting-started/i18n#using-custom-locales&quot;&gt;Using Custom Locales&lt;/a&gt;. You can also help us add new language support by referring to the &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👾 Showcase&lt;/h2&gt; 
&lt;p&gt;Embed Univer in AI products as a data presentation tool.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://capalyze.ai/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-capalyze.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can find all the examples in the &lt;a href=&quot;https://univer.ai/examples&quot;&gt;Univer Examples&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;📊 Spreadsheets&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;📊 Multi-instance&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;📊 Uniscript&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-multi.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-uniscript.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📊 Big data&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📊 Collaboration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📊 Collaboration Playground&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-big-data.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-collaboration.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-collaboration-playground.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📊 Import &amp;amp; Export&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📊 Printing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📝 Documents&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-exchange.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-print.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📝 Multi-instance&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📝 Uniscript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📝 Big data&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs-multi.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs-uniscript.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs-big-data.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📝 Collaboration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📝 Collaboration Playground&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📽️ Presentations&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-docs-collaboration.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-docs-collaboration-playground.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://docs.univer.ai/showcase&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-slides.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;📊 Zen Editor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Univer Workspace (SaaS version)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://univer.ai/guides/sheet/features/zen-editor&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/zen-mode.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://youtu.be/kpV0MvQuFZA&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/univer-workspace-drag-chart.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- ## 📦 Ecosystem

Univer has a rich ecosystem that includes a wide range of tools and resources to help you get started with Univer: --&gt; 
&lt;h2&gt;🔗 Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://univer-preview.vercel.app/&quot;&gt;Latest Preview of the &lt;code&gt;dev&lt;/code&gt; Branch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://univer.ai&quot;&gt;Official Site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dream-num/univer-presets&quot;&gt;Presets Repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔒 Security&lt;/h2&gt; 
&lt;p&gt;Univer is committed to maintaining a secure codebase. We follow best practices for security and regularly update our dependencies. For more information, please refer to our &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💬 Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dream-num/univer/discussions&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-univer-24292e?labelColor=black&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;style=for-the-badge&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/z3NKNT6D2f&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1136129819961217077?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/tagged/univer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/stackoverflow-univer-ef8236?labelColor=black&amp;amp;logo=stackoverflow&amp;amp;logoColor=white&amp;amp;style=for-the-badge&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Univer is an inclusive and welcoming project. Please read our &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; before participating in the community.&lt;/p&gt; 
&lt;p&gt;Join the Univer community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat with us and other developers on &lt;a href=&quot;https://discord.gg/z3NKNT6D2f&quot;&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Start a discussion on &lt;a href=&quot;https://github.com/dream-num/univer/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Open a topic on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/univer&quot;&gt;Stack Overflow&lt;/a&gt; and tag it with &lt;code&gt;univer&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also find Univer on:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/univerhq&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/@dreamNum&quot;&gt;YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contribution&lt;/h2&gt; 
&lt;p&gt;We appreciate any kinds of contributing. You can submit &lt;a href=&quot;https://github.com/dream-num/univer/issues&quot;&gt;issues or feature requests&lt;/a&gt; to us. Please read our &lt;a href=&quot;https://raw.githubusercontent.com/dream-num/univer/dev/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;If you would like to contribute code to Univer, please refer to the contributing guide as well. It would guide you through the process of setting up the development environment and submitting a pull request.&lt;/p&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;The growth and development of the Univer project rely on the support of its backers and sponsors. If you are interested in supporting our project, we kindly invite you to consider becoming a sponsor. You can sponsor us through &lt;a href=&quot;https://opencollective.com/univer&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thanks to our sponsors, just part of them are listed here because of the space limit, ranking is no particular order:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/univer/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/univer/backer/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/0/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/backer/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/1/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/backer/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/2/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/backer/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/3/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/backer/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/4/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/backer/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/5/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/univer/backer/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/univer/backer/6/avatar.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2021-2025 DreamNum Co,Ltd. All Rights Reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache-2.0&lt;/a&gt; license.&lt;/p&gt; 
&lt;!-- Footnotes --&gt; 
&lt;p&gt;[^1]: These features are provided by the non-OSS version of Univer, which is free for commercial use and also includes paid upgrade plans.&lt;/p&gt; 
&lt;!-- Links --&gt;</description>
    </item>
    
    <item>
      <title>wasp-lang/open-saas</title>
      <link>https://github.com/wasp-lang/open-saas</link>
      <description>&lt;p&gt;A free, open-source SaaS app starter for React &amp; Node.js with superpowers. Full-featured. Community-driven.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Welcome to your new SaaS App! 🎉&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.producthunt.com/products/open-saas?embed=true&amp;amp;utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_source=badge-open-saas-2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=991058&amp;amp;theme=neutral&amp;amp;t=1753776395137&quot; alt=&quot;Open SaaS - The open-source SaaS boilerplate with superpowers! | Product Hunt&quot; style=&quot;width: 250px; height: 54px;&quot; width=&quot;250&quot; height=&quot;54&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/3856276b-23e9-455e-a564-b5f26f4f0e98&quot;&gt;https://github.com/user-attachments/assets/3856276b-23e9-455e-a564-b5f26f4f0e98&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You&#39;ve decided to build a SaaS app with the Open SaaS template. Great choice!&lt;/p&gt; 
&lt;p&gt;This template is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;fully open-source&lt;/li&gt; 
 &lt;li&gt;completely free to use and distribute&lt;/li&gt; 
 &lt;li&gt;comes with a ton of features out of the box!&lt;/li&gt; 
 &lt;li&gt;focused on free, open-source services, where possible&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;🧑‍💻 Check it out in action here: &lt;a href=&quot;https://opensaas.sh&quot;&gt;OpenSaaS.sh&lt;/a&gt;&lt;br /&gt; 📚 Check out the Docs here: &lt;a href=&quot;https://docs.opensaas.sh&quot;&gt;Open SaaS Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What&#39;s inside?&lt;/h2&gt; 
&lt;p&gt;The template itself is built on top of some very powerful tools and frameworks, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐝 &lt;a href=&quot;https://wasp.sh&quot;&gt;Wasp&lt;/a&gt; - a full-stack React, NodeJS, Prisma framework with superpowers&lt;/li&gt; 
 &lt;li&gt;🚀 &lt;a href=&quot;https://starlight.astro.build/&quot;&gt;Astro&lt;/a&gt; - Astro&#39;s lightweight &quot;Starlight&quot; template for documentation and blog&lt;/li&gt; 
 &lt;li&gt;💸 &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt; or &lt;a href=&quot;https://lemonsqueezy.com/&quot;&gt;Lemon Squeezy&lt;/a&gt; (with Polar.sh and Paddle coming soon!) - for products and payments&lt;/li&gt; 
 &lt;li&gt;💅 &lt;a href=&quot;https://tailwindcss.com&quot;&gt;ShadCN UI&lt;/a&gt; - for components &amp;amp; styling (plus admin dashboard!)&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href=&quot;https://docs.opensaas.sh/&quot;&gt;AI-Ready&lt;/a&gt; - full set of Cursor rules &amp;amp; llms-full.txt for ai-assisted coding&lt;/li&gt; 
 &lt;li&gt;📈 &lt;a href=&quot;https://plausible.io&quot;&gt;Plausible&lt;/a&gt; or &lt;a href=&quot;https://analytics.google.com/&quot;&gt;Google&lt;/a&gt; Analytics&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href=&quot;https://openai.com&quot;&gt;OpenAI&lt;/a&gt; - OpenAI API w/ function calling example&lt;/li&gt; 
 &lt;li&gt;📦 &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;AWS S3&lt;/a&gt; - for file uploads&lt;/li&gt; 
 &lt;li&gt;📧 &lt;a href=&quot;https://sendgrid.com&quot;&gt;SendGrid&lt;/a&gt;, &lt;a href=&quot;https://mailgun.com&quot;&gt;MailGun&lt;/a&gt;, or SMTP - for email sending&lt;/li&gt; 
 &lt;li&gt;🧪 &lt;a href=&quot;https://playwright.dev&quot;&gt;Playwright&lt;/a&gt; - end-to-end tests with Playwright&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Because we&#39;re using Wasp as the full-stack framework, we can leverage a lot of its features to build our SaaS in record time, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔐 &lt;a href=&quot;https://wasp.sh/docs/auth/overview&quot;&gt;Full-stack Authentication&lt;/a&gt; - Email verified + social Auth in a few lines of code.&lt;/li&gt; 
 &lt;li&gt;⛑ &lt;a href=&quot;https://wasp.sh/docs/data-model/operations/overview&quot;&gt;End-to-end Type Safety&lt;/a&gt; - Type your backend functions and get inferred types on the front-end automatically, without the need to install or configure any third-party libraries. Oh, and type-safe Links, too!&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href=&quot;https://wasp.sh/docs/advanced/jobs&quot;&gt;Jobs&lt;/a&gt; - Run cron jobs in the background or set up queues simply by defining a function in the config file.&lt;/li&gt; 
 &lt;li&gt;🚀 &lt;a href=&quot;https://wasp.sh/docs/advanced/deployment/overview&quot;&gt;One-command Deploy&lt;/a&gt; - Easily deploy your DB, Server, &amp;amp; Client with one commaned to &lt;a href=&quot;https://railway.app&quot;&gt;Railway&lt;/a&gt; or &lt;a href=&quot;https://fly.io&quot;&gt;Fly.io&lt;/a&gt; via the CLI. Or deploy manually to any other hosting serivce of your choice.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You also get access to Wasp&#39;s diverse, helpful community if you get stuck or need help.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤝 &lt;a href=&quot;https://discord.gg/aCamt5wCpS&quot;&gt;Wasp Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Simple Instructions&lt;/h3&gt; 
&lt;p&gt;First, to install the latest version of &lt;a href=&quot;https://wasp.sh/&quot;&gt;Wasp&lt;/a&gt; on macOS, Linux, or Windows with WSL, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sSL https://get.wasp.sh/installer.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, create a new SaaS app with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wasp new -t saas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a &lt;strong&gt;clean copy of the Open SaaS template&lt;/strong&gt; into a new directory, and you can start building your SaaS app right away!&lt;/p&gt; 
&lt;h3&gt;Detailed Instructions&lt;/h3&gt; 
&lt;p&gt;For everything you need to know about getting started and using this template, check out the &lt;a href=&quot;https://docs.opensaas.sh&quot;&gt;Open SaaS Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We&#39;ve documented everything in great detail, including installation instructions, pulling updates to the template, guides for integrating services, SEO, deployment, and more. 🚀&lt;/p&gt; 
&lt;h2&gt;Getting Help &amp;amp; Providing Feedback&lt;/h2&gt; 
&lt;p&gt;There are two ways to get help or provide feedback (and we try to always respond quickly!):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wasp-lang/open-saas/issues&quot;&gt;Open an issue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/aCamt5wCpS&quot;&gt;Wasp Discord&lt;/a&gt; -- please direct questions to the #🙋questions forum channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Note that we&#39;ve tried to get as many of the core features of a SaaS app into this template as possible, but there still might be some missing features or functionality.&lt;/p&gt; 
&lt;p&gt;We could always use some help tying up loose ends: contributions are welcome! Check out &lt;a href=&quot;https://raw.githubusercontent.com/wasp-lang/open-saas/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>simstudioai/sim</title>
      <link>https://github.com/simstudioai/sim</link>
      <description>&lt;p&gt;Sim is an open-source AI agent workflow builder. Sim Studio&#39;s interface is a lightweight, intuitive way to quickly build and deploy LLMs that connect with your favorite tools.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/simstudioai/sim/main/apps/sim/public/static/sim.png&quot; alt=&quot;Sim Logo&quot; width=&quot;500&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&quot; alt=&quot;License: Apache-2.0&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/Hr4UWYEcTT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20Server-7289DA?logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://x.com/simdotai&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/simstudioai?style=social&quot; alt=&quot;Twitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/simstudioai/sim/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.sim.ai&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-visit%20documentation-blue.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;strong&gt;Sim&lt;/strong&gt; is a lightweight, user-friendly platform for building AI agent workflows. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/simstudioai/sim/main/apps/sim/public/static/demo.gif&quot; alt=&quot;Sim Demo&quot; width=&quot;800&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use our &lt;a href=&quot;https://sim.ai&quot;&gt;cloud-hosted version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Self-host using one of the methods below&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Self-Hosting Options&lt;/h2&gt; 
&lt;h3&gt;Option 1: NPM Package (Simplest)&lt;/h3&gt; 
&lt;p&gt;The easiest way to run Sim locally is using our &lt;a href=&quot;https://www.npmjs.com/package/simstudio?activeTab=readme&quot;&gt;NPM package&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npx simstudio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running these commands, open &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt; in your browser.&lt;/p&gt; 
&lt;h4&gt;Options&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-p, --port &amp;lt;port&amp;gt;&lt;/code&gt;: Specify the port to run Sim on (default: 3000)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-pull&lt;/code&gt;: Skip pulling the latest Docker images&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Requirements&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker must be installed and running on your machine&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Option 2: Docker Compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Clone the repository
git clone https://github.com/simstudioai/sim.git

# Navigate to the project directory
cd sim

# Start Sim
docker compose -f docker-compose.prod.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the application at &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Using Local Models with Ollama&lt;/h4&gt; 
&lt;p&gt;Run Sim with local AI models using &lt;a href=&quot;https://ollama.ai&quot;&gt;Ollama&lt;/a&gt; - no external APIs required:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Start with GPU support (automatically downloads gemma3:4b model)
docker compose -f docker-compose.ollama.yml --profile setup up -d

# For CPU-only systems:
docker compose -f docker-compose.ollama.yml --profile cpu --profile setup up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Wait for the model to download, then visit &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;. Add more models with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose -f docker-compose.ollama.yml exec ollama ollama pull llama3.1:8b
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Dev Containers&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open VS Code with the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;Remote - Containers extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Open the project and click &quot;Reopen in Container&quot; when prompted&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;bun run dev:full&lt;/code&gt; in the terminal or use the &lt;code&gt;sim-start&lt;/code&gt; alias 
  &lt;ul&gt; 
   &lt;li&gt;This starts both the main application and the realtime socket server&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 4: Manual Setup&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bun.sh/&quot;&gt;Bun&lt;/a&gt; runtime&lt;/li&gt; 
 &lt;li&gt;PostgreSQL 12+ with &lt;a href=&quot;https://github.com/pgvector/pgvector&quot;&gt;pgvector extension&lt;/a&gt; (required for AI embeddings)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Sim uses vector embeddings for AI features like knowledge bases and semantic search, which requires the &lt;code&gt;pgvector&lt;/code&gt; PostgreSQL extension.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone and install dependencies:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/simstudioai/sim.git
cd sim
bun install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Set up PostgreSQL with pgvector:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You need PostgreSQL with the &lt;code&gt;vector&lt;/code&gt; extension for embedding support. Choose one option:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option A: Using Docker (Recommended)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Start PostgreSQL with pgvector extension
docker run --name simstudio-db \
  -e POSTGRES_PASSWORD=your_password \
  -e POSTGRES_DB=simstudio \
  -p 5432:5432 -d \
  pgvector/pgvector:pg17
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option B: Manual Installation&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install PostgreSQL 12+ and the pgvector extension&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://github.com/pgvector/pgvector#installation&quot;&gt;pgvector installation guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Set up environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd apps/sim
cp .env.example .env  # Configure with required variables (DATABASE_URL, BETTER_AUTH_SECRET, BETTER_AUTH_URL)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update your &lt;code&gt;.env&lt;/code&gt; file with the database URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;DATABASE_URL=&quot;postgresql://postgres:your_password@localhost:5432/simstudio&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;Set up the database:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bunx drizzle-kit migrate 
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;Start the development servers:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Recommended approach - run both servers together (from project root):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bun run dev:full
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This starts both the main Next.js application and the realtime socket server required for full functionality.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alternative - run servers separately:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Next.js app (from project root):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bun run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Realtime socket server (from &lt;code&gt;apps/sim&lt;/code&gt; directory in a separate terminal):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd apps/sim
bun run dev:sockets
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt; (App Router)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runtime&lt;/strong&gt;: &lt;a href=&quot;https://bun.sh/&quot;&gt;Bun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: PostgreSQL with &lt;a href=&quot;https://orm.drizzle.team&quot;&gt;Drizzle ORM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication&lt;/strong&gt;: &lt;a href=&quot;https://better-auth.com&quot;&gt;Better Auth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: &lt;a href=&quot;https://ui.shadcn.com/&quot;&gt;Shadcn&lt;/a&gt;, &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;: &lt;a href=&quot;https://zustand-demo.pmnd.rs/&quot;&gt;Zustand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flow Editor&lt;/strong&gt;: &lt;a href=&quot;https://reactflow.dev/&quot;&gt;ReactFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docs&lt;/strong&gt;: &lt;a href=&quot;https://fumadocs.vercel.app/&quot;&gt;Fumadocs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Monorepo&lt;/strong&gt;: &lt;a href=&quot;https://turborepo.org/&quot;&gt;Turborepo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Realtime&lt;/strong&gt;: &lt;a href=&quot;https://socket.io/&quot;&gt;Socket.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Background Jobs&lt;/strong&gt;: &lt;a href=&quot;https://trigger.dev/&quot;&gt;Trigger.dev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see our &lt;a href=&quot;https://raw.githubusercontent.com/simstudioai/sim/main/.github/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href=&quot;https://raw.githubusercontent.com/simstudioai/sim/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;Made with ❤️ by the Sim Team&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C4illin/ConvertX</title>
      <link>https://github.com/C4illin/ConvertX</link>
      <description>&lt;p&gt;💾 Self-hosted online file converter. Supports 1000+ formats ⚙️&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/C4illin/ConvertX/main/images/logo.png&quot; alt=&quot;ConvertX&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;ConvertX&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/C4illin/ConvertX/actions/workflows/docker-publish.yml&quot;&gt;&lt;img src=&quot;https://github.com/C4illin/ConvertX/actions/workflows/docker-publish.yml/badge.svg?branch=main&quot; alt=&quot;Docker&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/C4illin/ConvertX/pkgs/container/ConvertX&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?logo=github&amp;amp;url=https%3A%2F%2Fipitio.github.io%2Fbackage%2FC4illin%2FConvertX%2Fconvertx.json&amp;amp;query=%24.downloads&amp;amp;label=ghcr.io%20pulls&amp;amp;cacheSeconds=14400&quot; alt=&quot;ghcr.io Pulls&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/c4illin/convertx&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/c4illin/convertx?style=flat&amp;amp;logo=docker&amp;amp;label=dockerhub%20pulls&amp;amp;link=https%3A%2F%2Fhub.docker.com%2Frepository%2Fdocker%2Fc4illin%2Fconvertx%2Fgeneral&quot; alt=&quot;Docker Pulls&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/C4illin/ConvertX/pkgs/container/convertx&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/C4illin/ConvertX&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commits-since/C4illin/ConvertX/latest&quot; alt=&quot;GitHub commits since latest release&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/C4illin/ConvertX&quot; alt=&quot;GitHub repo size&quot; /&gt; &lt;img src=&quot;https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;amp;tag=latest&amp;amp;label=image+size&amp;amp;trim=&quot; alt=&quot;Docker container size&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/13818&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13818&quot; alt=&quot;C4illin%2FConvertX | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ![Dev image size](https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;tag=main&amp;label=dev+image&amp;trim=) --&gt; 
&lt;p&gt;A self-hosted online file converter. Supports over a thousand different formats. Written with TypeScript, Bun and Elysia.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Convert files to different formats&lt;/li&gt; 
 &lt;li&gt;Process multiple files at once&lt;/li&gt; 
 &lt;li&gt;Password protection&lt;/li&gt; 
 &lt;li&gt;Multiple accounts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Converters supported&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Converter&lt;/th&gt; 
   &lt;th&gt;Use case&lt;/th&gt; 
   &lt;th&gt;Converts from&lt;/th&gt; 
   &lt;th&gt;Converts to&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/libjxl/libjxl&quot;&gt;libjxl&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;JPEG XL&lt;/td&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/RazrFalcon/resvg&quot;&gt;resvg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;SVG&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/libvips/libvips&quot;&gt;Vips&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Images&lt;/td&gt; 
   &lt;td&gt;45&lt;/td&gt; 
   &lt;td&gt;23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/strukturag/libheif&quot;&gt;libheif&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;HEIF&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://tug.org/xetex/&quot;&gt;XeLaTeX&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;LaTeX&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://calibre-ebook.com/&quot;&gt;Calibre&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;E-books&lt;/td&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td&gt;19&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pandoc.org/&quot;&gt;Pandoc&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Documents&lt;/td&gt; 
   &lt;td&gt;43&lt;/td&gt; 
   &lt;td&gt;65&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://dvisvgm.de/&quot;&gt;dvisvgm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Vector images&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Images&lt;/td&gt; 
   &lt;td&gt;245&lt;/td&gt; 
   &lt;td&gt;183&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;http://www.graphicsmagick.org/&quot;&gt;GraphicsMagick&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Images&lt;/td&gt; 
   &lt;td&gt;167&lt;/td&gt; 
   &lt;td&gt;130&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://inkscape.org/&quot;&gt;Inkscape&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Vector images&lt;/td&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;17&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/assimp/assimp&quot;&gt;Assimp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3D Assets&lt;/td&gt; 
   &lt;td&gt;77&lt;/td&gt; 
   &lt;td&gt;23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Video&lt;/td&gt; 
   &lt;td&gt;~472&lt;/td&gt; 
   &lt;td&gt;~199&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://potrace.sourceforge.net/&quot;&gt;Potrace&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Raster to vector&lt;/td&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;11&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- many ffmpeg fileformats are duplicates --&gt; 
&lt;p&gt;Any missing converter? Open an issue or pull request!&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you can&#39;t login, make sure you are accessing the service over localhost or https otherwise set HTTP_ALLOWED=true&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yml&quot;&gt;# docker-compose.yml
services:
  convertx:
    image: ghcr.io/c4illin/convertx
    container_name: convertx
    restart: unless-stopped
    ports:
      - &quot;3000:3000&quot;
    environment:
      - JWT_SECRET=aLongAndSecretStringUsedToSignTheJSONWebToken1234 # will use randomUUID() if unset
      # - HTTP_ALLOWED=true # uncomment this if accessing it over a non-https connection
    volumes:
      - ./data:/app/data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -p 3000:3000 -v ./data:/app/data ghcr.io/c4illin/convertx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser and create your account. Don&#39;t leave it unconfigured and open, as anyone can register the first account.&lt;/p&gt; 
&lt;p&gt;If you get unable to open database file run &lt;code&gt;chown -R $USER:$USER path&lt;/code&gt; on the path you choose.&lt;/p&gt; 
&lt;h3&gt;Environment variables&lt;/h3&gt; 
&lt;p&gt;All are optional, JWT_SECRET is recommended to be set.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JWT_SECRET&lt;/td&gt; 
   &lt;td&gt;when unset it will use the value from randomUUID()&lt;/td&gt; 
   &lt;td&gt;A long and secret string used to sign the JSON Web Token&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ACCOUNT_REGISTRATION&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Allow users to register accounts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTP_ALLOWED&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Allow HTTP connections, only set this to true locally&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ALLOW_UNAUTHENTICATED&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Allow unauthenticated users to use the service, only set this to true locally&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AUTO_DELETE_EVERY_N_HOURS&lt;/td&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;Checks every n hours for files older then n hours and deletes them, set to 0 to disable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;WEBROOT&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;The address to the root path setting this to &quot;/convert&quot; will serve the website on &quot;example.com/convert/&quot;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FFMPEG_ARGS&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Arguments to pass to ffmpeg, e.g. &lt;code&gt;-preset veryfast&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HIDE_HISTORY&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Hide the history page&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LANGUAGE&lt;/td&gt; 
   &lt;td&gt;en&lt;/td&gt; 
   &lt;td&gt;Language to format date strings in, specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;BCP 47 language tag&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UNAUTHENTICATED_USER_SHARING&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Shares conversion history between all unauthenticated users&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Docker images&lt;/h3&gt; 
&lt;p&gt;There is a &lt;code&gt;:latest&lt;/code&gt; tag that is updated with every release and a &lt;code&gt;:main&lt;/code&gt; tag that is updated with every push to the main branch. &lt;code&gt;:latest&lt;/code&gt; is recommended for normal use.&lt;/p&gt; 
&lt;p&gt;The image is available on &lt;a href=&quot;https://github.com/C4illin/ConvertX/pkgs/container/ConvertX&quot;&gt;GitHub Container Registry&lt;/a&gt; and &lt;a href=&quot;https://hub.docker.com/r/c4illin/convertx&quot;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Image&lt;/th&gt; 
   &lt;th&gt;What it is&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;image: ghcr.io/c4illin/convertx&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The latest release on ghcr&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;image: ghcr.io/c4illin/convertx:main&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The latest commit on ghcr&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;image: c4illin/convertx&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The latest release on docker hub&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;image: c4illin/convertx:main&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The latest commit on docker hub&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;img src=&quot;https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;amp;tag=latest&amp;amp;label=release+image&amp;amp;trim=&quot; alt=&quot;Release image size&quot; /&gt; &lt;img src=&quot;https://ghcr-badge.egpl.dev/c4illin/convertx/size?color=%230375b6&amp;amp;tag=main&amp;amp;label=dev+image&amp;amp;trim=&quot; alt=&quot;Dev image size&quot; /&gt;&lt;/p&gt; 
&lt;!-- Dockerhub was introduced in 0.9.0 and older releases --&gt; 
&lt;h3&gt;Tutorial&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] These are written by other people, and may be outdated, incorrect or wrong.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Tutorial in french: &lt;a href=&quot;https://belginux.com/installer-convertx-avec-docker/&quot;&gt;https://belginux.com/installer-convertx-avec-docker/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Tutorial in chinese: &lt;a href=&quot;https://xzllll.com/24092901/&quot;&gt;https://xzllll.com/24092901/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/C4illin/ConvertX/main/images/preview.png&quot; alt=&quot;ConvertX Preview&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;ol start=&quot;0&quot;&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://bun.sh/&quot;&gt;Bun&lt;/a&gt; and Git&lt;/li&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Pull requests are welcome! See open issues for the list of todos. The ones tagged with &quot;converter request&quot; are quite easy. Help with docs and cleaning up in issues are also very welcome!&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://www.conventionalcommits.org/en/v1.0.0/#summary&quot;&gt;conventional commits&lt;/a&gt; for commit messages.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href=&quot;https://github.com/C4illin/ConvertX/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=C4illin/ConvertX&quot; alt=&quot;Image with all contributors&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href=&quot;https://github.com/C4illin/ConvertX/stargazers&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=C4illin/ConvertX&amp;amp;type=Date&amp;amp;theme=dark&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=C4illin/ConvertX&amp;amp;type=Date&quot; /&gt; 
  &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=C4illin/ConvertX&amp;amp;type=Date&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>vercel/ai</title>
      <link>https://github.com/vercel/ai</link>
      <description>&lt;p&gt;The AI Toolkit for TypeScript. From the creators of Next.js, the AI SDK is a free open-source library for building AI-powered applications and agents&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/vercel/ai/main/assets/hero.gif&quot; alt=&quot;hero illustration&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;AI SDK&lt;/h1&gt; 
&lt;p&gt;The &lt;a href=&quot;https://ai-sdk.dev/docs&quot;&gt;AI SDK&lt;/a&gt; is a TypeScript toolkit designed to help you build AI-powered applications using popular frameworks like Next.js, React, Svelte, Vue and runtimes like Node.js.&lt;/p&gt; 
&lt;p&gt;To learn more about how to use the AI SDK, check out our &lt;a href=&quot;https://ai-sdk.dev/docs/reference&quot;&gt;API Reference&lt;/a&gt; and &lt;a href=&quot;https://ai-sdk.dev/docs&quot;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You will need Node.js 18+ and pnpm installed on your local development machine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;AI SDK Core&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://ai-sdk.dev/docs/ai-sdk-core/overview&quot;&gt;AI SDK Core&lt;/a&gt; module provides a unified API to interact with model providers like &lt;a href=&quot;https://ai-sdk.dev/providers/ai-sdk-providers/openai&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://ai-sdk.dev/providers/ai-sdk-providers/anthropic&quot;&gt;Anthropic&lt;/a&gt;, &lt;a href=&quot;https://ai-sdk.dev/providers/ai-sdk-providers/google-generative-ai&quot;&gt;Google&lt;/a&gt;, and more.&lt;/p&gt; 
&lt;p&gt;You will then install the model provider of your choice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install @ai-sdk/openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;@/index.ts (Node.js Runtime)&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { generateText } from &#39;ai&#39;;
import { openai } from &#39;@ai-sdk/openai&#39;; // Ensure OPENAI_API_KEY environment variable is set

const { text } = await generateText({
  model: openai(&#39;gpt-4o&#39;),
  system: &#39;You are a friendly assistant!&#39;,
  prompt: &#39;Why is the sky blue?&#39;,
});

console.log(text);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AI SDK UI&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://ai-sdk.dev/docs/ai-sdk-ui/overview&quot;&gt;AI SDK UI&lt;/a&gt; module provides a set of hooks that help you build chatbots and generative user interfaces. These hooks are framework agnostic, so they can be used in Next.js, React, Svelte, and Vue.&lt;/p&gt; 
&lt;p&gt;You need to install the package for your framework:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install @ai-sdk/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;@/app/page.tsx (Next.js App Router)&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&#39;use client&#39;;

import { useChat } from &#39;@ai-sdk/react&#39;;

export default function Page() {
  const { messages, input, handleSubmit, handleInputChange, status } =
    useChat();

  return (
    &amp;lt;div&amp;gt;
      {messages.map(message =&amp;gt; (
        &amp;lt;div key={message.id}&amp;gt;
          &amp;lt;strong&amp;gt;{`${message.role}: `}&amp;lt;/strong&amp;gt;
          {message.parts.map((part, index) =&amp;gt; {
            switch (part.type) {
              case &#39;text&#39;:
                return &amp;lt;span key={index}&amp;gt;{part.text}&amp;lt;/span&amp;gt;;

              // other cases can handle images, tool calls, etc
            }
          })}
        &amp;lt;/div&amp;gt;
      ))}

      &amp;lt;form onSubmit={handleSubmit}&amp;gt;
        &amp;lt;input
          value={input}
          placeholder=&quot;Send a message...&quot;
          onChange={handleInputChange}
          disabled={status !== &#39;ready&#39;}
        /&amp;gt;
      &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;@/app/api/chat/route.ts (Next.js App Router)&lt;/h6&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;import { streamText } from &#39;ai&#39;;
import { openai } from &#39;@ai-sdk/openai&#39;;

export async function POST(req: Request) {
  const { messages } = await req.json();

  const result = streamText({
    model: openai(&#39;gpt-4o&#39;),
    system: &#39;You are a helpful assistant.&#39;,
    messages,
  });

  return result.toUIMessageStreamResponse();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Templates&lt;/h2&gt; 
&lt;p&gt;We&#39;ve built &lt;a href=&quot;https://vercel.com/templates?type=ai&quot;&gt;templates&lt;/a&gt; that include AI SDK integrations for different use cases, providers, and frameworks. You can use these templates to get started with your AI-powered application.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The AI SDK community can be found on &lt;a href=&quot;https://github.com/vercel/ai/discussions&quot;&gt;GitHub Discussions&lt;/a&gt; where you can ask questions, voice ideas, and share your projects with other people.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to the AI SDK are welcome and highly appreciated. However, before you jump right into it, we would like you to review our &lt;a href=&quot;https://github.com/vercel/ai/raw/main/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; to make sure you have smooth experience contributing to AI SDK.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;This library is created by &lt;a href=&quot;https://vercel.com&quot;&gt;Vercel&lt;/a&gt; and &lt;a href=&quot;https://nextjs.org&quot;&gt;Next.js&lt;/a&gt; team members, with contributions from the &lt;a href=&quot;https://github.com/vercel/ai/graphs/contributors&quot;&gt;Open Source Community&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sst/opencode</title>
      <link>https://github.com/sst/opencode</link>
      <description>&lt;p&gt;AI coding agent, built for the terminal.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://opencode.ai&quot;&gt; 
  &lt;picture&gt; 
   &lt;source srcset=&quot;packages/web/src/assets/logo-ornate-dark.svg&quot; media=&quot;(prefers-color-scheme: dark)&quot; /&gt; 
   &lt;source srcset=&quot;packages/web/src/assets/logo-ornate-light.svg&quot; media=&quot;(prefers-color-scheme: light)&quot; /&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/logo-ornate-light.svg?sanitize=true&quot; alt=&quot;opencode logo&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;AI coding agent, built for the terminal.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://opencode.ai/discord&quot;&gt;&lt;img alt=&quot;Discord&quot; src=&quot;https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;amp;label=discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/opencode-ai&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://img.shields.io/npm/v/opencode-ai?style=flat-square&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sst/opencode/actions/workflows/publish.yml&quot;&gt;&lt;img alt=&quot;Build status&quot; src=&quot;https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;amp;branch=dev&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencode.ai&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/lander/screenshot.png&quot; alt=&quot;opencode Terminal UI&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
brew install sst/tap/opencode      # macOS and Linux
paru -S opencode-bin               # Arch Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Remove versions older than 0.1.x before installing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installation Directory&lt;/h4&gt; 
&lt;p&gt;The install script respects the following priority order for the installation path:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$OPENCODE_INSTALL_DIR&lt;/code&gt; - Custom installation directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_BIN_DIR&lt;/code&gt; - XDG Base Directory Specification compliant path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/bin&lt;/code&gt; - Standard user binary directory (if exists or can be created)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.opencode/bin&lt;/code&gt; - Default fallback&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;For more info on how to configure opencode &lt;a href=&quot;https://opencode.ai/docs&quot;&gt;&lt;strong&gt;head over to our docs&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;opencode is an opinionated tool so any fundamental feature needs to go through a design process with the core team.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] We do not accept PRs for core features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;However we still merge a ton of PRs - you can contribute:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug fixes&lt;/li&gt; 
 &lt;li&gt;Improvements to LLM performance&lt;/li&gt; 
 &lt;li&gt;Support for new providers&lt;/li&gt; 
 &lt;li&gt;Fixes for env specific quirks&lt;/li&gt; 
 &lt;li&gt;Missing standard behavior&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Take a look at the git history to see what kind of PRs we end up merging.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you do not follow the above guidelines we might close your PR.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To run opencode locally you need.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;Golang 1.24.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bun install
$ bun dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Development Notes&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;API Client&lt;/strong&gt;: After making changes to the TypeScript API endpoints in &lt;code&gt;packages/opencode/src/server/server.ts&lt;/code&gt;, you will need the opencode team to generate a new stainless sdk for the clients.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;How is this different than Claude Code?&lt;/h4&gt; 
&lt;p&gt;It&#39;s very similar to Claude Code in terms of capability. Here are the key differences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% open source&lt;/li&gt; 
 &lt;li&gt;Not coupled to any provider. Although Anthropic is recommended, opencode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.&lt;/li&gt; 
 &lt;li&gt;A focus on TUI. opencode is built by neovim users and the creators of &lt;a href=&quot;https://terminal.shop&quot;&gt;terminal.shop&lt;/a&gt;; we are going to push the limits of what&#39;s possible in the terminal.&lt;/li&gt; 
 &lt;li&gt;A client/server architecture. This for example can allow opencode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What&#39;s the other repo?&lt;/h4&gt; 
&lt;p&gt;The other confusingly named repo has no relation to this one. You can &lt;a href=&quot;https://x.com/thdxr/status/1933561254481666466&quot;&gt;read the story behind it here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Join our community&lt;/strong&gt; &lt;a href=&quot;https://discord.gg/opencode&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/c/sst-dev&quot;&gt;YouTube&lt;/a&gt; | &lt;a href=&quot;https://x.com/SST_dev&quot;&gt;X.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>actualbudget/actual</title>
      <link>https://github.com/actualbudget/actual</link>
      <description>&lt;p&gt;A local-first personal finance app&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/actualbudget/actual/master/demo.png&quot; alt=&quot;Actualbudget&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Actual is a local-first personal finance tool. It is 100% free and open-source, written in NodeJS, it has a synchronization element so that all your changes can move between devices without any heavy lifting.&lt;/p&gt; 
&lt;p&gt;If you are interested in contributing, or want to know how development works, see our &lt;a href=&quot;https://actualbudget.org/docs/contributing/&quot;&gt;contributing&lt;/a&gt; document we would love to have you.&lt;/p&gt; 
&lt;p&gt;Want to say thanks? Click the ⭐ at the top of the page.&lt;/p&gt; 
&lt;h2&gt;Key Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Actual &lt;a href=&quot;https://discord.gg/pRYNYr4W5A&quot;&gt;discord&lt;/a&gt; community.&lt;/li&gt; 
 &lt;li&gt;Actual &lt;a href=&quot;https://actualbudget.org/docs&quot;&gt;Community Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://actualbudget.org/docs/faq&quot;&gt;Frequently asked questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are four ways to deploy Actual:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;One-click deployment &lt;a href=&quot;https://www.pikapods.com/pods?run=actual&quot;&gt;via PikaPods&lt;/a&gt; (~1.40 $/month) - recommended for non-technical users&lt;/li&gt; 
 &lt;li&gt;Managed hosting &lt;a href=&quot;https://actualbudget.org/docs/install/fly&quot;&gt;via Fly.io&lt;/a&gt; (~1.50 $/month)&lt;/li&gt; 
 &lt;li&gt;Self-hosted by using &lt;a href=&quot;https://actualbudget.org/docs/install/docker&quot;&gt;a Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Local-only apps - &lt;a href=&quot;https://actualbudget.org/download/&quot;&gt;downloadable Windows, Mac and Linux apps&lt;/a&gt; you can run on your device&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Learn more in the &lt;a href=&quot;https://actualbudget.org/docs/install/&quot;&gt;installation instructions docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Ready to Start Budgeting?&lt;/h2&gt; 
&lt;p&gt;Read about &lt;a href=&quot;https://actualbudget.org/docs/getting-started/envelope-budgeting&quot;&gt;Envelope budgeting&lt;/a&gt; to know more about the idea behind Actual Budget.&lt;/p&gt; 
&lt;h3&gt;Are you new to budgeting or want to start fresh?&lt;/h3&gt; 
&lt;p&gt;Check out the community&#39;s &lt;a href=&quot;https://actualbudget.org/docs/getting-started/starting-fresh&quot;&gt;Starting Fresh&lt;/a&gt; guide so you can quickly get up and running!&lt;/p&gt; 
&lt;h3&gt;Are you migrating from other budgeting apps?&lt;/h3&gt; 
&lt;p&gt;Check out the community&#39;s &lt;a href=&quot;https://actualbudget.org/docs/migration/&quot;&gt;Migration&lt;/a&gt; guide to start jumping on the Actual Budget train!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;We have a wide range of documentation on how to use Actual, this is all available in our &lt;a href=&quot;https://actualbudget.org/docs&quot;&gt;Community Documentation&lt;/a&gt;, this includes topics on Budgeting, Account Management, Tips &amp;amp; Tricks and some documentation for developers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Actual is a community driven product. Learn more about &lt;a href=&quot;https://actualbudget.org/docs/contributing/&quot;&gt;contributing to Actual&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code structure&lt;/h3&gt; 
&lt;p&gt;The Actual app is split up into a few packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;loot-core - The core application that runs on any platform&lt;/li&gt; 
 &lt;li&gt;desktop-client - The desktop UI&lt;/li&gt; 
 &lt;li&gt;desktop-electron - The desktop app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More information on the project structure is available in our &lt;a href=&quot;https://actualbudget.org/docs/contributing/project-details&quot;&gt;community documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Feature Requests&lt;/h3&gt; 
&lt;p&gt;Current feature requests can be seen &lt;a href=&quot;https://github.com/actualbudget/actual/issues?q=is%3Aissue+label%3A%22needs+votes%22+sort%3Areactions-%2B1-desc&quot;&gt;here&lt;/a&gt;. Vote for your favorite requests by reacting &lt;span&gt;👍&lt;/span&gt; to the top comment of the request.&lt;/p&gt; 
&lt;p&gt;To add new feature requests, open a new Issue of the &quot;Feature Request&quot; type.&lt;/p&gt; 
&lt;h3&gt;Translation&lt;/h3&gt; 
&lt;p&gt;Make Actual Budget accessible to more people by helping with the &lt;a href=&quot;https://actualbudget.org/docs/contributing/i18n/&quot;&gt;Internationalization&lt;/a&gt; of Actual. We are using a crowd sourcing tool to manage the translations, see our &lt;a href=&quot;https://hosted.weblate.org/projects/actualbudget/&quot;&gt;Weblate Project&lt;/a&gt;. Weblate proudly supports open-source software projects through their &lt;a href=&quot;https://weblate.org/en/hosting/#libre&quot;&gt;Libre plan&lt;/a&gt;.&lt;/p&gt; 
&lt;a href=&quot;https://hosted.weblate.org/engage/actualbudget/&quot;&gt; &lt;img src=&quot;https://hosted.weblate.org/widget/actualbudget/actual/287x66-grey.png&quot; alt=&quot;Translation status&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/e20537dd8b74956f86736726ccfbc6f0565bec22.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Thanks to our wonderful sponsors who make Actual Budget possible!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com&quot;&gt; &lt;img src=&quot;https://www.netlify.com/v3/img/components/netlify-color-accent.svg?sanitize=true&quot; alt=&quot;Deploys by Netlify&quot; /&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;https://www.npmjs.com/package/@anthropic-ai/claude-code&quot;&gt;&lt;img src=&quot;https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square&quot; alt=&quot;npm&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href=&quot;https://docs.anthropic.com/en/docs/claude-code/overview&quot;&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif&quot; /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href=&quot;https://github.com/anthropics/claude-code/issues&quot;&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;We may use feedback to improve our products and services, but we will not train generative models using your feedback from Claude Code. Given their potentially sensitive nature, we store user feedback transcripts for only 30 days.&lt;/p&gt; 
&lt;p&gt;If you choose to send us feedback about Claude Code, such as transcripts of your usage, Anthropic may use that feedback to debug related issues and improve Claude Code&#39;s functionality (e.g., to reduce the risk of similar bugs occurring in the future).&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href=&quot;https://www.anthropic.com/legal/commercial-terms&quot;&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href=&quot;https://www.anthropic.com/legal/privacy&quot;&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mattermost-community/focalboard</title>
      <link>https://github.com/mattermost-community/focalboard</link>
      <description>&lt;p&gt;Focalboard is an open source, self-hosted alternative to Trello, Notion, and Asana.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This repository is currently not maintained. If you&#39;re interested in becoming a maintainer please &lt;a href=&quot;https://github.com/mattermost-community/focalboard/issues/5038&quot;&gt;let us know here&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;This repository only contains standalone Focalboard. If you&#39;re looking for the Mattermost plugin please see &lt;a href=&quot;https://github.com/mattermost/mattermost-plugin-boards&quot;&gt;mattermost/mattermost-plugin-boards&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Focalboard&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/mattermost/focalboard/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI Status&quot; /&gt; &lt;img src=&quot;https://github.com/mattermost/focalboard/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&quot; alt=&quot;CodeQL&quot; /&gt; &lt;img src=&quot;https://github.com/mattermost/focalboard/actions/workflows/dev-release.yml/badge.svg?sanitize=true&quot; alt=&quot;Dev Release&quot; /&gt; &lt;img src=&quot;https://github.com/mattermost/focalboard/actions/workflows/prod-release.yml/badge.svg?sanitize=true&quot; alt=&quot;Prod Release&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mattermost-community/focalboard/main/website/site/static/img/hero.jpg&quot; alt=&quot;Focalboard&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Focalboard is an open source, multilingual, self-hosted project management tool that&#39;s an alternative to Trello, Notion, and Asana.&lt;/p&gt; 
&lt;p&gt;It helps define, organize, track and manage work across individuals and teams. Focalboard comes in two editions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.focalboard.com/docs/personal-edition/desktop/&quot;&gt;Personal Desktop&lt;/a&gt;&lt;/strong&gt;: A standalone, single-user &lt;a href=&quot;https://apps.apple.com/app/apple-store/id1556908618?pt=2114704&amp;amp;ct=website&amp;amp;mt=8&quot;&gt;macOS&lt;/a&gt;, &lt;a href=&quot;https://www.microsoft.com/store/apps/9NLN2T0SX9VF?cid=website&quot;&gt;Windows&lt;/a&gt;, or &lt;a href=&quot;https://www.focalboard.com/download/personal-edition/desktop/#linux-desktop&quot;&gt;Linux&lt;/a&gt; desktop app for your own todos and personal projects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.focalboard.com/download/personal-edition/ubuntu/&quot;&gt;Personal Server&lt;/a&gt;&lt;/strong&gt;: A standalone, multi-user server for development and personal use.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Try Focalboard&lt;/h2&gt; 
&lt;h3&gt;Personal Desktop (Windows, Mac or Linux Desktop)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Download from the &lt;a href=&quot;https://www.microsoft.com/store/productId/9NLN2T0SX9VF&quot;&gt;Windows App Store&lt;/a&gt; or download &lt;code&gt;focalboard-win.zip&lt;/code&gt; from the &lt;a href=&quot;https://github.com/mattermost/focalboard/releases&quot;&gt;latest release&lt;/a&gt;, unpack, and run &lt;code&gt;Focalboard.exe&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: Download from the &lt;a href=&quot;https://apps.apple.com/us/app/focalboard-insiders/id1556908618?mt=12&quot;&gt;Mac App Store&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux Desktop&lt;/strong&gt;: Download &lt;code&gt;focalboard-linux.tar.gz&lt;/code&gt; from the &lt;a href=&quot;https://github.com/mattermost/focalboard/releases&quot;&gt;latest release&lt;/a&gt;, unpack, and open &lt;code&gt;focalboard-app&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Personal Server&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: You can download and run the compiled Focalboard &lt;strong&gt;Personal Server&lt;/strong&gt; on Ubuntu by following &lt;a href=&quot;https://www.focalboard.com/download/personal-edition/ubuntu/&quot;&gt;our latest install guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;API Docs&lt;/h3&gt; 
&lt;p&gt;Boards API docs can be found over at &lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/mattermost/focalboard/raw/main/server/swagger/docs/html/index.html&quot;&gt;https://htmlpreview.github.io/?https://github.com/mattermost/focalboard/blob/main/server/swagger/docs/html/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://developers.mattermost.com/contribute/focalboard/personal-server-setup-guide&quot;&gt;developer guide&lt;/a&gt; has detailed instructions on how to set up your development environment for the &lt;strong&gt;Personal Server&lt;/strong&gt;. You can also join the &lt;a href=&quot;https://community.mattermost.com/core/channels/focalboard&quot;&gt;~Focalboard community channel&lt;/a&gt; to connect with other developers.&lt;/p&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file in the focalboard directory that contains:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;EXCLUDE_ENTERPRISE=&quot;1&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make prebuild
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; ./bin/focalboard-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then navigate your browser to &lt;a href=&quot;http://localhost:8000&quot;&gt;&lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/a&gt; to access your Focalboard server. The port is configured in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Once the server is running, you can rebuild just the web app via &lt;code&gt;make webapp&lt;/code&gt; in a separate terminal window. Reload your browser to see the changes.&lt;/p&gt; 
&lt;h3&gt;Building and running standalone desktop apps&lt;/h3&gt; 
&lt;p&gt;You can build standalone apps that package the server to run locally against SQLite:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Requires Windows 10, &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/&quot;&gt;Windows 10 SDK&lt;/a&gt; 10.0.19041.0, and .NET 4.8 developer pack&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Open a &lt;code&gt;git-bash&lt;/code&gt; prompt.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; 
   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make win-wpf-app&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;cd win-wpf/msix &amp;amp;&amp;amp; focalboard.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Requires macOS 11.3+ and Xcode 13.2.1+&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; 
   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make mac-app&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;open mac/dist/Focalboard.app&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Tested on Ubuntu 18.04&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;Install &lt;code&gt;webgtk&lt;/code&gt; dependencies 
    &lt;ul&gt; 
     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libgtk-3-dev&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libwebkit2gtk-4.0-dev&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; 
   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;make linux-app&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Uncompress &lt;code&gt;linux/dist/focalboard-linux.tar.gz&lt;/code&gt; to a directory of your choice&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;focalboard-app&lt;/code&gt; from the directory you have chosen&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;To run it locally from offical image: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;docker run -it -p 80:8000 mattermost/focalboard&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;To build it for your current architecture: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile .&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;To build it for a custom architecture (experimental): 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile --platform linux/arm64 .&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cross-compilation currently isn&#39;t fully supported, so please build on the appropriate platform. Refer to the GitHub Actions workflows (&lt;code&gt;build-mac.yml&lt;/code&gt;, &lt;code&gt;build-win.yml&lt;/code&gt;, &lt;code&gt;build-ubuntu.yml&lt;/code&gt;) for the detailed list of steps on each platform.&lt;/p&gt; 
&lt;h3&gt;Unit testing&lt;/h3&gt; 
&lt;p&gt;Before checking in commits, run &lt;code&gt;make ci&lt;/code&gt;, which is similar to the &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; workflow and includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Server unit tests&lt;/strong&gt;: &lt;code&gt;make server-test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web app ESLint&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run check&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web app unit tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web app UI tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run cypress:ci&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Staying informed&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Changes&lt;/strong&gt;: See the &lt;a href=&quot;https://raw.githubusercontent.com/mattermost-community/focalboard/main/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt; for the latest updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bug Reports&lt;/strong&gt;: &lt;a href=&quot;https://github.com/mattermost/focalboard/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=&quot;&gt;File a bug report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Join the &lt;a href=&quot;https://community.mattermost.com/core/channels/focalboard&quot;&gt;~Focalboard community channel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Prat011/free-cluely</title>
      <link>https://github.com/Prat011/free-cluely</link>
      <description>&lt;p&gt;Open Source version of Cluely&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Free Cluely&lt;/h1&gt; 
&lt;p&gt;A desktop application to help you cheat on everything.&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start Guide&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you have Node.js installed on your computer&lt;/li&gt; 
 &lt;li&gt;Git installed on your computer&lt;/li&gt; 
 &lt;li&gt;A Gemini API key (get it from &lt;a href=&quot;https://makersuite.google.com/app/apikey&quot;&gt;Google AI Studio&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation Steps&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone [repository-url]
cd free-cluely
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Install dependencies:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Set up environment variables: 
  &lt;ul&gt; 
   &lt;li&gt;Create a file named &lt;code&gt;.env&lt;/code&gt; in the root folder&lt;/li&gt; 
   &lt;li&gt;Add your Gemini API key:&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;GEMINI_API_KEY=your_api_key_here
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Save the file&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Running the App&lt;/h3&gt; 
&lt;h4&gt;Method 1: Development Mode (Recommended for first run)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open a terminal and run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run dev -- --port 5180
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Open another terminal in the same folder and run:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;NODE_ENV=development npm run electron:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Method 2: Production Mode&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The built app will be in the &lt;code&gt;release&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h3&gt;⚠️ Important Notes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Closing the App&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Press &lt;code&gt;Cmd + Q&lt;/code&gt; (Mac) or &lt;code&gt;Ctrl + Q&lt;/code&gt; (Windows/Linux) to quit&lt;/li&gt; 
   &lt;li&gt;Or use Activity Monitor/Task Manager to close &lt;code&gt;Interview Coder&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;The X button currently doesn&#39;t work (known issue)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If the app doesn&#39;t start&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Make sure no other app is using port 5180&lt;/li&gt; 
   &lt;li&gt;Try killing existing processes: &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Find processes using port 5180
lsof -i :5180
# Kill them (replace [PID] with the process ID)
kill [PID]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;Cmd/Ctrl + B&lt;/code&gt;: Toggle window visibility&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Cmd/Ctrl + H&lt;/code&gt;: Take screenshot&lt;/li&gt; 
   &lt;li&gt;&#39;Cmd/Enter&#39;: Get solution&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;Cmd/Ctrl + Arrow Keys&lt;/code&gt;: Move window&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you see errors:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Delete the &lt;code&gt;node_modules&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Delete &lt;code&gt;package-lock.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; again&lt;/li&gt; 
 &lt;li&gt;Try running the app again using Method 1&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;I&#39;m unable to maintain this repo actively because I do not have the time for it. Please do not create issues, if you have any PRs feel free to create them and i&#39;ll review and merge it.&lt;/p&gt; 
&lt;p&gt;If you are looking to integrate this for your company, i can work with you to create custom solution. Reach out on &lt;a href=&quot;https://x.com/prathitjoshi_&quot;&gt;twitter&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
